[
  structure_item (lib/shape.ml[16,1080+0]..[64,2482+3])
    Pstr_module
    "Uid" (lib/shape.ml[16,1080+7]..[16,1080+10])
      module_expr (lib/shape.ml[16,1080+13]..[64,2482+3])
        Pmod_structure
        [
          structure_item (lib/shape.ml[17,1100+2]..[21,1204+22])
            Pstr_type Rec
            [
              type_declaration "t" (lib/shape.ml[17,1100+7]..[17,1100+8]) (lib/shape.ml[17,1100+2]..[21,1204+22])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (lib/shape.ml[18,1111+4]..[18,1111+32])
                        "Compilation_unit" (lib/shape.ml[18,1111+6]..[18,1111+22])
                        [
                          core_type (lib/shape.ml[18,1111+26]..[18,1111+32])
                            Ptyp_constr "string" (lib/shape.ml[18,1111+26]..[18,1111+32])
                            []
                        ]
                        None
                      (lib/shape.ml[19,1144+4]..[19,1144+44])
                        "Item" (lib/shape.ml[19,1144+6]..[19,1144+10])
                        [
                          (lib/shape.ml[19,1144+16]..[19,1144+34])
                            Immutable
                            "comp_unit" (lib/shape.ml[19,1144+16]..[19,1144+25])                            core_type (lib/shape.ml[19,1144+27]..[19,1144+33])
                              Ptyp_constr "string" (lib/shape.ml[19,1144+27]..[19,1144+33])
                              []
                          (lib/shape.ml[19,1144+35]..[19,1144+42])
                            Immutable
                            "id" (lib/shape.ml[19,1144+35]..[19,1144+37])                            core_type (lib/shape.ml[19,1144+39]..[19,1144+42])
                              Ptyp_constr "int" (lib/shape.ml[19,1144+39]..[19,1144+42])
                              []
                        ]
                        None
                      (lib/shape.ml[20,1189+4]..[20,1189+14])
                        "Internal" (lib/shape.ml[20,1189+6]..[20,1189+14])
                        []
                        None
                      (lib/shape.ml[21,1204+4]..[21,1204+22])
                        "Predef" (lib/shape.ml[21,1204+6]..[21,1204+12])
                        [
                          core_type (lib/shape.ml[21,1204+16]..[21,1204+22])
                            Ptyp_constr "string" (lib/shape.ml[21,1204+16]..[21,1204+22])
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lib/shape.ml[41,1867+2]..[41,1867+19])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[41,1867+6]..[41,1867+8])
                  Ppat_var "id" (lib/shape.ml[41,1867+6]..[41,1867+8])
                expression (lib/shape.ml[41,1867+11]..[41,1867+19])
                  Pexp_apply
                  expression (lib/shape.ml[41,1867+11]..[41,1867+14])
                    Pexp_ident "ref" (lib/shape.ml[41,1867+11]..[41,1867+14])
                  [
                    <arg>
                    Nolabel
                      expression (lib/shape.ml[41,1867+15]..[41,1867+19])
                        Pexp_constant PConst_int (-1,None)
                  ]
            ]
          structure_item (lib/shape.ml[43,1888+2]..[43,1888+28])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[43,1888+6]..[43,1888+12])
                  Ppat_var "reinit" (lib/shape.ml[43,1888+6]..[43,1888+12])
                expression (lib/shape.ml[43,1888+13]..[43,1888+28]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[43,1888+13]..[43,1888+15])
                      Nolabel
                      None
                      pattern (lib/shape.ml[43,1888+13]..[43,1888+15])
                        Ppat_construct "()" (lib/shape.ml[43,1888+13]..[43,1888+15])
                        None
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[43,1888+18]..[43,1888+28])
                      Pexp_apply
                      expression (lib/shape.ml[43,1888+21]..[43,1888+23])
                        Pexp_ident ":=" (lib/shape.ml[43,1888+21]..[43,1888+23])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[43,1888+18]..[43,1888+20])
                            Pexp_ident "id" (lib/shape.ml[43,1888+18]..[43,1888+20])
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[43,1888+24]..[43,1888+28])
                            Pexp_constant PConst_int (-1,None)
                      ]
            ]
          structure_item (lib/shape.ml[45,1918+2]..[47,1959+49])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[45,1918+6]..[45,1918+8])
                  Ppat_var "mk" (lib/shape.ml[45,1918+6]..[45,1918+8])
                expression (lib/shape.ml[45,1918+10]..[47,1959+49]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[45,1918+10]..[45,1918+23])
                      Labelled "current_unit"
                      None
                      pattern (lib/shape.ml[45,1918+11]..[45,1918+23])
                        Ppat_var "current_unit" (lib/shape.ml[45,1918+11]..[45,1918+23])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[46,1944+6]..[47,1959+49])
                      Pexp_sequence
                      expression (lib/shape.ml[46,1944+6]..[46,1944+13])
                        Pexp_apply
                        expression (lib/shape.ml[46,1944+6]..[46,1944+10])
                          Pexp_ident "incr" (lib/shape.ml[46,1944+6]..[46,1944+10])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[46,1944+11]..[46,1944+13])
                              Pexp_ident "id" (lib/shape.ml[46,1944+11]..[46,1944+13])
                        ]
                      expression (lib/shape.ml[47,1959+6]..[47,1959+49])
                        Pexp_construct "Item" (lib/shape.ml[47,1959+6]..[47,1959+10])
                        Some
                          expression (lib/shape.ml[47,1959+11]..[47,1959+49])
                            Pexp_record
                            [
                              "comp_unit" (lib/shape.ml[47,1959+13]..[47,1959+22])
                                expression (lib/shape.ml[47,1959+25]..[47,1959+37])
                                  Pexp_ident "current_unit" (lib/shape.ml[47,1959+25]..[47,1959+37])
                              "id" (lib/shape.ml[47,1959+39]..[47,1959+41])
                                expression (lib/shape.ml[47,1959+44]..[47,1959+47])
                                  Pexp_apply
                                  expression (lib/shape.ml[47,1959+44]..[47,1959+45])
                                    Pexp_ident "!" (lib/shape.ml[47,1959+44]..[47,1959+45])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[47,1959+45]..[47,1959+47])
                                        Pexp_ident "id" (lib/shape.ml[47,1959+45]..[47,1959+47])
                                  ]
                            ]
                            None
            ]
          structure_item (lib/shape.ml[49,2010+2]..[52,2161+36])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[49,2010+6]..[49,2010+28])
                  Ppat_var "of_compilation_unit_id" (lib/shape.ml[49,2010+6]..[49,2010+28])
                expression (lib/shape.ml[49,2010+29]..[52,2161+36]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[49,2010+29]..[49,2010+31])
                      Nolabel
                      None
                      pattern (lib/shape.ml[49,2010+29]..[49,2010+31])
                        Ppat_var "id" (lib/shape.ml[49,2010+29]..[49,2010+31])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[50,2044+4]..[52,2161+36])
                      Pexp_sequence
                      expression (lib/shape.ml[50,2044+4]..[51,2082+77])
                        Pexp_ifthenelse
                        expression (lib/shape.ml[50,2044+7]..[50,2044+32])
                          Pexp_apply
                          expression (lib/shape.ml[50,2044+7]..[50,2044+10])
                            Pexp_ident "not" (lib/shape.ml[50,2044+7]..[50,2044+10])
                          [
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[50,2044+11]..[50,2044+32])
                                Pexp_apply
                                expression (lib/shape.ml[50,2044+12]..[50,2044+28])
                                  Pexp_ident "Ident.persistent" (lib/shape.ml[50,2044+12]..[50,2044+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/shape.ml[50,2044+29]..[50,2044+31])
                                      Pexp_ident "id" (lib/shape.ml[50,2044+29]..[50,2044+31])
                                ]
                          ]
                        expression (lib/shape.ml[51,2082+6]..[51,2082+77])
                          Pexp_apply
                          expression (lib/shape.ml[51,2082+6]..[51,2082+23])
                            Pexp_ident "Misc.fatal_errorf" (lib/shape.ml[51,2082+6]..[51,2082+23])
                          [
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[51,2082+24]..[51,2082+61])
                                Pexp_constant PConst_string("Types.Uid.of_compilation_unit_id %S",(lib/shape.ml[51,2082+25]..[51,2082+60]),None)
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[51,2082+62]..[51,2082+77])
                                Pexp_apply
                                expression (lib/shape.ml[51,2082+63]..[51,2082+73])
                                  Pexp_ident "Ident.name" (lib/shape.ml[51,2082+63]..[51,2082+73])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/shape.ml[51,2082+74]..[51,2082+76])
                                      Pexp_ident "id" (lib/shape.ml[51,2082+74]..[51,2082+76])
                                ]
                          ]
                        None
                      expression (lib/shape.ml[52,2161+4]..[52,2161+36])
                        Pexp_construct "Compilation_unit" (lib/shape.ml[52,2161+4]..[52,2161+20])
                        Some
                          expression (lib/shape.ml[52,2161+21]..[52,2161+36])
                            Pexp_apply
                            expression (lib/shape.ml[52,2161+22]..[52,2161+32])
                              Pexp_ident "Ident.name" (lib/shape.ml[52,2161+22]..[52,2161+32])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[52,2161+33]..[52,2161+35])
                                  Pexp_ident "id" (lib/shape.ml[52,2161+33]..[52,2161+35])
                            ]
            ]
          structure_item (lib/shape.ml[54,2199+2]..[57,2329+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[54,2199+6]..[54,2199+18])
                  Ppat_var "of_predef_id" (lib/shape.ml[54,2199+6]..[54,2199+18])
                expression (lib/shape.ml[54,2199+19]..[57,2329+26]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[54,2199+19]..[54,2199+21])
                      Nolabel
                      None
                      pattern (lib/shape.ml[54,2199+19]..[54,2199+21])
                        Ppat_var "id" (lib/shape.ml[54,2199+19]..[54,2199+21])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[55,2223+4]..[57,2329+26])
                      Pexp_sequence
                      expression (lib/shape.ml[55,2223+4]..[56,2260+67])
                        Pexp_ifthenelse
                        expression (lib/shape.ml[55,2223+7]..[55,2223+31])
                          Pexp_apply
                          expression (lib/shape.ml[55,2223+7]..[55,2223+10])
                            Pexp_ident "not" (lib/shape.ml[55,2223+7]..[55,2223+10])
                          [
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[55,2223+11]..[55,2223+31])
                                Pexp_apply
                                expression (lib/shape.ml[55,2223+12]..[55,2223+27])
                                  Pexp_ident "Ident.is_predef" (lib/shape.ml[55,2223+12]..[55,2223+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/shape.ml[55,2223+28]..[55,2223+30])
                                      Pexp_ident "id" (lib/shape.ml[55,2223+28]..[55,2223+30])
                                ]
                          ]
                        expression (lib/shape.ml[56,2260+6]..[56,2260+67])
                          Pexp_apply
                          expression (lib/shape.ml[56,2260+6]..[56,2260+23])
                            Pexp_ident "Misc.fatal_errorf" (lib/shape.ml[56,2260+6]..[56,2260+23])
                          [
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[56,2260+24]..[56,2260+51])
                                Pexp_constant PConst_string("Types.Uid.of_predef_id %S",(lib/shape.ml[56,2260+25]..[56,2260+50]),None)
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[56,2260+52]..[56,2260+67])
                                Pexp_apply
                                expression (lib/shape.ml[56,2260+53]..[56,2260+63])
                                  Pexp_ident "Ident.name" (lib/shape.ml[56,2260+53]..[56,2260+63])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/shape.ml[56,2260+64]..[56,2260+66])
                                      Pexp_ident "id" (lib/shape.ml[56,2260+64]..[56,2260+66])
                                ]
                          ]
                        None
                      expression (lib/shape.ml[57,2329+4]..[57,2329+26])
                        Pexp_construct "Predef" (lib/shape.ml[57,2329+4]..[57,2329+10])
                        Some
                          expression (lib/shape.ml[57,2329+11]..[57,2329+26])
                            Pexp_apply
                            expression (lib/shape.ml[57,2329+12]..[57,2329+22])
                              Pexp_ident "Ident.name" (lib/shape.ml[57,2329+12]..[57,2329+22])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[57,2329+23]..[57,2329+25])
                                  Pexp_ident "id" (lib/shape.ml[57,2329+23]..[57,2329+25])
                            ]
            ]
          structure_item (lib/shape.ml[59,2357+2]..[59,2357+45])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[59,2357+6]..[59,2357+34])
                  Ppat_var "internal_not_actually_unique" (lib/shape.ml[59,2357+6]..[59,2357+34])
                expression (lib/shape.ml[59,2357+37]..[59,2357+45])
                  Pexp_construct "Internal" (lib/shape.ml[59,2357+37]..[59,2357+45])
                  None
            ]
          structure_item (lib/shape.ml[61,2404+2]..[63,2465+16])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[61,2404+6]..[61,2404+28])
                  Ppat_var "for_actual_declaration" (lib/shape.ml[61,2404+6]..[61,2404+28])
                expression (lib/shape.ml[61,2404+31]..[63,2465+16])
                  Pexp_function
                  []
                  None
                  Pfunction_cases (lib/shape.ml[61,2404+31]..[63,2465+16])
                    [
                      <case>
                        pattern (lib/shape.ml[62,2444+6]..[62,2444+12])
                          Ppat_construct "Item" (lib/shape.ml[62,2444+6]..[62,2444+10])
                          Some
                            []
                            pattern (lib/shape.ml[62,2444+11]..[62,2444+12])
                              Ppat_any
                        expression (lib/shape.ml[62,2444+16]..[62,2444+20])
                          Pexp_construct "true" (lib/shape.ml[62,2444+16]..[62,2444+20])
                          None
                      <case>
                        pattern (lib/shape.ml[63,2465+6]..[63,2465+7])
                          Ppat_any
                        expression (lib/shape.ml[63,2465+11]..[63,2465+16])
                          Pexp_construct "false" (lib/shape.ml[63,2465+11]..[63,2465+16])
                          None
                    ]
            ]
        ]
  structure_item (lib/shape.ml[66,2487+0]..[95,3069+3])
    Pstr_module
    "Sig_component_kind" (lib/shape.ml[66,2487+7]..[66,2487+25])
      module_expr (lib/shape.ml[66,2487+28]..[95,3069+3])
        Pmod_structure
        [
          structure_item (lib/shape.ml[67,2522+2]..[74,2627+16])
            Pstr_type Rec
            [
              type_declaration "t" (lib/shape.ml[67,2522+7]..[67,2522+8]) (lib/shape.ml[67,2522+2]..[74,2627+16])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (lib/shape.ml[68,2533+4]..[68,2533+11])
                        "Value" (lib/shape.ml[68,2533+6]..[68,2533+11])
                        []
                        None
                      (lib/shape.ml[69,2545+4]..[69,2545+10])
                        "Type" (lib/shape.ml[69,2545+6]..[69,2545+10])
                        []
                        None
                      (lib/shape.ml[70,2556+4]..[70,2556+12])
                        "Module" (lib/shape.ml[70,2556+6]..[70,2556+12])
                        []
                        None
                      (lib/shape.ml[71,2569+4]..[71,2569+17])
                        "Module_type" (lib/shape.ml[71,2569+6]..[71,2569+17])
                        []
                        None
                      (lib/shape.ml[72,2587+4]..[72,2587+27])
                        "Extension_constructor" (lib/shape.ml[72,2587+6]..[72,2587+27])
                        []
                        None
                      (lib/shape.ml[73,2615+4]..[73,2615+11])
                        "Class" (lib/shape.ml[73,2615+6]..[73,2615+11])
                        []
                        None
                      (lib/shape.ml[74,2627+4]..[74,2627+16])
                        "Class_type" (lib/shape.ml[74,2627+6]..[74,2627+16])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lib/shape.ml[76,2645+2]..[83,2854+32])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[76,2645+6]..[76,2645+15])
                  Ppat_var "to_string" (lib/shape.ml[76,2645+6]..[76,2645+15])
                expression (lib/shape.ml[76,2645+18]..[83,2854+32])
                  Pexp_function
                  []
                  None
                  Pfunction_cases (lib/shape.ml[76,2645+18]..[83,2854+32])
                    [
                      <case>
                        pattern (lib/shape.ml[77,2672+6]..[77,2672+11])
                          Ppat_construct "Value" (lib/shape.ml[77,2672+6]..[77,2672+11])
                          None
                        expression (lib/shape.ml[77,2672+15]..[77,2672+22])
                          Pexp_constant PConst_string("value",(lib/shape.ml[77,2672+16]..[77,2672+21]),None)
                      <case>
                        pattern (lib/shape.ml[78,2695+6]..[78,2695+10])
                          Ppat_construct "Type" (lib/shape.ml[78,2695+6]..[78,2695+10])
                          None
                        expression (lib/shape.ml[78,2695+14]..[78,2695+20])
                          Pexp_constant PConst_string("type",(lib/shape.ml[78,2695+15]..[78,2695+19]),None)
                      <case>
                        pattern (lib/shape.ml[79,2716+6]..[79,2716+12])
                          Ppat_construct "Module" (lib/shape.ml[79,2716+6]..[79,2716+12])
                          None
                        expression (lib/shape.ml[79,2716+16]..[79,2716+24])
                          Pexp_constant PConst_string("module",(lib/shape.ml[79,2716+17]..[79,2716+23]),None)
                      <case>
                        pattern (lib/shape.ml[80,2741+6]..[80,2741+17])
                          Ppat_construct "Module_type" (lib/shape.ml[80,2741+6]..[80,2741+17])
                          None
                        expression (lib/shape.ml[80,2741+21]..[80,2741+34])
                          Pexp_constant PConst_string("module type",(lib/shape.ml[80,2741+22]..[80,2741+33]),None)
                      <case>
                        pattern (lib/shape.ml[81,2776+6]..[81,2776+27])
                          Ppat_construct "Extension_constructor" (lib/shape.ml[81,2776+6]..[81,2776+27])
                          None
                        expression (lib/shape.ml[81,2776+31]..[81,2776+54])
                          Pexp_constant PConst_string("extension constructor",(lib/shape.ml[81,2776+32]..[81,2776+53]),None)
                      <case>
                        pattern (lib/shape.ml[82,2831+6]..[82,2831+11])
                          Ppat_construct "Class" (lib/shape.ml[82,2831+6]..[82,2831+11])
                          None
                        expression (lib/shape.ml[82,2831+15]..[82,2831+22])
                          Pexp_constant PConst_string("class",(lib/shape.ml[82,2831+16]..[82,2831+21]),None)
                      <case>
                        pattern (lib/shape.ml[83,2854+6]..[83,2854+16])
                          Ppat_construct "Class_type" (lib/shape.ml[83,2854+6]..[83,2854+16])
                          None
                        expression (lib/shape.ml[83,2854+20]..[83,2854+32])
                          Pexp_constant PConst_string("class type",(lib/shape.ml[83,2854+21]..[83,2854+31]),None)
                    ]
            ]
          structure_item (lib/shape.ml[85,2888+2]..[94,3056+12])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[85,2888+6]..[85,2888+25])
                  Ppat_var "can_appear_in_types" (lib/shape.ml[85,2888+6]..[85,2888+25])
                expression (lib/shape.ml[85,2888+28]..[94,3056+12])
                  Pexp_function
                  []
                  None
                  Pfunction_cases (lib/shape.ml[85,2888+28]..[94,3056+12])
                    [
                      <case>
                        pattern (lib/shape.ml[86,2925+6]..[87,2937+27])
                          Ppat_or
                          pattern (lib/shape.ml[86,2925+6]..[86,2925+11])
                            Ppat_construct "Value" (lib/shape.ml[86,2925+6]..[86,2925+11])
                            None
                          pattern (lib/shape.ml[87,2937+6]..[87,2937+27])
                            Ppat_construct "Extension_constructor" (lib/shape.ml[87,2937+6]..[87,2937+27])
                            None
                        expression (lib/shape.ml[88,2968+8]..[88,2968+13])
                          Pexp_construct "false" (lib/shape.ml[88,2968+8]..[88,2968+13])
                          None
                      <case>
                        pattern (lib/shape.ml[89,2982+6]..[93,3036+16])
                          Ppat_or
                          pattern (lib/shape.ml[89,2982+6]..[92,3024+11])
                            Ppat_or
                            pattern (lib/shape.ml[89,2982+6]..[91,3006+17])
                              Ppat_or
                              pattern (lib/shape.ml[89,2982+6]..[90,2993+12])
                                Ppat_or
                                pattern (lib/shape.ml[89,2982+6]..[89,2982+10])
                                  Ppat_construct "Type" (lib/shape.ml[89,2982+6]..[89,2982+10])
                                  None
                                pattern (lib/shape.ml[90,2993+6]..[90,2993+12])
                                  Ppat_construct "Module" (lib/shape.ml[90,2993+6]..[90,2993+12])
                                  None
                              pattern (lib/shape.ml[91,3006+6]..[91,3006+17])
                                Ppat_construct "Module_type" (lib/shape.ml[91,3006+6]..[91,3006+17])
                                None
                            pattern (lib/shape.ml[92,3024+6]..[92,3024+11])
                              Ppat_construct "Class" (lib/shape.ml[92,3024+6]..[92,3024+11])
                              None
                          pattern (lib/shape.ml[93,3036+6]..[93,3036+16])
                            Ppat_construct "Class_type" (lib/shape.ml[93,3036+6]..[93,3036+16])
                            None
                        expression (lib/shape.ml[94,3056+8]..[94,3056+12])
                          Pexp_construct "true" (lib/shape.ml[94,3056+8]..[94,3056+12])
                          None
                    ]
            ]
        ]
  structure_item (lib/shape.ml[97,3074+0]..[124,3872+3])
    Pstr_module
    "Item" (lib/shape.ml[97,3074+7]..[97,3074+11])
      module_expr (lib/shape.ml[97,3074+14]..[124,3872+3])
        Pmod_structure
        [
          structure_item (lib/shape.ml[98,3095+2]..[119,3825+5])
            Pstr_module
            "T" (lib/shape.ml[98,3095+9]..[98,3095+10])
              module_expr (lib/shape.ml[98,3095+13]..[119,3825+5])
                Pmod_structure
                [
                  structure_item (lib/shape.ml[99,3115+4]..[99,3115+42])
                    Pstr_type Rec
                    [
                      type_declaration "t" (lib/shape.ml[99,3115+9]..[99,3115+10]) (lib/shape.ml[99,3115+4]..[99,3115+42])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (lib/shape.ml[99,3115+13]..[99,3115+42])
                              Ptyp_tuple
                              [
                                core_type (lib/shape.ml[99,3115+13]..[99,3115+19])
                                  Ptyp_constr "string" (lib/shape.ml[99,3115+13]..[99,3115+19])
                                  []
                                core_type (lib/shape.ml[99,3115+22]..[99,3115+42])
                                  Ptyp_constr "Sig_component_kind.t" (lib/shape.ml[99,3115+22]..[99,3115+42])
                                  []
                              ]
                    ]
                  structure_item (lib/shape.ml[100,3158+4]..[100,3158+25])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[100,3158+8]..[100,3158+15])
                          Ppat_var "compare" (lib/shape.ml[100,3158+8]..[100,3158+15])
                        expression (lib/shape.ml[100,3158+18]..[100,3158+25])
                          Pexp_ident "compare" (lib/shape.ml[100,3158+18]..[100,3158+25])
                    ]
                  structure_item (lib/shape.ml[102,3185+4]..[102,3185+29])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[102,3185+8]..[102,3185+12])
                          Ppat_var "make" (lib/shape.ml[102,3185+8]..[102,3185+12])
                        expression (lib/shape.ml[102,3185+13]..[102,3185+29]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[102,3185+13]..[102,3185+16])
                              Nolabel
                              None
                              pattern (lib/shape.ml[102,3185+13]..[102,3185+16])
                                Ppat_var "str" (lib/shape.ml[102,3185+13]..[102,3185+16])
                            Pparam_val (lib/shape.ml[102,3185+17]..[102,3185+19])
                              Nolabel
                              None
                              pattern (lib/shape.ml[102,3185+17]..[102,3185+19])
                                Ppat_var "ns" (lib/shape.ml[102,3185+17]..[102,3185+19])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[102,3185+22]..[102,3185+29])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[102,3185+22]..[102,3185+25])
                                  Pexp_ident "str" (lib/shape.ml[102,3185+22]..[102,3185+25])
                                expression (lib/shape.ml[102,3185+27]..[102,3185+29])
                                  Pexp_ident "ns" (lib/shape.ml[102,3185+27]..[102,3185+29])
                              ]
                    ]
                  structure_item (lib/shape.ml[104,3216+4]..[104,3216+58])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[104,3216+8]..[104,3216+13])
                          Ppat_var "value" (lib/shape.ml[104,3216+8]..[104,3216+13])
                        expression (lib/shape.ml[104,3216+14]..[104,3216+58]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[104,3216+14]..[104,3216+16])
                              Nolabel
                              None
                              pattern (lib/shape.ml[104,3216+14]..[104,3216+16])
                                Ppat_var "id" (lib/shape.ml[104,3216+14]..[104,3216+16])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[104,3216+19]..[104,3216+58])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[104,3216+19]..[104,3216+32])
                                  Pexp_apply
                                  expression (lib/shape.ml[104,3216+19]..[104,3216+29])
                                    Pexp_ident "Ident.name" (lib/shape.ml[104,3216+19]..[104,3216+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[104,3216+30]..[104,3216+32])
                                        Pexp_ident "id" (lib/shape.ml[104,3216+30]..[104,3216+32])
                                  ]
                                expression (lib/shape.ml[104,3216+34]..[104,3216+58])
                                  Pexp_construct "Sig_component_kind.Value" (lib/shape.ml[104,3216+34]..[104,3216+58])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[105,3275+4]..[105,3275+57])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[105,3275+8]..[105,3275+13])
                          Ppat_var "type_" (lib/shape.ml[105,3275+8]..[105,3275+13])
                        expression (lib/shape.ml[105,3275+14]..[105,3275+57]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[105,3275+14]..[105,3275+16])
                              Nolabel
                              None
                              pattern (lib/shape.ml[105,3275+14]..[105,3275+16])
                                Ppat_var "id" (lib/shape.ml[105,3275+14]..[105,3275+16])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[105,3275+19]..[105,3275+57])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[105,3275+19]..[105,3275+32])
                                  Pexp_apply
                                  expression (lib/shape.ml[105,3275+19]..[105,3275+29])
                                    Pexp_ident "Ident.name" (lib/shape.ml[105,3275+19]..[105,3275+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[105,3275+30]..[105,3275+32])
                                        Pexp_ident "id" (lib/shape.ml[105,3275+30]..[105,3275+32])
                                  ]
                                expression (lib/shape.ml[105,3275+34]..[105,3275+57])
                                  Pexp_construct "Sig_component_kind.Type" (lib/shape.ml[105,3275+34]..[105,3275+57])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[106,3333+4]..[106,3333+61])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[106,3333+8]..[106,3333+15])
                          Ppat_var "module_" (lib/shape.ml[106,3333+8]..[106,3333+15])
                        expression (lib/shape.ml[106,3333+16]..[106,3333+61]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[106,3333+16]..[106,3333+18])
                              Nolabel
                              None
                              pattern (lib/shape.ml[106,3333+16]..[106,3333+18])
                                Ppat_var "id" (lib/shape.ml[106,3333+16]..[106,3333+18])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[106,3333+21]..[106,3333+61])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[106,3333+21]..[106,3333+34])
                                  Pexp_apply
                                  expression (lib/shape.ml[106,3333+21]..[106,3333+31])
                                    Pexp_ident "Ident.name" (lib/shape.ml[106,3333+21]..[106,3333+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[106,3333+32]..[106,3333+34])
                                        Pexp_ident "id" (lib/shape.ml[106,3333+32]..[106,3333+34])
                                  ]
                                expression (lib/shape.ml[106,3333+36]..[106,3333+61])
                                  Pexp_construct "Sig_component_kind.Module" (lib/shape.ml[106,3333+36]..[106,3333+61])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[107,3395+4]..[107,3395+70])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[107,3395+8]..[107,3395+19])
                          Ppat_var "module_type" (lib/shape.ml[107,3395+8]..[107,3395+19])
                        expression (lib/shape.ml[107,3395+20]..[107,3395+70]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[107,3395+20]..[107,3395+22])
                              Nolabel
                              None
                              pattern (lib/shape.ml[107,3395+20]..[107,3395+22])
                                Ppat_var "id" (lib/shape.ml[107,3395+20]..[107,3395+22])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[107,3395+25]..[107,3395+70])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[107,3395+25]..[107,3395+38])
                                  Pexp_apply
                                  expression (lib/shape.ml[107,3395+25]..[107,3395+35])
                                    Pexp_ident "Ident.name" (lib/shape.ml[107,3395+25]..[107,3395+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[107,3395+36]..[107,3395+38])
                                        Pexp_ident "id" (lib/shape.ml[107,3395+36]..[107,3395+38])
                                  ]
                                expression (lib/shape.ml[107,3395+40]..[107,3395+70])
                                  Pexp_construct "Sig_component_kind.Module_type" (lib/shape.ml[107,3395+40]..[107,3395+70])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[108,3466+4]..[109,3501+61])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[108,3466+8]..[108,3466+29])
                          Ppat_var "extension_constructor" (lib/shape.ml[108,3466+8]..[108,3466+29])
                        expression (lib/shape.ml[108,3466+30]..[109,3501+61]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[108,3466+30]..[108,3466+32])
                              Nolabel
                              None
                              pattern (lib/shape.ml[108,3466+30]..[108,3466+32])
                                Ppat_var "id" (lib/shape.ml[108,3466+30]..[108,3466+32])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[109,3501+6]..[109,3501+61])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[109,3501+6]..[109,3501+19])
                                  Pexp_apply
                                  expression (lib/shape.ml[109,3501+6]..[109,3501+16])
                                    Pexp_ident "Ident.name" (lib/shape.ml[109,3501+6]..[109,3501+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[109,3501+17]..[109,3501+19])
                                        Pexp_ident "id" (lib/shape.ml[109,3501+17]..[109,3501+19])
                                  ]
                                expression (lib/shape.ml[109,3501+21]..[109,3501+61])
                                  Pexp_construct "Sig_component_kind.Extension_constructor" (lib/shape.ml[109,3501+21]..[109,3501+61])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[110,3563+4]..[111,3583+45])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[110,3563+8]..[110,3563+14])
                          Ppat_var "class_" (lib/shape.ml[110,3563+8]..[110,3563+14])
                        expression (lib/shape.ml[110,3563+15]..[111,3583+45]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[110,3563+15]..[110,3563+17])
                              Nolabel
                              None
                              pattern (lib/shape.ml[110,3563+15]..[110,3563+17])
                                Ppat_var "id" (lib/shape.ml[110,3563+15]..[110,3563+17])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[111,3583+6]..[111,3583+45])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[111,3583+6]..[111,3583+19])
                                  Pexp_apply
                                  expression (lib/shape.ml[111,3583+6]..[111,3583+16])
                                    Pexp_ident "Ident.name" (lib/shape.ml[111,3583+6]..[111,3583+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[111,3583+17]..[111,3583+19])
                                        Pexp_ident "id" (lib/shape.ml[111,3583+17]..[111,3583+19])
                                  ]
                                expression (lib/shape.ml[111,3583+21]..[111,3583+45])
                                  Pexp_construct "Sig_component_kind.Class" (lib/shape.ml[111,3583+21]..[111,3583+45])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[112,3629+4]..[113,3653+50])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[112,3629+8]..[112,3629+18])
                          Ppat_var "class_type" (lib/shape.ml[112,3629+8]..[112,3629+18])
                        expression (lib/shape.ml[112,3629+19]..[113,3653+50]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[112,3629+19]..[112,3629+21])
                              Nolabel
                              None
                              pattern (lib/shape.ml[112,3629+19]..[112,3629+21])
                                Ppat_var "id" (lib/shape.ml[112,3629+19]..[112,3629+21])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[113,3653+6]..[113,3653+50])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[113,3653+6]..[113,3653+19])
                                  Pexp_apply
                                  expression (lib/shape.ml[113,3653+6]..[113,3653+16])
                                    Pexp_ident "Ident.name" (lib/shape.ml[113,3653+6]..[113,3653+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[113,3653+17]..[113,3653+19])
                                        Pexp_ident "id" (lib/shape.ml[113,3653+17]..[113,3653+19])
                                  ]
                                expression (lib/shape.ml[113,3653+21]..[113,3653+50])
                                  Pexp_construct "Sig_component_kind.Class_type" (lib/shape.ml[113,3653+21]..[113,3653+50])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[115,3705+4]..[118,3783+41])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[115,3705+8]..[115,3705+13])
                          Ppat_var "print" (lib/shape.ml[115,3705+8]..[115,3705+13])
                        expression (lib/shape.ml[115,3705+14]..[118,3783+41]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[115,3705+14]..[115,3705+17])
                              Nolabel
                              None
                              pattern (lib/shape.ml[115,3705+14]..[115,3705+17])
                                Ppat_var "fmt" (lib/shape.ml[115,3705+14]..[115,3705+17])
                            Pparam_val (lib/shape.ml[115,3705+18]..[115,3705+28])
                              Nolabel
                              None
                              pattern (lib/shape.ml[115,3705+18]..[115,3705+28])
                                Ppat_tuple
                                [
                                  pattern (lib/shape.ml[115,3705+19]..[115,3705+23])
                                    Ppat_var "name" (lib/shape.ml[115,3705+19]..[115,3705+23])
                                  pattern (lib/shape.ml[115,3705+25]..[115,3705+27])
                                    Ppat_var "ns" (lib/shape.ml[115,3705+25]..[115,3705+27])
                                ]
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[116,3736+6]..[118,3783+41])
                              Pexp_apply
                              expression (lib/shape.ml[116,3736+6]..[116,3736+20])
                                Pexp_ident "Format.fprintf" (lib/shape.ml[116,3736+6]..[116,3736+20])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[116,3736+21]..[116,3736+24])
                                    Pexp_ident "fmt" (lib/shape.ml[116,3736+21]..[116,3736+24])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[116,3736+25]..[116,3736+33])
                                    Pexp_constant PConst_string("%S[%s]",(lib/shape.ml[116,3736+26]..[116,3736+32]),None)
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[117,3770+8]..[117,3770+12])
                                    Pexp_ident "name" (lib/shape.ml[117,3770+8]..[117,3770+12])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[118,3783+8]..[118,3783+41])
                                    Pexp_apply
                                    expression (lib/shape.ml[118,3783+9]..[118,3783+37])
                                      Pexp_ident "Sig_component_kind.to_string" (lib/shape.ml[118,3783+9]..[118,3783+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/shape.ml[118,3783+38]..[118,3783+40])
                                          Pexp_ident "ns" (lib/shape.ml[118,3783+38]..[118,3783+40])
                                    ]
                              ]
                    ]
                ]
          structure_item (lib/shape.ml[121,3832+2]..[121,3832+11])
            Pstr_include            module_expr (lib/shape.ml[121,3832+10]..[121,3832+11])
              Pmod_ident "T" (lib/shape.ml[121,3832+10]..[121,3832+11])
          structure_item (lib/shape.ml[123,3845+2]..[123,3845+26])
            Pstr_module
            "Map" (lib/shape.ml[123,3845+9]..[123,3845+12])
              module_expr (lib/shape.ml[123,3845+15]..[123,3845+26])
                Pmod_apply
                module_expr (lib/shape.ml[123,3845+15]..[123,3845+23])
                  Pmod_ident "Map.Make" (lib/shape.ml[123,3845+15]..[123,3845+23])
                module_expr (lib/shape.ml[123,3845+24]..[123,3845+25])
                  Pmod_ident "T" (lib/shape.ml[123,3845+24]..[123,3845+25])
        ]
  structure_item (lib/shape.ml[126,3877+0]..[126,3877+18])
    Pstr_type Rec
    [
      type_declaration "var" (lib/shape.ml[126,3877+5]..[126,3877+8]) (lib/shape.ml[126,3877+0]..[126,3877+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/shape.ml[126,3877+11]..[126,3877+18])
              Ptyp_constr "Ident.t" (lib/shape.ml[126,3877+11]..[126,3877+18])
              []
    ]
  structure_item (lib/shape.ml[127,3896+0]..[135,4060+23])
    Pstr_type Rec
    [
      type_declaration "t" (lib/shape.ml[127,3896+5]..[127,3896+6]) (lib/shape.ml[127,3896+0]..[127,3896+42])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/shape.ml[127,3896+11]..[127,3896+29])
                Immutable
                "uid" (lib/shape.ml[127,3896+11]..[127,3896+14])                core_type (lib/shape.ml[127,3896+16]..[127,3896+28])
                  Ptyp_constr "option" (lib/shape.ml[127,3896+22]..[127,3896+28])
                  [
                    core_type (lib/shape.ml[127,3896+16]..[127,3896+21])
                      Ptyp_constr "Uid.t" (lib/shape.ml[127,3896+16]..[127,3896+21])
                      []
                  ]
              (lib/shape.ml[127,3896+30]..[127,3896+40])
                Immutable
                "desc" (lib/shape.ml[127,3896+30]..[127,3896+34])                core_type (lib/shape.ml[127,3896+36]..[127,3896+40])
                  Ptyp_constr "desc" (lib/shape.ml[127,3896+36]..[127,3896+40])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "desc" (lib/shape.ml[128,3939+4]..[128,3939+8]) (lib/shape.ml[128,3939+0]..[135,4060+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/shape.ml[129,3950+2]..[129,3950+14])
                "Var" (lib/shape.ml[129,3950+4]..[129,3950+7])
                [
                  core_type (lib/shape.ml[129,3950+11]..[129,3950+14])
                    Ptyp_constr "var" (lib/shape.ml[129,3950+11]..[129,3950+14])
                    []
                ]
                None
              (lib/shape.ml[130,3965+2]..[130,3965+18])
                "Abs" (lib/shape.ml[130,3965+4]..[130,3965+7])
                [
                  core_type (lib/shape.ml[130,3965+11]..[130,3965+14])
                    Ptyp_constr "var" (lib/shape.ml[130,3965+11]..[130,3965+14])
                    []
                  core_type (lib/shape.ml[130,3965+17]..[130,3965+18])
                    Ptyp_constr "t" (lib/shape.ml[130,3965+17]..[130,3965+18])
                    []
                ]
                None
              (lib/shape.ml[131,3984+2]..[131,3984+16])
                "App" (lib/shape.ml[131,3984+4]..[131,3984+7])
                [
                  core_type (lib/shape.ml[131,3984+11]..[131,3984+12])
                    Ptyp_constr "t" (lib/shape.ml[131,3984+11]..[131,3984+12])
                    []
                  core_type (lib/shape.ml[131,3984+15]..[131,3984+16])
                    Ptyp_constr "t" (lib/shape.ml[131,3984+15]..[131,3984+16])
                    []
                ]
                None
              (lib/shape.ml[132,4001+2]..[132,4001+26])
                "Struct" (lib/shape.ml[132,4001+4]..[132,4001+10])
                [
                  core_type (lib/shape.ml[132,4001+14]..[132,4001+26])
                    Ptyp_constr "Item.Map.t" (lib/shape.ml[132,4001+16]..[132,4001+26])
                    [
                      core_type (lib/shape.ml[132,4001+14]..[132,4001+15])
                        Ptyp_constr "t" (lib/shape.ml[132,4001+14]..[132,4001+15])
                        []
                    ]
                ]
                None
              (lib/shape.ml[133,4028+2]..[133,4028+8])
                "Leaf" (lib/shape.ml[133,4028+4]..[133,4028+8])
                []
                None
              (lib/shape.ml[134,4037+2]..[134,4037+22])
                "Proj" (lib/shape.ml[134,4037+4]..[134,4037+8])
                [
                  core_type (lib/shape.ml[134,4037+12]..[134,4037+13])
                    Ptyp_constr "t" (lib/shape.ml[134,4037+12]..[134,4037+13])
                    []
                  core_type (lib/shape.ml[134,4037+16]..[134,4037+22])
                    Ptyp_constr "Item.t" (lib/shape.ml[134,4037+16]..[134,4037+22])
                    []
                ]
                None
              (lib/shape.ml[135,4060+2]..[135,4060+23])
                "Comp_unit" (lib/shape.ml[135,4060+4]..[135,4060+13])
                [
                  core_type (lib/shape.ml[135,4060+17]..[135,4060+23])
                    Ptyp_constr "string" (lib/shape.ml[135,4060+17]..[135,4060+23])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/shape.ml[190,6170+0]..[192,6249+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[190,6170+4]..[190,6170+13])
          Ppat_var "fresh_var" (lib/shape.ml[190,6170+4]..[190,6170+13])
        expression (lib/shape.ml[190,6170+14]..[192,6249+41]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[190,6170+14]..[190,6170+33])
              Optional "name"
              Some
                expression (lib/shape.ml[190,6170+21]..[190,6170+32])
                  Pexp_constant PConst_string("shape-var",(lib/shape.ml[190,6170+22]..[190,6170+31]),None)
              pattern (lib/shape.ml[190,6170+16]..[190,6170+20])
                Ppat_var "name" (lib/shape.ml[190,6170+16]..[190,6170+20])
            Pparam_val (lib/shape.ml[190,6170+34]..[190,6170+37])
              Nolabel
              None
              pattern (lib/shape.ml[190,6170+34]..[190,6170+37])
                Ppat_var "uid" (lib/shape.ml[190,6170+34]..[190,6170+37])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[191,6210+2]..[192,6249+41])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/shape.ml[191,6210+6]..[191,6210+9])
                    Ppat_var "var" (lib/shape.ml[191,6210+6]..[191,6210+9])
                  expression (lib/shape.ml[191,6210+12]..[191,6210+35])
                    Pexp_apply
                    expression (lib/shape.ml[191,6210+12]..[191,6210+30])
                      Pexp_ident "Ident.create_local" (lib/shape.ml[191,6210+12]..[191,6210+30])
                    [
                      <arg>
                      Nolabel
                        expression (lib/shape.ml[191,6210+31]..[191,6210+35])
                          Pexp_ident "name" (lib/shape.ml[191,6210+31]..[191,6210+35])
                    ]
              ]
              expression (lib/shape.ml[192,6249+2]..[192,6249+41])
                Pexp_tuple
                [
                  expression (lib/shape.ml[192,6249+2]..[192,6249+5])
                    Pexp_ident "var" (lib/shape.ml[192,6249+2]..[192,6249+5])
                  expression (lib/shape.ml[192,6249+7]..[192,6249+41])
                    Pexp_record
                    [
                      "uid" (lib/shape.ml[192,6249+9]..[192,6249+12])
                        expression (lib/shape.ml[192,6249+15]..[192,6249+23])
                          Pexp_construct "Some" (lib/shape.ml[192,6249+15]..[192,6249+19])
                          Some
                            expression (lib/shape.ml[192,6249+20]..[192,6249+23])
                              Pexp_ident "uid" (lib/shape.ml[192,6249+20]..[192,6249+23])
                      "desc" (lib/shape.ml[192,6249+25]..[192,6249+29])
                        expression (lib/shape.ml[192,6249+32]..[192,6249+39])
                          Pexp_construct "Var" (lib/shape.ml[192,6249+32]..[192,6249+35])
                          Some
                            expression (lib/shape.ml[192,6249+36]..[192,6249+39])
                              Pexp_ident "var" (lib/shape.ml[192,6249+36]..[192,6249+39])
                    ]
                    None
                ]
    ]
  structure_item (lib/shape.ml[194,6292+0]..[194,6292+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[194,6292+4]..[194,6292+29])
          Ppat_var "for_unnamed_functor_param" (lib/shape.ml[194,6292+4]..[194,6292+29])
        expression (lib/shape.ml[194,6292+32]..[194,6292+55])
          Pexp_apply
          expression (lib/shape.ml[194,6292+32]..[194,6292+50])
            Pexp_ident "Ident.create_local" (lib/shape.ml[194,6292+32]..[194,6292+50])
          [
            <arg>
            Nolabel
              expression (lib/shape.ml[194,6292+51]..[194,6292+55])
                Pexp_constant PConst_string("()",(lib/shape.ml[194,6292+52]..[194,6292+54]),None)
          ]
    ]
  structure_item (lib/shape.ml[196,6349+0]..[197,6366+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[196,6349+4]..[196,6349+7])
          Ppat_var "var" (lib/shape.ml[196,6349+4]..[196,6349+7])
        expression (lib/shape.ml[196,6349+8]..[197,6366+35]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[196,6349+8]..[196,6349+11])
              Nolabel
              None
              pattern (lib/shape.ml[196,6349+8]..[196,6349+11])
                Ppat_var "uid" (lib/shape.ml[196,6349+8]..[196,6349+11])
            Pparam_val (lib/shape.ml[196,6349+12]..[196,6349+14])
              Nolabel
              None
              pattern (lib/shape.ml[196,6349+12]..[196,6349+14])
                Ppat_var "id" (lib/shape.ml[196,6349+12]..[196,6349+14])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[197,6366+2]..[197,6366+35])
              Pexp_record
              [
                "uid" (lib/shape.ml[197,6366+4]..[197,6366+7])
                  expression (lib/shape.ml[197,6366+10]..[197,6366+18])
                    Pexp_construct "Some" (lib/shape.ml[197,6366+10]..[197,6366+14])
                    Some
                      expression (lib/shape.ml[197,6366+15]..[197,6366+18])
                        Pexp_ident "uid" (lib/shape.ml[197,6366+15]..[197,6366+18])
                "desc" (lib/shape.ml[197,6366+20]..[197,6366+24])
                  expression (lib/shape.ml[197,6366+27]..[197,6366+33])
                    Pexp_construct "Var" (lib/shape.ml[197,6366+27]..[197,6366+30])
                    Some
                      expression (lib/shape.ml[197,6366+31]..[197,6366+33])
                        Pexp_ident "id" (lib/shape.ml[197,6366+31]..[197,6366+33])
              ]
              None
    ]
  structure_item (lib/shape.ml[199,6403+0]..[200,6427+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[199,6403+4]..[199,6403+7])
          Ppat_var "abs" (lib/shape.ml[199,6403+4]..[199,6403+7])
        expression (lib/shape.ml[199,6403+8]..[200,6427+33]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[199,6403+8]..[199,6403+12])
              Optional "uid"
              None
              pattern (lib/shape.ml[199,6403+9]..[199,6403+12])
                Ppat_var "uid" (lib/shape.ml[199,6403+9]..[199,6403+12])
            Pparam_val (lib/shape.ml[199,6403+13]..[199,6403+16])
              Nolabel
              None
              pattern (lib/shape.ml[199,6403+13]..[199,6403+16])
                Ppat_var "var" (lib/shape.ml[199,6403+13]..[199,6403+16])
            Pparam_val (lib/shape.ml[199,6403+17]..[199,6403+21])
              Nolabel
              None
              pattern (lib/shape.ml[199,6403+17]..[199,6403+21])
                Ppat_var "body" (lib/shape.ml[199,6403+17]..[199,6403+21])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[200,6427+2]..[200,6427+33])
              Pexp_record
              [
                "uid" (lib/shape.ml[200,6427+4]..[200,6427+7]) ghost
                  expression (lib/shape.ml[200,6427+4]..[200,6427+7])
                    Pexp_ident "uid" (lib/shape.ml[200,6427+4]..[200,6427+7])
                "desc" (lib/shape.ml[200,6427+9]..[200,6427+13])
                  expression (lib/shape.ml[200,6427+16]..[200,6427+31])
                    Pexp_construct "Abs" (lib/shape.ml[200,6427+16]..[200,6427+19])
                    Some
                      expression (lib/shape.ml[200,6427+20]..[200,6427+31])
                        Pexp_tuple
                        [
                          expression (lib/shape.ml[200,6427+21]..[200,6427+24])
                            Pexp_ident "var" (lib/shape.ml[200,6427+21]..[200,6427+24])
                          expression (lib/shape.ml[200,6427+26]..[200,6427+30])
                            Pexp_ident "body" (lib/shape.ml[200,6427+26]..[200,6427+30])
                        ]
              ]
              None
    ]
  structure_item (lib/shape.ml[202,6462+0]..[203,6481+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[202,6462+4]..[202,6462+7])
          Ppat_var "str" (lib/shape.ml[202,6462+4]..[202,6462+7])
        expression (lib/shape.ml[202,6462+8]..[203,6481+28]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[202,6462+8]..[202,6462+12])
              Optional "uid"
              None
              pattern (lib/shape.ml[202,6462+9]..[202,6462+12])
                Ppat_var "uid" (lib/shape.ml[202,6462+9]..[202,6462+12])
            Pparam_val (lib/shape.ml[202,6462+13]..[202,6462+16])
              Nolabel
              None
              pattern (lib/shape.ml[202,6462+13]..[202,6462+16])
                Ppat_var "map" (lib/shape.ml[202,6462+13]..[202,6462+16])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[203,6481+2]..[203,6481+28])
              Pexp_record
              [
                "uid" (lib/shape.ml[203,6481+4]..[203,6481+7]) ghost
                  expression (lib/shape.ml[203,6481+4]..[203,6481+7])
                    Pexp_ident "uid" (lib/shape.ml[203,6481+4]..[203,6481+7])
                "desc" (lib/shape.ml[203,6481+9]..[203,6481+13])
                  expression (lib/shape.ml[203,6481+16]..[203,6481+26])
                    Pexp_construct "Struct" (lib/shape.ml[203,6481+16]..[203,6481+22])
                    Some
                      expression (lib/shape.ml[203,6481+23]..[203,6481+26])
                        Pexp_ident "map" (lib/shape.ml[203,6481+23]..[203,6481+26])
              ]
              None
    ]
  structure_item (lib/shape.ml[205,6511+0]..[206,6526+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[205,6511+4]..[205,6511+8])
          Ppat_var "leaf" (lib/shape.ml[205,6511+4]..[205,6511+8])
        expression (lib/shape.ml[205,6511+9]..[206,6526+33]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[205,6511+9]..[205,6511+12])
              Nolabel
              None
              pattern (lib/shape.ml[205,6511+9]..[205,6511+12])
                Ppat_var "uid" (lib/shape.ml[205,6511+9]..[205,6511+12])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[206,6526+2]..[206,6526+33])
              Pexp_record
              [
                "uid" (lib/shape.ml[206,6526+4]..[206,6526+7])
                  expression (lib/shape.ml[206,6526+10]..[206,6526+18])
                    Pexp_construct "Some" (lib/shape.ml[206,6526+10]..[206,6526+14])
                    Some
                      expression (lib/shape.ml[206,6526+15]..[206,6526+18])
                        Pexp_ident "uid" (lib/shape.ml[206,6526+15]..[206,6526+18])
                "desc" (lib/shape.ml[206,6526+20]..[206,6526+24])
                  expression (lib/shape.ml[206,6526+27]..[206,6526+31])
                    Pexp_construct "Leaf" (lib/shape.ml[206,6526+27]..[206,6526+31])
                    None
              ]
              None
    ]
  structure_item (lib/shape.ml[208,6561+0]..[219,6841+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[208,6561+4]..[208,6561+8])
          Ppat_var "proj" (lib/shape.ml[208,6561+4]..[208,6561+8])
        expression (lib/shape.ml[208,6561+9]..[219,6841+36]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[208,6561+9]..[208,6561+13])
              Optional "uid"
              None
              pattern (lib/shape.ml[208,6561+10]..[208,6561+13])
                Ppat_var "uid" (lib/shape.ml[208,6561+10]..[208,6561+13])
            Pparam_val (lib/shape.ml[208,6561+14]..[208,6561+15])
              Nolabel
              None
              pattern (lib/shape.ml[208,6561+14]..[208,6561+15])
                Ppat_var "t" (lib/shape.ml[208,6561+14]..[208,6561+15])
            Pparam_val (lib/shape.ml[208,6561+16]..[208,6561+20])
              Nolabel
              None
              pattern (lib/shape.ml[208,6561+16]..[208,6561+20])
                Ppat_var "item" (lib/shape.ml[208,6561+16]..[208,6561+20])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[209,6584+2]..[219,6841+36])
              Pexp_match
              expression (lib/shape.ml[209,6584+8]..[209,6584+14])
                Pexp_field
                expression (lib/shape.ml[209,6584+8]..[209,6584+9])
                  Pexp_ident "t" (lib/shape.ml[209,6584+8]..[209,6584+9])
                "desc" (lib/shape.ml[209,6584+10]..[209,6584+14])
              [
                <case>
                  pattern (lib/shape.ml[210,6604+4]..[210,6604+8])
                    Ppat_construct "Leaf" (lib/shape.ml[210,6604+4]..[210,6604+8])
                    None
                  expression (lib/shape.ml[213,6707+6]..[213,6707+7])
                    Pexp_ident "t" (lib/shape.ml[213,6707+6]..[213,6707+7])
                <case>
                  pattern (lib/shape.ml[214,6715+4]..[214,6715+14])
                    Ppat_construct "Struct" (lib/shape.ml[214,6715+4]..[214,6715+10])
                    Some
                      []
                      pattern (lib/shape.ml[214,6715+11]..[214,6715+14])
                        Ppat_var "map" (lib/shape.ml[214,6715+11]..[214,6715+14])
                  expression (lib/shape.ml[215,6733+6]..[217,6822+9])
                    Pexp_try
                    expression (lib/shape.ml[215,6733+16]..[215,6733+38])
                      Pexp_apply
                      expression (lib/shape.ml[215,6733+16]..[215,6733+29])
                        Pexp_ident "Item.Map.find" (lib/shape.ml[215,6733+16]..[215,6733+29])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[215,6733+30]..[215,6733+34])
                            Pexp_ident "item" (lib/shape.ml[215,6733+30]..[215,6733+34])
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[215,6733+35]..[215,6733+38])
                            Pexp_ident "map" (lib/shape.ml[215,6733+35]..[215,6733+38])
                      ]
                    [
                      <case>
                        pattern (lib/shape.ml[216,6772+11]..[216,6772+20])
                          Ppat_construct "Not_found" (lib/shape.ml[216,6772+11]..[216,6772+20])
                          None
                        expression (lib/shape.ml[216,6772+24]..[216,6772+25])
                          Pexp_ident "t" (lib/shape.ml[216,6772+24]..[216,6772+25])
                    ]
                <case>
                  pattern (lib/shape.ml[218,6832+4]..[218,6832+5])
                    Ppat_any
                  expression (lib/shape.ml[219,6841+6]..[219,6841+36])
                    Pexp_record
                    [
                      "uid" (lib/shape.ml[219,6841+8]..[219,6841+11]) ghost
                        expression (lib/shape.ml[219,6841+8]..[219,6841+11])
                          Pexp_ident "uid" (lib/shape.ml[219,6841+8]..[219,6841+11])
                      "desc" (lib/shape.ml[219,6841+13]..[219,6841+17])
                        expression (lib/shape.ml[219,6841+20]..[219,6841+34])
                          Pexp_construct "Proj" (lib/shape.ml[219,6841+20]..[219,6841+24])
                          Some
                            expression (lib/shape.ml[219,6841+25]..[219,6841+34])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[219,6841+26]..[219,6841+27])
                                  Pexp_ident "t" (lib/shape.ml[219,6841+26]..[219,6841+27])
                                expression (lib/shape.ml[219,6841+29]..[219,6841+33])
                                  Pexp_ident "item" (lib/shape.ml[219,6841+29]..[219,6841+33])
                              ]
                    ]
                    None
              ]
    ]
  structure_item (lib/shape.ml[221,6879+0]..[222,6901+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[221,6879+4]..[221,6879+7])
          Ppat_var "app" (lib/shape.ml[221,6879+4]..[221,6879+7])
        expression (lib/shape.ml[221,6879+8]..[222,6901+34]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[221,6879+8]..[221,6879+12])
              Optional "uid"
              None
              pattern (lib/shape.ml[221,6879+9]..[221,6879+12])
                Ppat_var "uid" (lib/shape.ml[221,6879+9]..[221,6879+12])
            Pparam_val (lib/shape.ml[221,6879+13]..[221,6879+14])
              Nolabel
              None
              pattern (lib/shape.ml[221,6879+13]..[221,6879+14])
                Ppat_var "f" (lib/shape.ml[221,6879+13]..[221,6879+14])
            Pparam_val (lib/shape.ml[221,6879+15]..[221,6879+19])
              Labelled "arg"
              None
              pattern (lib/shape.ml[221,6879+16]..[221,6879+19])
                Ppat_var "arg" (lib/shape.ml[221,6879+16]..[221,6879+19])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[222,6901+6]..[222,6901+34])
              Pexp_record
              [
                "uid" (lib/shape.ml[222,6901+8]..[222,6901+11]) ghost
                  expression (lib/shape.ml[222,6901+8]..[222,6901+11])
                    Pexp_ident "uid" (lib/shape.ml[222,6901+8]..[222,6901+11])
                "desc" (lib/shape.ml[222,6901+13]..[222,6901+17])
                  expression (lib/shape.ml[222,6901+20]..[222,6901+32])
                    Pexp_construct "App" (lib/shape.ml[222,6901+20]..[222,6901+23])
                    Some
                      expression (lib/shape.ml[222,6901+24]..[222,6901+32])
                        Pexp_tuple
                        [
                          expression (lib/shape.ml[222,6901+25]..[222,6901+26])
                            Pexp_ident "f" (lib/shape.ml[222,6901+25]..[222,6901+26])
                          expression (lib/shape.ml[222,6901+28]..[222,6901+31])
                            Pexp_ident "arg" (lib/shape.ml[222,6901+28]..[222,6901+31])
                        ]
              ]
              None
    ]
  structure_item (lib/shape.ml[224,6937+0]..[227,7009+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[224,6937+4]..[224,6937+17])
          Ppat_var "decompose_abs" (lib/shape.ml[224,6937+4]..[224,6937+17])
        expression (lib/shape.ml[224,6937+18]..[227,7009+13]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[224,6937+18]..[224,6937+19])
              Nolabel
              None
              pattern (lib/shape.ml[224,6937+18]..[224,6937+19])
                Ppat_var "t" (lib/shape.ml[224,6937+18]..[224,6937+19])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[225,6959+2]..[227,7009+13])
              Pexp_match
              expression (lib/shape.ml[225,6959+8]..[225,6959+14])
                Pexp_field
                expression (lib/shape.ml[225,6959+8]..[225,6959+9])
                  Pexp_ident "t" (lib/shape.ml[225,6959+8]..[225,6959+9])
                "desc" (lib/shape.ml[225,6959+10]..[225,6959+14])
              [
                <case>
                  pattern (lib/shape.ml[226,6979+4]..[226,6979+14])
                    Ppat_construct "Abs" (lib/shape.ml[226,6979+4]..[226,6979+7])
                    Some
                      []
                      pattern (lib/shape.ml[226,6979+8]..[226,6979+14])
                        Ppat_tuple
                        [
                          pattern (lib/shape.ml[226,6979+9]..[226,6979+10])
                            Ppat_var "x" (lib/shape.ml[226,6979+9]..[226,6979+10])
                          pattern (lib/shape.ml[226,6979+12]..[226,6979+13])
                            Ppat_var "t" (lib/shape.ml[226,6979+12]..[226,6979+13])
                        ]
                  expression (lib/shape.ml[226,6979+18]..[226,6979+29])
                    Pexp_construct "Some" (lib/shape.ml[226,6979+18]..[226,6979+22])
                    Some
                      expression (lib/shape.ml[226,6979+23]..[226,6979+29])
                        Pexp_tuple
                        [
                          expression (lib/shape.ml[226,6979+24]..[226,6979+25])
                            Pexp_ident "x" (lib/shape.ml[226,6979+24]..[226,6979+25])
                          expression (lib/shape.ml[226,6979+27]..[226,6979+28])
                            Pexp_ident "t" (lib/shape.ml[226,6979+27]..[226,6979+28])
                        ]
                <case>
                  pattern (lib/shape.ml[227,7009+4]..[227,7009+5])
                    Ppat_any
                  expression (lib/shape.ml[227,7009+9]..[227,7009+13])
                    Pexp_construct "None" (lib/shape.ml[227,7009+9]..[227,7009+13])
                    None
              ]
    ]
  structure_item (lib/shape.ml[468,17563+0]..[468,17563+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[468,17563+4]..[468,17563+13])
          Ppat_var "dummy_mod" (lib/shape.ml[468,17563+4]..[468,17563+13])
        expression (lib/shape.ml[468,17563+16]..[468,17563+60])
          Pexp_record
          [
            "uid" (lib/shape.ml[468,17563+18]..[468,17563+21])
              expression (lib/shape.ml[468,17563+24]..[468,17563+28])
                Pexp_construct "None" (lib/shape.ml[468,17563+24]..[468,17563+28])
                None
            "desc" (lib/shape.ml[468,17563+30]..[468,17563+34])
              expression (lib/shape.ml[468,17563+37]..[468,17563+58])
                Pexp_construct "Struct" (lib/shape.ml[468,17563+37]..[468,17563+43])
                Some
                  expression (lib/shape.ml[468,17563+44]..[468,17563+58])
                    Pexp_ident "Item.Map.empty" (lib/shape.ml[468,17563+44]..[468,17563+58])
          ]
          None
    ]
  structure_item (lib/shape.ml[470,17625+0]..[481,18067+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[470,17625+4]..[470,17625+11])
          Ppat_var "of_path" (lib/shape.ml[470,17625+4]..[470,17625+11])
        expression (lib/shape.ml[470,17625+12]..[481,18067+15]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[470,17625+12]..[470,17625+23])
              Labelled "find_shape"
              None
              pattern (lib/shape.ml[470,17625+13]..[470,17625+23])
                Ppat_var "find_shape" (lib/shape.ml[470,17625+13]..[470,17625+23])
            Pparam_val (lib/shape.ml[470,17625+24]..[470,17625+34])
              Labelled "namespace"
              None
              pattern (lib/shape.ml[470,17625+25]..[470,17625+34])
                Ppat_var "namespace" (lib/shape.ml[470,17625+25]..[470,17625+34])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[471,17662+2]..[481,18067+15])
              Pexp_let Rec
              [
                <def>
                  pattern (lib/shape.ml[471,17662+10]..[471,17662+13])
                    Ppat_var "aux" (lib/shape.ml[471,17662+10]..[471,17662+13])
                  core_type (lib/shape.ml[471,17662+16]..[471,17662+51])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/shape.ml[471,17662+16]..[471,17662+36])
                      Ptyp_constr "Sig_component_kind.t" (lib/shape.ml[471,17662+16]..[471,17662+36])
                      []
                    core_type (lib/shape.ml[471,17662+40]..[471,17662+51])
                      Ptyp_arrow
                      Nolabel
                      core_type (lib/shape.ml[471,17662+40]..[471,17662+46])
                        Ptyp_constr "Path.t" (lib/shape.ml[471,17662+40]..[471,17662+46])
                        []
                      core_type (lib/shape.ml[471,17662+50]..[471,17662+51])
                        Ptyp_constr "t" (lib/shape.ml[471,17662+50]..[471,17662+51])
                        []
                  expression (lib/shape.ml[471,17662+54]..[479,18052+9])
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[471,17662+58]..[471,17662+60])
                        Nolabel
                        None
                        pattern (lib/shape.ml[471,17662+58]..[471,17662+60])
                          Ppat_var "ns" (lib/shape.ml[471,17662+58]..[471,17662+60])
                    ]
                    None
                    Pfunction_cases (lib/shape.ml[471,17662+64]..[479,18052+9])
                      [
                        <case>
                          pattern (lib/shape.ml[472,17735+6]..[472,17735+15])
                            Ppat_construct "Pident" (lib/shape.ml[472,17735+6]..[472,17735+12])
                            Some
                              []
                              pattern (lib/shape.ml[472,17735+13]..[472,17735+15])
                                Ppat_var "id" (lib/shape.ml[472,17735+13]..[472,17735+15])
                          expression (lib/shape.ml[472,17735+19]..[472,17735+35])
                            Pexp_apply
                            expression (lib/shape.ml[472,17735+19]..[472,17735+29])
                              Pexp_ident "find_shape" (lib/shape.ml[472,17735+19]..[472,17735+29])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[472,17735+30]..[472,17735+32])
                                  Pexp_ident "ns" (lib/shape.ml[472,17735+30]..[472,17735+32])
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[472,17735+33]..[472,17735+35])
                                  Pexp_ident "id" (lib/shape.ml[472,17735+33]..[472,17735+35])
                            ]
                        <case>
                          pattern (lib/shape.ml[473,17771+6]..[473,17771+23])
                            Ppat_construct "Pdot" (lib/shape.ml[473,17771+6]..[473,17771+10])
                            Some
                              []
                              pattern (lib/shape.ml[473,17771+11]..[473,17771+23])
                                Ppat_tuple
                                [
                                  pattern (lib/shape.ml[473,17771+12]..[473,17771+16])
                                    Ppat_var "path" (lib/shape.ml[473,17771+12]..[473,17771+16])
                                  pattern (lib/shape.ml[473,17771+18]..[473,17771+22])
                                    Ppat_var "name" (lib/shape.ml[473,17771+18]..[473,17771+22])
                                ]
                          expression (lib/shape.ml[473,17771+27]..[473,17771+60])
                            Pexp_apply
                            expression (lib/shape.ml[473,17771+27]..[473,17771+31])
                              Pexp_ident "proj" (lib/shape.ml[473,17771+27]..[473,17771+31])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[473,17771+32]..[473,17771+49])
                                  Pexp_apply
                                  expression (lib/shape.ml[473,17771+33]..[473,17771+36])
                                    Pexp_ident "aux" (lib/shape.ml[473,17771+33]..[473,17771+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[473,17771+37]..[473,17771+43])
                                        Pexp_construct "Module" (lib/shape.ml[473,17771+37]..[473,17771+43])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[473,17771+44]..[473,17771+48])
                                        Pexp_ident "path" (lib/shape.ml[473,17771+44]..[473,17771+48])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[473,17771+50]..[473,17771+60])
                                  Pexp_tuple
                                  [
                                    expression (lib/shape.ml[473,17771+51]..[473,17771+55])
                                      Pexp_ident "name" (lib/shape.ml[473,17771+51]..[473,17771+55])
                                    expression (lib/shape.ml[473,17771+57]..[473,17771+59])
                                      Pexp_ident "ns" (lib/shape.ml[473,17771+57]..[473,17771+59])
                                  ]
                            ]
                        <case>
                          pattern (lib/shape.ml[474,17832+6]..[474,17832+21])
                            Ppat_construct "Papply" (lib/shape.ml[474,17832+6]..[474,17832+12])
                            Some
                              []
                              pattern (lib/shape.ml[474,17832+13]..[474,17832+21])
                                Ppat_tuple
                                [
                                  pattern (lib/shape.ml[474,17832+14]..[474,17832+16])
                                    Ppat_var "p1" (lib/shape.ml[474,17832+14]..[474,17832+16])
                                  pattern (lib/shape.ml[474,17832+18]..[474,17832+20])
                                    Ppat_var "p2" (lib/shape.ml[474,17832+18]..[474,17832+20])
                                ]
                          expression (lib/shape.ml[474,17832+25]..[474,17832+65])
                            Pexp_apply
                            expression (lib/shape.ml[474,17832+25]..[474,17832+28])
                              Pexp_ident "app" (lib/shape.ml[474,17832+25]..[474,17832+28])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[474,17832+29]..[474,17832+44])
                                  Pexp_apply
                                  expression (lib/shape.ml[474,17832+30]..[474,17832+33])
                                    Pexp_ident "aux" (lib/shape.ml[474,17832+30]..[474,17832+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[474,17832+34]..[474,17832+40])
                                        Pexp_construct "Module" (lib/shape.ml[474,17832+34]..[474,17832+40])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[474,17832+41]..[474,17832+43])
                                        Pexp_ident "p1" (lib/shape.ml[474,17832+41]..[474,17832+43])
                                  ]
                              <arg>
                              Labelled "arg"
                                expression (lib/shape.ml[474,17832+50]..[474,17832+65])
                                  Pexp_apply
                                  expression (lib/shape.ml[474,17832+51]..[474,17832+54])
                                    Pexp_ident "aux" (lib/shape.ml[474,17832+51]..[474,17832+54])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[474,17832+55]..[474,17832+61])
                                        Pexp_construct "Module" (lib/shape.ml[474,17832+55]..[474,17832+61])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[474,17832+62]..[474,17832+64])
                                        Pexp_ident "p2" (lib/shape.ml[474,17832+62]..[474,17832+64])
                                  ]
                            ]
                        <case>
                          pattern (lib/shape.ml[475,17898+6]..[475,17898+29])
                            Ppat_construct "Pextra_ty" (lib/shape.ml[475,17898+6]..[475,17898+15])
                            Some
                              []
                              pattern (lib/shape.ml[475,17898+16]..[475,17898+29])
                                Ppat_tuple
                                [
                                  pattern (lib/shape.ml[475,17898+17]..[475,17898+21])
                                    Ppat_var "path" (lib/shape.ml[475,17898+17]..[475,17898+21])
                                  pattern (lib/shape.ml[475,17898+23]..[475,17898+28])
                                    Ppat_var "extra" (lib/shape.ml[475,17898+23]..[475,17898+28])
                                ]
                          expression (lib/shape.ml[475,17898+33]..[479,18052+9])
                            Pexp_match
                            expression (lib/shape.ml[476,17937+14]..[476,17937+19])
                              Pexp_ident "extra" (lib/shape.ml[476,17937+14]..[476,17937+19])
                            [
                              <case>
                                pattern (lib/shape.ml[477,17962+10]..[477,17962+20])
                                  Ppat_construct "Pcstr_ty" (lib/shape.ml[477,17962+10]..[477,17962+18])
                                  Some
                                    []
                                    pattern (lib/shape.ml[477,17962+19]..[477,17962+20])
                                      Ppat_any
                                expression (lib/shape.ml[477,17962+24]..[477,17962+37])
                                  Pexp_apply
                                  expression (lib/shape.ml[477,17962+24]..[477,17962+27])
                                    Pexp_ident "aux" (lib/shape.ml[477,17962+24]..[477,17962+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[477,17962+28]..[477,17962+32])
                                        Pexp_construct "Type" (lib/shape.ml[477,17962+28]..[477,17962+32])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[477,17962+33]..[477,17962+37])
                                        Pexp_ident "path" (lib/shape.ml[477,17962+33]..[477,17962+37])
                                  ]
                              <case>
                                pattern (lib/shape.ml[478,18000+10]..[478,18000+17])
                                  Ppat_construct "Pext_ty" (lib/shape.ml[478,18000+10]..[478,18000+17])
                                  None
                                expression (lib/shape.ml[478,18000+21]..[478,18000+51])
                                  Pexp_apply
                                  expression (lib/shape.ml[478,18000+21]..[478,18000+24])
                                    Pexp_ident "aux" (lib/shape.ml[478,18000+21]..[478,18000+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[478,18000+25]..[478,18000+46])
                                        Pexp_construct "Extension_constructor" (lib/shape.ml[478,18000+25]..[478,18000+46])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[478,18000+47]..[478,18000+51])
                                        Pexp_ident "path" (lib/shape.ml[478,18000+47]..[478,18000+51])
                                  ]
                            ]
                      ]
              ]
              expression (lib/shape.ml[481,18067+2]..[481,18067+15])
                Pexp_apply
                expression (lib/shape.ml[481,18067+2]..[481,18067+5])
                  Pexp_ident "aux" (lib/shape.ml[481,18067+2]..[481,18067+5])
                [
                  <arg>
                  Nolabel
                    expression (lib/shape.ml[481,18067+6]..[481,18067+15])
                      Pexp_ident "namespace" (lib/shape.ml[481,18067+6]..[481,18067+15])
                ]
    ]
  structure_item (lib/shape.ml[483,18084+0]..[485,18185+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[483,18084+4]..[483,18084+23])
          Ppat_var "for_persistent_unit" (lib/shape.ml[483,18084+4]..[483,18084+23])
        expression (lib/shape.ml[483,18084+24]..[485,18185+24]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[483,18084+24]..[483,18084+25])
              Nolabel
              None
              pattern (lib/shape.ml[483,18084+24]..[483,18084+25])
                Ppat_var "s" (lib/shape.ml[483,18084+24]..[483,18084+25])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[484,18112+2]..[485,18185+24])
              Pexp_record
              [
                "uid" (lib/shape.ml[484,18112+4]..[484,18112+7])
                  expression (lib/shape.ml[484,18112+10]..[484,18112+71])
                    Pexp_construct "Some" (lib/shape.ml[484,18112+10]..[484,18112+14])
                    Some
                      expression (lib/shape.ml[484,18112+15]..[484,18112+71])
                        Pexp_apply
                        expression (lib/shape.ml[484,18112+16]..[484,18112+42])
                          Pexp_ident "Uid.of_compilation_unit_id" (lib/shape.ml[484,18112+16]..[484,18112+42])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[484,18112+43]..[484,18112+70])
                              Pexp_apply
                              expression (lib/shape.ml[484,18112+44]..[484,18112+67])
                                Pexp_ident "Ident.create_persistent" (lib/shape.ml[484,18112+44]..[484,18112+67])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[484,18112+68]..[484,18112+69])
                                    Pexp_ident "s" (lib/shape.ml[484,18112+68]..[484,18112+69])
                              ]
                        ]
                "desc" (lib/shape.ml[485,18185+4]..[485,18185+8])
                  expression (lib/shape.ml[485,18185+11]..[485,18185+22])
                    Pexp_construct "Comp_unit" (lib/shape.ml[485,18185+11]..[485,18185+20])
                    Some
                      expression (lib/shape.ml[485,18185+21]..[485,18185+22])
                        Pexp_ident "s" (lib/shape.ml[485,18185+21]..[485,18185+22])
              ]
              None
    ]
  structure_item (lib/shape.ml[487,18211+0]..[487,18211+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[487,18211+4]..[487,18211+19])
          Ppat_var "leaf_for_unpack" (lib/shape.ml[487,18211+4]..[487,18211+19])
        expression (lib/shape.ml[487,18211+22]..[487,18211+49])
          Pexp_record
          [
            "uid" (lib/shape.ml[487,18211+24]..[487,18211+27])
              expression (lib/shape.ml[487,18211+30]..[487,18211+34])
                Pexp_construct "None" (lib/shape.ml[487,18211+30]..[487,18211+34])
                None
            "desc" (lib/shape.ml[487,18211+36]..[487,18211+40])
              expression (lib/shape.ml[487,18211+43]..[487,18211+47])
                Pexp_construct "Leaf" (lib/shape.ml[487,18211+43]..[487,18211+47])
                None
          ]
          None
    ]
  structure_item (lib/shape.ml[489,18262+0]..[492,18347+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[489,18262+4]..[489,18262+19])
          Ppat_var "set_uid_if_none" (lib/shape.ml[489,18262+4]..[489,18262+19])
        expression (lib/shape.ml[489,18262+20]..[492,18347+10]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[489,18262+20]..[489,18262+21])
              Nolabel
              None
              pattern (lib/shape.ml[489,18262+20]..[489,18262+21])
                Ppat_var "t" (lib/shape.ml[489,18262+20]..[489,18262+21])
            Pparam_val (lib/shape.ml[489,18262+22]..[489,18262+25])
              Nolabel
              None
              pattern (lib/shape.ml[489,18262+22]..[489,18262+25])
                Ppat_var "uid" (lib/shape.ml[489,18262+22]..[489,18262+25])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[490,18290+2]..[492,18347+10])
              Pexp_match
              expression (lib/shape.ml[490,18290+8]..[490,18290+13])
                Pexp_field
                expression (lib/shape.ml[490,18290+8]..[490,18290+9])
                  Pexp_ident "t" (lib/shape.ml[490,18290+8]..[490,18290+9])
                "uid" (lib/shape.ml[490,18290+10]..[490,18290+13])
              [
                <case>
                  pattern (lib/shape.ml[491,18309+4]..[491,18309+8])
                    Ppat_construct "None" (lib/shape.ml[491,18309+4]..[491,18309+8])
                    None
                  expression (lib/shape.ml[491,18309+12]..[491,18309+37])
                    Pexp_record
                    [
                      "uid" (lib/shape.ml[491,18309+21]..[491,18309+24])
                        expression (lib/shape.ml[491,18309+27]..[491,18309+35])
                          Pexp_construct "Some" (lib/shape.ml[491,18309+27]..[491,18309+31])
                          Some
                            expression (lib/shape.ml[491,18309+32]..[491,18309+35])
                              Pexp_ident "uid" (lib/shape.ml[491,18309+32]..[491,18309+35])
                    ]
                    Some
                      expression (lib/shape.ml[491,18309+14]..[491,18309+15])
                        Pexp_ident "t" (lib/shape.ml[491,18309+14]..[491,18309+15])
                <case>
                  pattern (lib/shape.ml[492,18347+4]..[492,18347+5])
                    Ppat_any
                  expression (lib/shape.ml[492,18347+9]..[492,18347+10])
                    Pexp_ident "t" (lib/shape.ml[492,18347+9]..[492,18347+10])
              ]
    ]
  structure_item (lib/shape.ml[494,18359+0]..[538,19846+3])
    Pstr_module
    "Map" (lib/shape.ml[494,18359+7]..[494,18359+10])
      module_expr (lib/shape.ml[494,18359+13]..[538,19846+3])
        Pmod_structure
        [
          structure_item (lib/shape.ml[495,18379+2]..[495,18379+16])
            Pstr_type Rec
            [
              type_declaration "shape" (lib/shape.ml[495,18379+7]..[495,18379+12]) (lib/shape.ml[495,18379+2]..[495,18379+16])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lib/shape.ml[495,18379+15]..[495,18379+16])
                      Ptyp_constr "t" (lib/shape.ml[495,18379+15]..[495,18379+16])
                      []
            ]
          structure_item (lib/shape.ml[496,18396+2]..[496,18396+30])
            Pstr_type Nonrec
            [
              type_declaration "t" (lib/shape.ml[496,18396+14]..[496,18396+15]) (lib/shape.ml[496,18396+2]..[496,18396+30])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lib/shape.ml[496,18396+18]..[496,18396+30])
                      Ptyp_constr "Item.Map.t" (lib/shape.ml[496,18396+20]..[496,18396+30])
                      [
                        core_type (lib/shape.ml[496,18396+18]..[496,18396+19])
                          Ptyp_constr "t" (lib/shape.ml[496,18396+18]..[496,18396+19])
                          []
                      ]
            ]
          structure_item (lib/shape.ml[498,18428+2]..[498,18428+28])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[498,18428+6]..[498,18428+11])
                  Ppat_var "empty" (lib/shape.ml[498,18428+6]..[498,18428+11])
                expression (lib/shape.ml[498,18428+14]..[498,18428+28])
                  Pexp_ident "Item.Map.empty" (lib/shape.ml[498,18428+14]..[498,18428+28])
            ]
          structure_item (lib/shape.ml[500,18458+2]..[500,18458+50])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[500,18458+6]..[500,18458+9])
                  Ppat_var "add" (lib/shape.ml[500,18458+6]..[500,18458+9])
                expression (lib/shape.ml[500,18458+10]..[500,18458+50]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[500,18458+10]..[500,18458+11])
                      Nolabel
                      None
                      pattern (lib/shape.ml[500,18458+10]..[500,18458+11])
                        Ppat_var "t" (lib/shape.ml[500,18458+10]..[500,18458+11])
                    Pparam_val (lib/shape.ml[500,18458+12]..[500,18458+16])
                      Nolabel
                      None
                      pattern (lib/shape.ml[500,18458+12]..[500,18458+16])
                        Ppat_var "item" (lib/shape.ml[500,18458+12]..[500,18458+16])
                    Pparam_val (lib/shape.ml[500,18458+17]..[500,18458+22])
                      Nolabel
                      None
                      pattern (lib/shape.ml[500,18458+17]..[500,18458+22])
                        Ppat_var "shape" (lib/shape.ml[500,18458+17]..[500,18458+22])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[500,18458+25]..[500,18458+50])
                      Pexp_apply
                      expression (lib/shape.ml[500,18458+25]..[500,18458+37])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[500,18458+25]..[500,18458+37])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[500,18458+38]..[500,18458+42])
                            Pexp_ident "item" (lib/shape.ml[500,18458+38]..[500,18458+42])
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[500,18458+43]..[500,18458+48])
                            Pexp_ident "shape" (lib/shape.ml[500,18458+43]..[500,18458+48])
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[500,18458+49]..[500,18458+50])
                            Pexp_ident "t" (lib/shape.ml[500,18458+49]..[500,18458+50])
                      ]
            ]
          structure_item (lib/shape.ml[502,18510+2]..[502,18510+68])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[502,18510+6]..[502,18510+15])
                  Ppat_var "add_value" (lib/shape.ml[502,18510+6]..[502,18510+15])
                expression (lib/shape.ml[502,18510+16]..[502,18510+68]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[502,18510+16]..[502,18510+17])
                      Nolabel
                      None
                      pattern (lib/shape.ml[502,18510+16]..[502,18510+17])
                        Ppat_var "t" (lib/shape.ml[502,18510+16]..[502,18510+17])
                    Pparam_val (lib/shape.ml[502,18510+18]..[502,18510+20])
                      Nolabel
                      None
                      pattern (lib/shape.ml[502,18510+18]..[502,18510+20])
                        Ppat_var "id" (lib/shape.ml[502,18510+18]..[502,18510+20])
                    Pparam_val (lib/shape.ml[502,18510+21]..[502,18510+24])
                      Nolabel
                      None
                      pattern (lib/shape.ml[502,18510+21]..[502,18510+24])
                        Ppat_var "uid" (lib/shape.ml[502,18510+21]..[502,18510+24])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[502,18510+27]..[502,18510+68])
                      Pexp_apply
                      expression (lib/shape.ml[502,18510+27]..[502,18510+39])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[502,18510+27]..[502,18510+39])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[502,18510+40]..[502,18510+55])
                            Pexp_apply
                            expression (lib/shape.ml[502,18510+41]..[502,18510+51])
                              Pexp_ident "Item.value" (lib/shape.ml[502,18510+41]..[502,18510+51])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[502,18510+52]..[502,18510+54])
                                  Pexp_ident "id" (lib/shape.ml[502,18510+52]..[502,18510+54])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[502,18510+56]..[502,18510+66])
                            Pexp_apply
                            expression (lib/shape.ml[502,18510+57]..[502,18510+61])
                              Pexp_ident "leaf" (lib/shape.ml[502,18510+57]..[502,18510+61])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[502,18510+62]..[502,18510+65])
                                  Pexp_ident "uid" (lib/shape.ml[502,18510+62]..[502,18510+65])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[502,18510+67]..[502,18510+68])
                            Pexp_ident "t" (lib/shape.ml[502,18510+67]..[502,18510+68])
                      ]
            ]
          structure_item (lib/shape.ml[503,18579+2]..[505,18645+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[503,18579+6]..[503,18579+20])
                  Ppat_var "add_value_proj" (lib/shape.ml[503,18579+6]..[503,18579+20])
                expression (lib/shape.ml[503,18579+21]..[505,18645+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[503,18579+21]..[503,18579+22])
                      Nolabel
                      None
                      pattern (lib/shape.ml[503,18579+21]..[503,18579+22])
                        Ppat_var "t" (lib/shape.ml[503,18579+21]..[503,18579+22])
                    Pparam_val (lib/shape.ml[503,18579+23]..[503,18579+25])
                      Nolabel
                      None
                      pattern (lib/shape.ml[503,18579+23]..[503,18579+25])
                        Ppat_var "id" (lib/shape.ml[503,18579+23]..[503,18579+25])
                    Pparam_val (lib/shape.ml[503,18579+26]..[503,18579+31])
                      Nolabel
                      None
                      pattern (lib/shape.ml[503,18579+26]..[503,18579+31])
                        Ppat_var "shape" (lib/shape.ml[503,18579+26]..[503,18579+31])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[504,18613+4]..[505,18645+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[504,18613+8]..[504,18613+12])
                            Ppat_var "item" (lib/shape.ml[504,18613+8]..[504,18613+12])
                          expression (lib/shape.ml[504,18613+15]..[504,18613+28])
                            Pexp_apply
                            expression (lib/shape.ml[504,18613+15]..[504,18613+25])
                              Pexp_ident "Item.value" (lib/shape.ml[504,18613+15]..[504,18613+25])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[504,18613+26]..[504,18613+28])
                                  Pexp_ident "id" (lib/shape.ml[504,18613+26]..[504,18613+28])
                            ]
                      ]
                      expression (lib/shape.ml[505,18645+4]..[505,18645+41])
                        Pexp_apply
                        expression (lib/shape.ml[505,18645+4]..[505,18645+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[505,18645+4]..[505,18645+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[505,18645+17]..[505,18645+21])
                              Pexp_ident "item" (lib/shape.ml[505,18645+17]..[505,18645+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[505,18645+22]..[505,18645+39])
                              Pexp_apply
                              expression (lib/shape.ml[505,18645+23]..[505,18645+27])
                                Pexp_ident "proj" (lib/shape.ml[505,18645+23]..[505,18645+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[505,18645+28]..[505,18645+33])
                                    Pexp_ident "shape" (lib/shape.ml[505,18645+28]..[505,18645+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[505,18645+34]..[505,18645+38])
                                    Pexp_ident "item" (lib/shape.ml[505,18645+34]..[505,18645+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[505,18645+40]..[505,18645+41])
                              Pexp_ident "t" (lib/shape.ml[505,18645+40]..[505,18645+41])
                        ]
            ]
          structure_item (lib/shape.ml[507,18688+2]..[507,18688+67])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[507,18688+6]..[507,18688+14])
                  Ppat_var "add_type" (lib/shape.ml[507,18688+6]..[507,18688+14])
                expression (lib/shape.ml[507,18688+15]..[507,18688+67]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[507,18688+15]..[507,18688+16])
                      Nolabel
                      None
                      pattern (lib/shape.ml[507,18688+15]..[507,18688+16])
                        Ppat_var "t" (lib/shape.ml[507,18688+15]..[507,18688+16])
                    Pparam_val (lib/shape.ml[507,18688+17]..[507,18688+19])
                      Nolabel
                      None
                      pattern (lib/shape.ml[507,18688+17]..[507,18688+19])
                        Ppat_var "id" (lib/shape.ml[507,18688+17]..[507,18688+19])
                    Pparam_val (lib/shape.ml[507,18688+20]..[507,18688+23])
                      Nolabel
                      None
                      pattern (lib/shape.ml[507,18688+20]..[507,18688+23])
                        Ppat_var "uid" (lib/shape.ml[507,18688+20]..[507,18688+23])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[507,18688+26]..[507,18688+67])
                      Pexp_apply
                      expression (lib/shape.ml[507,18688+26]..[507,18688+38])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[507,18688+26]..[507,18688+38])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[507,18688+39]..[507,18688+54])
                            Pexp_apply
                            expression (lib/shape.ml[507,18688+40]..[507,18688+50])
                              Pexp_ident "Item.type_" (lib/shape.ml[507,18688+40]..[507,18688+50])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[507,18688+51]..[507,18688+53])
                                  Pexp_ident "id" (lib/shape.ml[507,18688+51]..[507,18688+53])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[507,18688+55]..[507,18688+65])
                            Pexp_apply
                            expression (lib/shape.ml[507,18688+56]..[507,18688+60])
                              Pexp_ident "leaf" (lib/shape.ml[507,18688+56]..[507,18688+60])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[507,18688+61]..[507,18688+64])
                                  Pexp_ident "uid" (lib/shape.ml[507,18688+61]..[507,18688+64])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[507,18688+66]..[507,18688+67])
                            Pexp_ident "t" (lib/shape.ml[507,18688+66]..[507,18688+67])
                      ]
            ]
          structure_item (lib/shape.ml[508,18756+2]..[510,18821+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[508,18756+6]..[508,18756+19])
                  Ppat_var "add_type_proj" (lib/shape.ml[508,18756+6]..[508,18756+19])
                expression (lib/shape.ml[508,18756+20]..[510,18821+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[508,18756+20]..[508,18756+21])
                      Nolabel
                      None
                      pattern (lib/shape.ml[508,18756+20]..[508,18756+21])
                        Ppat_var "t" (lib/shape.ml[508,18756+20]..[508,18756+21])
                    Pparam_val (lib/shape.ml[508,18756+22]..[508,18756+24])
                      Nolabel
                      None
                      pattern (lib/shape.ml[508,18756+22]..[508,18756+24])
                        Ppat_var "id" (lib/shape.ml[508,18756+22]..[508,18756+24])
                    Pparam_val (lib/shape.ml[508,18756+25]..[508,18756+30])
                      Nolabel
                      None
                      pattern (lib/shape.ml[508,18756+25]..[508,18756+30])
                        Ppat_var "shape" (lib/shape.ml[508,18756+25]..[508,18756+30])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[509,18789+4]..[510,18821+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[509,18789+8]..[509,18789+12])
                            Ppat_var "item" (lib/shape.ml[509,18789+8]..[509,18789+12])
                          expression (lib/shape.ml[509,18789+15]..[509,18789+28])
                            Pexp_apply
                            expression (lib/shape.ml[509,18789+15]..[509,18789+25])
                              Pexp_ident "Item.type_" (lib/shape.ml[509,18789+15]..[509,18789+25])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[509,18789+26]..[509,18789+28])
                                  Pexp_ident "id" (lib/shape.ml[509,18789+26]..[509,18789+28])
                            ]
                      ]
                      expression (lib/shape.ml[510,18821+4]..[510,18821+41])
                        Pexp_apply
                        expression (lib/shape.ml[510,18821+4]..[510,18821+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[510,18821+4]..[510,18821+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[510,18821+17]..[510,18821+21])
                              Pexp_ident "item" (lib/shape.ml[510,18821+17]..[510,18821+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[510,18821+22]..[510,18821+39])
                              Pexp_apply
                              expression (lib/shape.ml[510,18821+23]..[510,18821+27])
                                Pexp_ident "proj" (lib/shape.ml[510,18821+23]..[510,18821+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[510,18821+28]..[510,18821+33])
                                    Pexp_ident "shape" (lib/shape.ml[510,18821+28]..[510,18821+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[510,18821+34]..[510,18821+38])
                                    Pexp_ident "item" (lib/shape.ml[510,18821+34]..[510,18821+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[510,18821+40]..[510,18821+41])
                              Pexp_ident "t" (lib/shape.ml[510,18821+40]..[510,18821+41])
                        ]
            ]
          structure_item (lib/shape.ml[512,18864+2]..[512,18864+68])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[512,18864+6]..[512,18864+16])
                  Ppat_var "add_module" (lib/shape.ml[512,18864+6]..[512,18864+16])
                expression (lib/shape.ml[512,18864+17]..[512,18864+68]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[512,18864+17]..[512,18864+18])
                      Nolabel
                      None
                      pattern (lib/shape.ml[512,18864+17]..[512,18864+18])
                        Ppat_var "t" (lib/shape.ml[512,18864+17]..[512,18864+18])
                    Pparam_val (lib/shape.ml[512,18864+19]..[512,18864+21])
                      Nolabel
                      None
                      pattern (lib/shape.ml[512,18864+19]..[512,18864+21])
                        Ppat_var "id" (lib/shape.ml[512,18864+19]..[512,18864+21])
                    Pparam_val (lib/shape.ml[512,18864+22]..[512,18864+27])
                      Nolabel
                      None
                      pattern (lib/shape.ml[512,18864+22]..[512,18864+27])
                        Ppat_var "shape" (lib/shape.ml[512,18864+22]..[512,18864+27])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[512,18864+30]..[512,18864+68])
                      Pexp_apply
                      expression (lib/shape.ml[512,18864+30]..[512,18864+42])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[512,18864+30]..[512,18864+42])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[512,18864+43]..[512,18864+60])
                            Pexp_apply
                            expression (lib/shape.ml[512,18864+44]..[512,18864+56])
                              Pexp_ident "Item.module_" (lib/shape.ml[512,18864+44]..[512,18864+56])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[512,18864+57]..[512,18864+59])
                                  Pexp_ident "id" (lib/shape.ml[512,18864+57]..[512,18864+59])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[512,18864+61]..[512,18864+66])
                            Pexp_ident "shape" (lib/shape.ml[512,18864+61]..[512,18864+66])
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[512,18864+67]..[512,18864+68])
                            Pexp_ident "t" (lib/shape.ml[512,18864+67]..[512,18864+68])
                      ]
            ]
          structure_item (lib/shape.ml[513,18933+2]..[515,19002+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[513,18933+6]..[513,18933+21])
                  Ppat_var "add_module_proj" (lib/shape.ml[513,18933+6]..[513,18933+21])
                expression (lib/shape.ml[513,18933+22]..[515,19002+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[513,18933+22]..[513,18933+23])
                      Nolabel
                      None
                      pattern (lib/shape.ml[513,18933+22]..[513,18933+23])
                        Ppat_var "t" (lib/shape.ml[513,18933+22]..[513,18933+23])
                    Pparam_val (lib/shape.ml[513,18933+24]..[513,18933+26])
                      Nolabel
                      None
                      pattern (lib/shape.ml[513,18933+24]..[513,18933+26])
                        Ppat_var "id" (lib/shape.ml[513,18933+24]..[513,18933+26])
                    Pparam_val (lib/shape.ml[513,18933+27]..[513,18933+32])
                      Nolabel
                      None
                      pattern (lib/shape.ml[513,18933+27]..[513,18933+32])
                        Ppat_var "shape" (lib/shape.ml[513,18933+27]..[513,18933+32])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[514,18968+4]..[515,19002+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[514,18968+8]..[514,18968+12])
                            Ppat_var "item" (lib/shape.ml[514,18968+8]..[514,18968+12])
                          expression (lib/shape.ml[514,18968+15]..[514,18968+30])
                            Pexp_apply
                            expression (lib/shape.ml[514,18968+15]..[514,18968+27])
                              Pexp_ident "Item.module_" (lib/shape.ml[514,18968+15]..[514,18968+27])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[514,18968+28]..[514,18968+30])
                                  Pexp_ident "id" (lib/shape.ml[514,18968+28]..[514,18968+30])
                            ]
                      ]
                      expression (lib/shape.ml[515,19002+4]..[515,19002+41])
                        Pexp_apply
                        expression (lib/shape.ml[515,19002+4]..[515,19002+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[515,19002+4]..[515,19002+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[515,19002+17]..[515,19002+21])
                              Pexp_ident "item" (lib/shape.ml[515,19002+17]..[515,19002+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[515,19002+22]..[515,19002+39])
                              Pexp_apply
                              expression (lib/shape.ml[515,19002+23]..[515,19002+27])
                                Pexp_ident "proj" (lib/shape.ml[515,19002+23]..[515,19002+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[515,19002+28]..[515,19002+33])
                                    Pexp_ident "shape" (lib/shape.ml[515,19002+28]..[515,19002+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[515,19002+34]..[515,19002+38])
                                    Pexp_ident "item" (lib/shape.ml[515,19002+34]..[515,19002+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[515,19002+40]..[515,19002+41])
                              Pexp_ident "t" (lib/shape.ml[515,19002+40]..[515,19002+41])
                        ]
            ]
          structure_item (lib/shape.ml[517,19045+2]..[518,19078+51])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[517,19045+6]..[517,19045+21])
                  Ppat_var "add_module_type" (lib/shape.ml[517,19045+6]..[517,19045+21])
                expression (lib/shape.ml[517,19045+22]..[518,19078+51]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[517,19045+22]..[517,19045+23])
                      Nolabel
                      None
                      pattern (lib/shape.ml[517,19045+22]..[517,19045+23])
                        Ppat_var "t" (lib/shape.ml[517,19045+22]..[517,19045+23])
                    Pparam_val (lib/shape.ml[517,19045+24]..[517,19045+26])
                      Nolabel
                      None
                      pattern (lib/shape.ml[517,19045+24]..[517,19045+26])
                        Ppat_var "id" (lib/shape.ml[517,19045+24]..[517,19045+26])
                    Pparam_val (lib/shape.ml[517,19045+27]..[517,19045+30])
                      Nolabel
                      None
                      pattern (lib/shape.ml[517,19045+27]..[517,19045+30])
                        Ppat_var "uid" (lib/shape.ml[517,19045+27]..[517,19045+30])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[518,19078+4]..[518,19078+51])
                      Pexp_apply
                      expression (lib/shape.ml[518,19078+4]..[518,19078+16])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[518,19078+4]..[518,19078+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[518,19078+17]..[518,19078+38])
                            Pexp_apply
                            expression (lib/shape.ml[518,19078+18]..[518,19078+34])
                              Pexp_ident "Item.module_type" (lib/shape.ml[518,19078+18]..[518,19078+34])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[518,19078+35]..[518,19078+37])
                                  Pexp_ident "id" (lib/shape.ml[518,19078+35]..[518,19078+37])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[518,19078+39]..[518,19078+49])
                            Pexp_apply
                            expression (lib/shape.ml[518,19078+40]..[518,19078+44])
                              Pexp_ident "leaf" (lib/shape.ml[518,19078+40]..[518,19078+44])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[518,19078+45]..[518,19078+48])
                                  Pexp_ident "uid" (lib/shape.ml[518,19078+45]..[518,19078+48])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[518,19078+50]..[518,19078+51])
                            Pexp_ident "t" (lib/shape.ml[518,19078+50]..[518,19078+51])
                      ]
            ]
          structure_item (lib/shape.ml[519,19130+2]..[521,19208+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[519,19130+6]..[519,19130+26])
                  Ppat_var "add_module_type_proj" (lib/shape.ml[519,19130+6]..[519,19130+26])
                expression (lib/shape.ml[519,19130+27]..[521,19208+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[519,19130+27]..[519,19130+28])
                      Nolabel
                      None
                      pattern (lib/shape.ml[519,19130+27]..[519,19130+28])
                        Ppat_var "t" (lib/shape.ml[519,19130+27]..[519,19130+28])
                    Pparam_val (lib/shape.ml[519,19130+29]..[519,19130+31])
                      Nolabel
                      None
                      pattern (lib/shape.ml[519,19130+29]..[519,19130+31])
                        Ppat_var "id" (lib/shape.ml[519,19130+29]..[519,19130+31])
                    Pparam_val (lib/shape.ml[519,19130+32]..[519,19130+37])
                      Nolabel
                      None
                      pattern (lib/shape.ml[519,19130+32]..[519,19130+37])
                        Ppat_var "shape" (lib/shape.ml[519,19130+32]..[519,19130+37])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[520,19170+4]..[521,19208+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[520,19170+8]..[520,19170+12])
                            Ppat_var "item" (lib/shape.ml[520,19170+8]..[520,19170+12])
                          expression (lib/shape.ml[520,19170+15]..[520,19170+34])
                            Pexp_apply
                            expression (lib/shape.ml[520,19170+15]..[520,19170+31])
                              Pexp_ident "Item.module_type" (lib/shape.ml[520,19170+15]..[520,19170+31])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[520,19170+32]..[520,19170+34])
                                  Pexp_ident "id" (lib/shape.ml[520,19170+32]..[520,19170+34])
                            ]
                      ]
                      expression (lib/shape.ml[521,19208+4]..[521,19208+41])
                        Pexp_apply
                        expression (lib/shape.ml[521,19208+4]..[521,19208+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[521,19208+4]..[521,19208+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[521,19208+17]..[521,19208+21])
                              Pexp_ident "item" (lib/shape.ml[521,19208+17]..[521,19208+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[521,19208+22]..[521,19208+39])
                              Pexp_apply
                              expression (lib/shape.ml[521,19208+23]..[521,19208+27])
                                Pexp_ident "proj" (lib/shape.ml[521,19208+23]..[521,19208+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[521,19208+28]..[521,19208+33])
                                    Pexp_ident "shape" (lib/shape.ml[521,19208+28]..[521,19208+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[521,19208+34]..[521,19208+38])
                                    Pexp_ident "item" (lib/shape.ml[521,19208+34]..[521,19208+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[521,19208+40]..[521,19208+41])
                              Pexp_ident "t" (lib/shape.ml[521,19208+40]..[521,19208+41])
                        ]
            ]
          structure_item (lib/shape.ml[523,19251+2]..[524,19280+61])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[523,19251+6]..[523,19251+17])
                  Ppat_var "add_extcons" (lib/shape.ml[523,19251+6]..[523,19251+17])
                expression (lib/shape.ml[523,19251+18]..[524,19280+61]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[523,19251+18]..[523,19251+19])
                      Nolabel
                      None
                      pattern (lib/shape.ml[523,19251+18]..[523,19251+19])
                        Ppat_var "t" (lib/shape.ml[523,19251+18]..[523,19251+19])
                    Pparam_val (lib/shape.ml[523,19251+20]..[523,19251+22])
                      Nolabel
                      None
                      pattern (lib/shape.ml[523,19251+20]..[523,19251+22])
                        Ppat_var "id" (lib/shape.ml[523,19251+20]..[523,19251+22])
                    Pparam_val (lib/shape.ml[523,19251+23]..[523,19251+26])
                      Nolabel
                      None
                      pattern (lib/shape.ml[523,19251+23]..[523,19251+26])
                        Ppat_var "uid" (lib/shape.ml[523,19251+23]..[523,19251+26])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[524,19280+4]..[524,19280+61])
                      Pexp_apply
                      expression (lib/shape.ml[524,19280+4]..[524,19280+16])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[524,19280+4]..[524,19280+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[524,19280+17]..[524,19280+48])
                            Pexp_apply
                            expression (lib/shape.ml[524,19280+18]..[524,19280+44])
                              Pexp_ident "Item.extension_constructor" (lib/shape.ml[524,19280+18]..[524,19280+44])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[524,19280+45]..[524,19280+47])
                                  Pexp_ident "id" (lib/shape.ml[524,19280+45]..[524,19280+47])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[524,19280+49]..[524,19280+59])
                            Pexp_apply
                            expression (lib/shape.ml[524,19280+50]..[524,19280+54])
                              Pexp_ident "leaf" (lib/shape.ml[524,19280+50]..[524,19280+54])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[524,19280+55]..[524,19280+58])
                                  Pexp_ident "uid" (lib/shape.ml[524,19280+55]..[524,19280+58])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[524,19280+60]..[524,19280+61])
                            Pexp_ident "t" (lib/shape.ml[524,19280+60]..[524,19280+61])
                      ]
            ]
          structure_item (lib/shape.ml[525,19342+2]..[527,19426+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[525,19342+6]..[525,19342+22])
                  Ppat_var "add_extcons_proj" (lib/shape.ml[525,19342+6]..[525,19342+22])
                expression (lib/shape.ml[525,19342+23]..[527,19426+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[525,19342+23]..[525,19342+24])
                      Nolabel
                      None
                      pattern (lib/shape.ml[525,19342+23]..[525,19342+24])
                        Ppat_var "t" (lib/shape.ml[525,19342+23]..[525,19342+24])
                    Pparam_val (lib/shape.ml[525,19342+25]..[525,19342+27])
                      Nolabel
                      None
                      pattern (lib/shape.ml[525,19342+25]..[525,19342+27])
                        Ppat_var "id" (lib/shape.ml[525,19342+25]..[525,19342+27])
                    Pparam_val (lib/shape.ml[525,19342+28]..[525,19342+33])
                      Nolabel
                      None
                      pattern (lib/shape.ml[525,19342+28]..[525,19342+33])
                        Ppat_var "shape" (lib/shape.ml[525,19342+28]..[525,19342+33])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[526,19378+4]..[527,19426+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[526,19378+8]..[526,19378+12])
                            Ppat_var "item" (lib/shape.ml[526,19378+8]..[526,19378+12])
                          expression (lib/shape.ml[526,19378+15]..[526,19378+44])
                            Pexp_apply
                            expression (lib/shape.ml[526,19378+15]..[526,19378+41])
                              Pexp_ident "Item.extension_constructor" (lib/shape.ml[526,19378+15]..[526,19378+41])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[526,19378+42]..[526,19378+44])
                                  Pexp_ident "id" (lib/shape.ml[526,19378+42]..[526,19378+44])
                            ]
                      ]
                      expression (lib/shape.ml[527,19426+4]..[527,19426+41])
                        Pexp_apply
                        expression (lib/shape.ml[527,19426+4]..[527,19426+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[527,19426+4]..[527,19426+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[527,19426+17]..[527,19426+21])
                              Pexp_ident "item" (lib/shape.ml[527,19426+17]..[527,19426+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[527,19426+22]..[527,19426+39])
                              Pexp_apply
                              expression (lib/shape.ml[527,19426+23]..[527,19426+27])
                                Pexp_ident "proj" (lib/shape.ml[527,19426+23]..[527,19426+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[527,19426+28]..[527,19426+33])
                                    Pexp_ident "shape" (lib/shape.ml[527,19426+28]..[527,19426+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[527,19426+34]..[527,19426+38])
                                    Pexp_ident "item" (lib/shape.ml[527,19426+34]..[527,19426+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[527,19426+40]..[527,19426+41])
                              Pexp_ident "t" (lib/shape.ml[527,19426+40]..[527,19426+41])
                        ]
            ]
          structure_item (lib/shape.ml[529,19469+2]..[529,19469+69])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[529,19469+6]..[529,19469+15])
                  Ppat_var "add_class" (lib/shape.ml[529,19469+6]..[529,19469+15])
                expression (lib/shape.ml[529,19469+16]..[529,19469+69]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[529,19469+16]..[529,19469+17])
                      Nolabel
                      None
                      pattern (lib/shape.ml[529,19469+16]..[529,19469+17])
                        Ppat_var "t" (lib/shape.ml[529,19469+16]..[529,19469+17])
                    Pparam_val (lib/shape.ml[529,19469+18]..[529,19469+20])
                      Nolabel
                      None
                      pattern (lib/shape.ml[529,19469+18]..[529,19469+20])
                        Ppat_var "id" (lib/shape.ml[529,19469+18]..[529,19469+20])
                    Pparam_val (lib/shape.ml[529,19469+21]..[529,19469+24])
                      Nolabel
                      None
                      pattern (lib/shape.ml[529,19469+21]..[529,19469+24])
                        Ppat_var "uid" (lib/shape.ml[529,19469+21]..[529,19469+24])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[529,19469+27]..[529,19469+69])
                      Pexp_apply
                      expression (lib/shape.ml[529,19469+27]..[529,19469+39])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[529,19469+27]..[529,19469+39])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[529,19469+40]..[529,19469+56])
                            Pexp_apply
                            expression (lib/shape.ml[529,19469+41]..[529,19469+52])
                              Pexp_ident "Item.class_" (lib/shape.ml[529,19469+41]..[529,19469+52])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[529,19469+53]..[529,19469+55])
                                  Pexp_ident "id" (lib/shape.ml[529,19469+53]..[529,19469+55])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[529,19469+57]..[529,19469+67])
                            Pexp_apply
                            expression (lib/shape.ml[529,19469+58]..[529,19469+62])
                              Pexp_ident "leaf" (lib/shape.ml[529,19469+58]..[529,19469+62])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[529,19469+63]..[529,19469+66])
                                  Pexp_ident "uid" (lib/shape.ml[529,19469+63]..[529,19469+66])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[529,19469+68]..[529,19469+69])
                            Pexp_ident "t" (lib/shape.ml[529,19469+68]..[529,19469+69])
                      ]
            ]
          structure_item (lib/shape.ml[530,19539+2]..[532,19606+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[530,19539+6]..[530,19539+20])
                  Ppat_var "add_class_proj" (lib/shape.ml[530,19539+6]..[530,19539+20])
                expression (lib/shape.ml[530,19539+21]..[532,19606+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[530,19539+21]..[530,19539+22])
                      Nolabel
                      None
                      pattern (lib/shape.ml[530,19539+21]..[530,19539+22])
                        Ppat_var "t" (lib/shape.ml[530,19539+21]..[530,19539+22])
                    Pparam_val (lib/shape.ml[530,19539+23]..[530,19539+25])
                      Nolabel
                      None
                      pattern (lib/shape.ml[530,19539+23]..[530,19539+25])
                        Ppat_var "id" (lib/shape.ml[530,19539+23]..[530,19539+25])
                    Pparam_val (lib/shape.ml[530,19539+26]..[530,19539+31])
                      Nolabel
                      None
                      pattern (lib/shape.ml[530,19539+26]..[530,19539+31])
                        Ppat_var "shape" (lib/shape.ml[530,19539+26]..[530,19539+31])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[531,19573+4]..[532,19606+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[531,19573+8]..[531,19573+12])
                            Ppat_var "item" (lib/shape.ml[531,19573+8]..[531,19573+12])
                          expression (lib/shape.ml[531,19573+15]..[531,19573+29])
                            Pexp_apply
                            expression (lib/shape.ml[531,19573+15]..[531,19573+26])
                              Pexp_ident "Item.class_" (lib/shape.ml[531,19573+15]..[531,19573+26])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[531,19573+27]..[531,19573+29])
                                  Pexp_ident "id" (lib/shape.ml[531,19573+27]..[531,19573+29])
                            ]
                      ]
                      expression (lib/shape.ml[532,19606+4]..[532,19606+41])
                        Pexp_apply
                        expression (lib/shape.ml[532,19606+4]..[532,19606+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[532,19606+4]..[532,19606+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[532,19606+17]..[532,19606+21])
                              Pexp_ident "item" (lib/shape.ml[532,19606+17]..[532,19606+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[532,19606+22]..[532,19606+39])
                              Pexp_apply
                              expression (lib/shape.ml[532,19606+23]..[532,19606+27])
                                Pexp_ident "proj" (lib/shape.ml[532,19606+23]..[532,19606+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[532,19606+28]..[532,19606+33])
                                    Pexp_ident "shape" (lib/shape.ml[532,19606+28]..[532,19606+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[532,19606+34]..[532,19606+38])
                                    Pexp_ident "item" (lib/shape.ml[532,19606+34]..[532,19606+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[532,19606+40]..[532,19606+41])
                              Pexp_ident "t" (lib/shape.ml[532,19606+40]..[532,19606+41])
                        ]
            ]
          structure_item (lib/shape.ml[534,19649+2]..[534,19649+78])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[534,19649+6]..[534,19649+20])
                  Ppat_var "add_class_type" (lib/shape.ml[534,19649+6]..[534,19649+20])
                expression (lib/shape.ml[534,19649+21]..[534,19649+78]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[534,19649+21]..[534,19649+22])
                      Nolabel
                      None
                      pattern (lib/shape.ml[534,19649+21]..[534,19649+22])
                        Ppat_var "t" (lib/shape.ml[534,19649+21]..[534,19649+22])
                    Pparam_val (lib/shape.ml[534,19649+23]..[534,19649+25])
                      Nolabel
                      None
                      pattern (lib/shape.ml[534,19649+23]..[534,19649+25])
                        Ppat_var "id" (lib/shape.ml[534,19649+23]..[534,19649+25])
                    Pparam_val (lib/shape.ml[534,19649+26]..[534,19649+29])
                      Nolabel
                      None
                      pattern (lib/shape.ml[534,19649+26]..[534,19649+29])
                        Ppat_var "uid" (lib/shape.ml[534,19649+26]..[534,19649+29])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[534,19649+32]..[534,19649+78])
                      Pexp_apply
                      expression (lib/shape.ml[534,19649+32]..[534,19649+44])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[534,19649+32]..[534,19649+44])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[534,19649+45]..[534,19649+65])
                            Pexp_apply
                            expression (lib/shape.ml[534,19649+46]..[534,19649+61])
                              Pexp_ident "Item.class_type" (lib/shape.ml[534,19649+46]..[534,19649+61])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[534,19649+62]..[534,19649+64])
                                  Pexp_ident "id" (lib/shape.ml[534,19649+62]..[534,19649+64])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[534,19649+66]..[534,19649+76])
                            Pexp_apply
                            expression (lib/shape.ml[534,19649+67]..[534,19649+71])
                              Pexp_ident "leaf" (lib/shape.ml[534,19649+67]..[534,19649+71])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[534,19649+72]..[534,19649+75])
                                  Pexp_ident "uid" (lib/shape.ml[534,19649+72]..[534,19649+75])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[534,19649+77]..[534,19649+78])
                            Pexp_ident "t" (lib/shape.ml[534,19649+77]..[534,19649+78])
                      ]
            ]
          structure_item (lib/shape.ml[535,19728+2]..[537,19804+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[535,19728+6]..[535,19728+25])
                  Ppat_var "add_class_type_proj" (lib/shape.ml[535,19728+6]..[535,19728+25])
                expression (lib/shape.ml[535,19728+26]..[537,19804+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[535,19728+26]..[535,19728+27])
                      Nolabel
                      None
                      pattern (lib/shape.ml[535,19728+26]..[535,19728+27])
                        Ppat_var "t" (lib/shape.ml[535,19728+26]..[535,19728+27])
                    Pparam_val (lib/shape.ml[535,19728+28]..[535,19728+30])
                      Nolabel
                      None
                      pattern (lib/shape.ml[535,19728+28]..[535,19728+30])
                        Ppat_var "id" (lib/shape.ml[535,19728+28]..[535,19728+30])
                    Pparam_val (lib/shape.ml[535,19728+31]..[535,19728+36])
                      Nolabel
                      None
                      pattern (lib/shape.ml[535,19728+31]..[535,19728+36])
                        Ppat_var "shape" (lib/shape.ml[535,19728+31]..[535,19728+36])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[536,19767+4]..[537,19804+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[536,19767+8]..[536,19767+12])
                            Ppat_var "item" (lib/shape.ml[536,19767+8]..[536,19767+12])
                          expression (lib/shape.ml[536,19767+15]..[536,19767+33])
                            Pexp_apply
                            expression (lib/shape.ml[536,19767+15]..[536,19767+30])
                              Pexp_ident "Item.class_type" (lib/shape.ml[536,19767+15]..[536,19767+30])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[536,19767+31]..[536,19767+33])
                                  Pexp_ident "id" (lib/shape.ml[536,19767+31]..[536,19767+33])
                            ]
                      ]
                      expression (lib/shape.ml[537,19804+4]..[537,19804+41])
                        Pexp_apply
                        expression (lib/shape.ml[537,19804+4]..[537,19804+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[537,19804+4]..[537,19804+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[537,19804+17]..[537,19804+21])
                              Pexp_ident "item" (lib/shape.ml[537,19804+17]..[537,19804+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[537,19804+22]..[537,19804+39])
                              Pexp_apply
                              expression (lib/shape.ml[537,19804+23]..[537,19804+27])
                                Pexp_ident "proj" (lib/shape.ml[537,19804+23]..[537,19804+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[537,19804+28]..[537,19804+33])
                                    Pexp_ident "shape" (lib/shape.ml[537,19804+28]..[537,19804+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[537,19804+34]..[537,19804+38])
                                    Pexp_ident "item" (lib/shape.ml[537,19804+34]..[537,19804+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[537,19804+40]..[537,19804+41])
                              Pexp_ident "t" (lib/shape.ml[537,19804+40]..[537,19804+41])
                        ]
            ]
        ]
]

module Uid =
  struct
    type t =
      | Compilation_unit of string 
      | Item of {
      comp_unit: string ;
      id: int } 
      | Internal 
      | Predef of string 
    let id = ref (-1)
    let reinit () = id := (-1)
    let mk ~current_unit =
      incr id; Item { comp_unit = current_unit; id = (!id) }
    let of_compilation_unit_id id =
      if not (Ident.persistent id)
      then
        Misc.fatal_errorf "Types.Uid.of_compilation_unit_id %S"
          (Ident.name id);
      Compilation_unit (Ident.name id)
    let of_predef_id id =
      if not (Ident.is_predef id)
      then Misc.fatal_errorf "Types.Uid.of_predef_id %S" (Ident.name id);
      Predef (Ident.name id)
    let internal_not_actually_unique = Internal
    let for_actual_declaration = function | Item _ -> true | _ -> false
  end
module Sig_component_kind =
  struct
    type t =
      | Value 
      | Type 
      | Module 
      | Module_type 
      | Extension_constructor 
      | Class 
      | Class_type 
    let to_string =
      function
      | Value -> "value"
      | Type -> "type"
      | Module -> "module"
      | Module_type -> "module type"
      | Extension_constructor -> "extension constructor"
      | Class -> "class"
      | Class_type -> "class type"
    let can_appear_in_types =
      function
      | Value | Extension_constructor -> false
      | Type | Module | Module_type | Class | Class_type -> true
  end
module Item =
  struct
    module T =
      struct
        type t = (string * Sig_component_kind.t)
        let compare = compare
        let make str ns = (str, ns)
        let value id = ((Ident.name id), Sig_component_kind.Value)
        let type_ id = ((Ident.name id), Sig_component_kind.Type)
        let module_ id = ((Ident.name id), Sig_component_kind.Module)
        let module_type id =
          ((Ident.name id), Sig_component_kind.Module_type)
        let extension_constructor id =
          ((Ident.name id), Sig_component_kind.Extension_constructor)
        let class_ id = ((Ident.name id), Sig_component_kind.Class)
        let class_type id = ((Ident.name id), Sig_component_kind.Class_type)
        let print fmt (name, ns) =
          Format.fprintf fmt "%S[%s]" name (Sig_component_kind.to_string ns)
      end
    include T
    module Map = (Map.Make)(T)
  end
type var = Ident.t
type t = {
  uid: Uid.t option ;
  desc: desc }
and desc =
  | Var of var 
  | Abs of var * t 
  | App of t * t 
  | Struct of t Item.Map.t 
  | Leaf 
  | Proj of t * Item.t 
  | Comp_unit of string 
let fresh_var ?(name= "shape-var") uid =
  let var = Ident.create_local name in
  (var, { uid = (Some uid); desc = (Var var) })
let for_unnamed_functor_param = Ident.create_local "()"
let var uid id = { uid = (Some uid); desc = (Var id) }
let abs ?uid var body = { uid; desc = (Abs (var, body)) }
let str ?uid map = { uid; desc = (Struct map) }
let leaf uid = { uid = (Some uid); desc = Leaf }
let proj ?uid t item =
  match t.desc with
  | Leaf -> t
  | Struct map -> (try Item.Map.find item map with | Not_found -> t)
  | _ -> { uid; desc = (Proj (t, item)) }
let app ?uid f ~arg = { uid; desc = (App (f, arg)) }
let decompose_abs t =
  match t.desc with | Abs (x, t) -> Some (x, t) | _ -> None
let dummy_mod = { uid = None; desc = (Struct Item.Map.empty) }
let of_path ~find_shape ~namespace =
  let rec aux : Sig_component_kind.t -> Path.t -> t =
    fun ns ->
      function
      | Pident id -> find_shape ns id
      | Pdot (path, name) -> proj (aux Module path) (name, ns)
      | Papply (p1, p2) -> app (aux Module p1) ~arg:(aux Module p2)
      | Pextra_ty (path, extra) ->
          (match extra with
           | Pcstr_ty _ -> aux Type path
           | Pext_ty -> aux Extension_constructor path) in
  aux namespace
let for_persistent_unit s =
  {
    uid = (Some (Uid.of_compilation_unit_id (Ident.create_persistent s)));
    desc = (Comp_unit s)
  }
let leaf_for_unpack = { uid = None; desc = Leaf }
let set_uid_if_none t uid =
  match t.uid with | None -> { t with uid = (Some uid) } | _ -> t
module Map =
  struct
    type shape = t
    type nonrec t = t Item.Map.t
    let empty = Item.Map.empty
    let add t item shape = Item.Map.add item shape t
    let add_value t id uid = Item.Map.add (Item.value id) (leaf uid) t
    let add_value_proj t id shape =
      let item = Item.value id in Item.Map.add item (proj shape item) t
    let add_type t id uid = Item.Map.add (Item.type_ id) (leaf uid) t
    let add_type_proj t id shape =
      let item = Item.type_ id in Item.Map.add item (proj shape item) t
    let add_module t id shape = Item.Map.add (Item.module_ id) shape t
    let add_module_proj t id shape =
      let item = Item.module_ id in Item.Map.add item (proj shape item) t
    let add_module_type t id uid =
      Item.Map.add (Item.module_type id) (leaf uid) t
    let add_module_type_proj t id shape =
      let item = Item.module_type id in Item.Map.add item (proj shape item) t
    let add_extcons t id uid =
      Item.Map.add (Item.extension_constructor id) (leaf uid) t
    let add_extcons_proj t id shape =
      let item = Item.extension_constructor id in
      Item.Map.add item (proj shape item) t
    let add_class t id uid = Item.Map.add (Item.class_ id) (leaf uid) t
    let add_class_proj t id shape =
      let item = Item.class_ id in Item.Map.add item (proj shape item) t
    let add_class_type t id uid =
      Item.Map.add (Item.class_type id) (leaf uid) t
    let add_class_type_proj t id shape =
      let item = Item.class_type id in Item.Map.add item (proj shape item) t
  end
[
  structure_item (lib/shape.ml[16,1080+0]..lib/shape.ml[64,2482+3])
    Tstr_module
    Uid/521
      module_expr (lib/shape.ml[16,1080+13]..lib/shape.ml[64,2482+3])
        Tmod_structure
        [
          structure_item (lib/shape.ml[17,1100+2]..lib/shape.ml[21,1204+22])
            Tstr_type Rec
            [
              type_declaration t/295 (lib/shape.ml[17,1100+2]..lib/shape.ml[21,1204+22])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_variant
                    [
                      (lib/shape.ml[18,1111+4]..lib/shape.ml[18,1111+32])
                        Compilation_unit/296
                        [
                          core_type (lib/shape.ml[18,1111+26]..lib/shape.ml[18,1111+32])
                            Ttyp_constr "string/15!"
                            []
                        ]
                        None
                      (lib/shape.ml[19,1144+4]..lib/shape.ml[19,1144+44])
                        Item/297
                        [
                          (lib/shape.ml[19,1144+16]..lib/shape.ml[19,1144+34])
                            Immutable
                            comp_unit/298                            core_type (lib/shape.ml[19,1144+27]..lib/shape.ml[19,1144+33])
                              Ttyp_poly
                              core_type (lib/shape.ml[19,1144+27]..lib/shape.ml[19,1144+33])
                                Ttyp_constr "string/15!"
                                []
                          (lib/shape.ml[19,1144+35]..lib/shape.ml[19,1144+42])
                            Immutable
                            id/299                            core_type (lib/shape.ml[19,1144+39]..lib/shape.ml[19,1144+42])
                              Ttyp_poly
                              core_type (lib/shape.ml[19,1144+39]..lib/shape.ml[19,1144+42])
                                Ttyp_constr "int/1!"
                                []
                        ]
                        None
                      (lib/shape.ml[20,1189+4]..lib/shape.ml[20,1189+14])
                        Internal/300
                        []
                        None
                      (lib/shape.ml[21,1204+4]..lib/shape.ml[21,1204+22])
                        Predef/301
                        [
                          core_type (lib/shape.ml[21,1204+16]..lib/shape.ml[21,1204+22])
                            Ttyp_constr "string/15!"
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lib/shape.ml[41,1867+2]..lib/shape.ml[41,1867+19])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[41,1867+6]..lib/shape.ml[41,1867+8])
                  Tpat_var "id/302"
                expression (lib/shape.ml[41,1867+11]..lib/shape.ml[41,1867+19])
                  Texp_apply
                  expression (lib/shape.ml[41,1867+11]..lib/shape.ml[41,1867+14])
                    Texp_ident "Stdlib!.ref"
                  [
                    <arg>
                      Nolabel
                      expression (lib/shape.ml[41,1867+15]..lib/shape.ml[41,1867+19])
                        Texp_constant Const_int -1
                  ]
            ]
          structure_item (lib/shape.ml[43,1888+2]..lib/shape.ml[43,1888+28])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[43,1888+6]..lib/shape.ml[43,1888+12])
                  Tpat_var "reinit/303"
                expression (lib/shape.ml[43,1888+13]..lib/shape.ml[43,1888+28]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[43,1888+13]..lib/shape.ml[43,1888+15])
                        Tpat_construct "()"
                        []
                        None
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[43,1888+18]..lib/shape.ml[43,1888+28])
                      Texp_apply
                      expression (lib/shape.ml[43,1888+21]..lib/shape.ml[43,1888+23])
                        Texp_ident "Stdlib!.:="
                      [
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[43,1888+18]..lib/shape.ml[43,1888+20])
                            Texp_ident "id/302"
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[43,1888+24]..lib/shape.ml[43,1888+28])
                            Texp_constant Const_int -1
                      ]
            ]
          structure_item (lib/shape.ml[45,1918+2]..lib/shape.ml[47,1959+49])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[45,1918+6]..lib/shape.ml[45,1918+8])
                  Tpat_var "mk/306"
                expression (lib/shape.ml[45,1918+10]..lib/shape.ml[47,1959+49]) ghost
                  Texp_function
                  [
                    Labelled "current_unit"
                    Param_pat
                      pattern (lib/shape.ml[45,1918+11]..lib/shape.ml[45,1918+23])
                        Tpat_var "current_unit/308"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[46,1944+6]..lib/shape.ml[47,1959+49])
                      Texp_sequence
                      expression (lib/shape.ml[46,1944+6]..lib/shape.ml[46,1944+13])
                        Texp_apply
                        expression (lib/shape.ml[46,1944+6]..lib/shape.ml[46,1944+10])
                          Texp_ident "Stdlib!.incr"
                        [
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[46,1944+11]..lib/shape.ml[46,1944+13])
                              Texp_ident "id/302"
                        ]
                      expression (lib/shape.ml[47,1959+6]..lib/shape.ml[47,1959+49])
                        Texp_construct "Item"
                        [
                          expression (lib/shape.ml[47,1959+11]..lib/shape.ml[47,1959+49])
                            Texp_record
                              fields =
                                [
                                  "comp_unit"
                                    expression (lib/shape.ml[47,1959+25]..lib/shape.ml[47,1959+37])
                                      Texp_ident "current_unit/308"
                                  "id"
                                    expression (lib/shape.ml[47,1959+44]..lib/shape.ml[47,1959+47])
                                      Texp_apply
                                      expression (lib/shape.ml[47,1959+44]..lib/shape.ml[47,1959+45])
                                        Texp_ident "Stdlib!.!"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/shape.ml[47,1959+45]..lib/shape.ml[47,1959+47])
                                            Texp_ident "id/302"
                                      ]
                                ]
                              representation =
  Record_inlined 1
                              extended_expression =
                                None
                        ]
            ]
          structure_item (lib/shape.ml[49,2010+2]..lib/shape.ml[52,2161+36])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[49,2010+6]..lib/shape.ml[49,2010+28])
                  Tpat_var "of_compilation_unit_id/309"
                expression (lib/shape.ml[49,2010+29]..lib/shape.ml[52,2161+36]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[49,2010+29]..lib/shape.ml[49,2010+31])
                        Tpat_var "id/311"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[50,2044+4]..lib/shape.ml[52,2161+36])
                      Texp_sequence
                      expression (lib/shape.ml[50,2044+4]..lib/shape.ml[51,2082+77])
                        Texp_ifthenelse
                        expression (lib/shape.ml[50,2044+7]..lib/shape.ml[50,2044+32])
                          Texp_apply
                          expression (lib/shape.ml[50,2044+7]..lib/shape.ml[50,2044+10])
                            Texp_ident "Stdlib!.not"
                          [
                            <arg>
                              Nolabel
                              expression (lib/shape.ml[50,2044+11]..lib/shape.ml[50,2044+32])
                                Texp_apply
                                expression (lib/shape.ml[50,2044+12]..lib/shape.ml[50,2044+28])
                                  Texp_ident "Ocaml_ocaml_types!.Ident.persistent"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/shape.ml[50,2044+29]..lib/shape.ml[50,2044+31])
                                      Texp_ident "id/311"
                                ]
                          ]
                        expression (lib/shape.ml[51,2082+6]..lib/shape.ml[51,2082+77])
                          Texp_apply
                          expression (lib/shape.ml[51,2082+6]..lib/shape.ml[51,2082+23])
                            Texp_ident "Ocaml_ocaml_types!.Misc.fatal_errorf"
                          [
                            <arg>
                              Nolabel
                              expression (lib/shape.ml[51,2082+24]..lib/shape.ml[51,2082+61])
                                Texp_construct "CamlinternalFormatBasics.Format"
                                [
                                  expression (lib/shape.ml[51,2082+24]..lib/shape.ml[51,2082+61]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/shape.ml[51,2082+24]..lib/shape.ml[51,2082+61]) ghost
                                        Texp_constant Const_string("Types.Uid.of_compilation_unit_id ",(lib/shape.ml[51,2082+24]..lib/shape.ml[51,2082+61]) ghost,None)
                                      expression (lib/shape.ml[51,2082+24]..lib/shape.ml[51,2082+61]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Caml_string"
                                        [
                                          expression (lib/shape.ml[51,2082+24]..lib/shape.ml[51,2082+61]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/shape.ml[51,2082+24]..lib/shape.ml[51,2082+61]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                    ]
                                  expression (lib/shape.ml[51,2082+24]..lib/shape.ml[51,2082+61]) ghost
                                    Texp_constant Const_string("Types.Uid.of_compilation_unit_id %S",(lib/shape.ml[51,2082+24]..lib/shape.ml[51,2082+61]) ghost,None)
                                ]
                            <arg>
                              Nolabel
                              expression (lib/shape.ml[51,2082+62]..lib/shape.ml[51,2082+77])
                                Texp_apply
                                expression (lib/shape.ml[51,2082+63]..lib/shape.ml[51,2082+73])
                                  Texp_ident "Ocaml_ocaml_types!.Ident.name"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/shape.ml[51,2082+74]..lib/shape.ml[51,2082+76])
                                      Texp_ident "id/311"
                                ]
                          ]
                        None
                      expression (lib/shape.ml[52,2161+4]..lib/shape.ml[52,2161+36])
                        Texp_construct "Compilation_unit"
                        [
                          expression (lib/shape.ml[52,2161+21]..lib/shape.ml[52,2161+36])
                            Texp_apply
                            expression (lib/shape.ml[52,2161+22]..lib/shape.ml[52,2161+32])
                              Texp_ident "Ocaml_ocaml_types!.Ident.name"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[52,2161+33]..lib/shape.ml[52,2161+35])
                                  Texp_ident "id/311"
                            ]
                        ]
            ]
          structure_item (lib/shape.ml[54,2199+2]..lib/shape.ml[57,2329+26])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[54,2199+6]..lib/shape.ml[54,2199+18])
                  Tpat_var "of_predef_id/514"
                expression (lib/shape.ml[54,2199+19]..lib/shape.ml[57,2329+26]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[54,2199+19]..lib/shape.ml[54,2199+21])
                        Tpat_var "id/516"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[55,2223+4]..lib/shape.ml[57,2329+26])
                      Texp_sequence
                      expression (lib/shape.ml[55,2223+4]..lib/shape.ml[56,2260+67])
                        Texp_ifthenelse
                        expression (lib/shape.ml[55,2223+7]..lib/shape.ml[55,2223+31])
                          Texp_apply
                          expression (lib/shape.ml[55,2223+7]..lib/shape.ml[55,2223+10])
                            Texp_ident "Stdlib!.not"
                          [
                            <arg>
                              Nolabel
                              expression (lib/shape.ml[55,2223+11]..lib/shape.ml[55,2223+31])
                                Texp_apply
                                expression (lib/shape.ml[55,2223+12]..lib/shape.ml[55,2223+27])
                                  Texp_ident "Ocaml_ocaml_types!.Ident.is_predef"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/shape.ml[55,2223+28]..lib/shape.ml[55,2223+30])
                                      Texp_ident "id/516"
                                ]
                          ]
                        expression (lib/shape.ml[56,2260+6]..lib/shape.ml[56,2260+67])
                          Texp_apply
                          expression (lib/shape.ml[56,2260+6]..lib/shape.ml[56,2260+23])
                            Texp_ident "Ocaml_ocaml_types!.Misc.fatal_errorf"
                          [
                            <arg>
                              Nolabel
                              expression (lib/shape.ml[56,2260+24]..lib/shape.ml[56,2260+51])
                                Texp_construct "CamlinternalFormatBasics.Format"
                                [
                                  expression (lib/shape.ml[56,2260+24]..lib/shape.ml[56,2260+51]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/shape.ml[56,2260+24]..lib/shape.ml[56,2260+51]) ghost
                                        Texp_constant Const_string("Types.Uid.of_predef_id ",(lib/shape.ml[56,2260+24]..lib/shape.ml[56,2260+51]) ghost,None)
                                      expression (lib/shape.ml[56,2260+24]..lib/shape.ml[56,2260+51]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Caml_string"
                                        [
                                          expression (lib/shape.ml[56,2260+24]..lib/shape.ml[56,2260+51]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/shape.ml[56,2260+24]..lib/shape.ml[56,2260+51]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                    ]
                                  expression (lib/shape.ml[56,2260+24]..lib/shape.ml[56,2260+51]) ghost
                                    Texp_constant Const_string("Types.Uid.of_predef_id %S",(lib/shape.ml[56,2260+24]..lib/shape.ml[56,2260+51]) ghost,None)
                                ]
                            <arg>
                              Nolabel
                              expression (lib/shape.ml[56,2260+52]..lib/shape.ml[56,2260+67])
                                Texp_apply
                                expression (lib/shape.ml[56,2260+53]..lib/shape.ml[56,2260+63])
                                  Texp_ident "Ocaml_ocaml_types!.Ident.name"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/shape.ml[56,2260+64]..lib/shape.ml[56,2260+66])
                                      Texp_ident "id/516"
                                ]
                          ]
                        None
                      expression (lib/shape.ml[57,2329+4]..lib/shape.ml[57,2329+26])
                        Texp_construct "Predef"
                        [
                          expression (lib/shape.ml[57,2329+11]..lib/shape.ml[57,2329+26])
                            Texp_apply
                            expression (lib/shape.ml[57,2329+12]..lib/shape.ml[57,2329+22])
                              Texp_ident "Ocaml_ocaml_types!.Ident.name"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[57,2329+23]..lib/shape.ml[57,2329+25])
                                  Texp_ident "id/516"
                            ]
                        ]
            ]
          structure_item (lib/shape.ml[59,2357+2]..lib/shape.ml[59,2357+45])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[59,2357+6]..lib/shape.ml[59,2357+34])
                  Tpat_var "internal_not_actually_unique/517"
                expression (lib/shape.ml[59,2357+37]..lib/shape.ml[59,2357+45])
                  Texp_construct "Internal"
                  []
            ]
          structure_item (lib/shape.ml[61,2404+2]..lib/shape.ml[63,2465+16])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[61,2404+6]..lib/shape.ml[61,2404+28])
                  Tpat_var "for_actual_declaration/518"
                expression (lib/shape.ml[61,2404+31]..lib/shape.ml[63,2465+16])
                  Texp_function
                  []
                  Tfunction_cases (lib/shape.ml[61,2404+31]..lib/shape.ml[63,2465+16])
                    [
                      <case>
                        pattern (lib/shape.ml[62,2444+6]..lib/shape.ml[62,2444+12])
                          Tpat_construct "Item"
                          [
                            pattern (lib/shape.ml[62,2444+11]..lib/shape.ml[62,2444+12])
                              Tpat_any
                          ]
                          None
                        expression (lib/shape.ml[62,2444+16]..lib/shape.ml[62,2444+20])
                          Texp_construct "true"
                          []
                      <case>
                        pattern (lib/shape.ml[63,2465+6]..lib/shape.ml[63,2465+7])
                          Tpat_any
                        expression (lib/shape.ml[63,2465+11]..lib/shape.ml[63,2465+16])
                          Texp_construct "false"
                          []
                    ]
            ]
        ]
  structure_item (lib/shape.ml[66,2487+0]..lib/shape.ml[95,3069+3])
    Tstr_module
    Sig_component_kind/536
      module_expr (lib/shape.ml[66,2487+28]..lib/shape.ml[95,3069+3])
        Tmod_structure
        [
          structure_item (lib/shape.ml[67,2522+2]..lib/shape.ml[74,2627+16])
            Tstr_type Rec
            [
              type_declaration t/522 (lib/shape.ml[67,2522+2]..lib/shape.ml[74,2627+16])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_variant
                    [
                      (lib/shape.ml[68,2533+4]..lib/shape.ml[68,2533+11])
                        Value/523
                        []
                        None
                      (lib/shape.ml[69,2545+4]..lib/shape.ml[69,2545+10])
                        Type/524
                        []
                        None
                      (lib/shape.ml[70,2556+4]..lib/shape.ml[70,2556+12])
                        Module/525
                        []
                        None
                      (lib/shape.ml[71,2569+4]..lib/shape.ml[71,2569+17])
                        Module_type/526
                        []
                        None
                      (lib/shape.ml[72,2587+4]..lib/shape.ml[72,2587+27])
                        Extension_constructor/527
                        []
                        None
                      (lib/shape.ml[73,2615+4]..lib/shape.ml[73,2615+11])
                        Class/528
                        []
                        None
                      (lib/shape.ml[74,2627+4]..lib/shape.ml[74,2627+16])
                        Class_type/529
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lib/shape.ml[76,2645+2]..lib/shape.ml[83,2854+32])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[76,2645+6]..lib/shape.ml[76,2645+15])
                  Tpat_var "to_string/530"
                expression (lib/shape.ml[76,2645+18]..lib/shape.ml[83,2854+32])
                  Texp_function
                  []
                  Tfunction_cases (lib/shape.ml[76,2645+18]..lib/shape.ml[83,2854+32])
                    [
                      <case>
                        pattern (lib/shape.ml[77,2672+6]..lib/shape.ml[77,2672+11])
                          Tpat_construct "Value"
                          []
                          None
                        expression (lib/shape.ml[77,2672+15]..lib/shape.ml[77,2672+22])
                          Texp_constant Const_string("value",(lib/shape.ml[77,2672+16]..lib/shape.ml[77,2672+21]),None)
                      <case>
                        pattern (lib/shape.ml[78,2695+6]..lib/shape.ml[78,2695+10])
                          Tpat_construct "Type"
                          []
                          None
                        expression (lib/shape.ml[78,2695+14]..lib/shape.ml[78,2695+20])
                          Texp_constant Const_string("type",(lib/shape.ml[78,2695+15]..lib/shape.ml[78,2695+19]),None)
                      <case>
                        pattern (lib/shape.ml[79,2716+6]..lib/shape.ml[79,2716+12])
                          Tpat_construct "Module"
                          []
                          None
                        expression (lib/shape.ml[79,2716+16]..lib/shape.ml[79,2716+24])
                          Texp_constant Const_string("module",(lib/shape.ml[79,2716+17]..lib/shape.ml[79,2716+23]),None)
                      <case>
                        pattern (lib/shape.ml[80,2741+6]..lib/shape.ml[80,2741+17])
                          Tpat_construct "Module_type"
                          []
                          None
                        expression (lib/shape.ml[80,2741+21]..lib/shape.ml[80,2741+34])
                          Texp_constant Const_string("module type",(lib/shape.ml[80,2741+22]..lib/shape.ml[80,2741+33]),None)
                      <case>
                        pattern (lib/shape.ml[81,2776+6]..lib/shape.ml[81,2776+27])
                          Tpat_construct "Extension_constructor"
                          []
                          None
                        expression (lib/shape.ml[81,2776+31]..lib/shape.ml[81,2776+54])
                          Texp_constant Const_string("extension constructor",(lib/shape.ml[81,2776+32]..lib/shape.ml[81,2776+53]),None)
                      <case>
                        pattern (lib/shape.ml[82,2831+6]..lib/shape.ml[82,2831+11])
                          Tpat_construct "Class"
                          []
                          None
                        expression (lib/shape.ml[82,2831+15]..lib/shape.ml[82,2831+22])
                          Texp_constant Const_string("class",(lib/shape.ml[82,2831+16]..lib/shape.ml[82,2831+21]),None)
                      <case>
                        pattern (lib/shape.ml[83,2854+6]..lib/shape.ml[83,2854+16])
                          Tpat_construct "Class_type"
                          []
                          None
                        expression (lib/shape.ml[83,2854+20]..lib/shape.ml[83,2854+32])
                          Texp_constant Const_string("class type",(lib/shape.ml[83,2854+21]..lib/shape.ml[83,2854+31]),None)
                    ]
            ]
          structure_item (lib/shape.ml[85,2888+2]..lib/shape.ml[94,3056+12])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[85,2888+6]..lib/shape.ml[85,2888+25])
                  Tpat_var "can_appear_in_types/533"
                expression (lib/shape.ml[85,2888+28]..lib/shape.ml[94,3056+12])
                  Texp_function
                  []
                  Tfunction_cases (lib/shape.ml[85,2888+28]..lib/shape.ml[94,3056+12])
                    [
                      <case>
                        pattern (lib/shape.ml[86,2925+6]..lib/shape.ml[87,2937+27])
                          Tpat_or
                          pattern (lib/shape.ml[86,2925+6]..lib/shape.ml[86,2925+11])
                            Tpat_construct "Value"
                            []
                            None
                          pattern (lib/shape.ml[87,2937+6]..lib/shape.ml[87,2937+27])
                            Tpat_construct "Extension_constructor"
                            []
                            None
                        expression (lib/shape.ml[88,2968+8]..lib/shape.ml[88,2968+13])
                          Texp_construct "false"
                          []
                      <case>
                        pattern (lib/shape.ml[89,2982+6]..lib/shape.ml[93,3036+16])
                          Tpat_or
                          pattern (lib/shape.ml[89,2982+6]..lib/shape.ml[92,3024+11])
                            Tpat_or
                            pattern (lib/shape.ml[89,2982+6]..lib/shape.ml[91,3006+17])
                              Tpat_or
                              pattern (lib/shape.ml[89,2982+6]..lib/shape.ml[90,2993+12])
                                Tpat_or
                                pattern (lib/shape.ml[89,2982+6]..lib/shape.ml[89,2982+10])
                                  Tpat_construct "Type"
                                  []
                                  None
                                pattern (lib/shape.ml[90,2993+6]..lib/shape.ml[90,2993+12])
                                  Tpat_construct "Module"
                                  []
                                  None
                              pattern (lib/shape.ml[91,3006+6]..lib/shape.ml[91,3006+17])
                                Tpat_construct "Module_type"
                                []
                                None
                            pattern (lib/shape.ml[92,3024+6]..lib/shape.ml[92,3024+11])
                              Tpat_construct "Class"
                              []
                              None
                          pattern (lib/shape.ml[93,3036+6]..lib/shape.ml[93,3036+16])
                            Tpat_construct "Class_type"
                            []
                            None
                        expression (lib/shape.ml[94,3056+8]..lib/shape.ml[94,3056+12])
                          Texp_construct "true"
                          []
                    ]
            ]
        ]
  structure_item (lib/shape.ml[97,3074+0]..lib/shape.ml[124,3872+3])
    Tstr_module
    Item/1000
      module_expr (lib/shape.ml[97,3074+14]..lib/shape.ml[124,3872+3])
        Tmod_structure
        [
          structure_item (lib/shape.ml[98,3095+2]..lib/shape.ml[119,3825+5])
            Tstr_module
            T/886
              module_expr (lib/shape.ml[98,3095+13]..lib/shape.ml[119,3825+5])
                Tmod_structure
                [
                  structure_item (lib/shape.ml[99,3115+4]..lib/shape.ml[99,3115+42])
                    Tstr_type Rec
                    [
                      type_declaration t/537 (lib/shape.ml[99,3115+4]..lib/shape.ml[99,3115+42])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ttype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (lib/shape.ml[99,3115+13]..lib/shape.ml[99,3115+42])
                              Ttyp_tuple
                              [
                                core_type (lib/shape.ml[99,3115+13]..lib/shape.ml[99,3115+19])
                                  Ttyp_constr "string/15!"
                                  []
                                core_type (lib/shape.ml[99,3115+22]..lib/shape.ml[99,3115+42])
                                  Ttyp_constr "Sig_component_kind/536.t"
                                  []
                              ]
                    ]
                  structure_item (lib/shape.ml[100,3158+4]..lib/shape.ml[100,3158+25])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[100,3158+8]..lib/shape.ml[100,3158+15])
                          Tpat_var "compare/538"
                        expression (lib/shape.ml[100,3158+18]..lib/shape.ml[100,3158+25])
                          Texp_ident "Stdlib!.compare"
                    ]
                  structure_item (lib/shape.ml[102,3185+4]..lib/shape.ml[102,3185+29])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[102,3185+8]..lib/shape.ml[102,3185+12])
                          Tpat_var "make/539"
                        expression (lib/shape.ml[102,3185+13]..lib/shape.ml[102,3185+29]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/shape.ml[102,3185+13]..lib/shape.ml[102,3185+16])
                                Tpat_var "str/541"
                            Nolabel
                            Param_pat
                              pattern (lib/shape.ml[102,3185+17]..lib/shape.ml[102,3185+19])
                                Tpat_var "ns/542"
                          ]
                          Tfunction_body
                            expression (lib/shape.ml[102,3185+22]..lib/shape.ml[102,3185+29])
                              Texp_tuple
                              [
                                expression (lib/shape.ml[102,3185+22]..lib/shape.ml[102,3185+25])
                                  Texp_ident "str/541"
                                expression (lib/shape.ml[102,3185+27]..lib/shape.ml[102,3185+29])
                                  Texp_ident "ns/542"
                              ]
                    ]
                  structure_item (lib/shape.ml[104,3216+4]..lib/shape.ml[104,3216+58])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[104,3216+8]..lib/shape.ml[104,3216+13])
                          Tpat_var "value/543"
                        expression (lib/shape.ml[104,3216+14]..lib/shape.ml[104,3216+58]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/shape.ml[104,3216+14]..lib/shape.ml[104,3216+16])
                                Tpat_var "id/545"
                          ]
                          Tfunction_body
                            expression (lib/shape.ml[104,3216+19]..lib/shape.ml[104,3216+58])
                              Texp_tuple
                              [
                                expression (lib/shape.ml[104,3216+19]..lib/shape.ml[104,3216+32])
                                  Texp_apply
                                  expression (lib/shape.ml[104,3216+19]..lib/shape.ml[104,3216+29])
                                    Texp_ident "Ocaml_ocaml_types!.Ident.name"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[104,3216+30]..lib/shape.ml[104,3216+32])
                                        Texp_ident "id/545"
                                  ]
                                expression (lib/shape.ml[104,3216+34]..lib/shape.ml[104,3216+58])
                                  Texp_construct "Sig_component_kind.Value"
                                  []
                              ]
                    ]
                  structure_item (lib/shape.ml[105,3275+4]..lib/shape.ml[105,3275+57])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[105,3275+8]..lib/shape.ml[105,3275+13])
                          Tpat_var "type_/546"
                        expression (lib/shape.ml[105,3275+14]..lib/shape.ml[105,3275+57]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/shape.ml[105,3275+14]..lib/shape.ml[105,3275+16])
                                Tpat_var "id/548"
                          ]
                          Tfunction_body
                            expression (lib/shape.ml[105,3275+19]..lib/shape.ml[105,3275+57])
                              Texp_tuple
                              [
                                expression (lib/shape.ml[105,3275+19]..lib/shape.ml[105,3275+32])
                                  Texp_apply
                                  expression (lib/shape.ml[105,3275+19]..lib/shape.ml[105,3275+29])
                                    Texp_ident "Ocaml_ocaml_types!.Ident.name"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[105,3275+30]..lib/shape.ml[105,3275+32])
                                        Texp_ident "id/548"
                                  ]
                                expression (lib/shape.ml[105,3275+34]..lib/shape.ml[105,3275+57])
                                  Texp_construct "Sig_component_kind.Type"
                                  []
                              ]
                    ]
                  structure_item (lib/shape.ml[106,3333+4]..lib/shape.ml[106,3333+61])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[106,3333+8]..lib/shape.ml[106,3333+15])
                          Tpat_var "module_/549"
                        expression (lib/shape.ml[106,3333+16]..lib/shape.ml[106,3333+61]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/shape.ml[106,3333+16]..lib/shape.ml[106,3333+18])
                                Tpat_var "id/551"
                          ]
                          Tfunction_body
                            expression (lib/shape.ml[106,3333+21]..lib/shape.ml[106,3333+61])
                              Texp_tuple
                              [
                                expression (lib/shape.ml[106,3333+21]..lib/shape.ml[106,3333+34])
                                  Texp_apply
                                  expression (lib/shape.ml[106,3333+21]..lib/shape.ml[106,3333+31])
                                    Texp_ident "Ocaml_ocaml_types!.Ident.name"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[106,3333+32]..lib/shape.ml[106,3333+34])
                                        Texp_ident "id/551"
                                  ]
                                expression (lib/shape.ml[106,3333+36]..lib/shape.ml[106,3333+61])
                                  Texp_construct "Sig_component_kind.Module"
                                  []
                              ]
                    ]
                  structure_item (lib/shape.ml[107,3395+4]..lib/shape.ml[107,3395+70])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[107,3395+8]..lib/shape.ml[107,3395+19])
                          Tpat_var "module_type/552"
                        expression (lib/shape.ml[107,3395+20]..lib/shape.ml[107,3395+70]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/shape.ml[107,3395+20]..lib/shape.ml[107,3395+22])
                                Tpat_var "id/554"
                          ]
                          Tfunction_body
                            expression (lib/shape.ml[107,3395+25]..lib/shape.ml[107,3395+70])
                              Texp_tuple
                              [
                                expression (lib/shape.ml[107,3395+25]..lib/shape.ml[107,3395+38])
                                  Texp_apply
                                  expression (lib/shape.ml[107,3395+25]..lib/shape.ml[107,3395+35])
                                    Texp_ident "Ocaml_ocaml_types!.Ident.name"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[107,3395+36]..lib/shape.ml[107,3395+38])
                                        Texp_ident "id/554"
                                  ]
                                expression (lib/shape.ml[107,3395+40]..lib/shape.ml[107,3395+70])
                                  Texp_construct "Sig_component_kind.Module_type"
                                  []
                              ]
                    ]
                  structure_item (lib/shape.ml[108,3466+4]..lib/shape.ml[109,3501+61])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[108,3466+8]..lib/shape.ml[108,3466+29])
                          Tpat_var "extension_constructor/555"
                        expression (lib/shape.ml[108,3466+30]..lib/shape.ml[109,3501+61]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/shape.ml[108,3466+30]..lib/shape.ml[108,3466+32])
                                Tpat_var "id/557"
                          ]
                          Tfunction_body
                            expression (lib/shape.ml[109,3501+6]..lib/shape.ml[109,3501+61])
                              Texp_tuple
                              [
                                expression (lib/shape.ml[109,3501+6]..lib/shape.ml[109,3501+19])
                                  Texp_apply
                                  expression (lib/shape.ml[109,3501+6]..lib/shape.ml[109,3501+16])
                                    Texp_ident "Ocaml_ocaml_types!.Ident.name"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[109,3501+17]..lib/shape.ml[109,3501+19])
                                        Texp_ident "id/557"
                                  ]
                                expression (lib/shape.ml[109,3501+21]..lib/shape.ml[109,3501+61])
                                  Texp_construct "Sig_component_kind.Extension_constructor"
                                  []
                              ]
                    ]
                  structure_item (lib/shape.ml[110,3563+4]..lib/shape.ml[111,3583+45])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[110,3563+8]..lib/shape.ml[110,3563+14])
                          Tpat_var "class_/558"
                        expression (lib/shape.ml[110,3563+15]..lib/shape.ml[111,3583+45]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/shape.ml[110,3563+15]..lib/shape.ml[110,3563+17])
                                Tpat_var "id/560"
                          ]
                          Tfunction_body
                            expression (lib/shape.ml[111,3583+6]..lib/shape.ml[111,3583+45])
                              Texp_tuple
                              [
                                expression (lib/shape.ml[111,3583+6]..lib/shape.ml[111,3583+19])
                                  Texp_apply
                                  expression (lib/shape.ml[111,3583+6]..lib/shape.ml[111,3583+16])
                                    Texp_ident "Ocaml_ocaml_types!.Ident.name"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[111,3583+17]..lib/shape.ml[111,3583+19])
                                        Texp_ident "id/560"
                                  ]
                                expression (lib/shape.ml[111,3583+21]..lib/shape.ml[111,3583+45])
                                  Texp_construct "Sig_component_kind.Class"
                                  []
                              ]
                    ]
                  structure_item (lib/shape.ml[112,3629+4]..lib/shape.ml[113,3653+50])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[112,3629+8]..lib/shape.ml[112,3629+18])
                          Tpat_var "class_type/561"
                        expression (lib/shape.ml[112,3629+19]..lib/shape.ml[113,3653+50]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/shape.ml[112,3629+19]..lib/shape.ml[112,3629+21])
                                Tpat_var "id/563"
                          ]
                          Tfunction_body
                            expression (lib/shape.ml[113,3653+6]..lib/shape.ml[113,3653+50])
                              Texp_tuple
                              [
                                expression (lib/shape.ml[113,3653+6]..lib/shape.ml[113,3653+19])
                                  Texp_apply
                                  expression (lib/shape.ml[113,3653+6]..lib/shape.ml[113,3653+16])
                                    Texp_ident "Ocaml_ocaml_types!.Ident.name"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[113,3653+17]..lib/shape.ml[113,3653+19])
                                        Texp_ident "id/563"
                                  ]
                                expression (lib/shape.ml[113,3653+21]..lib/shape.ml[113,3653+50])
                                  Texp_construct "Sig_component_kind.Class_type"
                                  []
                              ]
                    ]
                  structure_item (lib/shape.ml[115,3705+4]..lib/shape.ml[118,3783+41])
                    Tstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[115,3705+8]..lib/shape.ml[115,3705+13])
                          Tpat_var "print/564"
                        expression (lib/shape.ml[115,3705+14]..lib/shape.ml[118,3783+41]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/shape.ml[115,3705+14]..lib/shape.ml[115,3705+17])
                                Tpat_var "fmt/566"
                            Nolabel
                            Param_pat
                              pattern (lib/shape.ml[115,3705+18]..lib/shape.ml[115,3705+28])
                                Tpat_tuple
                                [
                                  pattern (lib/shape.ml[115,3705+19]..lib/shape.ml[115,3705+23])
                                    Tpat_var "name/567"
                                  pattern (lib/shape.ml[115,3705+25]..lib/shape.ml[115,3705+27])
                                    Tpat_var "ns/568"
                                ]
                          ]
                          Tfunction_body
                            expression (lib/shape.ml[116,3736+6]..lib/shape.ml[118,3783+41])
                              Texp_apply
                              expression (lib/shape.ml[116,3736+6]..lib/shape.ml[116,3736+20])
                                Texp_ident "Stdlib!.Format.fprintf"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[116,3736+21]..lib/shape.ml[116,3736+24])
                                    Texp_ident "fmt/566"
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[116,3736+25]..lib/shape.ml[116,3736+33])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (lib/shape.ml[116,3736+25]..lib/shape.ml[116,3736+33]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Caml_string"
                                        [
                                          expression (lib/shape.ml[116,3736+25]..lib/shape.ml[116,3736+33]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/shape.ml[116,3736+25]..lib/shape.ml[116,3736+33]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                            [
                                              expression (lib/shape.ml[116,3736+25]..lib/shape.ml[116,3736+33]) ghost
                                                Texp_constant Const_char 5b
                                              expression (lib/shape.ml[116,3736+25]..lib/shape.ml[116,3736+33]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String"
                                                [
                                                  expression (lib/shape.ml[116,3736+25]..lib/shape.ml[116,3736+33]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                    []
                                                  expression (lib/shape.ml[116,3736+25]..lib/shape.ml[116,3736+33]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                    [
                                                      expression (lib/shape.ml[116,3736+25]..lib/shape.ml[116,3736+33]) ghost
                                                        Texp_constant Const_char 5d
                                                      expression (lib/shape.ml[116,3736+25]..lib/shape.ml[116,3736+33]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                        []
                                                    ]
                                                ]
                                            ]
                                        ]
                                      expression (lib/shape.ml[116,3736+25]..lib/shape.ml[116,3736+33]) ghost
                                        Texp_constant Const_string("%S[%s]",(lib/shape.ml[116,3736+25]..lib/shape.ml[116,3736+33]) ghost,None)
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[117,3770+8]..lib/shape.ml[117,3770+12])
                                    Texp_ident "name/567"
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[118,3783+8]..lib/shape.ml[118,3783+41])
                                    Texp_apply
                                    expression (lib/shape.ml[118,3783+9]..lib/shape.ml[118,3783+37])
                                      Texp_ident "Sig_component_kind/536.to_string"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/shape.ml[118,3783+38]..lib/shape.ml[118,3783+40])
                                          Texp_ident "ns/568"
                                    ]
                              ]
                    ]
                ]
          structure_item (lib/shape.ml[121,3832+2]..lib/shape.ml[121,3832+11])
            Tstr_include            module_expr (lib/shape.ml[121,3832+10]..lib/shape.ml[121,3832+11])
              Tmod_ident "T/886"
          structure_item (lib/shape.ml[123,3845+2]..lib/shape.ml[123,3845+26])
            Tstr_module
            Map/999
              module_expr (lib/shape.ml[123,3845+15]..lib/shape.ml[123,3845+26])
                Tmod_apply
                module_expr (lib/shape.ml[123,3845+15]..lib/shape.ml[123,3845+23])
                  module_expr (lib/shape.ml[123,3845+15]..lib/shape.ml[123,3845+23])
                    Tmod_ident "Stdlib!.Map.Make"
                module_expr (lib/shape.ml[123,3845+24]..lib/shape.ml[123,3845+25])
                  Tmod_ident "T/886"
        ]
  structure_item (lib/shape.ml[126,3877+0]..lib/shape.ml[126,3877+18])
    Tstr_type Rec
    [
      type_declaration var/1001 (lib/shape.ml[126,3877+0]..lib/shape.ml[126,3877+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/shape.ml[126,3877+11]..lib/shape.ml[126,3877+18])
              Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
              []
    ]
  structure_item (lib/shape.ml[127,3896+0]..lib/shape.ml[135,4060+23])
    Tstr_type Rec
    [
      type_declaration t/1002 (lib/shape.ml[127,3896+0]..lib/shape.ml[127,3896+42])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/shape.ml[127,3896+11]..lib/shape.ml[127,3896+29])
                Immutable
                uid/1004                core_type (lib/shape.ml[127,3896+16]..lib/shape.ml[127,3896+28])
                  Ttyp_poly
                  core_type (lib/shape.ml[127,3896+16]..lib/shape.ml[127,3896+28])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/shape.ml[127,3896+16]..lib/shape.ml[127,3896+21])
                        Ttyp_constr "Uid/521.t"
                        []
                    ]
              (lib/shape.ml[127,3896+30]..lib/shape.ml[127,3896+40])
                Immutable
                desc/1005                core_type (lib/shape.ml[127,3896+36]..lib/shape.ml[127,3896+40])
                  Ttyp_poly
                  core_type (lib/shape.ml[127,3896+36]..lib/shape.ml[127,3896+40])
                    Ttyp_constr "desc/1003"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration desc/1003 (lib/shape.ml[128,3939+0]..lib/shape.ml[135,4060+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/shape.ml[129,3950+2]..lib/shape.ml[129,3950+14])
                Var/1006
                [
                  core_type (lib/shape.ml[129,3950+11]..lib/shape.ml[129,3950+14])
                    Ttyp_constr "var/1001"
                    []
                ]
                None
              (lib/shape.ml[130,3965+2]..lib/shape.ml[130,3965+18])
                Abs/1007
                [
                  core_type (lib/shape.ml[130,3965+11]..lib/shape.ml[130,3965+14])
                    Ttyp_constr "var/1001"
                    []
                  core_type (lib/shape.ml[130,3965+17]..lib/shape.ml[130,3965+18])
                    Ttyp_constr "t/1002"
                    []
                ]
                None
              (lib/shape.ml[131,3984+2]..lib/shape.ml[131,3984+16])
                App/1008
                [
                  core_type (lib/shape.ml[131,3984+11]..lib/shape.ml[131,3984+12])
                    Ttyp_constr "t/1002"
                    []
                  core_type (lib/shape.ml[131,3984+15]..lib/shape.ml[131,3984+16])
                    Ttyp_constr "t/1002"
                    []
                ]
                None
              (lib/shape.ml[132,4001+2]..lib/shape.ml[132,4001+26])
                Struct/1009
                [
                  core_type (lib/shape.ml[132,4001+14]..lib/shape.ml[132,4001+26])
                    Ttyp_constr "Item/1000.Map.t"
                    [
                      core_type (lib/shape.ml[132,4001+14]..lib/shape.ml[132,4001+15])
                        Ttyp_constr "t/1002"
                        []
                    ]
                ]
                None
              (lib/shape.ml[133,4028+2]..lib/shape.ml[133,4028+8])
                Leaf/1010
                []
                None
              (lib/shape.ml[134,4037+2]..lib/shape.ml[134,4037+22])
                Proj/1011
                [
                  core_type (lib/shape.ml[134,4037+12]..lib/shape.ml[134,4037+13])
                    Ttyp_constr "t/1002"
                    []
                  core_type (lib/shape.ml[134,4037+16]..lib/shape.ml[134,4037+22])
                    Ttyp_constr "Item/1000.t"
                    []
                ]
                None
              (lib/shape.ml[135,4060+2]..lib/shape.ml[135,4060+23])
                Comp_unit/1012
                [
                  core_type (lib/shape.ml[135,4060+17]..lib/shape.ml[135,4060+23])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/shape.ml[190,6170+0]..lib/shape.ml[192,6249+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[190,6170+4]..lib/shape.ml[190,6170+13])
          Tpat_var "fresh_var/1103"
        expression (lib/shape.ml[190,6170+14]..lib/shape.ml[192,6249+41]) ghost
          Texp_function
          [
            Optional "name"
            Param_optional_default
              pattern (lib/shape.ml[190,6170+16]..lib/shape.ml[190,6170+20])
                Tpat_var "name/1105"
              expression (lib/shape.ml[190,6170+21]..lib/shape.ml[190,6170+32])
                Texp_constant Const_string("shape-var",(lib/shape.ml[190,6170+22]..lib/shape.ml[190,6170+31]),None)
            Nolabel
            Param_pat
              pattern (lib/shape.ml[190,6170+34]..lib/shape.ml[190,6170+37])
                Tpat_var "uid/1106"
          ]
          Tfunction_body
            expression (lib/shape.ml[191,6210+2]..lib/shape.ml[192,6249+41])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/shape.ml[191,6210+6]..lib/shape.ml[191,6210+9])
                    Tpat_var "var/1107"
                  expression (lib/shape.ml[191,6210+12]..lib/shape.ml[191,6210+35])
                    Texp_apply
                    expression (lib/shape.ml[191,6210+12]..lib/shape.ml[191,6210+30])
                      Texp_ident "Ocaml_ocaml_types!.Ident.create_local"
                    [
                      <arg>
                        Nolabel
                        expression (lib/shape.ml[191,6210+31]..lib/shape.ml[191,6210+35])
                          Texp_ident "name/1105"
                    ]
              ]
              expression (lib/shape.ml[192,6249+2]..lib/shape.ml[192,6249+41])
                Texp_tuple
                [
                  expression (lib/shape.ml[192,6249+2]..lib/shape.ml[192,6249+5])
                    Texp_ident "var/1107"
                  expression (lib/shape.ml[192,6249+7]..lib/shape.ml[192,6249+41])
                    Texp_record
                      fields =
                        [
                          "uid"
                            expression (lib/shape.ml[192,6249+15]..lib/shape.ml[192,6249+23])
                              Texp_construct "Some"
                              [
                                expression (lib/shape.ml[192,6249+20]..lib/shape.ml[192,6249+23])
                                  Texp_ident "uid/1106"
                              ]
                          "desc"
                            expression (lib/shape.ml[192,6249+32]..lib/shape.ml[192,6249+39])
                              Texp_construct "Var"
                              [
                                expression (lib/shape.ml[192,6249+36]..lib/shape.ml[192,6249+39])
                                  Texp_ident "var/1107"
                              ]
                        ]
                      representation =
                        Record_regular
                      extended_expression =
                        None
                ]
    ]
  structure_item (lib/shape.ml[194,6292+0]..lib/shape.ml[194,6292+55])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[194,6292+4]..lib/shape.ml[194,6292+29])
          Tpat_var "for_unnamed_functor_param/1109"
        expression (lib/shape.ml[194,6292+32]..lib/shape.ml[194,6292+55])
          Texp_apply
          expression (lib/shape.ml[194,6292+32]..lib/shape.ml[194,6292+50])
            Texp_ident "Ocaml_ocaml_types!.Ident.create_local"
          [
            <arg>
              Nolabel
              expression (lib/shape.ml[194,6292+51]..lib/shape.ml[194,6292+55])
                Texp_constant Const_string("()",(lib/shape.ml[194,6292+52]..lib/shape.ml[194,6292+54]),None)
          ]
    ]
  structure_item (lib/shape.ml[196,6349+0]..lib/shape.ml[197,6366+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[196,6349+4]..lib/shape.ml[196,6349+7])
          Tpat_var "var/1110"
        expression (lib/shape.ml[196,6349+8]..lib/shape.ml[197,6366+35]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/shape.ml[196,6349+8]..lib/shape.ml[196,6349+11])
                Tpat_var "uid/1112"
            Nolabel
            Param_pat
              pattern (lib/shape.ml[196,6349+12]..lib/shape.ml[196,6349+14])
                Tpat_var "id/1113"
          ]
          Tfunction_body
            expression (lib/shape.ml[197,6366+2]..lib/shape.ml[197,6366+35])
              Texp_record
                fields =
                  [
                    "uid"
                      expression (lib/shape.ml[197,6366+10]..lib/shape.ml[197,6366+18])
                        Texp_construct "Some"
                        [
                          expression (lib/shape.ml[197,6366+15]..lib/shape.ml[197,6366+18])
                            Texp_ident "uid/1112"
                        ]
                    "desc"
                      expression (lib/shape.ml[197,6366+27]..lib/shape.ml[197,6366+33])
                        Texp_construct "Var"
                        [
                          expression (lib/shape.ml[197,6366+31]..lib/shape.ml[197,6366+33])
                            Texp_ident "id/1113"
                        ]
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/shape.ml[199,6403+0]..lib/shape.ml[200,6427+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[199,6403+4]..lib/shape.ml[199,6403+7])
          Tpat_var "abs/1114"
        expression (lib/shape.ml[199,6403+8]..lib/shape.ml[200,6427+33]) ghost
          Texp_function
          [
            Optional "uid"
            Param_pat
              pattern (lib/shape.ml[199,6403+9]..lib/shape.ml[199,6403+12])
                Tpat_var "uid/1115"
            Nolabel
            Param_pat
              pattern (lib/shape.ml[199,6403+13]..lib/shape.ml[199,6403+16])
                Tpat_var "var/1116"
            Nolabel
            Param_pat
              pattern (lib/shape.ml[199,6403+17]..lib/shape.ml[199,6403+21])
                Tpat_var "body/1117"
          ]
          Tfunction_body
            expression (lib/shape.ml[200,6427+2]..lib/shape.ml[200,6427+33])
              Texp_record
                fields =
                  [
                    "uid"
                      expression (lib/shape.ml[200,6427+4]..lib/shape.ml[200,6427+7])
                        Texp_ident "uid/1115"
                    "desc"
                      expression (lib/shape.ml[200,6427+16]..lib/shape.ml[200,6427+31])
                        Texp_construct "Abs"
                        [
                          expression (lib/shape.ml[200,6427+21]..lib/shape.ml[200,6427+24])
                            Texp_ident "var/1116"
                          expression (lib/shape.ml[200,6427+26]..lib/shape.ml[200,6427+30])
                            Texp_ident "body/1117"
                        ]
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/shape.ml[202,6462+0]..lib/shape.ml[203,6481+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[202,6462+4]..lib/shape.ml[202,6462+7])
          Tpat_var "str/1118"
        expression (lib/shape.ml[202,6462+8]..lib/shape.ml[203,6481+28]) ghost
          Texp_function
          [
            Optional "uid"
            Param_pat
              pattern (lib/shape.ml[202,6462+9]..lib/shape.ml[202,6462+12])
                Tpat_var "uid/1120"
            Nolabel
            Param_pat
              pattern (lib/shape.ml[202,6462+13]..lib/shape.ml[202,6462+16])
                Tpat_var "map/1121"
          ]
          Tfunction_body
            expression (lib/shape.ml[203,6481+2]..lib/shape.ml[203,6481+28])
              Texp_record
                fields =
                  [
                    "uid"
                      expression (lib/shape.ml[203,6481+4]..lib/shape.ml[203,6481+7])
                        Texp_ident "uid/1120"
                    "desc"
                      expression (lib/shape.ml[203,6481+16]..lib/shape.ml[203,6481+26])
                        Texp_construct "Struct"
                        [
                          expression (lib/shape.ml[203,6481+23]..lib/shape.ml[203,6481+26])
                            Texp_ident "map/1121"
                        ]
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/shape.ml[205,6511+0]..lib/shape.ml[206,6526+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[205,6511+4]..lib/shape.ml[205,6511+8])
          Tpat_var "leaf/1122"
        expression (lib/shape.ml[205,6511+9]..lib/shape.ml[206,6526+33]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/shape.ml[205,6511+9]..lib/shape.ml[205,6511+12])
                Tpat_var "uid/1124"
          ]
          Tfunction_body
            expression (lib/shape.ml[206,6526+2]..lib/shape.ml[206,6526+33])
              Texp_record
                fields =
                  [
                    "uid"
                      expression (lib/shape.ml[206,6526+10]..lib/shape.ml[206,6526+18])
                        Texp_construct "Some"
                        [
                          expression (lib/shape.ml[206,6526+15]..lib/shape.ml[206,6526+18])
                            Texp_ident "uid/1124"
                        ]
                    "desc"
                      expression (lib/shape.ml[206,6526+27]..lib/shape.ml[206,6526+31])
                        Texp_construct "Leaf"
                        []
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/shape.ml[208,6561+0]..lib/shape.ml[219,6841+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[208,6561+4]..lib/shape.ml[208,6561+8])
          Tpat_var "proj/1125"
        expression (lib/shape.ml[208,6561+9]..lib/shape.ml[219,6841+36]) ghost
          Texp_function
          [
            Optional "uid"
            Param_pat
              pattern (lib/shape.ml[208,6561+10]..lib/shape.ml[208,6561+13])
                Tpat_var "uid/1127"
            Nolabel
            Param_pat
              pattern (lib/shape.ml[208,6561+14]..lib/shape.ml[208,6561+15])
                Tpat_var "t/1128"
            Nolabel
            Param_pat
              pattern (lib/shape.ml[208,6561+16]..lib/shape.ml[208,6561+20])
                Tpat_var "item/1129"
          ]
          Tfunction_body
            expression (lib/shape.ml[209,6584+2]..lib/shape.ml[219,6841+36])
              Texp_match
              expression (lib/shape.ml[209,6584+8]..lib/shape.ml[209,6584+14])
                Texp_field
                expression (lib/shape.ml[209,6584+8]..lib/shape.ml[209,6584+9])
                  Texp_ident "t/1128"
                "desc"
              [
                <case>
                  pattern (lib/shape.ml[210,6604+4]..lib/shape.ml[210,6604+8])
                    Tpat_value
                    pattern (lib/shape.ml[210,6604+4]..lib/shape.ml[210,6604+8])
                      Tpat_construct "Leaf"
                      []
                      None
                  expression (lib/shape.ml[213,6707+6]..lib/shape.ml[213,6707+7])
                    Texp_ident "t/1128"
                <case>
                  pattern (lib/shape.ml[214,6715+4]..lib/shape.ml[214,6715+14])
                    Tpat_value
                    pattern (lib/shape.ml[214,6715+4]..lib/shape.ml[214,6715+14])
                      Tpat_construct "Struct"
                      [
                        pattern (lib/shape.ml[214,6715+11]..lib/shape.ml[214,6715+14])
                          Tpat_var "map/1130"
                      ]
                      None
                  expression (lib/shape.ml[215,6733+6]..lib/shape.ml[217,6822+9])
                    Texp_try
                    expression (lib/shape.ml[215,6733+16]..lib/shape.ml[215,6733+38])
                      Texp_apply
                      expression (lib/shape.ml[215,6733+16]..lib/shape.ml[215,6733+29])
                        Texp_ident "Item/1000.Map.find"
                      [
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[215,6733+30]..lib/shape.ml[215,6733+34])
                            Texp_ident "item/1129"
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[215,6733+35]..lib/shape.ml[215,6733+38])
                            Texp_ident "map/1130"
                      ]
                    [
                      <case>
                        pattern (lib/shape.ml[216,6772+11]..lib/shape.ml[216,6772+20])
                          Tpat_construct "Not_found"
                          []
                          None
                        expression (lib/shape.ml[216,6772+24]..lib/shape.ml[216,6772+25])
                          Texp_ident "t/1128"
                    ]
                <case>
                  pattern (lib/shape.ml[218,6832+4]..lib/shape.ml[218,6832+5])
                    Tpat_value
                    pattern (lib/shape.ml[218,6832+4]..lib/shape.ml[218,6832+5])
                      Tpat_any
                  expression (lib/shape.ml[219,6841+6]..lib/shape.ml[219,6841+36])
                    Texp_record
                      fields =
                        [
                          "uid"
                            expression (lib/shape.ml[219,6841+8]..lib/shape.ml[219,6841+11])
                              Texp_ident "uid/1127"
                          "desc"
                            expression (lib/shape.ml[219,6841+20]..lib/shape.ml[219,6841+34])
                              Texp_construct "Proj"
                              [
                                expression (lib/shape.ml[219,6841+26]..lib/shape.ml[219,6841+27])
                                  Texp_ident "t/1128"
                                expression (lib/shape.ml[219,6841+29]..lib/shape.ml[219,6841+33])
                                  Texp_ident "item/1129"
                              ]
                        ]
                      representation =
                        Record_regular
                      extended_expression =
                        None
              ]
    ]
  structure_item (lib/shape.ml[221,6879+0]..lib/shape.ml[222,6901+34])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[221,6879+4]..lib/shape.ml[221,6879+7])
          Tpat_var "app/1131"
        expression (lib/shape.ml[221,6879+8]..lib/shape.ml[222,6901+34]) ghost
          Texp_function
          [
            Optional "uid"
            Param_pat
              pattern (lib/shape.ml[221,6879+9]..lib/shape.ml[221,6879+12])
                Tpat_var "uid/1133"
            Nolabel
            Param_pat
              pattern (lib/shape.ml[221,6879+13]..lib/shape.ml[221,6879+14])
                Tpat_var "f/1134"
            Labelled "arg"
            Param_pat
              pattern (lib/shape.ml[221,6879+16]..lib/shape.ml[221,6879+19])
                Tpat_var "arg/1135"
          ]
          Tfunction_body
            expression (lib/shape.ml[222,6901+6]..lib/shape.ml[222,6901+34])
              Texp_record
                fields =
                  [
                    "uid"
                      expression (lib/shape.ml[222,6901+8]..lib/shape.ml[222,6901+11])
                        Texp_ident "uid/1133"
                    "desc"
                      expression (lib/shape.ml[222,6901+20]..lib/shape.ml[222,6901+32])
                        Texp_construct "App"
                        [
                          expression (lib/shape.ml[222,6901+25]..lib/shape.ml[222,6901+26])
                            Texp_ident "f/1134"
                          expression (lib/shape.ml[222,6901+28]..lib/shape.ml[222,6901+31])
                            Texp_ident "arg/1135"
                        ]
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/shape.ml[224,6937+0]..lib/shape.ml[227,7009+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[224,6937+4]..lib/shape.ml[224,6937+17])
          Tpat_var "decompose_abs/1136"
        expression (lib/shape.ml[224,6937+18]..lib/shape.ml[227,7009+13]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/shape.ml[224,6937+18]..lib/shape.ml[224,6937+19])
                Tpat_var "t/1138"
          ]
          Tfunction_body
            expression (lib/shape.ml[225,6959+2]..lib/shape.ml[227,7009+13])
              Texp_match
              expression (lib/shape.ml[225,6959+8]..lib/shape.ml[225,6959+14])
                Texp_field
                expression (lib/shape.ml[225,6959+8]..lib/shape.ml[225,6959+9])
                  Texp_ident "t/1138"
                "desc"
              [
                <case>
                  pattern (lib/shape.ml[226,6979+4]..lib/shape.ml[226,6979+14])
                    Tpat_value
                    pattern (lib/shape.ml[226,6979+4]..lib/shape.ml[226,6979+14])
                      Tpat_construct "Abs"
                      [
                        pattern (lib/shape.ml[226,6979+9]..lib/shape.ml[226,6979+10])
                          Tpat_var "x/1139"
                        pattern (lib/shape.ml[226,6979+12]..lib/shape.ml[226,6979+13])
                          Tpat_var "t/1140"
                      ]
                      None
                  expression (lib/shape.ml[226,6979+18]..lib/shape.ml[226,6979+29])
                    Texp_construct "Some"
                    [
                      expression (lib/shape.ml[226,6979+23]..lib/shape.ml[226,6979+29])
                        Texp_tuple
                        [
                          expression (lib/shape.ml[226,6979+24]..lib/shape.ml[226,6979+25])
                            Texp_ident "x/1139"
                          expression (lib/shape.ml[226,6979+27]..lib/shape.ml[226,6979+28])
                            Texp_ident "t/1140"
                        ]
                    ]
                <case>
                  pattern (lib/shape.ml[227,7009+4]..lib/shape.ml[227,7009+5])
                    Tpat_value
                    pattern (lib/shape.ml[227,7009+4]..lib/shape.ml[227,7009+5])
                      Tpat_any
                  expression (lib/shape.ml[227,7009+9]..lib/shape.ml[227,7009+13])
                    Texp_construct "None"
                    []
              ]
    ]
  structure_item (lib/shape.ml[468,17563+0]..lib/shape.ml[468,17563+60])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[468,17563+4]..lib/shape.ml[468,17563+13])
          Tpat_var "dummy_mod/1141"
        expression (lib/shape.ml[468,17563+16]..lib/shape.ml[468,17563+60])
          Texp_record
            fields =
              [
                "uid"
                  expression (lib/shape.ml[468,17563+24]..lib/shape.ml[468,17563+28])
                    Texp_construct "None"
                    []
                "desc"
                  expression (lib/shape.ml[468,17563+37]..lib/shape.ml[468,17563+58])
                    Texp_construct "Struct"
                    [
                      expression (lib/shape.ml[468,17563+44]..lib/shape.ml[468,17563+58])
                        Texp_ident "Item/1000.Map.empty"
                    ]
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
  structure_item (lib/shape.ml[470,17625+0]..lib/shape.ml[481,18067+15])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[470,17625+4]..lib/shape.ml[470,17625+11])
          Tpat_var "of_path/1142"
        expression (lib/shape.ml[470,17625+12]..lib/shape.ml[481,18067+15]) ghost
          Texp_function
          [
            Labelled "find_shape"
            Param_pat
              pattern (lib/shape.ml[470,17625+13]..lib/shape.ml[470,17625+23])
                Tpat_var "find_shape/1144"
            Labelled "namespace"
            Param_pat
              pattern (lib/shape.ml[470,17625+25]..lib/shape.ml[470,17625+34])
                Tpat_var "namespace/1145"
          ]
          Tfunction_body
            expression (lib/shape.ml[471,17662+2]..lib/shape.ml[481,18067+15])
              Texp_let Rec
              [
                <def>
                  pattern (lib/shape.ml[471,17662+10]..lib/shape.ml[471,17662+13])
                    extra
                      Tpat_extra_constraint
                      core_type (lib/shape.ml[471,17662+16]..lib/shape.ml[471,17662+51])
                        Ttyp_arrow
                        Nolabel
                        core_type (lib/shape.ml[471,17662+16]..lib/shape.ml[471,17662+36])
                          Ttyp_constr "Sig_component_kind/536.t"
                          []
                        core_type (lib/shape.ml[471,17662+40]..lib/shape.ml[471,17662+51])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/shape.ml[471,17662+40]..lib/shape.ml[471,17662+46])
                            Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                            []
                          core_type (lib/shape.ml[471,17662+50]..lib/shape.ml[471,17662+51])
                            Ttyp_constr "t/1002"
                            []
                    Tpat_alias "aux/1166"
                    pattern (lib/shape.ml[471,17662+10]..lib/shape.ml[471,17662+13])
                      Tpat_any
                  expression (lib/shape.ml[471,17662+54]..lib/shape.ml[479,18052+9])
                    extra
                      Texp_constraint
                      core_type (lib/shape.ml[471,17662+16]..lib/shape.ml[471,17662+51])
                        Ttyp_arrow
                        Nolabel
                        core_type (lib/shape.ml[471,17662+16]..lib/shape.ml[471,17662+36])
                          Ttyp_constr "Sig_component_kind/536.t"
                          []
                        core_type (lib/shape.ml[471,17662+40]..lib/shape.ml[471,17662+51])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/shape.ml[471,17662+40]..lib/shape.ml[471,17662+46])
                            Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                            []
                          core_type (lib/shape.ml[471,17662+50]..lib/shape.ml[471,17662+51])
                            Ttyp_constr "t/1002"
                            []
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/shape.ml[471,17662+58]..lib/shape.ml[471,17662+60])
                          Tpat_var "ns/1167"
                    ]
                    Tfunction_cases (lib/shape.ml[471,17662+64]..lib/shape.ml[479,18052+9])
                      [
                        <case>
                          pattern (lib/shape.ml[472,17735+6]..lib/shape.ml[472,17735+15])
                            Tpat_construct "Pident"
                            [
                              pattern (lib/shape.ml[472,17735+13]..lib/shape.ml[472,17735+15])
                                Tpat_var "id/1168"
                            ]
                            None
                          expression (lib/shape.ml[472,17735+19]..lib/shape.ml[472,17735+35])
                            Texp_apply
                            expression (lib/shape.ml[472,17735+19]..lib/shape.ml[472,17735+29])
                              Texp_ident "find_shape/1144"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[472,17735+30]..lib/shape.ml[472,17735+32])
                                  Texp_ident "ns/1167"
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[472,17735+33]..lib/shape.ml[472,17735+35])
                                  Texp_ident "id/1168"
                            ]
                        <case>
                          pattern (lib/shape.ml[473,17771+6]..lib/shape.ml[473,17771+23])
                            Tpat_construct "Pdot"
                            [
                              pattern (lib/shape.ml[473,17771+12]..lib/shape.ml[473,17771+16])
                                Tpat_var "path/1169"
                              pattern (lib/shape.ml[473,17771+18]..lib/shape.ml[473,17771+22])
                                Tpat_var "name/1170"
                            ]
                            None
                          expression (lib/shape.ml[473,17771+27]..lib/shape.ml[473,17771+60])
                            Texp_apply
                            expression (lib/shape.ml[473,17771+27]..lib/shape.ml[473,17771+31])
                              Texp_ident "proj/1125"
                            [
                              <arg>
                                Optional "uid"
                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                  Texp_construct "None"
                                  []
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[473,17771+32]..lib/shape.ml[473,17771+49])
                                  Texp_apply
                                  expression (lib/shape.ml[473,17771+33]..lib/shape.ml[473,17771+36])
                                    Texp_ident "aux/1166"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[473,17771+37]..lib/shape.ml[473,17771+43])
                                        Texp_construct "Module"
                                        []
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[473,17771+44]..lib/shape.ml[473,17771+48])
                                        Texp_ident "path/1169"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[473,17771+50]..lib/shape.ml[473,17771+60])
                                  Texp_tuple
                                  [
                                    expression (lib/shape.ml[473,17771+51]..lib/shape.ml[473,17771+55])
                                      Texp_ident "name/1170"
                                    expression (lib/shape.ml[473,17771+57]..lib/shape.ml[473,17771+59])
                                      Texp_ident "ns/1167"
                                  ]
                            ]
                        <case>
                          pattern (lib/shape.ml[474,17832+6]..lib/shape.ml[474,17832+21])
                            Tpat_construct "Papply"
                            [
                              pattern (lib/shape.ml[474,17832+14]..lib/shape.ml[474,17832+16])
                                Tpat_var "p1/1171"
                              pattern (lib/shape.ml[474,17832+18]..lib/shape.ml[474,17832+20])
                                Tpat_var "p2/1172"
                            ]
                            None
                          expression (lib/shape.ml[474,17832+25]..lib/shape.ml[474,17832+65])
                            Texp_apply
                            expression (lib/shape.ml[474,17832+25]..lib/shape.ml[474,17832+28])
                              Texp_ident "app/1131"
                            [
                              <arg>
                                Optional "uid"
                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                  Texp_construct "None"
                                  []
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[474,17832+29]..lib/shape.ml[474,17832+44])
                                  Texp_apply
                                  expression (lib/shape.ml[474,17832+30]..lib/shape.ml[474,17832+33])
                                    Texp_ident "aux/1166"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[474,17832+34]..lib/shape.ml[474,17832+40])
                                        Texp_construct "Module"
                                        []
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[474,17832+41]..lib/shape.ml[474,17832+43])
                                        Texp_ident "p1/1171"
                                  ]
                              <arg>
                                Labelled "arg"
                                expression (lib/shape.ml[474,17832+50]..lib/shape.ml[474,17832+65])
                                  Texp_apply
                                  expression (lib/shape.ml[474,17832+51]..lib/shape.ml[474,17832+54])
                                    Texp_ident "aux/1166"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[474,17832+55]..lib/shape.ml[474,17832+61])
                                        Texp_construct "Module"
                                        []
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[474,17832+62]..lib/shape.ml[474,17832+64])
                                        Texp_ident "p2/1172"
                                  ]
                            ]
                        <case>
                          pattern (lib/shape.ml[475,17898+6]..lib/shape.ml[475,17898+29])
                            Tpat_construct "Pextra_ty"
                            [
                              pattern (lib/shape.ml[475,17898+17]..lib/shape.ml[475,17898+21])
                                Tpat_var "path/1173"
                              pattern (lib/shape.ml[475,17898+23]..lib/shape.ml[475,17898+28])
                                Tpat_var "extra/1174"
                            ]
                            None
                          expression (lib/shape.ml[475,17898+33]..lib/shape.ml[479,18052+9])
                            Texp_match
                            expression (lib/shape.ml[476,17937+14]..lib/shape.ml[476,17937+19])
                              Texp_ident "extra/1174"
                            [
                              <case>
                                pattern (lib/shape.ml[477,17962+10]..lib/shape.ml[477,17962+20])
                                  Tpat_value
                                  pattern (lib/shape.ml[477,17962+10]..lib/shape.ml[477,17962+20])
                                    Tpat_construct "Pcstr_ty"
                                    [
                                      pattern (lib/shape.ml[477,17962+19]..lib/shape.ml[477,17962+20])
                                        Tpat_any
                                    ]
                                    None
                                expression (lib/shape.ml[477,17962+24]..lib/shape.ml[477,17962+37])
                                  Texp_apply
                                  expression (lib/shape.ml[477,17962+24]..lib/shape.ml[477,17962+27])
                                    Texp_ident "aux/1166"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[477,17962+28]..lib/shape.ml[477,17962+32])
                                        Texp_construct "Type"
                                        []
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[477,17962+33]..lib/shape.ml[477,17962+37])
                                        Texp_ident "path/1173"
                                  ]
                              <case>
                                pattern (lib/shape.ml[478,18000+10]..lib/shape.ml[478,18000+17])
                                  Tpat_value
                                  pattern (lib/shape.ml[478,18000+10]..lib/shape.ml[478,18000+17])
                                    Tpat_construct "Pext_ty"
                                    []
                                    None
                                expression (lib/shape.ml[478,18000+21]..lib/shape.ml[478,18000+51])
                                  Texp_apply
                                  expression (lib/shape.ml[478,18000+21]..lib/shape.ml[478,18000+24])
                                    Texp_ident "aux/1166"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[478,18000+25]..lib/shape.ml[478,18000+46])
                                        Texp_construct "Extension_constructor"
                                        []
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[478,18000+47]..lib/shape.ml[478,18000+51])
                                        Texp_ident "path/1173"
                                  ]
                            ]
                      ]
              ]
              expression (lib/shape.ml[481,18067+2]..lib/shape.ml[481,18067+15])
                Texp_apply
                expression (lib/shape.ml[481,18067+2]..lib/shape.ml[481,18067+5])
                  Texp_ident "aux/1166"
                [
                  <arg>
                    Nolabel
                    expression (lib/shape.ml[481,18067+6]..lib/shape.ml[481,18067+15])
                      Texp_ident "namespace/1145"
                ]
    ]
  structure_item (lib/shape.ml[483,18084+0]..lib/shape.ml[485,18185+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[483,18084+4]..lib/shape.ml[483,18084+23])
          Tpat_var "for_persistent_unit/1196"
        expression (lib/shape.ml[483,18084+24]..lib/shape.ml[485,18185+24]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/shape.ml[483,18084+24]..lib/shape.ml[483,18084+25])
                Tpat_var "s/1198"
          ]
          Tfunction_body
            expression (lib/shape.ml[484,18112+2]..lib/shape.ml[485,18185+24])
              Texp_record
                fields =
                  [
                    "uid"
                      expression (lib/shape.ml[484,18112+10]..lib/shape.ml[484,18112+71])
                        Texp_construct "Some"
                        [
                          expression (lib/shape.ml[484,18112+15]..lib/shape.ml[484,18112+71])
                            Texp_apply
                            expression (lib/shape.ml[484,18112+16]..lib/shape.ml[484,18112+42])
                              Texp_ident "Uid/521.of_compilation_unit_id"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[484,18112+43]..lib/shape.ml[484,18112+70])
                                  Texp_apply
                                  expression (lib/shape.ml[484,18112+44]..lib/shape.ml[484,18112+67])
                                    Texp_ident "Ocaml_ocaml_types!.Ident.create_persistent"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/shape.ml[484,18112+68]..lib/shape.ml[484,18112+69])
                                        Texp_ident "s/1198"
                                  ]
                            ]
                        ]
                    "desc"
                      expression (lib/shape.ml[485,18185+11]..lib/shape.ml[485,18185+22])
                        Texp_construct "Comp_unit"
                        [
                          expression (lib/shape.ml[485,18185+21]..lib/shape.ml[485,18185+22])
                            Texp_ident "s/1198"
                        ]
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/shape.ml[487,18211+0]..lib/shape.ml[487,18211+49])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[487,18211+4]..lib/shape.ml[487,18211+19])
          Tpat_var "leaf_for_unpack/1199"
        expression (lib/shape.ml[487,18211+22]..lib/shape.ml[487,18211+49])
          Texp_record
            fields =
              [
                "uid"
                  expression (lib/shape.ml[487,18211+30]..lib/shape.ml[487,18211+34])
                    Texp_construct "None"
                    []
                "desc"
                  expression (lib/shape.ml[487,18211+43]..lib/shape.ml[487,18211+47])
                    Texp_construct "Leaf"
                    []
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
  structure_item (lib/shape.ml[489,18262+0]..lib/shape.ml[492,18347+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[489,18262+4]..lib/shape.ml[489,18262+19])
          Tpat_var "set_uid_if_none/1200"
        expression (lib/shape.ml[489,18262+20]..lib/shape.ml[492,18347+10]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/shape.ml[489,18262+20]..lib/shape.ml[489,18262+21])
                Tpat_var "t/1202"
            Nolabel
            Param_pat
              pattern (lib/shape.ml[489,18262+22]..lib/shape.ml[489,18262+25])
                Tpat_var "uid/1203"
          ]
          Tfunction_body
            expression (lib/shape.ml[490,18290+2]..lib/shape.ml[492,18347+10])
              Texp_match
              expression (lib/shape.ml[490,18290+8]..lib/shape.ml[490,18290+13])
                Texp_field
                expression (lib/shape.ml[490,18290+8]..lib/shape.ml[490,18290+9])
                  Texp_ident "t/1202"
                "uid"
              [
                <case>
                  pattern (lib/shape.ml[491,18309+4]..lib/shape.ml[491,18309+8])
                    Tpat_value
                    pattern (lib/shape.ml[491,18309+4]..lib/shape.ml[491,18309+8])
                      Tpat_construct "None"
                      []
                      None
                  expression (lib/shape.ml[491,18309+12]..lib/shape.ml[491,18309+37])
                    Texp_record
                      fields =
                        [
                          "uid"
                            expression (lib/shape.ml[491,18309+27]..lib/shape.ml[491,18309+35])
                              Texp_construct "Some"
                              [
                                expression (lib/shape.ml[491,18309+32]..lib/shape.ml[491,18309+35])
                                  Texp_ident "uid/1203"
                              ]
                          <kept>                        ]
                      representation =
                        Record_regular
                      extended_expression =
                        Some
                          expression (lib/shape.ml[491,18309+14]..lib/shape.ml[491,18309+15])
                            Texp_ident "t/1202"
                <case>
                  pattern (lib/shape.ml[492,18347+4]..lib/shape.ml[492,18347+5])
                    Tpat_value
                    pattern (lib/shape.ml[492,18347+4]..lib/shape.ml[492,18347+5])
                      Tpat_any
                  expression (lib/shape.ml[492,18347+9]..lib/shape.ml[492,18347+10])
                    Texp_ident "t/1202"
              ]
    ]
  structure_item (lib/shape.ml[494,18359+0]..lib/shape.ml[538,19846+3])
    Tstr_module
    Map/1289
      module_expr (lib/shape.ml[494,18359+13]..lib/shape.ml[538,19846+3])
        Tmod_structure
        [
          structure_item (lib/shape.ml[495,18379+2]..lib/shape.ml[495,18379+16])
            Tstr_type Rec
            [
              type_declaration shape/1204 (lib/shape.ml[495,18379+2]..lib/shape.ml[495,18379+16])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lib/shape.ml[495,18379+15]..lib/shape.ml[495,18379+16])
                      Ttyp_constr "t/1002"
                      []
            ]
          structure_item (lib/shape.ml[496,18396+2]..lib/shape.ml[496,18396+30])
            Tstr_type Nonrec
            [
              type_declaration t/1205 (lib/shape.ml[496,18396+2]..lib/shape.ml[496,18396+30])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lib/shape.ml[496,18396+18]..lib/shape.ml[496,18396+30])
                      Ttyp_constr "Item/1000.Map.t"
                      [
                        core_type (lib/shape.ml[496,18396+18]..lib/shape.ml[496,18396+19])
                          Ttyp_constr "t/1002"
                          []
                      ]
            ]
          structure_item (lib/shape.ml[498,18428+2]..lib/shape.ml[498,18428+28])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[498,18428+6]..lib/shape.ml[498,18428+11])
                  Tpat_var "empty/1206"
                expression (lib/shape.ml[498,18428+14]..lib/shape.ml[498,18428+28])
                  Texp_ident "Item/1000.Map.empty"
            ]
          structure_item (lib/shape.ml[500,18458+2]..lib/shape.ml[500,18458+50])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[500,18458+6]..lib/shape.ml[500,18458+9])
                  Tpat_var "add/1207"
                expression (lib/shape.ml[500,18458+10]..lib/shape.ml[500,18458+50]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[500,18458+10]..lib/shape.ml[500,18458+11])
                        Tpat_var "t/1209"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[500,18458+12]..lib/shape.ml[500,18458+16])
                        Tpat_var "item/1210"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[500,18458+17]..lib/shape.ml[500,18458+22])
                        Tpat_var "shape/1211"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[500,18458+25]..lib/shape.ml[500,18458+50])
                      Texp_apply
                      expression (lib/shape.ml[500,18458+25]..lib/shape.ml[500,18458+37])
                        Texp_ident "Item/1000.Map.add"
                      [
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[500,18458+38]..lib/shape.ml[500,18458+42])
                            Texp_ident "item/1210"
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[500,18458+43]..lib/shape.ml[500,18458+48])
                            Texp_ident "shape/1211"
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[500,18458+49]..lib/shape.ml[500,18458+50])
                            Texp_ident "t/1209"
                      ]
            ]
          structure_item (lib/shape.ml[502,18510+2]..lib/shape.ml[502,18510+68])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[502,18510+6]..lib/shape.ml[502,18510+15])
                  Tpat_var "add_value/1212"
                expression (lib/shape.ml[502,18510+16]..lib/shape.ml[502,18510+68]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[502,18510+16]..lib/shape.ml[502,18510+17])
                        Tpat_var "t/1214"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[502,18510+18]..lib/shape.ml[502,18510+20])
                        Tpat_var "id/1215"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[502,18510+21]..lib/shape.ml[502,18510+24])
                        Tpat_var "uid/1216"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[502,18510+27]..lib/shape.ml[502,18510+68])
                      Texp_apply
                      expression (lib/shape.ml[502,18510+27]..lib/shape.ml[502,18510+39])
                        Texp_ident "Item/1000.Map.add"
                      [
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[502,18510+40]..lib/shape.ml[502,18510+55])
                            Texp_apply
                            expression (lib/shape.ml[502,18510+41]..lib/shape.ml[502,18510+51])
                              Texp_ident "Item/1000.value"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[502,18510+52]..lib/shape.ml[502,18510+54])
                                  Texp_ident "id/1215"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[502,18510+56]..lib/shape.ml[502,18510+66])
                            Texp_apply
                            expression (lib/shape.ml[502,18510+57]..lib/shape.ml[502,18510+61])
                              Texp_ident "leaf/1122"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[502,18510+62]..lib/shape.ml[502,18510+65])
                                  Texp_ident "uid/1216"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[502,18510+67]..lib/shape.ml[502,18510+68])
                            Texp_ident "t/1214"
                      ]
            ]
          structure_item (lib/shape.ml[503,18579+2]..lib/shape.ml[505,18645+41])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[503,18579+6]..lib/shape.ml[503,18579+20])
                  Tpat_var "add_value_proj/1217"
                expression (lib/shape.ml[503,18579+21]..lib/shape.ml[505,18645+41]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[503,18579+21]..lib/shape.ml[503,18579+22])
                        Tpat_var "t/1219"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[503,18579+23]..lib/shape.ml[503,18579+25])
                        Tpat_var "id/1220"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[503,18579+26]..lib/shape.ml[503,18579+31])
                        Tpat_var "shape/1221"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[504,18613+4]..lib/shape.ml[505,18645+41])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[504,18613+8]..lib/shape.ml[504,18613+12])
                            Tpat_var "item/1222"
                          expression (lib/shape.ml[504,18613+15]..lib/shape.ml[504,18613+28])
                            Texp_apply
                            expression (lib/shape.ml[504,18613+15]..lib/shape.ml[504,18613+25])
                              Texp_ident "Item/1000.value"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[504,18613+26]..lib/shape.ml[504,18613+28])
                                  Texp_ident "id/1220"
                            ]
                      ]
                      expression (lib/shape.ml[505,18645+4]..lib/shape.ml[505,18645+41])
                        Texp_apply
                        expression (lib/shape.ml[505,18645+4]..lib/shape.ml[505,18645+16])
                          Texp_ident "Item/1000.Map.add"
                        [
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[505,18645+17]..lib/shape.ml[505,18645+21])
                              Texp_ident "item/1222"
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[505,18645+22]..lib/shape.ml[505,18645+39])
                              Texp_apply
                              expression (lib/shape.ml[505,18645+23]..lib/shape.ml[505,18645+27])
                                Texp_ident "proj/1125"
                              [
                                <arg>
                                  Optional "uid"
                                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                    Texp_construct "None"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[505,18645+28]..lib/shape.ml[505,18645+33])
                                    Texp_ident "shape/1221"
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[505,18645+34]..lib/shape.ml[505,18645+38])
                                    Texp_ident "item/1222"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[505,18645+40]..lib/shape.ml[505,18645+41])
                              Texp_ident "t/1219"
                        ]
            ]
          structure_item (lib/shape.ml[507,18688+2]..lib/shape.ml[507,18688+67])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[507,18688+6]..lib/shape.ml[507,18688+14])
                  Tpat_var "add_type/1223"
                expression (lib/shape.ml[507,18688+15]..lib/shape.ml[507,18688+67]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[507,18688+15]..lib/shape.ml[507,18688+16])
                        Tpat_var "t/1225"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[507,18688+17]..lib/shape.ml[507,18688+19])
                        Tpat_var "id/1226"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[507,18688+20]..lib/shape.ml[507,18688+23])
                        Tpat_var "uid/1227"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[507,18688+26]..lib/shape.ml[507,18688+67])
                      Texp_apply
                      expression (lib/shape.ml[507,18688+26]..lib/shape.ml[507,18688+38])
                        Texp_ident "Item/1000.Map.add"
                      [
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[507,18688+39]..lib/shape.ml[507,18688+54])
                            Texp_apply
                            expression (lib/shape.ml[507,18688+40]..lib/shape.ml[507,18688+50])
                              Texp_ident "Item/1000.type_"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[507,18688+51]..lib/shape.ml[507,18688+53])
                                  Texp_ident "id/1226"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[507,18688+55]..lib/shape.ml[507,18688+65])
                            Texp_apply
                            expression (lib/shape.ml[507,18688+56]..lib/shape.ml[507,18688+60])
                              Texp_ident "leaf/1122"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[507,18688+61]..lib/shape.ml[507,18688+64])
                                  Texp_ident "uid/1227"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[507,18688+66]..lib/shape.ml[507,18688+67])
                            Texp_ident "t/1225"
                      ]
            ]
          structure_item (lib/shape.ml[508,18756+2]..lib/shape.ml[510,18821+41])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[508,18756+6]..lib/shape.ml[508,18756+19])
                  Tpat_var "add_type_proj/1228"
                expression (lib/shape.ml[508,18756+20]..lib/shape.ml[510,18821+41]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[508,18756+20]..lib/shape.ml[508,18756+21])
                        Tpat_var "t/1230"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[508,18756+22]..lib/shape.ml[508,18756+24])
                        Tpat_var "id/1231"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[508,18756+25]..lib/shape.ml[508,18756+30])
                        Tpat_var "shape/1232"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[509,18789+4]..lib/shape.ml[510,18821+41])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[509,18789+8]..lib/shape.ml[509,18789+12])
                            Tpat_var "item/1233"
                          expression (lib/shape.ml[509,18789+15]..lib/shape.ml[509,18789+28])
                            Texp_apply
                            expression (lib/shape.ml[509,18789+15]..lib/shape.ml[509,18789+25])
                              Texp_ident "Item/1000.type_"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[509,18789+26]..lib/shape.ml[509,18789+28])
                                  Texp_ident "id/1231"
                            ]
                      ]
                      expression (lib/shape.ml[510,18821+4]..lib/shape.ml[510,18821+41])
                        Texp_apply
                        expression (lib/shape.ml[510,18821+4]..lib/shape.ml[510,18821+16])
                          Texp_ident "Item/1000.Map.add"
                        [
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[510,18821+17]..lib/shape.ml[510,18821+21])
                              Texp_ident "item/1233"
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[510,18821+22]..lib/shape.ml[510,18821+39])
                              Texp_apply
                              expression (lib/shape.ml[510,18821+23]..lib/shape.ml[510,18821+27])
                                Texp_ident "proj/1125"
                              [
                                <arg>
                                  Optional "uid"
                                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                    Texp_construct "None"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[510,18821+28]..lib/shape.ml[510,18821+33])
                                    Texp_ident "shape/1232"
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[510,18821+34]..lib/shape.ml[510,18821+38])
                                    Texp_ident "item/1233"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[510,18821+40]..lib/shape.ml[510,18821+41])
                              Texp_ident "t/1230"
                        ]
            ]
          structure_item (lib/shape.ml[512,18864+2]..lib/shape.ml[512,18864+68])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[512,18864+6]..lib/shape.ml[512,18864+16])
                  Tpat_var "add_module/1234"
                expression (lib/shape.ml[512,18864+17]..lib/shape.ml[512,18864+68]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[512,18864+17]..lib/shape.ml[512,18864+18])
                        Tpat_var "t/1236"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[512,18864+19]..lib/shape.ml[512,18864+21])
                        Tpat_var "id/1237"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[512,18864+22]..lib/shape.ml[512,18864+27])
                        Tpat_var "shape/1238"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[512,18864+30]..lib/shape.ml[512,18864+68])
                      Texp_apply
                      expression (lib/shape.ml[512,18864+30]..lib/shape.ml[512,18864+42])
                        Texp_ident "Item/1000.Map.add"
                      [
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[512,18864+43]..lib/shape.ml[512,18864+60])
                            Texp_apply
                            expression (lib/shape.ml[512,18864+44]..lib/shape.ml[512,18864+56])
                              Texp_ident "Item/1000.module_"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[512,18864+57]..lib/shape.ml[512,18864+59])
                                  Texp_ident "id/1237"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[512,18864+61]..lib/shape.ml[512,18864+66])
                            Texp_ident "shape/1238"
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[512,18864+67]..lib/shape.ml[512,18864+68])
                            Texp_ident "t/1236"
                      ]
            ]
          structure_item (lib/shape.ml[513,18933+2]..lib/shape.ml[515,19002+41])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[513,18933+6]..lib/shape.ml[513,18933+21])
                  Tpat_var "add_module_proj/1239"
                expression (lib/shape.ml[513,18933+22]..lib/shape.ml[515,19002+41]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[513,18933+22]..lib/shape.ml[513,18933+23])
                        Tpat_var "t/1241"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[513,18933+24]..lib/shape.ml[513,18933+26])
                        Tpat_var "id/1242"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[513,18933+27]..lib/shape.ml[513,18933+32])
                        Tpat_var "shape/1243"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[514,18968+4]..lib/shape.ml[515,19002+41])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[514,18968+8]..lib/shape.ml[514,18968+12])
                            Tpat_var "item/1244"
                          expression (lib/shape.ml[514,18968+15]..lib/shape.ml[514,18968+30])
                            Texp_apply
                            expression (lib/shape.ml[514,18968+15]..lib/shape.ml[514,18968+27])
                              Texp_ident "Item/1000.module_"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[514,18968+28]..lib/shape.ml[514,18968+30])
                                  Texp_ident "id/1242"
                            ]
                      ]
                      expression (lib/shape.ml[515,19002+4]..lib/shape.ml[515,19002+41])
                        Texp_apply
                        expression (lib/shape.ml[515,19002+4]..lib/shape.ml[515,19002+16])
                          Texp_ident "Item/1000.Map.add"
                        [
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[515,19002+17]..lib/shape.ml[515,19002+21])
                              Texp_ident "item/1244"
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[515,19002+22]..lib/shape.ml[515,19002+39])
                              Texp_apply
                              expression (lib/shape.ml[515,19002+23]..lib/shape.ml[515,19002+27])
                                Texp_ident "proj/1125"
                              [
                                <arg>
                                  Optional "uid"
                                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                    Texp_construct "None"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[515,19002+28]..lib/shape.ml[515,19002+33])
                                    Texp_ident "shape/1243"
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[515,19002+34]..lib/shape.ml[515,19002+38])
                                    Texp_ident "item/1244"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[515,19002+40]..lib/shape.ml[515,19002+41])
                              Texp_ident "t/1241"
                        ]
            ]
          structure_item (lib/shape.ml[517,19045+2]..lib/shape.ml[518,19078+51])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[517,19045+6]..lib/shape.ml[517,19045+21])
                  Tpat_var "add_module_type/1245"
                expression (lib/shape.ml[517,19045+22]..lib/shape.ml[518,19078+51]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[517,19045+22]..lib/shape.ml[517,19045+23])
                        Tpat_var "t/1247"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[517,19045+24]..lib/shape.ml[517,19045+26])
                        Tpat_var "id/1248"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[517,19045+27]..lib/shape.ml[517,19045+30])
                        Tpat_var "uid/1249"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[518,19078+4]..lib/shape.ml[518,19078+51])
                      Texp_apply
                      expression (lib/shape.ml[518,19078+4]..lib/shape.ml[518,19078+16])
                        Texp_ident "Item/1000.Map.add"
                      [
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[518,19078+17]..lib/shape.ml[518,19078+38])
                            Texp_apply
                            expression (lib/shape.ml[518,19078+18]..lib/shape.ml[518,19078+34])
                              Texp_ident "Item/1000.module_type"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[518,19078+35]..lib/shape.ml[518,19078+37])
                                  Texp_ident "id/1248"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[518,19078+39]..lib/shape.ml[518,19078+49])
                            Texp_apply
                            expression (lib/shape.ml[518,19078+40]..lib/shape.ml[518,19078+44])
                              Texp_ident "leaf/1122"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[518,19078+45]..lib/shape.ml[518,19078+48])
                                  Texp_ident "uid/1249"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[518,19078+50]..lib/shape.ml[518,19078+51])
                            Texp_ident "t/1247"
                      ]
            ]
          structure_item (lib/shape.ml[519,19130+2]..lib/shape.ml[521,19208+41])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[519,19130+6]..lib/shape.ml[519,19130+26])
                  Tpat_var "add_module_type_proj/1250"
                expression (lib/shape.ml[519,19130+27]..lib/shape.ml[521,19208+41]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[519,19130+27]..lib/shape.ml[519,19130+28])
                        Tpat_var "t/1252"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[519,19130+29]..lib/shape.ml[519,19130+31])
                        Tpat_var "id/1253"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[519,19130+32]..lib/shape.ml[519,19130+37])
                        Tpat_var "shape/1254"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[520,19170+4]..lib/shape.ml[521,19208+41])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[520,19170+8]..lib/shape.ml[520,19170+12])
                            Tpat_var "item/1255"
                          expression (lib/shape.ml[520,19170+15]..lib/shape.ml[520,19170+34])
                            Texp_apply
                            expression (lib/shape.ml[520,19170+15]..lib/shape.ml[520,19170+31])
                              Texp_ident "Item/1000.module_type"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[520,19170+32]..lib/shape.ml[520,19170+34])
                                  Texp_ident "id/1253"
                            ]
                      ]
                      expression (lib/shape.ml[521,19208+4]..lib/shape.ml[521,19208+41])
                        Texp_apply
                        expression (lib/shape.ml[521,19208+4]..lib/shape.ml[521,19208+16])
                          Texp_ident "Item/1000.Map.add"
                        [
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[521,19208+17]..lib/shape.ml[521,19208+21])
                              Texp_ident "item/1255"
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[521,19208+22]..lib/shape.ml[521,19208+39])
                              Texp_apply
                              expression (lib/shape.ml[521,19208+23]..lib/shape.ml[521,19208+27])
                                Texp_ident "proj/1125"
                              [
                                <arg>
                                  Optional "uid"
                                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                    Texp_construct "None"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[521,19208+28]..lib/shape.ml[521,19208+33])
                                    Texp_ident "shape/1254"
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[521,19208+34]..lib/shape.ml[521,19208+38])
                                    Texp_ident "item/1255"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[521,19208+40]..lib/shape.ml[521,19208+41])
                              Texp_ident "t/1252"
                        ]
            ]
          structure_item (lib/shape.ml[523,19251+2]..lib/shape.ml[524,19280+61])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[523,19251+6]..lib/shape.ml[523,19251+17])
                  Tpat_var "add_extcons/1256"
                expression (lib/shape.ml[523,19251+18]..lib/shape.ml[524,19280+61]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[523,19251+18]..lib/shape.ml[523,19251+19])
                        Tpat_var "t/1258"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[523,19251+20]..lib/shape.ml[523,19251+22])
                        Tpat_var "id/1259"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[523,19251+23]..lib/shape.ml[523,19251+26])
                        Tpat_var "uid/1260"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[524,19280+4]..lib/shape.ml[524,19280+61])
                      Texp_apply
                      expression (lib/shape.ml[524,19280+4]..lib/shape.ml[524,19280+16])
                        Texp_ident "Item/1000.Map.add"
                      [
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[524,19280+17]..lib/shape.ml[524,19280+48])
                            Texp_apply
                            expression (lib/shape.ml[524,19280+18]..lib/shape.ml[524,19280+44])
                              Texp_ident "Item/1000.extension_constructor"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[524,19280+45]..lib/shape.ml[524,19280+47])
                                  Texp_ident "id/1259"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[524,19280+49]..lib/shape.ml[524,19280+59])
                            Texp_apply
                            expression (lib/shape.ml[524,19280+50]..lib/shape.ml[524,19280+54])
                              Texp_ident "leaf/1122"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[524,19280+55]..lib/shape.ml[524,19280+58])
                                  Texp_ident "uid/1260"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[524,19280+60]..lib/shape.ml[524,19280+61])
                            Texp_ident "t/1258"
                      ]
            ]
          structure_item (lib/shape.ml[525,19342+2]..lib/shape.ml[527,19426+41])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[525,19342+6]..lib/shape.ml[525,19342+22])
                  Tpat_var "add_extcons_proj/1261"
                expression (lib/shape.ml[525,19342+23]..lib/shape.ml[527,19426+41]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[525,19342+23]..lib/shape.ml[525,19342+24])
                        Tpat_var "t/1263"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[525,19342+25]..lib/shape.ml[525,19342+27])
                        Tpat_var "id/1264"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[525,19342+28]..lib/shape.ml[525,19342+33])
                        Tpat_var "shape/1265"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[526,19378+4]..lib/shape.ml[527,19426+41])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[526,19378+8]..lib/shape.ml[526,19378+12])
                            Tpat_var "item/1266"
                          expression (lib/shape.ml[526,19378+15]..lib/shape.ml[526,19378+44])
                            Texp_apply
                            expression (lib/shape.ml[526,19378+15]..lib/shape.ml[526,19378+41])
                              Texp_ident "Item/1000.extension_constructor"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[526,19378+42]..lib/shape.ml[526,19378+44])
                                  Texp_ident "id/1264"
                            ]
                      ]
                      expression (lib/shape.ml[527,19426+4]..lib/shape.ml[527,19426+41])
                        Texp_apply
                        expression (lib/shape.ml[527,19426+4]..lib/shape.ml[527,19426+16])
                          Texp_ident "Item/1000.Map.add"
                        [
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[527,19426+17]..lib/shape.ml[527,19426+21])
                              Texp_ident "item/1266"
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[527,19426+22]..lib/shape.ml[527,19426+39])
                              Texp_apply
                              expression (lib/shape.ml[527,19426+23]..lib/shape.ml[527,19426+27])
                                Texp_ident "proj/1125"
                              [
                                <arg>
                                  Optional "uid"
                                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                    Texp_construct "None"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[527,19426+28]..lib/shape.ml[527,19426+33])
                                    Texp_ident "shape/1265"
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[527,19426+34]..lib/shape.ml[527,19426+38])
                                    Texp_ident "item/1266"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[527,19426+40]..lib/shape.ml[527,19426+41])
                              Texp_ident "t/1263"
                        ]
            ]
          structure_item (lib/shape.ml[529,19469+2]..lib/shape.ml[529,19469+69])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[529,19469+6]..lib/shape.ml[529,19469+15])
                  Tpat_var "add_class/1267"
                expression (lib/shape.ml[529,19469+16]..lib/shape.ml[529,19469+69]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[529,19469+16]..lib/shape.ml[529,19469+17])
                        Tpat_var "t/1269"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[529,19469+18]..lib/shape.ml[529,19469+20])
                        Tpat_var "id/1270"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[529,19469+21]..lib/shape.ml[529,19469+24])
                        Tpat_var "uid/1271"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[529,19469+27]..lib/shape.ml[529,19469+69])
                      Texp_apply
                      expression (lib/shape.ml[529,19469+27]..lib/shape.ml[529,19469+39])
                        Texp_ident "Item/1000.Map.add"
                      [
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[529,19469+40]..lib/shape.ml[529,19469+56])
                            Texp_apply
                            expression (lib/shape.ml[529,19469+41]..lib/shape.ml[529,19469+52])
                              Texp_ident "Item/1000.class_"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[529,19469+53]..lib/shape.ml[529,19469+55])
                                  Texp_ident "id/1270"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[529,19469+57]..lib/shape.ml[529,19469+67])
                            Texp_apply
                            expression (lib/shape.ml[529,19469+58]..lib/shape.ml[529,19469+62])
                              Texp_ident "leaf/1122"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[529,19469+63]..lib/shape.ml[529,19469+66])
                                  Texp_ident "uid/1271"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[529,19469+68]..lib/shape.ml[529,19469+69])
                            Texp_ident "t/1269"
                      ]
            ]
          structure_item (lib/shape.ml[530,19539+2]..lib/shape.ml[532,19606+41])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[530,19539+6]..lib/shape.ml[530,19539+20])
                  Tpat_var "add_class_proj/1272"
                expression (lib/shape.ml[530,19539+21]..lib/shape.ml[532,19606+41]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[530,19539+21]..lib/shape.ml[530,19539+22])
                        Tpat_var "t/1274"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[530,19539+23]..lib/shape.ml[530,19539+25])
                        Tpat_var "id/1275"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[530,19539+26]..lib/shape.ml[530,19539+31])
                        Tpat_var "shape/1276"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[531,19573+4]..lib/shape.ml[532,19606+41])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[531,19573+8]..lib/shape.ml[531,19573+12])
                            Tpat_var "item/1277"
                          expression (lib/shape.ml[531,19573+15]..lib/shape.ml[531,19573+29])
                            Texp_apply
                            expression (lib/shape.ml[531,19573+15]..lib/shape.ml[531,19573+26])
                              Texp_ident "Item/1000.class_"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[531,19573+27]..lib/shape.ml[531,19573+29])
                                  Texp_ident "id/1275"
                            ]
                      ]
                      expression (lib/shape.ml[532,19606+4]..lib/shape.ml[532,19606+41])
                        Texp_apply
                        expression (lib/shape.ml[532,19606+4]..lib/shape.ml[532,19606+16])
                          Texp_ident "Item/1000.Map.add"
                        [
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[532,19606+17]..lib/shape.ml[532,19606+21])
                              Texp_ident "item/1277"
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[532,19606+22]..lib/shape.ml[532,19606+39])
                              Texp_apply
                              expression (lib/shape.ml[532,19606+23]..lib/shape.ml[532,19606+27])
                                Texp_ident "proj/1125"
                              [
                                <arg>
                                  Optional "uid"
                                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                    Texp_construct "None"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[532,19606+28]..lib/shape.ml[532,19606+33])
                                    Texp_ident "shape/1276"
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[532,19606+34]..lib/shape.ml[532,19606+38])
                                    Texp_ident "item/1277"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[532,19606+40]..lib/shape.ml[532,19606+41])
                              Texp_ident "t/1274"
                        ]
            ]
          structure_item (lib/shape.ml[534,19649+2]..lib/shape.ml[534,19649+78])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[534,19649+6]..lib/shape.ml[534,19649+20])
                  Tpat_var "add_class_type/1278"
                expression (lib/shape.ml[534,19649+21]..lib/shape.ml[534,19649+78]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[534,19649+21]..lib/shape.ml[534,19649+22])
                        Tpat_var "t/1280"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[534,19649+23]..lib/shape.ml[534,19649+25])
                        Tpat_var "id/1281"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[534,19649+26]..lib/shape.ml[534,19649+29])
                        Tpat_var "uid/1282"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[534,19649+32]..lib/shape.ml[534,19649+78])
                      Texp_apply
                      expression (lib/shape.ml[534,19649+32]..lib/shape.ml[534,19649+44])
                        Texp_ident "Item/1000.Map.add"
                      [
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[534,19649+45]..lib/shape.ml[534,19649+65])
                            Texp_apply
                            expression (lib/shape.ml[534,19649+46]..lib/shape.ml[534,19649+61])
                              Texp_ident "Item/1000.class_type"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[534,19649+62]..lib/shape.ml[534,19649+64])
                                  Texp_ident "id/1281"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[534,19649+66]..lib/shape.ml[534,19649+76])
                            Texp_apply
                            expression (lib/shape.ml[534,19649+67]..lib/shape.ml[534,19649+71])
                              Texp_ident "leaf/1122"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[534,19649+72]..lib/shape.ml[534,19649+75])
                                  Texp_ident "uid/1282"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/shape.ml[534,19649+77]..lib/shape.ml[534,19649+78])
                            Texp_ident "t/1280"
                      ]
            ]
          structure_item (lib/shape.ml[535,19728+2]..lib/shape.ml[537,19804+41])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[535,19728+6]..lib/shape.ml[535,19728+25])
                  Tpat_var "add_class_type_proj/1283"
                expression (lib/shape.ml[535,19728+26]..lib/shape.ml[537,19804+41]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[535,19728+26]..lib/shape.ml[535,19728+27])
                        Tpat_var "t/1285"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[535,19728+28]..lib/shape.ml[535,19728+30])
                        Tpat_var "id/1286"
                    Nolabel
                    Param_pat
                      pattern (lib/shape.ml[535,19728+31]..lib/shape.ml[535,19728+36])
                        Tpat_var "shape/1287"
                  ]
                  Tfunction_body
                    expression (lib/shape.ml[536,19767+4]..lib/shape.ml[537,19804+41])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[536,19767+8]..lib/shape.ml[536,19767+12])
                            Tpat_var "item/1288"
                          expression (lib/shape.ml[536,19767+15]..lib/shape.ml[536,19767+33])
                            Texp_apply
                            expression (lib/shape.ml[536,19767+15]..lib/shape.ml[536,19767+30])
                              Texp_ident "Item/1000.class_type"
                            [
                              <arg>
                                Nolabel
                                expression (lib/shape.ml[536,19767+31]..lib/shape.ml[536,19767+33])
                                  Texp_ident "id/1286"
                            ]
                      ]
                      expression (lib/shape.ml[537,19804+4]..lib/shape.ml[537,19804+41])
                        Texp_apply
                        expression (lib/shape.ml[537,19804+4]..lib/shape.ml[537,19804+16])
                          Texp_ident "Item/1000.Map.add"
                        [
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[537,19804+17]..lib/shape.ml[537,19804+21])
                              Texp_ident "item/1288"
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[537,19804+22]..lib/shape.ml[537,19804+39])
                              Texp_apply
                              expression (lib/shape.ml[537,19804+23]..lib/shape.ml[537,19804+27])
                                Texp_ident "proj/1125"
                              [
                                <arg>
                                  Optional "uid"
                                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                    Texp_construct "None"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[537,19804+28]..lib/shape.ml[537,19804+33])
                                    Texp_ident "shape/1287"
                                <arg>
                                  Nolabel
                                  expression (lib/shape.ml[537,19804+34]..lib/shape.ml[537,19804+38])
                                    Texp_ident "item/1288"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/shape.ml[537,19804+40]..lib/shape.ml[537,19804+41])
                              Texp_ident "t/1285"
                        ]
            ]
        ]
]

{<Ocaml_ocaml_types__Shape>
 "Item"[module] ->
   {<Ocaml_ocaml_types__Shape.65>
    "Map"[module] ->
      CU Stdlib . "Map"[module] . "Make"[module](
      {<Ocaml_ocaml_types__Shape.63>
       "class_"[value] -> <Ocaml_ocaml_types__Shape.55>;
       "class_type"[value] -> <Ocaml_ocaml_types__Shape.57>;
       "compare"[value] -> <Ocaml_ocaml_types__Shape.41>;
       "extension_constructor"[value] -> <Ocaml_ocaml_types__Shape.53>;
       "make"[value] -> <Ocaml_ocaml_types__Shape.42>;
       "module_"[value] -> <Ocaml_ocaml_types__Shape.49>;
       "module_type"[value] -> <Ocaml_ocaml_types__Shape.51>;
       "print"[value] -> <Ocaml_ocaml_types__Shape.59>;
       "t"[type] -> <Ocaml_ocaml_types__Shape.40>;
       "type_"[value] -> <Ocaml_ocaml_types__Shape.47>;
       "value"[value] -> <Ocaml_ocaml_types__Shape.45>;
       })<Ocaml_ocaml_types__Shape.64>;
    "T"[module] ->
      {<Ocaml_ocaml_types__Shape.63>
       "class_"[value] -> <Ocaml_ocaml_types__Shape.55>;
       "class_type"[value] -> <Ocaml_ocaml_types__Shape.57>;
       "compare"[value] -> <Ocaml_ocaml_types__Shape.41>;
       "extension_constructor"[value] -> <Ocaml_ocaml_types__Shape.53>;
       "make"[value] -> <Ocaml_ocaml_types__Shape.42>;
       "module_"[value] -> <Ocaml_ocaml_types__Shape.49>;
       "module_type"[value] -> <Ocaml_ocaml_types__Shape.51>;
       "print"[value] -> <Ocaml_ocaml_types__Shape.59>;
       "t"[type] -> <Ocaml_ocaml_types__Shape.40>;
       "type_"[value] -> <Ocaml_ocaml_types__Shape.47>;
       "value"[value] -> <Ocaml_ocaml_types__Shape.45>;
       };
    "class_"[value] -> <Ocaml_ocaml_types__Shape.55>;
    "class_type"[value] -> <Ocaml_ocaml_types__Shape.57>;
    "compare"[value] -> <Ocaml_ocaml_types__Shape.41>;
    "extension_constructor"[value] -> <Ocaml_ocaml_types__Shape.53>;
    "make"[value] -> <Ocaml_ocaml_types__Shape.42>;
    "module_"[value] -> <Ocaml_ocaml_types__Shape.49>;
    "module_type"[value] -> <Ocaml_ocaml_types__Shape.51>;
    "print"[value] -> <Ocaml_ocaml_types__Shape.59>;
    "t"[type] -> <Ocaml_ocaml_types__Shape.40>;
    "type_"[value] -> <Ocaml_ocaml_types__Shape.47>;
    "value"[value] -> <Ocaml_ocaml_types__Shape.45>;
    };
 "Map"[module] ->
   {<Ocaml_ocaml_types__Shape.198>
    "add"[value] -> <Ocaml_ocaml_types__Shape.131>;
    "add_class"[value] -> <Ocaml_ocaml_types__Shape.180>;
    "add_class_proj"[value] -> <Ocaml_ocaml_types__Shape.184>;
    "add_class_type"[value] -> <Ocaml_ocaml_types__Shape.189>;
    "add_class_type_proj"[value] -> <Ocaml_ocaml_types__Shape.193>;
    "add_extcons"[value] -> <Ocaml_ocaml_types__Shape.171>;
    "add_extcons_proj"[value] -> <Ocaml_ocaml_types__Shape.175>;
    "add_module"[value] -> <Ocaml_ocaml_types__Shape.153>;
    "add_module_proj"[value] -> <Ocaml_ocaml_types__Shape.157>;
    "add_module_type"[value] -> <Ocaml_ocaml_types__Shape.162>;
    "add_module_type_proj"[value] -> <Ocaml_ocaml_types__Shape.166>;
    "add_type"[value] -> <Ocaml_ocaml_types__Shape.144>;
    "add_type_proj"[value] -> <Ocaml_ocaml_types__Shape.148>;
    "add_value"[value] -> <Ocaml_ocaml_types__Shape.135>;
    "add_value_proj"[value] -> <Ocaml_ocaml_types__Shape.139>;
    "empty"[value] -> <Ocaml_ocaml_types__Shape.130>;
    "shape"[type] -> <Ocaml_ocaml_types__Shape.128>;
    "t"[type] -> <Ocaml_ocaml_types__Shape.129>;
    };
 "Sig_component_kind"[module] ->
   {<Ocaml_ocaml_types__Shape.39>
    "can_appear_in_types"[value] -> <Ocaml_ocaml_types__Shape.38>;
    "t"[type] -> <Ocaml_ocaml_types__Shape.29>;
    "to_string"[value] -> <Ocaml_ocaml_types__Shape.37>;
    };
 "Uid"[module] ->
   {<Ocaml_ocaml_types__Shape.28>
    "for_actual_declaration"[value] -> <Ocaml_ocaml_types__Shape.27>;
    "id"[value] -> <Ocaml_ocaml_types__Shape.12>;
    "internal_not_actually_unique"[value] -> <Ocaml_ocaml_types__Shape.26>;
    "mk"[value] -> <Ocaml_ocaml_types__Shape.14>;
    "of_compilation_unit_id"[value] -> <Ocaml_ocaml_types__Shape.16>;
    "of_predef_id"[value] -> <Ocaml_ocaml_types__Shape.24>;
    "reinit"[value] -> <Ocaml_ocaml_types__Shape.13>;
    "t"[type] -> <Ocaml_ocaml_types__Shape.0>;
    };
 "abs"[value] -> <Ocaml_ocaml_types__Shape.87>;
 "app"[value] -> <Ocaml_ocaml_types__Shape.101>;
 "decompose_abs"[value] -> <Ocaml_ocaml_types__Shape.105>;
 "desc"[type] -> <Ocaml_ocaml_types__Shape.68>;
 "dummy_mod"[value] -> <Ocaml_ocaml_types__Shape.109>;
 "for_persistent_unit"[value] -> <Ocaml_ocaml_types__Shape.122>;
 "for_unnamed_functor_param"[value] -> <Ocaml_ocaml_types__Shape.83>;
 "fresh_var"[value] -> <Ocaml_ocaml_types__Shape.79>;
 "leaf"[value] -> <Ocaml_ocaml_types__Shape.94>;
 "leaf_for_unpack"[value] -> <Ocaml_ocaml_types__Shape.124>;
 "of_path"[value] -> <Ocaml_ocaml_types__Shape.110>;
 "proj"[value] -> <Ocaml_ocaml_types__Shape.96>;
 "set_uid_if_none"[value] -> <Ocaml_ocaml_types__Shape.125>;
 "str"[value] -> <Ocaml_ocaml_types__Shape.91>;
 "t"[type] -> <Ocaml_ocaml_types__Shape.67>;
 "var"[value] -> <Ocaml_ocaml_types__Shape.84>;
 "var"[type] -> <Ocaml_ocaml_types__Shape.66>;
 }

(setglobal Ocaml_ocaml_types__Shape!
  (let
    (Uid/521 =
       (let
         (id/302 = (makemutable 0 (int) -1)
          reinit/303 =
            (function param/305[int] : int
              (funct-body Ocaml_ocaml_types__Shape.Uid.reinit lib/shape.ml(43)<ghost>:1901-1916
                (before Ocaml_ocaml_types__Shape.Uid.reinit lib/shape.ml(43):1906-1916
                  (setfield_imm 0 id/302 -1))))
          mk/306 =
            (function current_unit/308
              (funct-body Ocaml_ocaml_types__Shape.Uid.mk lib/shape.ml(45)<ghost>:1928-2008
                (before Ocaml_ocaml_types__Shape.Uid.mk lib/shape.ml(46):1950-2008
                  (seq (+:=1 id/302)
                    (before Ocaml_ocaml_types__Shape.Uid.mk lib/shape.ml(47):1965-2008
                      (makeblock 1 (*,int) current_unit/308
                        (field_int 0 id/302)))))))
          of_compilation_unit_id/309 =
            (function id/311
              (funct-body Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(49)<ghost>:2039-2197
                (before Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(50):2048-2197
                  (seq
                    (if
                      (not
                        (after Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(50):2055-2076
                          (apply
                            (field_imm 12 (global Ocaml_ocaml_types__Ident!))
                            id/311)))
                      (before Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(51):2088-2159
                        (after Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(51):2088-2159
                          (apply
                            (field_imm 1 (global Ocaml_ocaml_types__Misc!))
                            [0:
                             [11:
                              "Types.Uid.of_compilation_unit_id " [3: 0 0]]
                             "Types.Uid.of_compilation_unit_id %S"]
                            (after Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(51):2144-2159
                              (apply
                                (field_imm 8
                                  (global Ocaml_ocaml_types__Ident!))
                                id/311)))))
                      0)
                    (before Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(52):2165-2197
                      (makeblock 0
                        (after Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(52):2182-2197
                          (apply
                            (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                            id/311))))))))
          of_predef_id/514 =
            (function id/516
              (funct-body Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(54)<ghost>:2218-2355
                (before Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(55):2227-2355
                  (seq
                    (if
                      (not
                        (after Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(55):2234-2254
                          (apply
                            (field_imm 19 (global Ocaml_ocaml_types__Ident!))
                            id/516)))
                      (before Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(56):2266-2327
                        (after Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(56):2266-2327
                          (apply
                            (field_imm 1 (global Ocaml_ocaml_types__Misc!))
                            [0:
                             [11: "Types.Uid.of_predef_id " [3: 0 0]]
                             "Types.Uid.of_predef_id %S"]
                            (after Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(56):2312-2327
                              (apply
                                (field_imm 8
                                  (global Ocaml_ocaml_types__Ident!))
                                id/516)))))
                      0)
                    (before Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(57):2333-2355
                      (makeblock 2
                        (after Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(57):2340-2355
                          (apply
                            (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                            id/516))))))))
          internal_not_actually_unique/517 = 0
          for_actual_declaration/518 =
            (function param/520 : int
              (funct-body Ocaml_ocaml_types__Shape.Uid.for_actual_declaration lib/shape.ml(61):2435-2481
                (catch
                  (switch param/520
                   case tag 1:
                    (before Ocaml_ocaml_types__Shape.Uid.for_actual_declaration lib/shape.ml(62):2460-2464
                      1)
                   default: (exit 1))
                 with (1)
                  (before Ocaml_ocaml_types__Shape.Uid.for_actual_declaration lib/shape.ml(63):2476-2481
                    0)))))
         (pseudo Ocaml_ocaml_types__Shape.Uid lib/shape.ml(16):1093-2485
           (makeblock 0 id/302 reinit/303 mk/306 of_compilation_unit_id/309
             of_predef_id/514 internal_not_actually_unique/517
             for_actual_declaration/518)))
     Sig_component_kind/536 =
       (let
         (to_string/530 =
            (function param/532[int]
              (funct-body Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(76):2663-2886
                (switch* param/532
                 case int 0:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(77):2687-2694
                    "value")
                 case int 1:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(78):2709-2715
                    "type")
                 case int 2:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(79):2732-2740
                    "module")
                 case int 3:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(80):2762-2775
                    "module type")
                 case int 4:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(81):2807-2830
                    "extension constructor")
                 case int 5:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(82):2846-2853
                    "class")
                 case int 6:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(83):2874-2886
                    "class type"))))
          can_appear_in_types/533 =
            (function param/535[int] : int
              (funct-body Ocaml_ocaml_types__Shape.Sig_component_kind.can_appear_in_types lib/shape.ml(85):2916-3068
                (catch
                  (catch
                    (if (!= param/535 4) (if param/535 (exit 3) (exit 2))
                      (exit 2))
                   with (2)
                    (before Ocaml_ocaml_types__Shape.Sig_component_kind.can_appear_in_types lib/shape.ml(88):2976-2981
                      0))
                 with (3)
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.can_appear_in_types lib/shape.ml(94):3064-3068
                    1)))))
         (pseudo Ocaml_ocaml_types__Shape.Sig_component_kind lib/shape.ml(66):2515-3072
           (makeblock 0 to_string/530 can_appear_in_types/533)))
     Item/1000 =
       (let
         (T/886 =
            (let
              (compare/538 =
                 (function prim/3438 prim/3437 stub
                   (caml_compare prim/3438 prim/3437))
               make/539 =
                 (function str/541 ns/542
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.make lib/shape.ml(102)<ghost>:3198-3214
                     (before Ocaml_ocaml_types__Shape.Item.T.make lib/shape.ml(102):3207-3214
                       (makeblock 0 str/541 ns/542))))
               value/543 =
                 (function id/545
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.value lib/shape.ml(104)<ghost>:3230-3274
                     (before Ocaml_ocaml_types__Shape.Item.T.value lib/shape.ml(104):3235-3274
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.value lib/shape.ml(104):3235-3248
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/545))
                         0))))
               type_/546 =
                 (function id/548
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.type_ lib/shape.ml(105)<ghost>:3289-3332
                     (before Ocaml_ocaml_types__Shape.Item.T.type_ lib/shape.ml(105):3294-3332
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.type_ lib/shape.ml(105):3294-3307
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/548))
                         1))))
               module_/549 =
                 (function id/551
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.module_ lib/shape.ml(106)<ghost>:3349-3394
                     (before Ocaml_ocaml_types__Shape.Item.T.module_ lib/shape.ml(106):3354-3394
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.module_ lib/shape.ml(106):3354-3367
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/551))
                         2))))
               module_type/552 =
                 (function id/554
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.module_type lib/shape.ml(107)<ghost>:3415-3465
                     (before Ocaml_ocaml_types__Shape.Item.T.module_type lib/shape.ml(107):3420-3465
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.module_type lib/shape.ml(107):3420-3433
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/554))
                         3))))
               extension_constructor/555 =
                 (function id/557
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.extension_constructor lib/shape.ml(108)<ghost>:3496-3562
                     (before Ocaml_ocaml_types__Shape.Item.T.extension_constructor lib/shape.ml(109):3507-3562
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.extension_constructor lib/shape.ml(109):3507-3520
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/557))
                         4))))
               class_/558 =
                 (function id/560
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.class_ lib/shape.ml(110)<ghost>:3578-3628
                     (before Ocaml_ocaml_types__Shape.Item.T.class_ lib/shape.ml(111):3589-3628
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.class_ lib/shape.ml(111):3589-3602
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/560))
                         5))))
               class_type/561 =
                 (function id/563
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.class_type lib/shape.ml(112)<ghost>:3648-3703
                     (before Ocaml_ocaml_types__Shape.Item.T.class_type lib/shape.ml(113):3659-3703
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.class_type lib/shape.ml(113):3659-3672
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/563))
                         6))))
               print/564 =
                 (function fmt/566 param/885 : int
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.print lib/shape.ml(115)<ghost>:3719-3824
                     (let
                       (ns/568 =a (field_imm 1 param/885)
                        name/567 =a (field_imm 0 param/885))
                       (before Ocaml_ocaml_types__Shape.Item.T.print lib/shape.ml(116):3742-3824
                         (after Ocaml_ocaml_types__Shape.Item.T.print lib/shape.ml(116):3742-3824
                           (apply (field_imm 138 (global Stdlib__Format!))
                             fmt/566
                             [0:
                              [3: 0 [12: '[' [2: 0 [12: ']' 0]]]] "%S[%s]"]
                             name/567
                             (after Ocaml_ocaml_types__Shape.Item.T.print lib/shape.ml(118):3791-3824
                               (apply (field_imm 0 Sig_component_kind/536)
                                 ns/568)))))))))
              (pseudo Ocaml_ocaml_types__Shape.Item.T lib/shape.ml(98):3108-3830
                (makeblock 0 compare/538 make/539 value/543 type_/546
                  module_/549 module_type/552 extension_constructor/555
                  class_/558 class_type/561 print/564)))
          include/3439 =a T/886
          compare/888 =a (field_mut 0 include/3439)
          make/889 =a (field_mut 1 include/3439)
          value/890 =a (field_mut 2 include/3439)
          type_/891 =a (field_mut 3 include/3439)
          module_/892 =a (field_mut 4 include/3439)
          module_type/893 =a (field_mut 5 include/3439)
          extension_constructor/894 =a (field_mut 6 include/3439)
          class_/895 =a (field_mut 7 include/3439)
          class_type/896 =a (field_mut 8 include/3439)
          print/897 =a (field_mut 9 include/3439)
          Map/999 =
            (apply
              (let (let/3440 = (field_imm 0 (global Stdlib__Map!)))
                (field_imm 0 (global Stdlib__Map!)))
              (makeblock 0 (field_mut 0 T/886))))
         (pseudo Ocaml_ocaml_types__Shape.Item lib/shape.ml(97):3088-3875
           (makeblock 0 T/886 compare/888 make/889 value/890 type_/891
             module_/892 module_type/893 extension_constructor/894 class_/895
             class_type/896 print/897 Map/999)))
     fresh_var/1103 =
       (function *opt*/1108 uid/1106
         (funct-body Ocaml_ocaml_types__Shape.fresh_var lib/shape.ml(190)<ghost>:6184-6290
           (let
             (name/1105 =
                (if *opt*/1108 (field_imm 0 *opt*/1108)
                  (before Ocaml_ocaml_types__Shape.fresh_var lib/shape.ml(190):6191-6202
                    "shape-var")))
             (before Ocaml_ocaml_types__Shape.fresh_var lib/shape.ml(191):6212-6290
               (let
                 (var/1107 =
                    (after Ocaml_ocaml_types__Shape.fresh_var lib/shape.ml(191):6222-6245
                      (apply (field_imm 5 (global Ocaml_ocaml_types__Ident!))
                        name/1105)))
                 (before Ocaml_ocaml_types__Shape.fresh_var lib/shape.ml(192):6251-6290
                   (makeblock 0 var/1107
                     (makeblock 0 (makeblock 0 uid/1106)
                       (makeblock 0 var/1107)))))))))
     for_unnamed_functor_param/1109 =
       (after Ocaml_ocaml_types__Shape.for_unnamed_functor_param lib/shape.ml(194):6324-6347
         (apply (field_imm 5 (global Ocaml_ocaml_types__Ident!)) "()"))
     var/1110 =
       (function uid/1112 id/1113
         (funct-body Ocaml_ocaml_types__Shape.var lib/shape.ml(196)<ghost>:6357-6401
           (before Ocaml_ocaml_types__Shape.var lib/shape.ml(197):6368-6401
             (makeblock 0 (makeblock 0 uid/1112) (makeblock 0 id/1113)))))
     abs/1114 =
       (function uid/1115 var/1116 body/1117
         (funct-body Ocaml_ocaml_types__Shape.abs lib/shape.ml(199)<ghost>:6411-6460
           (before Ocaml_ocaml_types__Shape.abs lib/shape.ml(200):6429-6460
             (makeblock 0 uid/1115 (makeblock 1 var/1116 body/1117)))))
     str/1118 =
       (function uid/1120 map/1121
         (funct-body Ocaml_ocaml_types__Shape.str lib/shape.ml(202)<ghost>:6470-6509
           (before Ocaml_ocaml_types__Shape.str lib/shape.ml(203):6483-6509
             (makeblock 0 uid/1120 (makeblock 3 map/1121)))))
     leaf/1122 =
       (function uid/1124
         (funct-body Ocaml_ocaml_types__Shape.leaf lib/shape.ml(205)<ghost>:6520-6559
           (before Ocaml_ocaml_types__Shape.leaf lib/shape.ml(206):6528-6559
             (makeblock 0 (makeblock 0 uid/1124) 0))))
     proj/1125 =
       (function uid/1127 t/1128 item/1129
         (funct-body Ocaml_ocaml_types__Shape.proj lib/shape.ml(208)<ghost>:6570-6877
           (before Ocaml_ocaml_types__Shape.proj lib/shape.ml(209):6586-6877
             (let (*match*/3448 = (field_imm 1 t/1128))
               (catch
                 (switch *match*/3448
                  case int 0:
                   (before Ocaml_ocaml_types__Shape.proj lib/shape.ml(213):6713-6714
                     t/1128)
                  case tag 3:
                   (let (map/1130 =a (field_imm 0 *match*/3448))
                     (before Ocaml_ocaml_types__Shape.proj lib/shape.ml(215):6739-6831
                       (try
                         (after Ocaml_ocaml_types__Shape.proj lib/shape.ml(215):6749-6771
                           (apply (field_imm 16 (field_imm 11 Item/1000))
                             item/1129 map/1130))
                        with exn/3446
                         (catch
                           (if (== exn/3446 (field_imm 7 (global Stdlib!)))
                             (before Ocaml_ocaml_types__Shape.proj lib/shape.ml(216):6796-6797
                               t/1128)
                             (exit 4))
                          with (4) (reraise exn/3446)))))
                  default: (exit 5))
                with (5)
                 (before Ocaml_ocaml_types__Shape.proj lib/shape.ml(219):6847-6877
                   (makeblock 0 uid/1127 (makeblock 4 t/1128 item/1129))))))))
     app/1131 =
       (function uid/1133 f/1134 arg/1135
         (funct-body Ocaml_ocaml_types__Shape.app lib/shape.ml(221)<ghost>:6887-6935
           (before Ocaml_ocaml_types__Shape.app lib/shape.ml(222):6907-6935
             (makeblock 0 uid/1133 (makeblock 2 f/1134 arg/1135)))))
     decompose_abs/1136 =
       (function t/1138
         (funct-body Ocaml_ocaml_types__Shape.decompose_abs lib/shape.ml(224)<ghost>:6955-7022
           (before Ocaml_ocaml_types__Shape.decompose_abs lib/shape.ml(225):6961-7022
             (let (*match*/3450 = (field_imm 1 t/1138))
               (catch
                 (switch *match*/3450
                  case tag 1:
                   (let
                     (t/1140 =a (field_imm 1 *match*/3450)
                      x/1139 =a (field_imm 0 *match*/3450))
                     (before Ocaml_ocaml_types__Shape.decompose_abs lib/shape.ml(226):6997-7008
                       (makeblock 0 (makeblock 0 x/1139 t/1140))))
                  default: (exit 6))
                with (6)
                 (before Ocaml_ocaml_types__Shape.decompose_abs lib/shape.ml(227):7018-7022
                   0))))))
     dummy_mod/1141 =
       (makeblock 0 0 (makeblock 3 (field_imm 0 (field_imm 11 Item/1000))))
     of_path/1142 =
       (function find_shape/1144 namespace/1145[int]
         (funct-body Ocaml_ocaml_types__Shape.of_path lib/shape.ml(470)<ghost>:17637-18082
           (before Ocaml_ocaml_types__Shape.of_path lib/shape.ml(471):17664-18082
             (letrec
               (aux/1166
                  (function ns/1167[int] param/1195
                    (funct-body Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(471):17716-18061
                      (switch* param/1195
                       case tag 0:
                        (let (id/1168 =a (field_imm 0 param/1195))
                          (before Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(472):17754-17770
                            (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(472):17754-17770
                              (apply find_shape/1144 ns/1167 id/1168))))
                       case tag 1:
                        (let
                          (name/1170 =a (field_imm 1 param/1195)
                           path/1169 =a (field_imm 0 param/1195))
                          (before Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(473):17798-17831
                            (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(473):17798-17831
                              (apply proj/1125 0
                                (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(473):17803-17820
                                  (apply aux/1166 2 path/1169))
                                (makeblock 0 (*,int) name/1170 ns/1167)))))
                       case tag 2:
                        (let
                          (p2/1172 =a (field_imm 1 param/1195)
                           p1/1171 =a (field_imm 0 param/1195))
                          (before Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(474):17857-17897
                            (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(474):17857-17897
                              (apply app/1131 0
                                (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(474):17861-17876
                                  (apply aux/1166 2 p1/1171))
                                (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(474):17882-17897
                                  (apply aux/1166 2 p2/1172))))))
                       case tag 3:
                        (let
                          (extra/1174 =a (field_imm 1 param/1195)
                           path/1173 =a (field_imm 0 param/1195))
                          (before Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(475):17931-18061
                            (if extra/1174
                              (let (*match*/3452 =a (field_imm 0 extra/1174))
                                (before Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(477):17986-17999
                                  (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(477):17986-17999
                                    (apply aux/1166 1 path/1173))))
                              (before Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(478):18021-18051
                                (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(478):18021-18051
                                  (apply aux/1166 4 path/1173))))))))))
               (before Ocaml_ocaml_types__Shape.of_path lib/shape.ml(481):18069-18082
                 (after Ocaml_ocaml_types__Shape.of_path lib/shape.ml(481):18069-18082
                   (apply aux/1166 namespace/1145)))))))
     for_persistent_unit/1196 =
       (function s/1198
         (funct-body Ocaml_ocaml_types__Shape.for_persistent_unit lib/shape.ml(483)<ghost>:18108-18209
           (before Ocaml_ocaml_types__Shape.for_persistent_unit lib/shape.ml(484):18114-18209
             (makeblock 0
               (makeblock 0
                 (after Ocaml_ocaml_types__Shape.for_persistent_unit lib/shape.ml(484):18127-18183
                   (apply (field_imm 3 Uid/521)
                     (after Ocaml_ocaml_types__Shape.for_persistent_unit lib/shape.ml(484):18155-18182
                       (apply
                         (field_imm 7 (global Ocaml_ocaml_types__Ident!))
                         s/1198)))))
               (makeblock 5 s/1198)))))
     leaf_for_unpack/1199 = [0: 0 0]
     set_uid_if_none/1200 =
       (function t/1202 uid/1203
         (funct-body Ocaml_ocaml_types__Shape.set_uid_if_none lib/shape.ml(489)<ghost>:18282-18357
           (before Ocaml_ocaml_types__Shape.set_uid_if_none lib/shape.ml(490):18292-18357
             (let (*match*/3456 = (field_imm 0 t/1202))
               (catch
                 (if *match*/3456 (exit 7)
                   (before Ocaml_ocaml_types__Shape.set_uid_if_none lib/shape.ml(491):18321-18346
                     (let (init/3455 = t/1202)
                       (makeblock 0 (makeblock 0 uid/1203)
                         (field_imm 1 init/3455)))))
                with (7)
                 (before Ocaml_ocaml_types__Shape.set_uid_if_none lib/shape.ml(492):18356-18357
                   t/1202))))))
     Map/1289 =
       (let
         (empty/1206 = (field_imm 0 (field_imm 11 Item/1000))
          add/1207 =
            (function t/1209 item/1210 shape/1211
              (funct-body Ocaml_ocaml_types__Shape.Map.add lib/shape.ml(500)<ghost>:18468-18508
                (before Ocaml_ocaml_types__Shape.Map.add lib/shape.ml(500):18483-18508
                  (after Ocaml_ocaml_types__Shape.Map.add lib/shape.ml(500):18483-18508
                    (apply (field_imm 1 (field_imm 11 Item/1000)) item/1210
                      shape/1211 t/1209)))))
          add_value/1212 =
            (function t/1214 id/1215 uid/1216
              (funct-body Ocaml_ocaml_types__Shape.Map.add_value lib/shape.ml(502)<ghost>:18526-18578
                (before Ocaml_ocaml_types__Shape.Map.add_value lib/shape.ml(502):18537-18578
                  (after Ocaml_ocaml_types__Shape.Map.add_value lib/shape.ml(502):18537-18578
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_value lib/shape.ml(502):18550-18565
                        (apply (field_imm 3 Item/1000) id/1215))
                      (after Ocaml_ocaml_types__Shape.Map.add_value lib/shape.ml(502):18566-18576
                        (apply leaf/1122 uid/1216))
                      t/1214)))))
          add_value_proj/1217 =
            (function t/1219 id/1220 shape/1221
              (funct-body Ocaml_ocaml_types__Shape.Map.add_value_proj lib/shape.ml(503)<ghost>:18600-18686
                (before Ocaml_ocaml_types__Shape.Map.add_value_proj lib/shape.ml(504):18617-18686
                  (let
                    (item/1222 =
                       (after Ocaml_ocaml_types__Shape.Map.add_value_proj lib/shape.ml(504):18628-18641
                         (apply (field_imm 3 Item/1000) id/1220)))
                    (before Ocaml_ocaml_types__Shape.Map.add_value_proj lib/shape.ml(505):18649-18686
                      (after Ocaml_ocaml_types__Shape.Map.add_value_proj lib/shape.ml(505):18649-18686
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1222
                          (after Ocaml_ocaml_types__Shape.Map.add_value_proj lib/shape.ml(505):18667-18684
                            (apply proj/1125 0 shape/1221 item/1222))
                          t/1219)))))))
          add_type/1223 =
            (function t/1225 id/1226 uid/1227
              (funct-body Ocaml_ocaml_types__Shape.Map.add_type lib/shape.ml(507)<ghost>:18703-18755
                (before Ocaml_ocaml_types__Shape.Map.add_type lib/shape.ml(507):18714-18755
                  (after Ocaml_ocaml_types__Shape.Map.add_type lib/shape.ml(507):18714-18755
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_type lib/shape.ml(507):18727-18742
                        (apply (field_imm 4 Item/1000) id/1226))
                      (after Ocaml_ocaml_types__Shape.Map.add_type lib/shape.ml(507):18743-18753
                        (apply leaf/1122 uid/1227))
                      t/1225)))))
          add_type_proj/1228 =
            (function t/1230 id/1231 shape/1232
              (funct-body Ocaml_ocaml_types__Shape.Map.add_type_proj lib/shape.ml(508)<ghost>:18776-18862
                (before Ocaml_ocaml_types__Shape.Map.add_type_proj lib/shape.ml(509):18793-18862
                  (let
                    (item/1233 =
                       (after Ocaml_ocaml_types__Shape.Map.add_type_proj lib/shape.ml(509):18804-18817
                         (apply (field_imm 4 Item/1000) id/1231)))
                    (before Ocaml_ocaml_types__Shape.Map.add_type_proj lib/shape.ml(510):18825-18862
                      (after Ocaml_ocaml_types__Shape.Map.add_type_proj lib/shape.ml(510):18825-18862
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1233
                          (after Ocaml_ocaml_types__Shape.Map.add_type_proj lib/shape.ml(510):18843-18860
                            (apply proj/1125 0 shape/1232 item/1233))
                          t/1230)))))))
          add_module/1234 =
            (function t/1236 id/1237 shape/1238
              (funct-body Ocaml_ocaml_types__Shape.Map.add_module lib/shape.ml(512)<ghost>:18881-18932
                (before Ocaml_ocaml_types__Shape.Map.add_module lib/shape.ml(512):18894-18932
                  (after Ocaml_ocaml_types__Shape.Map.add_module lib/shape.ml(512):18894-18932
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_module lib/shape.ml(512):18907-18924
                        (apply (field_imm 5 Item/1000) id/1237))
                      shape/1238 t/1236)))))
          add_module_proj/1239 =
            (function t/1241 id/1242 shape/1243
              (funct-body Ocaml_ocaml_types__Shape.Map.add_module_proj lib/shape.ml(513)<ghost>:18955-19043
                (before Ocaml_ocaml_types__Shape.Map.add_module_proj lib/shape.ml(514):18972-19043
                  (let
                    (item/1244 =
                       (after Ocaml_ocaml_types__Shape.Map.add_module_proj lib/shape.ml(514):18983-18998
                         (apply (field_imm 5 Item/1000) id/1242)))
                    (before Ocaml_ocaml_types__Shape.Map.add_module_proj lib/shape.ml(515):19006-19043
                      (after Ocaml_ocaml_types__Shape.Map.add_module_proj lib/shape.ml(515):19006-19043
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1244
                          (after Ocaml_ocaml_types__Shape.Map.add_module_proj lib/shape.ml(515):19024-19041
                            (apply proj/1125 0 shape/1243 item/1244))
                          t/1241)))))))
          add_module_type/1245 =
            (function t/1247 id/1248 uid/1249
              (funct-body Ocaml_ocaml_types__Shape.Map.add_module_type lib/shape.ml(517)<ghost>:19067-19129
                (before Ocaml_ocaml_types__Shape.Map.add_module_type lib/shape.ml(518):19082-19129
                  (after Ocaml_ocaml_types__Shape.Map.add_module_type lib/shape.ml(518):19082-19129
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_module_type lib/shape.ml(518):19095-19116
                        (apply (field_imm 6 Item/1000) id/1248))
                      (after Ocaml_ocaml_types__Shape.Map.add_module_type lib/shape.ml(518):19117-19127
                        (apply leaf/1122 uid/1249))
                      t/1247)))))
          add_module_type_proj/1250 =
            (function t/1252 id/1253 shape/1254
              (funct-body Ocaml_ocaml_types__Shape.Map.add_module_type_proj lib/shape.ml(519)<ghost>:19157-19249
                (before Ocaml_ocaml_types__Shape.Map.add_module_type_proj lib/shape.ml(520):19174-19249
                  (let
                    (item/1255 =
                       (after Ocaml_ocaml_types__Shape.Map.add_module_type_proj lib/shape.ml(520):19185-19204
                         (apply (field_imm 6 Item/1000) id/1253)))
                    (before Ocaml_ocaml_types__Shape.Map.add_module_type_proj lib/shape.ml(521):19212-19249
                      (after Ocaml_ocaml_types__Shape.Map.add_module_type_proj lib/shape.ml(521):19212-19249
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1255
                          (after Ocaml_ocaml_types__Shape.Map.add_module_type_proj lib/shape.ml(521):19230-19247
                            (apply proj/1125 0 shape/1254 item/1255))
                          t/1252)))))))
          add_extcons/1256 =
            (function t/1258 id/1259 uid/1260
              (funct-body Ocaml_ocaml_types__Shape.Map.add_extcons lib/shape.ml(523)<ghost>:19269-19341
                (before Ocaml_ocaml_types__Shape.Map.add_extcons lib/shape.ml(524):19284-19341
                  (after Ocaml_ocaml_types__Shape.Map.add_extcons lib/shape.ml(524):19284-19341
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_extcons lib/shape.ml(524):19297-19328
                        (apply (field_imm 7 Item/1000) id/1259))
                      (after Ocaml_ocaml_types__Shape.Map.add_extcons lib/shape.ml(524):19329-19339
                        (apply leaf/1122 uid/1260))
                      t/1258)))))
          add_extcons_proj/1261 =
            (function t/1263 id/1264 shape/1265
              (funct-body Ocaml_ocaml_types__Shape.Map.add_extcons_proj lib/shape.ml(525)<ghost>:19365-19467
                (before Ocaml_ocaml_types__Shape.Map.add_extcons_proj lib/shape.ml(526):19382-19467
                  (let
                    (item/1266 =
                       (after Ocaml_ocaml_types__Shape.Map.add_extcons_proj lib/shape.ml(526):19393-19422
                         (apply (field_imm 7 Item/1000) id/1264)))
                    (before Ocaml_ocaml_types__Shape.Map.add_extcons_proj lib/shape.ml(527):19430-19467
                      (after Ocaml_ocaml_types__Shape.Map.add_extcons_proj lib/shape.ml(527):19430-19467
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1266
                          (after Ocaml_ocaml_types__Shape.Map.add_extcons_proj lib/shape.ml(527):19448-19465
                            (apply proj/1125 0 shape/1265 item/1266))
                          t/1263)))))))
          add_class/1267 =
            (function t/1269 id/1270 uid/1271
              (funct-body Ocaml_ocaml_types__Shape.Map.add_class lib/shape.ml(529)<ghost>:19485-19538
                (before Ocaml_ocaml_types__Shape.Map.add_class lib/shape.ml(529):19496-19538
                  (after Ocaml_ocaml_types__Shape.Map.add_class lib/shape.ml(529):19496-19538
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_class lib/shape.ml(529):19509-19525
                        (apply (field_imm 8 Item/1000) id/1270))
                      (after Ocaml_ocaml_types__Shape.Map.add_class lib/shape.ml(529):19526-19536
                        (apply leaf/1122 uid/1271))
                      t/1269)))))
          add_class_proj/1272 =
            (function t/1274 id/1275 shape/1276
              (funct-body Ocaml_ocaml_types__Shape.Map.add_class_proj lib/shape.ml(530)<ghost>:19560-19647
                (before Ocaml_ocaml_types__Shape.Map.add_class_proj lib/shape.ml(531):19577-19647
                  (let
                    (item/1277 =
                       (after Ocaml_ocaml_types__Shape.Map.add_class_proj lib/shape.ml(531):19588-19602
                         (apply (field_imm 8 Item/1000) id/1275)))
                    (before Ocaml_ocaml_types__Shape.Map.add_class_proj lib/shape.ml(532):19610-19647
                      (after Ocaml_ocaml_types__Shape.Map.add_class_proj lib/shape.ml(532):19610-19647
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1277
                          (after Ocaml_ocaml_types__Shape.Map.add_class_proj lib/shape.ml(532):19628-19645
                            (apply proj/1125 0 shape/1276 item/1277))
                          t/1274)))))))
          add_class_type/1278 =
            (function t/1280 id/1281 uid/1282
              (funct-body Ocaml_ocaml_types__Shape.Map.add_class_type lib/shape.ml(534)<ghost>:19670-19727
                (before Ocaml_ocaml_types__Shape.Map.add_class_type lib/shape.ml(534):19681-19727
                  (after Ocaml_ocaml_types__Shape.Map.add_class_type lib/shape.ml(534):19681-19727
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_class_type lib/shape.ml(534):19694-19714
                        (apply (field_imm 9 Item/1000) id/1281))
                      (after Ocaml_ocaml_types__Shape.Map.add_class_type lib/shape.ml(534):19715-19725
                        (apply leaf/1122 uid/1282))
                      t/1280)))))
          add_class_type_proj/1283 =
            (function t/1285 id/1286 shape/1287
              (funct-body Ocaml_ocaml_types__Shape.Map.add_class_type_proj lib/shape.ml(535)<ghost>:19754-19845
                (before Ocaml_ocaml_types__Shape.Map.add_class_type_proj lib/shape.ml(536):19771-19845
                  (let
                    (item/1288 =
                       (after Ocaml_ocaml_types__Shape.Map.add_class_type_proj lib/shape.ml(536):19782-19800
                         (apply (field_imm 9 Item/1000) id/1286)))
                    (before Ocaml_ocaml_types__Shape.Map.add_class_type_proj lib/shape.ml(537):19808-19845
                      (after Ocaml_ocaml_types__Shape.Map.add_class_type_proj lib/shape.ml(537):19808-19845
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1288
                          (after Ocaml_ocaml_types__Shape.Map.add_class_type_proj lib/shape.ml(537):19826-19843
                            (apply proj/1125 0 shape/1287 item/1288))
                          t/1285))))))))
         (pseudo Ocaml_ocaml_types__Shape.Map lib/shape.ml(494):18372-19849
           (makeblock 0 empty/1206 add/1207 add_value/1212
             add_value_proj/1217 add_type/1223 add_type_proj/1228
             add_module/1234 add_module_proj/1239 add_module_type/1245
             add_module_type_proj/1250 add_extcons/1256 add_extcons_proj/1261
             add_class/1267 add_class_proj/1272 add_class_type/1278
             add_class_type_proj/1283))))
    (pseudo <unknown location>
      (makeblock 0 Uid/521 Sig_component_kind/536 Item/1000 fresh_var/1103
        for_unnamed_functor_param/1109 var/1110 abs/1114 str/1118 leaf/1122
        proj/1125 app/1131 decompose_abs/1136 dummy_mod/1141 of_path/1142
        for_persistent_unit/1196 leaf_for_unpack/1199 set_uid_if_none/1200
        Map/1289))))
(setglobal Ocaml_ocaml_types__Shape!
  (let
    (Uid/521 =
       (let
         (id/302 = (makemutable 0 (int) -1)
          reinit/303 =
            (function param/305[int] : int
              (funct-body Ocaml_ocaml_types__Shape.Uid.reinit lib/shape.ml(43)<ghost>:1901-1916
                (before Ocaml_ocaml_types__Shape.Uid.reinit lib/shape.ml(43):1906-1916
                  (setfield_imm 0 id/302 -1))))
          mk/306 =
            (function current_unit/308
              (funct-body Ocaml_ocaml_types__Shape.Uid.mk lib/shape.ml(45)<ghost>:1928-2008
                (before Ocaml_ocaml_types__Shape.Uid.mk lib/shape.ml(46):1950-2008
                  (seq (+:=1 id/302)
                    (before Ocaml_ocaml_types__Shape.Uid.mk lib/shape.ml(47):1965-2008
                      (makeblock 1 (*,int) current_unit/308
                        (field_int 0 id/302)))))))
          of_compilation_unit_id/309 =
            (function id/311
              (funct-body Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(49)<ghost>:2039-2197
                (before Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(50):2048-2197
                  (seq
                    (if
                      (not
                        (after Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(50):2055-2076
                          (apply
                            (field_imm 12 (global Ocaml_ocaml_types__Ident!))
                            id/311)))
                      (before Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(51):2088-2159
                        (after Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(51):2088-2159
                          (apply
                            (field_imm 1 (global Ocaml_ocaml_types__Misc!))
                            [0:
                             [11:
                              "Types.Uid.of_compilation_unit_id " [3: 0 0]]
                             "Types.Uid.of_compilation_unit_id %S"]
                            (after Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(51):2144-2159
                              (apply
                                (field_imm 8
                                  (global Ocaml_ocaml_types__Ident!))
                                id/311)))))
                      0)
                    (before Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(52):2165-2197
                      (makeblock 0
                        (after Ocaml_ocaml_types__Shape.Uid.of_compilation_unit_id lib/shape.ml(52):2182-2197
                          (apply
                            (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                            id/311))))))))
          of_predef_id/514 =
            (function id/516
              (funct-body Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(54)<ghost>:2218-2355
                (before Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(55):2227-2355
                  (seq
                    (if
                      (not
                        (after Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(55):2234-2254
                          (apply
                            (field_imm 19 (global Ocaml_ocaml_types__Ident!))
                            id/516)))
                      (before Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(56):2266-2327
                        (after Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(56):2266-2327
                          (apply
                            (field_imm 1 (global Ocaml_ocaml_types__Misc!))
                            [0:
                             [11: "Types.Uid.of_predef_id " [3: 0 0]]
                             "Types.Uid.of_predef_id %S"]
                            (after Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(56):2312-2327
                              (apply
                                (field_imm 8
                                  (global Ocaml_ocaml_types__Ident!))
                                id/516)))))
                      0)
                    (before Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(57):2333-2355
                      (makeblock 2
                        (after Ocaml_ocaml_types__Shape.Uid.of_predef_id lib/shape.ml(57):2340-2355
                          (apply
                            (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                            id/516))))))))
          internal_not_actually_unique/517 = 0
          for_actual_declaration/518 =
            (function param/520 : int
              (funct-body Ocaml_ocaml_types__Shape.Uid.for_actual_declaration lib/shape.ml(61):2435-2481
                (catch
                  (switch param/520
                   case tag 1:
                    (before Ocaml_ocaml_types__Shape.Uid.for_actual_declaration lib/shape.ml(62):2460-2464
                      1)
                   default: (exit 1))
                 with (1)
                  (before Ocaml_ocaml_types__Shape.Uid.for_actual_declaration lib/shape.ml(63):2476-2481
                    0)))))
         (pseudo Ocaml_ocaml_types__Shape.Uid lib/shape.ml(16):1093-2485
           (makeblock 0 id/302 reinit/303 mk/306 of_compilation_unit_id/309
             of_predef_id/514 internal_not_actually_unique/517
             for_actual_declaration/518)))
     Sig_component_kind/536 =
       (let
         (to_string/530 =
            (function param/532[int]
              (funct-body Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(76):2663-2886
                (switch* param/532
                 case int 0:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(77):2687-2694
                    "value")
                 case int 1:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(78):2709-2715
                    "type")
                 case int 2:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(79):2732-2740
                    "module")
                 case int 3:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(80):2762-2775
                    "module type")
                 case int 4:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(81):2807-2830
                    "extension constructor")
                 case int 5:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(82):2846-2853
                    "class")
                 case int 6:
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.to_string lib/shape.ml(83):2874-2886
                    "class type"))))
          can_appear_in_types/533 =
            (function param/535[int] : int
              (funct-body Ocaml_ocaml_types__Shape.Sig_component_kind.can_appear_in_types lib/shape.ml(85):2916-3068
                (catch
                  (if (!= param/535 4)
                    (if param/535
                      (before Ocaml_ocaml_types__Shape.Sig_component_kind.can_appear_in_types lib/shape.ml(94):3064-3068
                        1)
                      (exit 2))
                    (exit 2))
                 with (2)
                  (before Ocaml_ocaml_types__Shape.Sig_component_kind.can_appear_in_types lib/shape.ml(88):2976-2981
                    0)))))
         (pseudo Ocaml_ocaml_types__Shape.Sig_component_kind lib/shape.ml(66):2515-3072
           (makeblock 0 to_string/530 can_appear_in_types/533)))
     Item/1000 =
       (let
         (T/886 =
            (let
              (compare/538 =
                 (function prim/3438 prim/3437 stub
                   (caml_compare prim/3438 prim/3437))
               make/539 =
                 (function str/541 ns/542
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.make lib/shape.ml(102)<ghost>:3198-3214
                     (before Ocaml_ocaml_types__Shape.Item.T.make lib/shape.ml(102):3207-3214
                       (makeblock 0 str/541 ns/542))))
               value/543 =
                 (function id/545
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.value lib/shape.ml(104)<ghost>:3230-3274
                     (before Ocaml_ocaml_types__Shape.Item.T.value lib/shape.ml(104):3235-3274
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.value lib/shape.ml(104):3235-3248
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/545))
                         0))))
               type_/546 =
                 (function id/548
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.type_ lib/shape.ml(105)<ghost>:3289-3332
                     (before Ocaml_ocaml_types__Shape.Item.T.type_ lib/shape.ml(105):3294-3332
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.type_ lib/shape.ml(105):3294-3307
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/548))
                         1))))
               module_/549 =
                 (function id/551
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.module_ lib/shape.ml(106)<ghost>:3349-3394
                     (before Ocaml_ocaml_types__Shape.Item.T.module_ lib/shape.ml(106):3354-3394
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.module_ lib/shape.ml(106):3354-3367
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/551))
                         2))))
               module_type/552 =
                 (function id/554
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.module_type lib/shape.ml(107)<ghost>:3415-3465
                     (before Ocaml_ocaml_types__Shape.Item.T.module_type lib/shape.ml(107):3420-3465
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.module_type lib/shape.ml(107):3420-3433
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/554))
                         3))))
               extension_constructor/555 =
                 (function id/557
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.extension_constructor lib/shape.ml(108)<ghost>:3496-3562
                     (before Ocaml_ocaml_types__Shape.Item.T.extension_constructor lib/shape.ml(109):3507-3562
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.extension_constructor lib/shape.ml(109):3507-3520
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/557))
                         4))))
               class_/558 =
                 (function id/560
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.class_ lib/shape.ml(110)<ghost>:3578-3628
                     (before Ocaml_ocaml_types__Shape.Item.T.class_ lib/shape.ml(111):3589-3628
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.class_ lib/shape.ml(111):3589-3602
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/560))
                         5))))
               class_type/561 =
                 (function id/563
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.class_type lib/shape.ml(112)<ghost>:3648-3703
                     (before Ocaml_ocaml_types__Shape.Item.T.class_type lib/shape.ml(113):3659-3703
                       (makeblock 0 (*,int)
                         (after Ocaml_ocaml_types__Shape.Item.T.class_type lib/shape.ml(113):3659-3672
                           (apply
                             (field_imm 8 (global Ocaml_ocaml_types__Ident!))
                             id/563))
                         6))))
               print/564 =
                 (function fmt/566 param/885 : int
                   (funct-body Ocaml_ocaml_types__Shape.Item.T.print lib/shape.ml(115)<ghost>:3719-3824
                     (let
                       (ns/568 =a (field_imm 1 param/885)
                        name/567 =a (field_imm 0 param/885))
                       (before Ocaml_ocaml_types__Shape.Item.T.print lib/shape.ml(116):3742-3824
                         (after Ocaml_ocaml_types__Shape.Item.T.print lib/shape.ml(116):3742-3824
                           (apply (field_imm 138 (global Stdlib__Format!))
                             fmt/566
                             [0:
                              [3: 0 [12: '[' [2: 0 [12: ']' 0]]]] "%S[%s]"]
                             name/567
                             (after Ocaml_ocaml_types__Shape.Item.T.print lib/shape.ml(118):3791-3824
                               (apply (field_imm 0 Sig_component_kind/536)
                                 ns/568)))))))))
              (pseudo Ocaml_ocaml_types__Shape.Item.T lib/shape.ml(98):3108-3830
                (makeblock 0 compare/538 make/539 value/543 type_/546
                  module_/549 module_type/552 extension_constructor/555
                  class_/558 class_type/561 print/564)))
          include/3439 =a T/886
          compare/888 =a (field_mut 0 include/3439)
          make/889 =a (field_mut 1 include/3439)
          value/890 =a (field_mut 2 include/3439)
          type_/891 =a (field_mut 3 include/3439)
          module_/892 =a (field_mut 4 include/3439)
          module_type/893 =a (field_mut 5 include/3439)
          extension_constructor/894 =a (field_mut 6 include/3439)
          class_/895 =a (field_mut 7 include/3439)
          class_type/896 =a (field_mut 8 include/3439)
          print/897 =a (field_mut 9 include/3439)
          Map/999 =
            (apply
              (let (let/3440 = (field_imm 0 (global Stdlib__Map!)))
                (field_imm 0 (global Stdlib__Map!)))
              (makeblock 0 (field_mut 0 T/886))))
         (pseudo Ocaml_ocaml_types__Shape.Item lib/shape.ml(97):3088-3875
           (makeblock 0 T/886 compare/888 make/889 value/890 type_/891
             module_/892 module_type/893 extension_constructor/894 class_/895
             class_type/896 print/897 Map/999)))
     fresh_var/1103 =
       (function *opt*/1108 uid/1106
         (funct-body Ocaml_ocaml_types__Shape.fresh_var lib/shape.ml(190)<ghost>:6184-6290
           (let
             (name/1105 =
                (if *opt*/1108 (field_imm 0 *opt*/1108)
                  (before Ocaml_ocaml_types__Shape.fresh_var lib/shape.ml(190):6191-6202
                    "shape-var")))
             (before Ocaml_ocaml_types__Shape.fresh_var lib/shape.ml(191):6212-6290
               (let
                 (var/1107 =
                    (after Ocaml_ocaml_types__Shape.fresh_var lib/shape.ml(191):6222-6245
                      (apply (field_imm 5 (global Ocaml_ocaml_types__Ident!))
                        name/1105)))
                 (before Ocaml_ocaml_types__Shape.fresh_var lib/shape.ml(192):6251-6290
                   (makeblock 0 var/1107
                     (makeblock 0 (makeblock 0 uid/1106)
                       (makeblock 0 var/1107)))))))))
     for_unnamed_functor_param/1109 =
       (after Ocaml_ocaml_types__Shape.for_unnamed_functor_param lib/shape.ml(194):6324-6347
         (apply (field_imm 5 (global Ocaml_ocaml_types__Ident!)) "()"))
     var/1110 =
       (function uid/1112 id/1113
         (funct-body Ocaml_ocaml_types__Shape.var lib/shape.ml(196)<ghost>:6357-6401
           (before Ocaml_ocaml_types__Shape.var lib/shape.ml(197):6368-6401
             (makeblock 0 (makeblock 0 uid/1112) (makeblock 0 id/1113)))))
     abs/1114 =
       (function uid/1115 var/1116 body/1117
         (funct-body Ocaml_ocaml_types__Shape.abs lib/shape.ml(199)<ghost>:6411-6460
           (before Ocaml_ocaml_types__Shape.abs lib/shape.ml(200):6429-6460
             (makeblock 0 uid/1115 (makeblock 1 var/1116 body/1117)))))
     str/1118 =
       (function uid/1120 map/1121
         (funct-body Ocaml_ocaml_types__Shape.str lib/shape.ml(202)<ghost>:6470-6509
           (before Ocaml_ocaml_types__Shape.str lib/shape.ml(203):6483-6509
             (makeblock 0 uid/1120 (makeblock 3 map/1121)))))
     leaf/1122 =
       (function uid/1124
         (funct-body Ocaml_ocaml_types__Shape.leaf lib/shape.ml(205)<ghost>:6520-6559
           (before Ocaml_ocaml_types__Shape.leaf lib/shape.ml(206):6528-6559
             (makeblock 0 (makeblock 0 uid/1124) 0))))
     proj/1125 =
       (function uid/1127 t/1128 item/1129
         (funct-body Ocaml_ocaml_types__Shape.proj lib/shape.ml(208)<ghost>:6570-6877
           (before Ocaml_ocaml_types__Shape.proj lib/shape.ml(209):6586-6877
             (let (*match*/3448 = (field_imm 1 t/1128))
               (switch *match*/3448
                case int 0:
                 (before Ocaml_ocaml_types__Shape.proj lib/shape.ml(213):6713-6714
                   t/1128)
                case tag 3:
                 (let (map/1130 =a (field_imm 0 *match*/3448))
                   (before Ocaml_ocaml_types__Shape.proj lib/shape.ml(215):6739-6831
                     (try
                       (after Ocaml_ocaml_types__Shape.proj lib/shape.ml(215):6749-6771
                         (apply (field_imm 16 (field_imm 11 Item/1000))
                           item/1129 map/1130))
                      with exn/3446
                       (if (== exn/3446 (field_imm 7 (global Stdlib!)))
                         (before Ocaml_ocaml_types__Shape.proj lib/shape.ml(216):6796-6797
                           t/1128)
                         (reraise exn/3446)))))
                default:
                 (before Ocaml_ocaml_types__Shape.proj lib/shape.ml(219):6847-6877
                   (makeblock 0 uid/1127 (makeblock 4 t/1128 item/1129))))))))
     app/1131 =
       (function uid/1133 f/1134 arg/1135
         (funct-body Ocaml_ocaml_types__Shape.app lib/shape.ml(221)<ghost>:6887-6935
           (before Ocaml_ocaml_types__Shape.app lib/shape.ml(222):6907-6935
             (makeblock 0 uid/1133 (makeblock 2 f/1134 arg/1135)))))
     decompose_abs/1136 =
       (function t/1138
         (funct-body Ocaml_ocaml_types__Shape.decompose_abs lib/shape.ml(224)<ghost>:6955-7022
           (before Ocaml_ocaml_types__Shape.decompose_abs lib/shape.ml(225):6961-7022
             (let (*match*/3450 = (field_imm 1 t/1138))
               (catch
                 (switch *match*/3450
                  case tag 1:
                   (let
                     (t/1140 =a (field_imm 1 *match*/3450)
                      x/1139 =a (field_imm 0 *match*/3450))
                     (before Ocaml_ocaml_types__Shape.decompose_abs lib/shape.ml(226):6997-7008
                       (makeblock 0 (makeblock 0 x/1139 t/1140))))
                  default: (exit 6))
                with (6)
                 (before Ocaml_ocaml_types__Shape.decompose_abs lib/shape.ml(227):7018-7022
                   0))))))
     dummy_mod/1141 =
       (makeblock 0 0 (makeblock 3 (field_imm 0 (field_imm 11 Item/1000))))
     of_path/1142 =
       (function find_shape/1144 namespace/1145[int]
         (funct-body Ocaml_ocaml_types__Shape.of_path lib/shape.ml(470)<ghost>:17637-18082
           (before Ocaml_ocaml_types__Shape.of_path lib/shape.ml(471):17664-18082
             (letrec
               (aux/1166
                  (function ns/1167[int] param/1195
                    (funct-body Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(471):17716-18061
                      (switch* param/1195
                       case tag 0:
                        (let (id/1168 =a (field_imm 0 param/1195))
                          (before Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(472):17754-17770
                            (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(472):17754-17770
                              (apply find_shape/1144 ns/1167 id/1168))))
                       case tag 1:
                        (let
                          (name/1170 =a (field_imm 1 param/1195)
                           path/1169 =a (field_imm 0 param/1195))
                          (before Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(473):17798-17831
                            (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(473):17798-17831
                              (apply proj/1125 0
                                (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(473):17803-17820
                                  (apply aux/1166 2 path/1169))
                                (makeblock 0 (*,int) name/1170 ns/1167)))))
                       case tag 2:
                        (let
                          (p2/1172 =a (field_imm 1 param/1195)
                           p1/1171 =a (field_imm 0 param/1195))
                          (before Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(474):17857-17897
                            (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(474):17857-17897
                              (apply app/1131 0
                                (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(474):17861-17876
                                  (apply aux/1166 2 p1/1171))
                                (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(474):17882-17897
                                  (apply aux/1166 2 p2/1172))))))
                       case tag 3:
                        (let
                          (extra/1174 =a (field_imm 1 param/1195)
                           path/1173 =a (field_imm 0 param/1195))
                          (before Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(475):17931-18061
                            (if extra/1174
                              (before Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(477):17986-17999
                                (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(477):17986-17999
                                  (apply aux/1166 1 path/1173)))
                              (before Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(478):18021-18051
                                (after Ocaml_ocaml_types__Shape.of_path.aux lib/shape.ml(478):18021-18051
                                  (apply aux/1166 4 path/1173))))))))))
               (before Ocaml_ocaml_types__Shape.of_path lib/shape.ml(481):18069-18082
                 (after Ocaml_ocaml_types__Shape.of_path lib/shape.ml(481):18069-18082
                   (apply aux/1166 namespace/1145)))))))
     for_persistent_unit/1196 =
       (function s/1198
         (funct-body Ocaml_ocaml_types__Shape.for_persistent_unit lib/shape.ml(483)<ghost>:18108-18209
           (before Ocaml_ocaml_types__Shape.for_persistent_unit lib/shape.ml(484):18114-18209
             (makeblock 0
               (makeblock 0
                 (after Ocaml_ocaml_types__Shape.for_persistent_unit lib/shape.ml(484):18127-18183
                   (apply (field_imm 3 Uid/521)
                     (after Ocaml_ocaml_types__Shape.for_persistent_unit lib/shape.ml(484):18155-18182
                       (apply
                         (field_imm 7 (global Ocaml_ocaml_types__Ident!))
                         s/1198)))))
               (makeblock 5 s/1198)))))
     leaf_for_unpack/1199 = [0: 0 0]
     set_uid_if_none/1200 =
       (function t/1202 uid/1203
         (funct-body Ocaml_ocaml_types__Shape.set_uid_if_none lib/shape.ml(489)<ghost>:18282-18357
           (before Ocaml_ocaml_types__Shape.set_uid_if_none lib/shape.ml(490):18292-18357
             (let (*match*/3456 = (field_imm 0 t/1202))
               (if *match*/3456
                 (before Ocaml_ocaml_types__Shape.set_uid_if_none lib/shape.ml(492):18356-18357
                   t/1202)
                 (before Ocaml_ocaml_types__Shape.set_uid_if_none lib/shape.ml(491):18321-18346
                   (let (init/3455 = t/1202)
                     (makeblock 0 (makeblock 0 uid/1203)
                       (field_imm 1 init/3455)))))))))
     Map/1289 =
       (let
         (empty/1206 = (field_imm 0 (field_imm 11 Item/1000))
          add/1207 =
            (function t/1209 item/1210 shape/1211
              (funct-body Ocaml_ocaml_types__Shape.Map.add lib/shape.ml(500)<ghost>:18468-18508
                (before Ocaml_ocaml_types__Shape.Map.add lib/shape.ml(500):18483-18508
                  (after Ocaml_ocaml_types__Shape.Map.add lib/shape.ml(500):18483-18508
                    (apply (field_imm 1 (field_imm 11 Item/1000)) item/1210
                      shape/1211 t/1209)))))
          add_value/1212 =
            (function t/1214 id/1215 uid/1216
              (funct-body Ocaml_ocaml_types__Shape.Map.add_value lib/shape.ml(502)<ghost>:18526-18578
                (before Ocaml_ocaml_types__Shape.Map.add_value lib/shape.ml(502):18537-18578
                  (after Ocaml_ocaml_types__Shape.Map.add_value lib/shape.ml(502):18537-18578
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_value lib/shape.ml(502):18550-18565
                        (apply (field_imm 3 Item/1000) id/1215))
                      (after Ocaml_ocaml_types__Shape.Map.add_value lib/shape.ml(502):18566-18576
                        (apply leaf/1122 uid/1216))
                      t/1214)))))
          add_value_proj/1217 =
            (function t/1219 id/1220 shape/1221
              (funct-body Ocaml_ocaml_types__Shape.Map.add_value_proj lib/shape.ml(503)<ghost>:18600-18686
                (before Ocaml_ocaml_types__Shape.Map.add_value_proj lib/shape.ml(504):18617-18686
                  (let
                    (item/1222 =
                       (after Ocaml_ocaml_types__Shape.Map.add_value_proj lib/shape.ml(504):18628-18641
                         (apply (field_imm 3 Item/1000) id/1220)))
                    (before Ocaml_ocaml_types__Shape.Map.add_value_proj lib/shape.ml(505):18649-18686
                      (after Ocaml_ocaml_types__Shape.Map.add_value_proj lib/shape.ml(505):18649-18686
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1222
                          (after Ocaml_ocaml_types__Shape.Map.add_value_proj lib/shape.ml(505):18667-18684
                            (apply proj/1125 0 shape/1221 item/1222))
                          t/1219)))))))
          add_type/1223 =
            (function t/1225 id/1226 uid/1227
              (funct-body Ocaml_ocaml_types__Shape.Map.add_type lib/shape.ml(507)<ghost>:18703-18755
                (before Ocaml_ocaml_types__Shape.Map.add_type lib/shape.ml(507):18714-18755
                  (after Ocaml_ocaml_types__Shape.Map.add_type lib/shape.ml(507):18714-18755
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_type lib/shape.ml(507):18727-18742
                        (apply (field_imm 4 Item/1000) id/1226))
                      (after Ocaml_ocaml_types__Shape.Map.add_type lib/shape.ml(507):18743-18753
                        (apply leaf/1122 uid/1227))
                      t/1225)))))
          add_type_proj/1228 =
            (function t/1230 id/1231 shape/1232
              (funct-body Ocaml_ocaml_types__Shape.Map.add_type_proj lib/shape.ml(508)<ghost>:18776-18862
                (before Ocaml_ocaml_types__Shape.Map.add_type_proj lib/shape.ml(509):18793-18862
                  (let
                    (item/1233 =
                       (after Ocaml_ocaml_types__Shape.Map.add_type_proj lib/shape.ml(509):18804-18817
                         (apply (field_imm 4 Item/1000) id/1231)))
                    (before Ocaml_ocaml_types__Shape.Map.add_type_proj lib/shape.ml(510):18825-18862
                      (after Ocaml_ocaml_types__Shape.Map.add_type_proj lib/shape.ml(510):18825-18862
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1233
                          (after Ocaml_ocaml_types__Shape.Map.add_type_proj lib/shape.ml(510):18843-18860
                            (apply proj/1125 0 shape/1232 item/1233))
                          t/1230)))))))
          add_module/1234 =
            (function t/1236 id/1237 shape/1238
              (funct-body Ocaml_ocaml_types__Shape.Map.add_module lib/shape.ml(512)<ghost>:18881-18932
                (before Ocaml_ocaml_types__Shape.Map.add_module lib/shape.ml(512):18894-18932
                  (after Ocaml_ocaml_types__Shape.Map.add_module lib/shape.ml(512):18894-18932
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_module lib/shape.ml(512):18907-18924
                        (apply (field_imm 5 Item/1000) id/1237))
                      shape/1238 t/1236)))))
          add_module_proj/1239 =
            (function t/1241 id/1242 shape/1243
              (funct-body Ocaml_ocaml_types__Shape.Map.add_module_proj lib/shape.ml(513)<ghost>:18955-19043
                (before Ocaml_ocaml_types__Shape.Map.add_module_proj lib/shape.ml(514):18972-19043
                  (let
                    (item/1244 =
                       (after Ocaml_ocaml_types__Shape.Map.add_module_proj lib/shape.ml(514):18983-18998
                         (apply (field_imm 5 Item/1000) id/1242)))
                    (before Ocaml_ocaml_types__Shape.Map.add_module_proj lib/shape.ml(515):19006-19043
                      (after Ocaml_ocaml_types__Shape.Map.add_module_proj lib/shape.ml(515):19006-19043
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1244
                          (after Ocaml_ocaml_types__Shape.Map.add_module_proj lib/shape.ml(515):19024-19041
                            (apply proj/1125 0 shape/1243 item/1244))
                          t/1241)))))))
          add_module_type/1245 =
            (function t/1247 id/1248 uid/1249
              (funct-body Ocaml_ocaml_types__Shape.Map.add_module_type lib/shape.ml(517)<ghost>:19067-19129
                (before Ocaml_ocaml_types__Shape.Map.add_module_type lib/shape.ml(518):19082-19129
                  (after Ocaml_ocaml_types__Shape.Map.add_module_type lib/shape.ml(518):19082-19129
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_module_type lib/shape.ml(518):19095-19116
                        (apply (field_imm 6 Item/1000) id/1248))
                      (after Ocaml_ocaml_types__Shape.Map.add_module_type lib/shape.ml(518):19117-19127
                        (apply leaf/1122 uid/1249))
                      t/1247)))))
          add_module_type_proj/1250 =
            (function t/1252 id/1253 shape/1254
              (funct-body Ocaml_ocaml_types__Shape.Map.add_module_type_proj lib/shape.ml(519)<ghost>:19157-19249
                (before Ocaml_ocaml_types__Shape.Map.add_module_type_proj lib/shape.ml(520):19174-19249
                  (let
                    (item/1255 =
                       (after Ocaml_ocaml_types__Shape.Map.add_module_type_proj lib/shape.ml(520):19185-19204
                         (apply (field_imm 6 Item/1000) id/1253)))
                    (before Ocaml_ocaml_types__Shape.Map.add_module_type_proj lib/shape.ml(521):19212-19249
                      (after Ocaml_ocaml_types__Shape.Map.add_module_type_proj lib/shape.ml(521):19212-19249
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1255
                          (after Ocaml_ocaml_types__Shape.Map.add_module_type_proj lib/shape.ml(521):19230-19247
                            (apply proj/1125 0 shape/1254 item/1255))
                          t/1252)))))))
          add_extcons/1256 =
            (function t/1258 id/1259 uid/1260
              (funct-body Ocaml_ocaml_types__Shape.Map.add_extcons lib/shape.ml(523)<ghost>:19269-19341
                (before Ocaml_ocaml_types__Shape.Map.add_extcons lib/shape.ml(524):19284-19341
                  (after Ocaml_ocaml_types__Shape.Map.add_extcons lib/shape.ml(524):19284-19341
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_extcons lib/shape.ml(524):19297-19328
                        (apply (field_imm 7 Item/1000) id/1259))
                      (after Ocaml_ocaml_types__Shape.Map.add_extcons lib/shape.ml(524):19329-19339
                        (apply leaf/1122 uid/1260))
                      t/1258)))))
          add_extcons_proj/1261 =
            (function t/1263 id/1264 shape/1265
              (funct-body Ocaml_ocaml_types__Shape.Map.add_extcons_proj lib/shape.ml(525)<ghost>:19365-19467
                (before Ocaml_ocaml_types__Shape.Map.add_extcons_proj lib/shape.ml(526):19382-19467
                  (let
                    (item/1266 =
                       (after Ocaml_ocaml_types__Shape.Map.add_extcons_proj lib/shape.ml(526):19393-19422
                         (apply (field_imm 7 Item/1000) id/1264)))
                    (before Ocaml_ocaml_types__Shape.Map.add_extcons_proj lib/shape.ml(527):19430-19467
                      (after Ocaml_ocaml_types__Shape.Map.add_extcons_proj lib/shape.ml(527):19430-19467
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1266
                          (after Ocaml_ocaml_types__Shape.Map.add_extcons_proj lib/shape.ml(527):19448-19465
                            (apply proj/1125 0 shape/1265 item/1266))
                          t/1263)))))))
          add_class/1267 =
            (function t/1269 id/1270 uid/1271
              (funct-body Ocaml_ocaml_types__Shape.Map.add_class lib/shape.ml(529)<ghost>:19485-19538
                (before Ocaml_ocaml_types__Shape.Map.add_class lib/shape.ml(529):19496-19538
                  (after Ocaml_ocaml_types__Shape.Map.add_class lib/shape.ml(529):19496-19538
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_class lib/shape.ml(529):19509-19525
                        (apply (field_imm 8 Item/1000) id/1270))
                      (after Ocaml_ocaml_types__Shape.Map.add_class lib/shape.ml(529):19526-19536
                        (apply leaf/1122 uid/1271))
                      t/1269)))))
          add_class_proj/1272 =
            (function t/1274 id/1275 shape/1276
              (funct-body Ocaml_ocaml_types__Shape.Map.add_class_proj lib/shape.ml(530)<ghost>:19560-19647
                (before Ocaml_ocaml_types__Shape.Map.add_class_proj lib/shape.ml(531):19577-19647
                  (let
                    (item/1277 =
                       (after Ocaml_ocaml_types__Shape.Map.add_class_proj lib/shape.ml(531):19588-19602
                         (apply (field_imm 8 Item/1000) id/1275)))
                    (before Ocaml_ocaml_types__Shape.Map.add_class_proj lib/shape.ml(532):19610-19647
                      (after Ocaml_ocaml_types__Shape.Map.add_class_proj lib/shape.ml(532):19610-19647
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1277
                          (after Ocaml_ocaml_types__Shape.Map.add_class_proj lib/shape.ml(532):19628-19645
                            (apply proj/1125 0 shape/1276 item/1277))
                          t/1274)))))))
          add_class_type/1278 =
            (function t/1280 id/1281 uid/1282
              (funct-body Ocaml_ocaml_types__Shape.Map.add_class_type lib/shape.ml(534)<ghost>:19670-19727
                (before Ocaml_ocaml_types__Shape.Map.add_class_type lib/shape.ml(534):19681-19727
                  (after Ocaml_ocaml_types__Shape.Map.add_class_type lib/shape.ml(534):19681-19727
                    (apply (field_imm 1 (field_imm 11 Item/1000))
                      (after Ocaml_ocaml_types__Shape.Map.add_class_type lib/shape.ml(534):19694-19714
                        (apply (field_imm 9 Item/1000) id/1281))
                      (after Ocaml_ocaml_types__Shape.Map.add_class_type lib/shape.ml(534):19715-19725
                        (apply leaf/1122 uid/1282))
                      t/1280)))))
          add_class_type_proj/1283 =
            (function t/1285 id/1286 shape/1287
              (funct-body Ocaml_ocaml_types__Shape.Map.add_class_type_proj lib/shape.ml(535)<ghost>:19754-19845
                (before Ocaml_ocaml_types__Shape.Map.add_class_type_proj lib/shape.ml(536):19771-19845
                  (let
                    (item/1288 =
                       (after Ocaml_ocaml_types__Shape.Map.add_class_type_proj lib/shape.ml(536):19782-19800
                         (apply (field_imm 9 Item/1000) id/1286)))
                    (before Ocaml_ocaml_types__Shape.Map.add_class_type_proj lib/shape.ml(537):19808-19845
                      (after Ocaml_ocaml_types__Shape.Map.add_class_type_proj lib/shape.ml(537):19808-19845
                        (apply (field_imm 1 (field_imm 11 Item/1000))
                          item/1288
                          (after Ocaml_ocaml_types__Shape.Map.add_class_type_proj lib/shape.ml(537):19826-19843
                            (apply proj/1125 0 shape/1287 item/1288))
                          t/1285))))))))
         (pseudo Ocaml_ocaml_types__Shape.Map lib/shape.ml(494):18372-19849
           (makeblock 0 empty/1206 add/1207 add_value/1212
             add_value_proj/1217 add_type/1223 add_type_proj/1228
             add_module/1234 add_module_proj/1239 add_module_type/1245
             add_module_type_proj/1250 add_extcons/1256 add_extcons_proj/1261
             add_class/1267 add_class_proj/1272 add_class_type/1278
             add_class_type_proj/1283))))
    (pseudo <unknown location>
      (makeblock 0 Uid/521 Sig_component_kind/536 Item/1000 fresh_var/1103
        for_unnamed_functor_param/1109 var/1110 abs/1114 str/1118 leaf/1122
        proj/1125 app/1131 decompose_abs/1136 dummy_mod/1141 of_path/1142
        for_persistent_unit/1196 leaf_for_unpack/1199 set_uid_if_none/1200
        Map/1289))))
