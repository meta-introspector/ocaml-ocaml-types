[
  structure_item (lib/ident.ml[16,1079+0]..[16,1079+16])
    Pstr_open Fresh
    module_expr (lib/ident.ml[16,1079+5]..[16,1079+16])
      Pmod_ident "Local_store" (lib/ident.ml[16,1079+5]..[16,1079+16])
  structure_item (lib/ident.ml[18,1097+0]..[18,1097+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[18,1097+4]..[18,1097+16])
          Ppat_var "lowest_scope" (lib/ident.ml[18,1097+4]..[18,1097+16])
        expression (lib/ident.ml[18,1097+20]..[18,1097+21])
          Pexp_constant PConst_int (0,None)
    ]
  structure_item (lib/ident.ml[19,1119+0]..[19,1119+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[19,1119+4]..[19,1119+17])
          Ppat_var "highest_scope" (lib/ident.ml[19,1119+4]..[19,1119+17])
        expression (lib/ident.ml[19,1119+20]..[19,1119+29])
          Pexp_constant PConst_int (100000000,None)
    ]
  structure_item (lib/ident.ml[21,1150+0]..[25,1277+42])
    Pstr_type Rec
    [
      type_declaration "t" (lib/ident.ml[21,1150+5]..[21,1150+6]) (lib/ident.ml[21,1150+0]..[25,1277+42])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/ident.ml[22,1159+2]..[22,1159+41])
                "Local" (lib/ident.ml[22,1159+4]..[22,1159+9])
                [
                  (lib/ident.ml[22,1159+15]..[22,1159+28])
                    Immutable
                    "name" (lib/ident.ml[22,1159+15]..[22,1159+19])                    core_type (lib/ident.ml[22,1159+21]..[22,1159+27])
                      Ptyp_constr "string" (lib/ident.ml[22,1159+21]..[22,1159+27])
                      []
                  (lib/ident.ml[22,1159+29]..[22,1159+39])
                    Immutable
                    "stamp" (lib/ident.ml[22,1159+29]..[22,1159+34])                    core_type (lib/ident.ml[22,1159+36]..[22,1159+39])
                      Ptyp_constr "int" (lib/ident.ml[22,1159+36]..[22,1159+39])
                      []
                ]
                None
              (lib/ident.ml[23,1201+2]..[23,1201+54])
                "Scoped" (lib/ident.ml[23,1201+4]..[23,1201+10])
                [
                  (lib/ident.ml[23,1201+16]..[23,1201+29])
                    Immutable
                    "name" (lib/ident.ml[23,1201+16]..[23,1201+20])                    core_type (lib/ident.ml[23,1201+22]..[23,1201+28])
                      Ptyp_constr "string" (lib/ident.ml[23,1201+22]..[23,1201+28])
                      []
                  (lib/ident.ml[23,1201+30]..[23,1201+41])
                    Immutable
                    "stamp" (lib/ident.ml[23,1201+30]..[23,1201+35])                    core_type (lib/ident.ml[23,1201+37]..[23,1201+40])
                      Ptyp_constr "int" (lib/ident.ml[23,1201+37]..[23,1201+40])
                      []
                  (lib/ident.ml[23,1201+42]..[23,1201+52])
                    Immutable
                    "scope" (lib/ident.ml[23,1201+42]..[23,1201+47])                    core_type (lib/ident.ml[23,1201+49]..[23,1201+52])
                      Ptyp_constr "int" (lib/ident.ml[23,1201+49]..[23,1201+52])
                      []
                ]
                None
              (lib/ident.ml[24,1256+2]..[24,1256+20])
                "Global" (lib/ident.ml[24,1256+4]..[24,1256+10])
                [
                  core_type (lib/ident.ml[24,1256+14]..[24,1256+20])
                    Ptyp_constr "string" (lib/ident.ml[24,1256+14]..[24,1256+20])
                    []
                ]
                None
              (lib/ident.ml[25,1277+2]..[25,1277+42])
                "Predef" (lib/ident.ml[25,1277+4]..[25,1277+10])
                [
                  (lib/ident.ml[25,1277+16]..[25,1277+29])
                    Immutable
                    "name" (lib/ident.ml[25,1277+16]..[25,1277+20])                    core_type (lib/ident.ml[25,1277+22]..[25,1277+28])
                      Ptyp_constr "string" (lib/ident.ml[25,1277+22]..[25,1277+28])
                      []
                  (lib/ident.ml[25,1277+30]..[25,1277+40])
                    Immutable
                    "stamp" (lib/ident.ml[25,1277+30]..[25,1277+35])                    core_type (lib/ident.ml[25,1277+37]..[25,1277+40])
                      Ptyp_constr "int" (lib/ident.ml[25,1277+37]..[25,1277+40])
                      []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/ident.ml[31,1495+0]..[31,1495+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[31,1495+4]..[31,1495+16])
          Ppat_var "currentstamp" (lib/ident.ml[31,1495+4]..[31,1495+16])
        expression (lib/ident.ml[31,1495+19]..[31,1495+26])
          Pexp_apply
          expression (lib/ident.ml[31,1495+19]..[31,1495+24])
            Pexp_ident "s_ref" (lib/ident.ml[31,1495+19]..[31,1495+24])
          [
            <arg>
            Nolabel
              expression (lib/ident.ml[31,1495+25]..[31,1495+26])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (lib/ident.ml[32,1522+0]..[32,1522+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[32,1522+4]..[32,1522+15])
          Ppat_var "predefstamp" (lib/ident.ml[32,1522+4]..[32,1522+15])
        expression (lib/ident.ml[32,1522+18]..[32,1522+25])
          Pexp_apply
          expression (lib/ident.ml[32,1522+18]..[32,1522+23])
            Pexp_ident "s_ref" (lib/ident.ml[32,1522+18]..[32,1522+23])
          [
            <arg>
            Nolabel
              expression (lib/ident.ml[32,1522+24]..[32,1522+25])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (lib/ident.ml[34,1549+0]..[36,1599+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[34,1549+4]..[34,1549+17])
          Ppat_var "create_scoped" (lib/ident.ml[34,1549+4]..[34,1549+17])
        expression (lib/ident.ml[34,1549+18]..[36,1599+51]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[34,1549+18]..[34,1549+24])
              Labelled "scope"
              None
              pattern (lib/ident.ml[34,1549+19]..[34,1549+24])
                Ppat_var "scope" (lib/ident.ml[34,1549+19]..[34,1549+24])
            Pparam_val (lib/ident.ml[34,1549+25]..[34,1549+26])
              Nolabel
              None
              pattern (lib/ident.ml[34,1549+25]..[34,1549+26])
                Ppat_var "s" (lib/ident.ml[34,1549+25]..[34,1549+26])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[35,1578+2]..[36,1599+51])
              Pexp_sequence
              expression (lib/ident.ml[35,1578+2]..[35,1578+19])
                Pexp_apply
                expression (lib/ident.ml[35,1578+2]..[35,1578+6])
                  Pexp_ident "incr" (lib/ident.ml[35,1578+2]..[35,1578+6])
                [
                  <arg>
                  Nolabel
                    expression (lib/ident.ml[35,1578+7]..[35,1578+19])
                      Pexp_ident "currentstamp" (lib/ident.ml[35,1578+7]..[35,1578+19])
                ]
              expression (lib/ident.ml[36,1599+2]..[36,1599+51])
                Pexp_construct "Scoped" (lib/ident.ml[36,1599+2]..[36,1599+8])
                Some
                  expression (lib/ident.ml[36,1599+9]..[36,1599+51])
                    Pexp_record
                    [
                      "name" (lib/ident.ml[36,1599+11]..[36,1599+15])
                        expression (lib/ident.ml[36,1599+18]..[36,1599+19])
                          Pexp_ident "s" (lib/ident.ml[36,1599+18]..[36,1599+19])
                      "stamp" (lib/ident.ml[36,1599+21]..[36,1599+26])
                        expression (lib/ident.ml[36,1599+29]..[36,1599+42])
                          Pexp_apply
                          expression (lib/ident.ml[36,1599+29]..[36,1599+30])
                            Pexp_ident "!" (lib/ident.ml[36,1599+29]..[36,1599+30])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[36,1599+30]..[36,1599+42])
                                Pexp_ident "currentstamp" (lib/ident.ml[36,1599+30]..[36,1599+42])
                          ]
                      "scope" (lib/ident.ml[36,1599+44]..[36,1599+49]) ghost
                        expression (lib/ident.ml[36,1599+44]..[36,1599+49])
                          Pexp_ident "scope" (lib/ident.ml[36,1599+44]..[36,1599+49])
                    ]
                    None
    ]
  structure_item (lib/ident.ml[38,1652+0]..[40,1694+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[38,1652+4]..[38,1652+16])
          Ppat_var "create_local" (lib/ident.ml[38,1652+4]..[38,1652+16])
        expression (lib/ident.ml[38,1652+17]..[40,1694+43]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[38,1652+17]..[38,1652+18])
              Nolabel
              None
              pattern (lib/ident.ml[38,1652+17]..[38,1652+18])
                Ppat_var "s" (lib/ident.ml[38,1652+17]..[38,1652+18])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[39,1673+2]..[40,1694+43])
              Pexp_sequence
              expression (lib/ident.ml[39,1673+2]..[39,1673+19])
                Pexp_apply
                expression (lib/ident.ml[39,1673+2]..[39,1673+6])
                  Pexp_ident "incr" (lib/ident.ml[39,1673+2]..[39,1673+6])
                [
                  <arg>
                  Nolabel
                    expression (lib/ident.ml[39,1673+7]..[39,1673+19])
                      Pexp_ident "currentstamp" (lib/ident.ml[39,1673+7]..[39,1673+19])
                ]
              expression (lib/ident.ml[40,1694+2]..[40,1694+43])
                Pexp_construct "Local" (lib/ident.ml[40,1694+2]..[40,1694+7])
                Some
                  expression (lib/ident.ml[40,1694+8]..[40,1694+43])
                    Pexp_record
                    [
                      "name" (lib/ident.ml[40,1694+10]..[40,1694+14])
                        expression (lib/ident.ml[40,1694+17]..[40,1694+18])
                          Pexp_ident "s" (lib/ident.ml[40,1694+17]..[40,1694+18])
                      "stamp" (lib/ident.ml[40,1694+20]..[40,1694+25])
                        expression (lib/ident.ml[40,1694+28]..[40,1694+41])
                          Pexp_apply
                          expression (lib/ident.ml[40,1694+28]..[40,1694+29])
                            Pexp_ident "!" (lib/ident.ml[40,1694+28]..[40,1694+29])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[40,1694+29]..[40,1694+41])
                                Pexp_ident "currentstamp" (lib/ident.ml[40,1694+29]..[40,1694+41])
                          ]
                    ]
                    None
    ]
  structure_item (lib/ident.ml[42,1739+0]..[44,1781+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[42,1739+4]..[42,1739+17])
          Ppat_var "create_predef" (lib/ident.ml[42,1739+4]..[42,1739+17])
        expression (lib/ident.ml[42,1739+18]..[44,1781+43]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[42,1739+18]..[42,1739+19])
              Nolabel
              None
              pattern (lib/ident.ml[42,1739+18]..[42,1739+19])
                Ppat_var "s" (lib/ident.ml[42,1739+18]..[42,1739+19])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[43,1761+2]..[44,1781+43])
              Pexp_sequence
              expression (lib/ident.ml[43,1761+2]..[43,1761+18])
                Pexp_apply
                expression (lib/ident.ml[43,1761+2]..[43,1761+6])
                  Pexp_ident "incr" (lib/ident.ml[43,1761+2]..[43,1761+6])
                [
                  <arg>
                  Nolabel
                    expression (lib/ident.ml[43,1761+7]..[43,1761+18])
                      Pexp_ident "predefstamp" (lib/ident.ml[43,1761+7]..[43,1761+18])
                ]
              expression (lib/ident.ml[44,1781+2]..[44,1781+43])
                Pexp_construct "Predef" (lib/ident.ml[44,1781+2]..[44,1781+8])
                Some
                  expression (lib/ident.ml[44,1781+9]..[44,1781+43])
                    Pexp_record
                    [
                      "name" (lib/ident.ml[44,1781+11]..[44,1781+15])
                        expression (lib/ident.ml[44,1781+18]..[44,1781+19])
                          Pexp_ident "s" (lib/ident.ml[44,1781+18]..[44,1781+19])
                      "stamp" (lib/ident.ml[44,1781+21]..[44,1781+26])
                        expression (lib/ident.ml[44,1781+29]..[44,1781+41])
                          Pexp_apply
                          expression (lib/ident.ml[44,1781+29]..[44,1781+30])
                            Pexp_ident "!" (lib/ident.ml[44,1781+29]..[44,1781+30])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[44,1781+30]..[44,1781+41])
                                Pexp_ident "predefstamp" (lib/ident.ml[44,1781+30]..[44,1781+41])
                          ]
                    ]
                    None
    ]
  structure_item (lib/ident.ml[46,1826+0]..[47,1852+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[46,1826+4]..[46,1826+21])
          Ppat_var "create_persistent" (lib/ident.ml[46,1826+4]..[46,1826+21])
        expression (lib/ident.ml[46,1826+22]..[47,1852+10]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[46,1826+22]..[46,1826+23])
              Nolabel
              None
              pattern (lib/ident.ml[46,1826+22]..[46,1826+23])
                Ppat_var "s" (lib/ident.ml[46,1826+22]..[46,1826+23])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[47,1852+2]..[47,1852+10])
              Pexp_construct "Global" (lib/ident.ml[47,1852+2]..[47,1852+8])
              Some
                expression (lib/ident.ml[47,1852+9]..[47,1852+10])
                  Pexp_ident "s" (lib/ident.ml[47,1852+9]..[47,1852+10])
    ]
  structure_item (lib/ident.ml[49,1864+0]..[53,1945+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[49,1864+4]..[49,1864+8])
          Ppat_var "name" (lib/ident.ml[49,1864+4]..[49,1864+8])
        expression (lib/ident.ml[49,1864+11]..[53,1945+30])
          Pexp_function
          []
          None
          Pfunction_cases (lib/ident.ml[49,1864+11]..[53,1945+30])
            [
              <case>
                pattern (lib/ident.ml[50,1884+4]..[53,1945+22])
                  Ppat_or
                  pattern (lib/ident.ml[50,1884+4]..[52,1929+15])
                    Ppat_or
                    pattern (lib/ident.ml[50,1884+4]..[51,1906+22])
                      Ppat_or
                      pattern (lib/ident.ml[50,1884+4]..[50,1884+21])
                        Ppat_construct "Local" (lib/ident.ml[50,1884+4]..[50,1884+9])
                        Some
                          []
                          pattern (lib/ident.ml[50,1884+10]..[50,1884+21])
                            Ppat_record Open
                            [
                              "name" (lib/ident.ml[50,1884+12]..[50,1884+16]) ghost
                                pattern (lib/ident.ml[50,1884+12]..[50,1884+16])
                                  Ppat_var "name" (lib/ident.ml[50,1884+12]..[50,1884+16])
                            ]
                      pattern (lib/ident.ml[51,1906+4]..[51,1906+22])
                        Ppat_construct "Scoped" (lib/ident.ml[51,1906+4]..[51,1906+10])
                        Some
                          []
                          pattern (lib/ident.ml[51,1906+11]..[51,1906+22])
                            Ppat_record Open
                            [
                              "name" (lib/ident.ml[51,1906+13]..[51,1906+17]) ghost
                                pattern (lib/ident.ml[51,1906+13]..[51,1906+17])
                                  Ppat_var "name" (lib/ident.ml[51,1906+13]..[51,1906+17])
                            ]
                    pattern (lib/ident.ml[52,1929+4]..[52,1929+15])
                      Ppat_construct "Global" (lib/ident.ml[52,1929+4]..[52,1929+10])
                      Some
                        []
                        pattern (lib/ident.ml[52,1929+11]..[52,1929+15])
                          Ppat_var "name" (lib/ident.ml[52,1929+11]..[52,1929+15])
                  pattern (lib/ident.ml[53,1945+4]..[53,1945+22])
                    Ppat_construct "Predef" (lib/ident.ml[53,1945+4]..[53,1945+10])
                    Some
                      []
                      pattern (lib/ident.ml[53,1945+11]..[53,1945+22])
                        Ppat_record Open
                        [
                          "name" (lib/ident.ml[53,1945+13]..[53,1945+17]) ghost
                            pattern (lib/ident.ml[53,1945+13]..[53,1945+17])
                              Ppat_var "name" (lib/ident.ml[53,1945+13]..[53,1945+17])
                        ]
                expression (lib/ident.ml[53,1945+26]..[53,1945+30])
                  Pexp_ident "name" (lib/ident.ml[53,1945+26]..[53,1945+30])
            ]
    ]
  structure_item (lib/ident.ml[55,1977+0]..[61,2153+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[55,1977+4]..[55,1977+10])
          Ppat_var "rename" (lib/ident.ml[55,1977+4]..[55,1977+10])
        expression (lib/ident.ml[55,1977+13]..[61,2153+51])
          Pexp_function
          []
          None
          Pfunction_cases (lib/ident.ml[55,1977+13]..[61,2153+51])
            [
              <case>
                pattern (lib/ident.ml[56,1999+4]..[57,2029+41])
                  Ppat_or
                  pattern (lib/ident.ml[56,1999+4]..[56,1999+29])
                    Ppat_construct "Local" (lib/ident.ml[56,1999+4]..[56,1999+9])
                    Some
                      []
                      pattern (lib/ident.ml[56,1999+10]..[56,1999+29])
                        Ppat_record Closed
                        [
                          "name" (lib/ident.ml[56,1999+12]..[56,1999+16]) ghost
                            pattern (lib/ident.ml[56,1999+12]..[56,1999+16])
                              Ppat_var "name" (lib/ident.ml[56,1999+12]..[56,1999+16])
                          "stamp" (lib/ident.ml[56,1999+18]..[56,1999+23])
                            pattern (lib/ident.ml[56,1999+26]..[56,1999+27])
                              Ppat_any
                        ]
                  pattern (lib/ident.ml[57,2029+4]..[57,2029+41])
                    Ppat_construct "Scoped" (lib/ident.ml[57,2029+4]..[57,2029+10])
                    Some
                      []
                      pattern (lib/ident.ml[57,2029+11]..[57,2029+41])
                        Ppat_record Closed
                        [
                          "name" (lib/ident.ml[57,2029+13]..[57,2029+17]) ghost
                            pattern (lib/ident.ml[57,2029+13]..[57,2029+17])
                              Ppat_var "name" (lib/ident.ml[57,2029+13]..[57,2029+17])
                          "stamp" (lib/ident.ml[57,2029+19]..[57,2029+24])
                            pattern (lib/ident.ml[57,2029+27]..[57,2029+28])
                              Ppat_any
                          "scope" (lib/ident.ml[57,2029+30]..[57,2029+35])
                            pattern (lib/ident.ml[57,2029+38]..[57,2029+39])
                              Ppat_any
                        ]
                expression (lib/ident.ml[58,2074+6]..[59,2099+43])
                  Pexp_sequence
                  expression (lib/ident.ml[58,2074+6]..[58,2074+23])
                    Pexp_apply
                    expression (lib/ident.ml[58,2074+6]..[58,2074+10])
                      Pexp_ident "incr" (lib/ident.ml[58,2074+6]..[58,2074+10])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[58,2074+11]..[58,2074+23])
                          Pexp_ident "currentstamp" (lib/ident.ml[58,2074+11]..[58,2074+23])
                    ]
                  expression (lib/ident.ml[59,2099+6]..[59,2099+43])
                    Pexp_construct "Local" (lib/ident.ml[59,2099+6]..[59,2099+11])
                    Some
                      expression (lib/ident.ml[59,2099+12]..[59,2099+43])
                        Pexp_record
                        [
                          "name" (lib/ident.ml[59,2099+14]..[59,2099+18]) ghost
                            expression (lib/ident.ml[59,2099+14]..[59,2099+18])
                              Pexp_ident "name" (lib/ident.ml[59,2099+14]..[59,2099+18])
                          "stamp" (lib/ident.ml[59,2099+20]..[59,2099+25])
                            expression (lib/ident.ml[59,2099+28]..[59,2099+41])
                              Pexp_apply
                              expression (lib/ident.ml[59,2099+28]..[59,2099+29])
                                Pexp_ident "!" (lib/ident.ml[59,2099+28]..[59,2099+29])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[59,2099+29]..[59,2099+41])
                                    Pexp_ident "currentstamp" (lib/ident.ml[59,2099+29]..[59,2099+41])
                              ]
                        ]
                        None
              <case>
                pattern (lib/ident.ml[60,2143+4]..[60,2143+6])
                  Ppat_var "id" (lib/ident.ml[60,2143+4]..[60,2143+6])
                expression (lib/ident.ml[61,2153+6]..[61,2153+51])
                  Pexp_apply
                  expression (lib/ident.ml[61,2153+6]..[61,2153+23])
                    Pexp_ident "Misc.fatal_errorf" (lib/ident.ml[61,2153+6]..[61,2153+23])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[61,2153+24]..[61,2153+41])
                        Pexp_constant PConst_string("Ident.rename %s",(lib/ident.ml[61,2153+25]..[61,2153+40]),None)
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[61,2153+42]..[61,2153+51])
                        Pexp_apply
                        expression (lib/ident.ml[61,2153+43]..[61,2153+47])
                          Pexp_ident "name" (lib/ident.ml[61,2153+43]..[61,2153+47])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[61,2153+48]..[61,2153+50])
                              Pexp_ident "id" (lib/ident.ml[61,2153+48]..[61,2153+50])
                        ]
                  ]
            ]
    ]
  structure_item (lib/ident.ml[63,2206+0]..[74,2738+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[63,2206+4]..[63,2206+15])
          Ppat_var "unique_name" (lib/ident.ml[63,2206+4]..[63,2206+15])
        expression (lib/ident.ml[63,2206+18]..[74,2738+10])
          Pexp_function
          []
          None
          Pfunction_cases (lib/ident.ml[63,2206+18]..[74,2738+10])
            [
              <case>
                pattern (lib/ident.ml[64,2233+4]..[65,2259+26])
                  Ppat_or
                  pattern (lib/ident.ml[64,2233+4]..[64,2233+25])
                    Ppat_construct "Local" (lib/ident.ml[64,2233+4]..[64,2233+9])
                    Some
                      []
                      pattern (lib/ident.ml[64,2233+10]..[64,2233+25])
                        Ppat_record Closed
                        [
                          "name" (lib/ident.ml[64,2233+12]..[64,2233+16]) ghost
                            pattern (lib/ident.ml[64,2233+12]..[64,2233+16])
                              Ppat_var "name" (lib/ident.ml[64,2233+12]..[64,2233+16])
                          "stamp" (lib/ident.ml[64,2233+18]..[64,2233+23]) ghost
                            pattern (lib/ident.ml[64,2233+18]..[64,2233+23])
                              Ppat_var "stamp" (lib/ident.ml[64,2233+18]..[64,2233+23])
                        ]
                  pattern (lib/ident.ml[65,2259+4]..[65,2259+26])
                    Ppat_construct "Scoped" (lib/ident.ml[65,2259+4]..[65,2259+10])
                    Some
                      []
                      pattern (lib/ident.ml[65,2259+11]..[65,2259+26])
                        Ppat_record Closed
                        [
                          "name" (lib/ident.ml[65,2259+13]..[65,2259+17]) ghost
                            pattern (lib/ident.ml[65,2259+13]..[65,2259+17])
                              Ppat_var "name" (lib/ident.ml[65,2259+13]..[65,2259+17])
                          "stamp" (lib/ident.ml[65,2259+19]..[65,2259+24]) ghost
                            pattern (lib/ident.ml[65,2259+19]..[65,2259+24])
                              Ppat_var "stamp" (lib/ident.ml[65,2259+19]..[65,2259+24])
                        ]
                expression (lib/ident.ml[65,2259+30]..[65,2259+62])
                  Pexp_apply
                  expression (lib/ident.ml[65,2259+35]..[65,2259+36])
                    Pexp_ident "^" (lib/ident.ml[65,2259+35]..[65,2259+36])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[65,2259+30]..[65,2259+34])
                        Pexp_ident "name" (lib/ident.ml[65,2259+30]..[65,2259+34])
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[65,2259+37]..[65,2259+62])
                        Pexp_apply
                        expression (lib/ident.ml[65,2259+41]..[65,2259+42])
                          Pexp_ident "^" (lib/ident.ml[65,2259+41]..[65,2259+42])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[65,2259+37]..[65,2259+40])
                              Pexp_constant PConst_string("_",(lib/ident.ml[65,2259+38]..[65,2259+39]),None)
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[65,2259+43]..[65,2259+62])
                              Pexp_apply
                              expression (lib/ident.ml[65,2259+43]..[65,2259+56])
                                Pexp_ident "Int.to_string" (lib/ident.ml[65,2259+43]..[65,2259+56])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[65,2259+57]..[65,2259+62])
                                    Pexp_ident "stamp" (lib/ident.ml[65,2259+57]..[65,2259+62])
                              ]
                        ]
                  ]
              <case>
                pattern (lib/ident.ml[66,2322+4]..[66,2322+15])
                  Ppat_construct "Global" (lib/ident.ml[66,2322+4]..[66,2322+10])
                  Some
                    []
                    pattern (lib/ident.ml[66,2322+11]..[66,2322+15])
                      Ppat_var "name" (lib/ident.ml[66,2322+11]..[66,2322+15])
                expression (lib/ident.ml[70,2562+6]..[70,2562+17])
                  Pexp_apply
                  expression (lib/ident.ml[70,2562+11]..[70,2562+12])
                    Pexp_ident "^" (lib/ident.ml[70,2562+11]..[70,2562+12])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[70,2562+6]..[70,2562+10])
                        Pexp_ident "name" (lib/ident.ml[70,2562+6]..[70,2562+10])
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[70,2562+13]..[70,2562+17])
                        Pexp_constant PConst_string("_0",(lib/ident.ml[70,2562+14]..[70,2562+16]),None)
                  ]
              <case>
                pattern (lib/ident.ml[71,2580+4]..[71,2580+22])
                  Ppat_construct "Predef" (lib/ident.ml[71,2580+4]..[71,2580+10])
                  Some
                    []
                    pattern (lib/ident.ml[71,2580+11]..[71,2580+22])
                      Ppat_record Open
                      [
                        "name" (lib/ident.ml[71,2580+13]..[71,2580+17]) ghost
                          pattern (lib/ident.ml[71,2580+13]..[71,2580+17])
                            Ppat_var "name" (lib/ident.ml[71,2580+13]..[71,2580+17])
                      ]
                expression (lib/ident.ml[74,2738+6]..[74,2738+10])
                  Pexp_ident "name" (lib/ident.ml[74,2738+6]..[74,2738+10])
            ]
    ]
  structure_item (lib/ident.ml[76,2750+0]..[80,2891+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[76,2750+4]..[76,2750+24])
          Ppat_var "unique_toplevel_name" (lib/ident.ml[76,2750+4]..[76,2750+24])
        expression (lib/ident.ml[76,2750+27]..[80,2891+30])
          Pexp_function
          []
          None
          Pfunction_cases (lib/ident.ml[76,2750+27]..[80,2891+30])
            [
              <case>
                pattern (lib/ident.ml[77,2786+4]..[78,2812+26])
                  Ppat_or
                  pattern (lib/ident.ml[77,2786+4]..[77,2786+25])
                    Ppat_construct "Local" (lib/ident.ml[77,2786+4]..[77,2786+9])
                    Some
                      []
                      pattern (lib/ident.ml[77,2786+10]..[77,2786+25])
                        Ppat_record Closed
                        [
                          "name" (lib/ident.ml[77,2786+12]..[77,2786+16]) ghost
                            pattern (lib/ident.ml[77,2786+12]..[77,2786+16])
                              Ppat_var "name" (lib/ident.ml[77,2786+12]..[77,2786+16])
                          "stamp" (lib/ident.ml[77,2786+18]..[77,2786+23]) ghost
                            pattern (lib/ident.ml[77,2786+18]..[77,2786+23])
                              Ppat_var "stamp" (lib/ident.ml[77,2786+18]..[77,2786+23])
                        ]
                  pattern (lib/ident.ml[78,2812+4]..[78,2812+26])
                    Ppat_construct "Scoped" (lib/ident.ml[78,2812+4]..[78,2812+10])
                    Some
                      []
                      pattern (lib/ident.ml[78,2812+11]..[78,2812+26])
                        Ppat_record Closed
                        [
                          "name" (lib/ident.ml[78,2812+13]..[78,2812+17]) ghost
                            pattern (lib/ident.ml[78,2812+13]..[78,2812+17])
                              Ppat_var "name" (lib/ident.ml[78,2812+13]..[78,2812+17])
                          "stamp" (lib/ident.ml[78,2812+19]..[78,2812+24]) ghost
                            pattern (lib/ident.ml[78,2812+19]..[78,2812+24])
                              Ppat_var "stamp" (lib/ident.ml[78,2812+19]..[78,2812+24])
                        ]
                expression (lib/ident.ml[78,2812+30]..[78,2812+62])
                  Pexp_apply
                  expression (lib/ident.ml[78,2812+35]..[78,2812+36])
                    Pexp_ident "^" (lib/ident.ml[78,2812+35]..[78,2812+36])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[78,2812+30]..[78,2812+34])
                        Pexp_ident "name" (lib/ident.ml[78,2812+30]..[78,2812+34])
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[78,2812+37]..[78,2812+62])
                        Pexp_apply
                        expression (lib/ident.ml[78,2812+41]..[78,2812+42])
                          Pexp_ident "^" (lib/ident.ml[78,2812+41]..[78,2812+42])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[78,2812+37]..[78,2812+40])
                              Pexp_constant PConst_string("/",(lib/ident.ml[78,2812+38]..[78,2812+39]),None)
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[78,2812+43]..[78,2812+62])
                              Pexp_apply
                              expression (lib/ident.ml[78,2812+43]..[78,2812+56])
                                Pexp_ident "Int.to_string" (lib/ident.ml[78,2812+43]..[78,2812+56])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[78,2812+57]..[78,2812+62])
                                    Pexp_ident "stamp" (lib/ident.ml[78,2812+57]..[78,2812+62])
                              ]
                        ]
                  ]
              <case>
                pattern (lib/ident.ml[79,2875+4]..[80,2891+22])
                  Ppat_or
                  pattern (lib/ident.ml[79,2875+4]..[79,2875+15])
                    Ppat_construct "Global" (lib/ident.ml[79,2875+4]..[79,2875+10])
                    Some
                      []
                      pattern (lib/ident.ml[79,2875+11]..[79,2875+15])
                        Ppat_var "name" (lib/ident.ml[79,2875+11]..[79,2875+15])
                  pattern (lib/ident.ml[80,2891+4]..[80,2891+22])
                    Ppat_construct "Predef" (lib/ident.ml[80,2891+4]..[80,2891+10])
                    Some
                      []
                      pattern (lib/ident.ml[80,2891+11]..[80,2891+22])
                        Ppat_record Open
                        [
                          "name" (lib/ident.ml[80,2891+13]..[80,2891+17]) ghost
                            pattern (lib/ident.ml[80,2891+13]..[80,2891+17])
                              Ppat_var "name" (lib/ident.ml[80,2891+13]..[80,2891+17])
                        ]
                expression (lib/ident.ml[80,2891+26]..[80,2891+30])
                  Pexp_ident "name" (lib/ident.ml[80,2891+26]..[80,2891+30])
            ]
    ]
  structure_item (lib/ident.ml[82,2923+0]..[84,2970+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[82,2923+4]..[82,2923+14])
          Ppat_var "persistent" (lib/ident.ml[82,2923+4]..[82,2923+14])
        expression (lib/ident.ml[82,2923+17]..[84,2970+14])
          Pexp_function
          []
          None
          Pfunction_cases (lib/ident.ml[82,2923+17]..[84,2970+14])
            [
              <case>
                pattern (lib/ident.ml[83,2949+4]..[83,2949+12])
                  Ppat_construct "Global" (lib/ident.ml[83,2949+4]..[83,2949+10])
                  Some
                    []
                    pattern (lib/ident.ml[83,2949+11]..[83,2949+12])
                      Ppat_any
                expression (lib/ident.ml[83,2949+16]..[83,2949+20])
                  Pexp_construct "true" (lib/ident.ml[83,2949+16]..[83,2949+20])
                  None
              <case>
                pattern (lib/ident.ml[84,2970+4]..[84,2970+5])
                  Ppat_any
                expression (lib/ident.ml[84,2970+9]..[84,2970+14])
                  Pexp_construct "false" (lib/ident.ml[84,2970+9]..[84,2970+14])
                  None
            ]
    ]
  structure_item (lib/ident.ml[86,2986+0]..[96,3349+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[86,2986+4]..[86,2986+9])
          Ppat_var "equal" (lib/ident.ml[86,2986+4]..[86,2986+9])
        expression (lib/ident.ml[86,2986+10]..[96,3349+11]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[86,2986+10]..[86,2986+12])
              Nolabel
              None
              pattern (lib/ident.ml[86,2986+10]..[86,2986+12])
                Ppat_var "i1" (lib/ident.ml[86,2986+10]..[86,2986+12])
            Pparam_val (lib/ident.ml[86,2986+13]..[86,2986+15])
              Nolabel
              None
              pattern (lib/ident.ml[86,2986+13]..[86,2986+15])
                Ppat_var "i2" (lib/ident.ml[86,2986+13]..[86,2986+15])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[87,3004+2]..[96,3349+11])
              Pexp_match
              expression (lib/ident.ml[87,3004+8]..[87,3004+14])
                Pexp_tuple
                [
                  expression (lib/ident.ml[87,3004+8]..[87,3004+10])
                    Pexp_ident "i1" (lib/ident.ml[87,3004+8]..[87,3004+10])
                  expression (lib/ident.ml[87,3004+12]..[87,3004+14])
                    Pexp_ident "i2" (lib/ident.ml[87,3004+12]..[87,3004+14])
                ]
              [
                <case>
                  pattern (lib/ident.ml[88,3024+4]..[90,3140+30])
                    Ppat_or
                    pattern (lib/ident.ml[88,3024+4]..[89,3081+58])
                      Ppat_or
                      pattern (lib/ident.ml[88,3024+4]..[88,3024+56])
                        Ppat_tuple
                        [
                          pattern (lib/ident.ml[88,3024+4]..[88,3024+29])
                            Ppat_construct "Local" (lib/ident.ml[88,3024+4]..[88,3024+9])
                            Some
                              []
                              pattern (lib/ident.ml[88,3024+10]..[88,3024+29])
                                Ppat_record Open
                                [
                                  "name" (lib/ident.ml[88,3024+12]..[88,3024+16])
                                    pattern (lib/ident.ml[88,3024+19]..[88,3024+24])
                                      Ppat_var "name1" (lib/ident.ml[88,3024+19]..[88,3024+24])
                                ]
                          pattern (lib/ident.ml[88,3024+31]..[88,3024+56])
                            Ppat_construct "Local" (lib/ident.ml[88,3024+31]..[88,3024+36])
                            Some
                              []
                              pattern (lib/ident.ml[88,3024+37]..[88,3024+56])
                                Ppat_record Open
                                [
                                  "name" (lib/ident.ml[88,3024+39]..[88,3024+43])
                                    pattern (lib/ident.ml[88,3024+46]..[88,3024+51])
                                      Ppat_var "name2" (lib/ident.ml[88,3024+46]..[88,3024+51])
                                ]
                        ]
                      pattern (lib/ident.ml[89,3081+4]..[89,3081+58])
                        Ppat_tuple
                        [
                          pattern (lib/ident.ml[89,3081+4]..[89,3081+30])
                            Ppat_construct "Scoped" (lib/ident.ml[89,3081+4]..[89,3081+10])
                            Some
                              []
                              pattern (lib/ident.ml[89,3081+11]..[89,3081+30])
                                Ppat_record Open
                                [
                                  "name" (lib/ident.ml[89,3081+13]..[89,3081+17])
                                    pattern (lib/ident.ml[89,3081+20]..[89,3081+25])
                                      Ppat_var "name1" (lib/ident.ml[89,3081+20]..[89,3081+25])
                                ]
                          pattern (lib/ident.ml[89,3081+32]..[89,3081+58])
                            Ppat_construct "Scoped" (lib/ident.ml[89,3081+32]..[89,3081+38])
                            Some
                              []
                              pattern (lib/ident.ml[89,3081+39]..[89,3081+58])
                                Ppat_record Open
                                [
                                  "name" (lib/ident.ml[89,3081+41]..[89,3081+45])
                                    pattern (lib/ident.ml[89,3081+48]..[89,3081+53])
                                      Ppat_var "name2" (lib/ident.ml[89,3081+48]..[89,3081+53])
                                ]
                        ]
                    pattern (lib/ident.ml[90,3140+4]..[90,3140+30])
                      Ppat_tuple
                      [
                        pattern (lib/ident.ml[90,3140+4]..[90,3140+16])
                          Ppat_construct "Global" (lib/ident.ml[90,3140+4]..[90,3140+10])
                          Some
                            []
                            pattern (lib/ident.ml[90,3140+11]..[90,3140+16])
                              Ppat_var "name1" (lib/ident.ml[90,3140+11]..[90,3140+16])
                        pattern (lib/ident.ml[90,3140+18]..[90,3140+30])
                          Ppat_construct "Global" (lib/ident.ml[90,3140+18]..[90,3140+24])
                          Some
                            []
                            pattern (lib/ident.ml[90,3140+25]..[90,3140+30])
                              Ppat_var "name2" (lib/ident.ml[90,3140+25]..[90,3140+30])
                      ]
                  expression (lib/ident.ml[91,3174+6]..[91,3174+19])
                    Pexp_apply
                    expression (lib/ident.ml[91,3174+12]..[91,3174+13])
                      Pexp_ident "=" (lib/ident.ml[91,3174+12]..[91,3174+13])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[91,3174+6]..[91,3174+11])
                          Pexp_ident "name1" (lib/ident.ml[91,3174+6]..[91,3174+11])
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[91,3174+14]..[91,3174+19])
                          Pexp_ident "name2" (lib/ident.ml[91,3174+14]..[91,3174+19])
                    ]
                <case>
                  pattern (lib/ident.ml[92,3194+4]..[92,3194+51])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[92,3194+4]..[92,3194+28])
                        Ppat_construct "Predef" (lib/ident.ml[92,3194+4]..[92,3194+10])
                        Some
                          []
                          pattern (lib/ident.ml[92,3194+11]..[92,3194+28])
                            Ppat_record Open
                            [
                              "stamp" (lib/ident.ml[92,3194+13]..[92,3194+18])
                                pattern (lib/ident.ml[92,3194+21]..[92,3194+23])
                                  Ppat_var "s1" (lib/ident.ml[92,3194+21]..[92,3194+23])
                            ]
                      pattern (lib/ident.ml[92,3194+30]..[92,3194+51])
                        Ppat_construct "Predef" (lib/ident.ml[92,3194+30]..[92,3194+36])
                        Some
                          []
                          pattern (lib/ident.ml[92,3194+37]..[92,3194+51])
                            Ppat_record Closed
                            [
                              "stamp" (lib/ident.ml[92,3194+39]..[92,3194+44])
                                pattern (lib/ident.ml[92,3194+47]..[92,3194+49])
                                  Ppat_var "s2" (lib/ident.ml[92,3194+47]..[92,3194+49])
                            ]
                    ]
                  expression (lib/ident.ml[94,3326+6]..[94,3326+13])
                    Pexp_apply
                    expression (lib/ident.ml[94,3326+9]..[94,3326+10])
                      Pexp_ident "=" (lib/ident.ml[94,3326+9]..[94,3326+10])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[94,3326+6]..[94,3326+8])
                          Pexp_ident "s1" (lib/ident.ml[94,3326+6]..[94,3326+8])
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[94,3326+11]..[94,3326+13])
                          Pexp_ident "s2" (lib/ident.ml[94,3326+11]..[94,3326+13])
                    ]
                <case>
                  pattern (lib/ident.ml[95,3340+4]..[95,3340+5])
                    Ppat_any
                  expression (lib/ident.ml[96,3349+6]..[96,3349+11])
                    Pexp_construct "false" (lib/ident.ml[96,3349+6]..[96,3349+11])
                    None
              ]
    ]
  structure_item (lib/ident.ml[98,3362+0]..[107,3639+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[98,3362+4]..[98,3362+8])
          Ppat_var "same" (lib/ident.ml[98,3362+4]..[98,3362+8])
        expression (lib/ident.ml[98,3362+9]..[107,3639+11]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[98,3362+9]..[98,3362+11])
              Nolabel
              None
              pattern (lib/ident.ml[98,3362+9]..[98,3362+11])
                Ppat_var "i1" (lib/ident.ml[98,3362+9]..[98,3362+11])
            Pparam_val (lib/ident.ml[98,3362+12]..[98,3362+14])
              Nolabel
              None
              pattern (lib/ident.ml[98,3362+12]..[98,3362+14])
                Ppat_var "i2" (lib/ident.ml[98,3362+12]..[98,3362+14])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[99,3379+2]..[107,3639+11])
              Pexp_match
              expression (lib/ident.ml[99,3379+8]..[99,3379+14])
                Pexp_tuple
                [
                  expression (lib/ident.ml[99,3379+8]..[99,3379+10])
                    Pexp_ident "i1" (lib/ident.ml[99,3379+8]..[99,3379+10])
                  expression (lib/ident.ml[99,3379+12]..[99,3379+14])
                    Pexp_ident "i2" (lib/ident.ml[99,3379+12]..[99,3379+14])
                ]
              [
                <case>
                  pattern (lib/ident.ml[100,3399+4]..[102,3507+51])
                    Ppat_or
                    pattern (lib/ident.ml[100,3399+4]..[101,3452+54])
                      Ppat_or
                      pattern (lib/ident.ml[100,3399+4]..[100,3399+52])
                        Ppat_tuple
                        [
                          pattern (lib/ident.ml[100,3399+4]..[100,3399+27])
                            Ppat_construct "Local" (lib/ident.ml[100,3399+4]..[100,3399+9])
                            Some
                              []
                              pattern (lib/ident.ml[100,3399+10]..[100,3399+27])
                                Ppat_record Open
                                [
                                  "stamp" (lib/ident.ml[100,3399+12]..[100,3399+17])
                                    pattern (lib/ident.ml[100,3399+20]..[100,3399+22])
                                      Ppat_var "s1" (lib/ident.ml[100,3399+20]..[100,3399+22])
                                ]
                          pattern (lib/ident.ml[100,3399+29]..[100,3399+52])
                            Ppat_construct "Local" (lib/ident.ml[100,3399+29]..[100,3399+34])
                            Some
                              []
                              pattern (lib/ident.ml[100,3399+35]..[100,3399+52])
                                Ppat_record Open
                                [
                                  "stamp" (lib/ident.ml[100,3399+37]..[100,3399+42])
                                    pattern (lib/ident.ml[100,3399+45]..[100,3399+47])
                                      Ppat_var "s2" (lib/ident.ml[100,3399+45]..[100,3399+47])
                                ]
                        ]
                      pattern (lib/ident.ml[101,3452+4]..[101,3452+54])
                        Ppat_tuple
                        [
                          pattern (lib/ident.ml[101,3452+4]..[101,3452+28])
                            Ppat_construct "Scoped" (lib/ident.ml[101,3452+4]..[101,3452+10])
                            Some
                              []
                              pattern (lib/ident.ml[101,3452+11]..[101,3452+28])
                                Ppat_record Open
                                [
                                  "stamp" (lib/ident.ml[101,3452+13]..[101,3452+18])
                                    pattern (lib/ident.ml[101,3452+21]..[101,3452+23])
                                      Ppat_var "s1" (lib/ident.ml[101,3452+21]..[101,3452+23])
                                ]
                          pattern (lib/ident.ml[101,3452+30]..[101,3452+54])
                            Ppat_construct "Scoped" (lib/ident.ml[101,3452+30]..[101,3452+36])
                            Some
                              []
                              pattern (lib/ident.ml[101,3452+37]..[101,3452+54])
                                Ppat_record Open
                                [
                                  "stamp" (lib/ident.ml[101,3452+39]..[101,3452+44])
                                    pattern (lib/ident.ml[101,3452+47]..[101,3452+49])
                                      Ppat_var "s2" (lib/ident.ml[101,3452+47]..[101,3452+49])
                                ]
                        ]
                    pattern (lib/ident.ml[102,3507+4]..[102,3507+51])
                      Ppat_tuple
                      [
                        pattern (lib/ident.ml[102,3507+4]..[102,3507+28])
                          Ppat_construct "Predef" (lib/ident.ml[102,3507+4]..[102,3507+10])
                          Some
                            []
                            pattern (lib/ident.ml[102,3507+11]..[102,3507+28])
                              Ppat_record Open
                              [
                                "stamp" (lib/ident.ml[102,3507+13]..[102,3507+18])
                                  pattern (lib/ident.ml[102,3507+21]..[102,3507+23])
                                    Ppat_var "s1" (lib/ident.ml[102,3507+21]..[102,3507+23])
                              ]
                        pattern (lib/ident.ml[102,3507+30]..[102,3507+51])
                          Ppat_construct "Predef" (lib/ident.ml[102,3507+30]..[102,3507+36])
                          Some
                            []
                            pattern (lib/ident.ml[102,3507+37]..[102,3507+51])
                              Ppat_record Closed
                              [
                                "stamp" (lib/ident.ml[102,3507+39]..[102,3507+44])
                                  pattern (lib/ident.ml[102,3507+47]..[102,3507+49])
                                    Ppat_var "s2" (lib/ident.ml[102,3507+47]..[102,3507+49])
                              ]
                      ]
                  expression (lib/ident.ml[103,3562+6]..[103,3562+13])
                    Pexp_apply
                    expression (lib/ident.ml[103,3562+9]..[103,3562+10])
                      Pexp_ident "=" (lib/ident.ml[103,3562+9]..[103,3562+10])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[103,3562+6]..[103,3562+8])
                          Pexp_ident "s1" (lib/ident.ml[103,3562+6]..[103,3562+8])
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[103,3562+11]..[103,3562+13])
                          Pexp_ident "s2" (lib/ident.ml[103,3562+11]..[103,3562+13])
                    ]
                <case>
                  pattern (lib/ident.ml[104,3576+4]..[104,3576+30])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[104,3576+4]..[104,3576+16])
                        Ppat_construct "Global" (lib/ident.ml[104,3576+4]..[104,3576+10])
                        Some
                          []
                          pattern (lib/ident.ml[104,3576+11]..[104,3576+16])
                            Ppat_var "name1" (lib/ident.ml[104,3576+11]..[104,3576+16])
                      pattern (lib/ident.ml[104,3576+18]..[104,3576+30])
                        Ppat_construct "Global" (lib/ident.ml[104,3576+18]..[104,3576+24])
                        Some
                          []
                          pattern (lib/ident.ml[104,3576+25]..[104,3576+30])
                            Ppat_var "name2" (lib/ident.ml[104,3576+25]..[104,3576+30])
                    ]
                  expression (lib/ident.ml[105,3610+6]..[105,3610+19])
                    Pexp_apply
                    expression (lib/ident.ml[105,3610+12]..[105,3610+13])
                      Pexp_ident "=" (lib/ident.ml[105,3610+12]..[105,3610+13])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[105,3610+6]..[105,3610+11])
                          Pexp_ident "name1" (lib/ident.ml[105,3610+6]..[105,3610+11])
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[105,3610+14]..[105,3610+19])
                          Pexp_ident "name2" (lib/ident.ml[105,3610+14]..[105,3610+19])
                    ]
                <case>
                  pattern (lib/ident.ml[106,3630+4]..[106,3630+5])
                    Ppat_any
                  expression (lib/ident.ml[107,3639+6]..[107,3639+11])
                    Pexp_construct "false" (lib/ident.ml[107,3639+6]..[107,3639+11])
                    None
              ]
    ]
  structure_item (lib/ident.ml[109,3652+0]..[112,3729+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[109,3652+4]..[109,3652+9])
          Ppat_var "stamp" (lib/ident.ml[109,3652+4]..[109,3652+9])
        expression (lib/ident.ml[109,3652+12]..[112,3729+10])
          Pexp_function
          []
          None
          Pfunction_cases (lib/ident.ml[109,3652+12]..[112,3729+10])
            [
              <case>
                pattern (lib/ident.ml[110,3673+4]..[111,3696+23])
                  Ppat_or
                  pattern (lib/ident.ml[110,3673+4]..[110,3673+22])
                    Ppat_construct "Local" (lib/ident.ml[110,3673+4]..[110,3673+9])
                    Some
                      []
                      pattern (lib/ident.ml[110,3673+10]..[110,3673+22])
                        Ppat_record Open
                        [
                          "stamp" (lib/ident.ml[110,3673+12]..[110,3673+17]) ghost
                            pattern (lib/ident.ml[110,3673+12]..[110,3673+17])
                              Ppat_var "stamp" (lib/ident.ml[110,3673+12]..[110,3673+17])
                        ]
                  pattern (lib/ident.ml[111,3696+4]..[111,3696+23])
                    Ppat_construct "Scoped" (lib/ident.ml[111,3696+4]..[111,3696+10])
                    Some
                      []
                      pattern (lib/ident.ml[111,3696+11]..[111,3696+23])
                        Ppat_record Open
                        [
                          "stamp" (lib/ident.ml[111,3696+13]..[111,3696+18]) ghost
                            pattern (lib/ident.ml[111,3696+13]..[111,3696+18])
                              Ppat_var "stamp" (lib/ident.ml[111,3696+13]..[111,3696+18])
                        ]
                expression (lib/ident.ml[111,3696+27]..[111,3696+32])
                  Pexp_ident "stamp" (lib/ident.ml[111,3696+27]..[111,3696+32])
              <case>
                pattern (lib/ident.ml[112,3729+4]..[112,3729+5])
                  Ppat_any
                expression (lib/ident.ml[112,3729+9]..[112,3729+10])
                  Pexp_constant PConst_int (0,None)
            ]
    ]
  structure_item (lib/ident.ml[114,3741+0]..[117,3824+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[114,3741+4]..[114,3741+9])
          Ppat_var "scope" (lib/ident.ml[114,3741+4]..[114,3741+9])
        expression (lib/ident.ml[114,3741+12]..[117,3824+39])
          Pexp_function
          []
          None
          Pfunction_cases (lib/ident.ml[114,3741+12]..[117,3824+39])
            [
              <case>
                pattern (lib/ident.ml[115,3762+4]..[115,3762+23])
                  Ppat_construct "Scoped" (lib/ident.ml[115,3762+4]..[115,3762+10])
                  Some
                    []
                    pattern (lib/ident.ml[115,3762+11]..[115,3762+23])
                      Ppat_record Open
                      [
                        "scope" (lib/ident.ml[115,3762+13]..[115,3762+18]) ghost
                          pattern (lib/ident.ml[115,3762+13]..[115,3762+18])
                            Ppat_var "scope" (lib/ident.ml[115,3762+13]..[115,3762+18])
                      ]
                expression (lib/ident.ml[115,3762+27]..[115,3762+32])
                  Pexp_ident "scope" (lib/ident.ml[115,3762+27]..[115,3762+32])
              <case>
                pattern (lib/ident.ml[116,3795+4]..[116,3795+11])
                  Ppat_construct "Local" (lib/ident.ml[116,3795+4]..[116,3795+9])
                  Some
                    []
                    pattern (lib/ident.ml[116,3795+10]..[116,3795+11])
                      Ppat_any
                expression (lib/ident.ml[116,3795+15]..[116,3795+28])
                  Pexp_ident "highest_scope" (lib/ident.ml[116,3795+15]..[116,3795+28])
              <case>
                pattern (lib/ident.ml[117,3824+4]..[117,3824+23])
                  Ppat_or
                  pattern (lib/ident.ml[117,3824+4]..[117,3824+12])
                    Ppat_construct "Global" (lib/ident.ml[117,3824+4]..[117,3824+10])
                    Some
                      []
                      pattern (lib/ident.ml[117,3824+11]..[117,3824+12])
                        Ppat_any
                  pattern (lib/ident.ml[117,3824+15]..[117,3824+23])
                    Ppat_construct "Predef" (lib/ident.ml[117,3824+15]..[117,3824+21])
                    Some
                      []
                      pattern (lib/ident.ml[117,3824+22]..[117,3824+23])
                        Ppat_any
                expression (lib/ident.ml[117,3824+27]..[117,3824+39])
                  Pexp_ident "lowest_scope" (lib/ident.ml[117,3824+27]..[117,3824+39])
            ]
    ]
  structure_item (lib/ident.ml[119,3865+0]..[119,3865+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[119,3865+4]..[119,3865+16])
          Ppat_var "reinit_level" (lib/ident.ml[119,3865+4]..[119,3865+16])
        expression (lib/ident.ml[119,3865+19]..[119,3865+27])
          Pexp_apply
          expression (lib/ident.ml[119,3865+19]..[119,3865+22])
            Pexp_ident "ref" (lib/ident.ml[119,3865+19]..[119,3865+22])
          [
            <arg>
            Nolabel
              expression (lib/ident.ml[119,3865+23]..[119,3865+27])
                Pexp_constant PConst_int (-1,None)
          ]
    ]
  structure_item (lib/ident.ml[121,3894+0]..[124,3970+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[121,3894+4]..[121,3894+10])
          Ppat_var "reinit" (lib/ident.ml[121,3894+4]..[121,3894+10])
        expression (lib/ident.ml[121,3894+11]..[124,3970+36]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[121,3894+11]..[121,3894+13])
              Nolabel
              None
              pattern (lib/ident.ml[121,3894+11]..[121,3894+13])
                Ppat_construct "()" (lib/ident.ml[121,3894+11]..[121,3894+13])
                None
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[122,3910+2]..[124,3970+36])
              Pexp_ifthenelse
              expression (lib/ident.ml[122,3910+5]..[122,3910+22])
                Pexp_apply
                expression (lib/ident.ml[122,3910+19]..[122,3910+20])
                  Pexp_ident "<" (lib/ident.ml[122,3910+19]..[122,3910+20])
                [
                  <arg>
                  Nolabel
                    expression (lib/ident.ml[122,3910+5]..[122,3910+18])
                      Pexp_apply
                      expression (lib/ident.ml[122,3910+5]..[122,3910+6])
                        Pexp_ident "!" (lib/ident.ml[122,3910+5]..[122,3910+6])
                      [
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[122,3910+6]..[122,3910+18])
                            Pexp_ident "reinit_level" (lib/ident.ml[122,3910+6]..[122,3910+18])
                      ]
                  <arg>
                  Nolabel
                    expression (lib/ident.ml[122,3910+21]..[122,3910+22])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (lib/ident.ml[123,3933+7]..[123,3933+36])
                Pexp_apply
                expression (lib/ident.ml[123,3933+20]..[123,3933+22])
                  Pexp_ident ":=" (lib/ident.ml[123,3933+20]..[123,3933+22])
                [
                  <arg>
                  Nolabel
                    expression (lib/ident.ml[123,3933+7]..[123,3933+19])
                      Pexp_ident "reinit_level" (lib/ident.ml[123,3933+7]..[123,3933+19])
                  <arg>
                  Nolabel
                    expression (lib/ident.ml[123,3933+23]..[123,3933+36])
                      Pexp_apply
                      expression (lib/ident.ml[123,3933+23]..[123,3933+24])
                        Pexp_ident "!" (lib/ident.ml[123,3933+23]..[123,3933+24])
                      [
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[123,3933+24]..[123,3933+36])
                            Pexp_ident "currentstamp" (lib/ident.ml[123,3933+24]..[123,3933+36])
                      ]
                ]
              Some
                expression (lib/ident.ml[124,3970+7]..[124,3970+36])
                  Pexp_apply
                  expression (lib/ident.ml[124,3970+20]..[124,3970+22])
                    Pexp_ident ":=" (lib/ident.ml[124,3970+20]..[124,3970+22])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[124,3970+7]..[124,3970+19])
                        Pexp_ident "currentstamp" (lib/ident.ml[124,3970+7]..[124,3970+19])
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[124,3970+23]..[124,3970+36])
                        Pexp_apply
                        expression (lib/ident.ml[124,3970+23]..[124,3970+24])
                          Pexp_ident "!" (lib/ident.ml[124,3970+23]..[124,3970+24])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[124,3970+24]..[124,3970+36])
                              Pexp_ident "reinit_level" (lib/ident.ml[124,3970+24]..[124,3970+36])
                        ]
                  ]
    ]
  structure_item (lib/ident.ml[126,4008+0]..[130,4077+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[126,4008+4]..[126,4008+10])
          Ppat_var "global" (lib/ident.ml[126,4008+4]..[126,4008+10])
        expression (lib/ident.ml[126,4008+13]..[130,4077+20])
          Pexp_function
          []
          None
          Pfunction_cases (lib/ident.ml[126,4008+13]..[130,4077+20])
            [
              <case>
                pattern (lib/ident.ml[127,4030+4]..[128,4042+12])
                  Ppat_or
                  pattern (lib/ident.ml[127,4030+4]..[127,4030+11])
                    Ppat_construct "Local" (lib/ident.ml[127,4030+4]..[127,4030+9])
                    Some
                      []
                      pattern (lib/ident.ml[127,4030+10]..[127,4030+11])
                        Ppat_any
                  pattern (lib/ident.ml[128,4042+4]..[128,4042+12])
                    Ppat_construct "Scoped" (lib/ident.ml[128,4042+4]..[128,4042+10])
                    Some
                      []
                      pattern (lib/ident.ml[128,4042+11]..[128,4042+12])
                        Ppat_any
                expression (lib/ident.ml[128,4042+16]..[128,4042+21])
                  Pexp_construct "false" (lib/ident.ml[128,4042+16]..[128,4042+21])
                  None
              <case>
                pattern (lib/ident.ml[129,4064+4]..[130,4077+12])
                  Ppat_or
                  pattern (lib/ident.ml[129,4064+4]..[129,4064+12])
                    Ppat_construct "Global" (lib/ident.ml[129,4064+4]..[129,4064+10])
                    Some
                      []
                      pattern (lib/ident.ml[129,4064+11]..[129,4064+12])
                        Ppat_any
                  pattern (lib/ident.ml[130,4077+4]..[130,4077+12])
                    Ppat_construct "Predef" (lib/ident.ml[130,4077+4]..[130,4077+10])
                    Some
                      []
                      pattern (lib/ident.ml[130,4077+11]..[130,4077+12])
                        Ppat_any
                expression (lib/ident.ml[130,4077+16]..[130,4077+20])
                  Pexp_construct "true" (lib/ident.ml[130,4077+16]..[130,4077+20])
                  None
            ]
    ]
  structure_item (lib/ident.ml[132,4099+0]..[134,4145+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[132,4099+4]..[132,4099+13])
          Ppat_var "is_predef" (lib/ident.ml[132,4099+4]..[132,4099+13])
        expression (lib/ident.ml[132,4099+16]..[134,4145+14])
          Pexp_function
          []
          None
          Pfunction_cases (lib/ident.ml[132,4099+16]..[134,4145+14])
            [
              <case>
                pattern (lib/ident.ml[133,4124+4]..[133,4124+12])
                  Ppat_construct "Predef" (lib/ident.ml[133,4124+4]..[133,4124+10])
                  Some
                    []
                    pattern (lib/ident.ml[133,4124+11]..[133,4124+12])
                      Ppat_any
                expression (lib/ident.ml[133,4124+16]..[133,4124+20])
                  Pexp_construct "true" (lib/ident.ml[133,4124+16]..[133,4124+20])
                  None
              <case>
                pattern (lib/ident.ml[134,4145+4]..[134,4145+5])
                  Ppat_any
                expression (lib/ident.ml[134,4145+9]..[134,4145+14])
                  Pexp_construct "false" (lib/ident.ml[134,4145+9]..[134,4145+14])
                  None
            ]
    ]
  structure_item (lib/ident.ml[136,4161+0]..[149,4650+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[136,4161+4]..[136,4161+9])
          Ppat_var "print" (lib/ident.ml[136,4161+4]..[136,4161+9])
        expression (lib/ident.ml[136,4161+10]..[149,4650+57]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[136,4161+10]..[136,4161+21])
              Labelled "with_scope"
              None
              pattern (lib/ident.ml[136,4161+11]..[136,4161+21])
                Ppat_var "with_scope" (lib/ident.ml[136,4161+11]..[136,4161+21])
            Pparam_val (lib/ident.ml[136,4161+22]..[136,4161+25])
              Nolabel
              None
              pattern (lib/ident.ml[136,4161+22]..[136,4161+25])
                Ppat_var "ppf" (lib/ident.ml[136,4161+22]..[136,4161+25])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[137,4189+2]..[149,4650+57])
              Pexp_open Fresh
              module_expr (lib/ident.ml[137,4189+11]..[137,4189+17])
                Pmod_ident "Format" (lib/ident.ml[137,4189+11]..[137,4189+17])
              expression (lib/ident.ml[138,4210+2]..[149,4650+57])
                Pexp_function
                []
                None
                Pfunction_cases (lib/ident.ml[138,4210+2]..[149,4650+57])
                  [
                    <case>
                      pattern (lib/ident.ml[139,4221+4]..[139,4221+15])
                        Ppat_construct "Global" (lib/ident.ml[139,4221+4]..[139,4221+10])
                        Some
                          []
                          pattern (lib/ident.ml[139,4221+11]..[139,4221+15])
                            Ppat_var "name" (lib/ident.ml[139,4221+11]..[139,4221+15])
                      expression (lib/ident.ml[139,4221+19]..[139,4221+41])
                        Pexp_apply
                        expression (lib/ident.ml[139,4221+19]..[139,4221+26])
                          Pexp_ident "fprintf" (lib/ident.ml[139,4221+19]..[139,4221+26])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[139,4221+27]..[139,4221+30])
                              Pexp_ident "ppf" (lib/ident.ml[139,4221+27]..[139,4221+30])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[139,4221+31]..[139,4221+36])
                              Pexp_constant PConst_string("%s!",(lib/ident.ml[139,4221+32]..[139,4221+35]),None)
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[139,4221+37]..[139,4221+41])
                              Pexp_ident "name" (lib/ident.ml[139,4221+37]..[139,4221+41])
                        ]
                    <case>
                      pattern (lib/ident.ml[140,4263+4]..[140,4263+30])
                        Ppat_construct "Predef" (lib/ident.ml[140,4263+4]..[140,4263+10])
                        Some
                          []
                          pattern (lib/ident.ml[140,4263+11]..[140,4263+30])
                            Ppat_record Closed
                            [
                              "name" (lib/ident.ml[140,4263+13]..[140,4263+17]) ghost
                                pattern (lib/ident.ml[140,4263+13]..[140,4263+17])
                                  Ppat_var "name" (lib/ident.ml[140,4263+13]..[140,4263+17])
                              "stamp" (lib/ident.ml[140,4263+19]..[140,4263+24])
                                pattern (lib/ident.ml[140,4263+27]..[140,4263+28])
                                  Ppat_var "n" (lib/ident.ml[140,4263+27]..[140,4263+28])
                            ]
                      expression (lib/ident.ml[141,4297+6]..[142,4328+61])
                        Pexp_apply
                        expression (lib/ident.ml[141,4297+6]..[141,4297+13])
                          Pexp_ident "fprintf" (lib/ident.ml[141,4297+6]..[141,4297+13])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[141,4297+14]..[141,4297+17])
                              Pexp_ident "ppf" (lib/ident.ml[141,4297+14]..[141,4297+17])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[141,4297+18]..[141,4297+25])
                              Pexp_constant PConst_string("%s%s!",(lib/ident.ml[141,4297+19]..[141,4297+24]),None)
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[141,4297+26]..[141,4297+30])
                              Pexp_ident "name" (lib/ident.ml[141,4297+26]..[141,4297+30])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[142,4328+8]..[142,4328+61])
                              Pexp_ifthenelse
                              expression (lib/ident.ml[142,4328+12]..[142,4328+31])
                                Pexp_apply
                                expression (lib/ident.ml[142,4328+12]..[142,4328+13])
                                  Pexp_ident "!" (lib/ident.ml[142,4328+12]..[142,4328+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[142,4328+13]..[142,4328+31])
                                      Pexp_ident "Clflags.unique_ids" (lib/ident.ml[142,4328+13]..[142,4328+31])
                                ]
                              expression (lib/ident.ml[142,4328+37]..[142,4328+52])
                                Pexp_apply
                                expression (lib/ident.ml[142,4328+37]..[142,4328+44])
                                  Pexp_ident "sprintf" (lib/ident.ml[142,4328+37]..[142,4328+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[142,4328+45]..[142,4328+50])
                                      Pexp_constant PConst_string("/%i",(lib/ident.ml[142,4328+46]..[142,4328+49]),None)
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[142,4328+51]..[142,4328+52])
                                      Pexp_ident "n" (lib/ident.ml[142,4328+51]..[142,4328+52])
                                ]
                              Some
                                expression (lib/ident.ml[142,4328+58]..[142,4328+60])
                                  Pexp_constant PConst_string("",(lib/ident.ml[142,4328+59]..[142,4328+59]),None)
                        ]
                    <case>
                      pattern (lib/ident.ml[143,4390+4]..[143,4390+29])
                        Ppat_construct "Local" (lib/ident.ml[143,4390+4]..[143,4390+9])
                        Some
                          []
                          pattern (lib/ident.ml[143,4390+10]..[143,4390+29])
                            Ppat_record Closed
                            [
                              "name" (lib/ident.ml[143,4390+12]..[143,4390+16]) ghost
                                pattern (lib/ident.ml[143,4390+12]..[143,4390+16])
                                  Ppat_var "name" (lib/ident.ml[143,4390+12]..[143,4390+16])
                              "stamp" (lib/ident.ml[143,4390+18]..[143,4390+23])
                                pattern (lib/ident.ml[143,4390+26]..[143,4390+27])
                                  Ppat_var "n" (lib/ident.ml[143,4390+26]..[143,4390+27])
                            ]
                      expression (lib/ident.ml[144,4423+6]..[145,4453+61])
                        Pexp_apply
                        expression (lib/ident.ml[144,4423+6]..[144,4423+13])
                          Pexp_ident "fprintf" (lib/ident.ml[144,4423+6]..[144,4423+13])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[144,4423+14]..[144,4423+17])
                              Pexp_ident "ppf" (lib/ident.ml[144,4423+14]..[144,4423+17])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[144,4423+18]..[144,4423+24])
                              Pexp_constant PConst_string("%s%s",(lib/ident.ml[144,4423+19]..[144,4423+23]),None)
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[144,4423+25]..[144,4423+29])
                              Pexp_ident "name" (lib/ident.ml[144,4423+25]..[144,4423+29])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[145,4453+8]..[145,4453+61])
                              Pexp_ifthenelse
                              expression (lib/ident.ml[145,4453+12]..[145,4453+31])
                                Pexp_apply
                                expression (lib/ident.ml[145,4453+12]..[145,4453+13])
                                  Pexp_ident "!" (lib/ident.ml[145,4453+12]..[145,4453+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[145,4453+13]..[145,4453+31])
                                      Pexp_ident "Clflags.unique_ids" (lib/ident.ml[145,4453+13]..[145,4453+31])
                                ]
                              expression (lib/ident.ml[145,4453+37]..[145,4453+52])
                                Pexp_apply
                                expression (lib/ident.ml[145,4453+37]..[145,4453+44])
                                  Pexp_ident "sprintf" (lib/ident.ml[145,4453+37]..[145,4453+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[145,4453+45]..[145,4453+50])
                                      Pexp_constant PConst_string("/%i",(lib/ident.ml[145,4453+46]..[145,4453+49]),None)
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[145,4453+51]..[145,4453+52])
                                      Pexp_ident "n" (lib/ident.ml[145,4453+51]..[145,4453+52])
                                ]
                              Some
                                expression (lib/ident.ml[145,4453+58]..[145,4453+60])
                                  Pexp_constant PConst_string("",(lib/ident.ml[145,4453+59]..[145,4453+59]),None)
                        ]
                    <case>
                      pattern (lib/ident.ml[146,4515+4]..[146,4515+37])
                        Ppat_construct "Scoped" (lib/ident.ml[146,4515+4]..[146,4515+10])
                        Some
                          []
                          pattern (lib/ident.ml[146,4515+11]..[146,4515+37])
                            Ppat_record Closed
                            [
                              "name" (lib/ident.ml[146,4515+13]..[146,4515+17]) ghost
                                pattern (lib/ident.ml[146,4515+13]..[146,4515+17])
                                  Ppat_var "name" (lib/ident.ml[146,4515+13]..[146,4515+17])
                              "stamp" (lib/ident.ml[146,4515+19]..[146,4515+24])
                                pattern (lib/ident.ml[146,4515+27]..[146,4515+28])
                                  Ppat_var "n" (lib/ident.ml[146,4515+27]..[146,4515+28])
                              "scope" (lib/ident.ml[146,4515+30]..[146,4515+35]) ghost
                                pattern (lib/ident.ml[146,4515+30]..[146,4515+35])
                                  Ppat_var "scope" (lib/ident.ml[146,4515+30]..[146,4515+35])
                            ]
                      expression (lib/ident.ml[147,4556+6]..[149,4650+57])
                        Pexp_apply
                        expression (lib/ident.ml[147,4556+6]..[147,4556+13])
                          Pexp_ident "fprintf" (lib/ident.ml[147,4556+6]..[147,4556+13])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[147,4556+14]..[147,4556+17])
                              Pexp_ident "ppf" (lib/ident.ml[147,4556+14]..[147,4556+17])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[147,4556+18]..[147,4556+26])
                              Pexp_constant PConst_string("%s%s%s",(lib/ident.ml[147,4556+19]..[147,4556+25]),None)
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[147,4556+27]..[147,4556+31])
                              Pexp_ident "name" (lib/ident.ml[147,4556+27]..[147,4556+31])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[148,4588+8]..[148,4588+61])
                              Pexp_ifthenelse
                              expression (lib/ident.ml[148,4588+12]..[148,4588+31])
                                Pexp_apply
                                expression (lib/ident.ml[148,4588+12]..[148,4588+13])
                                  Pexp_ident "!" (lib/ident.ml[148,4588+12]..[148,4588+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[148,4588+13]..[148,4588+31])
                                      Pexp_ident "Clflags.unique_ids" (lib/ident.ml[148,4588+13]..[148,4588+31])
                                ]
                              expression (lib/ident.ml[148,4588+37]..[148,4588+52])
                                Pexp_apply
                                expression (lib/ident.ml[148,4588+37]..[148,4588+44])
                                  Pexp_ident "sprintf" (lib/ident.ml[148,4588+37]..[148,4588+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[148,4588+45]..[148,4588+50])
                                      Pexp_constant PConst_string("/%i",(lib/ident.ml[148,4588+46]..[148,4588+49]),None)
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[148,4588+51]..[148,4588+52])
                                      Pexp_ident "n" (lib/ident.ml[148,4588+51]..[148,4588+52])
                                ]
                              Some
                                expression (lib/ident.ml[148,4588+58]..[148,4588+60])
                                  Pexp_constant PConst_string("",(lib/ident.ml[148,4588+59]..[148,4588+59]),None)
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[149,4650+8]..[149,4650+57])
                              Pexp_ifthenelse
                              expression (lib/ident.ml[149,4650+12]..[149,4650+22])
                                Pexp_ident "with_scope" (lib/ident.ml[149,4650+12]..[149,4650+22])
                              expression (lib/ident.ml[149,4650+28]..[149,4650+48])
                                Pexp_apply
                                expression (lib/ident.ml[149,4650+28]..[149,4650+35])
                                  Pexp_ident "sprintf" (lib/ident.ml[149,4650+28]..[149,4650+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[149,4650+36]..[149,4650+42])
                                      Pexp_constant PConst_string("[%i]",(lib/ident.ml[149,4650+37]..[149,4650+41]),None)
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[149,4650+43]..[149,4650+48])
                                      Pexp_ident "scope" (lib/ident.ml[149,4650+43]..[149,4650+48])
                                ]
                              Some
                                expression (lib/ident.ml[149,4650+54]..[149,4650+56])
                                  Pexp_constant PConst_string("",(lib/ident.ml[149,4650+55]..[149,4650+55]),None)
                        ]
                  ]
    ]
  structure_item (lib/ident.ml[151,4709+0]..[151,4709+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[151,4709+4]..[151,4709+20])
          Ppat_var "print_with_scope" (lib/ident.ml[151,4709+4]..[151,4709+20])
        expression (lib/ident.ml[151,4709+21]..[151,4709+59]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[151,4709+21]..[151,4709+24])
              Nolabel
              None
              pattern (lib/ident.ml[151,4709+21]..[151,4709+24])
                Ppat_var "ppf" (lib/ident.ml[151,4709+21]..[151,4709+24])
            Pparam_val (lib/ident.ml[151,4709+25]..[151,4709+27])
              Nolabel
              None
              pattern (lib/ident.ml[151,4709+25]..[151,4709+27])
                Ppat_var "id" (lib/ident.ml[151,4709+25]..[151,4709+27])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[151,4709+30]..[151,4709+59])
              Pexp_apply
              expression (lib/ident.ml[151,4709+30]..[151,4709+35])
                Pexp_ident "print" (lib/ident.ml[151,4709+30]..[151,4709+35])
              [
                <arg>
                Labelled "with_scope"
                  expression (lib/ident.ml[151,4709+48]..[151,4709+52])
                    Pexp_construct "true" (lib/ident.ml[151,4709+48]..[151,4709+52])
                    None
                <arg>
                Nolabel
                  expression (lib/ident.ml[151,4709+53]..[151,4709+56])
                    Pexp_ident "ppf" (lib/ident.ml[151,4709+53]..[151,4709+56])
                <arg>
                Nolabel
                  expression (lib/ident.ml[151,4709+57]..[151,4709+59])
                    Pexp_ident "id" (lib/ident.ml[151,4709+57]..[151,4709+59])
              ]
    ]
  structure_item (lib/ident.ml[153,4770+0]..[153,4770+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[153,4770+4]..[153,4770+9])
          Ppat_var "print" (lib/ident.ml[153,4770+4]..[153,4770+9])
        expression (lib/ident.ml[153,4770+10]..[153,4770+49]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[153,4770+10]..[153,4770+13])
              Nolabel
              None
              pattern (lib/ident.ml[153,4770+10]..[153,4770+13])
                Ppat_var "ppf" (lib/ident.ml[153,4770+10]..[153,4770+13])
            Pparam_val (lib/ident.ml[153,4770+14]..[153,4770+16])
              Nolabel
              None
              pattern (lib/ident.ml[153,4770+14]..[153,4770+16])
                Ppat_var "id" (lib/ident.ml[153,4770+14]..[153,4770+16])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[153,4770+19]..[153,4770+49])
              Pexp_apply
              expression (lib/ident.ml[153,4770+19]..[153,4770+24])
                Pexp_ident "print" (lib/ident.ml[153,4770+19]..[153,4770+24])
              [
                <arg>
                Labelled "with_scope"
                  expression (lib/ident.ml[153,4770+37]..[153,4770+42])
                    Pexp_construct "false" (lib/ident.ml[153,4770+37]..[153,4770+42])
                    None
                <arg>
                Nolabel
                  expression (lib/ident.ml[153,4770+43]..[153,4770+46])
                    Pexp_ident "ppf" (lib/ident.ml[153,4770+43]..[153,4770+46])
                <arg>
                Nolabel
                  expression (lib/ident.ml[153,4770+47]..[153,4770+49])
                    Pexp_ident "id" (lib/ident.ml[153,4770+47]..[153,4770+49])
              ]
    ]
  structure_item (lib/ident.ml[168,5341+0]..[175,5452+30])
    Pstr_type Rec
    [
      type_declaration "tbl" (lib/ident.ml[168,5341+8]..[168,5341+11]) (lib/ident.ml[168,5341+0]..[170,5365+43])
        ptype_params =
          [
            core_type (lib/ident.ml[168,5341+5]..[168,5341+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/ident.ml[169,5355+4]..[169,5355+9])
                "Empty" (lib/ident.ml[169,5355+4]..[169,5355+9])
                []
                None
              (lib/ident.ml[170,5365+2]..[170,5365+43])
                "Node" (lib/ident.ml[170,5365+4]..[170,5365+8])
                [
                  core_type (lib/ident.ml[170,5365+12]..[170,5365+18])
                    Ptyp_constr "tbl" (lib/ident.ml[170,5365+15]..[170,5365+18])
                    [
                      core_type (lib/ident.ml[170,5365+12]..[170,5365+14])
                        Ptyp_var a
                    ]
                  core_type (lib/ident.ml[170,5365+21]..[170,5365+28])
                    Ptyp_constr "data" (lib/ident.ml[170,5365+24]..[170,5365+28])
                    [
                      core_type (lib/ident.ml[170,5365+21]..[170,5365+23])
                        Ptyp_var a
                    ]
                  core_type (lib/ident.ml[170,5365+31]..[170,5365+37])
                    Ptyp_constr "tbl" (lib/ident.ml[170,5365+34]..[170,5365+37])
                    [
                      core_type (lib/ident.ml[170,5365+31]..[170,5365+33])
                        Ptyp_var a
                    ]
                  core_type (lib/ident.ml[170,5365+40]..[170,5365+43])
                    Ptyp_constr "int" (lib/ident.ml[170,5365+40]..[170,5365+43])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "data" (lib/ident.ml[172,5410+7]..[172,5410+11]) (lib/ident.ml[172,5410+0]..[175,5452+30])
        ptype_params =
          [
            core_type (lib/ident.ml[172,5410+4]..[172,5410+6])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/ident.ml[173,5424+4]..[173,5424+13])
                Immutable
                "ident" (lib/ident.ml[173,5424+4]..[173,5424+9])                core_type (lib/ident.ml[173,5424+11]..[173,5424+12])
                  Ptyp_constr "t" (lib/ident.ml[173,5424+11]..[173,5424+12])
                  []
              (lib/ident.ml[174,5438+4]..[174,5438+13])
                Immutable
                "data" (lib/ident.ml[174,5438+4]..[174,5438+8])                core_type (lib/ident.ml[174,5438+10]..[174,5438+12])
                  Ptyp_var a
              (lib/ident.ml[175,5452+4]..[175,5452+28])
                Immutable
                "previous" (lib/ident.ml[175,5452+4]..[175,5452+12])                core_type (lib/ident.ml[175,5452+14]..[175,5452+28])
                  Ptyp_constr "option" (lib/ident.ml[175,5452+22]..[175,5452+28])
                  [
                    core_type (lib/ident.ml[175,5452+14]..[175,5452+21])
                      Ptyp_constr "data" (lib/ident.ml[175,5452+17]..[175,5452+21])
                      [
                        core_type (lib/ident.ml[175,5452+14]..[175,5452+16])
                          Ptyp_var a
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/ident.ml[177,5484+0]..[177,5484+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[177,5484+4]..[177,5484+9])
          Ppat_var "empty" (lib/ident.ml[177,5484+4]..[177,5484+9])
        expression (lib/ident.ml[177,5484+12]..[177,5484+17])
          Pexp_construct "Empty" (lib/ident.ml[177,5484+12]..[177,5484+17])
          None
    ]
  structure_item (lib/ident.ml[185,5624+0]..[188,5758+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[185,5624+4]..[185,5624+10])
          Ppat_var "mknode" (lib/ident.ml[185,5624+4]..[185,5624+10])
        expression (lib/ident.ml[185,5624+11]..[188,5758+54]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[185,5624+11]..[185,5624+12])
              Nolabel
              None
              pattern (lib/ident.ml[185,5624+11]..[185,5624+12])
                Ppat_var "l" (lib/ident.ml[185,5624+11]..[185,5624+12])
            Pparam_val (lib/ident.ml[185,5624+13]..[185,5624+14])
              Nolabel
              None
              pattern (lib/ident.ml[185,5624+13]..[185,5624+14])
                Ppat_var "d" (lib/ident.ml[185,5624+13]..[185,5624+14])
            Pparam_val (lib/ident.ml[185,5624+15]..[185,5624+16])
              Nolabel
              None
              pattern (lib/ident.ml[185,5624+15]..[185,5624+16])
                Ppat_var "r" (lib/ident.ml[185,5624+15]..[185,5624+16])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[186,5643+2]..[188,5758+54])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/ident.ml[186,5643+6]..[186,5643+8])
                    Ppat_var "hl" (lib/ident.ml[186,5643+6]..[186,5643+8])
                  expression (lib/ident.ml[186,5643+11]..[186,5643+55])
                    Pexp_match
                    expression (lib/ident.ml[186,5643+17]..[186,5643+18])
                      Pexp_ident "l" (lib/ident.ml[186,5643+17]..[186,5643+18])
                    [
                      <case>
                        pattern (lib/ident.ml[186,5643+24]..[186,5643+29])
                          Ppat_construct "Empty" (lib/ident.ml[186,5643+24]..[186,5643+29])
                          None
                        expression (lib/ident.ml[186,5643+33]..[186,5643+34])
                          Pexp_constant PConst_int (0,None)
                      <case>
                        pattern (lib/ident.ml[186,5643+37]..[186,5643+50])
                          Ppat_construct "Node" (lib/ident.ml[186,5643+37]..[186,5643+41])
                          Some
                            []
                            pattern (lib/ident.ml[186,5643+41]..[186,5643+50])
                              Ppat_tuple
                              [
                                pattern (lib/ident.ml[186,5643+42]..[186,5643+43])
                                  Ppat_any
                                pattern (lib/ident.ml[186,5643+44]..[186,5643+45])
                                  Ppat_any
                                pattern (lib/ident.ml[186,5643+46]..[186,5643+47])
                                  Ppat_any
                                pattern (lib/ident.ml[186,5643+48]..[186,5643+49])
                                  Ppat_var "h" (lib/ident.ml[186,5643+48]..[186,5643+49])
                              ]
                        expression (lib/ident.ml[186,5643+54]..[186,5643+55])
                          Pexp_ident "h" (lib/ident.ml[186,5643+54]..[186,5643+55])
                    ]
                <def>
                  pattern (lib/ident.ml[187,5699+6]..[187,5699+8])
                    Ppat_var "hr" (lib/ident.ml[187,5699+6]..[187,5699+8])
                  expression (lib/ident.ml[187,5699+11]..[187,5699+55])
                    Pexp_match
                    expression (lib/ident.ml[187,5699+17]..[187,5699+18])
                      Pexp_ident "r" (lib/ident.ml[187,5699+17]..[187,5699+18])
                    [
                      <case>
                        pattern (lib/ident.ml[187,5699+24]..[187,5699+29])
                          Ppat_construct "Empty" (lib/ident.ml[187,5699+24]..[187,5699+29])
                          None
                        expression (lib/ident.ml[187,5699+33]..[187,5699+34])
                          Pexp_constant PConst_int (0,None)
                      <case>
                        pattern (lib/ident.ml[187,5699+37]..[187,5699+50])
                          Ppat_construct "Node" (lib/ident.ml[187,5699+37]..[187,5699+41])
                          Some
                            []
                            pattern (lib/ident.ml[187,5699+41]..[187,5699+50])
                              Ppat_tuple
                              [
                                pattern (lib/ident.ml[187,5699+42]..[187,5699+43])
                                  Ppat_any
                                pattern (lib/ident.ml[187,5699+44]..[187,5699+45])
                                  Ppat_any
                                pattern (lib/ident.ml[187,5699+46]..[187,5699+47])
                                  Ppat_any
                                pattern (lib/ident.ml[187,5699+48]..[187,5699+49])
                                  Ppat_var "h" (lib/ident.ml[187,5699+48]..[187,5699+49])
                              ]
                        expression (lib/ident.ml[187,5699+54]..[187,5699+55])
                          Pexp_ident "h" (lib/ident.ml[187,5699+54]..[187,5699+55])
                    ]
              ]
              expression (lib/ident.ml[188,5758+2]..[188,5758+54])
                Pexp_construct "Node" (lib/ident.ml[188,5758+2]..[188,5758+6])
                Some
                  expression (lib/ident.ml[188,5758+6]..[188,5758+54])
                    Pexp_tuple
                    [
                      expression (lib/ident.ml[188,5758+7]..[188,5758+8])
                        Pexp_ident "l" (lib/ident.ml[188,5758+7]..[188,5758+8])
                      expression (lib/ident.ml[188,5758+10]..[188,5758+11])
                        Pexp_ident "d" (lib/ident.ml[188,5758+10]..[188,5758+11])
                      expression (lib/ident.ml[188,5758+13]..[188,5758+14])
                        Pexp_ident "r" (lib/ident.ml[188,5758+13]..[188,5758+14])
                      expression (lib/ident.ml[188,5758+16]..[188,5758+53])
                        Pexp_ifthenelse
                        expression (lib/ident.ml[188,5758+20]..[188,5758+28])
                          Pexp_apply
                          expression (lib/ident.ml[188,5758+23]..[188,5758+25])
                            Pexp_ident ">=" (lib/ident.ml[188,5758+23]..[188,5758+25])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[188,5758+20]..[188,5758+22])
                                Pexp_ident "hl" (lib/ident.ml[188,5758+20]..[188,5758+22])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[188,5758+26]..[188,5758+28])
                                Pexp_ident "hr" (lib/ident.ml[188,5758+26]..[188,5758+28])
                          ]
                        expression (lib/ident.ml[188,5758+34]..[188,5758+40])
                          Pexp_apply
                          expression (lib/ident.ml[188,5758+37]..[188,5758+38])
                            Pexp_ident "+" (lib/ident.ml[188,5758+37]..[188,5758+38])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[188,5758+34]..[188,5758+36])
                                Pexp_ident "hl" (lib/ident.ml[188,5758+34]..[188,5758+36])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[188,5758+39]..[188,5758+40])
                                Pexp_constant PConst_int (1,None)
                          ]
                        Some
                          expression (lib/ident.ml[188,5758+46]..[188,5758+52])
                            Pexp_apply
                            expression (lib/ident.ml[188,5758+49]..[188,5758+50])
                              Pexp_ident "+" (lib/ident.ml[188,5758+49]..[188,5758+50])
                            [
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[188,5758+46]..[188,5758+48])
                                  Pexp_ident "hr" (lib/ident.ml[188,5758+46]..[188,5758+48])
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[188,5758+51]..[188,5758+52])
                                  Pexp_constant PConst_int (1,None)
                            ]
                    ]
    ]
  structure_item (lib/ident.ml[190,5814+0]..[212,6674+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[190,5814+4]..[190,5814+11])
          Ppat_var "balance" (lib/ident.ml[190,5814+4]..[190,5814+11])
        expression (lib/ident.ml[190,5814+12]..[212,6674+16]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[190,5814+12]..[190,5814+13])
              Nolabel
              None
              pattern (lib/ident.ml[190,5814+12]..[190,5814+13])
                Ppat_var "l" (lib/ident.ml[190,5814+12]..[190,5814+13])
            Pparam_val (lib/ident.ml[190,5814+14]..[190,5814+15])
              Nolabel
              None
              pattern (lib/ident.ml[190,5814+14]..[190,5814+15])
                Ppat_var "d" (lib/ident.ml[190,5814+14]..[190,5814+15])
            Pparam_val (lib/ident.ml[190,5814+16]..[190,5814+17])
              Nolabel
              None
              pattern (lib/ident.ml[190,5814+16]..[190,5814+17])
                Ppat_var "r" (lib/ident.ml[190,5814+16]..[190,5814+17])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[191,5834+2]..[212,6674+16])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/ident.ml[191,5834+6]..[191,5834+8])
                    Ppat_var "hl" (lib/ident.ml[191,5834+6]..[191,5834+8])
                  expression (lib/ident.ml[191,5834+11]..[191,5834+55])
                    Pexp_match
                    expression (lib/ident.ml[191,5834+17]..[191,5834+18])
                      Pexp_ident "l" (lib/ident.ml[191,5834+17]..[191,5834+18])
                    [
                      <case>
                        pattern (lib/ident.ml[191,5834+24]..[191,5834+29])
                          Ppat_construct "Empty" (lib/ident.ml[191,5834+24]..[191,5834+29])
                          None
                        expression (lib/ident.ml[191,5834+33]..[191,5834+34])
                          Pexp_constant PConst_int (0,None)
                      <case>
                        pattern (lib/ident.ml[191,5834+37]..[191,5834+50])
                          Ppat_construct "Node" (lib/ident.ml[191,5834+37]..[191,5834+41])
                          Some
                            []
                            pattern (lib/ident.ml[191,5834+41]..[191,5834+50])
                              Ppat_tuple
                              [
                                pattern (lib/ident.ml[191,5834+42]..[191,5834+43])
                                  Ppat_any
                                pattern (lib/ident.ml[191,5834+44]..[191,5834+45])
                                  Ppat_any
                                pattern (lib/ident.ml[191,5834+46]..[191,5834+47])
                                  Ppat_any
                                pattern (lib/ident.ml[191,5834+48]..[191,5834+49])
                                  Ppat_var "h" (lib/ident.ml[191,5834+48]..[191,5834+49])
                              ]
                        expression (lib/ident.ml[191,5834+54]..[191,5834+55])
                          Pexp_ident "h" (lib/ident.ml[191,5834+54]..[191,5834+55])
                    ]
                <def>
                  pattern (lib/ident.ml[192,5890+6]..[192,5890+8])
                    Ppat_var "hr" (lib/ident.ml[192,5890+6]..[192,5890+8])
                  expression (lib/ident.ml[192,5890+11]..[192,5890+55])
                    Pexp_match
                    expression (lib/ident.ml[192,5890+17]..[192,5890+18])
                      Pexp_ident "r" (lib/ident.ml[192,5890+17]..[192,5890+18])
                    [
                      <case>
                        pattern (lib/ident.ml[192,5890+24]..[192,5890+29])
                          Ppat_construct "Empty" (lib/ident.ml[192,5890+24]..[192,5890+29])
                          None
                        expression (lib/ident.ml[192,5890+33]..[192,5890+34])
                          Pexp_constant PConst_int (0,None)
                      <case>
                        pattern (lib/ident.ml[192,5890+37]..[192,5890+50])
                          Ppat_construct "Node" (lib/ident.ml[192,5890+37]..[192,5890+41])
                          Some
                            []
                            pattern (lib/ident.ml[192,5890+41]..[192,5890+50])
                              Ppat_tuple
                              [
                                pattern (lib/ident.ml[192,5890+42]..[192,5890+43])
                                  Ppat_any
                                pattern (lib/ident.ml[192,5890+44]..[192,5890+45])
                                  Ppat_any
                                pattern (lib/ident.ml[192,5890+46]..[192,5890+47])
                                  Ppat_any
                                pattern (lib/ident.ml[192,5890+48]..[192,5890+49])
                                  Ppat_var "h" (lib/ident.ml[192,5890+48]..[192,5890+49])
                              ]
                        expression (lib/ident.ml[192,5890+54]..[192,5890+55])
                          Pexp_ident "h" (lib/ident.ml[192,5890+54]..[192,5890+55])
                    ]
              ]
              expression (lib/ident.ml[193,5949+2]..[212,6674+16])
                Pexp_ifthenelse
                expression (lib/ident.ml[193,5949+5]..[193,5949+16])
                  Pexp_apply
                  expression (lib/ident.ml[193,5949+8]..[193,5949+9])
                    Pexp_ident ">" (lib/ident.ml[193,5949+8]..[193,5949+9])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[193,5949+5]..[193,5949+7])
                        Pexp_ident "hl" (lib/ident.ml[193,5949+5]..[193,5949+7])
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[193,5949+10]..[193,5949+16])
                        Pexp_apply
                        expression (lib/ident.ml[193,5949+13]..[193,5949+14])
                          Pexp_ident "+" (lib/ident.ml[193,5949+13]..[193,5949+14])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[193,5949+10]..[193,5949+12])
                              Pexp_ident "hr" (lib/ident.ml[193,5949+10]..[193,5949+12])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[193,5949+15]..[193,5949+16])
                              Pexp_constant PConst_int (1,None)
                        ]
                  ]
                expression (lib/ident.ml[194,5971+4]..[201,6281+23])
                  Pexp_match
                  expression (lib/ident.ml[194,5971+10]..[194,5971+11])
                    Pexp_ident "l" (lib/ident.ml[194,5971+10]..[194,5971+11])
                  [
                    <case>
                      pattern (lib/ident.ml[195,5988+6]..[195,5988+26])
                        Ppat_construct "Node" (lib/ident.ml[195,5988+6]..[195,5988+10])
                        Some
                          []
                          pattern (lib/ident.ml[195,5988+11]..[195,5988+26])
                            Ppat_tuple
                            [
                              pattern (lib/ident.ml[195,5988+12]..[195,5988+14])
                                Ppat_var "ll" (lib/ident.ml[195,5988+12]..[195,5988+14])
                              pattern (lib/ident.ml[195,5988+16]..[195,5988+18])
                                Ppat_var "ld" (lib/ident.ml[195,5988+16]..[195,5988+18])
                              pattern (lib/ident.ml[195,5988+20]..[195,5988+22])
                                Ppat_var "lr" (lib/ident.ml[195,5988+20]..[195,5988+22])
                              pattern (lib/ident.ml[195,5988+24]..[195,5988+25])
                                Ppat_any
                            ]
                      <when>
                        expression (lib/ident.ml[196,6015+11]..[197,6077+58])
                          Pexp_apply
                          expression (lib/ident.ml[196,6015+59]..[196,6015+61])
                            Pexp_ident ">=" (lib/ident.ml[196,6015+59]..[196,6015+61])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[196,6015+11]..[196,6015+58])
                                Pexp_match
                                expression (lib/ident.ml[196,6015+18]..[196,6015+20])
                                  Pexp_ident "ll" (lib/ident.ml[196,6015+18]..[196,6015+20])
                                [
                                  <case>
                                    pattern (lib/ident.ml[196,6015+26]..[196,6015+31])
                                      Ppat_construct "Empty" (lib/ident.ml[196,6015+26]..[196,6015+31])
                                      None
                                    expression (lib/ident.ml[196,6015+35]..[196,6015+36])
                                      Pexp_constant PConst_int (0,None)
                                  <case>
                                    pattern (lib/ident.ml[196,6015+39]..[196,6015+52])
                                      Ppat_construct "Node" (lib/ident.ml[196,6015+39]..[196,6015+43])
                                      Some
                                        []
                                        pattern (lib/ident.ml[196,6015+43]..[196,6015+52])
                                          Ppat_tuple
                                          [
                                            pattern (lib/ident.ml[196,6015+44]..[196,6015+45])
                                              Ppat_any
                                            pattern (lib/ident.ml[196,6015+46]..[196,6015+47])
                                              Ppat_any
                                            pattern (lib/ident.ml[196,6015+48]..[196,6015+49])
                                              Ppat_any
                                            pattern (lib/ident.ml[196,6015+50]..[196,6015+51])
                                              Ppat_var "h" (lib/ident.ml[196,6015+50]..[196,6015+51])
                                          ]
                                    expression (lib/ident.ml[196,6015+56]..[196,6015+57])
                                      Pexp_ident "h" (lib/ident.ml[196,6015+56]..[196,6015+57])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[197,6077+11]..[197,6077+58])
                                Pexp_match
                                expression (lib/ident.ml[197,6077+18]..[197,6077+20])
                                  Pexp_ident "lr" (lib/ident.ml[197,6077+18]..[197,6077+20])
                                [
                                  <case>
                                    pattern (lib/ident.ml[197,6077+26]..[197,6077+31])
                                      Ppat_construct "Empty" (lib/ident.ml[197,6077+26]..[197,6077+31])
                                      None
                                    expression (lib/ident.ml[197,6077+35]..[197,6077+36])
                                      Pexp_constant PConst_int (0,None)
                                  <case>
                                    pattern (lib/ident.ml[197,6077+39]..[197,6077+52])
                                      Ppat_construct "Node" (lib/ident.ml[197,6077+39]..[197,6077+43])
                                      Some
                                        []
                                        pattern (lib/ident.ml[197,6077+43]..[197,6077+52])
                                          Ppat_tuple
                                          [
                                            pattern (lib/ident.ml[197,6077+44]..[197,6077+45])
                                              Ppat_any
                                            pattern (lib/ident.ml[197,6077+46]..[197,6077+47])
                                              Ppat_any
                                            pattern (lib/ident.ml[197,6077+48]..[197,6077+49])
                                              Ppat_any
                                            pattern (lib/ident.ml[197,6077+50]..[197,6077+51])
                                              Ppat_var "h" (lib/ident.ml[197,6077+50]..[197,6077+51])
                                          ]
                                    expression (lib/ident.ml[197,6077+56]..[197,6077+57])
                                      Pexp_ident "h" (lib/ident.ml[197,6077+56]..[197,6077+57])
                                ]
                          ]
                      expression (lib/ident.ml[198,6139+8]..[198,6139+36])
                        Pexp_apply
                        expression (lib/ident.ml[198,6139+8]..[198,6139+14])
                          Pexp_ident "mknode" (lib/ident.ml[198,6139+8]..[198,6139+14])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[198,6139+15]..[198,6139+17])
                              Pexp_ident "ll" (lib/ident.ml[198,6139+15]..[198,6139+17])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[198,6139+18]..[198,6139+20])
                              Pexp_ident "ld" (lib/ident.ml[198,6139+18]..[198,6139+20])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[198,6139+21]..[198,6139+36])
                              Pexp_apply
                              expression (lib/ident.ml[198,6139+22]..[198,6139+28])
                                Pexp_ident "mknode" (lib/ident.ml[198,6139+22]..[198,6139+28])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[198,6139+29]..[198,6139+31])
                                    Pexp_ident "lr" (lib/ident.ml[198,6139+29]..[198,6139+31])
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[198,6139+32]..[198,6139+33])
                                    Pexp_ident "d" (lib/ident.ml[198,6139+32]..[198,6139+33])
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[198,6139+34]..[198,6139+35])
                                    Pexp_ident "r" (lib/ident.ml[198,6139+34]..[198,6139+35])
                              ]
                        ]
                    <case>
                      pattern (lib/ident.ml[199,6176+6]..[199,6176+46])
                        Ppat_construct "Node" (lib/ident.ml[199,6176+6]..[199,6176+10])
                        Some
                          []
                          pattern (lib/ident.ml[199,6176+11]..[199,6176+46])
                            Ppat_tuple
                            [
                              pattern (lib/ident.ml[199,6176+12]..[199,6176+14])
                                Ppat_var "ll" (lib/ident.ml[199,6176+12]..[199,6176+14])
                              pattern (lib/ident.ml[199,6176+16]..[199,6176+18])
                                Ppat_var "ld" (lib/ident.ml[199,6176+16]..[199,6176+18])
                              pattern (lib/ident.ml[199,6176+20]..[199,6176+42])
                                Ppat_construct "Node" (lib/ident.ml[199,6176+20]..[199,6176+24])
                                Some
                                  []
                                  pattern (lib/ident.ml[199,6176+24]..[199,6176+42])
                                    Ppat_tuple
                                    [
                                      pattern (lib/ident.ml[199,6176+25]..[199,6176+28])
                                        Ppat_var "lrl" (lib/ident.ml[199,6176+25]..[199,6176+28])
                                      pattern (lib/ident.ml[199,6176+30]..[199,6176+33])
                                        Ppat_var "lrd" (lib/ident.ml[199,6176+30]..[199,6176+33])
                                      pattern (lib/ident.ml[199,6176+35]..[199,6176+38])
                                        Ppat_var "lrr" (lib/ident.ml[199,6176+35]..[199,6176+38])
                                      pattern (lib/ident.ml[199,6176+40]..[199,6176+41])
                                        Ppat_any
                                    ]
                              pattern (lib/ident.ml[199,6176+44]..[199,6176+45])
                                Ppat_any
                            ]
                      expression (lib/ident.ml[200,6226+8]..[200,6226+54])
                        Pexp_apply
                        expression (lib/ident.ml[200,6226+8]..[200,6226+14])
                          Pexp_ident "mknode" (lib/ident.ml[200,6226+8]..[200,6226+14])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[200,6226+15]..[200,6226+33])
                              Pexp_apply
                              expression (lib/ident.ml[200,6226+16]..[200,6226+22])
                                Pexp_ident "mknode" (lib/ident.ml[200,6226+16]..[200,6226+22])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[200,6226+23]..[200,6226+25])
                                    Pexp_ident "ll" (lib/ident.ml[200,6226+23]..[200,6226+25])
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[200,6226+26]..[200,6226+28])
                                    Pexp_ident "ld" (lib/ident.ml[200,6226+26]..[200,6226+28])
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[200,6226+29]..[200,6226+32])
                                    Pexp_ident "lrl" (lib/ident.ml[200,6226+29]..[200,6226+32])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[200,6226+34]..[200,6226+37])
                              Pexp_ident "lrd" (lib/ident.ml[200,6226+34]..[200,6226+37])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[200,6226+38]..[200,6226+54])
                              Pexp_apply
                              expression (lib/ident.ml[200,6226+39]..[200,6226+45])
                                Pexp_ident "mknode" (lib/ident.ml[200,6226+39]..[200,6226+45])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[200,6226+46]..[200,6226+49])
                                    Pexp_ident "lrr" (lib/ident.ml[200,6226+46]..[200,6226+49])
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[200,6226+50]..[200,6226+51])
                                    Pexp_ident "d" (lib/ident.ml[200,6226+50]..[200,6226+51])
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[200,6226+52]..[200,6226+53])
                                    Pexp_ident "r" (lib/ident.ml[200,6226+52]..[200,6226+53])
                              ]
                        ]
                    <case>
                      pattern (lib/ident.ml[201,6281+6]..[201,6281+7])
                        Ppat_any
                      expression (lib/ident.ml[201,6281+11]..[201,6281+23])
                        Pexp_assert
                        expression (lib/ident.ml[201,6281+18]..[201,6281+23])
                          Pexp_construct "false" (lib/ident.ml[201,6281+18]..[201,6281+23])
                          None
                  ]
                Some
                  expression (lib/ident.ml[202,6305+7]..[212,6674+16])
                    Pexp_ifthenelse
                    expression (lib/ident.ml[202,6305+10]..[202,6305+21])
                      Pexp_apply
                      expression (lib/ident.ml[202,6305+13]..[202,6305+14])
                        Pexp_ident ">" (lib/ident.ml[202,6305+13]..[202,6305+14])
                      [
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[202,6305+10]..[202,6305+12])
                            Pexp_ident "hr" (lib/ident.ml[202,6305+10]..[202,6305+12])
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[202,6305+15]..[202,6305+21])
                            Pexp_apply
                            expression (lib/ident.ml[202,6305+18]..[202,6305+19])
                              Pexp_ident "+" (lib/ident.ml[202,6305+18]..[202,6305+19])
                            [
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[202,6305+15]..[202,6305+17])
                                  Pexp_ident "hl" (lib/ident.ml[202,6305+15]..[202,6305+17])
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[202,6305+20]..[202,6305+21])
                                  Pexp_constant PConst_int (1,None)
                            ]
                      ]
                    expression (lib/ident.ml[203,6332+4]..[210,6643+23])
                      Pexp_match
                      expression (lib/ident.ml[203,6332+10]..[203,6332+11])
                        Pexp_ident "r" (lib/ident.ml[203,6332+10]..[203,6332+11])
                      [
                        <case>
                          pattern (lib/ident.ml[204,6349+6]..[204,6349+26])
                            Ppat_construct "Node" (lib/ident.ml[204,6349+6]..[204,6349+10])
                            Some
                              []
                              pattern (lib/ident.ml[204,6349+11]..[204,6349+26])
                                Ppat_tuple
                                [
                                  pattern (lib/ident.ml[204,6349+12]..[204,6349+14])
                                    Ppat_var "rl" (lib/ident.ml[204,6349+12]..[204,6349+14])
                                  pattern (lib/ident.ml[204,6349+16]..[204,6349+18])
                                    Ppat_var "rd" (lib/ident.ml[204,6349+16]..[204,6349+18])
                                  pattern (lib/ident.ml[204,6349+20]..[204,6349+22])
                                    Ppat_var "rr" (lib/ident.ml[204,6349+20]..[204,6349+22])
                                  pattern (lib/ident.ml[204,6349+24]..[204,6349+25])
                                    Ppat_any
                                ]
                          <when>
                            expression (lib/ident.ml[205,6376+11]..[206,6438+58])
                              Pexp_apply
                              expression (lib/ident.ml[205,6376+59]..[205,6376+61])
                                Pexp_ident ">=" (lib/ident.ml[205,6376+59]..[205,6376+61])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[205,6376+11]..[205,6376+58])
                                    Pexp_match
                                    expression (lib/ident.ml[205,6376+18]..[205,6376+20])
                                      Pexp_ident "rr" (lib/ident.ml[205,6376+18]..[205,6376+20])
                                    [
                                      <case>
                                        pattern (lib/ident.ml[205,6376+26]..[205,6376+31])
                                          Ppat_construct "Empty" (lib/ident.ml[205,6376+26]..[205,6376+31])
                                          None
                                        expression (lib/ident.ml[205,6376+35]..[205,6376+36])
                                          Pexp_constant PConst_int (0,None)
                                      <case>
                                        pattern (lib/ident.ml[205,6376+39]..[205,6376+52])
                                          Ppat_construct "Node" (lib/ident.ml[205,6376+39]..[205,6376+43])
                                          Some
                                            []
                                            pattern (lib/ident.ml[205,6376+43]..[205,6376+52])
                                              Ppat_tuple
                                              [
                                                pattern (lib/ident.ml[205,6376+44]..[205,6376+45])
                                                  Ppat_any
                                                pattern (lib/ident.ml[205,6376+46]..[205,6376+47])
                                                  Ppat_any
                                                pattern (lib/ident.ml[205,6376+48]..[205,6376+49])
                                                  Ppat_any
                                                pattern (lib/ident.ml[205,6376+50]..[205,6376+51])
                                                  Ppat_var "h" (lib/ident.ml[205,6376+50]..[205,6376+51])
                                              ]
                                        expression (lib/ident.ml[205,6376+56]..[205,6376+57])
                                          Pexp_ident "h" (lib/ident.ml[205,6376+56]..[205,6376+57])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[206,6438+11]..[206,6438+58])
                                    Pexp_match
                                    expression (lib/ident.ml[206,6438+18]..[206,6438+20])
                                      Pexp_ident "rl" (lib/ident.ml[206,6438+18]..[206,6438+20])
                                    [
                                      <case>
                                        pattern (lib/ident.ml[206,6438+26]..[206,6438+31])
                                          Ppat_construct "Empty" (lib/ident.ml[206,6438+26]..[206,6438+31])
                                          None
                                        expression (lib/ident.ml[206,6438+35]..[206,6438+36])
                                          Pexp_constant PConst_int (0,None)
                                      <case>
                                        pattern (lib/ident.ml[206,6438+39]..[206,6438+52])
                                          Ppat_construct "Node" (lib/ident.ml[206,6438+39]..[206,6438+43])
                                          Some
                                            []
                                            pattern (lib/ident.ml[206,6438+43]..[206,6438+52])
                                              Ppat_tuple
                                              [
                                                pattern (lib/ident.ml[206,6438+44]..[206,6438+45])
                                                  Ppat_any
                                                pattern (lib/ident.ml[206,6438+46]..[206,6438+47])
                                                  Ppat_any
                                                pattern (lib/ident.ml[206,6438+48]..[206,6438+49])
                                                  Ppat_any
                                                pattern (lib/ident.ml[206,6438+50]..[206,6438+51])
                                                  Ppat_var "h" (lib/ident.ml[206,6438+50]..[206,6438+51])
                                              ]
                                        expression (lib/ident.ml[206,6438+56]..[206,6438+57])
                                          Pexp_ident "h" (lib/ident.ml[206,6438+56]..[206,6438+57])
                                    ]
                              ]
                          expression (lib/ident.ml[207,6500+8]..[207,6500+36])
                            Pexp_apply
                            expression (lib/ident.ml[207,6500+8]..[207,6500+14])
                              Pexp_ident "mknode" (lib/ident.ml[207,6500+8]..[207,6500+14])
                            [
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[207,6500+15]..[207,6500+30])
                                  Pexp_apply
                                  expression (lib/ident.ml[207,6500+16]..[207,6500+22])
                                    Pexp_ident "mknode" (lib/ident.ml[207,6500+16]..[207,6500+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[207,6500+23]..[207,6500+24])
                                        Pexp_ident "l" (lib/ident.ml[207,6500+23]..[207,6500+24])
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[207,6500+25]..[207,6500+26])
                                        Pexp_ident "d" (lib/ident.ml[207,6500+25]..[207,6500+26])
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[207,6500+27]..[207,6500+29])
                                        Pexp_ident "rl" (lib/ident.ml[207,6500+27]..[207,6500+29])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[207,6500+31]..[207,6500+33])
                                  Pexp_ident "rd" (lib/ident.ml[207,6500+31]..[207,6500+33])
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[207,6500+34]..[207,6500+36])
                                  Pexp_ident "rr" (lib/ident.ml[207,6500+34]..[207,6500+36])
                            ]
                        <case>
                          pattern (lib/ident.ml[208,6537+6]..[208,6537+47])
                            Ppat_construct "Node" (lib/ident.ml[208,6537+6]..[208,6537+10])
                            Some
                              []
                              pattern (lib/ident.ml[208,6537+11]..[208,6537+47])
                                Ppat_tuple
                                [
                                  pattern (lib/ident.ml[208,6537+12]..[208,6537+35])
                                    Ppat_construct "Node" (lib/ident.ml[208,6537+12]..[208,6537+16])
                                    Some
                                      []
                                      pattern (lib/ident.ml[208,6537+17]..[208,6537+35])
                                        Ppat_tuple
                                        [
                                          pattern (lib/ident.ml[208,6537+18]..[208,6537+21])
                                            Ppat_var "rll" (lib/ident.ml[208,6537+18]..[208,6537+21])
                                          pattern (lib/ident.ml[208,6537+23]..[208,6537+26])
                                            Ppat_var "rld" (lib/ident.ml[208,6537+23]..[208,6537+26])
                                          pattern (lib/ident.ml[208,6537+28]..[208,6537+31])
                                            Ppat_var "rlr" (lib/ident.ml[208,6537+28]..[208,6537+31])
                                          pattern (lib/ident.ml[208,6537+33]..[208,6537+34])
                                            Ppat_any
                                        ]
                                  pattern (lib/ident.ml[208,6537+37]..[208,6537+39])
                                    Ppat_var "rd" (lib/ident.ml[208,6537+37]..[208,6537+39])
                                  pattern (lib/ident.ml[208,6537+41]..[208,6537+43])
                                    Ppat_var "rr" (lib/ident.ml[208,6537+41]..[208,6537+43])
                                  pattern (lib/ident.ml[208,6537+45]..[208,6537+46])
                                    Ppat_any
                                ]
                          expression (lib/ident.ml[209,6588+8]..[209,6588+54])
                            Pexp_apply
                            expression (lib/ident.ml[209,6588+8]..[209,6588+14])
                              Pexp_ident "mknode" (lib/ident.ml[209,6588+8]..[209,6588+14])
                            [
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[209,6588+15]..[209,6588+31])
                                  Pexp_apply
                                  expression (lib/ident.ml[209,6588+16]..[209,6588+22])
                                    Pexp_ident "mknode" (lib/ident.ml[209,6588+16]..[209,6588+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[209,6588+23]..[209,6588+24])
                                        Pexp_ident "l" (lib/ident.ml[209,6588+23]..[209,6588+24])
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[209,6588+25]..[209,6588+26])
                                        Pexp_ident "d" (lib/ident.ml[209,6588+25]..[209,6588+26])
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[209,6588+27]..[209,6588+30])
                                        Pexp_ident "rll" (lib/ident.ml[209,6588+27]..[209,6588+30])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[209,6588+32]..[209,6588+35])
                                  Pexp_ident "rld" (lib/ident.ml[209,6588+32]..[209,6588+35])
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[209,6588+36]..[209,6588+54])
                                  Pexp_apply
                                  expression (lib/ident.ml[209,6588+37]..[209,6588+43])
                                    Pexp_ident "mknode" (lib/ident.ml[209,6588+37]..[209,6588+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[209,6588+44]..[209,6588+47])
                                        Pexp_ident "rlr" (lib/ident.ml[209,6588+44]..[209,6588+47])
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[209,6588+48]..[209,6588+50])
                                        Pexp_ident "rd" (lib/ident.ml[209,6588+48]..[209,6588+50])
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[209,6588+51]..[209,6588+53])
                                        Pexp_ident "rr" (lib/ident.ml[209,6588+51]..[209,6588+53])
                                  ]
                            ]
                        <case>
                          pattern (lib/ident.ml[210,6643+6]..[210,6643+7])
                            Ppat_any
                          expression (lib/ident.ml[210,6643+11]..[210,6643+23])
                            Pexp_assert
                            expression (lib/ident.ml[210,6643+18]..[210,6643+23])
                              Pexp_construct "false" (lib/ident.ml[210,6643+18]..[210,6643+23])
                              None
                      ]
                    Some
                      expression (lib/ident.ml[212,6674+4]..[212,6674+16])
                        Pexp_apply
                        expression (lib/ident.ml[212,6674+4]..[212,6674+10])
                          Pexp_ident "mknode" (lib/ident.ml[212,6674+4]..[212,6674+10])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[212,6674+11]..[212,6674+12])
                              Pexp_ident "l" (lib/ident.ml[212,6674+11]..[212,6674+12])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[212,6674+13]..[212,6674+14])
                              Pexp_ident "d" (lib/ident.ml[212,6674+13]..[212,6674+14])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[212,6674+15]..[212,6674+16])
                              Pexp_ident "r" (lib/ident.ml[212,6674+15]..[212,6674+16])
                        ]
    ]
  structure_item (lib/ident.ml[214,6692+0]..[224,7049+35])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[214,6692+8]..[214,6692+11])
          Ppat_var "add" (lib/ident.ml[214,6692+8]..[214,6692+11])
        expression (lib/ident.ml[214,6692+12]..[224,7049+35]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[214,6692+12]..[214,6692+14])
              Nolabel
              None
              pattern (lib/ident.ml[214,6692+12]..[214,6692+14])
                Ppat_var "id" (lib/ident.ml[214,6692+12]..[214,6692+14])
            Pparam_val (lib/ident.ml[214,6692+15]..[214,6692+19])
              Nolabel
              None
              pattern (lib/ident.ml[214,6692+15]..[214,6692+19])
                Ppat_var "data" (lib/ident.ml[214,6692+15]..[214,6692+19])
          ]
          None
          Pfunction_cases (lib/ident.ml[214,6692+22]..[224,7049+35])
            [
              <case>
                pattern (lib/ident.ml[215,6723+4]..[215,6723+9])
                  Ppat_construct "Empty" (lib/ident.ml[215,6723+4]..[215,6723+9])
                  None
                expression (lib/ident.ml[216,6736+6]..[216,6736+71])
                  Pexp_construct "Node" (lib/ident.ml[216,6736+6]..[216,6736+10])
                  Some
                    expression (lib/ident.ml[216,6736+10]..[216,6736+71])
                      Pexp_tuple
                      [
                        expression (lib/ident.ml[216,6736+11]..[216,6736+16])
                          Pexp_construct "Empty" (lib/ident.ml[216,6736+11]..[216,6736+16])
                          None
                        expression (lib/ident.ml[216,6736+18]..[216,6736+60])
                          Pexp_record
                          [
                            "ident" (lib/ident.ml[216,6736+19]..[216,6736+24])
                              expression (lib/ident.ml[216,6736+27]..[216,6736+29])
                                Pexp_ident "id" (lib/ident.ml[216,6736+27]..[216,6736+29])
                            "data" (lib/ident.ml[216,6736+31]..[216,6736+35])
                              expression (lib/ident.ml[216,6736+38]..[216,6736+42])
                                Pexp_ident "data" (lib/ident.ml[216,6736+38]..[216,6736+42])
                            "previous" (lib/ident.ml[216,6736+44]..[216,6736+52])
                              expression (lib/ident.ml[216,6736+55]..[216,6736+59])
                                Pexp_construct "None" (lib/ident.ml[216,6736+55]..[216,6736+59])
                                None
                          ]
                          None
                        expression (lib/ident.ml[216,6736+62]..[216,6736+67])
                          Pexp_construct "Empty" (lib/ident.ml[216,6736+62]..[216,6736+67])
                          None
                        expression (lib/ident.ml[216,6736+69]..[216,6736+70])
                          Pexp_constant PConst_int (1,None)
                      ]
              <case>
                pattern (lib/ident.ml[217,6808+4]..[217,6808+20])
                  Ppat_construct "Node" (lib/ident.ml[217,6808+4]..[217,6808+8])
                  Some
                    []
                    pattern (lib/ident.ml[217,6808+8]..[217,6808+20])
                      Ppat_tuple
                      [
                        pattern (lib/ident.ml[217,6808+9]..[217,6808+10])
                          Ppat_var "l" (lib/ident.ml[217,6808+9]..[217,6808+10])
                        pattern (lib/ident.ml[217,6808+12]..[217,6808+13])
                          Ppat_var "k" (lib/ident.ml[217,6808+12]..[217,6808+13])
                        pattern (lib/ident.ml[217,6808+15]..[217,6808+16])
                          Ppat_var "r" (lib/ident.ml[217,6808+15]..[217,6808+16])
                        pattern (lib/ident.ml[217,6808+18]..[217,6808+19])
                          Ppat_var "h" (lib/ident.ml[217,6808+18]..[217,6808+19])
                      ]
                expression (lib/ident.ml[218,6832+6]..[224,7049+35])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/ident.ml[218,6832+10]..[218,6832+11])
                        Ppat_var "c" (lib/ident.ml[218,6832+10]..[218,6832+11])
                      expression (lib/ident.ml[218,6832+14]..[218,6832+53])
                        Pexp_apply
                        expression (lib/ident.ml[218,6832+14]..[218,6832+28])
                          Pexp_ident "String.compare" (lib/ident.ml[218,6832+14]..[218,6832+28])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[218,6832+29]..[218,6832+38])
                              Pexp_apply
                              expression (lib/ident.ml[218,6832+30]..[218,6832+34])
                                Pexp_ident "name" (lib/ident.ml[218,6832+30]..[218,6832+34])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[218,6832+35]..[218,6832+37])
                                    Pexp_ident "id" (lib/ident.ml[218,6832+35]..[218,6832+37])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[218,6832+39]..[218,6832+53])
                              Pexp_apply
                              expression (lib/ident.ml[218,6832+40]..[218,6832+44])
                                Pexp_ident "name" (lib/ident.ml[218,6832+40]..[218,6832+44])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[218,6832+45]..[218,6832+52])
                                    Pexp_field
                                    expression (lib/ident.ml[218,6832+45]..[218,6832+46])
                                      Pexp_ident "k" (lib/ident.ml[218,6832+45]..[218,6832+46])
                                    "ident" (lib/ident.ml[218,6832+47]..[218,6832+52])
                              ]
                        ]
                  ]
                  expression (lib/ident.ml[219,6889+6]..[224,7049+35])
                    Pexp_ifthenelse
                    expression (lib/ident.ml[219,6889+9]..[219,6889+14])
                      Pexp_apply
                      expression (lib/ident.ml[219,6889+11]..[219,6889+12])
                        Pexp_ident "=" (lib/ident.ml[219,6889+11]..[219,6889+12])
                      [
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[219,6889+9]..[219,6889+10])
                            Pexp_ident "c" (lib/ident.ml[219,6889+9]..[219,6889+10])
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[219,6889+13]..[219,6889+14])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (lib/ident.ml[220,6909+8]..[220,6909+67])
                      Pexp_construct "Node" (lib/ident.ml[220,6909+8]..[220,6909+12])
                      Some
                        expression (lib/ident.ml[220,6909+12]..[220,6909+67])
                          Pexp_tuple
                          [
                            expression (lib/ident.ml[220,6909+13]..[220,6909+14])
                              Pexp_ident "l" (lib/ident.ml[220,6909+13]..[220,6909+14])
                            expression (lib/ident.ml[220,6909+16]..[220,6909+60])
                              Pexp_record
                              [
                                "ident" (lib/ident.ml[220,6909+17]..[220,6909+22])
                                  expression (lib/ident.ml[220,6909+25]..[220,6909+27])
                                    Pexp_ident "id" (lib/ident.ml[220,6909+25]..[220,6909+27])
                                "data" (lib/ident.ml[220,6909+29]..[220,6909+33])
                                  expression (lib/ident.ml[220,6909+36]..[220,6909+40])
                                    Pexp_ident "data" (lib/ident.ml[220,6909+36]..[220,6909+40])
                                "previous" (lib/ident.ml[220,6909+42]..[220,6909+50])
                                  expression (lib/ident.ml[220,6909+53]..[220,6909+59])
                                    Pexp_construct "Some" (lib/ident.ml[220,6909+53]..[220,6909+57])
                                    Some
                                      expression (lib/ident.ml[220,6909+58]..[220,6909+59])
                                        Pexp_ident "k" (lib/ident.ml[220,6909+58]..[220,6909+59])
                              ]
                              None
                            expression (lib/ident.ml[220,6909+62]..[220,6909+63])
                              Pexp_ident "r" (lib/ident.ml[220,6909+62]..[220,6909+63])
                            expression (lib/ident.ml[220,6909+65]..[220,6909+66])
                              Pexp_ident "h" (lib/ident.ml[220,6909+65]..[220,6909+66])
                          ]
                    Some
                      expression (lib/ident.ml[221,6977+11]..[224,7049+35])
                        Pexp_ifthenelse
                        expression (lib/ident.ml[221,6977+14]..[221,6977+19])
                          Pexp_apply
                          expression (lib/ident.ml[221,6977+16]..[221,6977+17])
                            Pexp_ident "<" (lib/ident.ml[221,6977+16]..[221,6977+17])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[221,6977+14]..[221,6977+15])
                                Pexp_ident "c" (lib/ident.ml[221,6977+14]..[221,6977+15])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[221,6977+18]..[221,6977+19])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (lib/ident.ml[222,7002+8]..[222,7002+35])
                          Pexp_apply
                          expression (lib/ident.ml[222,7002+8]..[222,7002+15])
                            Pexp_ident "balance" (lib/ident.ml[222,7002+8]..[222,7002+15])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[222,7002+16]..[222,7002+31])
                                Pexp_apply
                                expression (lib/ident.ml[222,7002+17]..[222,7002+20])
                                  Pexp_ident "add" (lib/ident.ml[222,7002+17]..[222,7002+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[222,7002+21]..[222,7002+23])
                                      Pexp_ident "id" (lib/ident.ml[222,7002+21]..[222,7002+23])
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[222,7002+24]..[222,7002+28])
                                      Pexp_ident "data" (lib/ident.ml[222,7002+24]..[222,7002+28])
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[222,7002+29]..[222,7002+30])
                                      Pexp_ident "l" (lib/ident.ml[222,7002+29]..[222,7002+30])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[222,7002+32]..[222,7002+33])
                                Pexp_ident "k" (lib/ident.ml[222,7002+32]..[222,7002+33])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[222,7002+34]..[222,7002+35])
                                Pexp_ident "r" (lib/ident.ml[222,7002+34]..[222,7002+35])
                          ]
                        Some
                          expression (lib/ident.ml[224,7049+8]..[224,7049+35])
                            Pexp_apply
                            expression (lib/ident.ml[224,7049+8]..[224,7049+15])
                              Pexp_ident "balance" (lib/ident.ml[224,7049+8]..[224,7049+15])
                            [
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[224,7049+16]..[224,7049+17])
                                  Pexp_ident "l" (lib/ident.ml[224,7049+16]..[224,7049+17])
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[224,7049+18]..[224,7049+19])
                                  Pexp_ident "k" (lib/ident.ml[224,7049+18]..[224,7049+19])
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[224,7049+20]..[224,7049+35])
                                  Pexp_apply
                                  expression (lib/ident.ml[224,7049+21]..[224,7049+24])
                                    Pexp_ident "add" (lib/ident.ml[224,7049+21]..[224,7049+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[224,7049+25]..[224,7049+27])
                                        Pexp_ident "id" (lib/ident.ml[224,7049+25]..[224,7049+27])
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[224,7049+28]..[224,7049+32])
                                        Pexp_ident "data" (lib/ident.ml[224,7049+28]..[224,7049+32])
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[224,7049+33]..[224,7049+34])
                                        Pexp_ident "r" (lib/ident.ml[224,7049+33]..[224,7049+34])
                                  ]
                            ]
            ]
    ]
  structure_item (lib/ident.ml[226,7086+0]..[229,7177+38])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[226,7086+8]..[226,7086+19])
          Ppat_var "min_binding" (lib/ident.ml[226,7086+8]..[226,7086+19])
        expression (lib/ident.ml[226,7086+22]..[229,7177+38])
          Pexp_function
          []
          None
          Pfunction_cases (lib/ident.ml[226,7086+22]..[229,7177+38])
            [
              <case>
                pattern (lib/ident.ml[227,7117+4]..[227,7117+9])
                  Ppat_construct "Empty" (lib/ident.ml[227,7117+4]..[227,7117+9])
                  None
                expression (lib/ident.ml[227,7117+13]..[227,7117+28])
                  Pexp_apply
                  expression (lib/ident.ml[227,7117+13]..[227,7117+18])
                    Pexp_ident "raise" (lib/ident.ml[227,7117+13]..[227,7117+18])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[227,7117+19]..[227,7117+28])
                        Pexp_construct "Not_found" (lib/ident.ml[227,7117+19]..[227,7117+28])
                        None
                  ]
              <case>
                pattern (lib/ident.ml[228,7146+4]..[228,7146+25])
                  Ppat_construct "Node" (lib/ident.ml[228,7146+4]..[228,7146+8])
                  Some
                    []
                    pattern (lib/ident.ml[228,7146+9]..[228,7146+25])
                      Ppat_tuple
                      [
                        pattern (lib/ident.ml[228,7146+10]..[228,7146+15])
                          Ppat_construct "Empty" (lib/ident.ml[228,7146+10]..[228,7146+15])
                          None
                        pattern (lib/ident.ml[228,7146+17]..[228,7146+18])
                          Ppat_var "d" (lib/ident.ml[228,7146+17]..[228,7146+18])
                        pattern (lib/ident.ml[228,7146+20]..[228,7146+21])
                          Ppat_any
                        pattern (lib/ident.ml[228,7146+23]..[228,7146+24])
                          Ppat_any
                      ]
                expression (lib/ident.ml[228,7146+29]..[228,7146+30])
                  Pexp_ident "d" (lib/ident.ml[228,7146+29]..[228,7146+30])
              <case>
                pattern (lib/ident.ml[229,7177+4]..[229,7177+21])
                  Ppat_construct "Node" (lib/ident.ml[229,7177+4]..[229,7177+8])
                  Some
                    []
                    pattern (lib/ident.ml[229,7177+9]..[229,7177+21])
                      Ppat_tuple
                      [
                        pattern (lib/ident.ml[229,7177+10]..[229,7177+11])
                          Ppat_var "l" (lib/ident.ml[229,7177+10]..[229,7177+11])
                        pattern (lib/ident.ml[229,7177+13]..[229,7177+14])
                          Ppat_any
                        pattern (lib/ident.ml[229,7177+16]..[229,7177+17])
                          Ppat_any
                        pattern (lib/ident.ml[229,7177+19]..[229,7177+20])
                          Ppat_any
                      ]
                expression (lib/ident.ml[229,7177+25]..[229,7177+38])
                  Pexp_apply
                  expression (lib/ident.ml[229,7177+25]..[229,7177+36])
                    Pexp_ident "min_binding" (lib/ident.ml[229,7177+25]..[229,7177+36])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[229,7177+37]..[229,7177+38])
                        Pexp_ident "l" (lib/ident.ml[229,7177+37]..[229,7177+38])
                  ]
            ]
    ]
  structure_item (lib/ident.ml[231,7217+0]..[234,7332+59])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[231,7217+8]..[231,7217+26])
          Ppat_var "remove_min_binding" (lib/ident.ml[231,7217+8]..[231,7217+26])
        expression (lib/ident.ml[231,7217+29]..[234,7332+59])
          Pexp_function
          []
          None
          Pfunction_cases (lib/ident.ml[231,7217+29]..[234,7332+59])
            [
              <case>
                pattern (lib/ident.ml[232,7255+4]..[232,7255+9])
                  Ppat_construct "Empty" (lib/ident.ml[232,7255+4]..[232,7255+9])
                  None
                expression (lib/ident.ml[232,7255+13]..[232,7255+45])
                  Pexp_apply
                  expression (lib/ident.ml[232,7255+13]..[232,7255+24])
                    Pexp_ident "invalid_arg" (lib/ident.ml[232,7255+13]..[232,7255+24])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[232,7255+25]..[232,7255+45])
                        Pexp_constant PConst_string("Map.remove_min_elt",(lib/ident.ml[232,7255+26]..[232,7255+44]),None)
                  ]
              <case>
                pattern (lib/ident.ml[233,7301+4]..[233,7301+25])
                  Ppat_construct "Node" (lib/ident.ml[233,7301+4]..[233,7301+8])
                  Some
                    []
                    pattern (lib/ident.ml[233,7301+9]..[233,7301+25])
                      Ppat_tuple
                      [
                        pattern (lib/ident.ml[233,7301+10]..[233,7301+15])
                          Ppat_construct "Empty" (lib/ident.ml[233,7301+10]..[233,7301+15])
                          None
                        pattern (lib/ident.ml[233,7301+17]..[233,7301+18])
                          Ppat_any
                        pattern (lib/ident.ml[233,7301+20]..[233,7301+21])
                          Ppat_var "r" (lib/ident.ml[233,7301+20]..[233,7301+21])
                        pattern (lib/ident.ml[233,7301+23]..[233,7301+24])
                          Ppat_any
                      ]
                expression (lib/ident.ml[233,7301+29]..[233,7301+30])
                  Pexp_ident "r" (lib/ident.ml[233,7301+29]..[233,7301+30])
              <case>
                pattern (lib/ident.ml[234,7332+4]..[234,7332+21])
                  Ppat_construct "Node" (lib/ident.ml[234,7332+4]..[234,7332+8])
                  Some
                    []
                    pattern (lib/ident.ml[234,7332+9]..[234,7332+21])
                      Ppat_tuple
                      [
                        pattern (lib/ident.ml[234,7332+10]..[234,7332+11])
                          Ppat_var "l" (lib/ident.ml[234,7332+10]..[234,7332+11])
                        pattern (lib/ident.ml[234,7332+13]..[234,7332+14])
                          Ppat_var "d" (lib/ident.ml[234,7332+13]..[234,7332+14])
                        pattern (lib/ident.ml[234,7332+16]..[234,7332+17])
                          Ppat_var "r" (lib/ident.ml[234,7332+16]..[234,7332+17])
                        pattern (lib/ident.ml[234,7332+19]..[234,7332+20])
                          Ppat_any
                      ]
                expression (lib/ident.ml[234,7332+25]..[234,7332+59])
                  Pexp_apply
                  expression (lib/ident.ml[234,7332+25]..[234,7332+32])
                    Pexp_ident "balance" (lib/ident.ml[234,7332+25]..[234,7332+32])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[234,7332+33]..[234,7332+55])
                        Pexp_apply
                        expression (lib/ident.ml[234,7332+34]..[234,7332+52])
                          Pexp_ident "remove_min_binding" (lib/ident.ml[234,7332+34]..[234,7332+52])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[234,7332+53]..[234,7332+54])
                              Pexp_ident "l" (lib/ident.ml[234,7332+53]..[234,7332+54])
                        ]
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[234,7332+56]..[234,7332+57])
                        Pexp_ident "d" (lib/ident.ml[234,7332+56]..[234,7332+57])
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[234,7332+58]..[234,7332+59])
                        Pexp_ident "r" (lib/ident.ml[234,7332+58]..[234,7332+59])
                  ]
            ]
    ]
  structure_item (lib/ident.ml[236,7393+0]..[242,7519+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[236,7393+4]..[236,7393+9])
          Ppat_var "merge" (lib/ident.ml[236,7393+4]..[236,7393+9])
        expression (lib/ident.ml[236,7393+10]..[242,7519+42]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[236,7393+10]..[236,7393+12])
              Nolabel
              None
              pattern (lib/ident.ml[236,7393+10]..[236,7393+12])
                Ppat_var "t1" (lib/ident.ml[236,7393+10]..[236,7393+12])
            Pparam_val (lib/ident.ml[236,7393+13]..[236,7393+15])
              Nolabel
              None
              pattern (lib/ident.ml[236,7393+13]..[236,7393+15])
                Ppat_var "t2" (lib/ident.ml[236,7393+13]..[236,7393+15])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[237,7411+2]..[242,7519+42])
              Pexp_match
              expression (lib/ident.ml[237,7411+8]..[237,7411+16])
                Pexp_tuple
                [
                  expression (lib/ident.ml[237,7411+9]..[237,7411+11])
                    Pexp_ident "t1" (lib/ident.ml[237,7411+9]..[237,7411+11])
                  expression (lib/ident.ml[237,7411+13]..[237,7411+15])
                    Pexp_ident "t2" (lib/ident.ml[237,7411+13]..[237,7411+15])
                ]
              [
                <case>
                  pattern (lib/ident.ml[238,7433+4]..[238,7433+14])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[238,7433+5]..[238,7433+10])
                        Ppat_construct "Empty" (lib/ident.ml[238,7433+5]..[238,7433+10])
                        None
                      pattern (lib/ident.ml[238,7433+12]..[238,7433+13])
                        Ppat_var "t" (lib/ident.ml[238,7433+12]..[238,7433+13])
                    ]
                  expression (lib/ident.ml[238,7433+18]..[238,7433+19])
                    Pexp_ident "t" (lib/ident.ml[238,7433+18]..[238,7433+19])
                <case>
                  pattern (lib/ident.ml[239,7453+4]..[239,7453+14])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[239,7453+5]..[239,7453+6])
                        Ppat_var "t" (lib/ident.ml[239,7453+5]..[239,7453+6])
                      pattern (lib/ident.ml[239,7453+8]..[239,7453+13])
                        Ppat_construct "Empty" (lib/ident.ml[239,7453+8]..[239,7453+13])
                        None
                    ]
                  expression (lib/ident.ml[239,7453+18]..[239,7453+19])
                    Pexp_ident "t" (lib/ident.ml[239,7453+18]..[239,7453+19])
                <case>
                  pattern (lib/ident.ml[240,7473+4]..[240,7473+10])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[240,7473+5]..[240,7473+6])
                        Ppat_any
                      pattern (lib/ident.ml[240,7473+8]..[240,7473+9])
                        Ppat_any
                    ]
                  expression (lib/ident.ml[241,7487+6]..[242,7519+42])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/ident.ml[241,7487+10]..[241,7487+11])
                          Ppat_var "d" (lib/ident.ml[241,7487+10]..[241,7487+11])
                        expression (lib/ident.ml[241,7487+14]..[241,7487+28])
                          Pexp_apply
                          expression (lib/ident.ml[241,7487+14]..[241,7487+25])
                            Pexp_ident "min_binding" (lib/ident.ml[241,7487+14]..[241,7487+25])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[241,7487+26]..[241,7487+28])
                                Pexp_ident "t2" (lib/ident.ml[241,7487+26]..[241,7487+28])
                          ]
                    ]
                    expression (lib/ident.ml[242,7519+6]..[242,7519+42])
                      Pexp_apply
                      expression (lib/ident.ml[242,7519+6]..[242,7519+13])
                        Pexp_ident "balance" (lib/ident.ml[242,7519+6]..[242,7519+13])
                      [
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[242,7519+14]..[242,7519+16])
                            Pexp_ident "t1" (lib/ident.ml[242,7519+14]..[242,7519+16])
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[242,7519+17]..[242,7519+18])
                            Pexp_ident "d" (lib/ident.ml[242,7519+17]..[242,7519+18])
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[242,7519+19]..[242,7519+42])
                            Pexp_apply
                            expression (lib/ident.ml[242,7519+20]..[242,7519+38])
                              Pexp_ident "remove_min_binding" (lib/ident.ml[242,7519+20]..[242,7519+38])
                            [
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[242,7519+39]..[242,7519+41])
                                  Pexp_ident "t2" (lib/ident.ml[242,7519+39]..[242,7519+41])
                            ]
                      ]
              ]
    ]
  structure_item (lib/ident.ml[244,7563+0]..[256,7928+69])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[244,7563+8]..[244,7563+14])
          Ppat_var "remove" (lib/ident.ml[244,7563+8]..[244,7563+14])
        expression (lib/ident.ml[244,7563+15]..[256,7928+69]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[244,7563+15]..[244,7563+17])
              Nolabel
              None
              pattern (lib/ident.ml[244,7563+15]..[244,7563+17])
                Ppat_var "id" (lib/ident.ml[244,7563+15]..[244,7563+17])
          ]
          None
          Pfunction_cases (lib/ident.ml[244,7563+20]..[256,7928+69])
            [
              <case>
                pattern (lib/ident.ml[245,7592+4]..[245,7592+9])
                  Ppat_construct "Empty" (lib/ident.ml[245,7592+4]..[245,7592+9])
                  None
                expression (lib/ident.ml[246,7605+6]..[246,7605+11])
                  Pexp_construct "Empty" (lib/ident.ml[246,7605+6]..[246,7605+11])
                  None
              <case>
                pattern (lib/ident.ml[247,7617+4]..[247,7617+28])
                  Ppat_alias "m" (lib/ident.ml[247,7617+26]..[247,7617+27])
                  pattern (lib/ident.ml[247,7617+5]..[247,7617+22])
                    Ppat_construct "Node" (lib/ident.ml[247,7617+5]..[247,7617+9])
                    Some
                      []
                      pattern (lib/ident.ml[247,7617+10]..[247,7617+22])
                        Ppat_tuple
                        [
                          pattern (lib/ident.ml[247,7617+11]..[247,7617+12])
                            Ppat_var "l" (lib/ident.ml[247,7617+11]..[247,7617+12])
                          pattern (lib/ident.ml[247,7617+14]..[247,7617+15])
                            Ppat_var "k" (lib/ident.ml[247,7617+14]..[247,7617+15])
                          pattern (lib/ident.ml[247,7617+17]..[247,7617+18])
                            Ppat_var "r" (lib/ident.ml[247,7617+17]..[247,7617+18])
                          pattern (lib/ident.ml[247,7617+20]..[247,7617+21])
                            Ppat_var "h" (lib/ident.ml[247,7617+20]..[247,7617+21])
                        ]
                expression (lib/ident.ml[248,7649+6]..[256,7928+69])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/ident.ml[248,7649+10]..[248,7649+11])
                        Ppat_var "c" (lib/ident.ml[248,7649+10]..[248,7649+11])
                      expression (lib/ident.ml[248,7649+14]..[248,7649+53])
                        Pexp_apply
                        expression (lib/ident.ml[248,7649+14]..[248,7649+28])
                          Pexp_ident "String.compare" (lib/ident.ml[248,7649+14]..[248,7649+28])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[248,7649+29]..[248,7649+38])
                              Pexp_apply
                              expression (lib/ident.ml[248,7649+30]..[248,7649+34])
                                Pexp_ident "name" (lib/ident.ml[248,7649+30]..[248,7649+34])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[248,7649+35]..[248,7649+37])
                                    Pexp_ident "id" (lib/ident.ml[248,7649+35]..[248,7649+37])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[248,7649+39]..[248,7649+53])
                              Pexp_apply
                              expression (lib/ident.ml[248,7649+40]..[248,7649+44])
                                Pexp_ident "name" (lib/ident.ml[248,7649+40]..[248,7649+44])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[248,7649+45]..[248,7649+52])
                                    Pexp_field
                                    expression (lib/ident.ml[248,7649+45]..[248,7649+46])
                                      Pexp_ident "k" (lib/ident.ml[248,7649+45]..[248,7649+46])
                                    "ident" (lib/ident.ml[248,7649+47]..[248,7649+52])
                              ]
                        ]
                  ]
                  expression (lib/ident.ml[249,7706+6]..[256,7928+69])
                    Pexp_ifthenelse
                    expression (lib/ident.ml[249,7706+9]..[249,7706+14])
                      Pexp_apply
                      expression (lib/ident.ml[249,7706+11]..[249,7706+12])
                        Pexp_ident "=" (lib/ident.ml[249,7706+11]..[249,7706+12])
                      [
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[249,7706+9]..[249,7706+10])
                            Pexp_ident "c" (lib/ident.ml[249,7706+9]..[249,7706+10])
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[249,7706+13]..[249,7706+14])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (lib/ident.ml[250,7726+8]..[252,7784+37])
                      Pexp_match
                      expression (lib/ident.ml[250,7726+14]..[250,7726+24])
                        Pexp_field
                        expression (lib/ident.ml[250,7726+14]..[250,7726+15])
                          Pexp_ident "k" (lib/ident.ml[250,7726+14]..[250,7726+15])
                        "previous" (lib/ident.ml[250,7726+16]..[250,7726+24])
                      [
                        <case>
                          pattern (lib/ident.ml[251,7756+10]..[251,7756+14])
                            Ppat_construct "None" (lib/ident.ml[251,7756+10]..[251,7756+14])
                            None
                          expression (lib/ident.ml[251,7756+18]..[251,7756+27])
                            Pexp_apply
                            expression (lib/ident.ml[251,7756+18]..[251,7756+23])
                              Pexp_ident "merge" (lib/ident.ml[251,7756+18]..[251,7756+23])
                            [
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[251,7756+24]..[251,7756+25])
                                  Pexp_ident "l" (lib/ident.ml[251,7756+24]..[251,7756+25])
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[251,7756+26]..[251,7756+27])
                                  Pexp_ident "r" (lib/ident.ml[251,7756+26]..[251,7756+27])
                            ]
                        <case>
                          pattern (lib/ident.ml[252,7784+10]..[252,7784+16])
                            Ppat_construct "Some" (lib/ident.ml[252,7784+10]..[252,7784+14])
                            Some
                              []
                              pattern (lib/ident.ml[252,7784+15]..[252,7784+16])
                                Ppat_var "k" (lib/ident.ml[252,7784+15]..[252,7784+16])
                          expression (lib/ident.ml[252,7784+20]..[252,7784+37])
                            Pexp_construct "Node" (lib/ident.ml[252,7784+20]..[252,7784+24])
                            Some
                              expression (lib/ident.ml[252,7784+25]..[252,7784+37])
                                Pexp_tuple
                                [
                                  expression (lib/ident.ml[252,7784+26]..[252,7784+27])
                                    Pexp_ident "l" (lib/ident.ml[252,7784+26]..[252,7784+27])
                                  expression (lib/ident.ml[252,7784+29]..[252,7784+30])
                                    Pexp_ident "k" (lib/ident.ml[252,7784+29]..[252,7784+30])
                                  expression (lib/ident.ml[252,7784+32]..[252,7784+33])
                                    Pexp_ident "r" (lib/ident.ml[252,7784+32]..[252,7784+33])
                                  expression (lib/ident.ml[252,7784+35]..[252,7784+36])
                                    Pexp_ident "h" (lib/ident.ml[252,7784+35]..[252,7784+36])
                                ]
                      ]
                    Some
                      expression (lib/ident.ml[253,7822+11]..[256,7928+69])
                        Pexp_ifthenelse
                        expression (lib/ident.ml[253,7822+14]..[253,7822+19])
                          Pexp_apply
                          expression (lib/ident.ml[253,7822+16]..[253,7822+17])
                            Pexp_ident "<" (lib/ident.ml[253,7822+16]..[253,7822+17])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[253,7822+14]..[253,7822+15])
                                Pexp_ident "c" (lib/ident.ml[253,7822+14]..[253,7822+15])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[253,7822+18]..[253,7822+19])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (lib/ident.ml[254,7847+8]..[254,7847+69])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/ident.ml[254,7847+12]..[254,7847+14])
                                Ppat_var "ll" (lib/ident.ml[254,7847+12]..[254,7847+14])
                              expression (lib/ident.ml[254,7847+17]..[254,7847+28])
                                Pexp_apply
                                expression (lib/ident.ml[254,7847+17]..[254,7847+23])
                                  Pexp_ident "remove" (lib/ident.ml[254,7847+17]..[254,7847+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[254,7847+24]..[254,7847+26])
                                      Pexp_ident "id" (lib/ident.ml[254,7847+24]..[254,7847+26])
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[254,7847+27]..[254,7847+28])
                                      Pexp_ident "l" (lib/ident.ml[254,7847+27]..[254,7847+28])
                                ]
                          ]
                          expression (lib/ident.ml[254,7847+32]..[254,7847+69])
                            Pexp_ifthenelse
                            expression (lib/ident.ml[254,7847+35]..[254,7847+42])
                              Pexp_apply
                              expression (lib/ident.ml[254,7847+37]..[254,7847+39])
                                Pexp_ident "==" (lib/ident.ml[254,7847+37]..[254,7847+39])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[254,7847+35]..[254,7847+36])
                                    Pexp_ident "l" (lib/ident.ml[254,7847+35]..[254,7847+36])
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[254,7847+40]..[254,7847+42])
                                    Pexp_ident "ll" (lib/ident.ml[254,7847+40]..[254,7847+42])
                              ]
                            expression (lib/ident.ml[254,7847+48]..[254,7847+49])
                              Pexp_ident "m" (lib/ident.ml[254,7847+48]..[254,7847+49])
                            Some
                              expression (lib/ident.ml[254,7847+55]..[254,7847+69])
                                Pexp_apply
                                expression (lib/ident.ml[254,7847+55]..[254,7847+62])
                                  Pexp_ident "balance" (lib/ident.ml[254,7847+55]..[254,7847+62])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[254,7847+63]..[254,7847+65])
                                      Pexp_ident "ll" (lib/ident.ml[254,7847+63]..[254,7847+65])
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[254,7847+66]..[254,7847+67])
                                      Pexp_ident "k" (lib/ident.ml[254,7847+66]..[254,7847+67])
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[254,7847+68]..[254,7847+69])
                                      Pexp_ident "r" (lib/ident.ml[254,7847+68]..[254,7847+69])
                                ]
                        Some
                          expression (lib/ident.ml[256,7928+8]..[256,7928+69])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/ident.ml[256,7928+12]..[256,7928+14])
                                  Ppat_var "rr" (lib/ident.ml[256,7928+12]..[256,7928+14])
                                expression (lib/ident.ml[256,7928+17]..[256,7928+28])
                                  Pexp_apply
                                  expression (lib/ident.ml[256,7928+17]..[256,7928+23])
                                    Pexp_ident "remove" (lib/ident.ml[256,7928+17]..[256,7928+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[256,7928+24]..[256,7928+26])
                                        Pexp_ident "id" (lib/ident.ml[256,7928+24]..[256,7928+26])
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[256,7928+27]..[256,7928+28])
                                        Pexp_ident "r" (lib/ident.ml[256,7928+27]..[256,7928+28])
                                  ]
                            ]
                            expression (lib/ident.ml[256,7928+32]..[256,7928+69])
                              Pexp_ifthenelse
                              expression (lib/ident.ml[256,7928+35]..[256,7928+42])
                                Pexp_apply
                                expression (lib/ident.ml[256,7928+37]..[256,7928+39])
                                  Pexp_ident "==" (lib/ident.ml[256,7928+37]..[256,7928+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[256,7928+35]..[256,7928+36])
                                      Pexp_ident "r" (lib/ident.ml[256,7928+35]..[256,7928+36])
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[256,7928+40]..[256,7928+42])
                                      Pexp_ident "rr" (lib/ident.ml[256,7928+40]..[256,7928+42])
                                ]
                              expression (lib/ident.ml[256,7928+48]..[256,7928+49])
                                Pexp_ident "m" (lib/ident.ml[256,7928+48]..[256,7928+49])
                              Some
                                expression (lib/ident.ml[256,7928+55]..[256,7928+69])
                                  Pexp_apply
                                  expression (lib/ident.ml[256,7928+55]..[256,7928+62])
                                    Pexp_ident "balance" (lib/ident.ml[256,7928+55]..[256,7928+62])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[256,7928+63]..[256,7928+64])
                                        Pexp_ident "l" (lib/ident.ml[256,7928+63]..[256,7928+64])
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[256,7928+65]..[256,7928+66])
                                        Pexp_ident "k" (lib/ident.ml[256,7928+65]..[256,7928+66])
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[256,7928+67]..[256,7928+69])
                                        Pexp_ident "rr" (lib/ident.ml[256,7928+67]..[256,7928+69])
                                  ]
            ]
    ]
  structure_item (lib/ident.ml[258,7999+0]..[262,8083+69])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[258,7999+8]..[258,7999+21])
          Ppat_var "find_previous" (lib/ident.ml[258,7999+8]..[258,7999+21])
        expression (lib/ident.ml[258,7999+22]..[262,8083+69]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[258,7999+22]..[258,7999+24])
              Nolabel
              None
              pattern (lib/ident.ml[258,7999+22]..[258,7999+24])
                Ppat_var "id" (lib/ident.ml[258,7999+22]..[258,7999+24])
          ]
          None
          Pfunction_cases (lib/ident.ml[258,7999+27]..[262,8083+69])
            [
              <case>
                pattern (lib/ident.ml[259,8035+4]..[259,8035+8])
                  Ppat_construct "None" (lib/ident.ml[259,8035+4]..[259,8035+8])
                  None
                expression (lib/ident.ml[260,8047+6]..[260,8047+21])
                  Pexp_apply
                  expression (lib/ident.ml[260,8047+6]..[260,8047+11])
                    Pexp_ident "raise" (lib/ident.ml[260,8047+6]..[260,8047+11])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[260,8047+12]..[260,8047+21])
                        Pexp_construct "Not_found" (lib/ident.ml[260,8047+12]..[260,8047+21])
                        None
                  ]
              <case>
                pattern (lib/ident.ml[261,8069+4]..[261,8069+10])
                  Ppat_construct "Some" (lib/ident.ml[261,8069+4]..[261,8069+8])
                  Some
                    []
                    pattern (lib/ident.ml[261,8069+9]..[261,8069+10])
                      Ppat_var "k" (lib/ident.ml[261,8069+9]..[261,8069+10])
                expression (lib/ident.ml[262,8083+6]..[262,8083+69])
                  Pexp_ifthenelse
                  expression (lib/ident.ml[262,8083+9]..[262,8083+24])
                    Pexp_apply
                    expression (lib/ident.ml[262,8083+9]..[262,8083+13])
                      Pexp_ident "same" (lib/ident.ml[262,8083+9]..[262,8083+13])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[262,8083+14]..[262,8083+16])
                          Pexp_ident "id" (lib/ident.ml[262,8083+14]..[262,8083+16])
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[262,8083+17]..[262,8083+24])
                          Pexp_field
                          expression (lib/ident.ml[262,8083+17]..[262,8083+18])
                            Pexp_ident "k" (lib/ident.ml[262,8083+17]..[262,8083+18])
                          "ident" (lib/ident.ml[262,8083+19]..[262,8083+24])
                    ]
                  expression (lib/ident.ml[262,8083+30]..[262,8083+36])
                    Pexp_field
                    expression (lib/ident.ml[262,8083+30]..[262,8083+31])
                      Pexp_ident "k" (lib/ident.ml[262,8083+30]..[262,8083+31])
                    "data" (lib/ident.ml[262,8083+32]..[262,8083+36])
                  Some
                    expression (lib/ident.ml[262,8083+42]..[262,8083+69])
                      Pexp_apply
                      expression (lib/ident.ml[262,8083+42]..[262,8083+55])
                        Pexp_ident "find_previous" (lib/ident.ml[262,8083+42]..[262,8083+55])
                      [
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[262,8083+56]..[262,8083+58])
                            Pexp_ident "id" (lib/ident.ml[262,8083+56]..[262,8083+58])
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[262,8083+59]..[262,8083+69])
                            Pexp_field
                            expression (lib/ident.ml[262,8083+59]..[262,8083+60])
                              Pexp_ident "k" (lib/ident.ml[262,8083+59]..[262,8083+60])
                            "previous" (lib/ident.ml[262,8083+61]..[262,8083+69])
                      ]
            ]
    ]
  structure_item (lib/ident.ml[264,8154+0]..[274,8421+45])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[264,8154+8]..[264,8154+17])
          Ppat_var "find_same" (lib/ident.ml[264,8154+8]..[264,8154+17])
        expression (lib/ident.ml[264,8154+18]..[274,8421+45]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[264,8154+18]..[264,8154+20])
              Nolabel
              None
              pattern (lib/ident.ml[264,8154+18]..[264,8154+20])
                Ppat_var "id" (lib/ident.ml[264,8154+18]..[264,8154+20])
          ]
          None
          Pfunction_cases (lib/ident.ml[264,8154+23]..[274,8421+45])
            [
              <case>
                pattern (lib/ident.ml[265,8186+4]..[265,8186+9])
                  Ppat_construct "Empty" (lib/ident.ml[265,8186+4]..[265,8186+9])
                  None
                expression (lib/ident.ml[266,8199+6]..[266,8199+21])
                  Pexp_apply
                  expression (lib/ident.ml[266,8199+6]..[266,8199+11])
                    Pexp_ident "raise" (lib/ident.ml[266,8199+6]..[266,8199+11])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[266,8199+12]..[266,8199+21])
                        Pexp_construct "Not_found" (lib/ident.ml[266,8199+12]..[266,8199+21])
                        None
                  ]
              <case>
                pattern (lib/ident.ml[267,8221+4]..[267,8221+20])
                  Ppat_construct "Node" (lib/ident.ml[267,8221+4]..[267,8221+8])
                  Some
                    []
                    pattern (lib/ident.ml[267,8221+8]..[267,8221+20])
                      Ppat_tuple
                      [
                        pattern (lib/ident.ml[267,8221+9]..[267,8221+10])
                          Ppat_var "l" (lib/ident.ml[267,8221+9]..[267,8221+10])
                        pattern (lib/ident.ml[267,8221+12]..[267,8221+13])
                          Ppat_var "k" (lib/ident.ml[267,8221+12]..[267,8221+13])
                        pattern (lib/ident.ml[267,8221+15]..[267,8221+16])
                          Ppat_var "r" (lib/ident.ml[267,8221+15]..[267,8221+16])
                        pattern (lib/ident.ml[267,8221+18]..[267,8221+19])
                          Ppat_any
                      ]
                expression (lib/ident.ml[268,8245+6]..[274,8421+45])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/ident.ml[268,8245+10]..[268,8245+11])
                        Ppat_var "c" (lib/ident.ml[268,8245+10]..[268,8245+11])
                      expression (lib/ident.ml[268,8245+14]..[268,8245+53])
                        Pexp_apply
                        expression (lib/ident.ml[268,8245+14]..[268,8245+28])
                          Pexp_ident "String.compare" (lib/ident.ml[268,8245+14]..[268,8245+28])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[268,8245+29]..[268,8245+38])
                              Pexp_apply
                              expression (lib/ident.ml[268,8245+30]..[268,8245+34])
                                Pexp_ident "name" (lib/ident.ml[268,8245+30]..[268,8245+34])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[268,8245+35]..[268,8245+37])
                                    Pexp_ident "id" (lib/ident.ml[268,8245+35]..[268,8245+37])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[268,8245+39]..[268,8245+53])
                              Pexp_apply
                              expression (lib/ident.ml[268,8245+40]..[268,8245+44])
                                Pexp_ident "name" (lib/ident.ml[268,8245+40]..[268,8245+44])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[268,8245+45]..[268,8245+52])
                                    Pexp_field
                                    expression (lib/ident.ml[268,8245+45]..[268,8245+46])
                                      Pexp_ident "k" (lib/ident.ml[268,8245+45]..[268,8245+46])
                                    "ident" (lib/ident.ml[268,8245+47]..[268,8245+52])
                              ]
                        ]
                  ]
                  expression (lib/ident.ml[269,8302+6]..[274,8421+45])
                    Pexp_ifthenelse
                    expression (lib/ident.ml[269,8302+9]..[269,8302+14])
                      Pexp_apply
                      expression (lib/ident.ml[269,8302+11]..[269,8302+12])
                        Pexp_ident "=" (lib/ident.ml[269,8302+11]..[269,8302+12])
                      [
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[269,8302+9]..[269,8302+10])
                            Pexp_ident "c" (lib/ident.ml[269,8302+9]..[269,8302+10])
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[269,8302+13]..[269,8302+14])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (lib/ident.ml[270,8322+8]..[272,8369+40])
                      Pexp_ifthenelse
                      expression (lib/ident.ml[270,8322+11]..[270,8322+26])
                        Pexp_apply
                        expression (lib/ident.ml[270,8322+11]..[270,8322+15])
                          Pexp_ident "same" (lib/ident.ml[270,8322+11]..[270,8322+15])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[270,8322+16]..[270,8322+18])
                              Pexp_ident "id" (lib/ident.ml[270,8322+16]..[270,8322+18])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[270,8322+19]..[270,8322+26])
                              Pexp_field
                              expression (lib/ident.ml[270,8322+19]..[270,8322+20])
                                Pexp_ident "k" (lib/ident.ml[270,8322+19]..[270,8322+20])
                              "ident" (lib/ident.ml[270,8322+21]..[270,8322+26])
                        ]
                      expression (lib/ident.ml[271,8349+13]..[271,8349+19])
                        Pexp_field
                        expression (lib/ident.ml[271,8349+13]..[271,8349+14])
                          Pexp_ident "k" (lib/ident.ml[271,8349+13]..[271,8349+14])
                        "data" (lib/ident.ml[271,8349+15]..[271,8349+19])
                      Some
                        expression (lib/ident.ml[272,8369+13]..[272,8369+40])
                          Pexp_apply
                          expression (lib/ident.ml[272,8369+13]..[272,8369+26])
                            Pexp_ident "find_previous" (lib/ident.ml[272,8369+13]..[272,8369+26])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[272,8369+27]..[272,8369+29])
                                Pexp_ident "id" (lib/ident.ml[272,8369+27]..[272,8369+29])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[272,8369+30]..[272,8369+40])
                                Pexp_field
                                expression (lib/ident.ml[272,8369+30]..[272,8369+31])
                                  Pexp_ident "k" (lib/ident.ml[272,8369+30]..[272,8369+31])
                                "previous" (lib/ident.ml[272,8369+32]..[272,8369+40])
                          ]
                    Some
                      expression (lib/ident.ml[274,8421+8]..[274,8421+45])
                        Pexp_apply
                        expression (lib/ident.ml[274,8421+8]..[274,8421+17])
                          Pexp_ident "find_same" (lib/ident.ml[274,8421+8]..[274,8421+17])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[274,8421+18]..[274,8421+20])
                              Pexp_ident "id" (lib/ident.ml[274,8421+18]..[274,8421+20])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[274,8421+21]..[274,8421+45])
                              Pexp_ifthenelse
                              expression (lib/ident.ml[274,8421+25]..[274,8421+30])
                                Pexp_apply
                                expression (lib/ident.ml[274,8421+27]..[274,8421+28])
                                  Pexp_ident "<" (lib/ident.ml[274,8421+27]..[274,8421+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[274,8421+25]..[274,8421+26])
                                      Pexp_ident "c" (lib/ident.ml[274,8421+25]..[274,8421+26])
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[274,8421+29]..[274,8421+30])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (lib/ident.ml[274,8421+36]..[274,8421+37])
                                Pexp_ident "l" (lib/ident.ml[274,8421+36]..[274,8421+37])
                              Some
                                expression (lib/ident.ml[274,8421+43]..[274,8421+44])
                                  Pexp_ident "r" (lib/ident.ml[274,8421+43]..[274,8421+44])
                        ]
            ]
    ]
  structure_item (lib/ident.ml[276,8468+0]..[284,8662+44])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[276,8468+8]..[276,8468+17])
          Ppat_var "find_name" (lib/ident.ml[276,8468+8]..[276,8468+17])
        expression (lib/ident.ml[276,8468+18]..[284,8662+44]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[276,8468+18]..[276,8468+19])
              Nolabel
              None
              pattern (lib/ident.ml[276,8468+18]..[276,8468+19])
                Ppat_var "n" (lib/ident.ml[276,8468+18]..[276,8468+19])
          ]
          None
          Pfunction_cases (lib/ident.ml[276,8468+22]..[284,8662+44])
            [
              <case>
                pattern (lib/ident.ml[277,8499+4]..[277,8499+9])
                  Ppat_construct "Empty" (lib/ident.ml[277,8499+4]..[277,8499+9])
                  None
                expression (lib/ident.ml[278,8512+6]..[278,8512+21])
                  Pexp_apply
                  expression (lib/ident.ml[278,8512+6]..[278,8512+11])
                    Pexp_ident "raise" (lib/ident.ml[278,8512+6]..[278,8512+11])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[278,8512+12]..[278,8512+21])
                        Pexp_construct "Not_found" (lib/ident.ml[278,8512+12]..[278,8512+21])
                        None
                  ]
              <case>
                pattern (lib/ident.ml[279,8534+4]..[279,8534+20])
                  Ppat_construct "Node" (lib/ident.ml[279,8534+4]..[279,8534+8])
                  Some
                    []
                    pattern (lib/ident.ml[279,8534+8]..[279,8534+20])
                      Ppat_tuple
                      [
                        pattern (lib/ident.ml[279,8534+9]..[279,8534+10])
                          Ppat_var "l" (lib/ident.ml[279,8534+9]..[279,8534+10])
                        pattern (lib/ident.ml[279,8534+12]..[279,8534+13])
                          Ppat_var "k" (lib/ident.ml[279,8534+12]..[279,8534+13])
                        pattern (lib/ident.ml[279,8534+15]..[279,8534+16])
                          Ppat_var "r" (lib/ident.ml[279,8534+15]..[279,8534+16])
                        pattern (lib/ident.ml[279,8534+18]..[279,8534+19])
                          Ppat_any
                      ]
                expression (lib/ident.ml[280,8558+6]..[284,8662+44])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/ident.ml[280,8558+10]..[280,8558+11])
                        Ppat_var "c" (lib/ident.ml[280,8558+10]..[280,8558+11])
                      expression (lib/ident.ml[280,8558+14]..[280,8558+45])
                        Pexp_apply
                        expression (lib/ident.ml[280,8558+14]..[280,8558+28])
                          Pexp_ident "String.compare" (lib/ident.ml[280,8558+14]..[280,8558+28])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[280,8558+29]..[280,8558+30])
                              Pexp_ident "n" (lib/ident.ml[280,8558+29]..[280,8558+30])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[280,8558+31]..[280,8558+45])
                              Pexp_apply
                              expression (lib/ident.ml[280,8558+32]..[280,8558+36])
                                Pexp_ident "name" (lib/ident.ml[280,8558+32]..[280,8558+36])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[280,8558+37]..[280,8558+44])
                                    Pexp_field
                                    expression (lib/ident.ml[280,8558+37]..[280,8558+38])
                                      Pexp_ident "k" (lib/ident.ml[280,8558+37]..[280,8558+38])
                                    "ident" (lib/ident.ml[280,8558+39]..[280,8558+44])
                              ]
                        ]
                  ]
                  expression (lib/ident.ml[281,8607+6]..[284,8662+44])
                    Pexp_ifthenelse
                    expression (lib/ident.ml[281,8607+9]..[281,8607+14])
                      Pexp_apply
                      expression (lib/ident.ml[281,8607+11]..[281,8607+12])
                        Pexp_ident "=" (lib/ident.ml[281,8607+11]..[281,8607+12])
                      [
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[281,8607+9]..[281,8607+10])
                            Pexp_ident "c" (lib/ident.ml[281,8607+9]..[281,8607+10])
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[281,8607+13]..[281,8607+14])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (lib/ident.ml[282,8627+8]..[282,8627+23])
                      Pexp_tuple
                      [
                        expression (lib/ident.ml[282,8627+8]..[282,8627+15])
                          Pexp_field
                          expression (lib/ident.ml[282,8627+8]..[282,8627+9])
                            Pexp_ident "k" (lib/ident.ml[282,8627+8]..[282,8627+9])
                          "ident" (lib/ident.ml[282,8627+10]..[282,8627+15])
                        expression (lib/ident.ml[282,8627+17]..[282,8627+23])
                          Pexp_field
                          expression (lib/ident.ml[282,8627+17]..[282,8627+18])
                            Pexp_ident "k" (lib/ident.ml[282,8627+17]..[282,8627+18])
                          "data" (lib/ident.ml[282,8627+19]..[282,8627+23])
                      ]
                    Some
                      expression (lib/ident.ml[284,8662+8]..[284,8662+44])
                        Pexp_apply
                        expression (lib/ident.ml[284,8662+8]..[284,8662+17])
                          Pexp_ident "find_name" (lib/ident.ml[284,8662+8]..[284,8662+17])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[284,8662+18]..[284,8662+19])
                              Pexp_ident "n" (lib/ident.ml[284,8662+18]..[284,8662+19])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[284,8662+20]..[284,8662+44])
                              Pexp_ifthenelse
                              expression (lib/ident.ml[284,8662+24]..[284,8662+29])
                                Pexp_apply
                                expression (lib/ident.ml[284,8662+26]..[284,8662+27])
                                  Pexp_ident "<" (lib/ident.ml[284,8662+26]..[284,8662+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[284,8662+24]..[284,8662+25])
                                      Pexp_ident "c" (lib/ident.ml[284,8662+24]..[284,8662+25])
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[284,8662+28]..[284,8662+29])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (lib/ident.ml[284,8662+35]..[284,8662+36])
                                Pexp_ident "l" (lib/ident.ml[284,8662+35]..[284,8662+36])
                              Some
                                expression (lib/ident.ml[284,8662+42]..[284,8662+43])
                                  Pexp_ident "r" (lib/ident.ml[284,8662+42]..[284,8662+43])
                        ]
            ]
    ]
  structure_item (lib/ident.ml[286,8708+0]..[288,8750+53])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[286,8708+8]..[286,8708+15])
          Ppat_var "get_all" (lib/ident.ml[286,8708+8]..[286,8708+15])
        expression (lib/ident.ml[286,8708+18]..[288,8750+53])
          Pexp_function
          []
          None
          Pfunction_cases (lib/ident.ml[286,8708+18]..[288,8750+53])
            [
              <case>
                pattern (lib/ident.ml[287,8735+4]..[287,8735+8])
                  Ppat_construct "None" (lib/ident.ml[287,8735+4]..[287,8735+8])
                  None
                expression (lib/ident.ml[287,8735+12]..[287,8735+14])
                  Pexp_construct "[]" (lib/ident.ml[287,8735+12]..[287,8735+14])
                  None
              <case>
                pattern (lib/ident.ml[288,8750+4]..[288,8750+10])
                  Ppat_construct "Some" (lib/ident.ml[288,8750+4]..[288,8750+8])
                  Some
                    []
                    pattern (lib/ident.ml[288,8750+9]..[288,8750+10])
                      Ppat_var "k" (lib/ident.ml[288,8750+9]..[288,8750+10])
                expression (lib/ident.ml[288,8750+14]..[288,8750+53])
                  Pexp_construct "::" (lib/ident.ml[288,8750+32]..[288,8750+34])
                  Some
                    expression (lib/ident.ml[288,8750+14]..[288,8750+53]) ghost
                      Pexp_tuple
                      [
                        expression (lib/ident.ml[288,8750+14]..[288,8750+31])
                          Pexp_tuple
                          [
                            expression (lib/ident.ml[288,8750+15]..[288,8750+22])
                              Pexp_field
                              expression (lib/ident.ml[288,8750+15]..[288,8750+16])
                                Pexp_ident "k" (lib/ident.ml[288,8750+15]..[288,8750+16])
                              "ident" (lib/ident.ml[288,8750+17]..[288,8750+22])
                            expression (lib/ident.ml[288,8750+24]..[288,8750+30])
                              Pexp_field
                              expression (lib/ident.ml[288,8750+24]..[288,8750+25])
                                Pexp_ident "k" (lib/ident.ml[288,8750+24]..[288,8750+25])
                              "data" (lib/ident.ml[288,8750+26]..[288,8750+30])
                          ]
                        expression (lib/ident.ml[288,8750+35]..[288,8750+53])
                          Pexp_apply
                          expression (lib/ident.ml[288,8750+35]..[288,8750+42])
                            Pexp_ident "get_all" (lib/ident.ml[288,8750+35]..[288,8750+42])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[288,8750+43]..[288,8750+53])
                                Pexp_field
                                expression (lib/ident.ml[288,8750+43]..[288,8750+44])
                                  Pexp_ident "k" (lib/ident.ml[288,8750+43]..[288,8750+44])
                                "previous" (lib/ident.ml[288,8750+45]..[288,8750+53])
                          ]
                      ]
            ]
    ]
  structure_item (lib/ident.ml[290,8805+0]..[298,9009+43])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[290,8805+8]..[290,8805+16])
          Ppat_var "find_all" (lib/ident.ml[290,8805+8]..[290,8805+16])
        expression (lib/ident.ml[290,8805+17]..[298,9009+43]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[290,8805+17]..[290,8805+18])
              Nolabel
              None
              pattern (lib/ident.ml[290,8805+17]..[290,8805+18])
                Ppat_var "n" (lib/ident.ml[290,8805+17]..[290,8805+18])
          ]
          None
          Pfunction_cases (lib/ident.ml[290,8805+21]..[298,9009+43])
            [
              <case>
                pattern (lib/ident.ml[291,8835+4]..[291,8835+9])
                  Ppat_construct "Empty" (lib/ident.ml[291,8835+4]..[291,8835+9])
                  None
                expression (lib/ident.ml[292,8848+6]..[292,8848+8])
                  Pexp_construct "[]" (lib/ident.ml[292,8848+6]..[292,8848+8])
                  None
              <case>
                pattern (lib/ident.ml[293,8857+4]..[293,8857+20])
                  Ppat_construct "Node" (lib/ident.ml[293,8857+4]..[293,8857+8])
                  Some
                    []
                    pattern (lib/ident.ml[293,8857+8]..[293,8857+20])
                      Ppat_tuple
                      [
                        pattern (lib/ident.ml[293,8857+9]..[293,8857+10])
                          Ppat_var "l" (lib/ident.ml[293,8857+9]..[293,8857+10])
                        pattern (lib/ident.ml[293,8857+12]..[293,8857+13])
                          Ppat_var "k" (lib/ident.ml[293,8857+12]..[293,8857+13])
                        pattern (lib/ident.ml[293,8857+15]..[293,8857+16])
                          Ppat_var "r" (lib/ident.ml[293,8857+15]..[293,8857+16])
                        pattern (lib/ident.ml[293,8857+18]..[293,8857+19])
                          Ppat_any
                      ]
                expression (lib/ident.ml[294,8881+6]..[298,9009+43])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/ident.ml[294,8881+10]..[294,8881+11])
                        Ppat_var "c" (lib/ident.ml[294,8881+10]..[294,8881+11])
                      expression (lib/ident.ml[294,8881+14]..[294,8881+45])
                        Pexp_apply
                        expression (lib/ident.ml[294,8881+14]..[294,8881+28])
                          Pexp_ident "String.compare" (lib/ident.ml[294,8881+14]..[294,8881+28])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[294,8881+29]..[294,8881+30])
                              Pexp_ident "n" (lib/ident.ml[294,8881+29]..[294,8881+30])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[294,8881+31]..[294,8881+45])
                              Pexp_apply
                              expression (lib/ident.ml[294,8881+32]..[294,8881+36])
                                Pexp_ident "name" (lib/ident.ml[294,8881+32]..[294,8881+36])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[294,8881+37]..[294,8881+44])
                                    Pexp_field
                                    expression (lib/ident.ml[294,8881+37]..[294,8881+38])
                                      Pexp_ident "k" (lib/ident.ml[294,8881+37]..[294,8881+38])
                                    "ident" (lib/ident.ml[294,8881+39]..[294,8881+44])
                              ]
                        ]
                  ]
                  expression (lib/ident.ml[295,8930+6]..[298,9009+43])
                    Pexp_ifthenelse
                    expression (lib/ident.ml[295,8930+9]..[295,8930+14])
                      Pexp_apply
                      expression (lib/ident.ml[295,8930+11]..[295,8930+12])
                        Pexp_ident "=" (lib/ident.ml[295,8930+11]..[295,8930+12])
                      [
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[295,8930+9]..[295,8930+10])
                            Pexp_ident "c" (lib/ident.ml[295,8930+9]..[295,8930+10])
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[295,8930+13]..[295,8930+14])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (lib/ident.ml[296,8950+8]..[296,8950+47])
                      Pexp_construct "::" (lib/ident.ml[296,8950+26]..[296,8950+28])
                      Some
                        expression (lib/ident.ml[296,8950+8]..[296,8950+47]) ghost
                          Pexp_tuple
                          [
                            expression (lib/ident.ml[296,8950+8]..[296,8950+25])
                              Pexp_tuple
                              [
                                expression (lib/ident.ml[296,8950+9]..[296,8950+16])
                                  Pexp_field
                                  expression (lib/ident.ml[296,8950+9]..[296,8950+10])
                                    Pexp_ident "k" (lib/ident.ml[296,8950+9]..[296,8950+10])
                                  "ident" (lib/ident.ml[296,8950+11]..[296,8950+16])
                                expression (lib/ident.ml[296,8950+18]..[296,8950+24])
                                  Pexp_field
                                  expression (lib/ident.ml[296,8950+18]..[296,8950+19])
                                    Pexp_ident "k" (lib/ident.ml[296,8950+18]..[296,8950+19])
                                  "data" (lib/ident.ml[296,8950+20]..[296,8950+24])
                              ]
                            expression (lib/ident.ml[296,8950+29]..[296,8950+47])
                              Pexp_apply
                              expression (lib/ident.ml[296,8950+29]..[296,8950+36])
                                Pexp_ident "get_all" (lib/ident.ml[296,8950+29]..[296,8950+36])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[296,8950+37]..[296,8950+47])
                                    Pexp_field
                                    expression (lib/ident.ml[296,8950+37]..[296,8950+38])
                                      Pexp_ident "k" (lib/ident.ml[296,8950+37]..[296,8950+38])
                                    "previous" (lib/ident.ml[296,8950+39]..[296,8950+47])
                              ]
                          ]
                    Some
                      expression (lib/ident.ml[298,9009+8]..[298,9009+43])
                        Pexp_apply
                        expression (lib/ident.ml[298,9009+8]..[298,9009+16])
                          Pexp_ident "find_all" (lib/ident.ml[298,9009+8]..[298,9009+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[298,9009+17]..[298,9009+18])
                              Pexp_ident "n" (lib/ident.ml[298,9009+17]..[298,9009+18])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[298,9009+19]..[298,9009+43])
                              Pexp_ifthenelse
                              expression (lib/ident.ml[298,9009+23]..[298,9009+28])
                                Pexp_apply
                                expression (lib/ident.ml[298,9009+25]..[298,9009+26])
                                  Pexp_ident "<" (lib/ident.ml[298,9009+25]..[298,9009+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[298,9009+23]..[298,9009+24])
                                      Pexp_ident "c" (lib/ident.ml[298,9009+23]..[298,9009+24])
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[298,9009+27]..[298,9009+28])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (lib/ident.ml[298,9009+34]..[298,9009+35])
                                Pexp_ident "l" (lib/ident.ml[298,9009+34]..[298,9009+35])
                              Some
                                expression (lib/ident.ml[298,9009+41]..[298,9009+42])
                                  Pexp_ident "r" (lib/ident.ml[298,9009+41]..[298,9009+42])
                        ]
            ]
    ]
  structure_item (lib/ident.ml[300,9054+0]..[302,9144+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[300,9054+4]..[300,9054+15])
          Ppat_var "get_all_seq" (lib/ident.ml[300,9054+4]..[300,9054+15])
        expression (lib/ident.ml[300,9054+16]..[302,9144+8]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[300,9054+16]..[300,9054+17])
              Nolabel
              None
              pattern (lib/ident.ml[300,9054+16]..[300,9054+17])
                Ppat_var "k" (lib/ident.ml[300,9054+16]..[300,9054+17])
            Pparam_val (lib/ident.ml[300,9054+18]..[300,9054+20])
              Nolabel
              None
              pattern (lib/ident.ml[300,9054+18]..[300,9054+20])
                Ppat_construct "()" (lib/ident.ml[300,9054+18]..[300,9054+20])
                None
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[301,9077+2]..[302,9144+8])
              Pexp_apply
              expression (lib/ident.ml[301,9077+2]..[301,9077+12])
                Pexp_ident "Seq.unfold" (lib/ident.ml[301,9077+2]..[301,9077+12])
              [
                <arg>
                Nolabel
                  expression (lib/ident.ml[301,9077+13]..[301,9077+66])
                    Pexp_apply
                    expression (lib/ident.ml[301,9077+14]..[301,9077+24])
                      Pexp_ident "Option.map" (lib/ident.ml[301,9077+14]..[301,9077+24])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[301,9077+25]..[301,9077+65])
                          Pexp_function
                          [
                            Pparam_val (lib/ident.ml[301,9077+30]..[301,9077+31])
                              Nolabel
                              None
                              pattern (lib/ident.ml[301,9077+30]..[301,9077+31])
                                Ppat_var "k" (lib/ident.ml[301,9077+30]..[301,9077+31])
                          ]
                          None
                          Pfunction_body
                            expression (lib/ident.ml[301,9077+35]..[301,9077+64])
                              Pexp_tuple
                              [
                                expression (lib/ident.ml[301,9077+35]..[301,9077+52])
                                  Pexp_tuple
                                  [
                                    expression (lib/ident.ml[301,9077+36]..[301,9077+43])
                                      Pexp_field
                                      expression (lib/ident.ml[301,9077+36]..[301,9077+37])
                                        Pexp_ident "k" (lib/ident.ml[301,9077+36]..[301,9077+37])
                                      "ident" (lib/ident.ml[301,9077+38]..[301,9077+43])
                                    expression (lib/ident.ml[301,9077+45]..[301,9077+51])
                                      Pexp_field
                                      expression (lib/ident.ml[301,9077+45]..[301,9077+46])
                                        Pexp_ident "k" (lib/ident.ml[301,9077+45]..[301,9077+46])
                                      "data" (lib/ident.ml[301,9077+47]..[301,9077+51])
                                  ]
                                expression (lib/ident.ml[301,9077+54]..[301,9077+64])
                                  Pexp_field
                                  expression (lib/ident.ml[301,9077+54]..[301,9077+55])
                                    Pexp_ident "k" (lib/ident.ml[301,9077+54]..[301,9077+55])
                                  "previous" (lib/ident.ml[301,9077+56]..[301,9077+64])
                              ]
                    ]
                <arg>
                Nolabel
                  expression (lib/ident.ml[302,9144+4]..[302,9144+5])
                    Pexp_ident "k" (lib/ident.ml[302,9144+4]..[302,9144+5])
                <arg>
                Nolabel
                  expression (lib/ident.ml[302,9144+6]..[302,9144+8])
                    Pexp_construct "()" (lib/ident.ml[302,9144+6]..[302,9144+8])
                    None
              ]
    ]
  structure_item (lib/ident.ml[304,9154+0]..[312,9388+50])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[304,9154+8]..[304,9154+20])
          Ppat_var "find_all_seq" (lib/ident.ml[304,9154+8]..[304,9154+20])
        expression (lib/ident.ml[304,9154+21]..[312,9388+50]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[304,9154+21]..[304,9154+22])
              Nolabel
              None
              pattern (lib/ident.ml[304,9154+21]..[304,9154+22])
                Ppat_var "n" (lib/ident.ml[304,9154+21]..[304,9154+22])
            Pparam_val (lib/ident.ml[304,9154+23]..[304,9154+26])
              Nolabel
              None
              pattern (lib/ident.ml[304,9154+23]..[304,9154+26])
                Ppat_var "tbl" (lib/ident.ml[304,9154+23]..[304,9154+26])
            Pparam_val (lib/ident.ml[304,9154+27]..[304,9154+29])
              Nolabel
              None
              pattern (lib/ident.ml[304,9154+27]..[304,9154+29])
                Ppat_construct "()" (lib/ident.ml[304,9154+27]..[304,9154+29])
                None
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[305,9186+2]..[312,9388+50])
              Pexp_match
              expression (lib/ident.ml[305,9186+8]..[305,9186+11])
                Pexp_ident "tbl" (lib/ident.ml[305,9186+8]..[305,9186+11])
              [
                <case>
                  pattern (lib/ident.ml[306,9203+4]..[306,9203+9])
                    Ppat_construct "Empty" (lib/ident.ml[306,9203+4]..[306,9203+9])
                    None
                  expression (lib/ident.ml[306,9203+13]..[306,9203+20])
                    Pexp_construct "Seq.Nil" (lib/ident.ml[306,9203+13]..[306,9203+20])
                    None
                <case>
                  pattern (lib/ident.ml[307,9224+4]..[307,9224+20])
                    Ppat_construct "Node" (lib/ident.ml[307,9224+4]..[307,9224+8])
                    Some
                      []
                      pattern (lib/ident.ml[307,9224+8]..[307,9224+20])
                        Ppat_tuple
                        [
                          pattern (lib/ident.ml[307,9224+9]..[307,9224+10])
                            Ppat_var "l" (lib/ident.ml[307,9224+9]..[307,9224+10])
                          pattern (lib/ident.ml[307,9224+12]..[307,9224+13])
                            Ppat_var "k" (lib/ident.ml[307,9224+12]..[307,9224+13])
                          pattern (lib/ident.ml[307,9224+15]..[307,9224+16])
                            Ppat_var "r" (lib/ident.ml[307,9224+15]..[307,9224+16])
                          pattern (lib/ident.ml[307,9224+18]..[307,9224+19])
                            Ppat_any
                        ]
                  expression (lib/ident.ml[308,9248+6]..[312,9388+50])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/ident.ml[308,9248+10]..[308,9248+11])
                          Ppat_var "c" (lib/ident.ml[308,9248+10]..[308,9248+11])
                        expression (lib/ident.ml[308,9248+14]..[308,9248+45])
                          Pexp_apply
                          expression (lib/ident.ml[308,9248+14]..[308,9248+28])
                            Pexp_ident "String.compare" (lib/ident.ml[308,9248+14]..[308,9248+28])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[308,9248+29]..[308,9248+30])
                                Pexp_ident "n" (lib/ident.ml[308,9248+29]..[308,9248+30])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[308,9248+31]..[308,9248+45])
                                Pexp_apply
                                expression (lib/ident.ml[308,9248+32]..[308,9248+36])
                                  Pexp_ident "name" (lib/ident.ml[308,9248+32]..[308,9248+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[308,9248+37]..[308,9248+44])
                                      Pexp_field
                                      expression (lib/ident.ml[308,9248+37]..[308,9248+38])
                                        Pexp_ident "k" (lib/ident.ml[308,9248+37]..[308,9248+38])
                                      "ident" (lib/ident.ml[308,9248+39]..[308,9248+44])
                                ]
                          ]
                    ]
                    expression (lib/ident.ml[309,9297+6]..[312,9388+50])
                      Pexp_ifthenelse
                      expression (lib/ident.ml[309,9297+9]..[309,9297+14])
                        Pexp_apply
                        expression (lib/ident.ml[309,9297+11]..[309,9297+12])
                          Pexp_ident "=" (lib/ident.ml[309,9297+11]..[309,9297+12])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[309,9297+9]..[309,9297+10])
                              Pexp_ident "c" (lib/ident.ml[309,9297+9]..[309,9297+10])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[309,9297+13]..[309,9297+14])
                              Pexp_constant PConst_int (0,None)
                        ]
                      expression (lib/ident.ml[310,9317+8]..[310,9317+59])
                        Pexp_construct "Seq.Cons" (lib/ident.ml[310,9317+8]..[310,9317+16])
                        Some
                          expression (lib/ident.ml[310,9317+16]..[310,9317+59])
                            Pexp_tuple
                            [
                              expression (lib/ident.ml[310,9317+17]..[310,9317+34])
                                Pexp_tuple
                                [
                                  expression (lib/ident.ml[310,9317+18]..[310,9317+25])
                                    Pexp_field
                                    expression (lib/ident.ml[310,9317+18]..[310,9317+19])
                                      Pexp_ident "k" (lib/ident.ml[310,9317+18]..[310,9317+19])
                                    "ident" (lib/ident.ml[310,9317+20]..[310,9317+25])
                                  expression (lib/ident.ml[310,9317+27]..[310,9317+33])
                                    Pexp_field
                                    expression (lib/ident.ml[310,9317+27]..[310,9317+28])
                                      Pexp_ident "k" (lib/ident.ml[310,9317+27]..[310,9317+28])
                                    "data" (lib/ident.ml[310,9317+29]..[310,9317+33])
                                ]
                              expression (lib/ident.ml[310,9317+36]..[310,9317+58])
                                Pexp_apply
                                expression (lib/ident.ml[310,9317+36]..[310,9317+47])
                                  Pexp_ident "get_all_seq" (lib/ident.ml[310,9317+36]..[310,9317+47])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[310,9317+48]..[310,9317+58])
                                      Pexp_field
                                      expression (lib/ident.ml[310,9317+48]..[310,9317+49])
                                        Pexp_ident "k" (lib/ident.ml[310,9317+48]..[310,9317+49])
                                      "previous" (lib/ident.ml[310,9317+50]..[310,9317+58])
                                ]
                            ]
                      Some
                        expression (lib/ident.ml[312,9388+8]..[312,9388+50])
                          Pexp_apply
                          expression (lib/ident.ml[312,9388+8]..[312,9388+20])
                            Pexp_ident "find_all_seq" (lib/ident.ml[312,9388+8]..[312,9388+20])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[312,9388+21]..[312,9388+22])
                                Pexp_ident "n" (lib/ident.ml[312,9388+21]..[312,9388+22])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[312,9388+23]..[312,9388+47])
                                Pexp_ifthenelse
                                expression (lib/ident.ml[312,9388+27]..[312,9388+32])
                                  Pexp_apply
                                  expression (lib/ident.ml[312,9388+29]..[312,9388+30])
                                    Pexp_ident "<" (lib/ident.ml[312,9388+29]..[312,9388+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[312,9388+27]..[312,9388+28])
                                        Pexp_ident "c" (lib/ident.ml[312,9388+27]..[312,9388+28])
                                    <arg>
                                    Nolabel
                                      expression (lib/ident.ml[312,9388+31]..[312,9388+32])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                expression (lib/ident.ml[312,9388+38]..[312,9388+39])
                                  Pexp_ident "l" (lib/ident.ml[312,9388+38]..[312,9388+39])
                                Some
                                  expression (lib/ident.ml[312,9388+45]..[312,9388+46])
                                    Pexp_ident "r" (lib/ident.ml[312,9388+45]..[312,9388+46])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[312,9388+48]..[312,9388+50])
                                Pexp_construct "()" (lib/ident.ml[312,9388+48]..[312,9388+50])
                                None
                          ]
              ]
    ]
  structure_item (lib/ident.ml[315,9441+0]..[322,9615+42])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[315,9441+8]..[315,9441+16])
          Ppat_var "fold_aux" (lib/ident.ml[315,9441+8]..[315,9441+16])
        expression (lib/ident.ml[315,9441+17]..[322,9615+42]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[315,9441+17]..[315,9441+18])
              Nolabel
              None
              pattern (lib/ident.ml[315,9441+17]..[315,9441+18])
                Ppat_var "f" (lib/ident.ml[315,9441+17]..[315,9441+18])
            Pparam_val (lib/ident.ml[315,9441+19]..[315,9441+24])
              Nolabel
              None
              pattern (lib/ident.ml[315,9441+19]..[315,9441+24])
                Ppat_var "stack" (lib/ident.ml[315,9441+19]..[315,9441+24])
            Pparam_val (lib/ident.ml[315,9441+25]..[315,9441+29])
              Nolabel
              None
              pattern (lib/ident.ml[315,9441+25]..[315,9441+29])
                Ppat_var "accu" (lib/ident.ml[315,9441+25]..[315,9441+29])
          ]
          None
          Pfunction_cases (lib/ident.ml[315,9441+32]..[322,9615+42])
            [
              <case>
                pattern (lib/ident.ml[316,9482+4]..[316,9482+9])
                  Ppat_construct "Empty" (lib/ident.ml[316,9482+4]..[316,9482+9])
                  None
                expression (lib/ident.ml[317,9495+6]..[320,9581+9])
                  Pexp_match
                  expression (lib/ident.ml[317,9495+18]..[317,9495+23])
                    Pexp_ident "stack" (lib/ident.ml[317,9495+18]..[317,9495+23])
                  [
                    <case>
                      pattern (lib/ident.ml[318,9524+8]..[318,9524+10])
                        Ppat_construct "[]" (lib/ident.ml[318,9524+8]..[318,9524+10])
                        None
                      expression (lib/ident.ml[318,9524+14]..[318,9524+18])
                        Pexp_ident "accu" (lib/ident.ml[318,9524+14]..[318,9524+18])
                    <case>
                      pattern (lib/ident.ml[319,9543+8]..[319,9543+14])
                        Ppat_construct "::" (lib/ident.ml[319,9543+10]..[319,9543+12])
                        Some
                          []
                          pattern (lib/ident.ml[319,9543+8]..[319,9543+14]) ghost
                            Ppat_tuple
                            [
                              pattern (lib/ident.ml[319,9543+8]..[319,9543+9])
                                Ppat_var "a" (lib/ident.ml[319,9543+8]..[319,9543+9])
                              pattern (lib/ident.ml[319,9543+13]..[319,9543+14])
                                Ppat_var "l" (lib/ident.ml[319,9543+13]..[319,9543+14])
                            ]
                      expression (lib/ident.ml[319,9543+18]..[319,9543+37])
                        Pexp_apply
                        expression (lib/ident.ml[319,9543+18]..[319,9543+26])
                          Pexp_ident "fold_aux" (lib/ident.ml[319,9543+18]..[319,9543+26])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[319,9543+27]..[319,9543+28])
                              Pexp_ident "f" (lib/ident.ml[319,9543+27]..[319,9543+28])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[319,9543+29]..[319,9543+30])
                              Pexp_ident "l" (lib/ident.ml[319,9543+29]..[319,9543+30])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[319,9543+31]..[319,9543+35])
                              Pexp_ident "accu" (lib/ident.ml[319,9543+31]..[319,9543+35])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[319,9543+36]..[319,9543+37])
                              Pexp_ident "a" (lib/ident.ml[319,9543+36]..[319,9543+37])
                        ]
                  ]
              <case>
                pattern (lib/ident.ml[321,9591+4]..[321,9591+20])
                  Ppat_construct "Node" (lib/ident.ml[321,9591+4]..[321,9591+8])
                  Some
                    []
                    pattern (lib/ident.ml[321,9591+8]..[321,9591+20])
                      Ppat_tuple
                      [
                        pattern (lib/ident.ml[321,9591+9]..[321,9591+10])
                          Ppat_var "l" (lib/ident.ml[321,9591+9]..[321,9591+10])
                        pattern (lib/ident.ml[321,9591+12]..[321,9591+13])
                          Ppat_var "k" (lib/ident.ml[321,9591+12]..[321,9591+13])
                        pattern (lib/ident.ml[321,9591+15]..[321,9591+16])
                          Ppat_var "r" (lib/ident.ml[321,9591+15]..[321,9591+16])
                        pattern (lib/ident.ml[321,9591+18]..[321,9591+19])
                          Ppat_any
                      ]
                expression (lib/ident.ml[322,9615+6]..[322,9615+42])
                  Pexp_apply
                  expression (lib/ident.ml[322,9615+6]..[322,9615+14])
                    Pexp_ident "fold_aux" (lib/ident.ml[322,9615+6]..[322,9615+14])
                  [
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[322,9615+15]..[322,9615+16])
                        Pexp_ident "f" (lib/ident.ml[322,9615+15]..[322,9615+16])
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[322,9615+17]..[322,9615+29])
                        Pexp_construct "::" (lib/ident.ml[322,9615+20]..[322,9615+22])
                        Some
                          expression (lib/ident.ml[322,9615+18]..[322,9615+28]) ghost
                            Pexp_tuple
                            [
                              expression (lib/ident.ml[322,9615+18]..[322,9615+19])
                                Pexp_ident "l" (lib/ident.ml[322,9615+18]..[322,9615+19])
                              expression (lib/ident.ml[322,9615+23]..[322,9615+28])
                                Pexp_ident "stack" (lib/ident.ml[322,9615+23]..[322,9615+28])
                            ]
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[322,9615+30]..[322,9615+40])
                        Pexp_apply
                        expression (lib/ident.ml[322,9615+31]..[322,9615+32])
                          Pexp_ident "f" (lib/ident.ml[322,9615+31]..[322,9615+32])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[322,9615+33]..[322,9615+34])
                              Pexp_ident "k" (lib/ident.ml[322,9615+33]..[322,9615+34])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[322,9615+35]..[322,9615+39])
                              Pexp_ident "accu" (lib/ident.ml[322,9615+35]..[322,9615+39])
                        ]
                    <arg>
                    Nolabel
                      expression (lib/ident.ml[322,9615+41]..[322,9615+42])
                        Pexp_ident "r" (lib/ident.ml[322,9615+41]..[322,9615+42])
                  ]
            ]
    ]
  structure_item (lib/ident.ml[324,9659+0]..[324,9659+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[324,9659+4]..[324,9659+13])
          Ppat_var "fold_name" (lib/ident.ml[324,9659+4]..[324,9659+13])
        expression (lib/ident.ml[324,9659+14]..[324,9659+75]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[324,9659+14]..[324,9659+15])
              Nolabel
              None
              pattern (lib/ident.ml[324,9659+14]..[324,9659+15])
                Ppat_var "f" (lib/ident.ml[324,9659+14]..[324,9659+15])
            Pparam_val (lib/ident.ml[324,9659+16]..[324,9659+19])
              Nolabel
              None
              pattern (lib/ident.ml[324,9659+16]..[324,9659+19])
                Ppat_var "tbl" (lib/ident.ml[324,9659+16]..[324,9659+19])
            Pparam_val (lib/ident.ml[324,9659+20]..[324,9659+24])
              Nolabel
              None
              pattern (lib/ident.ml[324,9659+20]..[324,9659+24])
                Ppat_var "accu" (lib/ident.ml[324,9659+20]..[324,9659+24])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[324,9659+27]..[324,9659+75])
              Pexp_apply
              expression (lib/ident.ml[324,9659+27]..[324,9659+35])
                Pexp_ident "fold_aux" (lib/ident.ml[324,9659+27]..[324,9659+35])
              [
                <arg>
                Nolabel
                  expression (lib/ident.ml[324,9659+36]..[324,9659+63])
                    Pexp_function
                    [
                      Pparam_val (lib/ident.ml[324,9659+41]..[324,9659+42])
                        Nolabel
                        None
                        pattern (lib/ident.ml[324,9659+41]..[324,9659+42])
                          Ppat_var "k" (lib/ident.ml[324,9659+41]..[324,9659+42])
                    ]
                    None
                    Pfunction_body
                      expression (lib/ident.ml[324,9659+46]..[324,9659+62])
                        Pexp_apply
                        expression (lib/ident.ml[324,9659+46]..[324,9659+47])
                          Pexp_ident "f" (lib/ident.ml[324,9659+46]..[324,9659+47])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[324,9659+48]..[324,9659+55])
                              Pexp_field
                              expression (lib/ident.ml[324,9659+48]..[324,9659+49])
                                Pexp_ident "k" (lib/ident.ml[324,9659+48]..[324,9659+49])
                              "ident" (lib/ident.ml[324,9659+50]..[324,9659+55])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[324,9659+56]..[324,9659+62])
                              Pexp_field
                              expression (lib/ident.ml[324,9659+56]..[324,9659+57])
                                Pexp_ident "k" (lib/ident.ml[324,9659+56]..[324,9659+57])
                              "data" (lib/ident.ml[324,9659+58]..[324,9659+62])
                        ]
                <arg>
                Nolabel
                  expression (lib/ident.ml[324,9659+64]..[324,9659+66])
                    Pexp_construct "[]" (lib/ident.ml[324,9659+64]..[324,9659+66])
                    None
                <arg>
                Nolabel
                  expression (lib/ident.ml[324,9659+67]..[324,9659+71])
                    Pexp_ident "accu" (lib/ident.ml[324,9659+67]..[324,9659+71])
                <arg>
                Nolabel
                  expression (lib/ident.ml[324,9659+72]..[324,9659+75])
                    Pexp_ident "tbl" (lib/ident.ml[324,9659+72]..[324,9659+75])
              ]
    ]
  structure_item (lib/ident.ml[326,9736+0]..[329,9797+60])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[326,9736+8]..[326,9736+17])
          Ppat_var "fold_data" (lib/ident.ml[326,9736+8]..[326,9736+17])
        expression (lib/ident.ml[326,9736+18]..[329,9797+60]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[326,9736+18]..[326,9736+19])
              Nolabel
              None
              pattern (lib/ident.ml[326,9736+18]..[326,9736+19])
                Ppat_var "f" (lib/ident.ml[326,9736+18]..[326,9736+19])
            Pparam_val (lib/ident.ml[326,9736+20]..[326,9736+21])
              Nolabel
              None
              pattern (lib/ident.ml[326,9736+20]..[326,9736+21])
                Ppat_var "d" (lib/ident.ml[326,9736+20]..[326,9736+21])
            Pparam_val (lib/ident.ml[326,9736+22]..[326,9736+26])
              Nolabel
              None
              pattern (lib/ident.ml[326,9736+22]..[326,9736+26])
                Ppat_var "accu" (lib/ident.ml[326,9736+22]..[326,9736+26])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[327,9765+2]..[329,9797+60])
              Pexp_match
              expression (lib/ident.ml[327,9765+8]..[327,9765+9])
                Pexp_ident "d" (lib/ident.ml[327,9765+8]..[327,9765+9])
              [
                <case>
                  pattern (lib/ident.ml[328,9780+4]..[328,9780+8])
                    Ppat_construct "None" (lib/ident.ml[328,9780+4]..[328,9780+8])
                    None
                  expression (lib/ident.ml[328,9780+12]..[328,9780+16])
                    Pexp_ident "accu" (lib/ident.ml[328,9780+12]..[328,9780+16])
                <case>
                  pattern (lib/ident.ml[329,9797+4]..[329,9797+10])
                    Ppat_construct "Some" (lib/ident.ml[329,9797+4]..[329,9797+8])
                    Some
                      []
                      pattern (lib/ident.ml[329,9797+9]..[329,9797+10])
                        Ppat_var "k" (lib/ident.ml[329,9797+9]..[329,9797+10])
                  expression (lib/ident.ml[329,9797+14]..[329,9797+60])
                    Pexp_apply
                    expression (lib/ident.ml[329,9797+14]..[329,9797+15])
                      Pexp_ident "f" (lib/ident.ml[329,9797+14]..[329,9797+15])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[329,9797+16]..[329,9797+23])
                          Pexp_field
                          expression (lib/ident.ml[329,9797+16]..[329,9797+17])
                            Pexp_ident "k" (lib/ident.ml[329,9797+16]..[329,9797+17])
                          "ident" (lib/ident.ml[329,9797+18]..[329,9797+23])
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[329,9797+24]..[329,9797+30])
                          Pexp_field
                          expression (lib/ident.ml[329,9797+24]..[329,9797+25])
                            Pexp_ident "k" (lib/ident.ml[329,9797+24]..[329,9797+25])
                          "data" (lib/ident.ml[329,9797+26]..[329,9797+30])
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[329,9797+31]..[329,9797+60])
                          Pexp_apply
                          expression (lib/ident.ml[329,9797+32]..[329,9797+41])
                            Pexp_ident "fold_data" (lib/ident.ml[329,9797+32]..[329,9797+41])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[329,9797+42]..[329,9797+43])
                                Pexp_ident "f" (lib/ident.ml[329,9797+42]..[329,9797+43])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[329,9797+44]..[329,9797+54])
                                Pexp_field
                                expression (lib/ident.ml[329,9797+44]..[329,9797+45])
                                  Pexp_ident "k" (lib/ident.ml[329,9797+44]..[329,9797+45])
                                "previous" (lib/ident.ml[329,9797+46]..[329,9797+54])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[329,9797+55]..[329,9797+59])
                                Pexp_ident "accu" (lib/ident.ml[329,9797+55]..[329,9797+59])
                          ]
                    ]
              ]
    ]
  structure_item (lib/ident.ml[331,9859+0]..[332,9885+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[331,9859+4]..[331,9859+12])
          Ppat_var "fold_all" (lib/ident.ml[331,9859+4]..[331,9859+12])
        expression (lib/ident.ml[331,9859+13]..[332,9885+54]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[331,9859+13]..[331,9859+14])
              Nolabel
              None
              pattern (lib/ident.ml[331,9859+13]..[331,9859+14])
                Ppat_var "f" (lib/ident.ml[331,9859+13]..[331,9859+14])
            Pparam_val (lib/ident.ml[331,9859+15]..[331,9859+18])
              Nolabel
              None
              pattern (lib/ident.ml[331,9859+15]..[331,9859+18])
                Ppat_var "tbl" (lib/ident.ml[331,9859+15]..[331,9859+18])
            Pparam_val (lib/ident.ml[331,9859+19]..[331,9859+23])
              Nolabel
              None
              pattern (lib/ident.ml[331,9859+19]..[331,9859+23])
                Ppat_var "accu" (lib/ident.ml[331,9859+19]..[331,9859+23])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[332,9885+2]..[332,9885+54])
              Pexp_apply
              expression (lib/ident.ml[332,9885+2]..[332,9885+10])
                Pexp_ident "fold_aux" (lib/ident.ml[332,9885+2]..[332,9885+10])
              [
                <arg>
                Nolabel
                  expression (lib/ident.ml[332,9885+11]..[332,9885+42])
                    Pexp_function
                    [
                      Pparam_val (lib/ident.ml[332,9885+16]..[332,9885+17])
                        Nolabel
                        None
                        pattern (lib/ident.ml[332,9885+16]..[332,9885+17])
                          Ppat_var "k" (lib/ident.ml[332,9885+16]..[332,9885+17])
                    ]
                    None
                    Pfunction_body
                      expression (lib/ident.ml[332,9885+21]..[332,9885+41])
                        Pexp_apply
                        expression (lib/ident.ml[332,9885+21]..[332,9885+30])
                          Pexp_ident "fold_data" (lib/ident.ml[332,9885+21]..[332,9885+30])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[332,9885+31]..[332,9885+32])
                              Pexp_ident "f" (lib/ident.ml[332,9885+31]..[332,9885+32])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[332,9885+33]..[332,9885+41])
                              Pexp_construct "Some" (lib/ident.ml[332,9885+34]..[332,9885+38])
                              Some
                                expression (lib/ident.ml[332,9885+39]..[332,9885+40])
                                  Pexp_ident "k" (lib/ident.ml[332,9885+39]..[332,9885+40])
                        ]
                <arg>
                Nolabel
                  expression (lib/ident.ml[332,9885+43]..[332,9885+45])
                    Pexp_construct "[]" (lib/ident.ml[332,9885+43]..[332,9885+45])
                    None
                <arg>
                Nolabel
                  expression (lib/ident.ml[332,9885+46]..[332,9885+50])
                    Pexp_ident "accu" (lib/ident.ml[332,9885+46]..[332,9885+50])
                <arg>
                Nolabel
                  expression (lib/ident.ml[332,9885+51]..[332,9885+54])
                    Pexp_ident "tbl" (lib/ident.ml[332,9885+51]..[332,9885+54])
              ]
    ]
  structure_item (lib/ident.ml[336,10006+0]..[339,10072+42])
    Pstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[336,10006+8]..[336,10006+12])
          Ppat_var "iter" (lib/ident.ml[336,10006+8]..[336,10006+12])
        expression (lib/ident.ml[336,10006+13]..[339,10072+42]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[336,10006+13]..[336,10006+14])
              Nolabel
              None
              pattern (lib/ident.ml[336,10006+13]..[336,10006+14])
                Ppat_var "f" (lib/ident.ml[336,10006+13]..[336,10006+14])
          ]
          None
          Pfunction_cases (lib/ident.ml[336,10006+17]..[339,10072+42])
            [
              <case>
                pattern (lib/ident.ml[337,10032+4]..[337,10032+9])
                  Ppat_construct "Empty" (lib/ident.ml[337,10032+4]..[337,10032+9])
                  None
                expression (lib/ident.ml[337,10032+13]..[337,10032+15])
                  Pexp_construct "()" (lib/ident.ml[337,10032+13]..[337,10032+15])
                  None
              <case>
                pattern (lib/ident.ml[338,10048+4]..[338,10048+20])
                  Ppat_construct "Node" (lib/ident.ml[338,10048+4]..[338,10048+8])
                  Some
                    []
                    pattern (lib/ident.ml[338,10048+8]..[338,10048+20])
                      Ppat_tuple
                      [
                        pattern (lib/ident.ml[338,10048+9]..[338,10048+10])
                          Ppat_var "l" (lib/ident.ml[338,10048+9]..[338,10048+10])
                        pattern (lib/ident.ml[338,10048+12]..[338,10048+13])
                          Ppat_var "k" (lib/ident.ml[338,10048+12]..[338,10048+13])
                        pattern (lib/ident.ml[338,10048+15]..[338,10048+16])
                          Ppat_var "r" (lib/ident.ml[338,10048+15]..[338,10048+16])
                        pattern (lib/ident.ml[338,10048+18]..[338,10048+19])
                          Ppat_any
                      ]
                expression (lib/ident.ml[339,10072+6]..[339,10072+42])
                  Pexp_sequence
                  expression (lib/ident.ml[339,10072+6]..[339,10072+14])
                    Pexp_apply
                    expression (lib/ident.ml[339,10072+6]..[339,10072+10])
                      Pexp_ident "iter" (lib/ident.ml[339,10072+6]..[339,10072+10])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[339,10072+11]..[339,10072+12])
                          Pexp_ident "f" (lib/ident.ml[339,10072+11]..[339,10072+12])
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[339,10072+13]..[339,10072+14])
                          Pexp_ident "l" (lib/ident.ml[339,10072+13]..[339,10072+14])
                    ]
                  expression (lib/ident.ml[339,10072+16]..[339,10072+42])
                    Pexp_sequence
                    expression (lib/ident.ml[339,10072+16]..[339,10072+32])
                      Pexp_apply
                      expression (lib/ident.ml[339,10072+16]..[339,10072+17])
                        Pexp_ident "f" (lib/ident.ml[339,10072+16]..[339,10072+17])
                      [
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[339,10072+18]..[339,10072+25])
                            Pexp_field
                            expression (lib/ident.ml[339,10072+18]..[339,10072+19])
                              Pexp_ident "k" (lib/ident.ml[339,10072+18]..[339,10072+19])
                            "ident" (lib/ident.ml[339,10072+20]..[339,10072+25])
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[339,10072+26]..[339,10072+32])
                            Pexp_field
                            expression (lib/ident.ml[339,10072+26]..[339,10072+27])
                              Pexp_ident "k" (lib/ident.ml[339,10072+26]..[339,10072+27])
                            "data" (lib/ident.ml[339,10072+28]..[339,10072+32])
                      ]
                    expression (lib/ident.ml[339,10072+34]..[339,10072+42])
                      Pexp_apply
                      expression (lib/ident.ml[339,10072+34]..[339,10072+38])
                        Pexp_ident "iter" (lib/ident.ml[339,10072+34]..[339,10072+38])
                      [
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[339,10072+39]..[339,10072+40])
                            Pexp_ident "f" (lib/ident.ml[339,10072+39]..[339,10072+40])
                        <arg>
                        Nolabel
                          expression (lib/ident.ml[339,10072+41]..[339,10072+42])
                            Pexp_ident "r" (lib/ident.ml[339,10072+41]..[339,10072+42])
                      ]
            ]
    ]
  structure_item (lib/ident.ml[344,10199+0]..[344,10199+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[344,10199+4]..[344,10199+12])
          Ppat_var "key_name" (lib/ident.ml[344,10199+4]..[344,10199+12])
        expression (lib/ident.ml[344,10199+15]..[344,10199+17])
          Pexp_constant PConst_string("",(lib/ident.ml[344,10199+16]..[344,10199+16]),None)
    ]
  structure_item (lib/ident.ml[346,10218+0]..[355,10407+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[346,10218+4]..[346,10218+22])
          Ppat_var "make_key_generator" (lib/ident.ml[346,10218+4]..[346,10218+22])
        expression (lib/ident.ml[346,10218+23]..[355,10407+73]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[346,10218+23]..[346,10218+25])
              Nolabel
              None
              pattern (lib/ident.ml[346,10218+23]..[346,10218+25])
                Ppat_construct "()" (lib/ident.ml[346,10218+23]..[346,10218+25])
                None
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[347,10246+2]..[355,10407+73])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/ident.ml[347,10246+6]..[347,10246+7])
                    Ppat_var "c" (lib/ident.ml[347,10246+6]..[347,10246+7])
                  expression (lib/ident.ml[347,10246+10]..[347,10246+15])
                    Pexp_apply
                    expression (lib/ident.ml[347,10246+10]..[347,10246+13])
                      Pexp_ident "ref" (lib/ident.ml[347,10246+10]..[347,10246+13])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[347,10246+14]..[347,10246+15])
                          Pexp_constant PConst_int (1,None)
                    ]
              ]
              expression (lib/ident.ml[348,10265+2]..[355,10407+73])
                Pexp_function
                []
                None
                Pfunction_cases (lib/ident.ml[348,10265+2]..[355,10407+73])
                  [
                    <case>
                      pattern (lib/ident.ml[349,10276+4]..[350,10288+12])
                        Ppat_or
                        pattern (lib/ident.ml[349,10276+4]..[349,10276+11])
                          Ppat_construct "Local" (lib/ident.ml[349,10276+4]..[349,10276+9])
                          Some
                            []
                            pattern (lib/ident.ml[349,10276+10]..[349,10276+11])
                              Ppat_any
                        pattern (lib/ident.ml[350,10288+4]..[350,10288+12])
                          Ppat_construct "Scoped" (lib/ident.ml[350,10288+4]..[350,10288+10])
                          Some
                            []
                            pattern (lib/ident.ml[350,10288+11]..[350,10288+12])
                              Ppat_any
                      expression (lib/ident.ml[351,10304+6]..[353,10343+46])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/ident.ml[351,10304+10]..[351,10304+15])
                              Ppat_var "stamp" (lib/ident.ml[351,10304+10]..[351,10304+15])
                            expression (lib/ident.ml[351,10304+18]..[351,10304+20])
                              Pexp_apply
                              expression (lib/ident.ml[351,10304+18]..[351,10304+19])
                                Pexp_ident "!" (lib/ident.ml[351,10304+18]..[351,10304+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[351,10304+19]..[351,10304+20])
                                    Pexp_ident "c" (lib/ident.ml[351,10304+19]..[351,10304+20])
                              ]
                        ]
                        expression (lib/ident.ml[352,10328+6]..[353,10343+46])
                          Pexp_sequence
                          expression (lib/ident.ml[352,10328+6]..[352,10328+12])
                            Pexp_apply
                            expression (lib/ident.ml[352,10328+6]..[352,10328+10])
                              Pexp_ident "decr" (lib/ident.ml[352,10328+6]..[352,10328+10])
                            [
                              <arg>
                              Nolabel
                                expression (lib/ident.ml[352,10328+11]..[352,10328+12])
                                  Pexp_ident "c" (lib/ident.ml[352,10328+11]..[352,10328+12])
                            ]
                          expression (lib/ident.ml[353,10343+6]..[353,10343+46])
                            Pexp_construct "Local" (lib/ident.ml[353,10343+6]..[353,10343+11])
                            Some
                              expression (lib/ident.ml[353,10343+12]..[353,10343+46])
                                Pexp_record
                                [
                                  "name" (lib/ident.ml[353,10343+14]..[353,10343+18])
                                    expression (lib/ident.ml[353,10343+21]..[353,10343+29])
                                      Pexp_ident "key_name" (lib/ident.ml[353,10343+21]..[353,10343+29])
                                  "stamp" (lib/ident.ml[353,10343+31]..[353,10343+36])
                                    expression (lib/ident.ml[353,10343+39]..[353,10343+44])
                                      Pexp_ident "stamp" (lib/ident.ml[353,10343+39]..[353,10343+44])
                                ]
                                None
                    <case>
                      pattern (lib/ident.ml[354,10390+4]..[354,10390+13])
                        Ppat_var "global_id" (lib/ident.ml[354,10390+4]..[354,10390+13])
                      expression (lib/ident.ml[355,10407+6]..[355,10407+73])
                        Pexp_apply
                        expression (lib/ident.ml[355,10407+6]..[355,10407+23])
                          Pexp_ident "Misc.fatal_errorf" (lib/ident.ml[355,10407+6]..[355,10407+23])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[355,10407+24]..[355,10407+56])
                              Pexp_constant PConst_string("Ident.make_key_generator () %s",(lib/ident.ml[355,10407+25]..[355,10407+55]),None)
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[355,10407+57]..[355,10407+73])
                              Pexp_apply
                              expression (lib/ident.ml[355,10407+58]..[355,10407+62])
                                Pexp_ident "name" (lib/ident.ml[355,10407+58]..[355,10407+62])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/ident.ml[355,10407+63]..[355,10407+72])
                                    Pexp_ident "global_id" (lib/ident.ml[355,10407+63]..[355,10407+72])
                              ]
                        ]
                  ]
    ]
  structure_item (lib/ident.ml[357,10482+0]..[374,10921+71])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[357,10482+4]..[357,10482+11])
          Ppat_var "compare" (lib/ident.ml[357,10482+4]..[357,10482+11])
        expression (lib/ident.ml[357,10482+12]..[374,10921+71]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[357,10482+12]..[357,10482+13])
              Nolabel
              None
              pattern (lib/ident.ml[357,10482+12]..[357,10482+13])
                Ppat_var "x" (lib/ident.ml[357,10482+12]..[357,10482+13])
            Pparam_val (lib/ident.ml[357,10482+14]..[357,10482+15])
              Nolabel
              None
              pattern (lib/ident.ml[357,10482+14]..[357,10482+15])
                Ppat_var "y" (lib/ident.ml[357,10482+14]..[357,10482+15])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[358,10500+2]..[374,10921+71])
              Pexp_match
              expression (lib/ident.ml[358,10500+8]..[358,10500+12])
                Pexp_tuple
                [
                  expression (lib/ident.ml[358,10500+8]..[358,10500+9])
                    Pexp_ident "x" (lib/ident.ml[358,10500+8]..[358,10500+9])
                  expression (lib/ident.ml[358,10500+11]..[358,10500+12])
                    Pexp_ident "y" (lib/ident.ml[358,10500+11]..[358,10500+12])
                ]
              [
                <case>
                  pattern (lib/ident.ml[359,10518+4]..[359,10518+20])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[359,10518+4]..[359,10518+11])
                        Ppat_construct "Local" (lib/ident.ml[359,10518+4]..[359,10518+9])
                        Some
                          []
                          pattern (lib/ident.ml[359,10518+10]..[359,10518+11])
                            Ppat_var "x" (lib/ident.ml[359,10518+10]..[359,10518+11])
                      pattern (lib/ident.ml[359,10518+13]..[359,10518+20])
                        Ppat_construct "Local" (lib/ident.ml[359,10518+13]..[359,10518+18])
                        Some
                          []
                          pattern (lib/ident.ml[359,10518+19]..[359,10518+20])
                            Ppat_var "y" (lib/ident.ml[359,10518+19]..[359,10518+20])
                    ]
                  expression (lib/ident.ml[360,10542+6]..[362,10600+32])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/ident.ml[360,10542+10]..[360,10542+11])
                          Ppat_var "c" (lib/ident.ml[360,10542+10]..[360,10542+11])
                        expression (lib/ident.ml[360,10542+14]..[360,10542+31])
                          Pexp_apply
                          expression (lib/ident.ml[360,10542+22]..[360,10542+23])
                            Pexp_ident "-" (lib/ident.ml[360,10542+22]..[360,10542+23])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[360,10542+14]..[360,10542+21])
                                Pexp_field
                                expression (lib/ident.ml[360,10542+14]..[360,10542+15])
                                  Pexp_ident "x" (lib/ident.ml[360,10542+14]..[360,10542+15])
                                "stamp" (lib/ident.ml[360,10542+16]..[360,10542+21])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[360,10542+24]..[360,10542+31])
                                Pexp_field
                                expression (lib/ident.ml[360,10542+24]..[360,10542+25])
                                  Pexp_ident "y" (lib/ident.ml[360,10542+24]..[360,10542+25])
                                "stamp" (lib/ident.ml[360,10542+26]..[360,10542+31])
                          ]
                    ]
                    expression (lib/ident.ml[361,10577+6]..[362,10600+32])
                      Pexp_ifthenelse
                      expression (lib/ident.ml[361,10577+9]..[361,10577+15])
                        Pexp_apply
                        expression (lib/ident.ml[361,10577+11]..[361,10577+13])
                          Pexp_ident "<>" (lib/ident.ml[361,10577+11]..[361,10577+13])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[361,10577+9]..[361,10577+10])
                              Pexp_ident "c" (lib/ident.ml[361,10577+9]..[361,10577+10])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[361,10577+14]..[361,10577+15])
                              Pexp_constant PConst_int (0,None)
                        ]
                      expression (lib/ident.ml[361,10577+21]..[361,10577+22])
                        Pexp_ident "c" (lib/ident.ml[361,10577+21]..[361,10577+22])
                      Some
                        expression (lib/ident.ml[362,10600+11]..[362,10600+32])
                          Pexp_apply
                          expression (lib/ident.ml[362,10600+11]..[362,10600+18])
                            Pexp_ident "compare" (lib/ident.ml[362,10600+11]..[362,10600+18])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[362,10600+19]..[362,10600+25])
                                Pexp_field
                                expression (lib/ident.ml[362,10600+19]..[362,10600+20])
                                  Pexp_ident "x" (lib/ident.ml[362,10600+19]..[362,10600+20])
                                "name" (lib/ident.ml[362,10600+21]..[362,10600+25])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[362,10600+26]..[362,10600+32])
                                Pexp_field
                                expression (lib/ident.ml[362,10600+26]..[362,10600+27])
                                  Pexp_ident "y" (lib/ident.ml[362,10600+26]..[362,10600+27])
                                "name" (lib/ident.ml[362,10600+28]..[362,10600+32])
                          ]
                <case>
                  pattern (lib/ident.ml[363,10633+4]..[363,10633+14])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[363,10633+4]..[363,10633+11])
                        Ppat_construct "Local" (lib/ident.ml[363,10633+4]..[363,10633+9])
                        Some
                          []
                          pattern (lib/ident.ml[363,10633+10]..[363,10633+11])
                            Ppat_any
                      pattern (lib/ident.ml[363,10633+13]..[363,10633+14])
                        Ppat_any
                    ]
                  expression (lib/ident.ml[363,10633+18]..[363,10633+19])
                    Pexp_constant PConst_int (1,None)
                <case>
                  pattern (lib/ident.ml[364,10653+4]..[364,10653+14])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[364,10653+4]..[364,10653+5])
                        Ppat_any
                      pattern (lib/ident.ml[364,10653+7]..[364,10653+14])
                        Ppat_construct "Local" (lib/ident.ml[364,10653+7]..[364,10653+12])
                        Some
                          []
                          pattern (lib/ident.ml[364,10653+13]..[364,10653+14])
                            Ppat_any
                    ]
                  expression (lib/ident.ml[364,10653+18]..[364,10653+22])
                    Pexp_constant PConst_int (-1,None)
                <case>
                  pattern (lib/ident.ml[365,10676+4]..[365,10676+22])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[365,10676+4]..[365,10676+12])
                        Ppat_construct "Scoped" (lib/ident.ml[365,10676+4]..[365,10676+10])
                        Some
                          []
                          pattern (lib/ident.ml[365,10676+11]..[365,10676+12])
                            Ppat_var "x" (lib/ident.ml[365,10676+11]..[365,10676+12])
                      pattern (lib/ident.ml[365,10676+14]..[365,10676+22])
                        Ppat_construct "Scoped" (lib/ident.ml[365,10676+14]..[365,10676+20])
                        Some
                          []
                          pattern (lib/ident.ml[365,10676+21]..[365,10676+22])
                            Ppat_var "y" (lib/ident.ml[365,10676+21]..[365,10676+22])
                    ]
                  expression (lib/ident.ml[366,10702+6]..[368,10760+32])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/ident.ml[366,10702+10]..[366,10702+11])
                          Ppat_var "c" (lib/ident.ml[366,10702+10]..[366,10702+11])
                        expression (lib/ident.ml[366,10702+14]..[366,10702+31])
                          Pexp_apply
                          expression (lib/ident.ml[366,10702+22]..[366,10702+23])
                            Pexp_ident "-" (lib/ident.ml[366,10702+22]..[366,10702+23])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[366,10702+14]..[366,10702+21])
                                Pexp_field
                                expression (lib/ident.ml[366,10702+14]..[366,10702+15])
                                  Pexp_ident "x" (lib/ident.ml[366,10702+14]..[366,10702+15])
                                "stamp" (lib/ident.ml[366,10702+16]..[366,10702+21])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[366,10702+24]..[366,10702+31])
                                Pexp_field
                                expression (lib/ident.ml[366,10702+24]..[366,10702+25])
                                  Pexp_ident "y" (lib/ident.ml[366,10702+24]..[366,10702+25])
                                "stamp" (lib/ident.ml[366,10702+26]..[366,10702+31])
                          ]
                    ]
                    expression (lib/ident.ml[367,10737+6]..[368,10760+32])
                      Pexp_ifthenelse
                      expression (lib/ident.ml[367,10737+9]..[367,10737+15])
                        Pexp_apply
                        expression (lib/ident.ml[367,10737+11]..[367,10737+13])
                          Pexp_ident "<>" (lib/ident.ml[367,10737+11]..[367,10737+13])
                        [
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[367,10737+9]..[367,10737+10])
                              Pexp_ident "c" (lib/ident.ml[367,10737+9]..[367,10737+10])
                          <arg>
                          Nolabel
                            expression (lib/ident.ml[367,10737+14]..[367,10737+15])
                              Pexp_constant PConst_int (0,None)
                        ]
                      expression (lib/ident.ml[367,10737+21]..[367,10737+22])
                        Pexp_ident "c" (lib/ident.ml[367,10737+21]..[367,10737+22])
                      Some
                        expression (lib/ident.ml[368,10760+11]..[368,10760+32])
                          Pexp_apply
                          expression (lib/ident.ml[368,10760+11]..[368,10760+18])
                            Pexp_ident "compare" (lib/ident.ml[368,10760+11]..[368,10760+18])
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[368,10760+19]..[368,10760+25])
                                Pexp_field
                                expression (lib/ident.ml[368,10760+19]..[368,10760+20])
                                  Pexp_ident "x" (lib/ident.ml[368,10760+19]..[368,10760+20])
                                "name" (lib/ident.ml[368,10760+21]..[368,10760+25])
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[368,10760+26]..[368,10760+32])
                                Pexp_field
                                expression (lib/ident.ml[368,10760+26]..[368,10760+27])
                                  Pexp_ident "y" (lib/ident.ml[368,10760+26]..[368,10760+27])
                                "name" (lib/ident.ml[368,10760+28]..[368,10760+32])
                          ]
                <case>
                  pattern (lib/ident.ml[369,10793+4]..[369,10793+15])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[369,10793+4]..[369,10793+12])
                        Ppat_construct "Scoped" (lib/ident.ml[369,10793+4]..[369,10793+10])
                        Some
                          []
                          pattern (lib/ident.ml[369,10793+11]..[369,10793+12])
                            Ppat_any
                      pattern (lib/ident.ml[369,10793+14]..[369,10793+15])
                        Ppat_any
                    ]
                  expression (lib/ident.ml[369,10793+19]..[369,10793+20])
                    Pexp_constant PConst_int (1,None)
                <case>
                  pattern (lib/ident.ml[370,10814+4]..[370,10814+15])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[370,10814+4]..[370,10814+5])
                        Ppat_any
                      pattern (lib/ident.ml[370,10814+7]..[370,10814+15])
                        Ppat_construct "Scoped" (lib/ident.ml[370,10814+7]..[370,10814+13])
                        Some
                          []
                          pattern (lib/ident.ml[370,10814+14]..[370,10814+15])
                            Ppat_any
                    ]
                  expression (lib/ident.ml[370,10814+19]..[370,10814+23])
                    Pexp_constant PConst_int (-1,None)
                <case>
                  pattern (lib/ident.ml[371,10838+4]..[371,10838+22])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[371,10838+4]..[371,10838+12])
                        Ppat_construct "Global" (lib/ident.ml[371,10838+4]..[371,10838+10])
                        Some
                          []
                          pattern (lib/ident.ml[371,10838+11]..[371,10838+12])
                            Ppat_var "x" (lib/ident.ml[371,10838+11]..[371,10838+12])
                      pattern (lib/ident.ml[371,10838+14]..[371,10838+22])
                        Ppat_construct "Global" (lib/ident.ml[371,10838+14]..[371,10838+20])
                        Some
                          []
                          pattern (lib/ident.ml[371,10838+21]..[371,10838+22])
                            Ppat_var "y" (lib/ident.ml[371,10838+21]..[371,10838+22])
                    ]
                  expression (lib/ident.ml[371,10838+26]..[371,10838+37])
                    Pexp_apply
                    expression (lib/ident.ml[371,10838+26]..[371,10838+33])
                      Pexp_ident "compare" (lib/ident.ml[371,10838+26]..[371,10838+33])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[371,10838+34]..[371,10838+35])
                          Pexp_ident "x" (lib/ident.ml[371,10838+34]..[371,10838+35])
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[371,10838+36]..[371,10838+37])
                          Pexp_ident "y" (lib/ident.ml[371,10838+36]..[371,10838+37])
                    ]
                <case>
                  pattern (lib/ident.ml[372,10876+4]..[372,10876+15])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[372,10876+4]..[372,10876+12])
                        Ppat_construct "Global" (lib/ident.ml[372,10876+4]..[372,10876+10])
                        Some
                          []
                          pattern (lib/ident.ml[372,10876+11]..[372,10876+12])
                            Ppat_any
                      pattern (lib/ident.ml[372,10876+14]..[372,10876+15])
                        Ppat_any
                    ]
                  expression (lib/ident.ml[372,10876+19]..[372,10876+20])
                    Pexp_constant PConst_int (1,None)
                <case>
                  pattern (lib/ident.ml[373,10897+4]..[373,10897+15])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[373,10897+4]..[373,10897+5])
                        Ppat_any
                      pattern (lib/ident.ml[373,10897+7]..[373,10897+15])
                        Ppat_construct "Global" (lib/ident.ml[373,10897+7]..[373,10897+13])
                        Some
                          []
                          pattern (lib/ident.ml[373,10897+14]..[373,10897+15])
                            Ppat_any
                    ]
                  expression (lib/ident.ml[373,10897+19]..[373,10897+23])
                    Pexp_constant PConst_int (-1,None)
                <case>
                  pattern (lib/ident.ml[374,10921+4]..[374,10921+54])
                    Ppat_tuple
                    [
                      pattern (lib/ident.ml[374,10921+4]..[374,10921+28])
                        Ppat_construct "Predef" (lib/ident.ml[374,10921+4]..[374,10921+10])
                        Some
                          []
                          pattern (lib/ident.ml[374,10921+11]..[374,10921+28])
                            Ppat_record Open
                            [
                              "stamp" (lib/ident.ml[374,10921+13]..[374,10921+18])
                                pattern (lib/ident.ml[374,10921+21]..[374,10921+23])
                                  Ppat_var "s1" (lib/ident.ml[374,10921+21]..[374,10921+23])
                            ]
                      pattern (lib/ident.ml[374,10921+30]..[374,10921+54])
                        Ppat_construct "Predef" (lib/ident.ml[374,10921+30]..[374,10921+36])
                        Some
                          []
                          pattern (lib/ident.ml[374,10921+37]..[374,10921+54])
                            Ppat_record Open
                            [
                              "stamp" (lib/ident.ml[374,10921+39]..[374,10921+44])
                                pattern (lib/ident.ml[374,10921+47]..[374,10921+49])
                                  Ppat_var "s2" (lib/ident.ml[374,10921+47]..[374,10921+49])
                            ]
                    ]
                  expression (lib/ident.ml[374,10921+58]..[374,10921+71])
                    Pexp_apply
                    expression (lib/ident.ml[374,10921+58]..[374,10921+65])
                      Pexp_ident "compare" (lib/ident.ml[374,10921+58]..[374,10921+65])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[374,10921+66]..[374,10921+68])
                          Pexp_ident "s1" (lib/ident.ml[374,10921+66]..[374,10921+68])
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[374,10921+69]..[374,10921+71])
                          Pexp_ident "s2" (lib/ident.ml[374,10921+69]..[374,10921+71])
                    ]
              ]
    ]
  structure_item (lib/ident.ml[376,10994+0]..[376,10994+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[376,10994+4]..[376,10994+10])
          Ppat_var "output" (lib/ident.ml[376,10994+4]..[376,10994+10])
        expression (lib/ident.ml[376,10994+11]..[376,10994+52]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[376,10994+11]..[376,10994+13])
              Nolabel
              None
              pattern (lib/ident.ml[376,10994+11]..[376,10994+13])
                Ppat_var "oc" (lib/ident.ml[376,10994+11]..[376,10994+13])
            Pparam_val (lib/ident.ml[376,10994+14]..[376,10994+16])
              Nolabel
              None
              pattern (lib/ident.ml[376,10994+14]..[376,10994+16])
                Ppat_var "id" (lib/ident.ml[376,10994+14]..[376,10994+16])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[376,10994+19]..[376,10994+52])
              Pexp_apply
              expression (lib/ident.ml[376,10994+19]..[376,10994+32])
                Pexp_ident "output_string" (lib/ident.ml[376,10994+19]..[376,10994+32])
              [
                <arg>
                Nolabel
                  expression (lib/ident.ml[376,10994+33]..[376,10994+35])
                    Pexp_ident "oc" (lib/ident.ml[376,10994+33]..[376,10994+35])
                <arg>
                Nolabel
                  expression (lib/ident.ml[376,10994+36]..[376,10994+52])
                    Pexp_apply
                    expression (lib/ident.ml[376,10994+37]..[376,10994+48])
                      Pexp_ident "unique_name" (lib/ident.ml[376,10994+37]..[376,10994+48])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[376,10994+49]..[376,10994+51])
                          Pexp_ident "id" (lib/ident.ml[376,10994+49]..[376,10994+51])
                    ]
              ]
    ]
  structure_item (lib/ident.ml[377,11047+0]..[377,11047+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[377,11047+4]..[377,11047+8])
          Ppat_var "hash" (lib/ident.ml[377,11047+4]..[377,11047+8])
        expression (lib/ident.ml[377,11047+9]..[377,11047+52]) ghost
          Pexp_function
          [
            Pparam_val (lib/ident.ml[377,11047+9]..[377,11047+10])
              Nolabel
              None
              pattern (lib/ident.ml[377,11047+9]..[377,11047+10])
                Ppat_var "i" (lib/ident.ml[377,11047+9]..[377,11047+10])
          ]
          None
          Pfunction_body
            expression (lib/ident.ml[377,11047+13]..[377,11047+52])
              Pexp_apply
              expression (lib/ident.ml[377,11047+38]..[377,11047+42])
                Pexp_ident "lxor" (lib/ident.ml[377,11047+38]..[377,11047+42])
              [
                <arg>
                Nolabel
                  expression (lib/ident.ml[377,11047+13]..[377,11047+37])
                    Pexp_apply
                    expression (lib/ident.ml[377,11047+14]..[377,11047+23])
                      Pexp_ident "Char.code" (lib/ident.ml[377,11047+14]..[377,11047+23])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[377,11047+24]..[377,11047+36])
                          Pexp_apply
                          expression (lib/ident.ml[377,11047+24]..[377,11047+36]) ghost
                            Pexp_ident "String.get" (lib/ident.ml[377,11047+24]..[377,11047+36]) ghost
                          [
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[377,11047+24]..[377,11047+32])
                                Pexp_apply
                                expression (lib/ident.ml[377,11047+25]..[377,11047+29])
                                  Pexp_ident "name" (lib/ident.ml[377,11047+25]..[377,11047+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/ident.ml[377,11047+30]..[377,11047+31])
                                      Pexp_ident "i" (lib/ident.ml[377,11047+30]..[377,11047+31])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/ident.ml[377,11047+34]..[377,11047+35])
                                Pexp_constant PConst_int (0,None)
                          ]
                    ]
                <arg>
                Nolabel
                  expression (lib/ident.ml[377,11047+43]..[377,11047+52])
                    Pexp_apply
                    expression (lib/ident.ml[377,11047+44]..[377,11047+49])
                      Pexp_ident "stamp" (lib/ident.ml[377,11047+44]..[377,11047+49])
                    [
                      <arg>
                      Nolabel
                        expression (lib/ident.ml[377,11047+50]..[377,11047+51])
                          Pexp_ident "i" (lib/ident.ml[377,11047+50]..[377,11047+51])
                    ]
              ]
    ]
  structure_item (lib/ident.ml[379,11101+0]..[379,11101+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[379,11101+4]..[379,11101+18])
          Ppat_var "original_equal" (lib/ident.ml[379,11101+4]..[379,11101+18])
        expression (lib/ident.ml[379,11101+21]..[379,11101+26])
          Pexp_ident "equal" (lib/ident.ml[379,11101+21]..[379,11101+26])
    ]
  structure_item (lib/ident.ml[388,11338+0]..[388,11338+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[388,11338+4]..[388,11338+9])
          Ppat_var "equal" (lib/ident.ml[388,11338+4]..[388,11338+9])
        expression (lib/ident.ml[388,11338+12]..[388,11338+26])
          Pexp_ident "original_equal" (lib/ident.ml[388,11338+12]..[388,11338+26])
    ]
]

open Local_store
let lowest_scope = 0
let highest_scope = 100000000
type t =
  | Local of {
  name: string ;
  stamp: int } 
  | Scoped of {
  name: string ;
  stamp: int ;
  scope: int } 
  | Global of string 
  | Predef of {
  name: string ;
  stamp: int } 
let currentstamp = s_ref 0
let predefstamp = s_ref 0
let create_scoped ~scope s =
  incr currentstamp; Scoped { name = s; stamp = (!currentstamp); scope }
let create_local s =
  incr currentstamp; Local { name = s; stamp = (!currentstamp) }
let create_predef s =
  incr predefstamp; Predef { name = s; stamp = (!predefstamp) }
let create_persistent s = Global s
let name =
  function
  | Local { name;_} | Scoped { name;_} | Global name | Predef { name;_} ->
      name
let rename =
  function
  | Local { name; stamp = _ } | Scoped { name; stamp = _; scope = _ } ->
      (incr currentstamp; Local { name; stamp = (!currentstamp) })
  | id -> Misc.fatal_errorf "Ident.rename %s" (name id)
let unique_name =
  function
  | Local { name; stamp } | Scoped { name; stamp } ->
      name ^ ("_" ^ (Int.to_string stamp))
  | Global name -> name ^ "_0"
  | Predef { name;_} -> name
let unique_toplevel_name =
  function
  | Local { name; stamp } | Scoped { name; stamp } ->
      name ^ ("/" ^ (Int.to_string stamp))
  | Global name | Predef { name;_} -> name
let persistent = function | Global _ -> true | _ -> false
let equal i1 i2 =
  match (i1, i2) with
  | (Local { name = name1;_}, Local { name = name2;_})
    | (Scoped { name = name1;_}, Scoped { name = name2;_})
    | (Global name1, Global name2) -> name1 = name2
  | (Predef { stamp = s1;_}, Predef { stamp = s2 }) -> s1 = s2
  | _ -> false
let same i1 i2 =
  match (i1, i2) with
  | (Local { stamp = s1;_}, Local { stamp = s2;_})
    | (Scoped { stamp = s1;_}, Scoped { stamp = s2;_})
    | (Predef { stamp = s1;_}, Predef { stamp = s2 }) -> s1 = s2
  | (Global name1, Global name2) -> name1 = name2
  | _ -> false
let stamp = function | Local { stamp;_} | Scoped { stamp;_} -> stamp | _ -> 0
let scope =
  function
  | Scoped { scope;_} -> scope
  | Local _ -> highest_scope
  | Global _ | Predef _ -> lowest_scope
let reinit_level = ref (-1)
let reinit () =
  if (!reinit_level) < 0
  then reinit_level := (!currentstamp)
  else currentstamp := (!reinit_level)
let global =
  function | Local _ | Scoped _ -> false | Global _ | Predef _ -> true
let is_predef = function | Predef _ -> true | _ -> false
let print ~with_scope ppf =
  let open Format in
    (function
     | Global name -> fprintf ppf "%s!" name
     | Predef { name; stamp = n } ->
         fprintf ppf "%s%s!" name
           (if !Clflags.unique_ids then sprintf "/%i" n else "")
     | Local { name; stamp = n } ->
         fprintf ppf "%s%s" name
           (if !Clflags.unique_ids then sprintf "/%i" n else "")
     | Scoped { name; stamp = n; scope } ->
         fprintf ppf "%s%s%s" name
           (if !Clflags.unique_ids then sprintf "/%i" n else "")
           (if with_scope then sprintf "[%i]" scope else ""))
let print_with_scope ppf id = print ~with_scope:true ppf id
let print ppf id = print ~with_scope:false ppf id
type 'a tbl =
  | Empty 
  | Node of 'a tbl * 'a data * 'a tbl * int 
and 'a data = {
  ident: t ;
  data: 'a ;
  previous: 'a data option }
let empty = Empty
let mknode l d r =
  let hl = match l with | Empty -> 0 | Node (_, _, _, h) -> h
  and hr = match r with | Empty -> 0 | Node (_, _, _, h) -> h in
  Node (l, d, r, (if hl >= hr then hl + 1 else hr + 1))
let balance l d r =
  let hl = match l with | Empty -> 0 | Node (_, _, _, h) -> h
  and hr = match r with | Empty -> 0 | Node (_, _, _, h) -> h in
  if hl > (hr + 1)
  then
    match l with
    | Node (ll, ld, lr, _) when
        (match ll with | Empty -> 0 | Node (_, _, _, h) -> h) >=
          (match lr with | Empty -> 0 | Node (_, _, _, h) -> h)
        -> mknode ll ld (mknode lr d r)
    | Node (ll, ld, Node (lrl, lrd, lrr, _), _) ->
        mknode (mknode ll ld lrl) lrd (mknode lrr d r)
    | _ -> assert false
  else
    if hr > (hl + 1)
    then
      (match r with
       | Node (rl, rd, rr, _) when
           (match rr with | Empty -> 0 | Node (_, _, _, h) -> h) >=
             (match rl with | Empty -> 0 | Node (_, _, _, h) -> h)
           -> mknode (mknode l d rl) rd rr
       | Node (Node (rll, rld, rlr, _), rd, rr, _) ->
           mknode (mknode l d rll) rld (mknode rlr rd rr)
       | _ -> assert false)
    else mknode l d r
let rec add id data =
  function
  | Empty -> Node (Empty, { ident = id; data; previous = None }, Empty, 1)
  | Node (l, k, r, h) ->
      let c = String.compare (name id) (name k.ident) in
      if c = 0
      then Node (l, { ident = id; data; previous = (Some k) }, r, h)
      else
        if c < 0
        then balance (add id data l) k r
        else balance l k (add id data r)
let rec min_binding =
  function
  | Empty -> raise Not_found
  | Node (Empty, d, _, _) -> d
  | Node (l, _, _, _) -> min_binding l
let rec remove_min_binding =
  function
  | Empty -> invalid_arg "Map.remove_min_elt"
  | Node (Empty, _, r, _) -> r
  | Node (l, d, r, _) -> balance (remove_min_binding l) d r
let merge t1 t2 =
  match (t1, t2) with
  | (Empty, t) -> t
  | (t, Empty) -> t
  | (_, _) -> let d = min_binding t2 in balance t1 d (remove_min_binding t2)
let rec remove id =
  function
  | Empty -> Empty
  | Node (l, k, r, h) as m ->
      let c = String.compare (name id) (name k.ident) in
      if c = 0
      then
        (match k.previous with
         | None -> merge l r
         | Some k -> Node (l, k, r, h))
      else
        if c < 0
        then (let ll = remove id l in if l == ll then m else balance ll k r)
        else (let rr = remove id r in if r == rr then m else balance l k rr)
let rec find_previous id =
  function
  | None -> raise Not_found
  | Some k -> if same id k.ident then k.data else find_previous id k.previous
let rec find_same id =
  function
  | Empty -> raise Not_found
  | Node (l, k, r, _) ->
      let c = String.compare (name id) (name k.ident) in
      if c = 0
      then (if same id k.ident then k.data else find_previous id k.previous)
      else find_same id (if c < 0 then l else r)
let rec find_name n =
  function
  | Empty -> raise Not_found
  | Node (l, k, r, _) ->
      let c = String.compare n (name k.ident) in
      if c = 0
      then ((k.ident), (k.data))
      else find_name n (if c < 0 then l else r)
let rec get_all =
  function
  | None -> []
  | Some k -> ((k.ident), (k.data)) :: (get_all k.previous)
let rec find_all n =
  function
  | Empty -> []
  | Node (l, k, r, _) ->
      let c = String.compare n (name k.ident) in
      if c = 0
      then ((k.ident), (k.data)) :: (get_all k.previous)
      else find_all n (if c < 0 then l else r)
let get_all_seq k () =
  Seq.unfold (Option.map (fun k -> (((k.ident), (k.data)), (k.previous)))) k
    ()
let rec find_all_seq n tbl () =
  match tbl with
  | Empty -> Seq.Nil
  | Node (l, k, r, _) ->
      let c = String.compare n (name k.ident) in
      if c = 0
      then Seq.Cons (((k.ident), (k.data)), (get_all_seq k.previous))
      else find_all_seq n (if c < 0 then l else r) ()
let rec fold_aux f stack accu =
  function
  | Empty -> (match stack with | [] -> accu | a::l -> fold_aux f l accu a)
  | Node (l, k, r, _) -> fold_aux f (l :: stack) (f k accu) r
let fold_name f tbl accu = fold_aux (fun k -> f k.ident k.data) [] accu tbl
let rec fold_data f d accu =
  match d with
  | None -> accu
  | Some k -> f k.ident k.data (fold_data f k.previous accu)
let fold_all f tbl accu =
  fold_aux (fun k -> fold_data f (Some k)) [] accu tbl
let rec iter f =
  function
  | Empty -> ()
  | Node (l, k, r, _) -> (iter f l; f k.ident k.data; iter f r)
let key_name = ""
let make_key_generator () =
  let c = ref 1 in
  (function
   | Local _ | Scoped _ ->
       let stamp = !c in (decr c; Local { name = key_name; stamp })
   | global_id ->
       Misc.fatal_errorf "Ident.make_key_generator () %s" (name global_id))
let compare x y =
  match (x, y) with
  | (Local x, Local y) ->
      let c = x.stamp - y.stamp in
      if c <> 0 then c else compare x.name y.name
  | (Local _, _) -> 1
  | (_, Local _) -> (-1)
  | (Scoped x, Scoped y) ->
      let c = x.stamp - y.stamp in
      if c <> 0 then c else compare x.name y.name
  | (Scoped _, _) -> 1
  | (_, Scoped _) -> (-1)
  | (Global x, Global y) -> compare x y
  | (Global _, _) -> 1
  | (_, Global _) -> (-1)
  | (Predef { stamp = s1;_}, Predef { stamp = s2;_}) -> compare s1 s2
let output oc id = output_string oc (unique_name id)
let hash i = (Char.code ((name i).[0])) lxor (stamp i)
let original_equal = equal
let equal = original_equal
[
  structure_item (lib/ident.ml[16,1079+0]..lib/ident.ml[16,1079+16])
    Tstr_open Fresh
    module_expr (lib/ident.ml[16,1079+5]..lib/ident.ml[16,1079+16])
      Tmod_ident "Ocaml_ocaml_types!.Local_store"
  structure_item (lib/ident.ml[18,1097+0]..lib/ident.ml[18,1097+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[18,1097+4]..lib/ident.ml[18,1097+16])
          Tpat_var "lowest_scope/304"
        expression (lib/ident.ml[18,1097+20]..lib/ident.ml[18,1097+21])
          Texp_constant Const_int 0
    ]
  structure_item (lib/ident.ml[19,1119+0]..lib/ident.ml[19,1119+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[19,1119+4]..lib/ident.ml[19,1119+17])
          Tpat_var "highest_scope/305"
        expression (lib/ident.ml[19,1119+20]..lib/ident.ml[19,1119+29])
          Texp_constant Const_int 100000000
    ]
  structure_item (lib/ident.ml[21,1150+0]..lib/ident.ml[25,1277+42])
    Tstr_type Rec
    [
      type_declaration t/306 (lib/ident.ml[21,1150+0]..lib/ident.ml[25,1277+42])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/ident.ml[22,1159+2]..lib/ident.ml[22,1159+41])
                Local/307
                [
                  (lib/ident.ml[22,1159+15]..lib/ident.ml[22,1159+28])
                    Immutable
                    name/308                    core_type (lib/ident.ml[22,1159+21]..lib/ident.ml[22,1159+27])
                      Ttyp_poly
                      core_type (lib/ident.ml[22,1159+21]..lib/ident.ml[22,1159+27])
                        Ttyp_constr "string/15!"
                        []
                  (lib/ident.ml[22,1159+29]..lib/ident.ml[22,1159+39])
                    Immutable
                    stamp/309                    core_type (lib/ident.ml[22,1159+36]..lib/ident.ml[22,1159+39])
                      Ttyp_poly
                      core_type (lib/ident.ml[22,1159+36]..lib/ident.ml[22,1159+39])
                        Ttyp_constr "int/1!"
                        []
                ]
                None
              (lib/ident.ml[23,1201+2]..lib/ident.ml[23,1201+54])
                Scoped/310
                [
                  (lib/ident.ml[23,1201+16]..lib/ident.ml[23,1201+29])
                    Immutable
                    name/311                    core_type (lib/ident.ml[23,1201+22]..lib/ident.ml[23,1201+28])
                      Ttyp_poly
                      core_type (lib/ident.ml[23,1201+22]..lib/ident.ml[23,1201+28])
                        Ttyp_constr "string/15!"
                        []
                  (lib/ident.ml[23,1201+30]..lib/ident.ml[23,1201+41])
                    Immutable
                    stamp/312                    core_type (lib/ident.ml[23,1201+37]..lib/ident.ml[23,1201+40])
                      Ttyp_poly
                      core_type (lib/ident.ml[23,1201+37]..lib/ident.ml[23,1201+40])
                        Ttyp_constr "int/1!"
                        []
                  (lib/ident.ml[23,1201+42]..lib/ident.ml[23,1201+52])
                    Immutable
                    scope/313                    core_type (lib/ident.ml[23,1201+49]..lib/ident.ml[23,1201+52])
                      Ttyp_poly
                      core_type (lib/ident.ml[23,1201+49]..lib/ident.ml[23,1201+52])
                        Ttyp_constr "int/1!"
                        []
                ]
                None
              (lib/ident.ml[24,1256+2]..lib/ident.ml[24,1256+20])
                Global/314
                [
                  core_type (lib/ident.ml[24,1256+14]..lib/ident.ml[24,1256+20])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/ident.ml[25,1277+2]..lib/ident.ml[25,1277+42])
                Predef/315
                [
                  (lib/ident.ml[25,1277+16]..lib/ident.ml[25,1277+29])
                    Immutable
                    name/316                    core_type (lib/ident.ml[25,1277+22]..lib/ident.ml[25,1277+28])
                      Ttyp_poly
                      core_type (lib/ident.ml[25,1277+22]..lib/ident.ml[25,1277+28])
                        Ttyp_constr "string/15!"
                        []
                  (lib/ident.ml[25,1277+30]..lib/ident.ml[25,1277+40])
                    Immutable
                    stamp/317                    core_type (lib/ident.ml[25,1277+37]..lib/ident.ml[25,1277+40])
                      Ttyp_poly
                      core_type (lib/ident.ml[25,1277+37]..lib/ident.ml[25,1277+40])
                        Ttyp_constr "int/1!"
                        []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/ident.ml[31,1495+0]..lib/ident.ml[31,1495+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[31,1495+4]..lib/ident.ml[31,1495+16])
          Tpat_var "currentstamp/318"
        expression (lib/ident.ml[31,1495+19]..lib/ident.ml[31,1495+26])
          Texp_apply
          expression (lib/ident.ml[31,1495+19]..lib/ident.ml[31,1495+24])
            Texp_ident "Ocaml_ocaml_types!.Local_store.s_ref"
          [
            <arg>
              Nolabel
              expression (lib/ident.ml[31,1495+25]..lib/ident.ml[31,1495+26])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (lib/ident.ml[32,1522+0]..lib/ident.ml[32,1522+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[32,1522+4]..lib/ident.ml[32,1522+15])
          Tpat_var "predefstamp/319"
        expression (lib/ident.ml[32,1522+18]..lib/ident.ml[32,1522+25])
          Texp_apply
          expression (lib/ident.ml[32,1522+18]..lib/ident.ml[32,1522+23])
            Texp_ident "Ocaml_ocaml_types!.Local_store.s_ref"
          [
            <arg>
              Nolabel
              expression (lib/ident.ml[32,1522+24]..lib/ident.ml[32,1522+25])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (lib/ident.ml[34,1549+0]..lib/ident.ml[36,1599+51])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[34,1549+4]..lib/ident.ml[34,1549+17])
          Tpat_var "create_scoped/320"
        expression (lib/ident.ml[34,1549+18]..lib/ident.ml[36,1599+51]) ghost
          Texp_function
          [
            Labelled "scope"
            Param_pat
              pattern (lib/ident.ml[34,1549+19]..lib/ident.ml[34,1549+24])
                Tpat_var "scope/322"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[34,1549+25]..lib/ident.ml[34,1549+26])
                Tpat_var "s/323"
          ]
          Tfunction_body
            expression (lib/ident.ml[35,1578+2]..lib/ident.ml[36,1599+51])
              Texp_sequence
              expression (lib/ident.ml[35,1578+2]..lib/ident.ml[35,1578+19])
                Texp_apply
                expression (lib/ident.ml[35,1578+2]..lib/ident.ml[35,1578+6])
                  Texp_ident "Stdlib!.incr"
                [
                  <arg>
                    Nolabel
                    expression (lib/ident.ml[35,1578+7]..lib/ident.ml[35,1578+19])
                      Texp_ident "currentstamp/318"
                ]
              expression (lib/ident.ml[36,1599+2]..lib/ident.ml[36,1599+51])
                Texp_construct "Scoped"
                [
                  expression (lib/ident.ml[36,1599+9]..lib/ident.ml[36,1599+51])
                    Texp_record
                      fields =
                        [
                          "name"
                            expression (lib/ident.ml[36,1599+18]..lib/ident.ml[36,1599+19])
                              Texp_ident "s/323"
                          "stamp"
                            expression (lib/ident.ml[36,1599+29]..lib/ident.ml[36,1599+42])
                              Texp_apply
                              expression (lib/ident.ml[36,1599+29]..lib/ident.ml[36,1599+30])
                                Texp_ident "Stdlib!.!"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[36,1599+30]..lib/ident.ml[36,1599+42])
                                    Texp_ident "currentstamp/318"
                              ]
                          "scope"
                            expression (lib/ident.ml[36,1599+44]..lib/ident.ml[36,1599+49])
                              Texp_ident "scope/322"
                        ]
                      representation =
  Record_inlined 1
                      extended_expression =
                        None
                ]
    ]
  structure_item (lib/ident.ml[38,1652+0]..lib/ident.ml[40,1694+43])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[38,1652+4]..lib/ident.ml[38,1652+16])
          Tpat_var "create_local/324"
        expression (lib/ident.ml[38,1652+17]..lib/ident.ml[40,1694+43]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[38,1652+17]..lib/ident.ml[38,1652+18])
                Tpat_var "s/326"
          ]
          Tfunction_body
            expression (lib/ident.ml[39,1673+2]..lib/ident.ml[40,1694+43])
              Texp_sequence
              expression (lib/ident.ml[39,1673+2]..lib/ident.ml[39,1673+19])
                Texp_apply
                expression (lib/ident.ml[39,1673+2]..lib/ident.ml[39,1673+6])
                  Texp_ident "Stdlib!.incr"
                [
                  <arg>
                    Nolabel
                    expression (lib/ident.ml[39,1673+7]..lib/ident.ml[39,1673+19])
                      Texp_ident "currentstamp/318"
                ]
              expression (lib/ident.ml[40,1694+2]..lib/ident.ml[40,1694+43])
                Texp_construct "Local"
                [
                  expression (lib/ident.ml[40,1694+8]..lib/ident.ml[40,1694+43])
                    Texp_record
                      fields =
                        [
                          "name"
                            expression (lib/ident.ml[40,1694+17]..lib/ident.ml[40,1694+18])
                              Texp_ident "s/326"
                          "stamp"
                            expression (lib/ident.ml[40,1694+28]..lib/ident.ml[40,1694+41])
                              Texp_apply
                              expression (lib/ident.ml[40,1694+28]..lib/ident.ml[40,1694+29])
                                Texp_ident "Stdlib!.!"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[40,1694+29]..lib/ident.ml[40,1694+41])
                                    Texp_ident "currentstamp/318"
                              ]
                        ]
                      representation =
Record_inlined 0
                      extended_expression =
                        None
                ]
    ]
  structure_item (lib/ident.ml[42,1739+0]..lib/ident.ml[44,1781+43])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[42,1739+4]..lib/ident.ml[42,1739+17])
          Tpat_var "create_predef/327"
        expression (lib/ident.ml[42,1739+18]..lib/ident.ml[44,1781+43]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[42,1739+18]..lib/ident.ml[42,1739+19])
                Tpat_var "s/329"
          ]
          Tfunction_body
            expression (lib/ident.ml[43,1761+2]..lib/ident.ml[44,1781+43])
              Texp_sequence
              expression (lib/ident.ml[43,1761+2]..lib/ident.ml[43,1761+18])
                Texp_apply
                expression (lib/ident.ml[43,1761+2]..lib/ident.ml[43,1761+6])
                  Texp_ident "Stdlib!.incr"
                [
                  <arg>
                    Nolabel
                    expression (lib/ident.ml[43,1761+7]..lib/ident.ml[43,1761+18])
                      Texp_ident "predefstamp/319"
                ]
              expression (lib/ident.ml[44,1781+2]..lib/ident.ml[44,1781+43])
                Texp_construct "Predef"
                [
                  expression (lib/ident.ml[44,1781+9]..lib/ident.ml[44,1781+43])
                    Texp_record
                      fields =
                        [
                          "name"
                            expression (lib/ident.ml[44,1781+18]..lib/ident.ml[44,1781+19])
                              Texp_ident "s/329"
                          "stamp"
                            expression (lib/ident.ml[44,1781+29]..lib/ident.ml[44,1781+41])
                              Texp_apply
                              expression (lib/ident.ml[44,1781+29]..lib/ident.ml[44,1781+30])
                                Texp_ident "Stdlib!.!"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[44,1781+30]..lib/ident.ml[44,1781+41])
                                    Texp_ident "predefstamp/319"
                              ]
                        ]
                      representation =
      Record_inlined 3
                      extended_expression =
                        None
                ]
    ]
  structure_item (lib/ident.ml[46,1826+0]..lib/ident.ml[47,1852+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[46,1826+4]..lib/ident.ml[46,1826+21])
          Tpat_var "create_persistent/330"
        expression (lib/ident.ml[46,1826+22]..lib/ident.ml[47,1852+10]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[46,1826+22]..lib/ident.ml[46,1826+23])
                Tpat_var "s/332"
          ]
          Tfunction_body
            expression (lib/ident.ml[47,1852+2]..lib/ident.ml[47,1852+10])
              Texp_construct "Global"
              [
                expression (lib/ident.ml[47,1852+9]..lib/ident.ml[47,1852+10])
                  Texp_ident "s/332"
              ]
    ]
  structure_item (lib/ident.ml[49,1864+0]..lib/ident.ml[53,1945+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[49,1864+4]..lib/ident.ml[49,1864+8])
          Tpat_var "name/333"
        expression (lib/ident.ml[49,1864+11]..lib/ident.ml[53,1945+30])
          Texp_function
          []
          Tfunction_cases (lib/ident.ml[49,1864+11]..lib/ident.ml[53,1945+30])
            [
              <case>
                pattern (lib/ident.ml[50,1884+4]..lib/ident.ml[53,1945+22])
                  Tpat_or
                  pattern (lib/ident.ml[50,1884+4]..lib/ident.ml[52,1929+15])
                    Tpat_or
                    pattern (lib/ident.ml[50,1884+4]..lib/ident.ml[51,1906+22])
                      Tpat_or
                      pattern (lib/ident.ml[50,1884+4]..lib/ident.ml[50,1884+21])
                        Tpat_construct "Local"
                        [
                          pattern (lib/ident.ml[50,1884+10]..lib/ident.ml[50,1884+21])
                            Tpat_record
                            [
                              "name"
                                pattern (lib/ident.ml[50,1884+12]..lib/ident.ml[50,1884+16])
                                  Tpat_var "name/335"
                            ]
                        ]
                        None
                      pattern (lib/ident.ml[51,1906+4]..lib/ident.ml[51,1906+22])
                        Tpat_construct "Scoped"
                        [
                          pattern (lib/ident.ml[51,1906+11]..lib/ident.ml[51,1906+22])
                            Tpat_record
                            [
                              "name"
                                pattern (lib/ident.ml[51,1906+13]..lib/ident.ml[51,1906+17])
                                  Tpat_var "name/335"
                            ]
                        ]
                        None
                    pattern (lib/ident.ml[52,1929+4]..lib/ident.ml[52,1929+15])
                      Tpat_construct "Global"
                      [
                        pattern (lib/ident.ml[52,1929+11]..lib/ident.ml[52,1929+15])
                          Tpat_var "name/335"
                      ]
                      None
                  pattern (lib/ident.ml[53,1945+4]..lib/ident.ml[53,1945+22])
                    Tpat_construct "Predef"
                    [
                      pattern (lib/ident.ml[53,1945+11]..lib/ident.ml[53,1945+22])
                        Tpat_record
                        [
                          "name"
                            pattern (lib/ident.ml[53,1945+13]..lib/ident.ml[53,1945+17])
                              Tpat_var "name/335"
                        ]
                    ]
                    None
                expression (lib/ident.ml[53,1945+26]..lib/ident.ml[53,1945+30])
                  Texp_ident "name/335"
            ]
    ]
  structure_item (lib/ident.ml[55,1977+0]..lib/ident.ml[61,2153+51])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[55,1977+4]..lib/ident.ml[55,1977+10])
          Tpat_var "rename/340"
        expression (lib/ident.ml[55,1977+13]..lib/ident.ml[61,2153+51])
          Texp_function
          []
          Tfunction_cases (lib/ident.ml[55,1977+13]..lib/ident.ml[61,2153+51])
            [
              <case>
                pattern (lib/ident.ml[56,1999+4]..lib/ident.ml[57,2029+41])
                  Tpat_or
                  pattern (lib/ident.ml[56,1999+4]..lib/ident.ml[56,1999+29])
                    Tpat_construct "Local"
                    [
                      pattern (lib/ident.ml[56,1999+10]..lib/ident.ml[56,1999+29])
                        Tpat_record
                        [
                          "name"
                            pattern (lib/ident.ml[56,1999+12]..lib/ident.ml[56,1999+16])
                              Tpat_var "name/342"
                          "stamp"
                            pattern (lib/ident.ml[56,1999+26]..lib/ident.ml[56,1999+27])
                              Tpat_any
                        ]
                    ]
                    None
                  pattern (lib/ident.ml[57,2029+4]..lib/ident.ml[57,2029+41])
                    Tpat_construct "Scoped"
                    [
                      pattern (lib/ident.ml[57,2029+11]..lib/ident.ml[57,2029+41])
                        Tpat_record
                        [
                          "name"
                            pattern (lib/ident.ml[57,2029+13]..lib/ident.ml[57,2029+17])
                              Tpat_var "name/342"
                          "stamp"
                            pattern (lib/ident.ml[57,2029+27]..lib/ident.ml[57,2029+28])
                              Tpat_any
                          "scope"
                            pattern (lib/ident.ml[57,2029+38]..lib/ident.ml[57,2029+39])
                              Tpat_any
                        ]
                    ]
                    None
                expression (lib/ident.ml[58,2074+6]..lib/ident.ml[59,2099+43])
                  Texp_sequence
                  expression (lib/ident.ml[58,2074+6]..lib/ident.ml[58,2074+23])
                    Texp_apply
                    expression (lib/ident.ml[58,2074+6]..lib/ident.ml[58,2074+10])
                      Texp_ident "Stdlib!.incr"
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[58,2074+11]..lib/ident.ml[58,2074+23])
                          Texp_ident "currentstamp/318"
                    ]
                  expression (lib/ident.ml[59,2099+6]..lib/ident.ml[59,2099+43])
                    Texp_construct "Local"
                    [
                      expression (lib/ident.ml[59,2099+12]..lib/ident.ml[59,2099+43])
                        Texp_record
                          fields =
                            [
                              "name"
                                expression (lib/ident.ml[59,2099+14]..lib/ident.ml[59,2099+18])
                                  Texp_ident "name/342"
                              "stamp"
                                expression (lib/ident.ml[59,2099+28]..lib/ident.ml[59,2099+41])
                                  Texp_apply
                                  expression (lib/ident.ml[59,2099+28]..lib/ident.ml[59,2099+29])
                                    Texp_ident "Stdlib!.!"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[59,2099+29]..lib/ident.ml[59,2099+41])
                                        Texp_ident "currentstamp/318"
                                  ]
                            ]
                          representation =
Record_inlined 0
                          extended_expression =
                            None
                    ]
              <case>
                pattern (lib/ident.ml[60,2143+4]..lib/ident.ml[60,2143+6])
                  Tpat_var "id/344"
                expression (lib/ident.ml[61,2153+6]..lib/ident.ml[61,2153+51])
                  Texp_apply
                  expression (lib/ident.ml[61,2153+6]..lib/ident.ml[61,2153+23])
                    Texp_ident "Ocaml_ocaml_types!.Misc.fatal_errorf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[61,2153+24]..lib/ident.ml[61,2153+41])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/ident.ml[61,2153+24]..lib/ident.ml[61,2153+41]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/ident.ml[61,2153+24]..lib/ident.ml[61,2153+41]) ghost
                                Texp_constant Const_string("Ident.rename ",(lib/ident.ml[61,2153+24]..lib/ident.ml[61,2153+41]) ghost,None)
                              expression (lib/ident.ml[61,2153+24]..lib/ident.ml[61,2153+41]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/ident.ml[61,2153+24]..lib/ident.ml[61,2153+41]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/ident.ml[61,2153+24]..lib/ident.ml[61,2153+41]) ghost
                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                    []
                                ]
                            ]
                          expression (lib/ident.ml[61,2153+24]..lib/ident.ml[61,2153+41]) ghost
                            Texp_constant Const_string("Ident.rename %s",(lib/ident.ml[61,2153+24]..lib/ident.ml[61,2153+41]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[61,2153+42]..lib/ident.ml[61,2153+51])
                        Texp_apply
                        expression (lib/ident.ml[61,2153+43]..lib/ident.ml[61,2153+47])
                          Texp_ident "name/333"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[61,2153+48]..lib/ident.ml[61,2153+50])
                              Texp_ident "id/344"
                        ]
                  ]
            ]
    ]
  structure_item (lib/ident.ml[63,2206+0]..lib/ident.ml[74,2738+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[63,2206+4]..lib/ident.ml[63,2206+15])
          Tpat_var "unique_name/443"
        expression (lib/ident.ml[63,2206+18]..lib/ident.ml[74,2738+10])
          Texp_function
          []
          Tfunction_cases (lib/ident.ml[63,2206+18]..lib/ident.ml[74,2738+10])
            [
              <case>
                pattern (lib/ident.ml[64,2233+4]..lib/ident.ml[65,2259+26])
                  Tpat_or
                  pattern (lib/ident.ml[64,2233+4]..lib/ident.ml[64,2233+25])
                    Tpat_construct "Local"
                    [
                      pattern (lib/ident.ml[64,2233+10]..lib/ident.ml[64,2233+25])
                        Tpat_record
                        [
                          "name"
                            pattern (lib/ident.ml[64,2233+12]..lib/ident.ml[64,2233+16])
                              Tpat_var "name/445"
                          "stamp"
                            pattern (lib/ident.ml[64,2233+18]..lib/ident.ml[64,2233+23])
                              Tpat_var "stamp/446"
                        ]
                    ]
                    None
                  pattern (lib/ident.ml[65,2259+4]..lib/ident.ml[65,2259+26])
                    Tpat_construct "Scoped"
                    [
                      pattern (lib/ident.ml[65,2259+11]..lib/ident.ml[65,2259+26])
                        Tpat_record
                        [
                          "name"
                            pattern (lib/ident.ml[65,2259+13]..lib/ident.ml[65,2259+17])
                              Tpat_var "name/445"
                          "stamp"
                            pattern (lib/ident.ml[65,2259+19]..lib/ident.ml[65,2259+24])
                              Tpat_var "stamp/446"
                        ]
                    ]
                    None
                expression (lib/ident.ml[65,2259+30]..lib/ident.ml[65,2259+62])
                  Texp_apply
                  expression (lib/ident.ml[65,2259+35]..lib/ident.ml[65,2259+36])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[65,2259+30]..lib/ident.ml[65,2259+34])
                        Texp_ident "name/445"
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[65,2259+37]..lib/ident.ml[65,2259+62])
                        Texp_apply
                        expression (lib/ident.ml[65,2259+41]..lib/ident.ml[65,2259+42])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[65,2259+37]..lib/ident.ml[65,2259+40])
                              Texp_constant Const_string("_",(lib/ident.ml[65,2259+38]..lib/ident.ml[65,2259+39]),None)
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[65,2259+43]..lib/ident.ml[65,2259+62])
                              Texp_apply
                              expression (lib/ident.ml[65,2259+43]..lib/ident.ml[65,2259+56])
                                Texp_ident "Stdlib!.Int.to_string"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[65,2259+57]..lib/ident.ml[65,2259+62])
                                    Texp_ident "stamp/446"
                              ]
                        ]
                  ]
              <case>
                pattern (lib/ident.ml[66,2322+4]..lib/ident.ml[66,2322+15])
                  Tpat_construct "Global"
                  [
                    pattern (lib/ident.ml[66,2322+11]..lib/ident.ml[66,2322+15])
                      Tpat_var "name/449"
                  ]
                  None
                expression (lib/ident.ml[70,2562+6]..lib/ident.ml[70,2562+17])
                  Texp_apply
                  expression (lib/ident.ml[70,2562+11]..lib/ident.ml[70,2562+12])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[70,2562+6]..lib/ident.ml[70,2562+10])
                        Texp_ident "name/449"
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[70,2562+13]..lib/ident.ml[70,2562+17])
                        Texp_constant Const_string("_0",(lib/ident.ml[70,2562+14]..lib/ident.ml[70,2562+16]),None)
                  ]
              <case>
                pattern (lib/ident.ml[71,2580+4]..lib/ident.ml[71,2580+22])
                  Tpat_construct "Predef"
                  [
                    pattern (lib/ident.ml[71,2580+11]..lib/ident.ml[71,2580+22])
                      Tpat_record
                      [
                        "name"
                          pattern (lib/ident.ml[71,2580+13]..lib/ident.ml[71,2580+17])
                            Tpat_var "name/450"
                      ]
                  ]
                  None
                expression (lib/ident.ml[74,2738+6]..lib/ident.ml[74,2738+10])
                  Texp_ident "name/450"
            ]
    ]
  structure_item (lib/ident.ml[76,2750+0]..lib/ident.ml[80,2891+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[76,2750+4]..lib/ident.ml[76,2750+24])
          Tpat_var "unique_toplevel_name/483"
        expression (lib/ident.ml[76,2750+27]..lib/ident.ml[80,2891+30])
          Texp_function
          []
          Tfunction_cases (lib/ident.ml[76,2750+27]..lib/ident.ml[80,2891+30])
            [
              <case>
                pattern (lib/ident.ml[77,2786+4]..lib/ident.ml[78,2812+26])
                  Tpat_or
                  pattern (lib/ident.ml[77,2786+4]..lib/ident.ml[77,2786+25])
                    Tpat_construct "Local"
                    [
                      pattern (lib/ident.ml[77,2786+10]..lib/ident.ml[77,2786+25])
                        Tpat_record
                        [
                          "name"
                            pattern (lib/ident.ml[77,2786+12]..lib/ident.ml[77,2786+16])
                              Tpat_var "name/485"
                          "stamp"
                            pattern (lib/ident.ml[77,2786+18]..lib/ident.ml[77,2786+23])
                              Tpat_var "stamp/486"
                        ]
                    ]
                    None
                  pattern (lib/ident.ml[78,2812+4]..lib/ident.ml[78,2812+26])
                    Tpat_construct "Scoped"
                    [
                      pattern (lib/ident.ml[78,2812+11]..lib/ident.ml[78,2812+26])
                        Tpat_record
                        [
                          "name"
                            pattern (lib/ident.ml[78,2812+13]..lib/ident.ml[78,2812+17])
                              Tpat_var "name/485"
                          "stamp"
                            pattern (lib/ident.ml[78,2812+19]..lib/ident.ml[78,2812+24])
                              Tpat_var "stamp/486"
                        ]
                    ]
                    None
                expression (lib/ident.ml[78,2812+30]..lib/ident.ml[78,2812+62])
                  Texp_apply
                  expression (lib/ident.ml[78,2812+35]..lib/ident.ml[78,2812+36])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[78,2812+30]..lib/ident.ml[78,2812+34])
                        Texp_ident "name/485"
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[78,2812+37]..lib/ident.ml[78,2812+62])
                        Texp_apply
                        expression (lib/ident.ml[78,2812+41]..lib/ident.ml[78,2812+42])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[78,2812+37]..lib/ident.ml[78,2812+40])
                              Texp_constant Const_string("/",(lib/ident.ml[78,2812+38]..lib/ident.ml[78,2812+39]),None)
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[78,2812+43]..lib/ident.ml[78,2812+62])
                              Texp_apply
                              expression (lib/ident.ml[78,2812+43]..lib/ident.ml[78,2812+56])
                                Texp_ident "Stdlib!.Int.to_string"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[78,2812+57]..lib/ident.ml[78,2812+62])
                                    Texp_ident "stamp/486"
                              ]
                        ]
                  ]
              <case>
                pattern (lib/ident.ml[79,2875+4]..lib/ident.ml[80,2891+22])
                  Tpat_or
                  pattern (lib/ident.ml[79,2875+4]..lib/ident.ml[79,2875+15])
                    Tpat_construct "Global"
                    [
                      pattern (lib/ident.ml[79,2875+11]..lib/ident.ml[79,2875+15])
                        Tpat_var "name/489"
                    ]
                    None
                  pattern (lib/ident.ml[80,2891+4]..lib/ident.ml[80,2891+22])
                    Tpat_construct "Predef"
                    [
                      pattern (lib/ident.ml[80,2891+11]..lib/ident.ml[80,2891+22])
                        Tpat_record
                        [
                          "name"
                            pattern (lib/ident.ml[80,2891+13]..lib/ident.ml[80,2891+17])
                              Tpat_var "name/489"
                        ]
                    ]
                    None
                expression (lib/ident.ml[80,2891+26]..lib/ident.ml[80,2891+30])
                  Texp_ident "name/489"
            ]
    ]
  structure_item (lib/ident.ml[82,2923+0]..lib/ident.ml[84,2970+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[82,2923+4]..lib/ident.ml[82,2923+14])
          Tpat_var "persistent/492"
        expression (lib/ident.ml[82,2923+17]..lib/ident.ml[84,2970+14])
          Texp_function
          []
          Tfunction_cases (lib/ident.ml[82,2923+17]..lib/ident.ml[84,2970+14])
            [
              <case>
                pattern (lib/ident.ml[83,2949+4]..lib/ident.ml[83,2949+12])
                  Tpat_construct "Global"
                  [
                    pattern (lib/ident.ml[83,2949+11]..lib/ident.ml[83,2949+12])
                      Tpat_any
                  ]
                  None
                expression (lib/ident.ml[83,2949+16]..lib/ident.ml[83,2949+20])
                  Texp_construct "true"
                  []
              <case>
                pattern (lib/ident.ml[84,2970+4]..lib/ident.ml[84,2970+5])
                  Tpat_any
                expression (lib/ident.ml[84,2970+9]..lib/ident.ml[84,2970+14])
                  Texp_construct "false"
                  []
            ]
    ]
  structure_item (lib/ident.ml[86,2986+0]..lib/ident.ml[96,3349+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[86,2986+4]..lib/ident.ml[86,2986+9])
          Tpat_var "equal/495"
        expression (lib/ident.ml[86,2986+10]..lib/ident.ml[96,3349+11]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[86,2986+10]..lib/ident.ml[86,2986+12])
                Tpat_var "i1/497"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[86,2986+13]..lib/ident.ml[86,2986+15])
                Tpat_var "i2/498"
          ]
          Tfunction_body
            expression (lib/ident.ml[87,3004+2]..lib/ident.ml[96,3349+11])
              Texp_match
              expression (lib/ident.ml[87,3004+8]..lib/ident.ml[87,3004+14])
                Texp_tuple
                [
                  expression (lib/ident.ml[87,3004+8]..lib/ident.ml[87,3004+10])
                    Texp_ident "i1/497"
                  expression (lib/ident.ml[87,3004+12]..lib/ident.ml[87,3004+14])
                    Texp_ident "i2/498"
                ]
              [
                <case>
                  pattern (lib/ident.ml[88,3024+4]..lib/ident.ml[90,3140+30])
                    Tpat_or
                    pattern (lib/ident.ml[88,3024+4]..lib/ident.ml[89,3081+58])
                      Tpat_or
                      pattern (lib/ident.ml[88,3024+4]..lib/ident.ml[88,3024+56])
                        Tpat_value
                        pattern (lib/ident.ml[88,3024+4]..lib/ident.ml[88,3024+56])
                          Tpat_tuple
                          [
                            pattern (lib/ident.ml[88,3024+4]..lib/ident.ml[88,3024+29])
                              Tpat_construct "Local"
                              [
                                pattern (lib/ident.ml[88,3024+10]..lib/ident.ml[88,3024+29])
                                  Tpat_record
                                  [
                                    "name"
                                      pattern (lib/ident.ml[88,3024+19]..lib/ident.ml[88,3024+24])
                                        Tpat_var "name1/499"
                                  ]
                              ]
                              None
                            pattern (lib/ident.ml[88,3024+31]..lib/ident.ml[88,3024+56])
                              Tpat_construct "Local"
                              [
                                pattern (lib/ident.ml[88,3024+37]..lib/ident.ml[88,3024+56])
                                  Tpat_record
                                  [
                                    "name"
                                      pattern (lib/ident.ml[88,3024+46]..lib/ident.ml[88,3024+51])
                                        Tpat_var "name2/500"
                                  ]
                              ]
                              None
                          ]
                      pattern (lib/ident.ml[89,3081+4]..lib/ident.ml[89,3081+58])
                        Tpat_value
                        pattern (lib/ident.ml[89,3081+4]..lib/ident.ml[89,3081+58])
                          Tpat_tuple
                          [
                            pattern (lib/ident.ml[89,3081+4]..lib/ident.ml[89,3081+30])
                              Tpat_construct "Scoped"
                              [
                                pattern (lib/ident.ml[89,3081+11]..lib/ident.ml[89,3081+30])
                                  Tpat_record
                                  [
                                    "name"
                                      pattern (lib/ident.ml[89,3081+20]..lib/ident.ml[89,3081+25])
                                        Tpat_var "name1/499"
                                  ]
                              ]
                              None
                            pattern (lib/ident.ml[89,3081+32]..lib/ident.ml[89,3081+58])
                              Tpat_construct "Scoped"
                              [
                                pattern (lib/ident.ml[89,3081+39]..lib/ident.ml[89,3081+58])
                                  Tpat_record
                                  [
                                    "name"
                                      pattern (lib/ident.ml[89,3081+48]..lib/ident.ml[89,3081+53])
                                        Tpat_var "name2/500"
                                  ]
                              ]
                              None
                          ]
                    pattern (lib/ident.ml[90,3140+4]..lib/ident.ml[90,3140+30])
                      Tpat_value
                      pattern (lib/ident.ml[90,3140+4]..lib/ident.ml[90,3140+30])
                        Tpat_tuple
                        [
                          pattern (lib/ident.ml[90,3140+4]..lib/ident.ml[90,3140+16])
                            Tpat_construct "Global"
                            [
                              pattern (lib/ident.ml[90,3140+11]..lib/ident.ml[90,3140+16])
                                Tpat_var "name1/499"
                            ]
                            None
                          pattern (lib/ident.ml[90,3140+18]..lib/ident.ml[90,3140+30])
                            Tpat_construct "Global"
                            [
                              pattern (lib/ident.ml[90,3140+25]..lib/ident.ml[90,3140+30])
                                Tpat_var "name2/500"
                            ]
                            None
                        ]
                  expression (lib/ident.ml[91,3174+6]..lib/ident.ml[91,3174+19])
                    Texp_apply
                    expression (lib/ident.ml[91,3174+12]..lib/ident.ml[91,3174+13])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[91,3174+6]..lib/ident.ml[91,3174+11])
                          Texp_ident "name1/499"
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[91,3174+14]..lib/ident.ml[91,3174+19])
                          Texp_ident "name2/500"
                    ]
                <case>
                  pattern (lib/ident.ml[92,3194+4]..lib/ident.ml[92,3194+51])
                    Tpat_value
                    pattern (lib/ident.ml[92,3194+4]..lib/ident.ml[92,3194+51])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[92,3194+4]..lib/ident.ml[92,3194+28])
                          Tpat_construct "Predef"
                          [
                            pattern (lib/ident.ml[92,3194+11]..lib/ident.ml[92,3194+28])
                              Tpat_record
                              [
                                "stamp"
                                  pattern (lib/ident.ml[92,3194+21]..lib/ident.ml[92,3194+23])
                                    Tpat_var "s1/505"
                              ]
                          ]
                          None
                        pattern (lib/ident.ml[92,3194+30]..lib/ident.ml[92,3194+51])
                          Tpat_construct "Predef"
                          [
                            pattern (lib/ident.ml[92,3194+37]..lib/ident.ml[92,3194+51])
                              Tpat_record
                              [
                                "stamp"
                                  pattern (lib/ident.ml[92,3194+47]..lib/ident.ml[92,3194+49])
                                    Tpat_var "s2/506"
                              ]
                          ]
                          None
                      ]
                  expression (lib/ident.ml[94,3326+6]..lib/ident.ml[94,3326+13])
                    Texp_apply
                    expression (lib/ident.ml[94,3326+9]..lib/ident.ml[94,3326+10])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[94,3326+6]..lib/ident.ml[94,3326+8])
                          Texp_ident "s1/505"
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[94,3326+11]..lib/ident.ml[94,3326+13])
                          Texp_ident "s2/506"
                    ]
                <case>
                  pattern (lib/ident.ml[95,3340+4]..lib/ident.ml[95,3340+5])
                    Tpat_value
                    pattern (lib/ident.ml[95,3340+4]..lib/ident.ml[95,3340+5])
                      Tpat_any
                  expression (lib/ident.ml[96,3349+6]..lib/ident.ml[96,3349+11])
                    Texp_construct "false"
                    []
              ]
    ]
  structure_item (lib/ident.ml[98,3362+0]..lib/ident.ml[107,3639+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[98,3362+4]..lib/ident.ml[98,3362+8])
          Tpat_var "same/507"
        expression (lib/ident.ml[98,3362+9]..lib/ident.ml[107,3639+11]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[98,3362+9]..lib/ident.ml[98,3362+11])
                Tpat_var "i1/509"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[98,3362+12]..lib/ident.ml[98,3362+14])
                Tpat_var "i2/510"
          ]
          Tfunction_body
            expression (lib/ident.ml[99,3379+2]..lib/ident.ml[107,3639+11])
              Texp_match
              expression (lib/ident.ml[99,3379+8]..lib/ident.ml[99,3379+14])
                Texp_tuple
                [
                  expression (lib/ident.ml[99,3379+8]..lib/ident.ml[99,3379+10])
                    Texp_ident "i1/509"
                  expression (lib/ident.ml[99,3379+12]..lib/ident.ml[99,3379+14])
                    Texp_ident "i2/510"
                ]
              [
                <case>
                  pattern (lib/ident.ml[100,3399+4]..lib/ident.ml[102,3507+51])
                    Tpat_or
                    pattern (lib/ident.ml[100,3399+4]..lib/ident.ml[101,3452+54])
                      Tpat_or
                      pattern (lib/ident.ml[100,3399+4]..lib/ident.ml[100,3399+52])
                        Tpat_value
                        pattern (lib/ident.ml[100,3399+4]..lib/ident.ml[100,3399+52])
                          Tpat_tuple
                          [
                            pattern (lib/ident.ml[100,3399+4]..lib/ident.ml[100,3399+27])
                              Tpat_construct "Local"
                              [
                                pattern (lib/ident.ml[100,3399+10]..lib/ident.ml[100,3399+27])
                                  Tpat_record
                                  [
                                    "stamp"
                                      pattern (lib/ident.ml[100,3399+20]..lib/ident.ml[100,3399+22])
                                        Tpat_var "s1/511"
                                  ]
                              ]
                              None
                            pattern (lib/ident.ml[100,3399+29]..lib/ident.ml[100,3399+52])
                              Tpat_construct "Local"
                              [
                                pattern (lib/ident.ml[100,3399+35]..lib/ident.ml[100,3399+52])
                                  Tpat_record
                                  [
                                    "stamp"
                                      pattern (lib/ident.ml[100,3399+45]..lib/ident.ml[100,3399+47])
                                        Tpat_var "s2/512"
                                  ]
                              ]
                              None
                          ]
                      pattern (lib/ident.ml[101,3452+4]..lib/ident.ml[101,3452+54])
                        Tpat_value
                        pattern (lib/ident.ml[101,3452+4]..lib/ident.ml[101,3452+54])
                          Tpat_tuple
                          [
                            pattern (lib/ident.ml[101,3452+4]..lib/ident.ml[101,3452+28])
                              Tpat_construct "Scoped"
                              [
                                pattern (lib/ident.ml[101,3452+11]..lib/ident.ml[101,3452+28])
                                  Tpat_record
                                  [
                                    "stamp"
                                      pattern (lib/ident.ml[101,3452+21]..lib/ident.ml[101,3452+23])
                                        Tpat_var "s1/511"
                                  ]
                              ]
                              None
                            pattern (lib/ident.ml[101,3452+30]..lib/ident.ml[101,3452+54])
                              Tpat_construct "Scoped"
                              [
                                pattern (lib/ident.ml[101,3452+37]..lib/ident.ml[101,3452+54])
                                  Tpat_record
                                  [
                                    "stamp"
                                      pattern (lib/ident.ml[101,3452+47]..lib/ident.ml[101,3452+49])
                                        Tpat_var "s2/512"
                                  ]
                              ]
                              None
                          ]
                    pattern (lib/ident.ml[102,3507+4]..lib/ident.ml[102,3507+51])
                      Tpat_value
                      pattern (lib/ident.ml[102,3507+4]..lib/ident.ml[102,3507+51])
                        Tpat_tuple
                        [
                          pattern (lib/ident.ml[102,3507+4]..lib/ident.ml[102,3507+28])
                            Tpat_construct "Predef"
                            [
                              pattern (lib/ident.ml[102,3507+11]..lib/ident.ml[102,3507+28])
                                Tpat_record
                                [
                                  "stamp"
                                    pattern (lib/ident.ml[102,3507+21]..lib/ident.ml[102,3507+23])
                                      Tpat_var "s1/511"
                                ]
                            ]
                            None
                          pattern (lib/ident.ml[102,3507+30]..lib/ident.ml[102,3507+51])
                            Tpat_construct "Predef"
                            [
                              pattern (lib/ident.ml[102,3507+37]..lib/ident.ml[102,3507+51])
                                Tpat_record
                                [
                                  "stamp"
                                    pattern (lib/ident.ml[102,3507+47]..lib/ident.ml[102,3507+49])
                                      Tpat_var "s2/512"
                                ]
                            ]
                            None
                        ]
                  expression (lib/ident.ml[103,3562+6]..lib/ident.ml[103,3562+13])
                    Texp_apply
                    expression (lib/ident.ml[103,3562+9]..lib/ident.ml[103,3562+10])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[103,3562+6]..lib/ident.ml[103,3562+8])
                          Texp_ident "s1/511"
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[103,3562+11]..lib/ident.ml[103,3562+13])
                          Texp_ident "s2/512"
                    ]
                <case>
                  pattern (lib/ident.ml[104,3576+4]..lib/ident.ml[104,3576+30])
                    Tpat_value
                    pattern (lib/ident.ml[104,3576+4]..lib/ident.ml[104,3576+30])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[104,3576+4]..lib/ident.ml[104,3576+16])
                          Tpat_construct "Global"
                          [
                            pattern (lib/ident.ml[104,3576+11]..lib/ident.ml[104,3576+16])
                              Tpat_var "name1/517"
                          ]
                          None
                        pattern (lib/ident.ml[104,3576+18]..lib/ident.ml[104,3576+30])
                          Tpat_construct "Global"
                          [
                            pattern (lib/ident.ml[104,3576+25]..lib/ident.ml[104,3576+30])
                              Tpat_var "name2/518"
                          ]
                          None
                      ]
                  expression (lib/ident.ml[105,3610+6]..lib/ident.ml[105,3610+19])
                    Texp_apply
                    expression (lib/ident.ml[105,3610+12]..lib/ident.ml[105,3610+13])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[105,3610+6]..lib/ident.ml[105,3610+11])
                          Texp_ident "name1/517"
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[105,3610+14]..lib/ident.ml[105,3610+19])
                          Texp_ident "name2/518"
                    ]
                <case>
                  pattern (lib/ident.ml[106,3630+4]..lib/ident.ml[106,3630+5])
                    Tpat_value
                    pattern (lib/ident.ml[106,3630+4]..lib/ident.ml[106,3630+5])
                      Tpat_any
                  expression (lib/ident.ml[107,3639+6]..lib/ident.ml[107,3639+11])
                    Texp_construct "false"
                    []
              ]
    ]
  structure_item (lib/ident.ml[109,3652+0]..lib/ident.ml[112,3729+10])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[109,3652+4]..lib/ident.ml[109,3652+9])
          Tpat_var "stamp/519"
        expression (lib/ident.ml[109,3652+12]..lib/ident.ml[112,3729+10])
          Texp_function
          []
          Tfunction_cases (lib/ident.ml[109,3652+12]..lib/ident.ml[112,3729+10])
            [
              <case>
                pattern (lib/ident.ml[110,3673+4]..lib/ident.ml[111,3696+23])
                  Tpat_or
                  pattern (lib/ident.ml[110,3673+4]..lib/ident.ml[110,3673+22])
                    Tpat_construct "Local"
                    [
                      pattern (lib/ident.ml[110,3673+10]..lib/ident.ml[110,3673+22])
                        Tpat_record
                        [
                          "stamp"
                            pattern (lib/ident.ml[110,3673+12]..lib/ident.ml[110,3673+17])
                              Tpat_var "stamp/521"
                        ]
                    ]
                    None
                  pattern (lib/ident.ml[111,3696+4]..lib/ident.ml[111,3696+23])
                    Tpat_construct "Scoped"
                    [
                      pattern (lib/ident.ml[111,3696+11]..lib/ident.ml[111,3696+23])
                        Tpat_record
                        [
                          "stamp"
                            pattern (lib/ident.ml[111,3696+13]..lib/ident.ml[111,3696+18])
                              Tpat_var "stamp/521"
                        ]
                    ]
                    None
                expression (lib/ident.ml[111,3696+27]..lib/ident.ml[111,3696+32])
                  Texp_ident "stamp/521"
              <case>
                pattern (lib/ident.ml[112,3729+4]..lib/ident.ml[112,3729+5])
                  Tpat_any
                expression (lib/ident.ml[112,3729+9]..lib/ident.ml[112,3729+10])
                  Texp_constant Const_int 0
            ]
    ]
  structure_item (lib/ident.ml[114,3741+0]..lib/ident.ml[117,3824+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[114,3741+4]..lib/ident.ml[114,3741+9])
          Tpat_var "scope/524"
        expression (lib/ident.ml[114,3741+12]..lib/ident.ml[117,3824+39])
          Texp_function
          []
          Tfunction_cases (lib/ident.ml[114,3741+12]..lib/ident.ml[117,3824+39])
            [
              <case>
                pattern (lib/ident.ml[115,3762+4]..lib/ident.ml[115,3762+23])
                  Tpat_construct "Scoped"
                  [
                    pattern (lib/ident.ml[115,3762+11]..lib/ident.ml[115,3762+23])
                      Tpat_record
                      [
                        "scope"
                          pattern (lib/ident.ml[115,3762+13]..lib/ident.ml[115,3762+18])
                            Tpat_var "scope/526"
                      ]
                  ]
                  None
                expression (lib/ident.ml[115,3762+27]..lib/ident.ml[115,3762+32])
                  Texp_ident "scope/526"
              <case>
                pattern (lib/ident.ml[116,3795+4]..lib/ident.ml[116,3795+11])
                  Tpat_construct "Local"
                  [
                    pattern (lib/ident.ml[116,3795+10]..lib/ident.ml[116,3795+11])
                      Tpat_any
                  ]
                  None
                expression (lib/ident.ml[116,3795+15]..lib/ident.ml[116,3795+28])
                  Texp_ident "highest_scope/305"
              <case>
                pattern (lib/ident.ml[117,3824+4]..lib/ident.ml[117,3824+23])
                  Tpat_or
                  pattern (lib/ident.ml[117,3824+4]..lib/ident.ml[117,3824+12])
                    Tpat_construct "Global"
                    [
                      pattern (lib/ident.ml[117,3824+11]..lib/ident.ml[117,3824+12])
                        Tpat_any
                    ]
                    None
                  pattern (lib/ident.ml[117,3824+15]..lib/ident.ml[117,3824+23])
                    Tpat_construct "Predef"
                    [
                      pattern (lib/ident.ml[117,3824+22]..lib/ident.ml[117,3824+23])
                        Tpat_any
                    ]
                    None
                expression (lib/ident.ml[117,3824+27]..lib/ident.ml[117,3824+39])
                  Texp_ident "lowest_scope/304"
            ]
    ]
  structure_item (lib/ident.ml[119,3865+0]..lib/ident.ml[119,3865+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[119,3865+4]..lib/ident.ml[119,3865+16])
          Tpat_var "reinit_level/528"
        expression (lib/ident.ml[119,3865+19]..lib/ident.ml[119,3865+27])
          Texp_apply
          expression (lib/ident.ml[119,3865+19]..lib/ident.ml[119,3865+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/ident.ml[119,3865+23]..lib/ident.ml[119,3865+27])
                Texp_constant Const_int -1
          ]
    ]
  structure_item (lib/ident.ml[121,3894+0]..lib/ident.ml[124,3970+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[121,3894+4]..lib/ident.ml[121,3894+10])
          Tpat_var "reinit/529"
        expression (lib/ident.ml[121,3894+11]..lib/ident.ml[124,3970+36]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[121,3894+11]..lib/ident.ml[121,3894+13])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/ident.ml[122,3910+2]..lib/ident.ml[124,3970+36])
              Texp_ifthenelse
              expression (lib/ident.ml[122,3910+5]..lib/ident.ml[122,3910+22])
                Texp_apply
                expression (lib/ident.ml[122,3910+19]..lib/ident.ml[122,3910+20])
                  Texp_ident "Stdlib!.<"
                [
                  <arg>
                    Nolabel
                    expression (lib/ident.ml[122,3910+5]..lib/ident.ml[122,3910+18])
                      Texp_apply
                      expression (lib/ident.ml[122,3910+5]..lib/ident.ml[122,3910+6])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[122,3910+6]..lib/ident.ml[122,3910+18])
                            Texp_ident "reinit_level/528"
                      ]
                  <arg>
                    Nolabel
                    expression (lib/ident.ml[122,3910+21]..lib/ident.ml[122,3910+22])
                      Texp_constant Const_int 0
                ]
              expression (lib/ident.ml[123,3933+7]..lib/ident.ml[123,3933+36])
                Texp_apply
                expression (lib/ident.ml[123,3933+20]..lib/ident.ml[123,3933+22])
                  Texp_ident "Stdlib!.:="
                [
                  <arg>
                    Nolabel
                    expression (lib/ident.ml[123,3933+7]..lib/ident.ml[123,3933+19])
                      Texp_ident "reinit_level/528"
                  <arg>
                    Nolabel
                    expression (lib/ident.ml[123,3933+23]..lib/ident.ml[123,3933+36])
                      Texp_apply
                      expression (lib/ident.ml[123,3933+23]..lib/ident.ml[123,3933+24])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[123,3933+24]..lib/ident.ml[123,3933+36])
                            Texp_ident "currentstamp/318"
                      ]
                ]
              Some
                expression (lib/ident.ml[124,3970+7]..lib/ident.ml[124,3970+36])
                  Texp_apply
                  expression (lib/ident.ml[124,3970+20]..lib/ident.ml[124,3970+22])
                    Texp_ident "Stdlib!.:="
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[124,3970+7]..lib/ident.ml[124,3970+19])
                        Texp_ident "currentstamp/318"
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[124,3970+23]..lib/ident.ml[124,3970+36])
                        Texp_apply
                        expression (lib/ident.ml[124,3970+23]..lib/ident.ml[124,3970+24])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[124,3970+24]..lib/ident.ml[124,3970+36])
                              Texp_ident "reinit_level/528"
                        ]
                  ]
    ]
  structure_item (lib/ident.ml[126,4008+0]..lib/ident.ml[130,4077+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[126,4008+4]..lib/ident.ml[126,4008+10])
          Tpat_var "global/532"
        expression (lib/ident.ml[126,4008+13]..lib/ident.ml[130,4077+20])
          Texp_function
          []
          Tfunction_cases (lib/ident.ml[126,4008+13]..lib/ident.ml[130,4077+20])
            [
              <case>
                pattern (lib/ident.ml[127,4030+4]..lib/ident.ml[128,4042+12])
                  Tpat_or
                  pattern (lib/ident.ml[127,4030+4]..lib/ident.ml[127,4030+11])
                    Tpat_construct "Local"
                    [
                      pattern (lib/ident.ml[127,4030+10]..lib/ident.ml[127,4030+11])
                        Tpat_any
                    ]
                    None
                  pattern (lib/ident.ml[128,4042+4]..lib/ident.ml[128,4042+12])
                    Tpat_construct "Scoped"
                    [
                      pattern (lib/ident.ml[128,4042+11]..lib/ident.ml[128,4042+12])
                        Tpat_any
                    ]
                    None
                expression (lib/ident.ml[128,4042+16]..lib/ident.ml[128,4042+21])
                  Texp_construct "false"
                  []
              <case>
                pattern (lib/ident.ml[129,4064+4]..lib/ident.ml[130,4077+12])
                  Tpat_or
                  pattern (lib/ident.ml[129,4064+4]..lib/ident.ml[129,4064+12])
                    Tpat_construct "Global"
                    [
                      pattern (lib/ident.ml[129,4064+11]..lib/ident.ml[129,4064+12])
                        Tpat_any
                    ]
                    None
                  pattern (lib/ident.ml[130,4077+4]..lib/ident.ml[130,4077+12])
                    Tpat_construct "Predef"
                    [
                      pattern (lib/ident.ml[130,4077+11]..lib/ident.ml[130,4077+12])
                        Tpat_any
                    ]
                    None
                expression (lib/ident.ml[130,4077+16]..lib/ident.ml[130,4077+20])
                  Texp_construct "true"
                  []
            ]
    ]
  structure_item (lib/ident.ml[132,4099+0]..lib/ident.ml[134,4145+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[132,4099+4]..lib/ident.ml[132,4099+13])
          Tpat_var "is_predef/535"
        expression (lib/ident.ml[132,4099+16]..lib/ident.ml[134,4145+14])
          Texp_function
          []
          Tfunction_cases (lib/ident.ml[132,4099+16]..lib/ident.ml[134,4145+14])
            [
              <case>
                pattern (lib/ident.ml[133,4124+4]..lib/ident.ml[133,4124+12])
                  Tpat_construct "Predef"
                  [
                    pattern (lib/ident.ml[133,4124+11]..lib/ident.ml[133,4124+12])
                      Tpat_any
                  ]
                  None
                expression (lib/ident.ml[133,4124+16]..lib/ident.ml[133,4124+20])
                  Texp_construct "true"
                  []
              <case>
                pattern (lib/ident.ml[134,4145+4]..lib/ident.ml[134,4145+5])
                  Tpat_any
                expression (lib/ident.ml[134,4145+9]..lib/ident.ml[134,4145+14])
                  Texp_construct "false"
                  []
            ]
    ]
  structure_item (lib/ident.ml[136,4161+0]..lib/ident.ml[149,4650+57])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[136,4161+4]..lib/ident.ml[136,4161+9])
          Tpat_var "print/538"
        expression (lib/ident.ml[136,4161+10]..lib/ident.ml[149,4650+57]) ghost
          Texp_function
          [
            Labelled "with_scope"
            Param_pat
              pattern (lib/ident.ml[136,4161+11]..lib/ident.ml[136,4161+21])
                Tpat_var "with_scope/540"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[136,4161+22]..lib/ident.ml[136,4161+25])
                Tpat_var "ppf/541"
          ]
          Tfunction_body
            expression (lib/ident.ml[137,4189+2]..lib/ident.ml[149,4650+57])
              Texp_open Fresh
              module_expr (lib/ident.ml[137,4189+11]..lib/ident.ml[137,4189+17])
                Tmod_ident "Stdlib!.Format"
              expression (lib/ident.ml[138,4210+2]..lib/ident.ml[149,4650+57])
                Texp_function
                []
                Tfunction_cases (lib/ident.ml[138,4210+2]..lib/ident.ml[149,4650+57])
                  [
                    <case>
                      pattern (lib/ident.ml[139,4221+4]..lib/ident.ml[139,4221+15])
                        Tpat_construct "Global"
                        [
                          pattern (lib/ident.ml[139,4221+11]..lib/ident.ml[139,4221+15])
                            Tpat_var "name/700"
                        ]
                        None
                      expression (lib/ident.ml[139,4221+19]..lib/ident.ml[139,4221+41])
                        Texp_apply
                        expression (lib/ident.ml[139,4221+19]..lib/ident.ml[139,4221+26])
                          Texp_ident "Stdlib!.Format.fprintf"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[139,4221+27]..lib/ident.ml[139,4221+30])
                              Texp_ident "ppf/541"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[139,4221+31]..lib/ident.ml[139,4221+36])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (lib/ident.ml[139,4221+31]..lib/ident.ml[139,4221+36]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String"
                                  [
                                    expression (lib/ident.ml[139,4221+31]..lib/ident.ml[139,4221+36]) ghost
                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                      []
                                    expression (lib/ident.ml[139,4221+31]..lib/ident.ml[139,4221+36]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                      [
                                        expression (lib/ident.ml[139,4221+31]..lib/ident.ml[139,4221+36]) ghost
                                          Texp_constant Const_char 21
                                        expression (lib/ident.ml[139,4221+31]..lib/ident.ml[139,4221+36]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                  ]
                                expression (lib/ident.ml[139,4221+31]..lib/ident.ml[139,4221+36]) ghost
                                  Texp_constant Const_string("%s!",(lib/ident.ml[139,4221+31]..lib/ident.ml[139,4221+36]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[139,4221+37]..lib/ident.ml[139,4221+41])
                              Texp_ident "name/700"
                        ]
                    <case>
                      pattern (lib/ident.ml[140,4263+4]..lib/ident.ml[140,4263+30])
                        Tpat_construct "Predef"
                        [
                          pattern (lib/ident.ml[140,4263+11]..lib/ident.ml[140,4263+30])
                            Tpat_record
                            [
                              "name"
                                pattern (lib/ident.ml[140,4263+13]..lib/ident.ml[140,4263+17])
                                  Tpat_var "name/701"
                              "stamp"
                                pattern (lib/ident.ml[140,4263+27]..lib/ident.ml[140,4263+28])
                                  Tpat_var "n/702"
                            ]
                        ]
                        None
                      expression (lib/ident.ml[141,4297+6]..lib/ident.ml[142,4328+61])
                        Texp_apply
                        expression (lib/ident.ml[141,4297+6]..lib/ident.ml[141,4297+13])
                          Texp_ident "Stdlib!.Format.fprintf"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[141,4297+14]..lib/ident.ml[141,4297+17])
                              Texp_ident "ppf/541"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[141,4297+18]..lib/ident.ml[141,4297+25])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (lib/ident.ml[141,4297+18]..lib/ident.ml[141,4297+25]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String"
                                  [
                                    expression (lib/ident.ml[141,4297+18]..lib/ident.ml[141,4297+25]) ghost
                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                      []
                                    expression (lib/ident.ml[141,4297+18]..lib/ident.ml[141,4297+25]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String"
                                      [
                                        expression (lib/ident.ml[141,4297+18]..lib/ident.ml[141,4297+25]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (lib/ident.ml[141,4297+18]..lib/ident.ml[141,4297+25]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                                          [
                                            expression (lib/ident.ml[141,4297+18]..lib/ident.ml[141,4297+25]) ghost
                                              Texp_constant Const_char 21
                                            expression (lib/ident.ml[141,4297+18]..lib/ident.ml[141,4297+25]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                          ]
                                      ]
                                  ]
                                expression (lib/ident.ml[141,4297+18]..lib/ident.ml[141,4297+25]) ghost
                                  Texp_constant Const_string("%s%s!",(lib/ident.ml[141,4297+18]..lib/ident.ml[141,4297+25]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[141,4297+26]..lib/ident.ml[141,4297+30])
                              Texp_ident "name/701"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[142,4328+8]..lib/ident.ml[142,4328+61])
                              Texp_ifthenelse
                              expression (lib/ident.ml[142,4328+12]..lib/ident.ml[142,4328+31])
                                Texp_apply
                                expression (lib/ident.ml[142,4328+12]..lib/ident.ml[142,4328+13])
                                  Texp_ident "Stdlib!.!"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[142,4328+13]..lib/ident.ml[142,4328+31])
                                      Texp_ident "Ocaml_ocaml_types!.Clflags.unique_ids"
                                ]
                              expression (lib/ident.ml[142,4328+37]..lib/ident.ml[142,4328+52])
                                Texp_apply
                                expression (lib/ident.ml[142,4328+37]..lib/ident.ml[142,4328+44])
                                  Texp_ident "Stdlib!.Format.sprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[142,4328+45]..lib/ident.ml[142,4328+50])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (lib/ident.ml[142,4328+45]..lib/ident.ml[142,4328+50]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                                          [
                                            expression (lib/ident.ml[142,4328+45]..lib/ident.ml[142,4328+50]) ghost
                                              Texp_constant Const_char 2f
                                            expression (lib/ident.ml[142,4328+45]..lib/ident.ml[142,4328+50]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Int"
                                              [
                                                expression (lib/ident.ml[142,4328+45]..lib/ident.ml[142,4328+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Int_i"
                                                  []
                                                expression (lib/ident.ml[142,4328+45]..lib/ident.ml[142,4328+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (lib/ident.ml[142,4328+45]..lib/ident.ml[142,4328+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                                  []
                                                expression (lib/ident.ml[142,4328+45]..lib/ident.ml[142,4328+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                  []
                                              ]
                                          ]
                                        expression (lib/ident.ml[142,4328+45]..lib/ident.ml[142,4328+50]) ghost
                                          Texp_constant Const_string("/%i",(lib/ident.ml[142,4328+45]..lib/ident.ml[142,4328+50]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[142,4328+51]..lib/ident.ml[142,4328+52])
                                      Texp_ident "n/702"
                                ]
                              Some
                                expression (lib/ident.ml[142,4328+58]..lib/ident.ml[142,4328+60])
                                  Texp_constant Const_string("",(lib/ident.ml[142,4328+59]..lib/ident.ml[142,4328+59]),None)
                        ]
                    <case>
                      pattern (lib/ident.ml[143,4390+4]..lib/ident.ml[143,4390+29])
                        Tpat_construct "Local"
                        [
                          pattern (lib/ident.ml[143,4390+10]..lib/ident.ml[143,4390+29])
                            Tpat_record
                            [
                              "name"
                                pattern (lib/ident.ml[143,4390+12]..lib/ident.ml[143,4390+16])
                                  Tpat_var "name/703"
                              "stamp"
                                pattern (lib/ident.ml[143,4390+26]..lib/ident.ml[143,4390+27])
                                  Tpat_var "n/704"
                            ]
                        ]
                        None
                      expression (lib/ident.ml[144,4423+6]..lib/ident.ml[145,4453+61])
                        Texp_apply
                        expression (lib/ident.ml[144,4423+6]..lib/ident.ml[144,4423+13])
                          Texp_ident "Stdlib!.Format.fprintf"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[144,4423+14]..lib/ident.ml[144,4423+17])
                              Texp_ident "ppf/541"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[144,4423+18]..lib/ident.ml[144,4423+24])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (lib/ident.ml[144,4423+18]..lib/ident.ml[144,4423+24]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String"
                                  [
                                    expression (lib/ident.ml[144,4423+18]..lib/ident.ml[144,4423+24]) ghost
                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                      []
                                    expression (lib/ident.ml[144,4423+18]..lib/ident.ml[144,4423+24]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String"
                                      [
                                        expression (lib/ident.ml[144,4423+18]..lib/ident.ml[144,4423+24]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (lib/ident.ml[144,4423+18]..lib/ident.ml[144,4423+24]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                  ]
                                expression (lib/ident.ml[144,4423+18]..lib/ident.ml[144,4423+24]) ghost
                                  Texp_constant Const_string("%s%s",(lib/ident.ml[144,4423+18]..lib/ident.ml[144,4423+24]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[144,4423+25]..lib/ident.ml[144,4423+29])
                              Texp_ident "name/703"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[145,4453+8]..lib/ident.ml[145,4453+61])
                              Texp_ifthenelse
                              expression (lib/ident.ml[145,4453+12]..lib/ident.ml[145,4453+31])
                                Texp_apply
                                expression (lib/ident.ml[145,4453+12]..lib/ident.ml[145,4453+13])
                                  Texp_ident "Stdlib!.!"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[145,4453+13]..lib/ident.ml[145,4453+31])
                                      Texp_ident "Ocaml_ocaml_types!.Clflags.unique_ids"
                                ]
                              expression (lib/ident.ml[145,4453+37]..lib/ident.ml[145,4453+52])
                                Texp_apply
                                expression (lib/ident.ml[145,4453+37]..lib/ident.ml[145,4453+44])
                                  Texp_ident "Stdlib!.Format.sprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[145,4453+45]..lib/ident.ml[145,4453+50])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (lib/ident.ml[145,4453+45]..lib/ident.ml[145,4453+50]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                                          [
                                            expression (lib/ident.ml[145,4453+45]..lib/ident.ml[145,4453+50]) ghost
                                              Texp_constant Const_char 2f
                                            expression (lib/ident.ml[145,4453+45]..lib/ident.ml[145,4453+50]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Int"
                                              [
                                                expression (lib/ident.ml[145,4453+45]..lib/ident.ml[145,4453+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Int_i"
                                                  []
                                                expression (lib/ident.ml[145,4453+45]..lib/ident.ml[145,4453+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (lib/ident.ml[145,4453+45]..lib/ident.ml[145,4453+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                                  []
                                                expression (lib/ident.ml[145,4453+45]..lib/ident.ml[145,4453+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                  []
                                              ]
                                          ]
                                        expression (lib/ident.ml[145,4453+45]..lib/ident.ml[145,4453+50]) ghost
                                          Texp_constant Const_string("/%i",(lib/ident.ml[145,4453+45]..lib/ident.ml[145,4453+50]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[145,4453+51]..lib/ident.ml[145,4453+52])
                                      Texp_ident "n/704"
                                ]
                              Some
                                expression (lib/ident.ml[145,4453+58]..lib/ident.ml[145,4453+60])
                                  Texp_constant Const_string("",(lib/ident.ml[145,4453+59]..lib/ident.ml[145,4453+59]),None)
                        ]
                    <case>
                      pattern (lib/ident.ml[146,4515+4]..lib/ident.ml[146,4515+37])
                        Tpat_construct "Scoped"
                        [
                          pattern (lib/ident.ml[146,4515+11]..lib/ident.ml[146,4515+37])
                            Tpat_record
                            [
                              "name"
                                pattern (lib/ident.ml[146,4515+13]..lib/ident.ml[146,4515+17])
                                  Tpat_var "name/705"
                              "stamp"
                                pattern (lib/ident.ml[146,4515+27]..lib/ident.ml[146,4515+28])
                                  Tpat_var "n/706"
                              "scope"
                                pattern (lib/ident.ml[146,4515+30]..lib/ident.ml[146,4515+35])
                                  Tpat_var "scope/707"
                            ]
                        ]
                        None
                      expression (lib/ident.ml[147,4556+6]..lib/ident.ml[149,4650+57])
                        Texp_apply
                        expression (lib/ident.ml[147,4556+6]..lib/ident.ml[147,4556+13])
                          Texp_ident "Stdlib!.Format.fprintf"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[147,4556+14]..lib/ident.ml[147,4556+17])
                              Texp_ident "ppf/541"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[147,4556+18]..lib/ident.ml[147,4556+26])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (lib/ident.ml[147,4556+18]..lib/ident.ml[147,4556+26]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String"
                                  [
                                    expression (lib/ident.ml[147,4556+18]..lib/ident.ml[147,4556+26]) ghost
                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                      []
                                    expression (lib/ident.ml[147,4556+18]..lib/ident.ml[147,4556+26]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String"
                                      [
                                        expression (lib/ident.ml[147,4556+18]..lib/ident.ml[147,4556+26]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (lib/ident.ml[147,4556+18]..lib/ident.ml[147,4556+26]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String"
                                          [
                                            expression (lib/ident.ml[147,4556+18]..lib/ident.ml[147,4556+26]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                              []
                                            expression (lib/ident.ml[147,4556+18]..lib/ident.ml[147,4556+26]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                          ]
                                      ]
                                  ]
                                expression (lib/ident.ml[147,4556+18]..lib/ident.ml[147,4556+26]) ghost
                                  Texp_constant Const_string("%s%s%s",(lib/ident.ml[147,4556+18]..lib/ident.ml[147,4556+26]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[147,4556+27]..lib/ident.ml[147,4556+31])
                              Texp_ident "name/705"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[148,4588+8]..lib/ident.ml[148,4588+61])
                              Texp_ifthenelse
                              expression (lib/ident.ml[148,4588+12]..lib/ident.ml[148,4588+31])
                                Texp_apply
                                expression (lib/ident.ml[148,4588+12]..lib/ident.ml[148,4588+13])
                                  Texp_ident "Stdlib!.!"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[148,4588+13]..lib/ident.ml[148,4588+31])
                                      Texp_ident "Ocaml_ocaml_types!.Clflags.unique_ids"
                                ]
                              expression (lib/ident.ml[148,4588+37]..lib/ident.ml[148,4588+52])
                                Texp_apply
                                expression (lib/ident.ml[148,4588+37]..lib/ident.ml[148,4588+44])
                                  Texp_ident "Stdlib!.Format.sprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[148,4588+45]..lib/ident.ml[148,4588+50])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (lib/ident.ml[148,4588+45]..lib/ident.ml[148,4588+50]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                                          [
                                            expression (lib/ident.ml[148,4588+45]..lib/ident.ml[148,4588+50]) ghost
                                              Texp_constant Const_char 2f
                                            expression (lib/ident.ml[148,4588+45]..lib/ident.ml[148,4588+50]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Int"
                                              [
                                                expression (lib/ident.ml[148,4588+45]..lib/ident.ml[148,4588+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Int_i"
                                                  []
                                                expression (lib/ident.ml[148,4588+45]..lib/ident.ml[148,4588+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (lib/ident.ml[148,4588+45]..lib/ident.ml[148,4588+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                                  []
                                                expression (lib/ident.ml[148,4588+45]..lib/ident.ml[148,4588+50]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                  []
                                              ]
                                          ]
                                        expression (lib/ident.ml[148,4588+45]..lib/ident.ml[148,4588+50]) ghost
                                          Texp_constant Const_string("/%i",(lib/ident.ml[148,4588+45]..lib/ident.ml[148,4588+50]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[148,4588+51]..lib/ident.ml[148,4588+52])
                                      Texp_ident "n/706"
                                ]
                              Some
                                expression (lib/ident.ml[148,4588+58]..lib/ident.ml[148,4588+60])
                                  Texp_constant Const_string("",(lib/ident.ml[148,4588+59]..lib/ident.ml[148,4588+59]),None)
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[149,4650+8]..lib/ident.ml[149,4650+57])
                              Texp_ifthenelse
                              expression (lib/ident.ml[149,4650+12]..lib/ident.ml[149,4650+22])
                                Texp_ident "with_scope/540"
                              expression (lib/ident.ml[149,4650+28]..lib/ident.ml[149,4650+48])
                                Texp_apply
                                expression (lib/ident.ml[149,4650+28]..lib/ident.ml[149,4650+35])
                                  Texp_ident "Stdlib!.Format.sprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[149,4650+36]..lib/ident.ml[149,4650+42])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (lib/ident.ml[149,4650+36]..lib/ident.ml[149,4650+42]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                                          [
                                            expression (lib/ident.ml[149,4650+36]..lib/ident.ml[149,4650+42]) ghost
                                              Texp_constant Const_char 5b
                                            expression (lib/ident.ml[149,4650+36]..lib/ident.ml[149,4650+42]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Int"
                                              [
                                                expression (lib/ident.ml[149,4650+36]..lib/ident.ml[149,4650+42]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Int_i"
                                                  []
                                                expression (lib/ident.ml[149,4650+36]..lib/ident.ml[149,4650+42]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (lib/ident.ml[149,4650+36]..lib/ident.ml[149,4650+42]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                                  []
                                                expression (lib/ident.ml[149,4650+36]..lib/ident.ml[149,4650+42]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                  [
                                                    expression (lib/ident.ml[149,4650+36]..lib/ident.ml[149,4650+42]) ghost
                                                      Texp_constant Const_char 5d
                                                    expression (lib/ident.ml[149,4650+36]..lib/ident.ml[149,4650+42]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                  ]
                                              ]
                                          ]
                                        expression (lib/ident.ml[149,4650+36]..lib/ident.ml[149,4650+42]) ghost
                                          Texp_constant Const_string("[%i]",(lib/ident.ml[149,4650+36]..lib/ident.ml[149,4650+42]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[149,4650+43]..lib/ident.ml[149,4650+48])
                                      Texp_ident "scope/707"
                                ]
                              Some
                                expression (lib/ident.ml[149,4650+54]..lib/ident.ml[149,4650+56])
                                  Texp_constant Const_string("",(lib/ident.ml[149,4650+55]..lib/ident.ml[149,4650+55]),None)
                        ]
                  ]
    ]
  structure_item (lib/ident.ml[151,4709+0]..lib/ident.ml[151,4709+59])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[151,4709+4]..lib/ident.ml[151,4709+20])
          Tpat_var "print_with_scope/1000"
        expression (lib/ident.ml[151,4709+21]..lib/ident.ml[151,4709+59]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[151,4709+21]..lib/ident.ml[151,4709+24])
                Tpat_var "ppf/1002"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[151,4709+25]..lib/ident.ml[151,4709+27])
                Tpat_var "id/1003"
          ]
          Tfunction_body
            expression (lib/ident.ml[151,4709+30]..lib/ident.ml[151,4709+59])
              Texp_apply
              expression (lib/ident.ml[151,4709+30]..lib/ident.ml[151,4709+35])
                Texp_ident "print/538"
              [
                <arg>
                  Labelled "with_scope"
                  expression (lib/ident.ml[151,4709+48]..lib/ident.ml[151,4709+52])
                    Texp_construct "true"
                    []
                <arg>
                  Nolabel
                  expression (lib/ident.ml[151,4709+53]..lib/ident.ml[151,4709+56])
                    Texp_ident "ppf/1002"
                <arg>
                  Nolabel
                  expression (lib/ident.ml[151,4709+57]..lib/ident.ml[151,4709+59])
                    Texp_ident "id/1003"
              ]
    ]
  structure_item (lib/ident.ml[153,4770+0]..lib/ident.ml[153,4770+49])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[153,4770+4]..lib/ident.ml[153,4770+9])
          Tpat_var "print/1004"
        expression (lib/ident.ml[153,4770+10]..lib/ident.ml[153,4770+49]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[153,4770+10]..lib/ident.ml[153,4770+13])
                Tpat_var "ppf/1005"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[153,4770+14]..lib/ident.ml[153,4770+16])
                Tpat_var "id/1006"
          ]
          Tfunction_body
            expression (lib/ident.ml[153,4770+19]..lib/ident.ml[153,4770+49])
              Texp_apply
              expression (lib/ident.ml[153,4770+19]..lib/ident.ml[153,4770+24])
                Texp_ident "print/538"
              [
                <arg>
                  Labelled "with_scope"
                  expression (lib/ident.ml[153,4770+37]..lib/ident.ml[153,4770+42])
                    Texp_construct "false"
                    []
                <arg>
                  Nolabel
                  expression (lib/ident.ml[153,4770+43]..lib/ident.ml[153,4770+46])
                    Texp_ident "ppf/1005"
                <arg>
                  Nolabel
                  expression (lib/ident.ml[153,4770+47]..lib/ident.ml[153,4770+49])
                    Texp_ident "id/1006"
              ]
    ]
  structure_item (lib/ident.ml[168,5341+0]..lib/ident.ml[175,5452+30])
    Tstr_type Rec
    [
      type_declaration tbl/1007 (lib/ident.ml[168,5341+0]..lib/ident.ml[170,5365+43])
        ptype_params =
          [
            core_type (lib/ident.ml[168,5341+5]..lib/ident.ml[168,5341+7])
              Ttyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/ident.ml[169,5355+4]..lib/ident.ml[169,5355+9])
                Empty/1009
                []
                None
              (lib/ident.ml[170,5365+2]..lib/ident.ml[170,5365+43])
                Node/1010
                [
                  core_type (lib/ident.ml[170,5365+12]..lib/ident.ml[170,5365+18])
                    Ttyp_constr "tbl/1007"
                    [
                      core_type (lib/ident.ml[170,5365+12]..lib/ident.ml[170,5365+14])
                        Ttyp_var a
                    ]
                  core_type (lib/ident.ml[170,5365+21]..lib/ident.ml[170,5365+28])
                    Ttyp_constr "data/1008"
                    [
                      core_type (lib/ident.ml[170,5365+21]..lib/ident.ml[170,5365+23])
                        Ttyp_var a
                    ]
                  core_type (lib/ident.ml[170,5365+31]..lib/ident.ml[170,5365+37])
                    Ttyp_constr "tbl/1007"
                    [
                      core_type (lib/ident.ml[170,5365+31]..lib/ident.ml[170,5365+33])
                        Ttyp_var a
                    ]
                  core_type (lib/ident.ml[170,5365+40]..lib/ident.ml[170,5365+43])
                    Ttyp_constr "int/1!"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration data/1008 (lib/ident.ml[172,5410+0]..lib/ident.ml[175,5452+30])
        ptype_params =
          [
            core_type (lib/ident.ml[172,5410+4]..lib/ident.ml[172,5410+6])
              Ttyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/ident.ml[173,5424+4]..lib/ident.ml[173,5424+13])
                Immutable
                ident/1011                core_type (lib/ident.ml[173,5424+11]..lib/ident.ml[173,5424+12])
                  Ttyp_poly
                  core_type (lib/ident.ml[173,5424+11]..lib/ident.ml[173,5424+12])
                    Ttyp_constr "t/306"
                    []
              (lib/ident.ml[174,5438+4]..lib/ident.ml[174,5438+13])
                Immutable
                data/1012                core_type (lib/ident.ml[174,5438+10]..lib/ident.ml[174,5438+12])
                  Ttyp_poly
                  core_type (lib/ident.ml[174,5438+10]..lib/ident.ml[174,5438+12])
                    Ttyp_var a
              (lib/ident.ml[175,5452+4]..lib/ident.ml[175,5452+28])
                Immutable
                previous/1013                core_type (lib/ident.ml[175,5452+14]..lib/ident.ml[175,5452+28])
                  Ttyp_poly
                  core_type (lib/ident.ml[175,5452+14]..lib/ident.ml[175,5452+28])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/ident.ml[175,5452+14]..lib/ident.ml[175,5452+21])
                        Ttyp_constr "data/1008"
                        [
                          core_type (lib/ident.ml[175,5452+14]..lib/ident.ml[175,5452+16])
                            Ttyp_var a
                        ]
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/ident.ml[177,5484+0]..lib/ident.ml[177,5484+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[177,5484+4]..lib/ident.ml[177,5484+9])
          Tpat_var "empty/1014"
        expression (lib/ident.ml[177,5484+12]..lib/ident.ml[177,5484+17])
          Texp_construct "Empty"
          []
    ]
  structure_item (lib/ident.ml[185,5624+0]..lib/ident.ml[188,5758+54])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[185,5624+4]..lib/ident.ml[185,5624+10])
          Tpat_var "mknode/1015"
        expression (lib/ident.ml[185,5624+11]..lib/ident.ml[188,5758+54]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[185,5624+11]..lib/ident.ml[185,5624+12])
                Tpat_var "l/1017"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[185,5624+13]..lib/ident.ml[185,5624+14])
                Tpat_var "d/1018"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[185,5624+15]..lib/ident.ml[185,5624+16])
                Tpat_var "r/1019"
          ]
          Tfunction_body
            expression (lib/ident.ml[186,5643+2]..lib/ident.ml[188,5758+54])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/ident.ml[186,5643+6]..lib/ident.ml[186,5643+8])
                    Tpat_var "hl/1020"
                  expression (lib/ident.ml[186,5643+11]..lib/ident.ml[186,5643+55])
                    Texp_match
                    expression (lib/ident.ml[186,5643+17]..lib/ident.ml[186,5643+18])
                      Texp_ident "l/1017"
                    [
                      <case>
                        pattern (lib/ident.ml[186,5643+24]..lib/ident.ml[186,5643+29])
                          Tpat_value
                          pattern (lib/ident.ml[186,5643+24]..lib/ident.ml[186,5643+29])
                            Tpat_construct "Empty"
                            []
                            None
                        expression (lib/ident.ml[186,5643+33]..lib/ident.ml[186,5643+34])
                          Texp_constant Const_int 0
                      <case>
                        pattern (lib/ident.ml[186,5643+37]..lib/ident.ml[186,5643+50])
                          Tpat_value
                          pattern (lib/ident.ml[186,5643+37]..lib/ident.ml[186,5643+50])
                            Tpat_construct "Node"
                            [
                              pattern (lib/ident.ml[186,5643+42]..lib/ident.ml[186,5643+43])
                                Tpat_any
                              pattern (lib/ident.ml[186,5643+44]..lib/ident.ml[186,5643+45])
                                Tpat_any
                              pattern (lib/ident.ml[186,5643+46]..lib/ident.ml[186,5643+47])
                                Tpat_any
                              pattern (lib/ident.ml[186,5643+48]..lib/ident.ml[186,5643+49])
                                Tpat_var "h/1022"
                            ]
                            None
                        expression (lib/ident.ml[186,5643+54]..lib/ident.ml[186,5643+55])
                          Texp_ident "h/1022"
                    ]
                <def>
                  pattern (lib/ident.ml[187,5699+6]..lib/ident.ml[187,5699+8])
                    Tpat_var "hr/1021"
                  expression (lib/ident.ml[187,5699+11]..lib/ident.ml[187,5699+55])
                    Texp_match
                    expression (lib/ident.ml[187,5699+17]..lib/ident.ml[187,5699+18])
                      Texp_ident "r/1019"
                    [
                      <case>
                        pattern (lib/ident.ml[187,5699+24]..lib/ident.ml[187,5699+29])
                          Tpat_value
                          pattern (lib/ident.ml[187,5699+24]..lib/ident.ml[187,5699+29])
                            Tpat_construct "Empty"
                            []
                            None
                        expression (lib/ident.ml[187,5699+33]..lib/ident.ml[187,5699+34])
                          Texp_constant Const_int 0
                      <case>
                        pattern (lib/ident.ml[187,5699+37]..lib/ident.ml[187,5699+50])
                          Tpat_value
                          pattern (lib/ident.ml[187,5699+37]..lib/ident.ml[187,5699+50])
                            Tpat_construct "Node"
                            [
                              pattern (lib/ident.ml[187,5699+42]..lib/ident.ml[187,5699+43])
                                Tpat_any
                              pattern (lib/ident.ml[187,5699+44]..lib/ident.ml[187,5699+45])
                                Tpat_any
                              pattern (lib/ident.ml[187,5699+46]..lib/ident.ml[187,5699+47])
                                Tpat_any
                              pattern (lib/ident.ml[187,5699+48]..lib/ident.ml[187,5699+49])
                                Tpat_var "h/1023"
                            ]
                            None
                        expression (lib/ident.ml[187,5699+54]..lib/ident.ml[187,5699+55])
                          Texp_ident "h/1023"
                    ]
              ]
              expression (lib/ident.ml[188,5758+2]..lib/ident.ml[188,5758+54])
                Texp_construct "Node"
                [
                  expression (lib/ident.ml[188,5758+7]..lib/ident.ml[188,5758+8])
                    Texp_ident "l/1017"
                  expression (lib/ident.ml[188,5758+10]..lib/ident.ml[188,5758+11])
                    Texp_ident "d/1018"
                  expression (lib/ident.ml[188,5758+13]..lib/ident.ml[188,5758+14])
                    Texp_ident "r/1019"
                  expression (lib/ident.ml[188,5758+16]..lib/ident.ml[188,5758+53])
                    Texp_ifthenelse
                    expression (lib/ident.ml[188,5758+20]..lib/ident.ml[188,5758+28])
                      Texp_apply
                      expression (lib/ident.ml[188,5758+23]..lib/ident.ml[188,5758+25])
                        Texp_ident "Stdlib!.>="
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[188,5758+20]..lib/ident.ml[188,5758+22])
                            Texp_ident "hl/1020"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[188,5758+26]..lib/ident.ml[188,5758+28])
                            Texp_ident "hr/1021"
                      ]
                    expression (lib/ident.ml[188,5758+34]..lib/ident.ml[188,5758+40])
                      Texp_apply
                      expression (lib/ident.ml[188,5758+37]..lib/ident.ml[188,5758+38])
                        Texp_ident "Stdlib!.+"
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[188,5758+34]..lib/ident.ml[188,5758+36])
                            Texp_ident "hl/1020"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[188,5758+39]..lib/ident.ml[188,5758+40])
                            Texp_constant Const_int 1
                      ]
                    Some
                      expression (lib/ident.ml[188,5758+46]..lib/ident.ml[188,5758+52])
                        Texp_apply
                        expression (lib/ident.ml[188,5758+49]..lib/ident.ml[188,5758+50])
                          Texp_ident "Stdlib!.+"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[188,5758+46]..lib/ident.ml[188,5758+48])
                              Texp_ident "hr/1021"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[188,5758+51]..lib/ident.ml[188,5758+52])
                              Texp_constant Const_int 1
                        ]
                ]
    ]
  structure_item (lib/ident.ml[190,5814+0]..lib/ident.ml[212,6674+16])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[190,5814+4]..lib/ident.ml[190,5814+11])
          Tpat_var "balance/1024"
        expression (lib/ident.ml[190,5814+12]..lib/ident.ml[212,6674+16]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[190,5814+12]..lib/ident.ml[190,5814+13])
                Tpat_var "l/1026"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[190,5814+14]..lib/ident.ml[190,5814+15])
                Tpat_var "d/1027"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[190,5814+16]..lib/ident.ml[190,5814+17])
                Tpat_var "r/1028"
          ]
          Tfunction_body
            expression (lib/ident.ml[191,5834+2]..lib/ident.ml[212,6674+16])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/ident.ml[191,5834+6]..lib/ident.ml[191,5834+8])
                    Tpat_var "hl/1029"
                  expression (lib/ident.ml[191,5834+11]..lib/ident.ml[191,5834+55])
                    Texp_match
                    expression (lib/ident.ml[191,5834+17]..lib/ident.ml[191,5834+18])
                      Texp_ident "l/1026"
                    [
                      <case>
                        pattern (lib/ident.ml[191,5834+24]..lib/ident.ml[191,5834+29])
                          Tpat_value
                          pattern (lib/ident.ml[191,5834+24]..lib/ident.ml[191,5834+29])
                            Tpat_construct "Empty"
                            []
                            None
                        expression (lib/ident.ml[191,5834+33]..lib/ident.ml[191,5834+34])
                          Texp_constant Const_int 0
                      <case>
                        pattern (lib/ident.ml[191,5834+37]..lib/ident.ml[191,5834+50])
                          Tpat_value
                          pattern (lib/ident.ml[191,5834+37]..lib/ident.ml[191,5834+50])
                            Tpat_construct "Node"
                            [
                              pattern (lib/ident.ml[191,5834+42]..lib/ident.ml[191,5834+43])
                                Tpat_any
                              pattern (lib/ident.ml[191,5834+44]..lib/ident.ml[191,5834+45])
                                Tpat_any
                              pattern (lib/ident.ml[191,5834+46]..lib/ident.ml[191,5834+47])
                                Tpat_any
                              pattern (lib/ident.ml[191,5834+48]..lib/ident.ml[191,5834+49])
                                Tpat_var "h/1031"
                            ]
                            None
                        expression (lib/ident.ml[191,5834+54]..lib/ident.ml[191,5834+55])
                          Texp_ident "h/1031"
                    ]
                <def>
                  pattern (lib/ident.ml[192,5890+6]..lib/ident.ml[192,5890+8])
                    Tpat_var "hr/1030"
                  expression (lib/ident.ml[192,5890+11]..lib/ident.ml[192,5890+55])
                    Texp_match
                    expression (lib/ident.ml[192,5890+17]..lib/ident.ml[192,5890+18])
                      Texp_ident "r/1028"
                    [
                      <case>
                        pattern (lib/ident.ml[192,5890+24]..lib/ident.ml[192,5890+29])
                          Tpat_value
                          pattern (lib/ident.ml[192,5890+24]..lib/ident.ml[192,5890+29])
                            Tpat_construct "Empty"
                            []
                            None
                        expression (lib/ident.ml[192,5890+33]..lib/ident.ml[192,5890+34])
                          Texp_constant Const_int 0
                      <case>
                        pattern (lib/ident.ml[192,5890+37]..lib/ident.ml[192,5890+50])
                          Tpat_value
                          pattern (lib/ident.ml[192,5890+37]..lib/ident.ml[192,5890+50])
                            Tpat_construct "Node"
                            [
                              pattern (lib/ident.ml[192,5890+42]..lib/ident.ml[192,5890+43])
                                Tpat_any
                              pattern (lib/ident.ml[192,5890+44]..lib/ident.ml[192,5890+45])
                                Tpat_any
                              pattern (lib/ident.ml[192,5890+46]..lib/ident.ml[192,5890+47])
                                Tpat_any
                              pattern (lib/ident.ml[192,5890+48]..lib/ident.ml[192,5890+49])
                                Tpat_var "h/1032"
                            ]
                            None
                        expression (lib/ident.ml[192,5890+54]..lib/ident.ml[192,5890+55])
                          Texp_ident "h/1032"
                    ]
              ]
              expression (lib/ident.ml[193,5949+2]..lib/ident.ml[212,6674+16])
                Texp_ifthenelse
                expression (lib/ident.ml[193,5949+5]..lib/ident.ml[193,5949+16])
                  Texp_apply
                  expression (lib/ident.ml[193,5949+8]..lib/ident.ml[193,5949+9])
                    Texp_ident "Stdlib!.>"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[193,5949+5]..lib/ident.ml[193,5949+7])
                        Texp_ident "hl/1029"
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[193,5949+10]..lib/ident.ml[193,5949+16])
                        Texp_apply
                        expression (lib/ident.ml[193,5949+13]..lib/ident.ml[193,5949+14])
                          Texp_ident "Stdlib!.+"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[193,5949+10]..lib/ident.ml[193,5949+12])
                              Texp_ident "hr/1030"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[193,5949+15]..lib/ident.ml[193,5949+16])
                              Texp_constant Const_int 1
                        ]
                  ]
                expression (lib/ident.ml[194,5971+4]..lib/ident.ml[201,6281+23])
                  Texp_match
                  expression (lib/ident.ml[194,5971+10]..lib/ident.ml[194,5971+11])
                    Texp_ident "l/1026"
                  [
                    <case>
                      pattern (lib/ident.ml[195,5988+6]..lib/ident.ml[195,5988+26])
                        Tpat_value
                        pattern (lib/ident.ml[195,5988+6]..lib/ident.ml[195,5988+26])
                          Tpat_construct "Node"
                          [
                            pattern (lib/ident.ml[195,5988+12]..lib/ident.ml[195,5988+14])
                              Tpat_var "ll/1033"
                            pattern (lib/ident.ml[195,5988+16]..lib/ident.ml[195,5988+18])
                              Tpat_var "ld/1034"
                            pattern (lib/ident.ml[195,5988+20]..lib/ident.ml[195,5988+22])
                              Tpat_var "lr/1035"
                            pattern (lib/ident.ml[195,5988+24]..lib/ident.ml[195,5988+25])
                              Tpat_any
                          ]
                          None
                      <when>
                        expression (lib/ident.ml[196,6015+11]..lib/ident.ml[197,6077+58])
                          Texp_apply
                          expression (lib/ident.ml[196,6015+59]..lib/ident.ml[196,6015+61])
                            Texp_ident "Stdlib!.>="
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[196,6015+11]..lib/ident.ml[196,6015+58])
                                Texp_match
                                expression (lib/ident.ml[196,6015+18]..lib/ident.ml[196,6015+20])
                                  Texp_ident "ll/1033"
                                [
                                  <case>
                                    pattern (lib/ident.ml[196,6015+26]..lib/ident.ml[196,6015+31])
                                      Tpat_value
                                      pattern (lib/ident.ml[196,6015+26]..lib/ident.ml[196,6015+31])
                                        Tpat_construct "Empty"
                                        []
                                        None
                                    expression (lib/ident.ml[196,6015+35]..lib/ident.ml[196,6015+36])
                                      Texp_constant Const_int 0
                                  <case>
                                    pattern (lib/ident.ml[196,6015+39]..lib/ident.ml[196,6015+52])
                                      Tpat_value
                                      pattern (lib/ident.ml[196,6015+39]..lib/ident.ml[196,6015+52])
                                        Tpat_construct "Node"
                                        [
                                          pattern (lib/ident.ml[196,6015+44]..lib/ident.ml[196,6015+45])
                                            Tpat_any
                                          pattern (lib/ident.ml[196,6015+46]..lib/ident.ml[196,6015+47])
                                            Tpat_any
                                          pattern (lib/ident.ml[196,6015+48]..lib/ident.ml[196,6015+49])
                                            Tpat_any
                                          pattern (lib/ident.ml[196,6015+50]..lib/ident.ml[196,6015+51])
                                            Tpat_var "h/1041"
                                        ]
                                        None
                                    expression (lib/ident.ml[196,6015+56]..lib/ident.ml[196,6015+57])
                                      Texp_ident "h/1041"
                                ]
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[197,6077+11]..lib/ident.ml[197,6077+58])
                                Texp_match
                                expression (lib/ident.ml[197,6077+18]..lib/ident.ml[197,6077+20])
                                  Texp_ident "lr/1035"
                                [
                                  <case>
                                    pattern (lib/ident.ml[197,6077+26]..lib/ident.ml[197,6077+31])
                                      Tpat_value
                                      pattern (lib/ident.ml[197,6077+26]..lib/ident.ml[197,6077+31])
                                        Tpat_construct "Empty"
                                        []
                                        None
                                    expression (lib/ident.ml[197,6077+35]..lib/ident.ml[197,6077+36])
                                      Texp_constant Const_int 0
                                  <case>
                                    pattern (lib/ident.ml[197,6077+39]..lib/ident.ml[197,6077+52])
                                      Tpat_value
                                      pattern (lib/ident.ml[197,6077+39]..lib/ident.ml[197,6077+52])
                                        Tpat_construct "Node"
                                        [
                                          pattern (lib/ident.ml[197,6077+44]..lib/ident.ml[197,6077+45])
                                            Tpat_any
                                          pattern (lib/ident.ml[197,6077+46]..lib/ident.ml[197,6077+47])
                                            Tpat_any
                                          pattern (lib/ident.ml[197,6077+48]..lib/ident.ml[197,6077+49])
                                            Tpat_any
                                          pattern (lib/ident.ml[197,6077+50]..lib/ident.ml[197,6077+51])
                                            Tpat_var "h/1042"
                                        ]
                                        None
                                    expression (lib/ident.ml[197,6077+56]..lib/ident.ml[197,6077+57])
                                      Texp_ident "h/1042"
                                ]
                          ]
                      expression (lib/ident.ml[198,6139+8]..lib/ident.ml[198,6139+36])
                        Texp_apply
                        expression (lib/ident.ml[198,6139+8]..lib/ident.ml[198,6139+14])
                          Texp_ident "mknode/1015"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[198,6139+15]..lib/ident.ml[198,6139+17])
                              Texp_ident "ll/1033"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[198,6139+18]..lib/ident.ml[198,6139+20])
                              Texp_ident "ld/1034"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[198,6139+21]..lib/ident.ml[198,6139+36])
                              Texp_apply
                              expression (lib/ident.ml[198,6139+22]..lib/ident.ml[198,6139+28])
                                Texp_ident "mknode/1015"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[198,6139+29]..lib/ident.ml[198,6139+31])
                                    Texp_ident "lr/1035"
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[198,6139+32]..lib/ident.ml[198,6139+33])
                                    Texp_ident "d/1027"
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[198,6139+34]..lib/ident.ml[198,6139+35])
                                    Texp_ident "r/1028"
                              ]
                        ]
                    <case>
                      pattern (lib/ident.ml[199,6176+6]..lib/ident.ml[199,6176+46])
                        Tpat_value
                        pattern (lib/ident.ml[199,6176+6]..lib/ident.ml[199,6176+46])
                          Tpat_construct "Node"
                          [
                            pattern (lib/ident.ml[199,6176+12]..lib/ident.ml[199,6176+14])
                              Tpat_var "ll/1036"
                            pattern (lib/ident.ml[199,6176+16]..lib/ident.ml[199,6176+18])
                              Tpat_var "ld/1037"
                            pattern (lib/ident.ml[199,6176+20]..lib/ident.ml[199,6176+42])
                              Tpat_construct "Node"
                              [
                                pattern (lib/ident.ml[199,6176+25]..lib/ident.ml[199,6176+28])
                                  Tpat_var "lrl/1038"
                                pattern (lib/ident.ml[199,6176+30]..lib/ident.ml[199,6176+33])
                                  Tpat_var "lrd/1039"
                                pattern (lib/ident.ml[199,6176+35]..lib/ident.ml[199,6176+38])
                                  Tpat_var "lrr/1040"
                                pattern (lib/ident.ml[199,6176+40]..lib/ident.ml[199,6176+41])
                                  Tpat_any
                              ]
                              None
                            pattern (lib/ident.ml[199,6176+44]..lib/ident.ml[199,6176+45])
                              Tpat_any
                          ]
                          None
                      expression (lib/ident.ml[200,6226+8]..lib/ident.ml[200,6226+54])
                        Texp_apply
                        expression (lib/ident.ml[200,6226+8]..lib/ident.ml[200,6226+14])
                          Texp_ident "mknode/1015"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[200,6226+15]..lib/ident.ml[200,6226+33])
                              Texp_apply
                              expression (lib/ident.ml[200,6226+16]..lib/ident.ml[200,6226+22])
                                Texp_ident "mknode/1015"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[200,6226+23]..lib/ident.ml[200,6226+25])
                                    Texp_ident "ll/1036"
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[200,6226+26]..lib/ident.ml[200,6226+28])
                                    Texp_ident "ld/1037"
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[200,6226+29]..lib/ident.ml[200,6226+32])
                                    Texp_ident "lrl/1038"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[200,6226+34]..lib/ident.ml[200,6226+37])
                              Texp_ident "lrd/1039"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[200,6226+38]..lib/ident.ml[200,6226+54])
                              Texp_apply
                              expression (lib/ident.ml[200,6226+39]..lib/ident.ml[200,6226+45])
                                Texp_ident "mknode/1015"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[200,6226+46]..lib/ident.ml[200,6226+49])
                                    Texp_ident "lrr/1040"
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[200,6226+50]..lib/ident.ml[200,6226+51])
                                    Texp_ident "d/1027"
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[200,6226+52]..lib/ident.ml[200,6226+53])
                                    Texp_ident "r/1028"
                              ]
                        ]
                    <case>
                      pattern (lib/ident.ml[201,6281+6]..lib/ident.ml[201,6281+7])
                        Tpat_value
                        pattern (lib/ident.ml[201,6281+6]..lib/ident.ml[201,6281+7])
                          Tpat_any
                      expression (lib/ident.ml[201,6281+11]..lib/ident.ml[201,6281+23])
                        Texp_assert                        expression (lib/ident.ml[201,6281+18]..lib/ident.ml[201,6281+23])
                          Texp_construct "false"
                          []
                  ]
                Some
                  expression (lib/ident.ml[202,6305+7]..lib/ident.ml[212,6674+16])
                    Texp_ifthenelse
                    expression (lib/ident.ml[202,6305+10]..lib/ident.ml[202,6305+21])
                      Texp_apply
                      expression (lib/ident.ml[202,6305+13]..lib/ident.ml[202,6305+14])
                        Texp_ident "Stdlib!.>"
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[202,6305+10]..lib/ident.ml[202,6305+12])
                            Texp_ident "hr/1030"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[202,6305+15]..lib/ident.ml[202,6305+21])
                            Texp_apply
                            expression (lib/ident.ml[202,6305+18]..lib/ident.ml[202,6305+19])
                              Texp_ident "Stdlib!.+"
                            [
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[202,6305+15]..lib/ident.ml[202,6305+17])
                                  Texp_ident "hl/1029"
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[202,6305+20]..lib/ident.ml[202,6305+21])
                                  Texp_constant Const_int 1
                            ]
                      ]
                    expression (lib/ident.ml[203,6332+4]..lib/ident.ml[210,6643+23])
                      Texp_match
                      expression (lib/ident.ml[203,6332+10]..lib/ident.ml[203,6332+11])
                        Texp_ident "r/1028"
                      [
                        <case>
                          pattern (lib/ident.ml[204,6349+6]..lib/ident.ml[204,6349+26])
                            Tpat_value
                            pattern (lib/ident.ml[204,6349+6]..lib/ident.ml[204,6349+26])
                              Tpat_construct "Node"
                              [
                                pattern (lib/ident.ml[204,6349+12]..lib/ident.ml[204,6349+14])
                                  Tpat_var "rl/1043"
                                pattern (lib/ident.ml[204,6349+16]..lib/ident.ml[204,6349+18])
                                  Tpat_var "rd/1044"
                                pattern (lib/ident.ml[204,6349+20]..lib/ident.ml[204,6349+22])
                                  Tpat_var "rr/1045"
                                pattern (lib/ident.ml[204,6349+24]..lib/ident.ml[204,6349+25])
                                  Tpat_any
                              ]
                              None
                          <when>
                            expression (lib/ident.ml[205,6376+11]..lib/ident.ml[206,6438+58])
                              Texp_apply
                              expression (lib/ident.ml[205,6376+59]..lib/ident.ml[205,6376+61])
                                Texp_ident "Stdlib!.>="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[205,6376+11]..lib/ident.ml[205,6376+58])
                                    Texp_match
                                    expression (lib/ident.ml[205,6376+18]..lib/ident.ml[205,6376+20])
                                      Texp_ident "rr/1045"
                                    [
                                      <case>
                                        pattern (lib/ident.ml[205,6376+26]..lib/ident.ml[205,6376+31])
                                          Tpat_value
                                          pattern (lib/ident.ml[205,6376+26]..lib/ident.ml[205,6376+31])
                                            Tpat_construct "Empty"
                                            []
                                            None
                                        expression (lib/ident.ml[205,6376+35]..lib/ident.ml[205,6376+36])
                                          Texp_constant Const_int 0
                                      <case>
                                        pattern (lib/ident.ml[205,6376+39]..lib/ident.ml[205,6376+52])
                                          Tpat_value
                                          pattern (lib/ident.ml[205,6376+39]..lib/ident.ml[205,6376+52])
                                            Tpat_construct "Node"
                                            [
                                              pattern (lib/ident.ml[205,6376+44]..lib/ident.ml[205,6376+45])
                                                Tpat_any
                                              pattern (lib/ident.ml[205,6376+46]..lib/ident.ml[205,6376+47])
                                                Tpat_any
                                              pattern (lib/ident.ml[205,6376+48]..lib/ident.ml[205,6376+49])
                                                Tpat_any
                                              pattern (lib/ident.ml[205,6376+50]..lib/ident.ml[205,6376+51])
                                                Tpat_var "h/1051"
                                            ]
                                            None
                                        expression (lib/ident.ml[205,6376+56]..lib/ident.ml[205,6376+57])
                                          Texp_ident "h/1051"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[206,6438+11]..lib/ident.ml[206,6438+58])
                                    Texp_match
                                    expression (lib/ident.ml[206,6438+18]..lib/ident.ml[206,6438+20])
                                      Texp_ident "rl/1043"
                                    [
                                      <case>
                                        pattern (lib/ident.ml[206,6438+26]..lib/ident.ml[206,6438+31])
                                          Tpat_value
                                          pattern (lib/ident.ml[206,6438+26]..lib/ident.ml[206,6438+31])
                                            Tpat_construct "Empty"
                                            []
                                            None
                                        expression (lib/ident.ml[206,6438+35]..lib/ident.ml[206,6438+36])
                                          Texp_constant Const_int 0
                                      <case>
                                        pattern (lib/ident.ml[206,6438+39]..lib/ident.ml[206,6438+52])
                                          Tpat_value
                                          pattern (lib/ident.ml[206,6438+39]..lib/ident.ml[206,6438+52])
                                            Tpat_construct "Node"
                                            [
                                              pattern (lib/ident.ml[206,6438+44]..lib/ident.ml[206,6438+45])
                                                Tpat_any
                                              pattern (lib/ident.ml[206,6438+46]..lib/ident.ml[206,6438+47])
                                                Tpat_any
                                              pattern (lib/ident.ml[206,6438+48]..lib/ident.ml[206,6438+49])
                                                Tpat_any
                                              pattern (lib/ident.ml[206,6438+50]..lib/ident.ml[206,6438+51])
                                                Tpat_var "h/1052"
                                            ]
                                            None
                                        expression (lib/ident.ml[206,6438+56]..lib/ident.ml[206,6438+57])
                                          Texp_ident "h/1052"
                                    ]
                              ]
                          expression (lib/ident.ml[207,6500+8]..lib/ident.ml[207,6500+36])
                            Texp_apply
                            expression (lib/ident.ml[207,6500+8]..lib/ident.ml[207,6500+14])
                              Texp_ident "mknode/1015"
                            [
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[207,6500+15]..lib/ident.ml[207,6500+30])
                                  Texp_apply
                                  expression (lib/ident.ml[207,6500+16]..lib/ident.ml[207,6500+22])
                                    Texp_ident "mknode/1015"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[207,6500+23]..lib/ident.ml[207,6500+24])
                                        Texp_ident "l/1026"
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[207,6500+25]..lib/ident.ml[207,6500+26])
                                        Texp_ident "d/1027"
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[207,6500+27]..lib/ident.ml[207,6500+29])
                                        Texp_ident "rl/1043"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[207,6500+31]..lib/ident.ml[207,6500+33])
                                  Texp_ident "rd/1044"
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[207,6500+34]..lib/ident.ml[207,6500+36])
                                  Texp_ident "rr/1045"
                            ]
                        <case>
                          pattern (lib/ident.ml[208,6537+6]..lib/ident.ml[208,6537+47])
                            Tpat_value
                            pattern (lib/ident.ml[208,6537+6]..lib/ident.ml[208,6537+47])
                              Tpat_construct "Node"
                              [
                                pattern (lib/ident.ml[208,6537+12]..lib/ident.ml[208,6537+35])
                                  Tpat_construct "Node"
                                  [
                                    pattern (lib/ident.ml[208,6537+18]..lib/ident.ml[208,6537+21])
                                      Tpat_var "rll/1046"
                                    pattern (lib/ident.ml[208,6537+23]..lib/ident.ml[208,6537+26])
                                      Tpat_var "rld/1047"
                                    pattern (lib/ident.ml[208,6537+28]..lib/ident.ml[208,6537+31])
                                      Tpat_var "rlr/1048"
                                    pattern (lib/ident.ml[208,6537+33]..lib/ident.ml[208,6537+34])
                                      Tpat_any
                                  ]
                                  None
                                pattern (lib/ident.ml[208,6537+37]..lib/ident.ml[208,6537+39])
                                  Tpat_var "rd/1049"
                                pattern (lib/ident.ml[208,6537+41]..lib/ident.ml[208,6537+43])
                                  Tpat_var "rr/1050"
                                pattern (lib/ident.ml[208,6537+45]..lib/ident.ml[208,6537+46])
                                  Tpat_any
                              ]
                              None
                          expression (lib/ident.ml[209,6588+8]..lib/ident.ml[209,6588+54])
                            Texp_apply
                            expression (lib/ident.ml[209,6588+8]..lib/ident.ml[209,6588+14])
                              Texp_ident "mknode/1015"
                            [
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[209,6588+15]..lib/ident.ml[209,6588+31])
                                  Texp_apply
                                  expression (lib/ident.ml[209,6588+16]..lib/ident.ml[209,6588+22])
                                    Texp_ident "mknode/1015"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[209,6588+23]..lib/ident.ml[209,6588+24])
                                        Texp_ident "l/1026"
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[209,6588+25]..lib/ident.ml[209,6588+26])
                                        Texp_ident "d/1027"
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[209,6588+27]..lib/ident.ml[209,6588+30])
                                        Texp_ident "rll/1046"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[209,6588+32]..lib/ident.ml[209,6588+35])
                                  Texp_ident "rld/1047"
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[209,6588+36]..lib/ident.ml[209,6588+54])
                                  Texp_apply
                                  expression (lib/ident.ml[209,6588+37]..lib/ident.ml[209,6588+43])
                                    Texp_ident "mknode/1015"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[209,6588+44]..lib/ident.ml[209,6588+47])
                                        Texp_ident "rlr/1048"
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[209,6588+48]..lib/ident.ml[209,6588+50])
                                        Texp_ident "rd/1049"
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[209,6588+51]..lib/ident.ml[209,6588+53])
                                        Texp_ident "rr/1050"
                                  ]
                            ]
                        <case>
                          pattern (lib/ident.ml[210,6643+6]..lib/ident.ml[210,6643+7])
                            Tpat_value
                            pattern (lib/ident.ml[210,6643+6]..lib/ident.ml[210,6643+7])
                              Tpat_any
                          expression (lib/ident.ml[210,6643+11]..lib/ident.ml[210,6643+23])
                            Texp_assert                            expression (lib/ident.ml[210,6643+18]..lib/ident.ml[210,6643+23])
                              Texp_construct "false"
                              []
                      ]
                    Some
                      expression (lib/ident.ml[212,6674+4]..lib/ident.ml[212,6674+16])
                        Texp_apply
                        expression (lib/ident.ml[212,6674+4]..lib/ident.ml[212,6674+10])
                          Texp_ident "mknode/1015"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[212,6674+11]..lib/ident.ml[212,6674+12])
                              Texp_ident "l/1026"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[212,6674+13]..lib/ident.ml[212,6674+14])
                              Texp_ident "d/1027"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[212,6674+15]..lib/ident.ml[212,6674+16])
                              Texp_ident "r/1028"
                        ]
    ]
  structure_item (lib/ident.ml[214,6692+0]..lib/ident.ml[224,7049+35])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[214,6692+8]..lib/ident.ml[214,6692+11])
          Tpat_var "add/1053"
        expression (lib/ident.ml[214,6692+12]..lib/ident.ml[224,7049+35]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[214,6692+12]..lib/ident.ml[214,6692+14])
                Tpat_var "id/1054"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[214,6692+15]..lib/ident.ml[214,6692+19])
                Tpat_var "data/1055"
          ]
          Tfunction_cases (lib/ident.ml[214,6692+22]..lib/ident.ml[224,7049+35])
            [
              <case>
                pattern (lib/ident.ml[215,6723+4]..lib/ident.ml[215,6723+9])
                  Tpat_construct "Empty"
                  []
                  None
                expression (lib/ident.ml[216,6736+6]..lib/ident.ml[216,6736+71])
                  Texp_construct "Node"
                  [
                    expression (lib/ident.ml[216,6736+11]..lib/ident.ml[216,6736+16])
                      Texp_construct "Empty"
                      []
                    expression (lib/ident.ml[216,6736+18]..lib/ident.ml[216,6736+60])
                      Texp_record
                        fields =
                          [
                            "ident"
                              expression (lib/ident.ml[216,6736+27]..lib/ident.ml[216,6736+29])
                                Texp_ident "id/1054"
                            "data"
                              expression (lib/ident.ml[216,6736+38]..lib/ident.ml[216,6736+42])
                                Texp_ident "data/1055"
                            "previous"
                              expression (lib/ident.ml[216,6736+55]..lib/ident.ml[216,6736+59])
                                Texp_construct "None"
                                []
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
                    expression (lib/ident.ml[216,6736+62]..lib/ident.ml[216,6736+67])
                      Texp_construct "Empty"
                      []
                    expression (lib/ident.ml[216,6736+69]..lib/ident.ml[216,6736+70])
                      Texp_constant Const_int 1
                  ]
              <case>
                pattern (lib/ident.ml[217,6808+4]..lib/ident.ml[217,6808+20])
                  Tpat_construct "Node"
                  [
                    pattern (lib/ident.ml[217,6808+9]..lib/ident.ml[217,6808+10])
                      Tpat_var "l/1056"
                    pattern (lib/ident.ml[217,6808+12]..lib/ident.ml[217,6808+13])
                      Tpat_var "k/1057"
                    pattern (lib/ident.ml[217,6808+15]..lib/ident.ml[217,6808+16])
                      Tpat_var "r/1058"
                    pattern (lib/ident.ml[217,6808+18]..lib/ident.ml[217,6808+19])
                      Tpat_var "h/1059"
                  ]
                  None
                expression (lib/ident.ml[218,6832+6]..lib/ident.ml[224,7049+35])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/ident.ml[218,6832+10]..lib/ident.ml[218,6832+11])
                        Tpat_var "c/1060"
                      expression (lib/ident.ml[218,6832+14]..lib/ident.ml[218,6832+53])
                        Texp_apply
                        expression (lib/ident.ml[218,6832+14]..lib/ident.ml[218,6832+28])
                          Texp_ident "Stdlib!.String.compare"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[218,6832+29]..lib/ident.ml[218,6832+38])
                              Texp_apply
                              expression (lib/ident.ml[218,6832+30]..lib/ident.ml[218,6832+34])
                                Texp_ident "name/333"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[218,6832+35]..lib/ident.ml[218,6832+37])
                                    Texp_ident "id/1054"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[218,6832+39]..lib/ident.ml[218,6832+53])
                              Texp_apply
                              expression (lib/ident.ml[218,6832+40]..lib/ident.ml[218,6832+44])
                                Texp_ident "name/333"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[218,6832+45]..lib/ident.ml[218,6832+52])
                                    Texp_field
                                    expression (lib/ident.ml[218,6832+45]..lib/ident.ml[218,6832+46])
                                      Texp_ident "k/1057"
                                    "ident"
                              ]
                        ]
                  ]
                  expression (lib/ident.ml[219,6889+6]..lib/ident.ml[224,7049+35])
                    Texp_ifthenelse
                    expression (lib/ident.ml[219,6889+9]..lib/ident.ml[219,6889+14])
                      Texp_apply
                      expression (lib/ident.ml[219,6889+11]..lib/ident.ml[219,6889+12])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[219,6889+9]..lib/ident.ml[219,6889+10])
                            Texp_ident "c/1060"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[219,6889+13]..lib/ident.ml[219,6889+14])
                            Texp_constant Const_int 0
                      ]
                    expression (lib/ident.ml[220,6909+8]..lib/ident.ml[220,6909+67])
                      Texp_construct "Node"
                      [
                        expression (lib/ident.ml[220,6909+13]..lib/ident.ml[220,6909+14])
                          Texp_ident "l/1056"
                        expression (lib/ident.ml[220,6909+16]..lib/ident.ml[220,6909+60])
                          Texp_record
                            fields =
                              [
                                "ident"
                                  expression (lib/ident.ml[220,6909+25]..lib/ident.ml[220,6909+27])
                                    Texp_ident "id/1054"
                                "data"
                                  expression (lib/ident.ml[220,6909+36]..lib/ident.ml[220,6909+40])
                                    Texp_ident "data/1055"
                                "previous"
                                  expression (lib/ident.ml[220,6909+53]..lib/ident.ml[220,6909+59])
                                    Texp_construct "Some"
                                    [
                                      expression (lib/ident.ml[220,6909+58]..lib/ident.ml[220,6909+59])
                                        Texp_ident "k/1057"
                                    ]
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
                        expression (lib/ident.ml[220,6909+62]..lib/ident.ml[220,6909+63])
                          Texp_ident "r/1058"
                        expression (lib/ident.ml[220,6909+65]..lib/ident.ml[220,6909+66])
                          Texp_ident "h/1059"
                      ]
                    Some
                      expression (lib/ident.ml[221,6977+11]..lib/ident.ml[224,7049+35])
                        Texp_ifthenelse
                        expression (lib/ident.ml[221,6977+14]..lib/ident.ml[221,6977+19])
                          Texp_apply
                          expression (lib/ident.ml[221,6977+16]..lib/ident.ml[221,6977+17])
                            Texp_ident "Stdlib!.<"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[221,6977+14]..lib/ident.ml[221,6977+15])
                                Texp_ident "c/1060"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[221,6977+18]..lib/ident.ml[221,6977+19])
                                Texp_constant Const_int 0
                          ]
                        expression (lib/ident.ml[222,7002+8]..lib/ident.ml[222,7002+35])
                          Texp_apply
                          expression (lib/ident.ml[222,7002+8]..lib/ident.ml[222,7002+15])
                            Texp_ident "balance/1024"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[222,7002+16]..lib/ident.ml[222,7002+31])
                                Texp_apply
                                expression (lib/ident.ml[222,7002+17]..lib/ident.ml[222,7002+20])
                                  Texp_ident "add/1053"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[222,7002+21]..lib/ident.ml[222,7002+23])
                                      Texp_ident "id/1054"
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[222,7002+24]..lib/ident.ml[222,7002+28])
                                      Texp_ident "data/1055"
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[222,7002+29]..lib/ident.ml[222,7002+30])
                                      Texp_ident "l/1056"
                                ]
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[222,7002+32]..lib/ident.ml[222,7002+33])
                                Texp_ident "k/1057"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[222,7002+34]..lib/ident.ml[222,7002+35])
                                Texp_ident "r/1058"
                          ]
                        Some
                          expression (lib/ident.ml[224,7049+8]..lib/ident.ml[224,7049+35])
                            Texp_apply
                            expression (lib/ident.ml[224,7049+8]..lib/ident.ml[224,7049+15])
                              Texp_ident "balance/1024"
                            [
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[224,7049+16]..lib/ident.ml[224,7049+17])
                                  Texp_ident "l/1056"
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[224,7049+18]..lib/ident.ml[224,7049+19])
                                  Texp_ident "k/1057"
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[224,7049+20]..lib/ident.ml[224,7049+35])
                                  Texp_apply
                                  expression (lib/ident.ml[224,7049+21]..lib/ident.ml[224,7049+24])
                                    Texp_ident "add/1053"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[224,7049+25]..lib/ident.ml[224,7049+27])
                                        Texp_ident "id/1054"
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[224,7049+28]..lib/ident.ml[224,7049+32])
                                        Texp_ident "data/1055"
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[224,7049+33]..lib/ident.ml[224,7049+34])
                                        Texp_ident "r/1058"
                                  ]
                            ]
            ]
    ]
  structure_item (lib/ident.ml[226,7086+0]..lib/ident.ml[229,7177+38])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[226,7086+8]..lib/ident.ml[226,7086+19])
          Tpat_var "min_binding/1131"
        expression (lib/ident.ml[226,7086+22]..lib/ident.ml[229,7177+38])
          Texp_function
          []
          Tfunction_cases (lib/ident.ml[226,7086+22]..lib/ident.ml[229,7177+38])
            [
              <case>
                pattern (lib/ident.ml[227,7117+4]..lib/ident.ml[227,7117+9])
                  Tpat_construct "Empty"
                  []
                  None
                expression (lib/ident.ml[227,7117+13]..lib/ident.ml[227,7117+28])
                  Texp_apply
                  expression (lib/ident.ml[227,7117+13]..lib/ident.ml[227,7117+18])
                    Texp_ident "Stdlib!.raise"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[227,7117+19]..lib/ident.ml[227,7117+28])
                        Texp_construct "Not_found"
                        []
                  ]
              <case>
                pattern (lib/ident.ml[228,7146+4]..lib/ident.ml[228,7146+25])
                  Tpat_construct "Node"
                  [
                    pattern (lib/ident.ml[228,7146+10]..lib/ident.ml[228,7146+15])
                      Tpat_construct "Empty"
                      []
                      None
                    pattern (lib/ident.ml[228,7146+17]..lib/ident.ml[228,7146+18])
                      Tpat_var "d/1132"
                    pattern (lib/ident.ml[228,7146+20]..lib/ident.ml[228,7146+21])
                      Tpat_any
                    pattern (lib/ident.ml[228,7146+23]..lib/ident.ml[228,7146+24])
                      Tpat_any
                  ]
                  None
                expression (lib/ident.ml[228,7146+29]..lib/ident.ml[228,7146+30])
                  Texp_ident "d/1132"
              <case>
                pattern (lib/ident.ml[229,7177+4]..lib/ident.ml[229,7177+21])
                  Tpat_construct "Node"
                  [
                    pattern (lib/ident.ml[229,7177+10]..lib/ident.ml[229,7177+11])
                      Tpat_var "l/1133"
                    pattern (lib/ident.ml[229,7177+13]..lib/ident.ml[229,7177+14])
                      Tpat_any
                    pattern (lib/ident.ml[229,7177+16]..lib/ident.ml[229,7177+17])
                      Tpat_any
                    pattern (lib/ident.ml[229,7177+19]..lib/ident.ml[229,7177+20])
                      Tpat_any
                  ]
                  None
                expression (lib/ident.ml[229,7177+25]..lib/ident.ml[229,7177+38])
                  Texp_apply
                  expression (lib/ident.ml[229,7177+25]..lib/ident.ml[229,7177+36])
                    Texp_ident "min_binding/1131"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[229,7177+37]..lib/ident.ml[229,7177+38])
                        Texp_ident "l/1133"
                  ]
            ]
    ]
  structure_item (lib/ident.ml[231,7217+0]..lib/ident.ml[234,7332+59])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[231,7217+8]..lib/ident.ml[231,7217+26])
          Tpat_var "remove_min_binding/1135"
        expression (lib/ident.ml[231,7217+29]..lib/ident.ml[234,7332+59])
          Texp_function
          []
          Tfunction_cases (lib/ident.ml[231,7217+29]..lib/ident.ml[234,7332+59])
            [
              <case>
                pattern (lib/ident.ml[232,7255+4]..lib/ident.ml[232,7255+9])
                  Tpat_construct "Empty"
                  []
                  None
                expression (lib/ident.ml[232,7255+13]..lib/ident.ml[232,7255+45])
                  Texp_apply
                  expression (lib/ident.ml[232,7255+13]..lib/ident.ml[232,7255+24])
                    Texp_ident "Stdlib!.invalid_arg"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[232,7255+25]..lib/ident.ml[232,7255+45])
                        Texp_constant Const_string("Map.remove_min_elt",(lib/ident.ml[232,7255+26]..lib/ident.ml[232,7255+44]),None)
                  ]
              <case>
                pattern (lib/ident.ml[233,7301+4]..lib/ident.ml[233,7301+25])
                  Tpat_construct "Node"
                  [
                    pattern (lib/ident.ml[233,7301+10]..lib/ident.ml[233,7301+15])
                      Tpat_construct "Empty"
                      []
                      None
                    pattern (lib/ident.ml[233,7301+17]..lib/ident.ml[233,7301+18])
                      Tpat_any
                    pattern (lib/ident.ml[233,7301+20]..lib/ident.ml[233,7301+21])
                      Tpat_var "r/1136"
                    pattern (lib/ident.ml[233,7301+23]..lib/ident.ml[233,7301+24])
                      Tpat_any
                  ]
                  None
                expression (lib/ident.ml[233,7301+29]..lib/ident.ml[233,7301+30])
                  Texp_ident "r/1136"
              <case>
                pattern (lib/ident.ml[234,7332+4]..lib/ident.ml[234,7332+21])
                  Tpat_construct "Node"
                  [
                    pattern (lib/ident.ml[234,7332+10]..lib/ident.ml[234,7332+11])
                      Tpat_var "l/1137"
                    pattern (lib/ident.ml[234,7332+13]..lib/ident.ml[234,7332+14])
                      Tpat_var "d/1138"
                    pattern (lib/ident.ml[234,7332+16]..lib/ident.ml[234,7332+17])
                      Tpat_var "r/1139"
                    pattern (lib/ident.ml[234,7332+19]..lib/ident.ml[234,7332+20])
                      Tpat_any
                  ]
                  None
                expression (lib/ident.ml[234,7332+25]..lib/ident.ml[234,7332+59])
                  Texp_apply
                  expression (lib/ident.ml[234,7332+25]..lib/ident.ml[234,7332+32])
                    Texp_ident "balance/1024"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[234,7332+33]..lib/ident.ml[234,7332+55])
                        Texp_apply
                        expression (lib/ident.ml[234,7332+34]..lib/ident.ml[234,7332+52])
                          Texp_ident "remove_min_binding/1135"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[234,7332+53]..lib/ident.ml[234,7332+54])
                              Texp_ident "l/1137"
                        ]
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[234,7332+56]..lib/ident.ml[234,7332+57])
                        Texp_ident "d/1138"
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[234,7332+58]..lib/ident.ml[234,7332+59])
                        Texp_ident "r/1139"
                  ]
            ]
    ]
  structure_item (lib/ident.ml[236,7393+0]..lib/ident.ml[242,7519+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[236,7393+4]..lib/ident.ml[236,7393+9])
          Tpat_var "merge/1141"
        expression (lib/ident.ml[236,7393+10]..lib/ident.ml[242,7519+42]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[236,7393+10]..lib/ident.ml[236,7393+12])
                Tpat_var "t1/1143"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[236,7393+13]..lib/ident.ml[236,7393+15])
                Tpat_var "t2/1144"
          ]
          Tfunction_body
            expression (lib/ident.ml[237,7411+2]..lib/ident.ml[242,7519+42])
              Texp_match
              expression (lib/ident.ml[237,7411+8]..lib/ident.ml[237,7411+16])
                Texp_tuple
                [
                  expression (lib/ident.ml[237,7411+9]..lib/ident.ml[237,7411+11])
                    Texp_ident "t1/1143"
                  expression (lib/ident.ml[237,7411+13]..lib/ident.ml[237,7411+15])
                    Texp_ident "t2/1144"
                ]
              [
                <case>
                  pattern (lib/ident.ml[238,7433+4]..lib/ident.ml[238,7433+14])
                    Tpat_value
                    pattern (lib/ident.ml[238,7433+4]..lib/ident.ml[238,7433+14])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[238,7433+5]..lib/ident.ml[238,7433+10])
                          Tpat_construct "Empty"
                          []
                          None
                        pattern (lib/ident.ml[238,7433+12]..lib/ident.ml[238,7433+13])
                          Tpat_var "t/1145"
                      ]
                  expression (lib/ident.ml[238,7433+18]..lib/ident.ml[238,7433+19])
                    Texp_ident "t/1145"
                <case>
                  pattern (lib/ident.ml[239,7453+4]..lib/ident.ml[239,7453+14])
                    Tpat_value
                    pattern (lib/ident.ml[239,7453+4]..lib/ident.ml[239,7453+14])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[239,7453+5]..lib/ident.ml[239,7453+6])
                          Tpat_var "t/1146"
                        pattern (lib/ident.ml[239,7453+8]..lib/ident.ml[239,7453+13])
                          Tpat_construct "Empty"
                          []
                          None
                      ]
                  expression (lib/ident.ml[239,7453+18]..lib/ident.ml[239,7453+19])
                    Texp_ident "t/1146"
                <case>
                  pattern (lib/ident.ml[240,7473+4]..lib/ident.ml[240,7473+10])
                    Tpat_value
                    pattern (lib/ident.ml[240,7473+4]..lib/ident.ml[240,7473+10])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[240,7473+5]..lib/ident.ml[240,7473+6])
                          Tpat_any
                        pattern (lib/ident.ml[240,7473+8]..lib/ident.ml[240,7473+9])
                          Tpat_any
                      ]
                  expression (lib/ident.ml[241,7487+6]..lib/ident.ml[242,7519+42])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/ident.ml[241,7487+10]..lib/ident.ml[241,7487+11])
                          Tpat_var "d/1147"
                        expression (lib/ident.ml[241,7487+14]..lib/ident.ml[241,7487+28])
                          Texp_apply
                          expression (lib/ident.ml[241,7487+14]..lib/ident.ml[241,7487+25])
                            Texp_ident "min_binding/1131"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[241,7487+26]..lib/ident.ml[241,7487+28])
                                Texp_ident "t2/1144"
                          ]
                    ]
                    expression (lib/ident.ml[242,7519+6]..lib/ident.ml[242,7519+42])
                      Texp_apply
                      expression (lib/ident.ml[242,7519+6]..lib/ident.ml[242,7519+13])
                        Texp_ident "balance/1024"
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[242,7519+14]..lib/ident.ml[242,7519+16])
                            Texp_ident "t1/1143"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[242,7519+17]..lib/ident.ml[242,7519+18])
                            Texp_ident "d/1147"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[242,7519+19]..lib/ident.ml[242,7519+42])
                            Texp_apply
                            expression (lib/ident.ml[242,7519+20]..lib/ident.ml[242,7519+38])
                              Texp_ident "remove_min_binding/1135"
                            [
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[242,7519+39]..lib/ident.ml[242,7519+41])
                                  Texp_ident "t2/1144"
                            ]
                      ]
              ]
    ]
  structure_item (lib/ident.ml[244,7563+0]..lib/ident.ml[256,7928+69])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[244,7563+8]..lib/ident.ml[244,7563+14])
          Tpat_var "remove/1148"
        expression (lib/ident.ml[244,7563+15]..lib/ident.ml[256,7928+69]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[244,7563+15]..lib/ident.ml[244,7563+17])
                Tpat_var "id/1149"
          ]
          Tfunction_cases (lib/ident.ml[244,7563+20]..lib/ident.ml[256,7928+69])
            [
              <case>
                pattern (lib/ident.ml[245,7592+4]..lib/ident.ml[245,7592+9])
                  Tpat_construct "Empty"
                  []
                  None
                expression (lib/ident.ml[246,7605+6]..lib/ident.ml[246,7605+11])
                  Texp_construct "Empty"
                  []
              <case>
                pattern (lib/ident.ml[247,7617+4]..lib/ident.ml[247,7617+28])
                  Tpat_alias "m/1154"
                  pattern (lib/ident.ml[247,7617+5]..lib/ident.ml[247,7617+22])
                    Tpat_construct "Node"
                    [
                      pattern (lib/ident.ml[247,7617+11]..lib/ident.ml[247,7617+12])
                        Tpat_var "l/1150"
                      pattern (lib/ident.ml[247,7617+14]..lib/ident.ml[247,7617+15])
                        Tpat_var "k/1151"
                      pattern (lib/ident.ml[247,7617+17]..lib/ident.ml[247,7617+18])
                        Tpat_var "r/1152"
                      pattern (lib/ident.ml[247,7617+20]..lib/ident.ml[247,7617+21])
                        Tpat_var "h/1153"
                    ]
                    None
                expression (lib/ident.ml[248,7649+6]..lib/ident.ml[256,7928+69])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/ident.ml[248,7649+10]..lib/ident.ml[248,7649+11])
                        Tpat_var "c/1155"
                      expression (lib/ident.ml[248,7649+14]..lib/ident.ml[248,7649+53])
                        Texp_apply
                        expression (lib/ident.ml[248,7649+14]..lib/ident.ml[248,7649+28])
                          Texp_ident "Stdlib!.String.compare"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[248,7649+29]..lib/ident.ml[248,7649+38])
                              Texp_apply
                              expression (lib/ident.ml[248,7649+30]..lib/ident.ml[248,7649+34])
                                Texp_ident "name/333"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[248,7649+35]..lib/ident.ml[248,7649+37])
                                    Texp_ident "id/1149"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[248,7649+39]..lib/ident.ml[248,7649+53])
                              Texp_apply
                              expression (lib/ident.ml[248,7649+40]..lib/ident.ml[248,7649+44])
                                Texp_ident "name/333"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[248,7649+45]..lib/ident.ml[248,7649+52])
                                    Texp_field
                                    expression (lib/ident.ml[248,7649+45]..lib/ident.ml[248,7649+46])
                                      Texp_ident "k/1151"
                                    "ident"
                              ]
                        ]
                  ]
                  expression (lib/ident.ml[249,7706+6]..lib/ident.ml[256,7928+69])
                    Texp_ifthenelse
                    expression (lib/ident.ml[249,7706+9]..lib/ident.ml[249,7706+14])
                      Texp_apply
                      expression (lib/ident.ml[249,7706+11]..lib/ident.ml[249,7706+12])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[249,7706+9]..lib/ident.ml[249,7706+10])
                            Texp_ident "c/1155"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[249,7706+13]..lib/ident.ml[249,7706+14])
                            Texp_constant Const_int 0
                      ]
                    expression (lib/ident.ml[250,7726+8]..lib/ident.ml[252,7784+37])
                      Texp_match
                      expression (lib/ident.ml[250,7726+14]..lib/ident.ml[250,7726+24])
                        Texp_field
                        expression (lib/ident.ml[250,7726+14]..lib/ident.ml[250,7726+15])
                          Texp_ident "k/1151"
                        "previous"
                      [
                        <case>
                          pattern (lib/ident.ml[251,7756+10]..lib/ident.ml[251,7756+14])
                            Tpat_value
                            pattern (lib/ident.ml[251,7756+10]..lib/ident.ml[251,7756+14])
                              Tpat_construct "None"
                              []
                              None
                          expression (lib/ident.ml[251,7756+18]..lib/ident.ml[251,7756+27])
                            Texp_apply
                            expression (lib/ident.ml[251,7756+18]..lib/ident.ml[251,7756+23])
                              Texp_ident "merge/1141"
                            [
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[251,7756+24]..lib/ident.ml[251,7756+25])
                                  Texp_ident "l/1150"
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[251,7756+26]..lib/ident.ml[251,7756+27])
                                  Texp_ident "r/1152"
                            ]
                        <case>
                          pattern (lib/ident.ml[252,7784+10]..lib/ident.ml[252,7784+16])
                            Tpat_value
                            pattern (lib/ident.ml[252,7784+10]..lib/ident.ml[252,7784+16])
                              Tpat_construct "Some"
                              [
                                pattern (lib/ident.ml[252,7784+15]..lib/ident.ml[252,7784+16])
                                  Tpat_var "k/1156"
                              ]
                              None
                          expression (lib/ident.ml[252,7784+20]..lib/ident.ml[252,7784+37])
                            Texp_construct "Node"
                            [
                              expression (lib/ident.ml[252,7784+26]..lib/ident.ml[252,7784+27])
                                Texp_ident "l/1150"
                              expression (lib/ident.ml[252,7784+29]..lib/ident.ml[252,7784+30])
                                Texp_ident "k/1156"
                              expression (lib/ident.ml[252,7784+32]..lib/ident.ml[252,7784+33])
                                Texp_ident "r/1152"
                              expression (lib/ident.ml[252,7784+35]..lib/ident.ml[252,7784+36])
                                Texp_ident "h/1153"
                            ]
                      ]
                    Some
                      expression (lib/ident.ml[253,7822+11]..lib/ident.ml[256,7928+69])
                        Texp_ifthenelse
                        expression (lib/ident.ml[253,7822+14]..lib/ident.ml[253,7822+19])
                          Texp_apply
                          expression (lib/ident.ml[253,7822+16]..lib/ident.ml[253,7822+17])
                            Texp_ident "Stdlib!.<"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[253,7822+14]..lib/ident.ml[253,7822+15])
                                Texp_ident "c/1155"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[253,7822+18]..lib/ident.ml[253,7822+19])
                                Texp_constant Const_int 0
                          ]
                        expression (lib/ident.ml[254,7847+8]..lib/ident.ml[254,7847+69])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/ident.ml[254,7847+12]..lib/ident.ml[254,7847+14])
                                Tpat_var "ll/1157"
                              expression (lib/ident.ml[254,7847+17]..lib/ident.ml[254,7847+28])
                                Texp_apply
                                expression (lib/ident.ml[254,7847+17]..lib/ident.ml[254,7847+23])
                                  Texp_ident "remove/1148"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[254,7847+24]..lib/ident.ml[254,7847+26])
                                      Texp_ident "id/1149"
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[254,7847+27]..lib/ident.ml[254,7847+28])
                                      Texp_ident "l/1150"
                                ]
                          ]
                          expression (lib/ident.ml[254,7847+32]..lib/ident.ml[254,7847+69])
                            Texp_ifthenelse
                            expression (lib/ident.ml[254,7847+35]..lib/ident.ml[254,7847+42])
                              Texp_apply
                              expression (lib/ident.ml[254,7847+37]..lib/ident.ml[254,7847+39])
                                Texp_ident "Stdlib!.=="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[254,7847+35]..lib/ident.ml[254,7847+36])
                                    Texp_ident "l/1150"
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[254,7847+40]..lib/ident.ml[254,7847+42])
                                    Texp_ident "ll/1157"
                              ]
                            expression (lib/ident.ml[254,7847+48]..lib/ident.ml[254,7847+49])
                              Texp_ident "m/1154"
                            Some
                              expression (lib/ident.ml[254,7847+55]..lib/ident.ml[254,7847+69])
                                Texp_apply
                                expression (lib/ident.ml[254,7847+55]..lib/ident.ml[254,7847+62])
                                  Texp_ident "balance/1024"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[254,7847+63]..lib/ident.ml[254,7847+65])
                                      Texp_ident "ll/1157"
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[254,7847+66]..lib/ident.ml[254,7847+67])
                                      Texp_ident "k/1151"
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[254,7847+68]..lib/ident.ml[254,7847+69])
                                      Texp_ident "r/1152"
                                ]
                        Some
                          expression (lib/ident.ml[256,7928+8]..lib/ident.ml[256,7928+69])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/ident.ml[256,7928+12]..lib/ident.ml[256,7928+14])
                                  Tpat_var "rr/1158"
                                expression (lib/ident.ml[256,7928+17]..lib/ident.ml[256,7928+28])
                                  Texp_apply
                                  expression (lib/ident.ml[256,7928+17]..lib/ident.ml[256,7928+23])
                                    Texp_ident "remove/1148"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[256,7928+24]..lib/ident.ml[256,7928+26])
                                        Texp_ident "id/1149"
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[256,7928+27]..lib/ident.ml[256,7928+28])
                                        Texp_ident "r/1152"
                                  ]
                            ]
                            expression (lib/ident.ml[256,7928+32]..lib/ident.ml[256,7928+69])
                              Texp_ifthenelse
                              expression (lib/ident.ml[256,7928+35]..lib/ident.ml[256,7928+42])
                                Texp_apply
                                expression (lib/ident.ml[256,7928+37]..lib/ident.ml[256,7928+39])
                                  Texp_ident "Stdlib!.=="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[256,7928+35]..lib/ident.ml[256,7928+36])
                                      Texp_ident "r/1152"
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[256,7928+40]..lib/ident.ml[256,7928+42])
                                      Texp_ident "rr/1158"
                                ]
                              expression (lib/ident.ml[256,7928+48]..lib/ident.ml[256,7928+49])
                                Texp_ident "m/1154"
                              Some
                                expression (lib/ident.ml[256,7928+55]..lib/ident.ml[256,7928+69])
                                  Texp_apply
                                  expression (lib/ident.ml[256,7928+55]..lib/ident.ml[256,7928+62])
                                    Texp_ident "balance/1024"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[256,7928+63]..lib/ident.ml[256,7928+64])
                                        Texp_ident "l/1150"
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[256,7928+65]..lib/ident.ml[256,7928+66])
                                        Texp_ident "k/1151"
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[256,7928+67]..lib/ident.ml[256,7928+69])
                                        Texp_ident "rr/1158"
                                  ]
            ]
    ]
  structure_item (lib/ident.ml[258,7999+0]..lib/ident.ml[262,8083+69])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[258,7999+8]..lib/ident.ml[258,7999+21])
          Tpat_var "find_previous/1159"
        expression (lib/ident.ml[258,7999+22]..lib/ident.ml[262,8083+69]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[258,7999+22]..lib/ident.ml[258,7999+24])
                Tpat_var "id/1160"
          ]
          Tfunction_cases (lib/ident.ml[258,7999+27]..lib/ident.ml[262,8083+69])
            [
              <case>
                pattern (lib/ident.ml[259,8035+4]..lib/ident.ml[259,8035+8])
                  Tpat_construct "None"
                  []
                  None
                expression (lib/ident.ml[260,8047+6]..lib/ident.ml[260,8047+21])
                  Texp_apply
                  expression (lib/ident.ml[260,8047+6]..lib/ident.ml[260,8047+11])
                    Texp_ident "Stdlib!.raise"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[260,8047+12]..lib/ident.ml[260,8047+21])
                        Texp_construct "Not_found"
                        []
                  ]
              <case>
                pattern (lib/ident.ml[261,8069+4]..lib/ident.ml[261,8069+10])
                  Tpat_construct "Some"
                  [
                    pattern (lib/ident.ml[261,8069+9]..lib/ident.ml[261,8069+10])
                      Tpat_var "k/1161"
                  ]
                  None
                expression (lib/ident.ml[262,8083+6]..lib/ident.ml[262,8083+69])
                  Texp_ifthenelse
                  expression (lib/ident.ml[262,8083+9]..lib/ident.ml[262,8083+24])
                    Texp_apply
                    expression (lib/ident.ml[262,8083+9]..lib/ident.ml[262,8083+13])
                      Texp_ident "same/507"
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[262,8083+14]..lib/ident.ml[262,8083+16])
                          Texp_ident "id/1160"
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[262,8083+17]..lib/ident.ml[262,8083+24])
                          Texp_field
                          expression (lib/ident.ml[262,8083+17]..lib/ident.ml[262,8083+18])
                            Texp_ident "k/1161"
                          "ident"
                    ]
                  expression (lib/ident.ml[262,8083+30]..lib/ident.ml[262,8083+36])
                    Texp_field
                    expression (lib/ident.ml[262,8083+30]..lib/ident.ml[262,8083+31])
                      Texp_ident "k/1161"
                    "data"
                  Some
                    expression (lib/ident.ml[262,8083+42]..lib/ident.ml[262,8083+69])
                      Texp_apply
                      expression (lib/ident.ml[262,8083+42]..lib/ident.ml[262,8083+55])
                        Texp_ident "find_previous/1159"
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[262,8083+56]..lib/ident.ml[262,8083+58])
                            Texp_ident "id/1160"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[262,8083+59]..lib/ident.ml[262,8083+69])
                            Texp_field
                            expression (lib/ident.ml[262,8083+59]..lib/ident.ml[262,8083+60])
                              Texp_ident "k/1161"
                            "previous"
                      ]
            ]
    ]
  structure_item (lib/ident.ml[264,8154+0]..lib/ident.ml[274,8421+45])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[264,8154+8]..lib/ident.ml[264,8154+17])
          Tpat_var "find_same/1163"
        expression (lib/ident.ml[264,8154+18]..lib/ident.ml[274,8421+45]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[264,8154+18]..lib/ident.ml[264,8154+20])
                Tpat_var "id/1164"
          ]
          Tfunction_cases (lib/ident.ml[264,8154+23]..lib/ident.ml[274,8421+45])
            [
              <case>
                pattern (lib/ident.ml[265,8186+4]..lib/ident.ml[265,8186+9])
                  Tpat_construct "Empty"
                  []
                  None
                expression (lib/ident.ml[266,8199+6]..lib/ident.ml[266,8199+21])
                  Texp_apply
                  expression (lib/ident.ml[266,8199+6]..lib/ident.ml[266,8199+11])
                    Texp_ident "Stdlib!.raise"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[266,8199+12]..lib/ident.ml[266,8199+21])
                        Texp_construct "Not_found"
                        []
                  ]
              <case>
                pattern (lib/ident.ml[267,8221+4]..lib/ident.ml[267,8221+20])
                  Tpat_construct "Node"
                  [
                    pattern (lib/ident.ml[267,8221+9]..lib/ident.ml[267,8221+10])
                      Tpat_var "l/1165"
                    pattern (lib/ident.ml[267,8221+12]..lib/ident.ml[267,8221+13])
                      Tpat_var "k/1166"
                    pattern (lib/ident.ml[267,8221+15]..lib/ident.ml[267,8221+16])
                      Tpat_var "r/1167"
                    pattern (lib/ident.ml[267,8221+18]..lib/ident.ml[267,8221+19])
                      Tpat_any
                  ]
                  None
                expression (lib/ident.ml[268,8245+6]..lib/ident.ml[274,8421+45])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/ident.ml[268,8245+10]..lib/ident.ml[268,8245+11])
                        Tpat_var "c/1168"
                      expression (lib/ident.ml[268,8245+14]..lib/ident.ml[268,8245+53])
                        Texp_apply
                        expression (lib/ident.ml[268,8245+14]..lib/ident.ml[268,8245+28])
                          Texp_ident "Stdlib!.String.compare"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[268,8245+29]..lib/ident.ml[268,8245+38])
                              Texp_apply
                              expression (lib/ident.ml[268,8245+30]..lib/ident.ml[268,8245+34])
                                Texp_ident "name/333"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[268,8245+35]..lib/ident.ml[268,8245+37])
                                    Texp_ident "id/1164"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[268,8245+39]..lib/ident.ml[268,8245+53])
                              Texp_apply
                              expression (lib/ident.ml[268,8245+40]..lib/ident.ml[268,8245+44])
                                Texp_ident "name/333"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[268,8245+45]..lib/ident.ml[268,8245+52])
                                    Texp_field
                                    expression (lib/ident.ml[268,8245+45]..lib/ident.ml[268,8245+46])
                                      Texp_ident "k/1166"
                                    "ident"
                              ]
                        ]
                  ]
                  expression (lib/ident.ml[269,8302+6]..lib/ident.ml[274,8421+45])
                    Texp_ifthenelse
                    expression (lib/ident.ml[269,8302+9]..lib/ident.ml[269,8302+14])
                      Texp_apply
                      expression (lib/ident.ml[269,8302+11]..lib/ident.ml[269,8302+12])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[269,8302+9]..lib/ident.ml[269,8302+10])
                            Texp_ident "c/1168"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[269,8302+13]..lib/ident.ml[269,8302+14])
                            Texp_constant Const_int 0
                      ]
                    expression (lib/ident.ml[270,8322+8]..lib/ident.ml[272,8369+40])
                      Texp_ifthenelse
                      expression (lib/ident.ml[270,8322+11]..lib/ident.ml[270,8322+26])
                        Texp_apply
                        expression (lib/ident.ml[270,8322+11]..lib/ident.ml[270,8322+15])
                          Texp_ident "same/507"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[270,8322+16]..lib/ident.ml[270,8322+18])
                              Texp_ident "id/1164"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[270,8322+19]..lib/ident.ml[270,8322+26])
                              Texp_field
                              expression (lib/ident.ml[270,8322+19]..lib/ident.ml[270,8322+20])
                                Texp_ident "k/1166"
                              "ident"
                        ]
                      expression (lib/ident.ml[271,8349+13]..lib/ident.ml[271,8349+19])
                        Texp_field
                        expression (lib/ident.ml[271,8349+13]..lib/ident.ml[271,8349+14])
                          Texp_ident "k/1166"
                        "data"
                      Some
                        expression (lib/ident.ml[272,8369+13]..lib/ident.ml[272,8369+40])
                          Texp_apply
                          expression (lib/ident.ml[272,8369+13]..lib/ident.ml[272,8369+26])
                            Texp_ident "find_previous/1159"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[272,8369+27]..lib/ident.ml[272,8369+29])
                                Texp_ident "id/1164"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[272,8369+30]..lib/ident.ml[272,8369+40])
                                Texp_field
                                expression (lib/ident.ml[272,8369+30]..lib/ident.ml[272,8369+31])
                                  Texp_ident "k/1166"
                                "previous"
                          ]
                    Some
                      expression (lib/ident.ml[274,8421+8]..lib/ident.ml[274,8421+45])
                        Texp_apply
                        expression (lib/ident.ml[274,8421+8]..lib/ident.ml[274,8421+17])
                          Texp_ident "find_same/1163"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[274,8421+18]..lib/ident.ml[274,8421+20])
                              Texp_ident "id/1164"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[274,8421+21]..lib/ident.ml[274,8421+45])
                              Texp_ifthenelse
                              expression (lib/ident.ml[274,8421+25]..lib/ident.ml[274,8421+30])
                                Texp_apply
                                expression (lib/ident.ml[274,8421+27]..lib/ident.ml[274,8421+28])
                                  Texp_ident "Stdlib!.<"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[274,8421+25]..lib/ident.ml[274,8421+26])
                                      Texp_ident "c/1168"
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[274,8421+29]..lib/ident.ml[274,8421+30])
                                      Texp_constant Const_int 0
                                ]
                              expression (lib/ident.ml[274,8421+36]..lib/ident.ml[274,8421+37])
                                Texp_ident "l/1165"
                              Some
                                expression (lib/ident.ml[274,8421+43]..lib/ident.ml[274,8421+44])
                                  Texp_ident "r/1167"
                        ]
            ]
    ]
  structure_item (lib/ident.ml[276,8468+0]..lib/ident.ml[284,8662+44])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[276,8468+8]..lib/ident.ml[276,8468+17])
          Tpat_var "find_name/1170"
        expression (lib/ident.ml[276,8468+18]..lib/ident.ml[284,8662+44]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[276,8468+18]..lib/ident.ml[276,8468+19])
                Tpat_var "n/1171"
          ]
          Tfunction_cases (lib/ident.ml[276,8468+22]..lib/ident.ml[284,8662+44])
            [
              <case>
                pattern (lib/ident.ml[277,8499+4]..lib/ident.ml[277,8499+9])
                  Tpat_construct "Empty"
                  []
                  None
                expression (lib/ident.ml[278,8512+6]..lib/ident.ml[278,8512+21])
                  Texp_apply
                  expression (lib/ident.ml[278,8512+6]..lib/ident.ml[278,8512+11])
                    Texp_ident "Stdlib!.raise"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[278,8512+12]..lib/ident.ml[278,8512+21])
                        Texp_construct "Not_found"
                        []
                  ]
              <case>
                pattern (lib/ident.ml[279,8534+4]..lib/ident.ml[279,8534+20])
                  Tpat_construct "Node"
                  [
                    pattern (lib/ident.ml[279,8534+9]..lib/ident.ml[279,8534+10])
                      Tpat_var "l/1172"
                    pattern (lib/ident.ml[279,8534+12]..lib/ident.ml[279,8534+13])
                      Tpat_var "k/1173"
                    pattern (lib/ident.ml[279,8534+15]..lib/ident.ml[279,8534+16])
                      Tpat_var "r/1174"
                    pattern (lib/ident.ml[279,8534+18]..lib/ident.ml[279,8534+19])
                      Tpat_any
                  ]
                  None
                expression (lib/ident.ml[280,8558+6]..lib/ident.ml[284,8662+44])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/ident.ml[280,8558+10]..lib/ident.ml[280,8558+11])
                        Tpat_var "c/1175"
                      expression (lib/ident.ml[280,8558+14]..lib/ident.ml[280,8558+45])
                        Texp_apply
                        expression (lib/ident.ml[280,8558+14]..lib/ident.ml[280,8558+28])
                          Texp_ident "Stdlib!.String.compare"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[280,8558+29]..lib/ident.ml[280,8558+30])
                              Texp_ident "n/1171"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[280,8558+31]..lib/ident.ml[280,8558+45])
                              Texp_apply
                              expression (lib/ident.ml[280,8558+32]..lib/ident.ml[280,8558+36])
                                Texp_ident "name/333"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[280,8558+37]..lib/ident.ml[280,8558+44])
                                    Texp_field
                                    expression (lib/ident.ml[280,8558+37]..lib/ident.ml[280,8558+38])
                                      Texp_ident "k/1173"
                                    "ident"
                              ]
                        ]
                  ]
                  expression (lib/ident.ml[281,8607+6]..lib/ident.ml[284,8662+44])
                    Texp_ifthenelse
                    expression (lib/ident.ml[281,8607+9]..lib/ident.ml[281,8607+14])
                      Texp_apply
                      expression (lib/ident.ml[281,8607+11]..lib/ident.ml[281,8607+12])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[281,8607+9]..lib/ident.ml[281,8607+10])
                            Texp_ident "c/1175"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[281,8607+13]..lib/ident.ml[281,8607+14])
                            Texp_constant Const_int 0
                      ]
                    expression (lib/ident.ml[282,8627+8]..lib/ident.ml[282,8627+23])
                      Texp_tuple
                      [
                        expression (lib/ident.ml[282,8627+8]..lib/ident.ml[282,8627+15])
                          Texp_field
                          expression (lib/ident.ml[282,8627+8]..lib/ident.ml[282,8627+9])
                            Texp_ident "k/1173"
                          "ident"
                        expression (lib/ident.ml[282,8627+17]..lib/ident.ml[282,8627+23])
                          Texp_field
                          expression (lib/ident.ml[282,8627+17]..lib/ident.ml[282,8627+18])
                            Texp_ident "k/1173"
                          "data"
                      ]
                    Some
                      expression (lib/ident.ml[284,8662+8]..lib/ident.ml[284,8662+44])
                        Texp_apply
                        expression (lib/ident.ml[284,8662+8]..lib/ident.ml[284,8662+17])
                          Texp_ident "find_name/1170"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[284,8662+18]..lib/ident.ml[284,8662+19])
                              Texp_ident "n/1171"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[284,8662+20]..lib/ident.ml[284,8662+44])
                              Texp_ifthenelse
                              expression (lib/ident.ml[284,8662+24]..lib/ident.ml[284,8662+29])
                                Texp_apply
                                expression (lib/ident.ml[284,8662+26]..lib/ident.ml[284,8662+27])
                                  Texp_ident "Stdlib!.<"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[284,8662+24]..lib/ident.ml[284,8662+25])
                                      Texp_ident "c/1175"
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[284,8662+28]..lib/ident.ml[284,8662+29])
                                      Texp_constant Const_int 0
                                ]
                              expression (lib/ident.ml[284,8662+35]..lib/ident.ml[284,8662+36])
                                Texp_ident "l/1172"
                              Some
                                expression (lib/ident.ml[284,8662+42]..lib/ident.ml[284,8662+43])
                                  Texp_ident "r/1174"
                        ]
            ]
    ]
  structure_item (lib/ident.ml[286,8708+0]..lib/ident.ml[288,8750+53])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[286,8708+8]..lib/ident.ml[286,8708+15])
          Tpat_var "get_all/1177"
        expression (lib/ident.ml[286,8708+18]..lib/ident.ml[288,8750+53])
          Texp_function
          []
          Tfunction_cases (lib/ident.ml[286,8708+18]..lib/ident.ml[288,8750+53])
            [
              <case>
                pattern (lib/ident.ml[287,8735+4]..lib/ident.ml[287,8735+8])
                  Tpat_construct "None"
                  []
                  None
                expression (lib/ident.ml[287,8735+12]..lib/ident.ml[287,8735+14])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/ident.ml[288,8750+4]..lib/ident.ml[288,8750+10])
                  Tpat_construct "Some"
                  [
                    pattern (lib/ident.ml[288,8750+9]..lib/ident.ml[288,8750+10])
                      Tpat_var "k/1178"
                  ]
                  None
                expression (lib/ident.ml[288,8750+14]..lib/ident.ml[288,8750+53])
                  Texp_construct "::"
                  [
                    expression (lib/ident.ml[288,8750+14]..lib/ident.ml[288,8750+31])
                      Texp_tuple
                      [
                        expression (lib/ident.ml[288,8750+15]..lib/ident.ml[288,8750+22])
                          Texp_field
                          expression (lib/ident.ml[288,8750+15]..lib/ident.ml[288,8750+16])
                            Texp_ident "k/1178"
                          "ident"
                        expression (lib/ident.ml[288,8750+24]..lib/ident.ml[288,8750+30])
                          Texp_field
                          expression (lib/ident.ml[288,8750+24]..lib/ident.ml[288,8750+25])
                            Texp_ident "k/1178"
                          "data"
                      ]
                    expression (lib/ident.ml[288,8750+35]..lib/ident.ml[288,8750+53])
                      Texp_apply
                      expression (lib/ident.ml[288,8750+35]..lib/ident.ml[288,8750+42])
                        Texp_ident "get_all/1177"
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[288,8750+43]..lib/ident.ml[288,8750+53])
                            Texp_field
                            expression (lib/ident.ml[288,8750+43]..lib/ident.ml[288,8750+44])
                              Texp_ident "k/1178"
                            "previous"
                      ]
                  ]
            ]
    ]
  structure_item (lib/ident.ml[290,8805+0]..lib/ident.ml[298,9009+43])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[290,8805+8]..lib/ident.ml[290,8805+16])
          Tpat_var "find_all/1180"
        expression (lib/ident.ml[290,8805+17]..lib/ident.ml[298,9009+43]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[290,8805+17]..lib/ident.ml[290,8805+18])
                Tpat_var "n/1181"
          ]
          Tfunction_cases (lib/ident.ml[290,8805+21]..lib/ident.ml[298,9009+43])
            [
              <case>
                pattern (lib/ident.ml[291,8835+4]..lib/ident.ml[291,8835+9])
                  Tpat_construct "Empty"
                  []
                  None
                expression (lib/ident.ml[292,8848+6]..lib/ident.ml[292,8848+8])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/ident.ml[293,8857+4]..lib/ident.ml[293,8857+20])
                  Tpat_construct "Node"
                  [
                    pattern (lib/ident.ml[293,8857+9]..lib/ident.ml[293,8857+10])
                      Tpat_var "l/1182"
                    pattern (lib/ident.ml[293,8857+12]..lib/ident.ml[293,8857+13])
                      Tpat_var "k/1183"
                    pattern (lib/ident.ml[293,8857+15]..lib/ident.ml[293,8857+16])
                      Tpat_var "r/1184"
                    pattern (lib/ident.ml[293,8857+18]..lib/ident.ml[293,8857+19])
                      Tpat_any
                  ]
                  None
                expression (lib/ident.ml[294,8881+6]..lib/ident.ml[298,9009+43])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/ident.ml[294,8881+10]..lib/ident.ml[294,8881+11])
                        Tpat_var "c/1185"
                      expression (lib/ident.ml[294,8881+14]..lib/ident.ml[294,8881+45])
                        Texp_apply
                        expression (lib/ident.ml[294,8881+14]..lib/ident.ml[294,8881+28])
                          Texp_ident "Stdlib!.String.compare"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[294,8881+29]..lib/ident.ml[294,8881+30])
                              Texp_ident "n/1181"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[294,8881+31]..lib/ident.ml[294,8881+45])
                              Texp_apply
                              expression (lib/ident.ml[294,8881+32]..lib/ident.ml[294,8881+36])
                                Texp_ident "name/333"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[294,8881+37]..lib/ident.ml[294,8881+44])
                                    Texp_field
                                    expression (lib/ident.ml[294,8881+37]..lib/ident.ml[294,8881+38])
                                      Texp_ident "k/1183"
                                    "ident"
                              ]
                        ]
                  ]
                  expression (lib/ident.ml[295,8930+6]..lib/ident.ml[298,9009+43])
                    Texp_ifthenelse
                    expression (lib/ident.ml[295,8930+9]..lib/ident.ml[295,8930+14])
                      Texp_apply
                      expression (lib/ident.ml[295,8930+11]..lib/ident.ml[295,8930+12])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[295,8930+9]..lib/ident.ml[295,8930+10])
                            Texp_ident "c/1185"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[295,8930+13]..lib/ident.ml[295,8930+14])
                            Texp_constant Const_int 0
                      ]
                    expression (lib/ident.ml[296,8950+8]..lib/ident.ml[296,8950+47])
                      Texp_construct "::"
                      [
                        expression (lib/ident.ml[296,8950+8]..lib/ident.ml[296,8950+25])
                          Texp_tuple
                          [
                            expression (lib/ident.ml[296,8950+9]..lib/ident.ml[296,8950+16])
                              Texp_field
                              expression (lib/ident.ml[296,8950+9]..lib/ident.ml[296,8950+10])
                                Texp_ident "k/1183"
                              "ident"
                            expression (lib/ident.ml[296,8950+18]..lib/ident.ml[296,8950+24])
                              Texp_field
                              expression (lib/ident.ml[296,8950+18]..lib/ident.ml[296,8950+19])
                                Texp_ident "k/1183"
                              "data"
                          ]
                        expression (lib/ident.ml[296,8950+29]..lib/ident.ml[296,8950+47])
                          Texp_apply
                          expression (lib/ident.ml[296,8950+29]..lib/ident.ml[296,8950+36])
                            Texp_ident "get_all/1177"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[296,8950+37]..lib/ident.ml[296,8950+47])
                                Texp_field
                                expression (lib/ident.ml[296,8950+37]..lib/ident.ml[296,8950+38])
                                  Texp_ident "k/1183"
                                "previous"
                          ]
                      ]
                    Some
                      expression (lib/ident.ml[298,9009+8]..lib/ident.ml[298,9009+43])
                        Texp_apply
                        expression (lib/ident.ml[298,9009+8]..lib/ident.ml[298,9009+16])
                          Texp_ident "find_all/1180"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[298,9009+17]..lib/ident.ml[298,9009+18])
                              Texp_ident "n/1181"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[298,9009+19]..lib/ident.ml[298,9009+43])
                              Texp_ifthenelse
                              expression (lib/ident.ml[298,9009+23]..lib/ident.ml[298,9009+28])
                                Texp_apply
                                expression (lib/ident.ml[298,9009+25]..lib/ident.ml[298,9009+26])
                                  Texp_ident "Stdlib!.<"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[298,9009+23]..lib/ident.ml[298,9009+24])
                                      Texp_ident "c/1185"
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[298,9009+27]..lib/ident.ml[298,9009+28])
                                      Texp_constant Const_int 0
                                ]
                              expression (lib/ident.ml[298,9009+34]..lib/ident.ml[298,9009+35])
                                Texp_ident "l/1182"
                              Some
                                expression (lib/ident.ml[298,9009+41]..lib/ident.ml[298,9009+42])
                                  Texp_ident "r/1184"
                        ]
            ]
    ]
  structure_item (lib/ident.ml[300,9054+0]..lib/ident.ml[302,9144+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[300,9054+4]..lib/ident.ml[300,9054+15])
          Tpat_var "get_all_seq/1187"
        expression (lib/ident.ml[300,9054+16]..lib/ident.ml[302,9144+8]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[300,9054+16]..lib/ident.ml[300,9054+17])
                Tpat_var "k/1189"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[300,9054+18]..lib/ident.ml[300,9054+20])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/ident.ml[301,9077+2]..lib/ident.ml[302,9144+8])
              Texp_apply
              expression (lib/ident.ml[301,9077+2]..lib/ident.ml[301,9077+12])
                Texp_ident "Stdlib!.Seq.unfold"
              [
                <arg>
                  Nolabel
                  expression (lib/ident.ml[301,9077+13]..lib/ident.ml[301,9077+66])
                    Texp_apply
                    expression (lib/ident.ml[301,9077+14]..lib/ident.ml[301,9077+24])
                      Texp_ident "Stdlib!.Option.map"
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[301,9077+25]..lib/ident.ml[301,9077+65])
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/ident.ml[301,9077+30]..lib/ident.ml[301,9077+31])
                                Tpat_var "k/1329"
                          ]
                          Tfunction_body
                            expression (lib/ident.ml[301,9077+35]..lib/ident.ml[301,9077+64])
                              Texp_tuple
                              [
                                expression (lib/ident.ml[301,9077+35]..lib/ident.ml[301,9077+52])
                                  Texp_tuple
                                  [
                                    expression (lib/ident.ml[301,9077+36]..lib/ident.ml[301,9077+43])
                                      Texp_field
                                      expression (lib/ident.ml[301,9077+36]..lib/ident.ml[301,9077+37])
                                        Texp_ident "k/1329"
                                      "ident"
                                    expression (lib/ident.ml[301,9077+45]..lib/ident.ml[301,9077+51])
                                      Texp_field
                                      expression (lib/ident.ml[301,9077+45]..lib/ident.ml[301,9077+46])
                                        Texp_ident "k/1329"
                                      "data"
                                  ]
                                expression (lib/ident.ml[301,9077+54]..lib/ident.ml[301,9077+64])
                                  Texp_field
                                  expression (lib/ident.ml[301,9077+54]..lib/ident.ml[301,9077+55])
                                    Texp_ident "k/1329"
                                  "previous"
                              ]
                    ]
                <arg>
                  Nolabel
                  expression (lib/ident.ml[302,9144+4]..lib/ident.ml[302,9144+5])
                    Texp_ident "k/1189"
                <arg>
                  Nolabel
                  expression (lib/ident.ml[302,9144+6]..lib/ident.ml[302,9144+8])
                    Texp_construct "()"
                    []
              ]
    ]
  structure_item (lib/ident.ml[304,9154+0]..lib/ident.ml[312,9388+50])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[304,9154+8]..lib/ident.ml[304,9154+20])
          Tpat_var "find_all_seq/1331"
        expression (lib/ident.ml[304,9154+21]..lib/ident.ml[312,9388+50]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[304,9154+21]..lib/ident.ml[304,9154+22])
                Tpat_var "n/1332"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[304,9154+23]..lib/ident.ml[304,9154+26])
                Tpat_var "tbl/1333"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[304,9154+27]..lib/ident.ml[304,9154+29])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/ident.ml[305,9186+2]..lib/ident.ml[312,9388+50])
              Texp_match
              expression (lib/ident.ml[305,9186+8]..lib/ident.ml[305,9186+11])
                Texp_ident "tbl/1333"
              [
                <case>
                  pattern (lib/ident.ml[306,9203+4]..lib/ident.ml[306,9203+9])
                    Tpat_value
                    pattern (lib/ident.ml[306,9203+4]..lib/ident.ml[306,9203+9])
                      Tpat_construct "Empty"
                      []
                      None
                  expression (lib/ident.ml[306,9203+13]..lib/ident.ml[306,9203+20])
                    Texp_construct "Seq.Nil"
                    []
                <case>
                  pattern (lib/ident.ml[307,9224+4]..lib/ident.ml[307,9224+20])
                    Tpat_value
                    pattern (lib/ident.ml[307,9224+4]..lib/ident.ml[307,9224+20])
                      Tpat_construct "Node"
                      [
                        pattern (lib/ident.ml[307,9224+9]..lib/ident.ml[307,9224+10])
                          Tpat_var "l/1334"
                        pattern (lib/ident.ml[307,9224+12]..lib/ident.ml[307,9224+13])
                          Tpat_var "k/1335"
                        pattern (lib/ident.ml[307,9224+15]..lib/ident.ml[307,9224+16])
                          Tpat_var "r/1336"
                        pattern (lib/ident.ml[307,9224+18]..lib/ident.ml[307,9224+19])
                          Tpat_any
                      ]
                      None
                  expression (lib/ident.ml[308,9248+6]..lib/ident.ml[312,9388+50])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/ident.ml[308,9248+10]..lib/ident.ml[308,9248+11])
                          Tpat_var "c/1337"
                        expression (lib/ident.ml[308,9248+14]..lib/ident.ml[308,9248+45])
                          Texp_apply
                          expression (lib/ident.ml[308,9248+14]..lib/ident.ml[308,9248+28])
                            Texp_ident "Stdlib!.String.compare"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[308,9248+29]..lib/ident.ml[308,9248+30])
                                Texp_ident "n/1332"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[308,9248+31]..lib/ident.ml[308,9248+45])
                                Texp_apply
                                expression (lib/ident.ml[308,9248+32]..lib/ident.ml[308,9248+36])
                                  Texp_ident "name/333"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[308,9248+37]..lib/ident.ml[308,9248+44])
                                      Texp_field
                                      expression (lib/ident.ml[308,9248+37]..lib/ident.ml[308,9248+38])
                                        Texp_ident "k/1335"
                                      "ident"
                                ]
                          ]
                    ]
                    expression (lib/ident.ml[309,9297+6]..lib/ident.ml[312,9388+50])
                      Texp_ifthenelse
                      expression (lib/ident.ml[309,9297+9]..lib/ident.ml[309,9297+14])
                        Texp_apply
                        expression (lib/ident.ml[309,9297+11]..lib/ident.ml[309,9297+12])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[309,9297+9]..lib/ident.ml[309,9297+10])
                              Texp_ident "c/1337"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[309,9297+13]..lib/ident.ml[309,9297+14])
                              Texp_constant Const_int 0
                        ]
                      expression (lib/ident.ml[310,9317+8]..lib/ident.ml[310,9317+59])
                        Texp_construct "Seq.Cons"
                        [
                          expression (lib/ident.ml[310,9317+17]..lib/ident.ml[310,9317+34])
                            Texp_tuple
                            [
                              expression (lib/ident.ml[310,9317+18]..lib/ident.ml[310,9317+25])
                                Texp_field
                                expression (lib/ident.ml[310,9317+18]..lib/ident.ml[310,9317+19])
                                  Texp_ident "k/1335"
                                "ident"
                              expression (lib/ident.ml[310,9317+27]..lib/ident.ml[310,9317+33])
                                Texp_field
                                expression (lib/ident.ml[310,9317+27]..lib/ident.ml[310,9317+28])
                                  Texp_ident "k/1335"
                                "data"
                            ]
                          expression (lib/ident.ml[310,9317+36]..lib/ident.ml[310,9317+58])
                            Texp_apply
                            expression (lib/ident.ml[310,9317+36]..lib/ident.ml[310,9317+47])
                              Texp_ident "get_all_seq/1187"
                            [
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[310,9317+48]..lib/ident.ml[310,9317+58])
                                  Texp_field
                                  expression (lib/ident.ml[310,9317+48]..lib/ident.ml[310,9317+49])
                                    Texp_ident "k/1335"
                                  "previous"
                            ]
                        ]
                      Some
                        expression (lib/ident.ml[312,9388+8]..lib/ident.ml[312,9388+50])
                          Texp_apply
                          expression (lib/ident.ml[312,9388+8]..lib/ident.ml[312,9388+20])
                            Texp_ident "find_all_seq/1331"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[312,9388+21]..lib/ident.ml[312,9388+22])
                                Texp_ident "n/1332"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[312,9388+23]..lib/ident.ml[312,9388+47])
                                Texp_ifthenelse
                                expression (lib/ident.ml[312,9388+27]..lib/ident.ml[312,9388+32])
                                  Texp_apply
                                  expression (lib/ident.ml[312,9388+29]..lib/ident.ml[312,9388+30])
                                    Texp_ident "Stdlib!.<"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[312,9388+27]..lib/ident.ml[312,9388+28])
                                        Texp_ident "c/1337"
                                    <arg>
                                      Nolabel
                                      expression (lib/ident.ml[312,9388+31]..lib/ident.ml[312,9388+32])
                                        Texp_constant Const_int 0
                                  ]
                                expression (lib/ident.ml[312,9388+38]..lib/ident.ml[312,9388+39])
                                  Texp_ident "l/1334"
                                Some
                                  expression (lib/ident.ml[312,9388+45]..lib/ident.ml[312,9388+46])
                                    Texp_ident "r/1336"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[312,9388+48]..lib/ident.ml[312,9388+50])
                                Texp_construct "()"
                                []
                          ]
              ]
    ]
  structure_item (lib/ident.ml[315,9441+0]..lib/ident.ml[322,9615+42])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[315,9441+8]..lib/ident.ml[315,9441+16])
          Tpat_var "fold_aux/1339"
        expression (lib/ident.ml[315,9441+17]..lib/ident.ml[322,9615+42]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[315,9441+17]..lib/ident.ml[315,9441+18])
                Tpat_var "f/1340"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[315,9441+19]..lib/ident.ml[315,9441+24])
                Tpat_var "stack/1341"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[315,9441+25]..lib/ident.ml[315,9441+29])
                Tpat_var "accu/1342"
          ]
          Tfunction_cases (lib/ident.ml[315,9441+32]..lib/ident.ml[322,9615+42])
            [
              <case>
                pattern (lib/ident.ml[316,9482+4]..lib/ident.ml[316,9482+9])
                  Tpat_construct "Empty"
                  []
                  None
                expression (lib/ident.ml[317,9495+6]..lib/ident.ml[320,9581+9])
                  Texp_match
                  expression (lib/ident.ml[317,9495+18]..lib/ident.ml[317,9495+23])
                    Texp_ident "stack/1341"
                  [
                    <case>
                      pattern (lib/ident.ml[318,9524+8]..lib/ident.ml[318,9524+10])
                        Tpat_value
                        pattern (lib/ident.ml[318,9524+8]..lib/ident.ml[318,9524+10])
                          Tpat_construct "[]"
                          []
                          None
                      expression (lib/ident.ml[318,9524+14]..lib/ident.ml[318,9524+18])
                        Texp_ident "accu/1342"
                    <case>
                      pattern (lib/ident.ml[319,9543+8]..lib/ident.ml[319,9543+14])
                        Tpat_value
                        pattern (lib/ident.ml[319,9543+8]..lib/ident.ml[319,9543+14])
                          Tpat_construct "::"
                          [
                            pattern (lib/ident.ml[319,9543+8]..lib/ident.ml[319,9543+9])
                              Tpat_var "a/1346"
                            pattern (lib/ident.ml[319,9543+13]..lib/ident.ml[319,9543+14])
                              Tpat_var "l/1347"
                          ]
                          None
                      expression (lib/ident.ml[319,9543+18]..lib/ident.ml[319,9543+37])
                        Texp_apply
                        expression (lib/ident.ml[319,9543+18]..lib/ident.ml[319,9543+26])
                          Texp_ident "fold_aux/1339"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[319,9543+27]..lib/ident.ml[319,9543+28])
                              Texp_ident "f/1340"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[319,9543+29]..lib/ident.ml[319,9543+30])
                              Texp_ident "l/1347"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[319,9543+31]..lib/ident.ml[319,9543+35])
                              Texp_ident "accu/1342"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[319,9543+36]..lib/ident.ml[319,9543+37])
                              Texp_ident "a/1346"
                        ]
                  ]
              <case>
                pattern (lib/ident.ml[321,9591+4]..lib/ident.ml[321,9591+20])
                  Tpat_construct "Node"
                  [
                    pattern (lib/ident.ml[321,9591+9]..lib/ident.ml[321,9591+10])
                      Tpat_var "l/1343"
                    pattern (lib/ident.ml[321,9591+12]..lib/ident.ml[321,9591+13])
                      Tpat_var "k/1344"
                    pattern (lib/ident.ml[321,9591+15]..lib/ident.ml[321,9591+16])
                      Tpat_var "r/1345"
                    pattern (lib/ident.ml[321,9591+18]..lib/ident.ml[321,9591+19])
                      Tpat_any
                  ]
                  None
                expression (lib/ident.ml[322,9615+6]..lib/ident.ml[322,9615+42])
                  Texp_apply
                  expression (lib/ident.ml[322,9615+6]..lib/ident.ml[322,9615+14])
                    Texp_ident "fold_aux/1339"
                  [
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[322,9615+15]..lib/ident.ml[322,9615+16])
                        Texp_ident "f/1340"
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[322,9615+17]..lib/ident.ml[322,9615+29])
                        Texp_construct "::"
                        [
                          expression (lib/ident.ml[322,9615+18]..lib/ident.ml[322,9615+19])
                            Texp_ident "l/1343"
                          expression (lib/ident.ml[322,9615+23]..lib/ident.ml[322,9615+28])
                            Texp_ident "stack/1341"
                        ]
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[322,9615+30]..lib/ident.ml[322,9615+40])
                        Texp_apply
                        expression (lib/ident.ml[322,9615+31]..lib/ident.ml[322,9615+32])
                          Texp_ident "f/1340"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[322,9615+33]..lib/ident.ml[322,9615+34])
                              Texp_ident "k/1344"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[322,9615+35]..lib/ident.ml[322,9615+39])
                              Texp_ident "accu/1342"
                        ]
                    <arg>
                      Nolabel
                      expression (lib/ident.ml[322,9615+41]..lib/ident.ml[322,9615+42])
                        Texp_ident "r/1345"
                  ]
            ]
    ]
  structure_item (lib/ident.ml[324,9659+0]..lib/ident.ml[324,9659+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[324,9659+4]..lib/ident.ml[324,9659+13])
          Tpat_var "fold_name/1349"
        expression (lib/ident.ml[324,9659+14]..lib/ident.ml[324,9659+75]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[324,9659+14]..lib/ident.ml[324,9659+15])
                Tpat_var "f/1351"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[324,9659+16]..lib/ident.ml[324,9659+19])
                Tpat_var "tbl/1352"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[324,9659+20]..lib/ident.ml[324,9659+24])
                Tpat_var "accu/1353"
          ]
          Tfunction_body
            expression (lib/ident.ml[324,9659+27]..lib/ident.ml[324,9659+75])
              Texp_apply
              expression (lib/ident.ml[324,9659+27]..lib/ident.ml[324,9659+35])
                Texp_ident "fold_aux/1339"
              [
                <arg>
                  Nolabel
                  expression (lib/ident.ml[324,9659+36]..lib/ident.ml[324,9659+63])
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/ident.ml[324,9659+41]..lib/ident.ml[324,9659+42])
                          Tpat_var "k/1354"
                    ]
                    Tfunction_body
                      expression (lib/ident.ml[324,9659+46]..lib/ident.ml[324,9659+62])
                        Texp_apply
                        expression (lib/ident.ml[324,9659+46]..lib/ident.ml[324,9659+47])
                          Texp_ident "f/1351"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[324,9659+48]..lib/ident.ml[324,9659+55])
                              Texp_field
                              expression (lib/ident.ml[324,9659+48]..lib/ident.ml[324,9659+49])
                                Texp_ident "k/1354"
                              "ident"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[324,9659+56]..lib/ident.ml[324,9659+62])
                              Texp_field
                              expression (lib/ident.ml[324,9659+56]..lib/ident.ml[324,9659+57])
                                Texp_ident "k/1354"
                              "data"
                        ]
                <arg>
                  Nolabel
                  expression (lib/ident.ml[324,9659+64]..lib/ident.ml[324,9659+66])
                    Texp_construct "[]"
                    []
                <arg>
                  Nolabel
                  expression (lib/ident.ml[324,9659+67]..lib/ident.ml[324,9659+71])
                    Texp_ident "accu/1353"
                <arg>
                  Nolabel
                  expression (lib/ident.ml[324,9659+72]..lib/ident.ml[324,9659+75])
                    Texp_ident "tbl/1352"
              ]
    ]
  structure_item (lib/ident.ml[326,9736+0]..lib/ident.ml[329,9797+60])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[326,9736+8]..lib/ident.ml[326,9736+17])
          Tpat_var "fold_data/1355"
        expression (lib/ident.ml[326,9736+18]..lib/ident.ml[329,9797+60]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[326,9736+18]..lib/ident.ml[326,9736+19])
                Tpat_var "f/1356"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[326,9736+20]..lib/ident.ml[326,9736+21])
                Tpat_var "d/1357"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[326,9736+22]..lib/ident.ml[326,9736+26])
                Tpat_var "accu/1358"
          ]
          Tfunction_body
            expression (lib/ident.ml[327,9765+2]..lib/ident.ml[329,9797+60])
              Texp_match
              expression (lib/ident.ml[327,9765+8]..lib/ident.ml[327,9765+9])
                Texp_ident "d/1357"
              [
                <case>
                  pattern (lib/ident.ml[328,9780+4]..lib/ident.ml[328,9780+8])
                    Tpat_value
                    pattern (lib/ident.ml[328,9780+4]..lib/ident.ml[328,9780+8])
                      Tpat_construct "None"
                      []
                      None
                  expression (lib/ident.ml[328,9780+12]..lib/ident.ml[328,9780+16])
                    Texp_ident "accu/1358"
                <case>
                  pattern (lib/ident.ml[329,9797+4]..lib/ident.ml[329,9797+10])
                    Tpat_value
                    pattern (lib/ident.ml[329,9797+4]..lib/ident.ml[329,9797+10])
                      Tpat_construct "Some"
                      [
                        pattern (lib/ident.ml[329,9797+9]..lib/ident.ml[329,9797+10])
                          Tpat_var "k/1359"
                      ]
                      None
                  expression (lib/ident.ml[329,9797+14]..lib/ident.ml[329,9797+60])
                    Texp_apply
                    expression (lib/ident.ml[329,9797+14]..lib/ident.ml[329,9797+15])
                      Texp_ident "f/1356"
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[329,9797+16]..lib/ident.ml[329,9797+23])
                          Texp_field
                          expression (lib/ident.ml[329,9797+16]..lib/ident.ml[329,9797+17])
                            Texp_ident "k/1359"
                          "ident"
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[329,9797+24]..lib/ident.ml[329,9797+30])
                          Texp_field
                          expression (lib/ident.ml[329,9797+24]..lib/ident.ml[329,9797+25])
                            Texp_ident "k/1359"
                          "data"
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[329,9797+31]..lib/ident.ml[329,9797+60])
                          Texp_apply
                          expression (lib/ident.ml[329,9797+32]..lib/ident.ml[329,9797+41])
                            Texp_ident "fold_data/1355"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[329,9797+42]..lib/ident.ml[329,9797+43])
                                Texp_ident "f/1356"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[329,9797+44]..lib/ident.ml[329,9797+54])
                                Texp_field
                                expression (lib/ident.ml[329,9797+44]..lib/ident.ml[329,9797+45])
                                  Texp_ident "k/1359"
                                "previous"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[329,9797+55]..lib/ident.ml[329,9797+59])
                                Texp_ident "accu/1358"
                          ]
                    ]
              ]
    ]
  structure_item (lib/ident.ml[331,9859+0]..lib/ident.ml[332,9885+54])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[331,9859+4]..lib/ident.ml[331,9859+12])
          Tpat_var "fold_all/1360"
        expression (lib/ident.ml[331,9859+13]..lib/ident.ml[332,9885+54]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[331,9859+13]..lib/ident.ml[331,9859+14])
                Tpat_var "f/1362"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[331,9859+15]..lib/ident.ml[331,9859+18])
                Tpat_var "tbl/1363"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[331,9859+19]..lib/ident.ml[331,9859+23])
                Tpat_var "accu/1364"
          ]
          Tfunction_body
            expression (lib/ident.ml[332,9885+2]..lib/ident.ml[332,9885+54])
              Texp_apply
              expression (lib/ident.ml[332,9885+2]..lib/ident.ml[332,9885+10])
                Texp_ident "fold_aux/1339"
              [
                <arg>
                  Nolabel
                  expression (lib/ident.ml[332,9885+11]..lib/ident.ml[332,9885+42])
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/ident.ml[332,9885+16]..lib/ident.ml[332,9885+17])
                          Tpat_var "k/1365"
                    ]
                    Tfunction_body
                      expression (lib/ident.ml[332,9885+21]..lib/ident.ml[332,9885+41])
                        Texp_apply
                        expression (lib/ident.ml[332,9885+21]..lib/ident.ml[332,9885+30])
                          Texp_ident "fold_data/1355"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[332,9885+31]..lib/ident.ml[332,9885+32])
                              Texp_ident "f/1362"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[332,9885+33]..lib/ident.ml[332,9885+41])
                              Texp_construct "Some"
                              [
                                expression (lib/ident.ml[332,9885+39]..lib/ident.ml[332,9885+40])
                                  Texp_ident "k/1365"
                              ]
                        ]
                <arg>
                  Nolabel
                  expression (lib/ident.ml[332,9885+43]..lib/ident.ml[332,9885+45])
                    Texp_construct "[]"
                    []
                <arg>
                  Nolabel
                  expression (lib/ident.ml[332,9885+46]..lib/ident.ml[332,9885+50])
                    Texp_ident "accu/1364"
                <arg>
                  Nolabel
                  expression (lib/ident.ml[332,9885+51]..lib/ident.ml[332,9885+54])
                    Texp_ident "tbl/1363"
              ]
    ]
  structure_item (lib/ident.ml[336,10006+0]..lib/ident.ml[339,10072+42])
    Tstr_value Rec
    [
      <def>
        pattern (lib/ident.ml[336,10006+8]..lib/ident.ml[336,10006+12])
          Tpat_var "iter/1366"
        expression (lib/ident.ml[336,10006+13]..lib/ident.ml[339,10072+42]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[336,10006+13]..lib/ident.ml[336,10006+14])
                Tpat_var "f/1367"
          ]
          Tfunction_cases (lib/ident.ml[336,10006+17]..lib/ident.ml[339,10072+42])
            [
              <case>
                pattern (lib/ident.ml[337,10032+4]..lib/ident.ml[337,10032+9])
                  Tpat_construct "Empty"
                  []
                  None
                expression (lib/ident.ml[337,10032+13]..lib/ident.ml[337,10032+15])
                  Texp_construct "()"
                  []
              <case>
                pattern (lib/ident.ml[338,10048+4]..lib/ident.ml[338,10048+20])
                  Tpat_construct "Node"
                  [
                    pattern (lib/ident.ml[338,10048+9]..lib/ident.ml[338,10048+10])
                      Tpat_var "l/1368"
                    pattern (lib/ident.ml[338,10048+12]..lib/ident.ml[338,10048+13])
                      Tpat_var "k/1369"
                    pattern (lib/ident.ml[338,10048+15]..lib/ident.ml[338,10048+16])
                      Tpat_var "r/1370"
                    pattern (lib/ident.ml[338,10048+18]..lib/ident.ml[338,10048+19])
                      Tpat_any
                  ]
                  None
                expression (lib/ident.ml[339,10072+6]..lib/ident.ml[339,10072+42])
                  Texp_sequence
                  expression (lib/ident.ml[339,10072+6]..lib/ident.ml[339,10072+14])
                    Texp_apply
                    expression (lib/ident.ml[339,10072+6]..lib/ident.ml[339,10072+10])
                      Texp_ident "iter/1366"
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[339,10072+11]..lib/ident.ml[339,10072+12])
                          Texp_ident "f/1367"
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[339,10072+13]..lib/ident.ml[339,10072+14])
                          Texp_ident "l/1368"
                    ]
                  expression (lib/ident.ml[339,10072+16]..lib/ident.ml[339,10072+42])
                    Texp_sequence
                    expression (lib/ident.ml[339,10072+16]..lib/ident.ml[339,10072+32])
                      Texp_apply
                      expression (lib/ident.ml[339,10072+16]..lib/ident.ml[339,10072+17])
                        Texp_ident "f/1367"
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[339,10072+18]..lib/ident.ml[339,10072+25])
                            Texp_field
                            expression (lib/ident.ml[339,10072+18]..lib/ident.ml[339,10072+19])
                              Texp_ident "k/1369"
                            "ident"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[339,10072+26]..lib/ident.ml[339,10072+32])
                            Texp_field
                            expression (lib/ident.ml[339,10072+26]..lib/ident.ml[339,10072+27])
                              Texp_ident "k/1369"
                            "data"
                      ]
                    expression (lib/ident.ml[339,10072+34]..lib/ident.ml[339,10072+42])
                      Texp_apply
                      expression (lib/ident.ml[339,10072+34]..lib/ident.ml[339,10072+38])
                        Texp_ident "iter/1366"
                      [
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[339,10072+39]..lib/ident.ml[339,10072+40])
                            Texp_ident "f/1367"
                        <arg>
                          Nolabel
                          expression (lib/ident.ml[339,10072+41]..lib/ident.ml[339,10072+42])
                            Texp_ident "r/1370"
                      ]
            ]
    ]
  structure_item (lib/ident.ml[344,10199+0]..lib/ident.ml[344,10199+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[344,10199+4]..lib/ident.ml[344,10199+12])
          Tpat_var "key_name/1372"
        expression (lib/ident.ml[344,10199+15]..lib/ident.ml[344,10199+17])
          Texp_constant Const_string("",(lib/ident.ml[344,10199+16]..lib/ident.ml[344,10199+16]),None)
    ]
  structure_item (lib/ident.ml[346,10218+0]..lib/ident.ml[355,10407+73])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[346,10218+4]..lib/ident.ml[346,10218+22])
          Tpat_var "make_key_generator/1373"
        expression (lib/ident.ml[346,10218+23]..lib/ident.ml[355,10407+73]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[346,10218+23]..lib/ident.ml[346,10218+25])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/ident.ml[347,10246+2]..lib/ident.ml[355,10407+73])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/ident.ml[347,10246+6]..lib/ident.ml[347,10246+7])
                    Tpat_var "c/1375"
                  expression (lib/ident.ml[347,10246+10]..lib/ident.ml[347,10246+15])
                    Texp_apply
                    expression (lib/ident.ml[347,10246+10]..lib/ident.ml[347,10246+13])
                      Texp_ident "Stdlib!.ref"
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[347,10246+14]..lib/ident.ml[347,10246+15])
                          Texp_constant Const_int 1
                    ]
              ]
              expression (lib/ident.ml[348,10265+2]..lib/ident.ml[355,10407+73])
                Texp_function
                []
                Tfunction_cases (lib/ident.ml[348,10265+2]..lib/ident.ml[355,10407+73])
                  [
                    <case>
                      pattern (lib/ident.ml[349,10276+4]..lib/ident.ml[350,10288+12])
                        Tpat_or
                        pattern (lib/ident.ml[349,10276+4]..lib/ident.ml[349,10276+11])
                          Tpat_construct "Local"
                          [
                            pattern (lib/ident.ml[349,10276+10]..lib/ident.ml[349,10276+11])
                              Tpat_any
                          ]
                          None
                        pattern (lib/ident.ml[350,10288+4]..lib/ident.ml[350,10288+12])
                          Tpat_construct "Scoped"
                          [
                            pattern (lib/ident.ml[350,10288+11]..lib/ident.ml[350,10288+12])
                              Tpat_any
                          ]
                          None
                      expression (lib/ident.ml[351,10304+6]..lib/ident.ml[353,10343+46])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/ident.ml[351,10304+10]..lib/ident.ml[351,10304+15])
                              Tpat_var "stamp/1377"
                            expression (lib/ident.ml[351,10304+18]..lib/ident.ml[351,10304+20])
                              Texp_apply
                              expression (lib/ident.ml[351,10304+18]..lib/ident.ml[351,10304+19])
                                Texp_ident "Stdlib!.!"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[351,10304+19]..lib/ident.ml[351,10304+20])
                                    Texp_ident "c/1375"
                              ]
                        ]
                        expression (lib/ident.ml[352,10328+6]..lib/ident.ml[353,10343+46])
                          Texp_sequence
                          expression (lib/ident.ml[352,10328+6]..lib/ident.ml[352,10328+12])
                            Texp_apply
                            expression (lib/ident.ml[352,10328+6]..lib/ident.ml[352,10328+10])
                              Texp_ident "Stdlib!.decr"
                            [
                              <arg>
                                Nolabel
                                expression (lib/ident.ml[352,10328+11]..lib/ident.ml[352,10328+12])
                                  Texp_ident "c/1375"
                            ]
                          expression (lib/ident.ml[353,10343+6]..lib/ident.ml[353,10343+46])
                            Texp_construct "Local"
                            [
                              expression (lib/ident.ml[353,10343+12]..lib/ident.ml[353,10343+46])
                                Texp_record
                                  fields =
                                    [
                                      "name"
                                        expression (lib/ident.ml[353,10343+21]..lib/ident.ml[353,10343+29])
                                          Texp_ident "key_name/1372"
                                      "stamp"
                                        expression (lib/ident.ml[353,10343+39]..lib/ident.ml[353,10343+44])
                                          Texp_ident "stamp/1377"
                                    ]
                                  representation =
Record_inlined 0
                                  extended_expression =
                                    None
                            ]
                    <case>
                      pattern (lib/ident.ml[354,10390+4]..lib/ident.ml[354,10390+13])
                        Tpat_var "global_id/1376"
                      expression (lib/ident.ml[355,10407+6]..lib/ident.ml[355,10407+73])
                        Texp_apply
                        expression (lib/ident.ml[355,10407+6]..lib/ident.ml[355,10407+23])
                          Texp_ident "Ocaml_ocaml_types!.Misc.fatal_errorf"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[355,10407+24]..lib/ident.ml[355,10407+56])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (lib/ident.ml[355,10407+24]..lib/ident.ml[355,10407+56]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                  [
                                    expression (lib/ident.ml[355,10407+24]..lib/ident.ml[355,10407+56]) ghost
                                      Texp_constant Const_string("Ident.make_key_generator () ",(lib/ident.ml[355,10407+24]..lib/ident.ml[355,10407+56]) ghost,None)
                                    expression (lib/ident.ml[355,10407+24]..lib/ident.ml[355,10407+56]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String"
                                      [
                                        expression (lib/ident.ml[355,10407+24]..lib/ident.ml[355,10407+56]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (lib/ident.ml[355,10407+24]..lib/ident.ml[355,10407+56]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                  ]
                                expression (lib/ident.ml[355,10407+24]..lib/ident.ml[355,10407+56]) ghost
                                  Texp_constant Const_string("Ident.make_key_generator () %s",(lib/ident.ml[355,10407+24]..lib/ident.ml[355,10407+56]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[355,10407+57]..lib/ident.ml[355,10407+73])
                              Texp_apply
                              expression (lib/ident.ml[355,10407+58]..lib/ident.ml[355,10407+62])
                                Texp_ident "name/333"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/ident.ml[355,10407+63]..lib/ident.ml[355,10407+72])
                                    Texp_ident "global_id/1376"
                              ]
                        ]
                  ]
    ]
  structure_item (lib/ident.ml[357,10482+0]..lib/ident.ml[374,10921+71])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[357,10482+4]..lib/ident.ml[357,10482+11])
          Tpat_var "compare/1379"
        expression (lib/ident.ml[357,10482+12]..lib/ident.ml[374,10921+71]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[357,10482+12]..lib/ident.ml[357,10482+13])
                Tpat_var "x/1380"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[357,10482+14]..lib/ident.ml[357,10482+15])
                Tpat_var "y/1381"
          ]
          Tfunction_body
            expression (lib/ident.ml[358,10500+2]..lib/ident.ml[374,10921+71])
              Texp_match
              expression (lib/ident.ml[358,10500+8]..lib/ident.ml[358,10500+12])
                Texp_tuple
                [
                  expression (lib/ident.ml[358,10500+8]..lib/ident.ml[358,10500+9])
                    Texp_ident "x/1380"
                  expression (lib/ident.ml[358,10500+11]..lib/ident.ml[358,10500+12])
                    Texp_ident "y/1381"
                ]
              [
                <case>
                  pattern (lib/ident.ml[359,10518+4]..lib/ident.ml[359,10518+20])
                    Tpat_value
                    pattern (lib/ident.ml[359,10518+4]..lib/ident.ml[359,10518+20])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[359,10518+4]..lib/ident.ml[359,10518+11])
                          Tpat_construct "Local"
                          [
                            pattern (lib/ident.ml[359,10518+10]..lib/ident.ml[359,10518+11])
                              Tpat_var "x/1382"
                          ]
                          None
                        pattern (lib/ident.ml[359,10518+13]..lib/ident.ml[359,10518+20])
                          Tpat_construct "Local"
                          [
                            pattern (lib/ident.ml[359,10518+19]..lib/ident.ml[359,10518+20])
                              Tpat_var "y/1383"
                          ]
                          None
                      ]
                  expression (lib/ident.ml[360,10542+6]..lib/ident.ml[362,10600+32])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/ident.ml[360,10542+10]..lib/ident.ml[360,10542+11])
                          Tpat_var "c/1390"
                        expression (lib/ident.ml[360,10542+14]..lib/ident.ml[360,10542+31])
                          Texp_apply
                          expression (lib/ident.ml[360,10542+22]..lib/ident.ml[360,10542+23])
                            Texp_ident "Stdlib!.-"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[360,10542+14]..lib/ident.ml[360,10542+21])
                                Texp_field
                                expression (lib/ident.ml[360,10542+14]..lib/ident.ml[360,10542+15])
                                  Texp_ident "x/1382"
                                "stamp"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[360,10542+24]..lib/ident.ml[360,10542+31])
                                Texp_field
                                expression (lib/ident.ml[360,10542+24]..lib/ident.ml[360,10542+25])
                                  Texp_ident "y/1383"
                                "stamp"
                          ]
                    ]
                    expression (lib/ident.ml[361,10577+6]..lib/ident.ml[362,10600+32])
                      Texp_ifthenelse
                      expression (lib/ident.ml[361,10577+9]..lib/ident.ml[361,10577+15])
                        Texp_apply
                        expression (lib/ident.ml[361,10577+11]..lib/ident.ml[361,10577+13])
                          Texp_ident "Stdlib!.<>"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[361,10577+9]..lib/ident.ml[361,10577+10])
                              Texp_ident "c/1390"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[361,10577+14]..lib/ident.ml[361,10577+15])
                              Texp_constant Const_int 0
                        ]
                      expression (lib/ident.ml[361,10577+21]..lib/ident.ml[361,10577+22])
                        Texp_ident "c/1390"
                      Some
                        expression (lib/ident.ml[362,10600+11]..lib/ident.ml[362,10600+32])
                          Texp_apply
                          expression (lib/ident.ml[362,10600+11]..lib/ident.ml[362,10600+18])
                            Texp_ident "Stdlib!.compare"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[362,10600+19]..lib/ident.ml[362,10600+25])
                                Texp_field
                                expression (lib/ident.ml[362,10600+19]..lib/ident.ml[362,10600+20])
                                  Texp_ident "x/1382"
                                "name"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[362,10600+26]..lib/ident.ml[362,10600+32])
                                Texp_field
                                expression (lib/ident.ml[362,10600+26]..lib/ident.ml[362,10600+27])
                                  Texp_ident "y/1383"
                                "name"
                          ]
                <case>
                  pattern (lib/ident.ml[363,10633+4]..lib/ident.ml[363,10633+14])
                    Tpat_value
                    pattern (lib/ident.ml[363,10633+4]..lib/ident.ml[363,10633+14])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[363,10633+4]..lib/ident.ml[363,10633+11])
                          Tpat_construct "Local"
                          [
                            pattern (lib/ident.ml[363,10633+10]..lib/ident.ml[363,10633+11])
                              Tpat_any
                          ]
                          None
                        pattern (lib/ident.ml[363,10633+13]..lib/ident.ml[363,10633+14])
                          Tpat_any
                      ]
                  expression (lib/ident.ml[363,10633+18]..lib/ident.ml[363,10633+19])
                    Texp_constant Const_int 1
                <case>
                  pattern (lib/ident.ml[364,10653+4]..lib/ident.ml[364,10653+14])
                    Tpat_value
                    pattern (lib/ident.ml[364,10653+4]..lib/ident.ml[364,10653+14])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[364,10653+4]..lib/ident.ml[364,10653+5])
                          Tpat_any
                        pattern (lib/ident.ml[364,10653+7]..lib/ident.ml[364,10653+14])
                          Tpat_construct "Local"
                          [
                            pattern (lib/ident.ml[364,10653+13]..lib/ident.ml[364,10653+14])
                              Tpat_any
                          ]
                          None
                      ]
                  expression (lib/ident.ml[364,10653+18]..lib/ident.ml[364,10653+22])
                    Texp_constant Const_int -1
                <case>
                  pattern (lib/ident.ml[365,10676+4]..lib/ident.ml[365,10676+22])
                    Tpat_value
                    pattern (lib/ident.ml[365,10676+4]..lib/ident.ml[365,10676+22])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[365,10676+4]..lib/ident.ml[365,10676+12])
                          Tpat_construct "Scoped"
                          [
                            pattern (lib/ident.ml[365,10676+11]..lib/ident.ml[365,10676+12])
                              Tpat_var "x/1384"
                          ]
                          None
                        pattern (lib/ident.ml[365,10676+14]..lib/ident.ml[365,10676+22])
                          Tpat_construct "Scoped"
                          [
                            pattern (lib/ident.ml[365,10676+21]..lib/ident.ml[365,10676+22])
                              Tpat_var "y/1385"
                          ]
                          None
                      ]
                  expression (lib/ident.ml[366,10702+6]..lib/ident.ml[368,10760+32])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/ident.ml[366,10702+10]..lib/ident.ml[366,10702+11])
                          Tpat_var "c/1391"
                        expression (lib/ident.ml[366,10702+14]..lib/ident.ml[366,10702+31])
                          Texp_apply
                          expression (lib/ident.ml[366,10702+22]..lib/ident.ml[366,10702+23])
                            Texp_ident "Stdlib!.-"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[366,10702+14]..lib/ident.ml[366,10702+21])
                                Texp_field
                                expression (lib/ident.ml[366,10702+14]..lib/ident.ml[366,10702+15])
                                  Texp_ident "x/1384"
                                "stamp"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[366,10702+24]..lib/ident.ml[366,10702+31])
                                Texp_field
                                expression (lib/ident.ml[366,10702+24]..lib/ident.ml[366,10702+25])
                                  Texp_ident "y/1385"
                                "stamp"
                          ]
                    ]
                    expression (lib/ident.ml[367,10737+6]..lib/ident.ml[368,10760+32])
                      Texp_ifthenelse
                      expression (lib/ident.ml[367,10737+9]..lib/ident.ml[367,10737+15])
                        Texp_apply
                        expression (lib/ident.ml[367,10737+11]..lib/ident.ml[367,10737+13])
                          Texp_ident "Stdlib!.<>"
                        [
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[367,10737+9]..lib/ident.ml[367,10737+10])
                              Texp_ident "c/1391"
                          <arg>
                            Nolabel
                            expression (lib/ident.ml[367,10737+14]..lib/ident.ml[367,10737+15])
                              Texp_constant Const_int 0
                        ]
                      expression (lib/ident.ml[367,10737+21]..lib/ident.ml[367,10737+22])
                        Texp_ident "c/1391"
                      Some
                        expression (lib/ident.ml[368,10760+11]..lib/ident.ml[368,10760+32])
                          Texp_apply
                          expression (lib/ident.ml[368,10760+11]..lib/ident.ml[368,10760+18])
                            Texp_ident "Stdlib!.compare"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[368,10760+19]..lib/ident.ml[368,10760+25])
                                Texp_field
                                expression (lib/ident.ml[368,10760+19]..lib/ident.ml[368,10760+20])
                                  Texp_ident "x/1384"
                                "name"
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[368,10760+26]..lib/ident.ml[368,10760+32])
                                Texp_field
                                expression (lib/ident.ml[368,10760+26]..lib/ident.ml[368,10760+27])
                                  Texp_ident "y/1385"
                                "name"
                          ]
                <case>
                  pattern (lib/ident.ml[369,10793+4]..lib/ident.ml[369,10793+15])
                    Tpat_value
                    pattern (lib/ident.ml[369,10793+4]..lib/ident.ml[369,10793+15])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[369,10793+4]..lib/ident.ml[369,10793+12])
                          Tpat_construct "Scoped"
                          [
                            pattern (lib/ident.ml[369,10793+11]..lib/ident.ml[369,10793+12])
                              Tpat_any
                          ]
                          None
                        pattern (lib/ident.ml[369,10793+14]..lib/ident.ml[369,10793+15])
                          Tpat_any
                      ]
                  expression (lib/ident.ml[369,10793+19]..lib/ident.ml[369,10793+20])
                    Texp_constant Const_int 1
                <case>
                  pattern (lib/ident.ml[370,10814+4]..lib/ident.ml[370,10814+15])
                    Tpat_value
                    pattern (lib/ident.ml[370,10814+4]..lib/ident.ml[370,10814+15])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[370,10814+4]..lib/ident.ml[370,10814+5])
                          Tpat_any
                        pattern (lib/ident.ml[370,10814+7]..lib/ident.ml[370,10814+15])
                          Tpat_construct "Scoped"
                          [
                            pattern (lib/ident.ml[370,10814+14]..lib/ident.ml[370,10814+15])
                              Tpat_any
                          ]
                          None
                      ]
                  expression (lib/ident.ml[370,10814+19]..lib/ident.ml[370,10814+23])
                    Texp_constant Const_int -1
                <case>
                  pattern (lib/ident.ml[371,10838+4]..lib/ident.ml[371,10838+22])
                    Tpat_value
                    pattern (lib/ident.ml[371,10838+4]..lib/ident.ml[371,10838+22])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[371,10838+4]..lib/ident.ml[371,10838+12])
                          Tpat_construct "Global"
                          [
                            pattern (lib/ident.ml[371,10838+11]..lib/ident.ml[371,10838+12])
                              Tpat_var "x/1386"
                          ]
                          None
                        pattern (lib/ident.ml[371,10838+14]..lib/ident.ml[371,10838+22])
                          Tpat_construct "Global"
                          [
                            pattern (lib/ident.ml[371,10838+21]..lib/ident.ml[371,10838+22])
                              Tpat_var "y/1387"
                          ]
                          None
                      ]
                  expression (lib/ident.ml[371,10838+26]..lib/ident.ml[371,10838+37])
                    Texp_apply
                    expression (lib/ident.ml[371,10838+26]..lib/ident.ml[371,10838+33])
                      Texp_ident "Stdlib!.compare"
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[371,10838+34]..lib/ident.ml[371,10838+35])
                          Texp_ident "x/1386"
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[371,10838+36]..lib/ident.ml[371,10838+37])
                          Texp_ident "y/1387"
                    ]
                <case>
                  pattern (lib/ident.ml[372,10876+4]..lib/ident.ml[372,10876+15])
                    Tpat_value
                    pattern (lib/ident.ml[372,10876+4]..lib/ident.ml[372,10876+15])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[372,10876+4]..lib/ident.ml[372,10876+12])
                          Tpat_construct "Global"
                          [
                            pattern (lib/ident.ml[372,10876+11]..lib/ident.ml[372,10876+12])
                              Tpat_any
                          ]
                          None
                        pattern (lib/ident.ml[372,10876+14]..lib/ident.ml[372,10876+15])
                          Tpat_any
                      ]
                  expression (lib/ident.ml[372,10876+19]..lib/ident.ml[372,10876+20])
                    Texp_constant Const_int 1
                <case>
                  pattern (lib/ident.ml[373,10897+4]..lib/ident.ml[373,10897+15])
                    Tpat_value
                    pattern (lib/ident.ml[373,10897+4]..lib/ident.ml[373,10897+15])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[373,10897+4]..lib/ident.ml[373,10897+5])
                          Tpat_any
                        pattern (lib/ident.ml[373,10897+7]..lib/ident.ml[373,10897+15])
                          Tpat_construct "Global"
                          [
                            pattern (lib/ident.ml[373,10897+14]..lib/ident.ml[373,10897+15])
                              Tpat_any
                          ]
                          None
                      ]
                  expression (lib/ident.ml[373,10897+19]..lib/ident.ml[373,10897+23])
                    Texp_constant Const_int -1
                <case>
                  pattern (lib/ident.ml[374,10921+4]..lib/ident.ml[374,10921+54])
                    Tpat_value
                    pattern (lib/ident.ml[374,10921+4]..lib/ident.ml[374,10921+54])
                      Tpat_tuple
                      [
                        pattern (lib/ident.ml[374,10921+4]..lib/ident.ml[374,10921+28])
                          Tpat_construct "Predef"
                          [
                            pattern (lib/ident.ml[374,10921+11]..lib/ident.ml[374,10921+28])
                              Tpat_record
                              [
                                "stamp"
                                  pattern (lib/ident.ml[374,10921+21]..lib/ident.ml[374,10921+23])
                                    Tpat_var "s1/1388"
                              ]
                          ]
                          None
                        pattern (lib/ident.ml[374,10921+30]..lib/ident.ml[374,10921+54])
                          Tpat_construct "Predef"
                          [
                            pattern (lib/ident.ml[374,10921+37]..lib/ident.ml[374,10921+54])
                              Tpat_record
                              [
                                "stamp"
                                  pattern (lib/ident.ml[374,10921+47]..lib/ident.ml[374,10921+49])
                                    Tpat_var "s2/1389"
                              ]
                          ]
                          None
                      ]
                  expression (lib/ident.ml[374,10921+58]..lib/ident.ml[374,10921+71])
                    Texp_apply
                    expression (lib/ident.ml[374,10921+58]..lib/ident.ml[374,10921+65])
                      Texp_ident "Stdlib!.compare"
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[374,10921+66]..lib/ident.ml[374,10921+68])
                          Texp_ident "s1/1388"
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[374,10921+69]..lib/ident.ml[374,10921+71])
                          Texp_ident "s2/1389"
                    ]
              ]
    ]
  structure_item (lib/ident.ml[376,10994+0]..lib/ident.ml[376,10994+52])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[376,10994+4]..lib/ident.ml[376,10994+10])
          Tpat_var "output/1392"
        expression (lib/ident.ml[376,10994+11]..lib/ident.ml[376,10994+52]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[376,10994+11]..lib/ident.ml[376,10994+13])
                Tpat_var "oc/1393"
            Nolabel
            Param_pat
              pattern (lib/ident.ml[376,10994+14]..lib/ident.ml[376,10994+16])
                Tpat_var "id/1394"
          ]
          Tfunction_body
            expression (lib/ident.ml[376,10994+19]..lib/ident.ml[376,10994+52])
              Texp_apply
              expression (lib/ident.ml[376,10994+19]..lib/ident.ml[376,10994+32])
                Texp_ident "Stdlib!.output_string"
              [
                <arg>
                  Nolabel
                  expression (lib/ident.ml[376,10994+33]..lib/ident.ml[376,10994+35])
                    Texp_ident "oc/1393"
                <arg>
                  Nolabel
                  expression (lib/ident.ml[376,10994+36]..lib/ident.ml[376,10994+52])
                    Texp_apply
                    expression (lib/ident.ml[376,10994+37]..lib/ident.ml[376,10994+48])
                      Texp_ident "unique_name/443"
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[376,10994+49]..lib/ident.ml[376,10994+51])
                          Texp_ident "id/1394"
                    ]
              ]
    ]
  structure_item (lib/ident.ml[377,11047+0]..lib/ident.ml[377,11047+52])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[377,11047+4]..lib/ident.ml[377,11047+8])
          Tpat_var "hash/1395"
        expression (lib/ident.ml[377,11047+9]..lib/ident.ml[377,11047+52]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/ident.ml[377,11047+9]..lib/ident.ml[377,11047+10])
                Tpat_var "i/1397"
          ]
          Tfunction_body
            expression (lib/ident.ml[377,11047+13]..lib/ident.ml[377,11047+52])
              Texp_apply
              expression (lib/ident.ml[377,11047+38]..lib/ident.ml[377,11047+42])
                Texp_ident "Stdlib!.lxor"
              [
                <arg>
                  Nolabel
                  expression (lib/ident.ml[377,11047+13]..lib/ident.ml[377,11047+37])
                    Texp_apply
                    expression (lib/ident.ml[377,11047+14]..lib/ident.ml[377,11047+23])
                      Texp_ident "Stdlib!.Char.code"
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[377,11047+24]..lib/ident.ml[377,11047+36])
                          Texp_apply
                          expression (lib/ident.ml[377,11047+24]..lib/ident.ml[377,11047+36]) ghost
                            Texp_ident "Stdlib!.String.get"
                          [
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[377,11047+24]..lib/ident.ml[377,11047+32])
                                Texp_apply
                                expression (lib/ident.ml[377,11047+25]..lib/ident.ml[377,11047+29])
                                  Texp_ident "name/333"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/ident.ml[377,11047+30]..lib/ident.ml[377,11047+31])
                                      Texp_ident "i/1397"
                                ]
                            <arg>
                              Nolabel
                              expression (lib/ident.ml[377,11047+34]..lib/ident.ml[377,11047+35])
                                Texp_constant Const_int 0
                          ]
                    ]
                <arg>
                  Nolabel
                  expression (lib/ident.ml[377,11047+43]..lib/ident.ml[377,11047+52])
                    Texp_apply
                    expression (lib/ident.ml[377,11047+44]..lib/ident.ml[377,11047+49])
                      Texp_ident "stamp/519"
                    [
                      <arg>
                        Nolabel
                        expression (lib/ident.ml[377,11047+50]..lib/ident.ml[377,11047+51])
                          Texp_ident "i/1397"
                    ]
              ]
    ]
  structure_item (lib/ident.ml[379,11101+0]..lib/ident.ml[379,11101+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[379,11101+4]..lib/ident.ml[379,11101+18])
          Tpat_var "original_equal/1409"
        expression (lib/ident.ml[379,11101+21]..lib/ident.ml[379,11101+26])
          Texp_ident "equal/495"
    ]
  structure_item (lib/ident.ml[388,11338+0]..lib/ident.ml[388,11338+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/ident.ml[388,11338+4]..lib/ident.ml[388,11338+9])
          Tpat_var "equal/1410"
        expression (lib/ident.ml[388,11338+12]..lib/ident.ml[388,11338+26])
          Texp_ident "original_equal/1409"
    ]
]

{<Ocaml_ocaml_types__Ident>
 "add"[value] -> <Ocaml_ocaml_types__Ident.141>;
 "balance"[value] -> <Ocaml_ocaml_types__Ident.113>;
 "compare"[value] -> <Ocaml_ocaml_types__Ident.241>;
 "create_local"[value] -> <Ocaml_ocaml_types__Ident.37>;
 "create_persistent"[value] -> <Ocaml_ocaml_types__Ident.41>;
 "create_predef"[value] -> <Ocaml_ocaml_types__Ident.39>;
 "create_scoped"[value] -> <Ocaml_ocaml_types__Ident.34>;
 "currentstamp"[value] -> <Ocaml_ocaml_types__Ident.32>;
 "data"[type] -> <Ocaml_ocaml_types__Ident.98>;
 "empty"[value] -> <Ocaml_ocaml_types__Ident.104>;
 "equal"[value] -> <Ocaml_ocaml_types__Ident.260>;
 "find_all"[value] -> <Ocaml_ocaml_types__Ident.191>;
 "find_all_seq"[value] -> <Ocaml_ocaml_types__Ident.200>;
 "find_name"[value] -> <Ocaml_ocaml_types__Ident.183>;
 "find_previous"[value] -> <Ocaml_ocaml_types__Ident.174>;
 "find_same"[value] -> <Ocaml_ocaml_types__Ident.177>;
 "fold_all"[value] -> <Ocaml_ocaml_types__Ident.226>;
 "fold_aux"[value] -> <Ocaml_ocaml_types__Ident.207>;
 "fold_data"[value] -> <Ocaml_ocaml_types__Ident.221>;
 "fold_name"[value] -> <Ocaml_ocaml_types__Ident.216>;
 "get_all"[value] -> <Ocaml_ocaml_types__Ident.189>;
 "get_all_seq"[value] -> <Ocaml_ocaml_types__Ident.197>;
 "global"[value] -> <Ocaml_ocaml_types__Ident.78>;
 "hash"[value] -> <Ocaml_ocaml_types__Ident.257>;
 "highest_scope"[value] -> <Ocaml_ocaml_types__Ident.4>;
 "is_predef"[value] -> <Ocaml_ocaml_types__Ident.79>;
 "iter"[value] -> <Ocaml_ocaml_types__Ident.231>;
 "key_name"[value] -> <Ocaml_ocaml_types__Ident.236>;
 "lowest_scope"[value] -> <Ocaml_ocaml_types__Ident.3>;
 "make_key_generator"[value] -> <Ocaml_ocaml_types__Ident.237>;
 "merge"[value] -> <Ocaml_ocaml_types__Ident.157>;
 "min_binding"[value] -> <Ocaml_ocaml_types__Ident.149>;
 "mknode"[value] -> <Ocaml_ocaml_types__Ident.105>;
 "name"[value] -> <Ocaml_ocaml_types__Ident.43>;
 "original_equal"[value] -> <Ocaml_ocaml_types__Ident.259>;
 "output"[value] -> <Ocaml_ocaml_types__Ident.254>;
 "persistent"[value] -> <Ocaml_ocaml_types__Ident.57>;
 "predefstamp"[value] -> <Ocaml_ocaml_types__Ident.33>;
 "print"[value] -> <Ocaml_ocaml_types__Ident.94>;
 "print_with_scope"[value] -> <Ocaml_ocaml_types__Ident.91>;
 "reinit"[value] -> <Ocaml_ocaml_types__Ident.77>;
 "reinit_level"[value] -> <Ocaml_ocaml_types__Ident.76>;
 "remove"[value] -> <Ocaml_ocaml_types__Ident.163>;
 "remove_min_binding"[value] -> <Ocaml_ocaml_types__Ident.152>;
 "rename"[value] -> <Ocaml_ocaml_types__Ident.45>;
 "same"[value] -> <Ocaml_ocaml_types__Ident.65>;
 "scope"[value] -> <Ocaml_ocaml_types__Ident.74>;
 "stamp"[value] -> <Ocaml_ocaml_types__Ident.72>;
 "t"[type] -> <Ocaml_ocaml_types__Ident.5>;
 "tbl"[type] -> <Ocaml_ocaml_types__Ident.97>;
 "unique_name"[value] -> <Ocaml_ocaml_types__Ident.48>;
 "unique_toplevel_name"[value] -> <Ocaml_ocaml_types__Ident.53>;
 }

(setglobal Ocaml_ocaml_types__Ident!
  (let
    (lowest_scope/304 =[int] 0
     highest_scope/305 =[int] 100000000
     currentstamp/318 =
       (after Ocaml_ocaml_types__Ident.currentstamp lib/ident.ml(31):1514-1521
         (apply (field_imm 4 (global Ocaml_ocaml_types__Local_store!)) 0))
     predefstamp/319 =
       (after Ocaml_ocaml_types__Ident.predefstamp lib/ident.ml(32):1540-1547
         (apply (field_imm 4 (global Ocaml_ocaml_types__Local_store!)) 0))
     create_scoped/320 =
       (function scope/322[int] s/323
         (funct-body Ocaml_ocaml_types__Ident.create_scoped lib/ident.ml(34)<ghost>:1567-1650
           (before Ocaml_ocaml_types__Ident.create_scoped lib/ident.ml(35):1580-1650
             (seq (+:=1 currentstamp/318)
               (before Ocaml_ocaml_types__Ident.create_scoped lib/ident.ml(36):1601-1650
                 (makeblock 1 (*,int,int) s/323
                   (field_int 0 currentstamp/318) scope/322))))))
     create_local/324 =
       (function s/326
         (funct-body Ocaml_ocaml_types__Ident.create_local lib/ident.ml(38)<ghost>:1669-1737
           (before Ocaml_ocaml_types__Ident.create_local lib/ident.ml(39):1675-1737
             (seq (+:=1 currentstamp/318)
               (before Ocaml_ocaml_types__Ident.create_local lib/ident.ml(40):1696-1737
                 (makeblock 0 (*,int) s/326 (field_int 0 currentstamp/318)))))))
     create_predef/327 =
       (function s/329
         (funct-body Ocaml_ocaml_types__Ident.create_predef lib/ident.ml(42)<ghost>:1757-1824
           (before Ocaml_ocaml_types__Ident.create_predef lib/ident.ml(43):1763-1824
             (seq (+:=1 predefstamp/319)
               (before Ocaml_ocaml_types__Ident.create_predef lib/ident.ml(44):1783-1824
                 (makeblock 3 (*,int) s/329 (field_int 0 predefstamp/319)))))))
     create_persistent/330 =
       (function s/332
         (funct-body Ocaml_ocaml_types__Ident.create_persistent lib/ident.ml(46)<ghost>:1848-1862
           (before Ocaml_ocaml_types__Ident.create_persistent lib/ident.ml(47):1854-1862
             (makeblock 2 s/332))))
     name/333 =
       (function param/339
         (funct-body Ocaml_ocaml_types__Ident.name lib/ident.ml(49):1875-1975
           (let (name/335 =a (field_imm 0 param/339))
             (before Ocaml_ocaml_types__Ident.name lib/ident.ml(53):1971-1975
               name/335))))
     rename/340 =
       (function id/344
         (funct-body Ocaml_ocaml_types__Ident.rename lib/ident.ml(55):1990-2204
           (catch
             (catch
               (catch
                 (switch* id/344
                  case tag 0: (exit 4)
                  case tag 1: (exit 4)
                  case tag 2: (exit 3)
                  case tag 3: (exit 3))
                with (4)
                 (let
                   (*match*/3241 =a (field_int 1 id/344)
                    name/3240 =a (field_imm 0 id/344))
                   (exit 2 name/3240)))
              with (3)
               (before Ocaml_ocaml_types__Ident.rename lib/ident.ml(61):2159-2204
                 (after Ocaml_ocaml_types__Ident.rename lib/ident.ml(61):2159-2204
                   (apply (field_imm 1 (global Ocaml_ocaml_types__Misc!))
                     [0: [11: "Ident.rename " [2: 0 0]] "Ident.rename %s"]
                     (after Ocaml_ocaml_types__Ident.rename lib/ident.ml(61):2195-2204
                       (apply name/333 id/344))))))
            with (2 name/342)
             (before Ocaml_ocaml_types__Ident.rename lib/ident.ml(58):2080-2142
               (seq (+:=1 currentstamp/318)
                 (before Ocaml_ocaml_types__Ident.rename lib/ident.ml(59):2105-2142
                   (makeblock 0 (*,int) name/342
                     (field_int 0 currentstamp/318))))))))
     unique_name/443 =
       (function param/482
         (funct-body Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(63):2224-2748
           (catch
             (catch
               (switch* param/482
                case tag 0: (exit 6)
                case tag 1: (exit 6)
                case tag 2:
                 (let (name/449 =a (field_imm 0 param/482))
                   (before Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(70):2568-2579
                     (after Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(70):2568-2579
                       (apply (field_imm 27 (global Stdlib!)) name/449 "_0"))))
                case tag 3:
                 (let
                   (*match*/3248 =a (field_int 1 param/482)
                    name/450 =a (field_imm 0 param/482))
                   (before Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(74):2744-2748
                     name/450)))
              with (6)
               (let
                 (stamp/3247 =a (field_int 1 param/482)
                  name/3246 =a (field_imm 0 param/482))
                 (exit 5 name/3246 stamp/3247)))
            with (5 name/445 stamp/446[int])
             (before Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(65):2289-2321
               (after Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(65):2289-2321
                 (apply (field_imm 27 (global Stdlib!)) name/445
                   (after Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(65):2296-2321
                     (apply (field_imm 27 (global Stdlib!)) "_"
                       (after Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(65):2302-2321
                         (apply (field_imm 11 (global Stdlib__Int!))
                           stamp/446))))))))))
     unique_toplevel_name/483 =
       (function param/491
         (funct-body Ocaml_ocaml_types__Ident.unique_toplevel_name lib/ident.ml(76):2777-2921
           (catch
             (catch
               (catch
                 (catch
                   (switch* param/491
                    case tag 0: (exit 9)
                    case tag 1: (exit 9)
                    case tag 2: (exit 10)
                    case tag 3: (exit 10))
                  with (9)
                   (let
                     (stamp/3253 =a (field_int 1 param/491)
                      name/3252 =a (field_imm 0 param/491))
                     (exit 7 name/3252 stamp/3253)))
                with (10)
                 (let (name/3255 =a (field_imm 0 param/491))
                   (exit 8 name/3255)))
              with (7 name/485 stamp/486[int])
               (before Ocaml_ocaml_types__Ident.unique_toplevel_name lib/ident.ml(78):2842-2874
                 (after Ocaml_ocaml_types__Ident.unique_toplevel_name lib/ident.ml(78):2842-2874
                   (apply (field_imm 27 (global Stdlib!)) name/485
                     (after Ocaml_ocaml_types__Ident.unique_toplevel_name lib/ident.ml(78):2849-2874
                       (apply (field_imm 27 (global Stdlib!)) "/"
                         (after Ocaml_ocaml_types__Ident.unique_toplevel_name lib/ident.ml(78):2855-2874
                           (apply (field_imm 11 (global Stdlib__Int!))
                             stamp/486))))))))
            with (8 name/489)
             (before Ocaml_ocaml_types__Ident.unique_toplevel_name lib/ident.ml(80):2917-2921
               name/489))))
     persistent/492 =
       (function param/494 : int
         (funct-body Ocaml_ocaml_types__Ident.persistent lib/ident.ml(82):2940-2984
           (catch
             (switch param/494
              case tag 2:
               (let (*match*/3258 =a (field_imm 0 param/494))
                 (before Ocaml_ocaml_types__Ident.persistent lib/ident.ml(83):2965-2969
                   1))
              default: (exit 11))
            with (11)
             (before Ocaml_ocaml_types__Ident.persistent lib/ident.ml(84):2979-2984
               0))))
     equal/495 =
       (function i1/497 i2/498 : int
         (funct-body Ocaml_ocaml_types__Ident.equal lib/ident.ml(86)<ghost>:2996-3360
           (before Ocaml_ocaml_types__Ident.equal lib/ident.ml(87):3006-3360
             (catch
               (catch
                 (switch* i1/497
                  case tag 0:
                   (switch i2/498
                    case tag 0:
                     (let
                       (*match*/3268 =a (field_int 1 i2/498)
                        name2/3264 =a (field_imm 0 i2/498)
                        *match*/3267 =a (field_int 1 i1/497)
                        name1/3263 =a (field_imm 0 i1/497))
                       (exit 12 name1/3263 name2/3264))
                    default: (exit 13))
                  case tag 1:
                   (switch i2/498
                    case tag 1:
                     (let
                       (*match*/3272 =a (field_int 2 i2/498)
                        *match*/3271 =a (field_int 1 i2/498)
                        name2/3262 =a (field_imm 0 i2/498)
                        *match*/3270 =a (field_int 2 i1/497)
                        *match*/3269 =a (field_int 1 i1/497)
                        name1/3261 =a (field_imm 0 i1/497))
                       (exit 12 name1/3261 name2/3262))
                    default: (exit 13))
                  case tag 2:
                   (switch i2/498
                    case tag 2:
                     (let
                       (name2/3260 =a (field_imm 0 i2/498)
                        name1/3259 =a (field_imm 0 i1/497))
                       (exit 12 name1/3259 name2/3260))
                    default: (exit 13))
                  case tag 3:
                   (switch i2/498
                    case tag 3:
                     (let
                       (s2/506 =a (field_int 1 i2/498)
                        *match*/3266 =a (field_imm 0 i2/498)
                        s1/505 =a (field_int 1 i1/497)
                        *match*/3265 =a (field_imm 0 i1/497))
                       (before Ocaml_ocaml_types__Ident.equal lib/ident.ml(94):3332-3339
                         (== s1/505 s2/506)))
                    default: (exit 13)))
                with (13)
                 (before Ocaml_ocaml_types__Ident.equal lib/ident.ml(96):3355-3360
                   0))
              with (12 name1/499 name2/500)
               (before Ocaml_ocaml_types__Ident.equal lib/ident.ml(91):3180-3193
                 (after Ocaml_ocaml_types__Ident.equal lib/ident.ml(91):3180-3193
                   (caml_string_equal name1/499 name2/500)))))))
     same/507 =
       (function i1/509 i2/510 : int
         (funct-body Ocaml_ocaml_types__Ident.same lib/ident.ml(98)<ghost>:3371-3650
           (before Ocaml_ocaml_types__Ident.same lib/ident.ml(99):3381-3650
             (catch
               (catch
                 (switch* i1/509
                  case tag 0:
                   (switch i2/510
                    case tag 0:
                     (let
                       (s2/3278 =a (field_int 1 i2/510)
                        *match*/3280 =a (field_imm 0 i2/510)
                        s1/3277 =a (field_int 1 i1/509)
                        *match*/3279 =a (field_imm 0 i1/509))
                       (exit 14 s1/3277 s2/3278))
                    default: (exit 15))
                  case tag 1:
                   (switch i2/510
                    case tag 1:
                     (let
                       (*match*/3284 =a (field_int 2 i2/510)
                        s2/3276 =a (field_int 1 i2/510)
                        *match*/3283 =a (field_imm 0 i2/510)
                        *match*/3282 =a (field_int 2 i1/509)
                        s1/3275 =a (field_int 1 i1/509)
                        *match*/3281 =a (field_imm 0 i1/509))
                       (exit 14 s1/3275 s2/3276))
                    default: (exit 15))
                  case tag 2:
                   (switch i2/510
                    case tag 2:
                     (let
                       (name2/518 =a (field_imm 0 i2/510)
                        name1/517 =a (field_imm 0 i1/509))
                       (before Ocaml_ocaml_types__Ident.same lib/ident.ml(105):3616-3629
                         (after Ocaml_ocaml_types__Ident.same lib/ident.ml(105):3616-3629
                           (caml_string_equal name1/517 name2/518))))
                    default: (exit 15))
                  case tag 3:
                   (switch i2/510
                    case tag 3:
                     (let
                       (s2/3274 =a (field_int 1 i2/510)
                        *match*/3286 =a (field_imm 0 i2/510)
                        s1/3273 =a (field_int 1 i1/509)
                        *match*/3285 =a (field_imm 0 i1/509))
                       (exit 14 s1/3273 s2/3274))
                    default: (exit 15)))
                with (15)
                 (before Ocaml_ocaml_types__Ident.same lib/ident.ml(107):3645-3650
                   0))
              with (14 s1/511[int] s2/512[int])
               (before Ocaml_ocaml_types__Ident.same lib/ident.ml(103):3568-3575
                 (== s1/511 s2/512))))))
     stamp/519 =
       (function param/523 : int
         (funct-body Ocaml_ocaml_types__Ident.stamp lib/ident.ml(109):3664-3739
           (catch
             (catch
               (catch
                 (switch* param/523
                  case tag 0: (exit 18)
                  case tag 1: (exit 18)
                  case tag 2: (exit 17)
                  case tag 3: (exit 17))
                with (18)
                 (let
                   (stamp/3288 =a (field_int 1 param/523)
                    *match*/3289 =a (field_imm 0 param/523))
                   (exit 16 stamp/3288)))
              with (17)
               (before Ocaml_ocaml_types__Ident.stamp lib/ident.ml(112):3738-3739
                 0))
            with (16 stamp/521[int])
             (before Ocaml_ocaml_types__Ident.stamp lib/ident.ml(111):3723-3728
               stamp/521))))
     scope/524 =
       (function param/527 : int
         (funct-body Ocaml_ocaml_types__Ident.scope lib/ident.ml(114):3753-3863
           (catch
             (switch* param/527
              case tag 0:
               (before Ocaml_ocaml_types__Ident.scope lib/ident.ml(116):3810-3823
                 highest_scope/305)
              case tag 1:
               (let
                 (scope/526 =a (field_int 2 param/527)
                  *match*/3293 =a (field_int 1 param/527)
                  *match*/3292 =a (field_imm 0 param/527))
                 (before Ocaml_ocaml_types__Ident.scope lib/ident.ml(115):3789-3794
                   scope/526))
              case tag 2: (exit 19)
              case tag 3: (exit 19))
            with (19)
             (before Ocaml_ocaml_types__Ident.scope lib/ident.ml(117):3851-3863
               lowest_scope/304))))
     reinit_level/528 = (makemutable 0 (int) -1)
     reinit/529 =
       (function param/531[int] : int
         (funct-body Ocaml_ocaml_types__Ident.reinit lib/ident.ml(121)<ghost>:3905-4006
           (before Ocaml_ocaml_types__Ident.reinit lib/ident.ml(122):3912-4006
             (if (< (field_int 0 reinit_level/528) 0)
               (before Ocaml_ocaml_types__Ident.reinit lib/ident.ml(123):3940-3969
                 (setfield_imm 0 reinit_level/528
                   (field_int 0 currentstamp/318)))
               (before Ocaml_ocaml_types__Ident.reinit lib/ident.ml(124):3977-4006
                 (setfield_imm 0 currentstamp/318
                   (field_int 0 reinit_level/528)))))))
     global/532 =
       (function param/534 : int
         (funct-body Ocaml_ocaml_types__Ident.global lib/ident.ml(126):4021-4097
           (catch
             (catch
               (switch* param/534
                case tag 0: (exit 20)
                case tag 1: (exit 20)
                case tag 2: (exit 21)
                case tag 3: (exit 21))
              with (20)
               (before Ocaml_ocaml_types__Ident.global lib/ident.ml(128):4058-4063
                 0))
            with (21)
             (before Ocaml_ocaml_types__Ident.global lib/ident.ml(130):4093-4097
               1))))
     is_predef/535 =
       (function param/537 : int
         (funct-body Ocaml_ocaml_types__Ident.is_predef lib/ident.ml(132):4115-4159
           (catch
             (switch param/537
              case tag 3:
               (before Ocaml_ocaml_types__Ident.is_predef lib/ident.ml(133):4140-4144
                 1)
              default: (exit 22))
            with (22)
             (before Ocaml_ocaml_types__Ident.is_predef lib/ident.ml(134):4154-4159
               0))))
     print/538 =
       (function with_scope/540[int] ppf/541
         (funct-body Ocaml_ocaml_types__Ident.print lib/ident.ml(136)<ghost>:4171-4707
           (before Ocaml_ocaml_types__Ident.print lib/ident.ml(137):4191-4707
             (function param/999 : int
               (funct-body Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(138):4212-4707
                 (switch* param/999
                  case tag 0:
                   (let
                     (n/704 =a (field_int 1 param/999)
                      name/703 =a (field_imm 0 param/999))
                     (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(144):4429-4514
                       (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(144):4429-4514
                         (apply (field_imm 138 (global Stdlib__Format!))
                           ppf/541 [0: [2: 0 [2: 0 0]] "%s%s"] name/703
                           (if
                             (field_int 0
                               (field_imm 58
                                 (global Ocaml_ocaml_types__Clflags!)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(145):4490-4505
                               (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(145):4490-4505
                                 (apply
                                   (field_imm 141 (global Stdlib__Format!))
                                   [0: [12: '/' [4: 3 0 0 0]] "/%i"] n/704)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(145):4511-4513
                               ""))))))
                  case tag 1:
                   (let
                     (scope/707 =a (field_int 2 param/999)
                      n/706 =a (field_int 1 param/999)
                      name/705 =a (field_imm 0 param/999))
                     (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(147):4562-4707
                       (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(147):4562-4707
                         (apply (field_imm 138 (global Stdlib__Format!))
                           ppf/541 [0: [2: 0 [2: 0 [2: 0 0]]] "%s%s%s"]
                           name/705
                           (if
                             (field_int 0
                               (field_imm 58
                                 (global Ocaml_ocaml_types__Clflags!)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(148):4625-4640
                               (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(148):4625-4640
                                 (apply
                                   (field_imm 141 (global Stdlib__Format!))
                                   [0: [12: '/' [4: 3 0 0 0]] "/%i"] n/706)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(148):4646-4648
                               ""))
                           (if with_scope/540
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(149):4678-4698
                               (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(149):4678-4698
                                 (apply
                                   (field_imm 141 (global Stdlib__Format!))
                                   [0:
                                    [12: '[' [4: 3 0 0 [12: ']' 0]]] "[%i]"]
                                   scope/707)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(149):4704-4706
                               ""))))))
                  case tag 2:
                   (let (name/700 =a (field_imm 0 param/999))
                     (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(139):4240-4262
                       (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(139):4240-4262
                         (apply (field_imm 138 (global Stdlib__Format!))
                           ppf/541 [0: [2: 0 [12: '!' 0]] "%s!"] name/700))))
                  case tag 3:
                   (let
                     (n/702 =a (field_int 1 param/999)
                      name/701 =a (field_imm 0 param/999))
                     (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(141):4303-4389
                       (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(141):4303-4389
                         (apply (field_imm 138 (global Stdlib__Format!))
                           ppf/541 [0: [2: 0 [2: 0 [12: '!' 0]]] "%s%s!"]
                           name/701
                           (if
                             (field_int 0
                               (field_imm 58
                                 (global Ocaml_ocaml_types__Clflags!)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(142):4365-4380
                               (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(142):4365-4380
                                 (apply
                                   (field_imm 141 (global Stdlib__Format!))
                                   [0: [12: '/' [4: 3 0 0 0]] "/%i"] n/702)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(142):4386-4388
                               ""))))))))))))
     print_with_scope/1000 =
       (function ppf/1002 id/1003 : int
         (funct-body Ocaml_ocaml_types__Ident.print_with_scope lib/ident.ml(151)<ghost>:4730-4768
           (before Ocaml_ocaml_types__Ident.print_with_scope lib/ident.ml(151):4739-4768
             (after Ocaml_ocaml_types__Ident.print_with_scope lib/ident.ml(151):4739-4768
               (apply print/538 1 ppf/1002 id/1003)))))
     print/1004 =
       (function ppf/1005 id/1006 : int
         (funct-body Ocaml_ocaml_types__Ident.print lib/ident.ml(153)<ghost>:4780-4819
           (before Ocaml_ocaml_types__Ident.print lib/ident.ml(153):4789-4819
             (after Ocaml_ocaml_types__Ident.print lib/ident.ml(153):4789-4819
               (apply print/538 0 ppf/1005 id/1006)))))
     empty/1014 = 0
     mknode/1015 =
       (function l/1017 d/1018 r/1019
         (funct-body Ocaml_ocaml_types__Ident.mknode lib/ident.ml(185)<ghost>:5635-5812
           (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(186):5645-5812
             (let
               (hl/1020 =[int]
                  (if l/1017
                    (let
                      (h/1022 =a (field_imm 3 l/1017)
                       *match*/3298 =a (field_imm 2 l/1017)
                       *match*/3297 =a (field_imm 1 l/1017)
                       *match*/3296 =a (field_imm 0 l/1017))
                      (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(186):5697-5698
                        h/1022))
                    (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(186):5676-5677
                      0))
                hr/1021 =[int]
                  (if r/1019
                    (let
                      (h/1023 =a (field_imm 3 r/1019)
                       *match*/3301 =a (field_imm 2 r/1019)
                       *match*/3300 =a (field_imm 1 r/1019)
                       *match*/3299 =a (field_imm 0 r/1019))
                      (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(187):5753-5754
                        h/1023))
                    (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(187):5732-5733
                      0)))
               (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(188):5760-5812
                 (makeblock 0 (*,*,*,int) l/1017 d/1018 r/1019
                   (if (>= hl/1020 hr/1021)
                     (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(188):5792-5798
                       (+ hl/1020 1))
                     (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(188):5804-5810
                       (+ hr/1021 1)))))))))
     balance/1024 =
       (function l/1026 d/1027 r/1028
         (funct-body Ocaml_ocaml_types__Ident.balance lib/ident.ml(190)<ghost>:5826-6690
           (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(191):5836-6690
             (let
               (hl/1029 =[int]
                  (if l/1026
                    (let
                      (h/1031 =a (field_imm 3 l/1026)
                       *match*/3322 =a (field_imm 2 l/1026)
                       *match*/3321 =a (field_imm 1 l/1026)
                       *match*/3320 =a (field_imm 0 l/1026))
                      (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(191):5888-5889
                        h/1031))
                    (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(191):5867-5868
                      0))
                hr/1030 =[int]
                  (if r/1028
                    (let
                      (h/1032 =a (field_imm 3 r/1028)
                       *match*/3325 =a (field_imm 2 r/1028)
                       *match*/3324 =a (field_imm 1 r/1028)
                       *match*/3323 =a (field_imm 0 r/1028))
                      (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(192):5944-5945
                        h/1032))
                    (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(192):5923-5924
                      0)))
               (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(193):5951-6690
                 (if (> hl/1029 (+ hr/1030 1))
                   (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(194):5975-6304
                     (catch
                       (if l/1026
                         (let
                           (lr/1035 =a (field_imm 2 l/1026)
                            ld/1034 =a (field_imm 1 l/1026)
                            ll/1033 =a (field_imm 0 l/1026))
                           (catch
                             (let (*match*/3317 =a (field_imm 3 l/1026))
                               (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(196):6026-6135
                                 (if
                                   (>=
                                     (if ll/1033
                                       (let
                                         (h/1041 =a (field_imm 3 ll/1033)
                                          *match*/3313 =a
                                            (field_imm 2 ll/1033)
                                          *match*/3312 =a
                                            (field_imm 1 ll/1033)
                                          *match*/3311 =a
                                            (field_imm 0 ll/1033))
                                         (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(196):6071-6072
                                           h/1041))
                                       (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(196):6050-6051
                                         0))
                                     (if lr/1035
                                       (let
                                         (h/1042 =a (field_imm 3 lr/1035)
                                          *match*/3316 =a
                                            (field_imm 2 lr/1035)
                                          *match*/3315 =a
                                            (field_imm 1 lr/1035)
                                          *match*/3314 =a
                                            (field_imm 0 lr/1035))
                                         (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(197):6133-6134
                                           h/1042))
                                       (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(197):6112-6113
                                         0)))
                                   (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(198):6147-6175
                                     (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(198):6147-6175
                                       (apply mknode/1015 ll/1033 ld/1034
                                         (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(198):6160-6175
                                           (apply mknode/1015 lr/1035 d/1027
                                             r/1028)))))
                                   (exit 26))))
                            with (26)
                             (if lr/1035
                               (let
                                 (ld/1037 =a ld/1034
                                  ll/1036 =a ll/1033
                                  *match*/3319 =a (field_imm 3 l/1026)
                                  *match*/3318 =a (field_imm 3 lr/1035)
                                  lrr/1040 =a (field_imm 2 lr/1035)
                                  lrd/1039 =a (field_imm 1 lr/1035)
                                  lrl/1038 =a (field_imm 0 lr/1035))
                                 (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(200):6234-6280
                                   (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(200):6234-6280
                                     (apply mknode/1015
                                       (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(200):6241-6259
                                         (apply mknode/1015 ll/1036 ld/1037
                                           lrl/1038))
                                       lrd/1039
                                       (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(200):6264-6280
                                         (apply mknode/1015 lrr/1040 d/1027
                                           r/1028))))))
                               (exit 25))))
                         (exit 25))
                      with (25)
                       (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(201):6292-6304
                         (raise
                           (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(201):6292-6304
                             (makeblock 0 (global Assert_failure/28!)
                               [0: "lib/ident.ml" 201 11]))))))
                   (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(202):6312-6690
                     (if (> hr/1030 (+ hl/1029 1))
                       (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(203):6336-6666
                         (catch
                           (if r/1028
                             (let (rl/1043 =a (field_imm 0 r/1028))
                               (catch
                                 (let
                                   (*match*/3308 =a (field_imm 3 r/1028)
                                    rr/1045 =a (field_imm 2 r/1028)
                                    rd/1044 =a (field_imm 1 r/1028))
                                   (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(205):6387-6496
                                     (if
                                       (>=
                                         (if rr/1045
                                           (let
                                             (h/1051 =a (field_imm 3 rr/1045)
                                              *match*/3304 =a
                                                (field_imm 2 rr/1045)
                                              *match*/3303 =a
                                                (field_imm 1 rr/1045)
                                              *match*/3302 =a
                                                (field_imm 0 rr/1045))
                                             (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(205):6432-6433
                                               h/1051))
                                           (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(205):6411-6412
                                             0))
                                         (if rl/1043
                                           (let
                                             (h/1052 =a (field_imm 3 rl/1043)
                                              *match*/3307 =a
                                                (field_imm 2 rl/1043)
                                              *match*/3306 =a
                                                (field_imm 1 rl/1043)
                                              *match*/3305 =a
                                                (field_imm 0 rl/1043))
                                             (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(206):6494-6495
                                               h/1052))
                                           (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(206):6473-6474
                                             0)))
                                       (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(207):6508-6536
                                         (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(207):6508-6536
                                           (apply mknode/1015
                                             (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(207):6515-6530
                                               (apply mknode/1015 l/1026
                                                 d/1027 rl/1043))
                                             rd/1044 rr/1045)))
                                       (exit 24))))
                                with (24)
                                 (if rl/1043
                                   (let
                                     (*match*/3310 =a (field_imm 3 r/1028)
                                      rr/1050 =a (field_imm 2 r/1028)
                                      rd/1049 =a (field_imm 1 r/1028)
                                      *match*/3309 =a (field_imm 3 rl/1043)
                                      rlr/1048 =a (field_imm 2 rl/1043)
                                      rld/1047 =a (field_imm 1 rl/1043)
                                      rll/1046 =a (field_imm 0 rl/1043))
                                     (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(209):6596-6642
                                       (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(209):6596-6642
                                         (apply mknode/1015
                                           (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(209):6603-6619
                                             (apply mknode/1015 l/1026 d/1027
                                               rll/1046))
                                           rld/1047
                                           (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(209):6624-6642
                                             (apply mknode/1015 rlr/1048
                                               rd/1049 rr/1050))))))
                                   (exit 23))))
                             (exit 23))
                          with (23)
                           (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(210):6654-6666
                             (raise
                               (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(210):6654-6666
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "lib/ident.ml" 210 11]))))))
                       (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(212):6678-6690
                         (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(212):6678-6690
                           (apply mknode/1015 l/1026 d/1027 r/1028))))))))))))
    (letrec
      (add/1053
         (function id/1054 data/1055 param/1130
           (funct-body Ocaml_ocaml_types__Ident.add lib/ident.ml(214)<ghost>:6704-7084
             (if param/1130
               (let
                 (h/1059 =a (field_imm 3 param/1130)
                  r/1058 =a (field_imm 2 param/1130)
                  k/1057 =a (field_imm 1 param/1130)
                  l/1056 =a (field_imm 0 param/1130))
                 (before Ocaml_ocaml_types__Ident.add lib/ident.ml(218):6838-7084
                   (let
                     (c/1060 =[int]
                        (after Ocaml_ocaml_types__Ident.add lib/ident.ml(218):6846-6885
                          (apply (field_imm 9 (global Stdlib__String!))
                            (after Ocaml_ocaml_types__Ident.add lib/ident.ml(218):6861-6870
                              (apply name/333 id/1054))
                            (after Ocaml_ocaml_types__Ident.add lib/ident.ml(218):6871-6885
                              (apply name/333 (field_imm 0 k/1057))))))
                     (before Ocaml_ocaml_types__Ident.add lib/ident.ml(219):6895-7084
                       (if (== c/1060 0)
                         (before Ocaml_ocaml_types__Ident.add lib/ident.ml(220):6917-6976
                           (makeblock 0 (*,*,*,int) l/1056
                             (makeblock 0 id/1054 data/1055
                               (makeblock 0 k/1057))
                             r/1058 h/1059))
                         (before Ocaml_ocaml_types__Ident.add lib/ident.ml(221):6988-7084
                           (if (< c/1060 0)
                             (before Ocaml_ocaml_types__Ident.add lib/ident.ml(222):7010-7037
                               (after Ocaml_ocaml_types__Ident.add lib/ident.ml(222):7010-7037
                                 (apply balance/1024
                                   (after Ocaml_ocaml_types__Ident.add lib/ident.ml(222):7018-7033
                                     (apply add/1053 id/1054 data/1055
                                       l/1056))
                                   k/1057 r/1058)))
                             (before Ocaml_ocaml_types__Ident.add lib/ident.ml(224):7057-7084
                               (after Ocaml_ocaml_types__Ident.add lib/ident.ml(224):7057-7084
                                 (apply balance/1024 l/1056 k/1057
                                   (after Ocaml_ocaml_types__Ident.add lib/ident.ml(224):7069-7084
                                     (apply add/1053 id/1054 data/1055
                                       r/1058))))))))))))
               (before Ocaml_ocaml_types__Ident.add lib/ident.ml(216):6742-6807
                 (makeblock 0 (*,*,*,int) 0 (makeblock 0 id/1054 data/1055 0)
                   0 1))))))
      (letrec
        (min_binding/1131
           (function param/1134
             (funct-body Ocaml_ocaml_types__Ident.min_binding lib/ident.ml(226):7108-7215
               (if param/1134
                 (let (l/1133 =a (field_imm 0 param/1134))
                   (catch
                     (if l/1133 (exit 27)
                       (let
                         (*match*/3329 =a (field_imm 3 param/1134)
                          *match*/3328 =a (field_imm 2 param/1134)
                          d/1132 =a (field_imm 1 param/1134))
                         (before Ocaml_ocaml_types__Ident.min_binding lib/ident.ml(228):7175-7176
                           d/1132)))
                    with (27)
                     (let
                       (*match*/3332 =a (field_imm 3 param/1134)
                        *match*/3331 =a (field_imm 2 param/1134)
                        *match*/3330 =a (field_imm 1 param/1134))
                       (before Ocaml_ocaml_types__Ident.min_binding lib/ident.ml(229):7202-7215
                         (after Ocaml_ocaml_types__Ident.min_binding lib/ident.ml(229):7202-7215
                           (apply min_binding/1131 l/1133))))))
                 (before Ocaml_ocaml_types__Ident.min_binding lib/ident.ml(227):7130-7145
                   (raise
                     (after Ocaml_ocaml_types__Ident.min_binding lib/ident.ml(227):7130-7145
                       (field_imm 7 (global Stdlib!)))))))))
        (letrec
          (remove_min_binding/1135
             (function param/1140
               (funct-body Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(231):7246-7391
                 (if param/1140
                   (let (l/1137 =a (field_imm 0 param/1140))
                     (catch
                       (if l/1137 (exit 28)
                         (let
                           (*match*/3334 =a (field_imm 3 param/1140)
                            r/1136 =a (field_imm 2 param/1140)
                            *match*/3333 =a (field_imm 1 param/1140))
                           (before Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(233):7330-7331
                             r/1136)))
                      with (28)
                       (let
                         (*match*/3335 =a (field_imm 3 param/1140)
                          r/1139 =a (field_imm 2 param/1140)
                          d/1138 =a (field_imm 1 param/1140))
                         (before Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(234):7357-7391
                           (after Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(234):7357-7391
                             (apply balance/1024
                               (after Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(234):7365-7387
                                 (apply remove_min_binding/1135 l/1137))
                               d/1138 r/1139))))))
                   (before Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(232):7268-7300
                     (after Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(232):7268-7300
                       (apply (field_imm 0 (global Stdlib!))
                         "Map.remove_min_elt")))))))
          (let
            (merge/1141 =
               (function t1/1143 t2/1144
                 (funct-body Ocaml_ocaml_types__Ident.merge lib/ident.ml(236)<ghost>:7403-7561
                   (before Ocaml_ocaml_types__Ident.merge lib/ident.ml(237):7413-7561
                     (catch
                       (catch
                         (if t1/1143 (exit 30)
                           (let (t/1145 =a t2/1144)
                             (before Ocaml_ocaml_types__Ident.merge lib/ident.ml(238):7451-7452
                               t/1145)))
                        with (30)
                         (if t2/1144 (exit 29)
                           (let (t/1146 =a t1/1143)
                             (before Ocaml_ocaml_types__Ident.merge lib/ident.ml(239):7471-7472
                               t/1146))))
                      with (29)
                       (before Ocaml_ocaml_types__Ident.merge lib/ident.ml(241):7493-7561
                         (let
                           (d/1147 =
                              (after Ocaml_ocaml_types__Ident.merge lib/ident.ml(241):7501-7515
                                (apply min_binding/1131 t2/1144)))
                           (before Ocaml_ocaml_types__Ident.merge lib/ident.ml(242):7525-7561
                             (after Ocaml_ocaml_types__Ident.merge lib/ident.ml(242):7525-7561
                               (apply balance/1024 t1/1143 d/1147
                                 (after Ocaml_ocaml_types__Ident.merge lib/ident.ml(242):7538-7561
                                   (apply remove_min_binding/1135 t2/1144))))))))))))
            (letrec
              (remove/1148
                 (function id/1149 m/1154
                   (funct-body Ocaml_ocaml_types__Ident.remove lib/ident.ml(244)<ghost>:7578-7997
                     (if m/1154
                       (let
                         (h/1153 =a (field_imm 3 m/1154)
                          r/1152 =a (field_imm 2 m/1154)
                          k/1151 =a (field_imm 1 m/1154)
                          l/1150 =a (field_imm 0 m/1154))
                         (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(248):7655-7997
                           (let
                             (c/1155 =[int]
                                (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(248):7663-7702
                                  (apply
                                    (field_imm 9 (global Stdlib__String!))
                                    (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(248):7678-7687
                                      (apply name/333 id/1149))
                                    (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(248):7688-7702
                                      (apply name/333 (field_imm 0 k/1151))))))
                             (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(249):7712-7997
                               (if (== c/1155 0)
                                 (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(250):7734-7821
                                   (let (*match*/3336 = (field_imm 2 k/1151))
                                     (if *match*/3336
                                       (let
                                         (k/1156 =a
                                            (field_imm 0 *match*/3336))
                                         (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(252):7804-7821
                                           (makeblock 0 (*,*,*,int) l/1150
                                             k/1156 r/1152 h/1153)))
                                       (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(251):7774-7783
                                         (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(251):7774-7783
                                           (apply merge/1141 l/1150 r/1152))))))
                                 (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(253):7833-7997
                                   (if (< c/1155 0)
                                     (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(254):7855-7916
                                       (let
                                         (ll/1157 =
                                            (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(254):7864-7875
                                              (apply remove/1148 id/1149
                                                l/1150)))
                                         (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(254):7879-7916
                                           (if (== l/1150 ll/1157)
                                             (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(254):7895-7896
                                               m/1154)
                                             (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(254):7902-7916
                                               (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(254):7902-7916
                                                 (apply balance/1024 ll/1157
                                                   k/1151 r/1152)))))))
                                     (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(256):7936-7997
                                       (let
                                         (rr/1158 =
                                            (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(256):7945-7956
                                              (apply remove/1148 id/1149
                                                r/1152)))
                                         (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(256):7960-7997
                                           (if (== r/1152 rr/1158)
                                             (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(256):7976-7977
                                               m/1154)
                                             (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(256):7983-7997
                                               (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(256):7983-7997
                                                 (apply balance/1024 l/1150
                                                   k/1151 rr/1158))))))))))))))
                       (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(246):7611-7616
                         0)))))
              (letrec
                (find_previous/1159
                   (function id/1160 param/1162
                     (funct-body Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(258)<ghost>:8021-8152
                       (if param/1162
                         (let (k/1161 =a (field_imm 0 param/1162))
                           (before Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(262):8089-8152
                             (if
                               (after Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(262):8092-8107
                                 (apply same/507 id/1160
                                   (field_imm 0 k/1161)))
                               (before Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(262):8113-8119
                                 (field_imm 1 k/1161))
                               (before Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(262):8125-8152
                                 (after Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(262):8125-8152
                                   (apply find_previous/1159 id/1160
                                     (field_imm 2 k/1161)))))))
                         (before Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(260):8053-8068
                           (raise
                             (after Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(260):8053-8068
                               (field_imm 7 (global Stdlib!)))))))))
                (letrec
                  (find_same/1163
                     (function id/1164 param/1169
                       (funct-body Ocaml_ocaml_types__Ident.find_same lib/ident.ml(264)<ghost>:8172-8466
                         (if param/1169
                           (let
                             (*match*/3337 =a (field_imm 3 param/1169)
                              r/1167 =a (field_imm 2 param/1169)
                              k/1166 =a (field_imm 1 param/1169)
                              l/1165 =a (field_imm 0 param/1169))
                             (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(268):8251-8466
                               (let
                                 (c/1168 =[int]
                                    (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(268):8259-8298
                                      (apply
                                        (field_imm 9
                                          (global Stdlib__String!))
                                        (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(268):8274-8283
                                          (apply name/333 id/1164))
                                        (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(268):8284-8298
                                          (apply name/333
                                            (field_imm 0 k/1166))))))
                                 (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(269):8308-8466
                                   (if (== c/1168 0)
                                     (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(270):8330-8409
                                       (if
                                         (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(270):8333-8348
                                           (apply same/507 id/1164
                                             (field_imm 0 k/1166)))
                                         (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(271):8362-8368
                                           (field_imm 1 k/1166))
                                         (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(272):8382-8409
                                           (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(272):8382-8409
                                             (apply find_previous/1159
                                               id/1164 (field_imm 2 k/1166))))))
                                     (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(274):8429-8466
                                       (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(274):8429-8466
                                         (apply find_same/1163 id/1164
                                           (if (< c/1168 0)
                                             (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(274):8457-8458
                                               l/1165)
                                             (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(274):8464-8465
                                               r/1167))))))))))
                           (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(266):8205-8220
                             (raise
                               (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(266):8205-8220
                                 (field_imm 7 (global Stdlib!)))))))))
                  (letrec
                    (find_name/1170
                       (function n/1171 param/1176
                         (funct-body Ocaml_ocaml_types__Ident.find_name lib/ident.ml(276)<ghost>:8486-8706
                           (if param/1176
                             (let
                               (*match*/3338 =a (field_imm 3 param/1176)
                                r/1174 =a (field_imm 2 param/1176)
                                k/1173 =a (field_imm 1 param/1176)
                                l/1172 =a (field_imm 0 param/1176))
                               (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(280):8564-8706
                                 (let
                                   (c/1175 =[int]
                                      (after Ocaml_ocaml_types__Ident.find_name lib/ident.ml(280):8572-8603
                                        (apply
                                          (field_imm 9
                                            (global Stdlib__String!))
                                          n/1171
                                          (after Ocaml_ocaml_types__Ident.find_name lib/ident.ml(280):8589-8603
                                            (apply name/333
                                              (field_imm 0 k/1173))))))
                                   (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(281):8613-8706
                                     (if (== c/1175 0)
                                       (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(282):8635-8650
                                         (makeblock 0 (field_imm 0 k/1173)
                                           (field_imm 1 k/1173)))
                                       (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(284):8670-8706
                                         (after Ocaml_ocaml_types__Ident.find_name lib/ident.ml(284):8670-8706
                                           (apply find_name/1170 n/1171
                                             (if (< c/1175 0)
                                               (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(284):8697-8698
                                                 l/1172)
                                               (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(284):8704-8705
                                                 r/1174))))))))))
                             (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(278):8518-8533
                               (raise
                                 (after Ocaml_ocaml_types__Ident.find_name lib/ident.ml(278):8518-8533
                                   (field_imm 7 (global Stdlib!)))))))))
                    (letrec
                      (get_all/1177
                         (function param/1179
                           (funct-body Ocaml_ocaml_types__Ident.get_all lib/ident.ml(286):8726-8803
                             (if param/1179
                               (let (k/1178 =a (field_imm 0 param/1179))
                                 (before Ocaml_ocaml_types__Ident.get_all lib/ident.ml(288):8764-8803
                                   (makeblock 0
                                     (makeblock 0 (field_imm 0 k/1178)
                                       (field_imm 1 k/1178))
                                     (after Ocaml_ocaml_types__Ident.get_all lib/ident.ml(288):8785-8803
                                       (apply get_all/1177
                                         (field_imm 2 k/1178))))))
                               (before Ocaml_ocaml_types__Ident.get_all lib/ident.ml(287):8747-8749
                                 0)))))
                      (letrec
                        (find_all/1180
                           (function n/1181 param/1186
                             (funct-body Ocaml_ocaml_types__Ident.find_all lib/ident.ml(290)<ghost>:8822-9052
                               (if param/1186
                                 (let
                                   (*match*/3339 =a (field_imm 3 param/1186)
                                    r/1184 =a (field_imm 2 param/1186)
                                    k/1183 =a (field_imm 1 param/1186)
                                    l/1182 =a (field_imm 0 param/1186))
                                   (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(294):8887-9052
                                     (let
                                       (c/1185 =[int]
                                          (after Ocaml_ocaml_types__Ident.find_all lib/ident.ml(294):8895-8926
                                            (apply
                                              (field_imm 9
                                                (global Stdlib__String!))
                                              n/1181
                                              (after Ocaml_ocaml_types__Ident.find_all lib/ident.ml(294):8912-8926
                                                (apply name/333
                                                  (field_imm 0 k/1183))))))
                                       (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(295):8936-9052
                                         (if (== c/1185 0)
                                           (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(296):8958-8997
                                             (makeblock 0
                                               (makeblock 0
                                                 (field_imm 0 k/1183)
                                                 (field_imm 1 k/1183))
                                               (after Ocaml_ocaml_types__Ident.find_all lib/ident.ml(296):8979-8997
                                                 (apply get_all/1177
                                                   (field_imm 2 k/1183)))))
                                           (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(298):9017-9052
                                             (after Ocaml_ocaml_types__Ident.find_all lib/ident.ml(298):9017-9052
                                               (apply find_all/1180 n/1181
                                                 (if (< c/1185 0)
                                                   (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(298):9043-9044
                                                     l/1182)
                                                   (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(298):9050-9051
                                                     r/1184))))))))))
                                 (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(292):8854-8856
                                   0)))))
                        (let
                          (get_all_seq/1187 =
                             (function k/1189 param/1330[int]
                               (funct-body Ocaml_ocaml_types__Ident.get_all_seq lib/ident.ml(300)<ghost>:9070-9152
                                 (before Ocaml_ocaml_types__Ident.get_all_seq lib/ident.ml(301):9079-9152
                                   (after Ocaml_ocaml_types__Ident.get_all_seq lib/ident.ml(301):9079-9152
                                     (apply
                                       (field_imm 23 (global Stdlib__Seq!))
                                       (after Ocaml_ocaml_types__Ident.get_all_seq lib/ident.ml(301):9090-9143
                                         (apply
                                           (field_imm 6
                                             (global Stdlib__Option!))
                                           (function k/1329
                                             (funct-body Ocaml_ocaml_types__Ident.get_all_seq.(fun) lib/ident.ml(301):9102-9142
                                               (before Ocaml_ocaml_types__Ident.get_all_seq.(fun) lib/ident.ml(301):9112-9141
                                                 (makeblock 0
                                                   (makeblock 0
                                                     (field_imm 0 k/1329)
                                                     (field_imm 1 k/1329))
                                                   (field_imm 2 k/1329)))))))
                                       k/1189 0))))))
                          (letrec
                            (find_all_seq/1331
                               (function n/1332 tbl/1333 param/1338[int]
                                 (funct-body Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(304)<ghost>:9175-9438
                                   (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(305):9188-9438
                                     (if tbl/1333
                                       (let
                                         (*match*/3340 =a
                                            (field_imm 3 tbl/1333)
                                          r/1336 =a (field_imm 2 tbl/1333)
                                          k/1335 =a (field_imm 1 tbl/1333)
                                          l/1334 =a (field_imm 0 tbl/1333))
                                         (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(308):9254-9438
                                           (let
                                             (c/1337 =[int]
                                                (after Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(308):9262-9293
                                                  (apply
                                                    (field_imm 9
                                                      (global Stdlib__String!))
                                                    n/1332
                                                    (after Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(308):9279-9293
                                                      (apply name/333
                                                        (field_imm 0 k/1335))))))
                                             (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(309):9303-9438
                                               (if (== c/1337 0)
                                                 (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(310):9325-9376
                                                   (makeblock 0
                                                     (makeblock 0
                                                       (field_imm 0 k/1335)
                                                       (field_imm 1 k/1335))
                                                     (after Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(310):9353-9375
                                                       (apply
                                                         get_all_seq/1187
                                                         (field_imm 2 k/1335)))))
                                                 (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(312):9396-9438
                                                   (after Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(312):9396-9438
                                                     (apply find_all_seq/1331
                                                       n/1332
                                                       (if (< c/1337 0)
                                                         (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(312):9426-9427
                                                           l/1334)
                                                         (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(312):9433-9434
                                                           r/1336))
                                                       0))))))))
                                       (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(306):9216-9223
                                         0))))))
                            (letrec
                              (fold_aux/1339
                                 (function f/1340 stack/1341 accu/1342
                                   param/1348
                                   (funct-body Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(315)<ghost>:9458-9657
                                     (if param/1348
                                       (let
                                         (*match*/3341 =a
                                            (field_imm 3 param/1348)
                                          r/1345 =a (field_imm 2 param/1348)
                                          k/1344 =a (field_imm 1 param/1348)
                                          l/1343 =a (field_imm 0 param/1348))
                                         (before Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(322):9621-9657
                                           (after Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(322):9621-9657
                                             (apply fold_aux/1339 f/1340
                                               (makeblock 0 l/1343
                                                 stack/1341)
                                               (after Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(322):9645-9655
                                                 (apply f/1340 k/1344
                                                   accu/1342))
                                               r/1345))))
                                       (before Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(317):9501-9590
                                         (if stack/1341
                                           (let
                                             (l/1347 =a
                                                (field_imm 1 stack/1341)
                                              a/1346 =a
                                                (field_imm 0 stack/1341))
                                             (before Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(319):9561-9580
                                               (after Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(319):9561-9580
                                                 (apply fold_aux/1339 f/1340
                                                   l/1347 accu/1342 a/1346))))
                                           (before Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(318):9538-9542
                                             accu/1342)))))))
                              (let
                                (fold_name/1349 =
                                   (function f/1351 tbl/1352 accu/1353
                                     (funct-body Ocaml_ocaml_types__Ident.fold_name lib/ident.ml(324)<ghost>:9673-9734
                                       (before Ocaml_ocaml_types__Ident.fold_name lib/ident.ml(324):9686-9734
                                         (after Ocaml_ocaml_types__Ident.fold_name lib/ident.ml(324):9686-9734
                                           (apply fold_aux/1339
                                             (function k/1354
                                               (funct-body Ocaml_ocaml_types__Ident.fold_name.(fun) lib/ident.ml(324):9695-9722
                                                 (before Ocaml_ocaml_types__Ident.fold_name.(fun) lib/ident.ml(324):9705-9721
                                                   (after Ocaml_ocaml_types__Ident.fold_name.(fun) lib/ident.ml(324):9705-9721
                                                     (apply f/1351
                                                       (field_imm 0 k/1354)
                                                       (field_imm 1 k/1354))))))
                                             0 accu/1353 tbl/1352))))))
                                (letrec
                                  (fold_data/1355
                                     (function f/1356 d/1357 accu/1358
                                       (funct-body Ocaml_ocaml_types__Ident.fold_data lib/ident.ml(326)<ghost>:9754-9857
                                         (before Ocaml_ocaml_types__Ident.fold_data lib/ident.ml(327):9767-9857
                                           (if d/1357
                                             (let
                                               (k/1359 =a
                                                  (field_imm 0 d/1357))
                                               (before Ocaml_ocaml_types__Ident.fold_data lib/ident.ml(329):9811-9857
                                                 (after Ocaml_ocaml_types__Ident.fold_data lib/ident.ml(329):9811-9857
                                                   (apply f/1356
                                                     (field_imm 0 k/1359)
                                                     (field_imm 1 k/1359)
                                                     (after Ocaml_ocaml_types__Ident.fold_data lib/ident.ml(329):9828-9857
                                                       (apply fold_data/1355
                                                         f/1356
                                                         (field_imm 2 k/1359)
                                                         accu/1358))))))
                                             (before Ocaml_ocaml_types__Ident.fold_data lib/ident.ml(328):9792-9796
                                               accu/1358))))))
                                  (let
                                    (fold_all/1360 =
                                       (function f/1362 tbl/1363 accu/1364
                                         (funct-body Ocaml_ocaml_types__Ident.fold_all lib/ident.ml(331)<ghost>:9872-9939
                                           (before Ocaml_ocaml_types__Ident.fold_all lib/ident.ml(332):9887-9939
                                             (after Ocaml_ocaml_types__Ident.fold_all lib/ident.ml(332):9887-9939
                                               (apply fold_aux/1339
                                                 (function k/1365
                                                   (funct-body Ocaml_ocaml_types__Ident.fold_all.(fun) lib/ident.ml(332):9896-9927
                                                     (before Ocaml_ocaml_types__Ident.fold_all.(fun) lib/ident.ml(332):9906-9926
                                                       (after Ocaml_ocaml_types__Ident.fold_all.(fun) lib/ident.ml(332):9906-9926
                                                         (apply
                                                           fold_data/1355
                                                           f/1362
                                                           (makeblock 0
                                                             k/1365))))))
                                                 0 accu/1364 tbl/1363))))))
                                    (letrec
                                      (iter/1366
                                         (function f/1367 param/1371 : int
                                           (funct-body Ocaml_ocaml_types__Ident.iter lib/ident.ml(336)<ghost>:10019-10114
                                             (if param/1371
                                               (let
                                                 (*match*/3342 =a
                                                    (field_imm 3 param/1371)
                                                  r/1370 =a
                                                    (field_imm 2 param/1371)
                                                  k/1369 =a
                                                    (field_imm 1 param/1371)
                                                  l/1368 =a
                                                    (field_imm 0 param/1371))
                                                 (before Ocaml_ocaml_types__Ident.iter lib/ident.ml(339):10078-10114
                                                   (seq
                                                     (after Ocaml_ocaml_types__Ident.iter lib/ident.ml(339):10078-10086
                                                       (apply iter/1366
                                                         f/1367 l/1368))
                                                     (before Ocaml_ocaml_types__Ident.iter lib/ident.ml(339):10088-10114
                                                       (seq
                                                         (after Ocaml_ocaml_types__Ident.iter lib/ident.ml(339):10088-10104
                                                           (apply f/1367
                                                             (field_imm 0
                                                               k/1369)
                                                             (field_imm 1
                                                               k/1369)))
                                                         (before Ocaml_ocaml_types__Ident.iter lib/ident.ml(339):10106-10114
                                                           (after Ocaml_ocaml_types__Ident.iter lib/ident.ml(339):10106-10114
                                                             (apply iter/1366
                                                               f/1367 r/1370))))))))
                                               (before Ocaml_ocaml_types__Ident.iter lib/ident.ml(337):10045-10047
                                                 0)))))
                                      (let
                                        (key_name/1372 = ""
                                         make_key_generator/1373 =
                                           (function param/1378[int]
                                             (funct-body Ocaml_ocaml_types__Ident.make_key_generator lib/ident.ml(346)<ghost>:10241-10480
                                               (before Ocaml_ocaml_types__Ident.make_key_generator lib/ident.ml(347):10248-10480
                                                 (let
                                                   (c/1375 =
                                                      (makemutable 0 (int) 1))
                                                   (before Ocaml_ocaml_types__Ident.make_key_generator lib/ident.ml(348):10267-10480
                                                     (function global_id/1376
                                                       (funct-body Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(348):10267-10480
                                                         (catch
                                                           (catch
                                                             (switch* global_id/1376
                                                              case tag 0:
                                                               (exit 31)
                                                              case tag 1:
                                                               (exit 31)
                                                              case tag 2:
                                                               (exit 32)
                                                              case tag 3:
                                                               (exit 32))
                                                            with (32)
                                                             (before Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(355):10413-10480
                                                               (after Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(355):10413-10480
                                                                 (apply
                                                                   (field_imm 1
                                                                    (global Ocaml_ocaml_types__Misc!))
                                                                   [0:
                                                                    [11:
                                                                    "Ident.make_key_generator () "
                                                                    [2: 0 0]]
                                                                    "Ident.make_key_generator () %s"]
                                                                   (after Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(355):10464-10480
                                                                    (apply
                                                                    name/333
                                                                    global_id/1376))))))
                                                          with (31)
                                                           (before Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(351):10310-10389
                                                             (let
                                                               (stamp/1377 =[int]
                                                                  (field_int 0
                                                                    c/1375))
                                                               (before Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(352):10334-10389
                                                                 (seq
                                                                   (+:=-1
                                                                    c/1375)
                                                                   (before Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(353):10349-10389
                                                                    (makeblock 0 (*,int)
                                                                    key_name/1372
                                                                    stamp/1377))))))))))))))
                                         compare/1379 =
                                           (function x/1380 y/1381 : int
                                             (funct-body Ocaml_ocaml_types__Ident.compare lib/ident.ml(357)<ghost>:10494-10992
                                               (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(358):10502-10992
                                                 (catch
                                                   (catch
                                                     (catch
                                                       (catch
                                                         (catch
                                                           (switch* x/1380
                                                            case tag 0:
                                                             (catch
                                                               (switch y/1381
                                                                case tag 0:
                                                                 (let
                                                                   (y/1383 =a
                                                                    y/1381
                                                                    x/1382 =a
                                                                    x/1380)
                                                                   (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(360):10548-10632
                                                                    (let
                                                                    (c/1390 =[int]
                                                                    (-
                                                                    (field_int 1
                                                                    x/1382)
                                                                    (field_int 1
                                                                    y/1383)))
                                                                    (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(361):10583-10632
                                                                    (if
                                                                    (!=
                                                                    c/1390 0)
                                                                    (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(361):10598-10599
                                                                    c/1390)
                                                                    (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(362):10611-10632
                                                                    (after Ocaml_ocaml_types__Ident.compare lib/ident.ml(362):10611-10632
                                                                    (caml_string_compare
                                                                    (field_imm 0
                                                                    x/1382)
                                                                    (field_imm 0
                                                                    y/1383)))))))))
                                                                default:
                                                                 (exit 38))
                                                              with (38)
                                                               (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(363):10651-10652
                                                                 1))
                                                            case tag 1:
                                                             (switch* y/1381
                                                              case tag 0:
                                                               (exit 37)
                                                              case tag 1:
                                                               (let
                                                                 (y/1385 =a
                                                                    y/1381
                                                                  x/1384 =a
                                                                    x/1380)
                                                                 (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(366):10708-10792
                                                                   (let
                                                                    (c/1391 =[int]
                                                                    (-
                                                                    (field_int 1
                                                                    x/1384)
                                                                    (field_int 1
                                                                    y/1385)))
                                                                    (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(367):10743-10792
                                                                    (if
                                                                    (!=
                                                                    c/1391 0)
                                                                    (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(367):10758-10759
                                                                    c/1391)
                                                                    (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(368):10771-10792
                                                                    (after Ocaml_ocaml_types__Ident.compare lib/ident.ml(368):10771-10792
                                                                    (caml_string_compare
                                                                    (field_imm 0
                                                                    x/1384)
                                                                    (field_imm 0
                                                                    y/1385)))))))))
                                                              case tag 2:
                                                               (exit 36)
                                                              case tag 3:
                                                               (exit 36))
                                                            case tag 2:
                                                             (let
                                                               (x/1386 =a
                                                                  (field_imm 0
                                                                    x/1380))
                                                               (switch* y/1381
                                                                case tag 0:
                                                                 (exit 37)
                                                                case tag 1:
                                                                 (exit 35)
                                                                case tag 2:
                                                                 (let
                                                                   (y/1387 =a
                                                                    (field_imm 0
                                                                    y/1381))
                                                                   (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(371):10864-10875
                                                                    (after Ocaml_ocaml_types__Ident.compare lib/ident.ml(371):10864-10875
                                                                    (caml_string_compare
                                                                    x/1386
                                                                    y/1387))))
                                                                case tag 3:
                                                                 (exit 34)))
                                                            case tag 3:
                                                             (let
                                                               (s1/1388 =a
                                                                  (field_int 1
                                                                    x/1380)
                                                                *match*/3344 =a
                                                                  (field_imm 0
                                                                    x/1380))
                                                               (switch* y/1381
                                                                case tag 0:
                                                                 (exit 37)
                                                                case tag 1:
                                                                 (exit 35)
                                                                case tag 2:
                                                                 (exit 33)
                                                                case tag 3:
                                                                 (let
                                                                   (s2/1389 =a
                                                                    (field_int 1
                                                                    y/1381)
                                                                    *match*/3345 =a
                                                                    (field_imm 0
                                                                    y/1381))
                                                                   (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(374):10979-10992
                                                                    (compare_ints
                                                                    s1/1388
                                                                    s2/1389))))))
                                                          with (37)
                                                           (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(364):10671-10675
                                                             -1))
                                                        with (36)
                                                         (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(369):10812-10813
                                                           1))
                                                      with (35)
                                                       (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(370):10833-10837
                                                         -1))
                                                    with (34)
                                                     (let
                                                       (*match*/3346 =a
                                                          (field_imm 0
                                                            x/1380))
                                                       (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(372):10895-10896
                                                         1)))
                                                  with (33)
                                                   (let
                                                     (*match*/3347 =a
                                                        (field_imm 0 y/1381))
                                                     (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(373):10916-10920
                                                       -1))))))
                                         output/1392 =
                                           (function oc/1393 id/1394 : int
                                             (funct-body Ocaml_ocaml_types__Ident.output lib/ident.ml(376)<ghost>:11005-11046
                                               (before Ocaml_ocaml_types__Ident.output lib/ident.ml(376):11013-11046
                                                 (after Ocaml_ocaml_types__Ident.output lib/ident.ml(376):11013-11046
                                                   (apply
                                                     (field_imm 65
                                                       (global Stdlib!))
                                                     oc/1393
                                                     (after Ocaml_ocaml_types__Ident.output lib/ident.ml(376):11030-11046
                                                       (apply unique_name/443
                                                         id/1394)))))))
                                         hash/1395 =
                                           (function i/1397 : int
                                             (funct-body Ocaml_ocaml_types__Ident.hash lib/ident.ml(377)<ghost>:11056-11099
                                               (before Ocaml_ocaml_types__Ident.hash lib/ident.ml(377):11060-11099
                                                 (xor
                                                   (after Ocaml_ocaml_types__Ident.hash lib/ident.ml(377):11071-11083
                                                     (string.get
                                                       (after Ocaml_ocaml_types__Ident.hash lib/ident.ml(377):11071-11079
                                                         (apply name/333
                                                           i/1397))
                                                       0))
                                                   (after Ocaml_ocaml_types__Ident.hash lib/ident.ml(377):11090-11099
                                                     (apply stamp/519 i/1397))))))
                                         original_equal/1409 = equal/495
                                         equal/1410 = original_equal/1409)
                                        (pseudo <unknown location>
                                          (makeblock 0 lowest_scope/304
                                            highest_scope/305
                                            currentstamp/318 predefstamp/319
                                            create_scoped/320
                                            create_local/324
                                            create_predef/327
                                            create_persistent/330 name/333
                                            rename/340 unique_name/443
                                            unique_toplevel_name/483
                                            persistent/492 same/507 stamp/519
                                            scope/524 reinit_level/528
                                            reinit/529 global/532
                                            is_predef/535
                                            print_with_scope/1000 print/1004
                                            empty/1014 mknode/1015
                                            balance/1024 add/1053
                                            min_binding/1131
                                            remove_min_binding/1135
                                            merge/1141 remove/1148
                                            find_previous/1159 find_same/1163
                                            find_name/1170 get_all/1177
                                            find_all/1180 get_all_seq/1187
                                            find_all_seq/1331 fold_aux/1339
                                            fold_name/1349 fold_data/1355
                                            fold_all/1360 iter/1366
                                            key_name/1372
                                            make_key_generator/1373
                                            compare/1379 output/1392
                                            hash/1395 original_equal/1409
                                            equal/1410))))))))))))))))))))))
(setglobal Ocaml_ocaml_types__Ident!
  (let
    (lowest_scope/304 =[int] 0
     highest_scope/305 =[int] 100000000
     currentstamp/318 =
       (after Ocaml_ocaml_types__Ident.currentstamp lib/ident.ml(31):1514-1521
         (apply (field_imm 4 (global Ocaml_ocaml_types__Local_store!)) 0))
     predefstamp/319 =
       (after Ocaml_ocaml_types__Ident.predefstamp lib/ident.ml(32):1540-1547
         (apply (field_imm 4 (global Ocaml_ocaml_types__Local_store!)) 0))
     create_scoped/320 =
       (function scope/322[int] s/323
         (funct-body Ocaml_ocaml_types__Ident.create_scoped lib/ident.ml(34)<ghost>:1567-1650
           (before Ocaml_ocaml_types__Ident.create_scoped lib/ident.ml(35):1580-1650
             (seq (+:=1 currentstamp/318)
               (before Ocaml_ocaml_types__Ident.create_scoped lib/ident.ml(36):1601-1650
                 (makeblock 1 (*,int,int) s/323
                   (field_int 0 currentstamp/318) scope/322))))))
     create_local/324 =
       (function s/326
         (funct-body Ocaml_ocaml_types__Ident.create_local lib/ident.ml(38)<ghost>:1669-1737
           (before Ocaml_ocaml_types__Ident.create_local lib/ident.ml(39):1675-1737
             (seq (+:=1 currentstamp/318)
               (before Ocaml_ocaml_types__Ident.create_local lib/ident.ml(40):1696-1737
                 (makeblock 0 (*,int) s/326 (field_int 0 currentstamp/318)))))))
     create_predef/327 =
       (function s/329
         (funct-body Ocaml_ocaml_types__Ident.create_predef lib/ident.ml(42)<ghost>:1757-1824
           (before Ocaml_ocaml_types__Ident.create_predef lib/ident.ml(43):1763-1824
             (seq (+:=1 predefstamp/319)
               (before Ocaml_ocaml_types__Ident.create_predef lib/ident.ml(44):1783-1824
                 (makeblock 3 (*,int) s/329 (field_int 0 predefstamp/319)))))))
     create_persistent/330 =
       (function s/332
         (funct-body Ocaml_ocaml_types__Ident.create_persistent lib/ident.ml(46)<ghost>:1848-1862
           (before Ocaml_ocaml_types__Ident.create_persistent lib/ident.ml(47):1854-1862
             (makeblock 2 s/332))))
     name/333 =
       (function param/339
         (funct-body Ocaml_ocaml_types__Ident.name lib/ident.ml(49):1875-1975
           (let (name/335 =a (field_imm 0 param/339))
             (before Ocaml_ocaml_types__Ident.name lib/ident.ml(53):1971-1975
               name/335))))
     rename/340 =
       (function id/344
         (funct-body Ocaml_ocaml_types__Ident.rename lib/ident.ml(55):1990-2204
           (catch
             (catch
               (switch* id/344
                case tag 0: (exit 4)
                case tag 1: (exit 4)
                case tag 2: (exit 3)
                case tag 3: (exit 3))
              with (4)
               (let (name/3240 =a (field_imm 0 id/344) name/3354 = name/3240)
                 (before Ocaml_ocaml_types__Ident.rename lib/ident.ml(58):2080-2142
                   (seq (+:=1 currentstamp/318)
                     (before Ocaml_ocaml_types__Ident.rename lib/ident.ml(59):2105-2142
                       (makeblock 0 (*,int) name/3354
                         (field_int 0 currentstamp/318)))))))
            with (3)
             (before Ocaml_ocaml_types__Ident.rename lib/ident.ml(61):2159-2204
               (after Ocaml_ocaml_types__Ident.rename lib/ident.ml(61):2159-2204
                 (apply (field_imm 1 (global Ocaml_ocaml_types__Misc!))
                   [0: [11: "Ident.rename " [2: 0 0]] "Ident.rename %s"]
                   (after Ocaml_ocaml_types__Ident.rename lib/ident.ml(61):2195-2204
                     (apply name/333 id/344))))))))
     unique_name/443 =
       (function param/482
         (funct-body Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(63):2224-2748
           (catch
             (switch* param/482
              case tag 0: (exit 6)
              case tag 1: (exit 6)
              case tag 2:
               (let (name/449 =a (field_imm 0 param/482))
                 (before Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(70):2568-2579
                   (after Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(70):2568-2579
                     (apply (field_imm 27 (global Stdlib!)) name/449 "_0"))))
              case tag 3:
               (let (name/450 =a (field_imm 0 param/482))
                 (before Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(74):2744-2748
                   name/450)))
            with (6)
             (let
               (stamp/3247 =a (field_int 1 param/482)
                name/3246 =a (field_imm 0 param/482)
                stamp/3353 =[int] stamp/3247
                name/3352 = name/3246)
               (before Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(65):2289-2321
                 (after Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(65):2289-2321
                   (apply (field_imm 27 (global Stdlib!)) name/3352
                     (after Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(65):2296-2321
                       (apply (field_imm 27 (global Stdlib!)) "_"
                         (after Ocaml_ocaml_types__Ident.unique_name lib/ident.ml(65):2302-2321
                           (apply (field_imm 11 (global Stdlib__Int!))
                             stamp/3353)))))))))))
     unique_toplevel_name/483 =
       (function param/491
         (funct-body Ocaml_ocaml_types__Ident.unique_toplevel_name lib/ident.ml(76):2777-2921
           (catch
             (catch
               (switch* param/491
                case tag 0: (exit 9)
                case tag 1: (exit 9)
                case tag 2: (exit 10)
                case tag 3: (exit 10))
              with (9)
               (let
                 (stamp/3253 =a (field_int 1 param/491)
                  name/3252 =a (field_imm 0 param/491)
                  stamp/3351 =[int] stamp/3253
                  name/3350 = name/3252)
                 (before Ocaml_ocaml_types__Ident.unique_toplevel_name lib/ident.ml(78):2842-2874
                   (after Ocaml_ocaml_types__Ident.unique_toplevel_name lib/ident.ml(78):2842-2874
                     (apply (field_imm 27 (global Stdlib!)) name/3350
                       (after Ocaml_ocaml_types__Ident.unique_toplevel_name lib/ident.ml(78):2849-2874
                         (apply (field_imm 27 (global Stdlib!)) "/"
                           (after Ocaml_ocaml_types__Ident.unique_toplevel_name lib/ident.ml(78):2855-2874
                             (apply (field_imm 11 (global Stdlib__Int!))
                               stamp/3351)))))))))
            with (10)
             (let
               (name/3255 =a (field_imm 0 param/491) name/3349 = name/3255)
               (before Ocaml_ocaml_types__Ident.unique_toplevel_name lib/ident.ml(80):2917-2921
                 name/3349)))))
     persistent/492 =
       (function param/494 : int
         (funct-body Ocaml_ocaml_types__Ident.persistent lib/ident.ml(82):2940-2984
           (switch param/494
            case tag 2:
             (before Ocaml_ocaml_types__Ident.persistent lib/ident.ml(83):2965-2969
               1)
            default:
             (before Ocaml_ocaml_types__Ident.persistent lib/ident.ml(84):2979-2984
               0))))
     equal/495 =
       (function i1/497 i2/498 : int
         (funct-body Ocaml_ocaml_types__Ident.equal lib/ident.ml(86)<ghost>:2996-3360
           (before Ocaml_ocaml_types__Ident.equal lib/ident.ml(87):3006-3360
             (catch
               (catch
                 (switch* i1/497
                  case tag 0:
                   (switch i2/498
                    case tag 0:
                     (let
                       (name2/3264 =a (field_imm 0 i2/498)
                        name1/3263 =a (field_imm 0 i1/497))
                       (exit 12 name1/3263 name2/3264))
                    default: (exit 13))
                  case tag 1:
                   (switch i2/498
                    case tag 1:
                     (let
                       (name2/3262 =a (field_imm 0 i2/498)
                        name1/3261 =a (field_imm 0 i1/497))
                       (exit 12 name1/3261 name2/3262))
                    default: (exit 13))
                  case tag 2:
                   (switch i2/498
                    case tag 2:
                     (let
                       (name2/3260 =a (field_imm 0 i2/498)
                        name1/3259 =a (field_imm 0 i1/497))
                       (exit 12 name1/3259 name2/3260))
                    default: (exit 13))
                  case tag 3:
                   (switch i2/498
                    case tag 3:
                     (let
                       (s2/506 =a (field_int 1 i2/498)
                        s1/505 =a (field_int 1 i1/497))
                       (before Ocaml_ocaml_types__Ident.equal lib/ident.ml(94):3332-3339
                         (== s1/505 s2/506)))
                    default: (exit 13)))
                with (13)
                 (before Ocaml_ocaml_types__Ident.equal lib/ident.ml(96):3355-3360
                   0))
              with (12 name1/499 name2/500)
               (before Ocaml_ocaml_types__Ident.equal lib/ident.ml(91):3180-3193
                 (after Ocaml_ocaml_types__Ident.equal lib/ident.ml(91):3180-3193
                   (caml_string_equal name1/499 name2/500)))))))
     same/507 =
       (function i1/509 i2/510 : int
         (funct-body Ocaml_ocaml_types__Ident.same lib/ident.ml(98)<ghost>:3371-3650
           (before Ocaml_ocaml_types__Ident.same lib/ident.ml(99):3381-3650
             (catch
               (catch
                 (switch* i1/509
                  case tag 0:
                   (switch i2/510
                    case tag 0:
                     (let
                       (s2/3278 =a (field_int 1 i2/510)
                        s1/3277 =a (field_int 1 i1/509))
                       (exit 14 s1/3277 s2/3278))
                    default: (exit 15))
                  case tag 1:
                   (switch i2/510
                    case tag 1:
                     (let
                       (s2/3276 =a (field_int 1 i2/510)
                        s1/3275 =a (field_int 1 i1/509))
                       (exit 14 s1/3275 s2/3276))
                    default: (exit 15))
                  case tag 2:
                   (switch i2/510
                    case tag 2:
                     (let
                       (name2/518 =a (field_imm 0 i2/510)
                        name1/517 =a (field_imm 0 i1/509))
                       (before Ocaml_ocaml_types__Ident.same lib/ident.ml(105):3616-3629
                         (after Ocaml_ocaml_types__Ident.same lib/ident.ml(105):3616-3629
                           (caml_string_equal name1/517 name2/518))))
                    default: (exit 15))
                  case tag 3:
                   (switch i2/510
                    case tag 3:
                     (let
                       (s2/3274 =a (field_int 1 i2/510)
                        s1/3273 =a (field_int 1 i1/509))
                       (exit 14 s1/3273 s2/3274))
                    default: (exit 15)))
                with (15)
                 (before Ocaml_ocaml_types__Ident.same lib/ident.ml(107):3645-3650
                   0))
              with (14 s1/511[int] s2/512[int])
               (before Ocaml_ocaml_types__Ident.same lib/ident.ml(103):3568-3575
                 (== s1/511 s2/512))))))
     stamp/519 =
       (function param/523 : int
         (funct-body Ocaml_ocaml_types__Ident.stamp lib/ident.ml(109):3664-3739
           (catch
             (catch
               (switch* param/523
                case tag 0: (exit 18)
                case tag 1: (exit 18)
                case tag 2: (exit 17)
                case tag 3: (exit 17))
              with (18)
               (let
                 (stamp/3288 =a (field_int 1 param/523)
                  stamp/3348 =[int] stamp/3288)
                 (before Ocaml_ocaml_types__Ident.stamp lib/ident.ml(111):3723-3728
                   stamp/3348)))
            with (17)
             (before Ocaml_ocaml_types__Ident.stamp lib/ident.ml(112):3738-3739
               0))))
     scope/524 =
       (function param/527 : int
         (funct-body Ocaml_ocaml_types__Ident.scope lib/ident.ml(114):3753-3863
           (catch
             (switch* param/527
              case tag 0:
               (before Ocaml_ocaml_types__Ident.scope lib/ident.ml(116):3810-3823
                 highest_scope/305)
              case tag 1:
               (let (scope/526 =a (field_int 2 param/527))
                 (before Ocaml_ocaml_types__Ident.scope lib/ident.ml(115):3789-3794
                   scope/526))
              case tag 2: (exit 19)
              case tag 3: (exit 19))
            with (19)
             (before Ocaml_ocaml_types__Ident.scope lib/ident.ml(117):3851-3863
               lowest_scope/304))))
     reinit_level/528 = (makemutable 0 (int) -1)
     reinit/529 =
       (function param/531[int] : int
         (funct-body Ocaml_ocaml_types__Ident.reinit lib/ident.ml(121)<ghost>:3905-4006
           (before Ocaml_ocaml_types__Ident.reinit lib/ident.ml(122):3912-4006
             (if (< (field_int 0 reinit_level/528) 0)
               (before Ocaml_ocaml_types__Ident.reinit lib/ident.ml(123):3940-3969
                 (setfield_imm 0 reinit_level/528
                   (field_int 0 currentstamp/318)))
               (before Ocaml_ocaml_types__Ident.reinit lib/ident.ml(124):3977-4006
                 (setfield_imm 0 currentstamp/318
                   (field_int 0 reinit_level/528)))))))
     global/532 =
       (function param/534 : int
         (funct-body Ocaml_ocaml_types__Ident.global lib/ident.ml(126):4021-4097
           (catch
             (catch
               (switch* param/534
                case tag 0: (exit 20)
                case tag 1: (exit 20)
                case tag 2: (exit 21)
                case tag 3: (exit 21))
              with (20)
               (before Ocaml_ocaml_types__Ident.global lib/ident.ml(128):4058-4063
                 0))
            with (21)
             (before Ocaml_ocaml_types__Ident.global lib/ident.ml(130):4093-4097
               1))))
     is_predef/535 =
       (function param/537 : int
         (funct-body Ocaml_ocaml_types__Ident.is_predef lib/ident.ml(132):4115-4159
           (switch param/537
            case tag 3:
             (before Ocaml_ocaml_types__Ident.is_predef lib/ident.ml(133):4140-4144
               1)
            default:
             (before Ocaml_ocaml_types__Ident.is_predef lib/ident.ml(134):4154-4159
               0))))
     print/538 =
       (function with_scope/540[int] ppf/541
         (funct-body Ocaml_ocaml_types__Ident.print lib/ident.ml(136)<ghost>:4171-4707
           (before Ocaml_ocaml_types__Ident.print lib/ident.ml(137):4191-4707
             (function param/999 : int
               (funct-body Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(138):4212-4707
                 (switch* param/999
                  case tag 0:
                   (let
                     (n/704 =a (field_int 1 param/999)
                      name/703 =a (field_imm 0 param/999))
                     (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(144):4429-4514
                       (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(144):4429-4514
                         (apply (field_imm 138 (global Stdlib__Format!))
                           ppf/541 [0: [2: 0 [2: 0 0]] "%s%s"] name/703
                           (if
                             (field_int 0
                               (field_imm 58
                                 (global Ocaml_ocaml_types__Clflags!)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(145):4490-4505
                               (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(145):4490-4505
                                 (apply
                                   (field_imm 141 (global Stdlib__Format!))
                                   [0: [12: '/' [4: 3 0 0 0]] "/%i"] n/704)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(145):4511-4513
                               ""))))))
                  case tag 1:
                   (let
                     (scope/707 =a (field_int 2 param/999)
                      n/706 =a (field_int 1 param/999)
                      name/705 =a (field_imm 0 param/999))
                     (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(147):4562-4707
                       (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(147):4562-4707
                         (apply (field_imm 138 (global Stdlib__Format!))
                           ppf/541 [0: [2: 0 [2: 0 [2: 0 0]]] "%s%s%s"]
                           name/705
                           (if
                             (field_int 0
                               (field_imm 58
                                 (global Ocaml_ocaml_types__Clflags!)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(148):4625-4640
                               (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(148):4625-4640
                                 (apply
                                   (field_imm 141 (global Stdlib__Format!))
                                   [0: [12: '/' [4: 3 0 0 0]] "/%i"] n/706)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(148):4646-4648
                               ""))
                           (if with_scope/540
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(149):4678-4698
                               (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(149):4678-4698
                                 (apply
                                   (field_imm 141 (global Stdlib__Format!))
                                   [0:
                                    [12: '[' [4: 3 0 0 [12: ']' 0]]] "[%i]"]
                                   scope/707)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(149):4704-4706
                               ""))))))
                  case tag 2:
                   (let (name/700 =a (field_imm 0 param/999))
                     (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(139):4240-4262
                       (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(139):4240-4262
                         (apply (field_imm 138 (global Stdlib__Format!))
                           ppf/541 [0: [2: 0 [12: '!' 0]] "%s!"] name/700))))
                  case tag 3:
                   (let
                     (n/702 =a (field_int 1 param/999)
                      name/701 =a (field_imm 0 param/999))
                     (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(141):4303-4389
                       (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(141):4303-4389
                         (apply (field_imm 138 (global Stdlib__Format!))
                           ppf/541 [0: [2: 0 [2: 0 [12: '!' 0]]] "%s%s!"]
                           name/701
                           (if
                             (field_int 0
                               (field_imm 58
                                 (global Ocaml_ocaml_types__Clflags!)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(142):4365-4380
                               (after Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(142):4365-4380
                                 (apply
                                   (field_imm 141 (global Stdlib__Format!))
                                   [0: [12: '/' [4: 3 0 0 0]] "/%i"] n/702)))
                             (before Ocaml_ocaml_types__Ident.print.(fun) lib/ident.ml(142):4386-4388
                               ""))))))))))))
     print_with_scope/1000 =
       (function ppf/1002 id/1003 : int
         (funct-body Ocaml_ocaml_types__Ident.print_with_scope lib/ident.ml(151)<ghost>:4730-4768
           (before Ocaml_ocaml_types__Ident.print_with_scope lib/ident.ml(151):4739-4768
             (after Ocaml_ocaml_types__Ident.print_with_scope lib/ident.ml(151):4739-4768
               (apply print/538 1 ppf/1002 id/1003)))))
     print/1004 =
       (function ppf/1005 id/1006 : int
         (funct-body Ocaml_ocaml_types__Ident.print lib/ident.ml(153)<ghost>:4780-4819
           (before Ocaml_ocaml_types__Ident.print lib/ident.ml(153):4789-4819
             (after Ocaml_ocaml_types__Ident.print lib/ident.ml(153):4789-4819
               (apply print/538 0 ppf/1005 id/1006)))))
     empty/1014 = 0
     mknode/1015 =
       (function l/1017 d/1018 r/1019
         (funct-body Ocaml_ocaml_types__Ident.mknode lib/ident.ml(185)<ghost>:5635-5812
           (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(186):5645-5812
             (let
               (hl/1020 =[int]
                  (if l/1017
                    (let (h/1022 =a (field_imm 3 l/1017))
                      (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(186):5697-5698
                        h/1022))
                    (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(186):5676-5677
                      0))
                hr/1021 =[int]
                  (if r/1019
                    (let (h/1023 =a (field_imm 3 r/1019))
                      (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(187):5753-5754
                        h/1023))
                    (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(187):5732-5733
                      0)))
               (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(188):5760-5812
                 (makeblock 0 (*,*,*,int) l/1017 d/1018 r/1019
                   (if (>= hl/1020 hr/1021)
                     (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(188):5792-5798
                       (+ hl/1020 1))
                     (before Ocaml_ocaml_types__Ident.mknode lib/ident.ml(188):5804-5810
                       (+ hr/1021 1)))))))))
     balance/1024 =
       (function l/1026 d/1027 r/1028
         (funct-body Ocaml_ocaml_types__Ident.balance lib/ident.ml(190)<ghost>:5826-6690
           (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(191):5836-6690
             (let
               (hl/1029 =[int]
                  (if l/1026
                    (let (h/1031 =a (field_imm 3 l/1026))
                      (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(191):5888-5889
                        h/1031))
                    (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(191):5867-5868
                      0))
                hr/1030 =[int]
                  (if r/1028
                    (let (h/1032 =a (field_imm 3 r/1028))
                      (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(192):5944-5945
                        h/1032))
                    (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(192):5923-5924
                      0)))
               (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(193):5951-6690
                 (if (> hl/1029 (+ hr/1030 1))
                   (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(194):5975-6304
                     (catch
                       (if l/1026
                         (let
                           (lr/1035 =a (field_imm 2 l/1026)
                            ld/1034 =a (field_imm 1 l/1026)
                            ll/1033 =a (field_imm 0 l/1026))
                           (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(196):6026-6135
                             (if
                               (>=
                                 (if ll/1033
                                   (let (h/1041 =a (field_imm 3 ll/1033))
                                     (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(196):6071-6072
                                       h/1041))
                                   (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(196):6050-6051
                                     0))
                                 (if lr/1035
                                   (let (h/1042 =a (field_imm 3 lr/1035))
                                     (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(197):6133-6134
                                       h/1042))
                                   (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(197):6112-6113
                                     0)))
                               (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(198):6147-6175
                                 (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(198):6147-6175
                                   (apply mknode/1015 ll/1033 ld/1034
                                     (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(198):6160-6175
                                       (apply mknode/1015 lr/1035 d/1027
                                         r/1028)))))
                               (if lr/1035
                                 (let
                                   (ld/1037 =a ld/1034
                                    ll/1036 =a ll/1033
                                    lrr/1040 =a (field_imm 2 lr/1035)
                                    lrd/1039 =a (field_imm 1 lr/1035)
                                    lrl/1038 =a (field_imm 0 lr/1035))
                                   (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(200):6234-6280
                                     (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(200):6234-6280
                                       (apply mknode/1015
                                         (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(200):6241-6259
                                           (apply mknode/1015 ll/1036 ld/1037
                                             lrl/1038))
                                         lrd/1039
                                         (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(200):6264-6280
                                           (apply mknode/1015 lrr/1040 d/1027
                                             r/1028))))))
                                 (exit 25)))))
                         (exit 25))
                      with (25)
                       (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(201):6292-6304
                         (raise
                           (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(201):6292-6304
                             (makeblock 0 (global Assert_failure/28!)
                               [0: "lib/ident.ml" 201 11]))))))
                   (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(202):6312-6690
                     (if (> hr/1030 (+ hl/1029 1))
                       (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(203):6336-6666
                         (catch
                           (if r/1028
                             (let
                               (rl/1043 =a (field_imm 0 r/1028)
                                rr/1045 =a (field_imm 2 r/1028)
                                rd/1044 =a (field_imm 1 r/1028))
                               (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(205):6387-6496
                                 (if
                                   (>=
                                     (if rr/1045
                                       (let (h/1051 =a (field_imm 3 rr/1045))
                                         (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(205):6432-6433
                                           h/1051))
                                       (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(205):6411-6412
                                         0))
                                     (if rl/1043
                                       (let (h/1052 =a (field_imm 3 rl/1043))
                                         (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(206):6494-6495
                                           h/1052))
                                       (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(206):6473-6474
                                         0)))
                                   (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(207):6508-6536
                                     (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(207):6508-6536
                                       (apply mknode/1015
                                         (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(207):6515-6530
                                           (apply mknode/1015 l/1026 d/1027
                                             rl/1043))
                                         rd/1044 rr/1045)))
                                   (if rl/1043
                                     (let
                                       (rr/1050 =a (field_imm 2 r/1028)
                                        rd/1049 =a (field_imm 1 r/1028)
                                        rlr/1048 =a (field_imm 2 rl/1043)
                                        rld/1047 =a (field_imm 1 rl/1043)
                                        rll/1046 =a (field_imm 0 rl/1043))
                                       (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(209):6596-6642
                                         (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(209):6596-6642
                                           (apply mknode/1015
                                             (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(209):6603-6619
                                               (apply mknode/1015 l/1026
                                                 d/1027 rll/1046))
                                             rld/1047
                                             (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(209):6624-6642
                                               (apply mknode/1015 rlr/1048
                                                 rd/1049 rr/1050))))))
                                     (exit 23)))))
                             (exit 23))
                          with (23)
                           (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(210):6654-6666
                             (raise
                               (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(210):6654-6666
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "lib/ident.ml" 210 11]))))))
                       (before Ocaml_ocaml_types__Ident.balance lib/ident.ml(212):6678-6690
                         (after Ocaml_ocaml_types__Ident.balance lib/ident.ml(212):6678-6690
                           (apply mknode/1015 l/1026 d/1027 r/1028))))))))))))
    (letrec
      (add/1053
         (function id/1054 data/1055 param/1130
           (funct-body Ocaml_ocaml_types__Ident.add lib/ident.ml(214)<ghost>:6704-7084
             (if param/1130
               (let
                 (h/1059 =a (field_imm 3 param/1130)
                  r/1058 =a (field_imm 2 param/1130)
                  k/1057 =a (field_imm 1 param/1130)
                  l/1056 =a (field_imm 0 param/1130))
                 (before Ocaml_ocaml_types__Ident.add lib/ident.ml(218):6838-7084
                   (let
                     (c/1060 =[int]
                        (after Ocaml_ocaml_types__Ident.add lib/ident.ml(218):6846-6885
                          (apply (field_imm 9 (global Stdlib__String!))
                            (after Ocaml_ocaml_types__Ident.add lib/ident.ml(218):6861-6870
                              (apply name/333 id/1054))
                            (after Ocaml_ocaml_types__Ident.add lib/ident.ml(218):6871-6885
                              (apply name/333 (field_imm 0 k/1057))))))
                     (before Ocaml_ocaml_types__Ident.add lib/ident.ml(219):6895-7084
                       (if (== c/1060 0)
                         (before Ocaml_ocaml_types__Ident.add lib/ident.ml(220):6917-6976
                           (makeblock 0 (*,*,*,int) l/1056
                             (makeblock 0 id/1054 data/1055
                               (makeblock 0 k/1057))
                             r/1058 h/1059))
                         (before Ocaml_ocaml_types__Ident.add lib/ident.ml(221):6988-7084
                           (if (< c/1060 0)
                             (before Ocaml_ocaml_types__Ident.add lib/ident.ml(222):7010-7037
                               (after Ocaml_ocaml_types__Ident.add lib/ident.ml(222):7010-7037
                                 (apply balance/1024
                                   (after Ocaml_ocaml_types__Ident.add lib/ident.ml(222):7018-7033
                                     (apply add/1053 id/1054 data/1055
                                       l/1056))
                                   k/1057 r/1058)))
                             (before Ocaml_ocaml_types__Ident.add lib/ident.ml(224):7057-7084
                               (after Ocaml_ocaml_types__Ident.add lib/ident.ml(224):7057-7084
                                 (apply balance/1024 l/1056 k/1057
                                   (after Ocaml_ocaml_types__Ident.add lib/ident.ml(224):7069-7084
                                     (apply add/1053 id/1054 data/1055
                                       r/1058))))))))))))
               (before Ocaml_ocaml_types__Ident.add lib/ident.ml(216):6742-6807
                 (makeblock 0 (*,*,*,int) 0 (makeblock 0 id/1054 data/1055 0)
                   0 1))))))
      (letrec
        (min_binding/1131
           (function param/1134
             (funct-body Ocaml_ocaml_types__Ident.min_binding lib/ident.ml(226):7108-7215
               (if param/1134
                 (let (l/1133 =a (field_imm 0 param/1134))
                   (if l/1133
                     (before Ocaml_ocaml_types__Ident.min_binding lib/ident.ml(229):7202-7215
                       (after Ocaml_ocaml_types__Ident.min_binding lib/ident.ml(229):7202-7215
                         (apply min_binding/1131 l/1133)))
                     (let (d/1132 =a (field_imm 1 param/1134))
                       (before Ocaml_ocaml_types__Ident.min_binding lib/ident.ml(228):7175-7176
                         d/1132))))
                 (before Ocaml_ocaml_types__Ident.min_binding lib/ident.ml(227):7130-7145
                   (raise
                     (after Ocaml_ocaml_types__Ident.min_binding lib/ident.ml(227):7130-7145
                       (field_imm 7 (global Stdlib!)))))))))
        (letrec
          (remove_min_binding/1135
             (function param/1140
               (funct-body Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(231):7246-7391
                 (if param/1140
                   (let (l/1137 =a (field_imm 0 param/1140))
                     (if l/1137
                       (let
                         (r/1139 =a (field_imm 2 param/1140)
                          d/1138 =a (field_imm 1 param/1140))
                         (before Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(234):7357-7391
                           (after Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(234):7357-7391
                             (apply balance/1024
                               (after Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(234):7365-7387
                                 (apply remove_min_binding/1135 l/1137))
                               d/1138 r/1139))))
                       (let (r/1136 =a (field_imm 2 param/1140))
                         (before Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(233):7330-7331
                           r/1136))))
                   (before Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(232):7268-7300
                     (after Ocaml_ocaml_types__Ident.remove_min_binding lib/ident.ml(232):7268-7300
                       (apply (field_imm 0 (global Stdlib!))
                         "Map.remove_min_elt")))))))
          (let
            (merge/1141 =
               (function t1/1143 t2/1144
                 (funct-body Ocaml_ocaml_types__Ident.merge lib/ident.ml(236)<ghost>:7403-7561
                   (before Ocaml_ocaml_types__Ident.merge lib/ident.ml(237):7413-7561
                     (if t1/1143
                       (if t2/1144
                         (before Ocaml_ocaml_types__Ident.merge lib/ident.ml(241):7493-7561
                           (let
                             (d/1147 =
                                (after Ocaml_ocaml_types__Ident.merge lib/ident.ml(241):7501-7515
                                  (apply min_binding/1131 t2/1144)))
                             (before Ocaml_ocaml_types__Ident.merge lib/ident.ml(242):7525-7561
                               (after Ocaml_ocaml_types__Ident.merge lib/ident.ml(242):7525-7561
                                 (apply balance/1024 t1/1143 d/1147
                                   (after Ocaml_ocaml_types__Ident.merge lib/ident.ml(242):7538-7561
                                     (apply remove_min_binding/1135 t2/1144)))))))
                         (let (t/1146 =a t1/1143)
                           (before Ocaml_ocaml_types__Ident.merge lib/ident.ml(239):7471-7472
                             t/1146)))
                       (let (t/1145 =a t2/1144)
                         (before Ocaml_ocaml_types__Ident.merge lib/ident.ml(238):7451-7452
                           t/1145)))))))
            (letrec
              (remove/1148
                 (function id/1149 m/1154
                   (funct-body Ocaml_ocaml_types__Ident.remove lib/ident.ml(244)<ghost>:7578-7997
                     (if m/1154
                       (let
                         (h/1153 =a (field_imm 3 m/1154)
                          r/1152 =a (field_imm 2 m/1154)
                          k/1151 =a (field_imm 1 m/1154)
                          l/1150 =a (field_imm 0 m/1154))
                         (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(248):7655-7997
                           (let
                             (c/1155 =[int]
                                (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(248):7663-7702
                                  (apply
                                    (field_imm 9 (global Stdlib__String!))
                                    (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(248):7678-7687
                                      (apply name/333 id/1149))
                                    (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(248):7688-7702
                                      (apply name/333 (field_imm 0 k/1151))))))
                             (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(249):7712-7997
                               (if (== c/1155 0)
                                 (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(250):7734-7821
                                   (let (*match*/3336 = (field_imm 2 k/1151))
                                     (if *match*/3336
                                       (let
                                         (k/1156 =a
                                            (field_imm 0 *match*/3336))
                                         (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(252):7804-7821
                                           (makeblock 0 (*,*,*,int) l/1150
                                             k/1156 r/1152 h/1153)))
                                       (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(251):7774-7783
                                         (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(251):7774-7783
                                           (apply merge/1141 l/1150 r/1152))))))
                                 (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(253):7833-7997
                                   (if (< c/1155 0)
                                     (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(254):7855-7916
                                       (let
                                         (ll/1157 =
                                            (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(254):7864-7875
                                              (apply remove/1148 id/1149
                                                l/1150)))
                                         (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(254):7879-7916
                                           (if (== l/1150 ll/1157)
                                             (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(254):7895-7896
                                               m/1154)
                                             (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(254):7902-7916
                                               (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(254):7902-7916
                                                 (apply balance/1024 ll/1157
                                                   k/1151 r/1152)))))))
                                     (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(256):7936-7997
                                       (let
                                         (rr/1158 =
                                            (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(256):7945-7956
                                              (apply remove/1148 id/1149
                                                r/1152)))
                                         (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(256):7960-7997
                                           (if (== r/1152 rr/1158)
                                             (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(256):7976-7977
                                               m/1154)
                                             (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(256):7983-7997
                                               (after Ocaml_ocaml_types__Ident.remove lib/ident.ml(256):7983-7997
                                                 (apply balance/1024 l/1150
                                                   k/1151 rr/1158))))))))))))))
                       (before Ocaml_ocaml_types__Ident.remove lib/ident.ml(246):7611-7616
                         0)))))
              (letrec
                (find_previous/1159
                   (function id/1160 param/1162
                     (funct-body Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(258)<ghost>:8021-8152
                       (if param/1162
                         (let (k/1161 =a (field_imm 0 param/1162))
                           (before Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(262):8089-8152
                             (if
                               (after Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(262):8092-8107
                                 (apply same/507 id/1160
                                   (field_imm 0 k/1161)))
                               (before Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(262):8113-8119
                                 (field_imm 1 k/1161))
                               (before Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(262):8125-8152
                                 (after Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(262):8125-8152
                                   (apply find_previous/1159 id/1160
                                     (field_imm 2 k/1161)))))))
                         (before Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(260):8053-8068
                           (raise
                             (after Ocaml_ocaml_types__Ident.find_previous lib/ident.ml(260):8053-8068
                               (field_imm 7 (global Stdlib!)))))))))
                (letrec
                  (find_same/1163
                     (function id/1164 param/1169
                       (funct-body Ocaml_ocaml_types__Ident.find_same lib/ident.ml(264)<ghost>:8172-8466
                         (if param/1169
                           (let
                             (r/1167 =a (field_imm 2 param/1169)
                              k/1166 =a (field_imm 1 param/1169)
                              l/1165 =a (field_imm 0 param/1169))
                             (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(268):8251-8466
                               (let
                                 (c/1168 =[int]
                                    (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(268):8259-8298
                                      (apply
                                        (field_imm 9
                                          (global Stdlib__String!))
                                        (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(268):8274-8283
                                          (apply name/333 id/1164))
                                        (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(268):8284-8298
                                          (apply name/333
                                            (field_imm 0 k/1166))))))
                                 (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(269):8308-8466
                                   (if (== c/1168 0)
                                     (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(270):8330-8409
                                       (if
                                         (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(270):8333-8348
                                           (apply same/507 id/1164
                                             (field_imm 0 k/1166)))
                                         (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(271):8362-8368
                                           (field_imm 1 k/1166))
                                         (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(272):8382-8409
                                           (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(272):8382-8409
                                             (apply find_previous/1159
                                               id/1164 (field_imm 2 k/1166))))))
                                     (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(274):8429-8466
                                       (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(274):8429-8466
                                         (apply find_same/1163 id/1164
                                           (if (< c/1168 0)
                                             (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(274):8457-8458
                                               l/1165)
                                             (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(274):8464-8465
                                               r/1167))))))))))
                           (before Ocaml_ocaml_types__Ident.find_same lib/ident.ml(266):8205-8220
                             (raise
                               (after Ocaml_ocaml_types__Ident.find_same lib/ident.ml(266):8205-8220
                                 (field_imm 7 (global Stdlib!)))))))))
                  (letrec
                    (find_name/1170
                       (function n/1171 param/1176
                         (funct-body Ocaml_ocaml_types__Ident.find_name lib/ident.ml(276)<ghost>:8486-8706
                           (if param/1176
                             (let
                               (r/1174 =a (field_imm 2 param/1176)
                                k/1173 =a (field_imm 1 param/1176)
                                l/1172 =a (field_imm 0 param/1176))
                               (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(280):8564-8706
                                 (let
                                   (c/1175 =[int]
                                      (after Ocaml_ocaml_types__Ident.find_name lib/ident.ml(280):8572-8603
                                        (apply
                                          (field_imm 9
                                            (global Stdlib__String!))
                                          n/1171
                                          (after Ocaml_ocaml_types__Ident.find_name lib/ident.ml(280):8589-8603
                                            (apply name/333
                                              (field_imm 0 k/1173))))))
                                   (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(281):8613-8706
                                     (if (== c/1175 0)
                                       (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(282):8635-8650
                                         (makeblock 0 (field_imm 0 k/1173)
                                           (field_imm 1 k/1173)))
                                       (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(284):8670-8706
                                         (after Ocaml_ocaml_types__Ident.find_name lib/ident.ml(284):8670-8706
                                           (apply find_name/1170 n/1171
                                             (if (< c/1175 0)
                                               (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(284):8697-8698
                                                 l/1172)
                                               (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(284):8704-8705
                                                 r/1174))))))))))
                             (before Ocaml_ocaml_types__Ident.find_name lib/ident.ml(278):8518-8533
                               (raise
                                 (after Ocaml_ocaml_types__Ident.find_name lib/ident.ml(278):8518-8533
                                   (field_imm 7 (global Stdlib!)))))))))
                    (letrec
                      (get_all/1177
                         (function param/1179
                           (funct-body Ocaml_ocaml_types__Ident.get_all lib/ident.ml(286):8726-8803
                             (if param/1179
                               (let (k/1178 =a (field_imm 0 param/1179))
                                 (before Ocaml_ocaml_types__Ident.get_all lib/ident.ml(288):8764-8803
                                   (makeblock 0
                                     (makeblock 0 (field_imm 0 k/1178)
                                       (field_imm 1 k/1178))
                                     (after Ocaml_ocaml_types__Ident.get_all lib/ident.ml(288):8785-8803
                                       (apply get_all/1177
                                         (field_imm 2 k/1178))))))
                               (before Ocaml_ocaml_types__Ident.get_all lib/ident.ml(287):8747-8749
                                 0)))))
                      (letrec
                        (find_all/1180
                           (function n/1181 param/1186
                             (funct-body Ocaml_ocaml_types__Ident.find_all lib/ident.ml(290)<ghost>:8822-9052
                               (if param/1186
                                 (let
                                   (r/1184 =a (field_imm 2 param/1186)
                                    k/1183 =a (field_imm 1 param/1186)
                                    l/1182 =a (field_imm 0 param/1186))
                                   (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(294):8887-9052
                                     (let
                                       (c/1185 =[int]
                                          (after Ocaml_ocaml_types__Ident.find_all lib/ident.ml(294):8895-8926
                                            (apply
                                              (field_imm 9
                                                (global Stdlib__String!))
                                              n/1181
                                              (after Ocaml_ocaml_types__Ident.find_all lib/ident.ml(294):8912-8926
                                                (apply name/333
                                                  (field_imm 0 k/1183))))))
                                       (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(295):8936-9052
                                         (if (== c/1185 0)
                                           (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(296):8958-8997
                                             (makeblock 0
                                               (makeblock 0
                                                 (field_imm 0 k/1183)
                                                 (field_imm 1 k/1183))
                                               (after Ocaml_ocaml_types__Ident.find_all lib/ident.ml(296):8979-8997
                                                 (apply get_all/1177
                                                   (field_imm 2 k/1183)))))
                                           (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(298):9017-9052
                                             (after Ocaml_ocaml_types__Ident.find_all lib/ident.ml(298):9017-9052
                                               (apply find_all/1180 n/1181
                                                 (if (< c/1185 0)
                                                   (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(298):9043-9044
                                                     l/1182)
                                                   (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(298):9050-9051
                                                     r/1184))))))))))
                                 (before Ocaml_ocaml_types__Ident.find_all lib/ident.ml(292):8854-8856
                                   0)))))
                        (let
                          (get_all_seq/1187 =
                             (function k/1189 param/1330[int]
                               (funct-body Ocaml_ocaml_types__Ident.get_all_seq lib/ident.ml(300)<ghost>:9070-9152
                                 (before Ocaml_ocaml_types__Ident.get_all_seq lib/ident.ml(301):9079-9152
                                   (after Ocaml_ocaml_types__Ident.get_all_seq lib/ident.ml(301):9079-9152
                                     (apply
                                       (field_imm 23 (global Stdlib__Seq!))
                                       (after Ocaml_ocaml_types__Ident.get_all_seq lib/ident.ml(301):9090-9143
                                         (apply
                                           (field_imm 6
                                             (global Stdlib__Option!))
                                           (function k/1329
                                             (funct-body Ocaml_ocaml_types__Ident.get_all_seq.(fun) lib/ident.ml(301):9102-9142
                                               (before Ocaml_ocaml_types__Ident.get_all_seq.(fun) lib/ident.ml(301):9112-9141
                                                 (makeblock 0
                                                   (makeblock 0
                                                     (field_imm 0 k/1329)
                                                     (field_imm 1 k/1329))
                                                   (field_imm 2 k/1329)))))))
                                       k/1189 0))))))
                          (letrec
                            (find_all_seq/1331
                               (function n/1332 tbl/1333 param/1338[int]
                                 (funct-body Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(304)<ghost>:9175-9438
                                   (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(305):9188-9438
                                     (if tbl/1333
                                       (let
                                         (r/1336 =a (field_imm 2 tbl/1333)
                                          k/1335 =a (field_imm 1 tbl/1333)
                                          l/1334 =a (field_imm 0 tbl/1333))
                                         (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(308):9254-9438
                                           (let
                                             (c/1337 =[int]
                                                (after Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(308):9262-9293
                                                  (apply
                                                    (field_imm 9
                                                      (global Stdlib__String!))
                                                    n/1332
                                                    (after Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(308):9279-9293
                                                      (apply name/333
                                                        (field_imm 0 k/1335))))))
                                             (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(309):9303-9438
                                               (if (== c/1337 0)
                                                 (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(310):9325-9376
                                                   (makeblock 0
                                                     (makeblock 0
                                                       (field_imm 0 k/1335)
                                                       (field_imm 1 k/1335))
                                                     (after Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(310):9353-9375
                                                       (apply
                                                         get_all_seq/1187
                                                         (field_imm 2 k/1335)))))
                                                 (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(312):9396-9438
                                                   (after Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(312):9396-9438
                                                     (apply find_all_seq/1331
                                                       n/1332
                                                       (if (< c/1337 0)
                                                         (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(312):9426-9427
                                                           l/1334)
                                                         (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(312):9433-9434
                                                           r/1336))
                                                       0))))))))
                                       (before Ocaml_ocaml_types__Ident.find_all_seq lib/ident.ml(306):9216-9223
                                         0))))))
                            (letrec
                              (fold_aux/1339
                                 (function f/1340 stack/1341 accu/1342
                                   param/1348
                                   (funct-body Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(315)<ghost>:9458-9657
                                     (if param/1348
                                       (let
                                         (r/1345 =a (field_imm 2 param/1348)
                                          k/1344 =a (field_imm 1 param/1348)
                                          l/1343 =a (field_imm 0 param/1348))
                                         (before Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(322):9621-9657
                                           (after Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(322):9621-9657
                                             (apply fold_aux/1339 f/1340
                                               (makeblock 0 l/1343
                                                 stack/1341)
                                               (after Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(322):9645-9655
                                                 (apply f/1340 k/1344
                                                   accu/1342))
                                               r/1345))))
                                       (before Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(317):9501-9590
                                         (if stack/1341
                                           (let
                                             (l/1347 =a
                                                (field_imm 1 stack/1341)
                                              a/1346 =a
                                                (field_imm 0 stack/1341))
                                             (before Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(319):9561-9580
                                               (after Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(319):9561-9580
                                                 (apply fold_aux/1339 f/1340
                                                   l/1347 accu/1342 a/1346))))
                                           (before Ocaml_ocaml_types__Ident.fold_aux lib/ident.ml(318):9538-9542
                                             accu/1342)))))))
                              (let
                                (fold_name/1349 =
                                   (function f/1351 tbl/1352 accu/1353
                                     (funct-body Ocaml_ocaml_types__Ident.fold_name lib/ident.ml(324)<ghost>:9673-9734
                                       (before Ocaml_ocaml_types__Ident.fold_name lib/ident.ml(324):9686-9734
                                         (after Ocaml_ocaml_types__Ident.fold_name lib/ident.ml(324):9686-9734
                                           (apply fold_aux/1339
                                             (function k/1354
                                               (funct-body Ocaml_ocaml_types__Ident.fold_name.(fun) lib/ident.ml(324):9695-9722
                                                 (before Ocaml_ocaml_types__Ident.fold_name.(fun) lib/ident.ml(324):9705-9721
                                                   (after Ocaml_ocaml_types__Ident.fold_name.(fun) lib/ident.ml(324):9705-9721
                                                     (apply f/1351
                                                       (field_imm 0 k/1354)
                                                       (field_imm 1 k/1354))))))
                                             0 accu/1353 tbl/1352))))))
                                (letrec
                                  (fold_data/1355
                                     (function f/1356 d/1357 accu/1358
                                       (funct-body Ocaml_ocaml_types__Ident.fold_data lib/ident.ml(326)<ghost>:9754-9857
                                         (before Ocaml_ocaml_types__Ident.fold_data lib/ident.ml(327):9767-9857
                                           (if d/1357
                                             (let
                                               (k/1359 =a
                                                  (field_imm 0 d/1357))
                                               (before Ocaml_ocaml_types__Ident.fold_data lib/ident.ml(329):9811-9857
                                                 (after Ocaml_ocaml_types__Ident.fold_data lib/ident.ml(329):9811-9857
                                                   (apply f/1356
                                                     (field_imm 0 k/1359)
                                                     (field_imm 1 k/1359)
                                                     (after Ocaml_ocaml_types__Ident.fold_data lib/ident.ml(329):9828-9857
                                                       (apply fold_data/1355
                                                         f/1356
                                                         (field_imm 2 k/1359)
                                                         accu/1358))))))
                                             (before Ocaml_ocaml_types__Ident.fold_data lib/ident.ml(328):9792-9796
                                               accu/1358))))))
                                  (let
                                    (fold_all/1360 =
                                       (function f/1362 tbl/1363 accu/1364
                                         (funct-body Ocaml_ocaml_types__Ident.fold_all lib/ident.ml(331)<ghost>:9872-9939
                                           (before Ocaml_ocaml_types__Ident.fold_all lib/ident.ml(332):9887-9939
                                             (after Ocaml_ocaml_types__Ident.fold_all lib/ident.ml(332):9887-9939
                                               (apply fold_aux/1339
                                                 (function k/1365
                                                   (funct-body Ocaml_ocaml_types__Ident.fold_all.(fun) lib/ident.ml(332):9896-9927
                                                     (before Ocaml_ocaml_types__Ident.fold_all.(fun) lib/ident.ml(332):9906-9926
                                                       (after Ocaml_ocaml_types__Ident.fold_all.(fun) lib/ident.ml(332):9906-9926
                                                         (apply
                                                           fold_data/1355
                                                           f/1362
                                                           (makeblock 0
                                                             k/1365))))))
                                                 0 accu/1364 tbl/1363))))))
                                    (letrec
                                      (iter/1366
                                         (function f/1367 param/1371 : int
                                           (funct-body Ocaml_ocaml_types__Ident.iter lib/ident.ml(336)<ghost>:10019-10114
                                             (if param/1371
                                               (let
                                                 (r/1370 =a
                                                    (field_imm 2 param/1371)
                                                  k/1369 =a
                                                    (field_imm 1 param/1371)
                                                  l/1368 =a
                                                    (field_imm 0 param/1371))
                                                 (before Ocaml_ocaml_types__Ident.iter lib/ident.ml(339):10078-10114
                                                   (seq
                                                     (after Ocaml_ocaml_types__Ident.iter lib/ident.ml(339):10078-10086
                                                       (apply iter/1366
                                                         f/1367 l/1368))
                                                     (before Ocaml_ocaml_types__Ident.iter lib/ident.ml(339):10088-10114
                                                       (seq
                                                         (after Ocaml_ocaml_types__Ident.iter lib/ident.ml(339):10088-10104
                                                           (apply f/1367
                                                             (field_imm 0
                                                               k/1369)
                                                             (field_imm 1
                                                               k/1369)))
                                                         (before Ocaml_ocaml_types__Ident.iter lib/ident.ml(339):10106-10114
                                                           (after Ocaml_ocaml_types__Ident.iter lib/ident.ml(339):10106-10114
                                                             (apply iter/1366
                                                               f/1367 r/1370))))))))
                                               (before Ocaml_ocaml_types__Ident.iter lib/ident.ml(337):10045-10047
                                                 0)))))
                                      (let
                                        (key_name/1372 = ""
                                         make_key_generator/1373 =
                                           (function param/1378[int]
                                             (funct-body Ocaml_ocaml_types__Ident.make_key_generator lib/ident.ml(346)<ghost>:10241-10480
                                               (before Ocaml_ocaml_types__Ident.make_key_generator lib/ident.ml(347):10248-10480
                                                 (let
                                                   (c/1375 =
                                                      (makemutable 0 (int) 1))
                                                   (before Ocaml_ocaml_types__Ident.make_key_generator lib/ident.ml(348):10267-10480
                                                     (function global_id/1376
                                                       (funct-body Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(348):10267-10480
                                                         (catch
                                                           (catch
                                                             (switch* global_id/1376
                                                              case tag 0:
                                                               (exit 31)
                                                              case tag 1:
                                                               (exit 31)
                                                              case tag 2:
                                                               (exit 32)
                                                              case tag 3:
                                                               (exit 32))
                                                            with (32)
                                                             (before Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(355):10413-10480
                                                               (after Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(355):10413-10480
                                                                 (apply
                                                                   (field_imm 1
                                                                    (global Ocaml_ocaml_types__Misc!))
                                                                   [0:
                                                                    [11:
                                                                    "Ident.make_key_generator () "
                                                                    [2: 0 0]]
                                                                    "Ident.make_key_generator () %s"]
                                                                   (after Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(355):10464-10480
                                                                    (apply
                                                                    name/333
                                                                    global_id/1376))))))
                                                          with (31)
                                                           (before Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(351):10310-10389
                                                             (let
                                                               (stamp/1377 =[int]
                                                                  (field_int 0
                                                                    c/1375))
                                                               (before Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(352):10334-10389
                                                                 (seq
                                                                   (+:=-1
                                                                    c/1375)
                                                                   (before Ocaml_ocaml_types__Ident.make_key_generator.(fun) lib/ident.ml(353):10349-10389
                                                                    (makeblock 0 (*,int)
                                                                    key_name/1372
                                                                    stamp/1377))))))))))))))
                                         compare/1379 =
                                           (function x/1380 y/1381 : int
                                             (funct-body Ocaml_ocaml_types__Ident.compare lib/ident.ml(357)<ghost>:10494-10992
                                               (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(358):10502-10992
                                                 (catch
                                                   (catch
                                                     (catch
                                                       (switch* x/1380
                                                        case tag 0:
                                                         (switch y/1381
                                                          case tag 0:
                                                           (let
                                                             (y/1383 =a
                                                                y/1381
                                                              x/1382 =a
                                                                x/1380)
                                                             (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(360):10548-10632
                                                               (let
                                                                 (c/1390 =[int]
                                                                    (-
                                                                    (field_int 1
                                                                    x/1382)
                                                                    (field_int 1
                                                                    y/1383)))
                                                                 (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(361):10583-10632
                                                                   (if
                                                                    (!=
                                                                    c/1390 0)
                                                                    (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(361):10598-10599
                                                                    c/1390)
                                                                    (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(362):10611-10632
                                                                    (after Ocaml_ocaml_types__Ident.compare lib/ident.ml(362):10611-10632
                                                                    (caml_string_compare
                                                                    (field_imm 0
                                                                    x/1382)
                                                                    (field_imm 0
                                                                    y/1383)))))))))
                                                          default:
                                                           (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(363):10651-10652
                                                             1))
                                                        case tag 1:
                                                         (switch* y/1381
                                                          case tag 0:
                                                           (exit 37)
                                                          case tag 1:
                                                           (let
                                                             (y/1385 =a
                                                                y/1381
                                                              x/1384 =a
                                                                x/1380)
                                                             (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(366):10708-10792
                                                               (let
                                                                 (c/1391 =[int]
                                                                    (-
                                                                    (field_int 1
                                                                    x/1384)
                                                                    (field_int 1
                                                                    y/1385)))
                                                                 (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(367):10743-10792
                                                                   (if
                                                                    (!=
                                                                    c/1391 0)
                                                                    (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(367):10758-10759
                                                                    c/1391)
                                                                    (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(368):10771-10792
                                                                    (after Ocaml_ocaml_types__Ident.compare lib/ident.ml(368):10771-10792
                                                                    (caml_string_compare
                                                                    (field_imm 0
                                                                    x/1384)
                                                                    (field_imm 0
                                                                    y/1385)))))))))
                                                          case tag 2:
                                                           (exit 36)
                                                          case tag 3:
                                                           (exit 36))
                                                        case tag 2:
                                                         (let
                                                           (x/1386 =a
                                                              (field_imm 0
                                                                x/1380))
                                                           (switch* y/1381
                                                            case tag 0:
                                                             (exit 37)
                                                            case tag 1:
                                                             (exit 35)
                                                            case tag 2:
                                                             (let
                                                               (y/1387 =a
                                                                  (field_imm 0
                                                                    y/1381))
                                                               (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(371):10864-10875
                                                                 (after Ocaml_ocaml_types__Ident.compare lib/ident.ml(371):10864-10875
                                                                   (caml_string_compare
                                                                    x/1386
                                                                    y/1387))))
                                                            case tag 3:
                                                             (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(372):10895-10896
                                                               1)))
                                                        case tag 3:
                                                         (let
                                                           (s1/1388 =a
                                                              (field_int 1
                                                                x/1380))
                                                           (switch* y/1381
                                                            case tag 0:
                                                             (exit 37)
                                                            case tag 1:
                                                             (exit 35)
                                                            case tag 2:
                                                             (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(373):10916-10920
                                                               -1)
                                                            case tag 3:
                                                             (let
                                                               (s2/1389 =a
                                                                  (field_int 1
                                                                    y/1381))
                                                               (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(374):10979-10992
                                                                 (compare_ints
                                                                   s1/1388
                                                                   s2/1389))))))
                                                      with (37)
                                                       (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(364):10671-10675
                                                         -1))
                                                    with (36)
                                                     (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(369):10812-10813
                                                       1))
                                                  with (35)
                                                   (before Ocaml_ocaml_types__Ident.compare lib/ident.ml(370):10833-10837
                                                     -1)))))
                                         output/1392 =
                                           (function oc/1393 id/1394 : int
                                             (funct-body Ocaml_ocaml_types__Ident.output lib/ident.ml(376)<ghost>:11005-11046
                                               (before Ocaml_ocaml_types__Ident.output lib/ident.ml(376):11013-11046
                                                 (after Ocaml_ocaml_types__Ident.output lib/ident.ml(376):11013-11046
                                                   (apply
                                                     (field_imm 65
                                                       (global Stdlib!))
                                                     oc/1393
                                                     (after Ocaml_ocaml_types__Ident.output lib/ident.ml(376):11030-11046
                                                       (apply unique_name/443
                                                         id/1394)))))))
                                         hash/1395 =
                                           (function i/1397 : int
                                             (funct-body Ocaml_ocaml_types__Ident.hash lib/ident.ml(377)<ghost>:11056-11099
                                               (before Ocaml_ocaml_types__Ident.hash lib/ident.ml(377):11060-11099
                                                 (xor
                                                   (after Ocaml_ocaml_types__Ident.hash lib/ident.ml(377):11071-11083
                                                     (string.get
                                                       (after Ocaml_ocaml_types__Ident.hash lib/ident.ml(377):11071-11079
                                                         (apply name/333
                                                           i/1397))
                                                       0))
                                                   (after Ocaml_ocaml_types__Ident.hash lib/ident.ml(377):11090-11099
                                                     (apply stamp/519 i/1397))))))
                                         original_equal/1409 = equal/495
                                         equal/1410 = original_equal/1409)
                                        (pseudo <unknown location>
                                          (makeblock 0 lowest_scope/304
                                            highest_scope/305
                                            currentstamp/318 predefstamp/319
                                            create_scoped/320
                                            create_local/324
                                            create_predef/327
                                            create_persistent/330 name/333
                                            rename/340 unique_name/443
                                            unique_toplevel_name/483
                                            persistent/492 same/507 stamp/519
                                            scope/524 reinit_level/528
                                            reinit/529 global/532
                                            is_predef/535
                                            print_with_scope/1000 print/1004
                                            empty/1014 mknode/1015
                                            balance/1024 add/1053
                                            min_binding/1131
                                            remove_min_binding/1135
                                            merge/1141 remove/1148
                                            find_previous/1159 find_same/1163
                                            find_name/1170 get_all/1177
                                            find_all/1180 get_all_seq/1187
                                            find_all_seq/1331 fold_aux/1339
                                            fold_name/1349 fold_data/1355
                                            fold_all/1360 iter/1366
                                            key_name/1372
                                            make_key_generator/1373
                                            compare/1379 output/1392
                                            hash/1395 original_equal/1409
                                            equal/1410))))))))))))))))))))))
