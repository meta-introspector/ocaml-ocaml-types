[
  structure_item (lib/clflags.ml[42,1720+0]..[44,1861+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[42,1720+4]..[42,1720+12])
          Ppat_var "objfiles" (lib/clflags.ml[42,1720+4]..[42,1720+12])
        expression (lib/clflags.ml[42,1720+15]..[42,1720+37])
          Pexp_apply
          expression (lib/clflags.ml[42,1720+15]..[42,1720+18])
            Pexp_ident "ref" (lib/clflags.ml[42,1720+15]..[42,1720+18])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[42,1720+19]..[42,1720+37])
                Pexp_constraint
                expression (lib/clflags.ml[42,1720+20]..[42,1720+22])
                  Pexp_construct "[]" (lib/clflags.ml[42,1720+20]..[42,1720+22])
                  None
                core_type (lib/clflags.ml[42,1720+25]..[42,1720+36])
                  Ptyp_constr "list" (lib/clflags.ml[42,1720+32]..[42,1720+36])
                  [
                    core_type (lib/clflags.ml[42,1720+25]..[42,1720+31])
                      Ptyp_constr "string" (lib/clflags.ml[42,1720+25]..[42,1720+31])
                      []
                  ]
          ]
      <def>
        pattern (lib/clflags.ml[43,1786+4]..[43,1786+10])
          Ppat_var "ccobjs" (lib/clflags.ml[43,1786+4]..[43,1786+10])
        expression (lib/clflags.ml[43,1786+13]..[43,1786+35])
          Pexp_apply
          expression (lib/clflags.ml[43,1786+13]..[43,1786+16])
            Pexp_ident "ref" (lib/clflags.ml[43,1786+13]..[43,1786+16])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[43,1786+17]..[43,1786+35])
                Pexp_constraint
                expression (lib/clflags.ml[43,1786+18]..[43,1786+20])
                  Pexp_construct "[]" (lib/clflags.ml[43,1786+18]..[43,1786+20])
                  None
                core_type (lib/clflags.ml[43,1786+23]..[43,1786+34])
                  Ptyp_constr "list" (lib/clflags.ml[43,1786+30]..[43,1786+34])
                  [
                    core_type (lib/clflags.ml[43,1786+23]..[43,1786+29])
                      Ptyp_constr "string" (lib/clflags.ml[43,1786+23]..[43,1786+29])
                      []
                  ]
          ]
      <def>
        pattern (lib/clflags.ml[44,1861+4]..[44,1861+10])
          Ppat_var "dllibs" (lib/clflags.ml[44,1861+4]..[44,1861+10])
        expression (lib/clflags.ml[44,1861+13]..[44,1861+35])
          Pexp_apply
          expression (lib/clflags.ml[44,1861+13]..[44,1861+16])
            Pexp_ident "ref" (lib/clflags.ml[44,1861+13]..[44,1861+16])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[44,1861+17]..[44,1861+35])
                Pexp_constraint
                expression (lib/clflags.ml[44,1861+18]..[44,1861+20])
                  Pexp_construct "[]" (lib/clflags.ml[44,1861+18]..[44,1861+20])
                  None
                core_type (lib/clflags.ml[44,1861+23]..[44,1861+34])
                  Ptyp_constr "list" (lib/clflags.ml[44,1861+30]..[44,1861+34])
                  [
                    core_type (lib/clflags.ml[44,1861+23]..[44,1861+29])
                      Ptyp_constr "string" (lib/clflags.ml[44,1861+23]..[44,1861+29])
                      []
                  ]
          ]
    ]
  structure_item (lib/clflags.ml[48,1960+0]..[73,3386+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[48,1960+4]..[48,1960+16])
          Ppat_var "compile_only" (lib/clflags.ml[48,1960+4]..[48,1960+16])
        expression (lib/clflags.ml[48,1960+19]..[48,1960+28])
          Pexp_apply
          expression (lib/clflags.ml[48,1960+19]..[48,1960+22])
            Pexp_ident "ref" (lib/clflags.ml[48,1960+19]..[48,1960+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[48,1960+23]..[48,1960+28])
                Pexp_construct "false" (lib/clflags.ml[48,1960+23]..[48,1960+28])
                None
          ]
      <def>
        pattern (lib/clflags.ml[49,2009+4]..[49,2009+15])
          Ppat_var "output_name" (lib/clflags.ml[49,2009+4]..[49,2009+15])
        expression (lib/clflags.ml[49,2009+18]..[49,2009+44])
          Pexp_apply
          expression (lib/clflags.ml[49,2009+18]..[49,2009+21])
            Pexp_ident "ref" (lib/clflags.ml[49,2009+18]..[49,2009+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[49,2009+22]..[49,2009+44])
                Pexp_constraint
                expression (lib/clflags.ml[49,2009+23]..[49,2009+27])
                  Pexp_construct "None" (lib/clflags.ml[49,2009+23]..[49,2009+27])
                  None
                core_type (lib/clflags.ml[49,2009+30]..[49,2009+43])
                  Ptyp_constr "option" (lib/clflags.ml[49,2009+37]..[49,2009+43])
                  [
                    core_type (lib/clflags.ml[49,2009+30]..[49,2009+36])
                      Ptyp_constr "string" (lib/clflags.ml[49,2009+30]..[49,2009+36])
                      []
                  ]
          ]
      <def>
        pattern (lib/clflags.ml[50,2063+4]..[50,2063+16])
          Ppat_var "include_dirs" (lib/clflags.ml[50,2063+4]..[50,2063+16])
        expression (lib/clflags.ml[50,2063+19]..[50,2063+41])
          Pexp_apply
          expression (lib/clflags.ml[50,2063+19]..[50,2063+22])
            Pexp_ident "ref" (lib/clflags.ml[50,2063+19]..[50,2063+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[50,2063+23]..[50,2063+41])
                Pexp_constraint
                expression (lib/clflags.ml[50,2063+24]..[50,2063+26])
                  Pexp_construct "[]" (lib/clflags.ml[50,2063+24]..[50,2063+26])
                  None
                core_type (lib/clflags.ml[50,2063+29]..[50,2063+40])
                  Ptyp_constr "list" (lib/clflags.ml[50,2063+36]..[50,2063+40])
                  [
                    core_type (lib/clflags.ml[50,2063+29]..[50,2063+35])
                      Ptyp_constr "string" (lib/clflags.ml[50,2063+29]..[50,2063+35])
                      []
                  ]
          ]
      <def>
        pattern (lib/clflags.ml[51,2114+4]..[51,2114+23])
          Ppat_var "hidden_include_dirs" (lib/clflags.ml[51,2114+4]..[51,2114+23])
        expression (lib/clflags.ml[51,2114+26]..[51,2114+48])
          Pexp_apply
          expression (lib/clflags.ml[51,2114+26]..[51,2114+29])
            Pexp_ident "ref" (lib/clflags.ml[51,2114+26]..[51,2114+29])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[51,2114+30]..[51,2114+48])
                Pexp_constraint
                expression (lib/clflags.ml[51,2114+31]..[51,2114+33])
                  Pexp_construct "[]" (lib/clflags.ml[51,2114+31]..[51,2114+33])
                  None
                core_type (lib/clflags.ml[51,2114+36]..[51,2114+47])
                  Ptyp_constr "list" (lib/clflags.ml[51,2114+43]..[51,2114+47])
                  [
                    core_type (lib/clflags.ml[51,2114+36]..[51,2114+42])
                      Ptyp_constr "string" (lib/clflags.ml[51,2114+36]..[51,2114+42])
                      []
                  ]
          ]
      <def>
        pattern (lib/clflags.ml[52,2172+4]..[52,2172+18])
          Ppat_var "no_std_include" (lib/clflags.ml[52,2172+4]..[52,2172+18])
        expression (lib/clflags.ml[52,2172+21]..[52,2172+30])
          Pexp_apply
          expression (lib/clflags.ml[52,2172+21]..[52,2172+24])
            Pexp_ident "ref" (lib/clflags.ml[52,2172+21]..[52,2172+24])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[52,2172+25]..[52,2172+30])
                Pexp_construct "false" (lib/clflags.ml[52,2172+25]..[52,2172+30])
                None
          ]
      <def>
        pattern (lib/clflags.ml[53,2228+4]..[53,2228+10])
          Ppat_var "no_cwd" (lib/clflags.ml[53,2228+4]..[53,2228+10])
        expression (lib/clflags.ml[53,2228+13]..[53,2228+22])
          Pexp_apply
          expression (lib/clflags.ml[53,2228+13]..[53,2228+16])
            Pexp_ident "ref" (lib/clflags.ml[53,2228+13]..[53,2228+16])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[53,2228+17]..[53,2228+22])
                Pexp_construct "false" (lib/clflags.ml[53,2228+17]..[53,2228+22])
                None
          ]
      <def>
        pattern (lib/clflags.ml[54,2281+4]..[54,2281+15])
          Ppat_var "print_types" (lib/clflags.ml[54,2281+4]..[54,2281+15])
        expression (lib/clflags.ml[54,2281+18]..[54,2281+27])
          Pexp_apply
          expression (lib/clflags.ml[54,2281+18]..[54,2281+21])
            Pexp_ident "ref" (lib/clflags.ml[54,2281+18]..[54,2281+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[54,2281+22]..[54,2281+27])
                Pexp_construct "false" (lib/clflags.ml[54,2281+22]..[54,2281+27])
                None
          ]
      <def>
        pattern (lib/clflags.ml[55,2330+4]..[55,2330+16])
          Ppat_var "make_archive" (lib/clflags.ml[55,2330+4]..[55,2330+16])
        expression (lib/clflags.ml[55,2330+19]..[55,2330+28])
          Pexp_apply
          expression (lib/clflags.ml[55,2330+19]..[55,2330+22])
            Pexp_ident "ref" (lib/clflags.ml[55,2330+19]..[55,2330+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[55,2330+23]..[55,2330+28])
                Pexp_construct "false" (lib/clflags.ml[55,2330+23]..[55,2330+28])
                None
          ]
      <def>
        pattern (lib/clflags.ml[56,2379+4]..[56,2379+9])
          Ppat_var "debug" (lib/clflags.ml[56,2379+4]..[56,2379+9])
        expression (lib/clflags.ml[56,2379+12]..[56,2379+21])
          Pexp_apply
          expression (lib/clflags.ml[56,2379+12]..[56,2379+15])
            Pexp_ident "ref" (lib/clflags.ml[56,2379+12]..[56,2379+15])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[56,2379+16]..[56,2379+21])
                Pexp_construct "false" (lib/clflags.ml[56,2379+16]..[56,2379+21])
                None
          ]
      <def>
        pattern (lib/clflags.ml[57,2428+4]..[57,2428+14])
          Ppat_var "debug_full" (lib/clflags.ml[57,2428+4]..[57,2428+14])
        expression (lib/clflags.ml[57,2428+17]..[57,2428+26])
          Pexp_apply
          expression (lib/clflags.ml[57,2428+17]..[57,2428+20])
            Pexp_ident "ref" (lib/clflags.ml[57,2428+17]..[57,2428+20])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[57,2428+21]..[57,2428+26])
                Pexp_construct "false" (lib/clflags.ml[57,2428+21]..[57,2428+26])
                None
          ]
      <def>
        pattern (lib/clflags.ml[58,2497+4]..[58,2497+10])
          Ppat_var "unsafe" (lib/clflags.ml[58,2497+4]..[58,2497+10])
        expression (lib/clflags.ml[58,2497+13]..[58,2497+22])
          Pexp_apply
          expression (lib/clflags.ml[58,2497+13]..[58,2497+16])
            Pexp_ident "ref" (lib/clflags.ml[58,2497+13]..[58,2497+16])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[58,2497+17]..[58,2497+22])
                Pexp_construct "false" (lib/clflags.ml[58,2497+17]..[58,2497+22])
                None
          ]
      <def>
        pattern (lib/clflags.ml[59,2551+4]..[59,2551+15])
          Ppat_var "use_linscan" (lib/clflags.ml[59,2551+4]..[59,2551+15])
        expression (lib/clflags.ml[59,2551+18]..[59,2551+27])
          Pexp_apply
          expression (lib/clflags.ml[59,2551+18]..[59,2551+21])
            Pexp_ident "ref" (lib/clflags.ml[59,2551+18]..[59,2551+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[59,2551+22]..[59,2551+27])
                Pexp_construct "false" (lib/clflags.ml[59,2551+22]..[59,2551+27])
                None
          ]
      <def>
        pattern (lib/clflags.ml[60,2606+4]..[60,2606+19])
          Ppat_var "link_everything" (lib/clflags.ml[60,2606+4]..[60,2606+19])
        expression (lib/clflags.ml[60,2606+22]..[60,2606+31])
          Pexp_apply
          expression (lib/clflags.ml[60,2606+22]..[60,2606+25])
            Pexp_ident "ref" (lib/clflags.ml[60,2606+22]..[60,2606+25])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[60,2606+26]..[60,2606+31])
                Pexp_construct "false" (lib/clflags.ml[60,2606+26]..[60,2606+31])
                None
          ]
      <def>
        pattern (lib/clflags.ml[61,2661+4]..[61,2661+18])
          Ppat_var "custom_runtime" (lib/clflags.ml[61,2661+4]..[61,2661+18])
        expression (lib/clflags.ml[61,2661+21]..[61,2661+30])
          Pexp_apply
          expression (lib/clflags.ml[61,2661+21]..[61,2661+24])
            Pexp_ident "ref" (lib/clflags.ml[61,2661+21]..[61,2661+24])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[61,2661+25]..[61,2661+30])
                Pexp_construct "false" (lib/clflags.ml[61,2661+25]..[61,2661+30])
                None
          ]
      <def>
        pattern (lib/clflags.ml[62,2715+4]..[62,2715+18])
          Ppat_var "no_check_prims" (lib/clflags.ml[62,2715+4]..[62,2715+18])
        expression (lib/clflags.ml[62,2715+21]..[62,2715+30])
          Pexp_apply
          expression (lib/clflags.ml[62,2715+21]..[62,2715+24])
            Pexp_ident "ref" (lib/clflags.ml[62,2715+21]..[62,2715+24])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[62,2715+25]..[62,2715+30])
                Pexp_construct "false" (lib/clflags.ml[62,2715+25]..[62,2715+30])
                None
          ]
      <def>
        pattern (lib/clflags.ml[63,2777+4]..[63,2777+26])
          Ppat_var "bytecode_compatible_32" (lib/clflags.ml[63,2777+4]..[63,2777+26])
        expression (lib/clflags.ml[63,2777+29]..[63,2777+38])
          Pexp_apply
          expression (lib/clflags.ml[63,2777+29]..[63,2777+32])
            Pexp_ident "ref" (lib/clflags.ml[63,2777+29]..[63,2777+32])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[63,2777+33]..[63,2777+38])
                Pexp_construct "false" (lib/clflags.ml[63,2777+33]..[63,2777+38])
                None
          ]
      <def>
        pattern (lib/clflags.ml[64,2834+4]..[64,2834+19])
          Ppat_var "output_c_object" (lib/clflags.ml[64,2834+4]..[64,2834+19])
        expression (lib/clflags.ml[64,2834+22]..[64,2834+31])
          Pexp_apply
          expression (lib/clflags.ml[64,2834+22]..[64,2834+25])
            Pexp_ident "ref" (lib/clflags.ml[64,2834+22]..[64,2834+25])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[64,2834+26]..[64,2834+31])
                Pexp_construct "false" (lib/clflags.ml[64,2834+26]..[64,2834+31])
                None
          ]
      <def>
        pattern (lib/clflags.ml[65,2892+4]..[65,2892+26])
          Ppat_var "output_complete_object" (lib/clflags.ml[65,2892+4]..[65,2892+26])
        expression (lib/clflags.ml[65,2892+29]..[65,2892+38])
          Pexp_apply
          expression (lib/clflags.ml[65,2892+29]..[65,2892+32])
            Pexp_ident "ref" (lib/clflags.ml[65,2892+29]..[65,2892+32])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[65,2892+33]..[65,2892+38])
                Pexp_construct "false" (lib/clflags.ml[65,2892+33]..[65,2892+38])
                None
          ]
      <def>
        pattern (lib/clflags.ml[66,2959+4]..[66,2959+30])
          Ppat_var "output_complete_executable" (lib/clflags.ml[66,2959+4]..[66,2959+30])
        expression (lib/clflags.ml[66,2959+33]..[66,2959+42])
          Pexp_apply
          expression (lib/clflags.ml[66,2959+33]..[66,2959+36])
            Pexp_ident "ref" (lib/clflags.ml[66,2959+33]..[66,2959+36])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[66,2959+37]..[66,2959+42])
                Pexp_construct "false" (lib/clflags.ml[66,2959+37]..[66,2959+42])
                None
          ]
      <def>
        pattern (lib/clflags.ml[67,3030+4]..[67,3030+14])
          Ppat_var "all_ccopts" (lib/clflags.ml[67,3030+4]..[67,3030+14])
        expression (lib/clflags.ml[67,3030+17]..[67,3030+39])
          Pexp_apply
          expression (lib/clflags.ml[67,3030+17]..[67,3030+20])
            Pexp_ident "ref" (lib/clflags.ml[67,3030+17]..[67,3030+20])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[67,3030+21]..[67,3030+39])
                Pexp_constraint
                expression (lib/clflags.ml[67,3030+22]..[67,3030+24])
                  Pexp_construct "[]" (lib/clflags.ml[67,3030+22]..[67,3030+24])
                  None
                core_type (lib/clflags.ml[67,3030+27]..[67,3030+38])
                  Ptyp_constr "list" (lib/clflags.ml[67,3030+34]..[67,3030+38])
                  [
                    core_type (lib/clflags.ml[67,3030+27]..[67,3030+33])
                      Ptyp_constr "string" (lib/clflags.ml[67,3030+27]..[67,3030+33])
                      []
                  ]
          ]
      <def>
        pattern (lib/clflags.ml[68,3087+4]..[68,3087+11])
          Ppat_var "classic" (lib/clflags.ml[68,3087+4]..[68,3087+11])
        expression (lib/clflags.ml[68,3087+14]..[68,3087+23])
          Pexp_apply
          expression (lib/clflags.ml[68,3087+14]..[68,3087+17])
            Pexp_ident "ref" (lib/clflags.ml[68,3087+14]..[68,3087+17])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[68,3087+18]..[68,3087+23])
                Pexp_construct "false" (lib/clflags.ml[68,3087+18]..[68,3087+23])
                None
          ]
      <def>
        pattern (lib/clflags.ml[69,3143+4]..[69,3143+16])
          Ppat_var "nopervasives" (lib/clflags.ml[69,3143+4]..[69,3143+16])
        expression (lib/clflags.ml[69,3143+19]..[69,3143+28])
          Pexp_apply
          expression (lib/clflags.ml[69,3143+19]..[69,3143+22])
            Pexp_ident "ref" (lib/clflags.ml[69,3143+19]..[69,3143+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[69,3143+23]..[69,3143+28])
                Pexp_construct "false" (lib/clflags.ml[69,3143+23]..[69,3143+28])
                None
          ]
      <def>
        pattern (lib/clflags.ml[70,3203+4]..[70,3203+22])
          Ppat_var "match_context_rows" (lib/clflags.ml[70,3203+4]..[70,3203+22])
        expression (lib/clflags.ml[70,3203+25]..[70,3203+31])
          Pexp_apply
          expression (lib/clflags.ml[70,3203+25]..[70,3203+28])
            Pexp_ident "ref" (lib/clflags.ml[70,3203+25]..[70,3203+28])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[70,3203+29]..[70,3203+31])
                Pexp_constant PConst_int (32,None)
          ]
      <def>
        pattern (lib/clflags.ml[71,3269+4]..[71,3269+18])
          Ppat_var "safer_matching" (lib/clflags.ml[71,3269+4]..[71,3269+18])
        expression (lib/clflags.ml[71,3269+21]..[71,3269+30])
          Pexp_apply
          expression (lib/clflags.ml[71,3269+21]..[71,3269+24])
            Pexp_ident "ref" (lib/clflags.ml[71,3269+21]..[71,3269+24])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[71,3269+25]..[71,3269+30])
                Pexp_construct "false" (lib/clflags.ml[71,3269+25]..[71,3269+30])
                None
          ]
      <def>
        pattern (lib/clflags.ml[72,3331+4]..[72,3331+16])
          Ppat_var "preprocessor" (lib/clflags.ml[72,3331+4]..[72,3331+16])
        expression (lib/clflags.ml[72,3331+19]..[72,3331+44])
          Pexp_apply
          expression (lib/clflags.ml[72,3331+19]..[72,3331+22])
            Pexp_ident "ref" (lib/clflags.ml[72,3331+19]..[72,3331+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[72,3331+22]..[72,3331+44])
                Pexp_constraint
                expression (lib/clflags.ml[72,3331+23]..[72,3331+27])
                  Pexp_construct "None" (lib/clflags.ml[72,3331+23]..[72,3331+27])
                  None
                core_type (lib/clflags.ml[72,3331+30]..[72,3331+43])
                  Ptyp_constr "option" (lib/clflags.ml[72,3331+37]..[72,3331+43])
                  [
                    core_type (lib/clflags.ml[72,3331+30]..[72,3331+36])
                      Ptyp_constr "string" (lib/clflags.ml[72,3331+30]..[72,3331+36])
                      []
                  ]
          ]
      <def>
        pattern (lib/clflags.ml[73,3386+4]..[73,3386+11])
          Ppat_var "all_ppx" (lib/clflags.ml[73,3386+4]..[73,3386+11])
        expression (lib/clflags.ml[73,3386+14]..[73,3386+36])
          Pexp_apply
          expression (lib/clflags.ml[73,3386+14]..[73,3386+17])
            Pexp_ident "ref" (lib/clflags.ml[73,3386+14]..[73,3386+17])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[73,3386+18]..[73,3386+36])
                Pexp_constraint
                expression (lib/clflags.ml[73,3386+19]..[73,3386+21])
                  Pexp_construct "[]" (lib/clflags.ml[73,3386+19]..[73,3386+21])
                  None
                core_type (lib/clflags.ml[73,3386+24]..[73,3386+35])
                  Ptyp_constr "list" (lib/clflags.ml[73,3386+31]..[73,3386+35])
                  [
                    core_type (lib/clflags.ml[73,3386+24]..[73,3386+30])
                      Ptyp_constr "string" (lib/clflags.ml[73,3386+24]..[73,3386+30])
                      []
                  ]
          ]
    ]
  structure_item (lib/clflags.ml[74,3441+0]..[74,3441+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[74,3441+4]..[74,3441+11])
          Ppat_var "absname" (lib/clflags.ml[74,3441+4]..[74,3441+11])
        expression (lib/clflags.ml[74,3441+14]..[74,3441+23])
          Pexp_apply
          expression (lib/clflags.ml[74,3441+14]..[74,3441+17])
            Pexp_ident "ref" (lib/clflags.ml[74,3441+14]..[74,3441+17])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[74,3441+18]..[74,3441+23])
                Pexp_construct "false" (lib/clflags.ml[74,3441+18]..[74,3441+23])
                None
          ]
    ]
  structure_item (lib/clflags.ml[75,3496+0]..[75,3496+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[75,3496+4]..[75,3496+15])
          Ppat_var "annotations" (lib/clflags.ml[75,3496+4]..[75,3496+15])
        expression (lib/clflags.ml[75,3496+18]..[75,3496+27])
          Pexp_apply
          expression (lib/clflags.ml[75,3496+18]..[75,3496+21])
            Pexp_ident "ref" (lib/clflags.ml[75,3496+18]..[75,3496+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[75,3496+22]..[75,3496+27])
                Pexp_construct "false" (lib/clflags.ml[75,3496+22]..[75,3496+27])
                None
          ]
    ]
  structure_item (lib/clflags.ml[76,3549+0]..[103,5118+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[76,3549+4]..[76,3549+22])
          Ppat_var "binary_annotations" (lib/clflags.ml[76,3549+4]..[76,3549+22])
        expression (lib/clflags.ml[76,3549+25]..[76,3549+34])
          Pexp_apply
          expression (lib/clflags.ml[76,3549+25]..[76,3549+28])
            Pexp_ident "ref" (lib/clflags.ml[76,3549+25]..[76,3549+28])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[76,3549+29]..[76,3549+34])
                Pexp_construct "false" (lib/clflags.ml[76,3549+29]..[76,3549+34])
                None
          ]
      <def>
        pattern (lib/clflags.ml[77,3606+4]..[77,3606+15])
          Ppat_var "use_threads" (lib/clflags.ml[77,3606+4]..[77,3606+15])
        expression (lib/clflags.ml[77,3606+18]..[77,3606+27])
          Pexp_apply
          expression (lib/clflags.ml[77,3606+18]..[77,3606+21])
            Pexp_ident "ref" (lib/clflags.ml[77,3606+18]..[77,3606+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[77,3606+22]..[77,3606+27])
                Pexp_construct "false" (lib/clflags.ml[77,3606+22]..[77,3606+27])
                None
          ]
      <def>
        pattern (lib/clflags.ml[78,3660+4]..[78,3660+12])
          Ppat_var "noassert" (lib/clflags.ml[78,3660+4]..[78,3660+12])
        expression (lib/clflags.ml[78,3660+15]..[78,3660+24])
          Pexp_apply
          expression (lib/clflags.ml[78,3660+15]..[78,3660+18])
            Pexp_ident "ref" (lib/clflags.ml[78,3660+15]..[78,3660+18])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[78,3660+19]..[78,3660+24])
                Pexp_construct "false" (lib/clflags.ml[78,3660+19]..[78,3660+24])
                None
          ]
      <def>
        pattern (lib/clflags.ml[79,3716+4]..[79,3716+11])
          Ppat_var "verbose" (lib/clflags.ml[79,3716+4]..[79,3716+11])
        expression (lib/clflags.ml[79,3716+14]..[79,3716+23])
          Pexp_apply
          expression (lib/clflags.ml[79,3716+14]..[79,3716+17])
            Pexp_ident "ref" (lib/clflags.ml[79,3716+14]..[79,3716+17])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[79,3716+18]..[79,3716+23])
                Pexp_construct "false" (lib/clflags.ml[79,3716+18]..[79,3716+23])
                None
          ]
      <def>
        pattern (lib/clflags.ml[80,3771+4]..[80,3771+13])
          Ppat_var "noversion" (lib/clflags.ml[80,3771+4]..[80,3771+13])
        expression (lib/clflags.ml[80,3771+16]..[80,3771+25])
          Pexp_apply
          expression (lib/clflags.ml[80,3771+16]..[80,3771+19])
            Pexp_ident "ref" (lib/clflags.ml[80,3771+16]..[80,3771+19])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[80,3771+20]..[80,3771+25])
                Pexp_construct "false" (lib/clflags.ml[80,3771+20]..[80,3771+25])
                None
          ]
      <def>
        pattern (lib/clflags.ml[81,3829+4]..[81,3829+12])
          Ppat_var "noprompt" (lib/clflags.ml[81,3829+4]..[81,3829+12])
        expression (lib/clflags.ml[81,3829+15]..[81,3829+24])
          Pexp_apply
          expression (lib/clflags.ml[81,3829+15]..[81,3829+18])
            Pexp_ident "ref" (lib/clflags.ml[81,3829+15]..[81,3829+18])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[81,3829+19]..[81,3829+24])
                Pexp_construct "false" (lib/clflags.ml[81,3829+19]..[81,3829+24])
                None
          ]
      <def>
        pattern (lib/clflags.ml[82,3885+4]..[82,3885+16])
          Ppat_var "nopromptcont" (lib/clflags.ml[82,3885+4]..[82,3885+16])
        expression (lib/clflags.ml[82,3885+19]..[82,3885+28])
          Pexp_apply
          expression (lib/clflags.ml[82,3885+19]..[82,3885+22])
            Pexp_ident "ref" (lib/clflags.ml[82,3885+19]..[82,3885+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[82,3885+23]..[82,3885+28])
                Pexp_construct "false" (lib/clflags.ml[82,3885+23]..[82,3885+28])
                None
          ]
      <def>
        pattern (lib/clflags.ml[83,3945+4]..[83,3945+13])
          Ppat_var "init_file" (lib/clflags.ml[83,3945+4]..[83,3945+13])
        expression (lib/clflags.ml[83,3945+16]..[83,3945+42])
          Pexp_apply
          expression (lib/clflags.ml[83,3945+16]..[83,3945+19])
            Pexp_ident "ref" (lib/clflags.ml[83,3945+16]..[83,3945+19])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[83,3945+20]..[83,3945+42])
                Pexp_constraint
                expression (lib/clflags.ml[83,3945+21]..[83,3945+25])
                  Pexp_construct "None" (lib/clflags.ml[83,3945+21]..[83,3945+25])
                  None
                core_type (lib/clflags.ml[83,3945+28]..[83,3945+41])
                  Ptyp_constr "option" (lib/clflags.ml[83,3945+35]..[83,3945+41])
                  [
                    core_type (lib/clflags.ml[83,3945+28]..[83,3945+34])
                      Ptyp_constr "string" (lib/clflags.ml[83,3945+28]..[83,3945+34])
                      []
                  ]
          ]
      <def>
        pattern (lib/clflags.ml[84,4002+4]..[84,4002+10])
          Ppat_var "noinit" (lib/clflags.ml[84,4002+4]..[84,4002+10])
        expression (lib/clflags.ml[84,4002+13]..[84,4002+22])
          Pexp_apply
          expression (lib/clflags.ml[84,4002+13]..[84,4002+16])
            Pexp_ident "ref" (lib/clflags.ml[84,4002+13]..[84,4002+16])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[84,4002+17]..[84,4002+22])
                Pexp_construct "false" (lib/clflags.ml[84,4002+17]..[84,4002+22])
                None
          ]
      <def>
        pattern (lib/clflags.ml[86,4116+4]..[86,4116+13])
          Ppat_var "use_prims" (lib/clflags.ml[86,4116+4]..[86,4116+13])
        expression (lib/clflags.ml[86,4116+16]..[86,4116+22])
          Pexp_apply
          expression (lib/clflags.ml[86,4116+16]..[86,4116+19])
            Pexp_ident "ref" (lib/clflags.ml[86,4116+16]..[86,4116+19])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[86,4116+20]..[86,4116+22])
                Pexp_constant PConst_string("",(lib/clflags.ml[86,4116+21]..[86,4116+21]),None)
          ]
      <def>
        pattern (lib/clflags.ml[87,4177+4]..[87,4177+15])
          Ppat_var "use_runtime" (lib/clflags.ml[87,4177+4]..[87,4177+15])
        expression (lib/clflags.ml[87,4177+18]..[87,4177+24])
          Pexp_apply
          expression (lib/clflags.ml[87,4177+18]..[87,4177+21])
            Pexp_ident "ref" (lib/clflags.ml[87,4177+18]..[87,4177+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[87,4177+22]..[87,4177+24])
                Pexp_constant PConst_string("",(lib/clflags.ml[87,4177+23]..[87,4177+23]),None)
          ]
      <def>
        pattern (lib/clflags.ml[88,4240+4]..[88,4240+10])
          Ppat_var "plugin" (lib/clflags.ml[88,4240+4]..[88,4240+10])
        expression (lib/clflags.ml[88,4240+13]..[88,4240+22])
          Pexp_apply
          expression (lib/clflags.ml[88,4240+13]..[88,4240+16])
            Pexp_ident "ref" (lib/clflags.ml[88,4240+13]..[88,4240+16])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[88,4240+17]..[88,4240+22])
                Pexp_construct "false" (lib/clflags.ml[88,4240+17]..[88,4240+22])
                None
          ]
      <def>
        pattern (lib/clflags.ml[89,4298+4]..[89,4298+13])
          Ppat_var "principal" (lib/clflags.ml[89,4298+4]..[89,4298+13])
        expression (lib/clflags.ml[89,4298+16]..[89,4298+25])
          Pexp_apply
          expression (lib/clflags.ml[89,4298+16]..[89,4298+19])
            Pexp_ident "ref" (lib/clflags.ml[89,4298+16]..[89,4298+19])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[89,4298+20]..[89,4298+25])
                Pexp_construct "false" (lib/clflags.ml[89,4298+20]..[89,4298+25])
                None
          ]
      <def>
        pattern (lib/clflags.ml[90,4355+4]..[90,4355+14])
          Ppat_var "real_paths" (lib/clflags.ml[90,4355+4]..[90,4355+14])
        expression (lib/clflags.ml[90,4355+17]..[90,4355+25])
          Pexp_apply
          expression (lib/clflags.ml[90,4355+17]..[90,4355+20])
            Pexp_ident "ref" (lib/clflags.ml[90,4355+17]..[90,4355+20])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[90,4355+21]..[90,4355+25])
                Pexp_construct "true" (lib/clflags.ml[90,4355+21]..[90,4355+25])
                None
          ]
      <def>
        pattern (lib/clflags.ml[91,4414+4]..[91,4414+19])
          Ppat_var "recursive_types" (lib/clflags.ml[91,4414+4]..[91,4414+19])
        expression (lib/clflags.ml[91,4414+22]..[91,4414+31])
          Pexp_apply
          expression (lib/clflags.ml[91,4414+22]..[91,4414+25])
            Pexp_ident "ref" (lib/clflags.ml[91,4414+22]..[91,4414+25])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[91,4414+26]..[91,4414+31])
                Pexp_construct "false" (lib/clflags.ml[91,4414+26]..[91,4414+31])
                None
          ]
      <def>
        pattern (lib/clflags.ml[92,4470+4]..[92,4470+19])
          Ppat_var "strict_sequence" (lib/clflags.ml[92,4470+4]..[92,4470+19])
        expression (lib/clflags.ml[92,4470+22]..[92,4470+31])
          Pexp_apply
          expression (lib/clflags.ml[92,4470+22]..[92,4470+25])
            Pexp_ident "ref" (lib/clflags.ml[92,4470+22]..[92,4470+25])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[92,4470+26]..[92,4470+31])
                Pexp_construct "false" (lib/clflags.ml[92,4470+26]..[92,4470+31])
                None
          ]
      <def>
        pattern (lib/clflags.ml[93,4533+4]..[93,4533+18])
          Ppat_var "strict_formats" (lib/clflags.ml[93,4533+4]..[93,4533+18])
        expression (lib/clflags.ml[93,4533+21]..[93,4533+29])
          Pexp_apply
          expression (lib/clflags.ml[93,4533+21]..[93,4533+24])
            Pexp_ident "ref" (lib/clflags.ml[93,4533+21]..[93,4533+24])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[93,4533+25]..[93,4533+29])
                Pexp_construct "true" (lib/clflags.ml[93,4533+25]..[93,4533+29])
                None
          ]
      <def>
        pattern (lib/clflags.ml[94,4595+4]..[94,4595+24])
          Ppat_var "applicative_functors" (lib/clflags.ml[94,4595+4]..[94,4595+24])
        expression (lib/clflags.ml[94,4595+27]..[94,4595+35])
          Pexp_apply
          expression (lib/clflags.ml[94,4595+27]..[94,4595+30])
            Pexp_ident "ref" (lib/clflags.ml[94,4595+27]..[94,4595+30])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[94,4595+31]..[94,4595+35])
                Pexp_construct "true" (lib/clflags.ml[94,4595+31]..[94,4595+35])
                None
          ]
      <def>
        pattern (lib/clflags.ml[95,4655+4]..[95,4655+16])
          Ppat_var "make_runtime" (lib/clflags.ml[95,4655+4]..[95,4655+16])
        expression (lib/clflags.ml[95,4655+19]..[95,4655+28])
          Pexp_apply
          expression (lib/clflags.ml[95,4655+19]..[95,4655+22])
            Pexp_ident "ref" (lib/clflags.ml[95,4655+19]..[95,4655+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[95,4655+23]..[95,4655+28])
                Pexp_construct "false" (lib/clflags.ml[95,4655+23]..[95,4655+28])
                None
          ]
      <def>
        pattern (lib/clflags.ml[96,4715+4]..[96,4715+14])
          Ppat_var "c_compiler" (lib/clflags.ml[96,4715+4]..[96,4715+14])
        expression (lib/clflags.ml[96,4715+17]..[96,4715+42])
          Pexp_apply
          expression (lib/clflags.ml[96,4715+17]..[96,4715+20])
            Pexp_ident "ref" (lib/clflags.ml[96,4715+17]..[96,4715+20])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[96,4715+21]..[96,4715+42])
                Pexp_constraint
                expression (lib/clflags.ml[96,4715+22]..[96,4715+26])
                  Pexp_construct "None" (lib/clflags.ml[96,4715+22]..[96,4715+26])
                  None
                core_type (lib/clflags.ml[96,4715+28]..[96,4715+41])
                  Ptyp_constr "option" (lib/clflags.ml[96,4715+35]..[96,4715+41])
                  [
                    core_type (lib/clflags.ml[96,4715+28]..[96,4715+34])
                      Ptyp_constr "string" (lib/clflags.ml[96,4715+28]..[96,4715+34])
                      []
                  ]
          ]
      <def>
        pattern (lib/clflags.ml[97,4768+4]..[97,4768+16])
          Ppat_var "no_auto_link" (lib/clflags.ml[97,4768+4]..[97,4768+16])
        expression (lib/clflags.ml[97,4768+19]..[97,4768+28])
          Pexp_apply
          expression (lib/clflags.ml[97,4768+19]..[97,4768+22])
            Pexp_ident "ref" (lib/clflags.ml[97,4768+19]..[97,4768+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[97,4768+23]..[97,4768+28])
                Pexp_construct "false" (lib/clflags.ml[97,4768+23]..[97,4768+28])
                None
          ]
      <def>
        pattern (lib/clflags.ml[98,4826+4]..[98,4826+12])
          Ppat_var "dllpaths" (lib/clflags.ml[98,4826+4]..[98,4826+12])
        expression (lib/clflags.ml[98,4826+15]..[98,4826+37])
          Pexp_apply
          expression (lib/clflags.ml[98,4826+15]..[98,4826+18])
            Pexp_ident "ref" (lib/clflags.ml[98,4826+15]..[98,4826+18])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[98,4826+19]..[98,4826+37])
                Pexp_constraint
                expression (lib/clflags.ml[98,4826+20]..[98,4826+22])
                  Pexp_construct "[]" (lib/clflags.ml[98,4826+20]..[98,4826+22])
                  None
                core_type (lib/clflags.ml[98,4826+25]..[98,4826+36])
                  Ptyp_constr "list" (lib/clflags.ml[98,4826+32]..[98,4826+36])
                  [
                    core_type (lib/clflags.ml[98,4826+25]..[98,4826+31])
                      Ptyp_constr "string" (lib/clflags.ml[98,4826+25]..[98,4826+31])
                      []
                  ]
          ]
      <def>
        pattern (lib/clflags.ml[99,4881+4]..[99,4881+16])
          Ppat_var "make_package" (lib/clflags.ml[99,4881+4]..[99,4881+16])
        expression (lib/clflags.ml[99,4881+19]..[99,4881+28])
          Pexp_apply
          expression (lib/clflags.ml[99,4881+19]..[99,4881+22])
            Pexp_ident "ref" (lib/clflags.ml[99,4881+19]..[99,4881+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[99,4881+23]..[99,4881+28])
                Pexp_construct "false" (lib/clflags.ml[99,4881+23]..[99,4881+28])
                None
          ]
      <def>
        pattern (lib/clflags.ml[100,4933+4]..[100,4933+15])
          Ppat_var "for_package" (lib/clflags.ml[100,4933+4]..[100,4933+15])
        expression (lib/clflags.ml[100,4933+18]..[100,4933+43])
          Pexp_apply
          expression (lib/clflags.ml[100,4933+18]..[100,4933+21])
            Pexp_ident "ref" (lib/clflags.ml[100,4933+18]..[100,4933+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[100,4933+22]..[100,4933+43])
                Pexp_constraint
                expression (lib/clflags.ml[100,4933+23]..[100,4933+27])
                  Pexp_construct "None" (lib/clflags.ml[100,4933+23]..[100,4933+27])
                  None
                core_type (lib/clflags.ml[100,4933+29]..[100,4933+42])
                  Ptyp_constr "option" (lib/clflags.ml[100,4933+36]..[100,4933+42])
                  [
                    core_type (lib/clflags.ml[100,4933+29]..[100,4933+35])
                      Ptyp_constr "string" (lib/clflags.ml[100,4933+29]..[100,4933+35])
                      []
                  ]
          ]
      <def>
        pattern (lib/clflags.ml[101,4993+4]..[101,4993+14])
          Ppat_var "error_size" (lib/clflags.ml[101,4993+4]..[101,4993+14])
        expression (lib/clflags.ml[101,4993+17]..[101,4993+24])
          Pexp_apply
          expression (lib/clflags.ml[101,4993+17]..[101,4993+20])
            Pexp_ident "ref" (lib/clflags.ml[101,4993+17]..[101,4993+20])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[101,4993+21]..[101,4993+24])
                Pexp_constant PConst_int (500,None)
          ]
      <def>
        pattern (lib/clflags.ml[102,5051+4]..[102,5051+20])
          Ppat_var "float_const_prop" (lib/clflags.ml[102,5051+4]..[102,5051+20])
        expression (lib/clflags.ml[102,5051+23]..[102,5051+31])
          Pexp_apply
          expression (lib/clflags.ml[102,5051+23]..[102,5051+26])
            Pexp_ident "ref" (lib/clflags.ml[102,5051+23]..[102,5051+26])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[102,5051+27]..[102,5051+31])
                Pexp_construct "true" (lib/clflags.ml[102,5051+27]..[102,5051+31])
                None
          ]
      <def>
        pattern (lib/clflags.ml[103,5118+4]..[103,5118+23])
          Ppat_var "transparent_modules" (lib/clflags.ml[103,5118+4]..[103,5118+23])
        expression (lib/clflags.ml[103,5118+26]..[103,5118+35])
          Pexp_apply
          expression (lib/clflags.ml[103,5118+26]..[103,5118+29])
            Pexp_ident "ref" (lib/clflags.ml[103,5118+26]..[103,5118+29])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[103,5118+30]..[103,5118+35])
                Pexp_construct "false" (lib/clflags.ml[103,5118+30]..[103,5118+35])
                None
          ]
    ]
  structure_item (lib/clflags.ml[104,5175+0]..[104,5175+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[104,5175+4]..[104,5175+14])
          Ppat_var "unique_ids" (lib/clflags.ml[104,5175+4]..[104,5175+14])
        expression (lib/clflags.ml[104,5175+17]..[104,5175+25])
          Pexp_apply
          expression (lib/clflags.ml[104,5175+17]..[104,5175+20])
            Pexp_ident "ref" (lib/clflags.ml[104,5175+17]..[104,5175+20])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[104,5175+21]..[104,5175+25])
                Pexp_construct "true" (lib/clflags.ml[104,5175+21]..[104,5175+25])
                None
          ]
    ]
  structure_item (lib/clflags.ml[105,5238+0]..[105,5238+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[105,5238+4]..[105,5238+13])
          Ppat_var "locations" (lib/clflags.ml[105,5238+4]..[105,5238+13])
        expression (lib/clflags.ml[105,5238+16]..[105,5238+24])
          Pexp_apply
          expression (lib/clflags.ml[105,5238+16]..[105,5238+19])
            Pexp_ident "ref" (lib/clflags.ml[105,5238+16]..[105,5238+19])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[105,5238+20]..[105,5238+24])
                Pexp_construct "true" (lib/clflags.ml[105,5238+20]..[105,5238+24])
                None
          ]
    ]
  structure_item (lib/clflags.ml[106,5301+0]..[106,5301+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[106,5301+4]..[106,5301+15])
          Ppat_var "dump_source" (lib/clflags.ml[106,5301+4]..[106,5301+15])
        expression (lib/clflags.ml[106,5301+18]..[106,5301+27])
          Pexp_apply
          expression (lib/clflags.ml[106,5301+18]..[106,5301+21])
            Pexp_ident "ref" (lib/clflags.ml[106,5301+18]..[106,5301+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[106,5301+22]..[106,5301+27])
                Pexp_construct "false" (lib/clflags.ml[106,5301+22]..[106,5301+27])
                None
          ]
    ]
  structure_item (lib/clflags.ml[107,5356+0]..[119,6061+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[107,5356+4]..[107,5356+18])
          Ppat_var "dump_parsetree" (lib/clflags.ml[107,5356+4]..[107,5356+18])
        expression (lib/clflags.ml[107,5356+21]..[107,5356+30])
          Pexp_apply
          expression (lib/clflags.ml[107,5356+21]..[107,5356+24])
            Pexp_ident "ref" (lib/clflags.ml[107,5356+21]..[107,5356+24])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[107,5356+25]..[107,5356+30])
                Pexp_construct "false" (lib/clflags.ml[107,5356+25]..[107,5356+30])
                None
          ]
      <def>
        pattern (lib/clflags.ml[108,5414+4]..[108,5414+18])
          Ppat_var "dump_typedtree" (lib/clflags.ml[108,5414+4]..[108,5414+18])
        expression (lib/clflags.ml[108,5414+21]..[108,5414+30])
          Pexp_apply
          expression (lib/clflags.ml[108,5414+21]..[108,5414+24])
            Pexp_ident "ref" (lib/clflags.ml[108,5414+21]..[108,5414+24])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[108,5414+25]..[108,5414+30])
                Pexp_construct "false" (lib/clflags.ml[108,5414+25]..[108,5414+30])
                None
          ]
      <def>
        pattern (lib/clflags.ml[109,5472+4]..[109,5472+14])
          Ppat_var "dump_shape" (lib/clflags.ml[109,5472+4]..[109,5472+14])
        expression (lib/clflags.ml[109,5472+17]..[109,5472+26])
          Pexp_apply
          expression (lib/clflags.ml[109,5472+17]..[109,5472+20])
            Pexp_ident "ref" (lib/clflags.ml[109,5472+17]..[109,5472+20])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[109,5472+21]..[109,5472+26])
                Pexp_construct "false" (lib/clflags.ml[109,5472+21]..[109,5472+26])
                None
          ]
      <def>
        pattern (lib/clflags.ml[110,5526+4]..[110,5526+18])
          Ppat_var "dump_rawlambda" (lib/clflags.ml[110,5526+4]..[110,5526+18])
        expression (lib/clflags.ml[110,5526+21]..[110,5526+30])
          Pexp_apply
          expression (lib/clflags.ml[110,5526+21]..[110,5526+24])
            Pexp_ident "ref" (lib/clflags.ml[110,5526+21]..[110,5526+24])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[110,5526+25]..[110,5526+30])
                Pexp_construct "false" (lib/clflags.ml[110,5526+25]..[110,5526+30])
                None
          ]
      <def>
        pattern (lib/clflags.ml[111,5584+4]..[111,5584+15])
          Ppat_var "dump_lambda" (lib/clflags.ml[111,5584+4]..[111,5584+15])
        expression (lib/clflags.ml[111,5584+18]..[111,5584+27])
          Pexp_apply
          expression (lib/clflags.ml[111,5584+18]..[111,5584+21])
            Pexp_ident "ref" (lib/clflags.ml[111,5584+18]..[111,5584+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[111,5584+22]..[111,5584+27])
                Pexp_construct "false" (lib/clflags.ml[111,5584+22]..[111,5584+27])
                None
          ]
      <def>
        pattern (lib/clflags.ml[112,5639+4]..[112,5639+19])
          Ppat_var "dump_rawclambda" (lib/clflags.ml[112,5639+4]..[112,5639+19])
        expression (lib/clflags.ml[112,5639+22]..[112,5639+31])
          Pexp_apply
          expression (lib/clflags.ml[112,5639+22]..[112,5639+25])
            Pexp_ident "ref" (lib/clflags.ml[112,5639+22]..[112,5639+25])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[112,5639+26]..[112,5639+31])
                Pexp_construct "false" (lib/clflags.ml[112,5639+26]..[112,5639+31])
                None
          ]
      <def>
        pattern (lib/clflags.ml[113,5698+4]..[113,5698+16])
          Ppat_var "dump_clambda" (lib/clflags.ml[113,5698+4]..[113,5698+16])
        expression (lib/clflags.ml[113,5698+19]..[113,5698+28])
          Pexp_apply
          expression (lib/clflags.ml[113,5698+19]..[113,5698+22])
            Pexp_ident "ref" (lib/clflags.ml[113,5698+19]..[113,5698+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[113,5698+23]..[113,5698+28])
                Pexp_construct "false" (lib/clflags.ml[113,5698+23]..[113,5698+28])
                None
          ]
      <def>
        pattern (lib/clflags.ml[114,5754+4]..[114,5754+19])
          Ppat_var "dump_rawflambda" (lib/clflags.ml[114,5754+4]..[114,5754+19])
        expression (lib/clflags.ml[114,5754+22]..[114,5754+31])
          Pexp_apply
          expression (lib/clflags.ml[114,5754+22]..[114,5754+25])
            Pexp_ident "ref" (lib/clflags.ml[114,5754+22]..[114,5754+25])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[114,5754+26]..[114,5754+31])
                Pexp_construct "false" (lib/clflags.ml[114,5754+26]..[114,5754+31])
                None
          ]
      <def>
        pattern (lib/clflags.ml[115,5816+4]..[115,5816+16])
          Ppat_var "dump_flambda" (lib/clflags.ml[115,5816+4]..[115,5816+16])
        expression (lib/clflags.ml[115,5816+19]..[115,5816+28])
          Pexp_apply
          expression (lib/clflags.ml[115,5816+19]..[115,5816+22])
            Pexp_ident "ref" (lib/clflags.ml[115,5816+19]..[115,5816+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[115,5816+23]..[115,5816+28])
                Pexp_construct "false" (lib/clflags.ml[115,5816+23]..[115,5816+28])
                None
          ]
      <def>
        pattern (lib/clflags.ml[116,5872+4]..[116,5872+20])
          Ppat_var "dump_flambda_let" (lib/clflags.ml[116,5872+4]..[116,5872+20])
        expression (lib/clflags.ml[116,5872+23]..[116,5872+46])
          Pexp_apply
          expression (lib/clflags.ml[116,5872+23]..[116,5872+26])
            Pexp_ident "ref" (lib/clflags.ml[116,5872+23]..[116,5872+26])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[116,5872+27]..[116,5872+46])
                Pexp_constraint
                expression (lib/clflags.ml[116,5872+28]..[116,5872+32])
                  Pexp_construct "None" (lib/clflags.ml[116,5872+28]..[116,5872+32])
                  None
                core_type (lib/clflags.ml[116,5872+35]..[116,5872+45])
                  Ptyp_constr "option" (lib/clflags.ml[116,5872+39]..[116,5872+45])
                  [
                    core_type (lib/clflags.ml[116,5872+35]..[116,5872+38])
                      Ptyp_constr "int" (lib/clflags.ml[116,5872+35]..[116,5872+38])
                      []
                  ]
          ]
      <def>
        pattern (lib/clflags.ml[117,5943+4]..[117,5943+24])
          Ppat_var "dump_flambda_verbose" (lib/clflags.ml[117,5943+4]..[117,5943+24])
        expression (lib/clflags.ml[117,5943+27]..[117,5943+36])
          Pexp_apply
          expression (lib/clflags.ml[117,5943+27]..[117,5943+30])
            Pexp_ident "ref" (lib/clflags.ml[117,5943+27]..[117,5943+30])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[117,5943+31]..[117,5943+36])
                Pexp_construct "false" (lib/clflags.ml[117,5943+31]..[117,5943+36])
                None
          ]
      <def>
        pattern (lib/clflags.ml[118,6007+4]..[118,6007+14])
          Ppat_var "dump_instr" (lib/clflags.ml[118,6007+4]..[118,6007+14])
        expression (lib/clflags.ml[118,6007+17]..[118,6007+26])
          Pexp_apply
          expression (lib/clflags.ml[118,6007+17]..[118,6007+20])
            Pexp_ident "ref" (lib/clflags.ml[118,6007+17]..[118,6007+20])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[118,6007+21]..[118,6007+26])
                Pexp_construct "false" (lib/clflags.ml[118,6007+21]..[118,6007+26])
                None
          ]
      <def>
        pattern (lib/clflags.ml[119,6061+4]..[119,6061+23])
          Ppat_var "keep_camlprimc_file" (lib/clflags.ml[119,6061+4]..[119,6061+23])
        expression (lib/clflags.ml[119,6061+26]..[119,6061+35])
          Pexp_apply
          expression (lib/clflags.ml[119,6061+26]..[119,6061+29])
            Pexp_ident "ref" (lib/clflags.ml[119,6061+26]..[119,6061+29])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[119,6061+30]..[119,6061+35])
                Pexp_construct "false" (lib/clflags.ml[119,6061+30]..[119,6061+35])
                None
          ]
    ]
  structure_item (lib/clflags.ml[121,6120+0]..[121,6120+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[121,6120+4]..[121,6120+17])
          Ppat_var "keep_asm_file" (lib/clflags.ml[121,6120+4]..[121,6120+17])
        expression (lib/clflags.ml[121,6120+20]..[121,6120+29])
          Pexp_apply
          expression (lib/clflags.ml[121,6120+20]..[121,6120+23])
            Pexp_ident "ref" (lib/clflags.ml[121,6120+20]..[121,6120+23])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[121,6120+24]..[121,6120+29])
                Pexp_construct "false" (lib/clflags.ml[121,6120+24]..[121,6120+29])
                None
          ]
    ]
  structure_item (lib/clflags.ml[122,6169+0]..[125,6279+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[122,6169+4]..[122,6169+22])
          Ppat_var "optimize_for_speed" (lib/clflags.ml[122,6169+4]..[122,6169+22])
        expression (lib/clflags.ml[122,6169+25]..[122,6169+33])
          Pexp_apply
          expression (lib/clflags.ml[122,6169+25]..[122,6169+28])
            Pexp_ident "ref" (lib/clflags.ml[122,6169+25]..[122,6169+28])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[122,6169+29]..[122,6169+33])
                Pexp_construct "true" (lib/clflags.ml[122,6169+29]..[122,6169+33])
                None
          ]
      <def>
        pattern (lib/clflags.ml[123,6224+4]..[123,6224+10])
          Ppat_var "opaque" (lib/clflags.ml[123,6224+4]..[123,6224+10])
        expression (lib/clflags.ml[123,6224+13]..[123,6224+22])
          Pexp_apply
          expression (lib/clflags.ml[123,6224+13]..[123,6224+16])
            Pexp_ident "ref" (lib/clflags.ml[123,6224+13]..[123,6224+16])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[123,6224+17]..[123,6224+22])
                Pexp_construct "false" (lib/clflags.ml[123,6224+17]..[123,6224+22])
                None
          ]
      <def>
        pattern (lib/clflags.ml[125,6279+4]..[125,6279+12])
          Ppat_var "dump_cmm" (lib/clflags.ml[125,6279+4]..[125,6279+12])
        expression (lib/clflags.ml[125,6279+15]..[125,6279+24])
          Pexp_apply
          expression (lib/clflags.ml[125,6279+15]..[125,6279+18])
            Pexp_ident "ref" (lib/clflags.ml[125,6279+15]..[125,6279+18])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[125,6279+19]..[125,6279+24])
                Pexp_construct "false" (lib/clflags.ml[125,6279+19]..[125,6279+24])
                None
          ]
    ]
  structure_item (lib/clflags.ml[126,6331+0]..[126,6331+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[126,6331+4]..[126,6331+18])
          Ppat_var "dump_selection" (lib/clflags.ml[126,6331+4]..[126,6331+18])
        expression (lib/clflags.ml[126,6331+21]..[126,6331+30])
          Pexp_apply
          expression (lib/clflags.ml[126,6331+21]..[126,6331+24])
            Pexp_ident "ref" (lib/clflags.ml[126,6331+21]..[126,6331+24])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[126,6331+25]..[126,6331+30])
                Pexp_construct "false" (lib/clflags.ml[126,6331+25]..[126,6331+30])
                None
          ]
    ]
  structure_item (lib/clflags.ml[127,6383+0]..[127,6383+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[127,6383+4]..[127,6383+12])
          Ppat_var "dump_cse" (lib/clflags.ml[127,6383+4]..[127,6383+12])
        expression (lib/clflags.ml[127,6383+15]..[127,6383+24])
          Pexp_apply
          expression (lib/clflags.ml[127,6383+15]..[127,6383+18])
            Pexp_ident "ref" (lib/clflags.ml[127,6383+15]..[127,6383+18])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[127,6383+19]..[127,6383+24])
                Pexp_construct "false" (lib/clflags.ml[127,6383+19]..[127,6383+24])
                None
          ]
    ]
  structure_item (lib/clflags.ml[128,6435+0]..[128,6435+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[128,6435+4]..[128,6435+13])
          Ppat_var "dump_live" (lib/clflags.ml[128,6435+4]..[128,6435+13])
        expression (lib/clflags.ml[128,6435+16]..[128,6435+25])
          Pexp_apply
          expression (lib/clflags.ml[128,6435+16]..[128,6435+19])
            Pexp_ident "ref" (lib/clflags.ml[128,6435+16]..[128,6435+19])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[128,6435+20]..[128,6435+25])
                Pexp_construct "false" (lib/clflags.ml[128,6435+20]..[128,6435+25])
                None
          ]
    ]
  structure_item (lib/clflags.ml[129,6488+0]..[129,6488+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[129,6488+4]..[129,6488+14])
          Ppat_var "dump_spill" (lib/clflags.ml[129,6488+4]..[129,6488+14])
        expression (lib/clflags.ml[129,6488+17]..[129,6488+26])
          Pexp_apply
          expression (lib/clflags.ml[129,6488+17]..[129,6488+20])
            Pexp_ident "ref" (lib/clflags.ml[129,6488+17]..[129,6488+20])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[129,6488+21]..[129,6488+26])
                Pexp_construct "false" (lib/clflags.ml[129,6488+21]..[129,6488+26])
                None
          ]
    ]
  structure_item (lib/clflags.ml[130,6542+0]..[130,6542+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[130,6542+4]..[130,6542+14])
          Ppat_var "dump_split" (lib/clflags.ml[130,6542+4]..[130,6542+14])
        expression (lib/clflags.ml[130,6542+17]..[130,6542+26])
          Pexp_apply
          expression (lib/clflags.ml[130,6542+17]..[130,6542+20])
            Pexp_ident "ref" (lib/clflags.ml[130,6542+17]..[130,6542+20])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[130,6542+21]..[130,6542+26])
                Pexp_construct "false" (lib/clflags.ml[130,6542+21]..[130,6542+26])
                None
          ]
    ]
  structure_item (lib/clflags.ml[131,6596+0]..[131,6596+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[131,6596+4]..[131,6596+15])
          Ppat_var "dump_interf" (lib/clflags.ml[131,6596+4]..[131,6596+15])
        expression (lib/clflags.ml[131,6596+18]..[131,6596+27])
          Pexp_apply
          expression (lib/clflags.ml[131,6596+18]..[131,6596+21])
            Pexp_ident "ref" (lib/clflags.ml[131,6596+18]..[131,6596+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[131,6596+22]..[131,6596+27])
                Pexp_construct "false" (lib/clflags.ml[131,6596+22]..[131,6596+27])
                None
          ]
    ]
  structure_item (lib/clflags.ml[132,6651+0]..[132,6651+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[132,6651+4]..[132,6651+15])
          Ppat_var "dump_prefer" (lib/clflags.ml[132,6651+4]..[132,6651+15])
        expression (lib/clflags.ml[132,6651+18]..[132,6651+27])
          Pexp_apply
          expression (lib/clflags.ml[132,6651+18]..[132,6651+21])
            Pexp_ident "ref" (lib/clflags.ml[132,6651+18]..[132,6651+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[132,6651+22]..[132,6651+27])
                Pexp_construct "false" (lib/clflags.ml[132,6651+22]..[132,6651+27])
                None
          ]
    ]
  structure_item (lib/clflags.ml[133,6706+0]..[133,6706+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[133,6706+4]..[133,6706+17])
          Ppat_var "dump_regalloc" (lib/clflags.ml[133,6706+4]..[133,6706+17])
        expression (lib/clflags.ml[133,6706+20]..[133,6706+29])
          Pexp_apply
          expression (lib/clflags.ml[133,6706+20]..[133,6706+23])
            Pexp_ident "ref" (lib/clflags.ml[133,6706+20]..[133,6706+23])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[133,6706+24]..[133,6706+29])
                Pexp_construct "false" (lib/clflags.ml[133,6706+24]..[133,6706+29])
                None
          ]
    ]
  structure_item (lib/clflags.ml[134,6760+0]..[134,6760+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[134,6760+4]..[134,6760+15])
          Ppat_var "dump_reload" (lib/clflags.ml[134,6760+4]..[134,6760+15])
        expression (lib/clflags.ml[134,6760+18]..[134,6760+27])
          Pexp_apply
          expression (lib/clflags.ml[134,6760+18]..[134,6760+21])
            Pexp_ident "ref" (lib/clflags.ml[134,6760+18]..[134,6760+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[134,6760+22]..[134,6760+27])
                Pexp_construct "false" (lib/clflags.ml[134,6760+22]..[134,6760+27])
                None
          ]
    ]
  structure_item (lib/clflags.ml[135,6815+0]..[135,6815+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[135,6815+4]..[135,6815+19])
          Ppat_var "dump_scheduling" (lib/clflags.ml[135,6815+4]..[135,6815+19])
        expression (lib/clflags.ml[135,6815+22]..[135,6815+31])
          Pexp_apply
          expression (lib/clflags.ml[135,6815+22]..[135,6815+25])
            Pexp_ident "ref" (lib/clflags.ml[135,6815+22]..[135,6815+25])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[135,6815+26]..[135,6815+31])
                Pexp_construct "false" (lib/clflags.ml[135,6815+26]..[135,6815+31])
                None
          ]
    ]
  structure_item (lib/clflags.ml[136,6874+0]..[136,6874+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[136,6874+4]..[136,6874+15])
          Ppat_var "dump_linear" (lib/clflags.ml[136,6874+4]..[136,6874+15])
        expression (lib/clflags.ml[136,6874+18]..[136,6874+27])
          Pexp_apply
          expression (lib/clflags.ml[136,6874+18]..[136,6874+21])
            Pexp_ident "ref" (lib/clflags.ml[136,6874+18]..[136,6874+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[136,6874+22]..[136,6874+27])
                Pexp_construct "false" (lib/clflags.ml[136,6874+22]..[136,6874+27])
                None
          ]
    ]
  structure_item (lib/clflags.ml[137,6929+0]..[137,6929+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[137,6929+4]..[137,6929+17])
          Ppat_var "dump_interval" (lib/clflags.ml[137,6929+4]..[137,6929+17])
        expression (lib/clflags.ml[137,6929+20]..[137,6929+29])
          Pexp_apply
          expression (lib/clflags.ml[137,6929+20]..[137,6929+23])
            Pexp_ident "ref" (lib/clflags.ml[137,6929+20]..[137,6929+23])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[137,6929+24]..[137,6929+29])
                Pexp_construct "false" (lib/clflags.ml[137,6929+24]..[137,6929+29])
                None
          ]
    ]
  structure_item (lib/clflags.ml[138,6986+0]..[138,6986+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[138,6986+4]..[138,6986+21])
          Ppat_var "keep_startup_file" (lib/clflags.ml[138,6986+4]..[138,6986+21])
        expression (lib/clflags.ml[138,6986+24]..[138,6986+33])
          Pexp_apply
          expression (lib/clflags.ml[138,6986+24]..[138,6986+27])
            Pexp_ident "ref" (lib/clflags.ml[138,6986+24]..[138,6986+27])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[138,6986+28]..[138,6986+33])
                Pexp_construct "false" (lib/clflags.ml[138,6986+28]..[138,6986+33])
                None
          ]
    ]
  structure_item (lib/clflags.ml[139,7042+0]..[139,7042+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[139,7042+4]..[139,7042+16])
          Ppat_var "dump_combine" (lib/clflags.ml[139,7042+4]..[139,7042+16])
        expression (lib/clflags.ml[139,7042+19]..[139,7042+28])
          Pexp_apply
          expression (lib/clflags.ml[139,7042+19]..[139,7042+22])
            Pexp_ident "ref" (lib/clflags.ml[139,7042+19]..[139,7042+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[139,7042+23]..[139,7042+28])
                Pexp_construct "false" (lib/clflags.ml[139,7042+23]..[139,7042+28])
                None
          ]
    ]
  structure_item (lib/clflags.ml[142,7188+0]..[142,7188+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[142,7188+4]..[142,7188+15])
          Ppat_var "native_code" (lib/clflags.ml[142,7188+4]..[142,7188+15])
        expression (lib/clflags.ml[142,7188+18]..[142,7188+27])
          Pexp_apply
          expression (lib/clflags.ml[142,7188+18]..[142,7188+21])
            Pexp_ident "ref" (lib/clflags.ml[142,7188+18]..[142,7188+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[142,7188+22]..[142,7188+27])
                Pexp_construct "false" (lib/clflags.ml[142,7188+22]..[142,7188+27])
                None
          ]
    ]
  structure_item (lib/clflags.ml[144,7262+0]..[144,7262+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[144,7262+4]..[144,7262+15])
          Ppat_var "force_slash" (lib/clflags.ml[144,7262+4]..[144,7262+15])
        expression (lib/clflags.ml[144,7262+18]..[144,7262+27])
          Pexp_apply
          expression (lib/clflags.ml[144,7262+18]..[144,7262+21])
            Pexp_ident "ref" (lib/clflags.ml[144,7262+18]..[144,7262+21])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[144,7262+22]..[144,7262+27])
                Pexp_construct "false" (lib/clflags.ml[144,7262+22]..[144,7262+27])
                None
          ]
    ]
  structure_item (lib/clflags.ml[145,7321+0]..[145,7321+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[145,7321+4]..[145,7321+18])
          Ppat_var "clambda_checks" (lib/clflags.ml[145,7321+4]..[145,7321+18])
        expression (lib/clflags.ml[145,7321+21]..[145,7321+30])
          Pexp_apply
          expression (lib/clflags.ml[145,7321+21]..[145,7321+24])
            Pexp_ident "ref" (lib/clflags.ml[145,7321+21]..[145,7321+24])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[145,7321+25]..[145,7321+30])
                Pexp_construct "false" (lib/clflags.ml[145,7321+25]..[145,7321+30])
                None
          ]
    ]
  structure_item (lib/clflags.ml[152,7599+0]..[152,7599+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[152,7599+4]..[152,7599+20])
          Ppat_var "dont_write_files" (lib/clflags.ml[152,7599+4]..[152,7599+20])
        expression (lib/clflags.ml[152,7599+23]..[152,7599+32])
          Pexp_apply
          expression (lib/clflags.ml[152,7599+23]..[152,7599+26])
            Pexp_ident "ref" (lib/clflags.ml[152,7599+23]..[152,7599+26])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[152,7599+27]..[152,7599+32])
                Pexp_construct "false" (lib/clflags.ml[152,7599+27]..[152,7599+32])
                None
          ]
    ]
  structure_item (lib/clflags.ml[154,7673+0]..[154,7673+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[154,7673+4]..[154,7673+22])
          Ppat_var "insn_sched_default" (lib/clflags.ml[154,7673+4]..[154,7673+22])
        expression (lib/clflags.ml[154,7673+25]..[154,7673+29])
          Pexp_construct "true" (lib/clflags.ml[154,7673+25]..[154,7673+29])
          None
    ]
  structure_item (lib/clflags.ml[155,7703+0]..[155,7703+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[155,7703+4]..[155,7703+14])
          Ppat_var "insn_sched" (lib/clflags.ml[155,7703+4]..[155,7703+14])
        expression (lib/clflags.ml[155,7703+17]..[155,7703+39])
          Pexp_apply
          expression (lib/clflags.ml[155,7703+17]..[155,7703+20])
            Pexp_ident "ref" (lib/clflags.ml[155,7703+17]..[155,7703+20])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[155,7703+21]..[155,7703+39])
                Pexp_ident "insn_sched_default" (lib/clflags.ml[155,7703+21]..[155,7703+39])
          ]
    ]
  structure_item (lib/clflags.ml[164,8002+0]..[164,8002+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[164,8002+4]..[164,8002+10])
          Ppat_var "shared" (lib/clflags.ml[164,8002+4]..[164,8002+10])
        expression (lib/clflags.ml[164,8002+13]..[164,8002+22])
          Pexp_apply
          expression (lib/clflags.ml[164,8002+13]..[164,8002+16])
            Pexp_ident "ref" (lib/clflags.ml[164,8002+13]..[164,8002+16])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[164,8002+17]..[164,8002+22])
                Pexp_construct "false" (lib/clflags.ml[164,8002+17]..[164,8002+22])
                None
          ]
    ]
  structure_item (lib/clflags.ml[165,8039+0]..[165,8039+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[165,8039+4]..[165,8039+10])
          Ppat_var "dlcode" (lib/clflags.ml[165,8039+4]..[165,8039+10])
        expression (lib/clflags.ml[165,8039+13]..[165,8039+21])
          Pexp_apply
          expression (lib/clflags.ml[165,8039+13]..[165,8039+16])
            Pexp_ident "ref" (lib/clflags.ml[165,8039+13]..[165,8039+16])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[165,8039+17]..[165,8039+21])
                Pexp_construct "true" (lib/clflags.ml[165,8039+17]..[165,8039+21])
                None
          ]
    ]
  structure_item (lib/clflags.ml[171,8247+0]..[171,8247+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[171,8247+4]..[171,8247+19])
          Ppat_var "runtime_variant" (lib/clflags.ml[171,8247+4]..[171,8247+19])
        expression (lib/clflags.ml[171,8247+22]..[171,8247+28])
          Pexp_apply
          expression (lib/clflags.ml[171,8247+22]..[171,8247+25])
            Pexp_ident "ref" (lib/clflags.ml[171,8247+22]..[171,8247+25])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[171,8247+26]..[171,8247+28])
                Pexp_constant PConst_string("",(lib/clflags.ml[171,8247+27]..[171,8247+27]),None)
          ]
    ]
  structure_item (lib/clflags.ml[173,8277+0]..[173,8277+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[173,8277+4]..[173,8277+16])
          Ppat_var "with_runtime" (lib/clflags.ml[173,8277+4]..[173,8277+16])
        expression (lib/clflags.ml[173,8277+19]..[173,8277+27])
          Pexp_apply
          expression (lib/clflags.ml[173,8277+19]..[173,8277+22])
            Pexp_ident "ref" (lib/clflags.ml[173,8277+19]..[173,8277+22])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[173,8277+23]..[173,8277+27])
                Pexp_construct "true" (lib/clflags.ml[173,8277+23]..[173,8277+27])
                None
          ]
    ]
  structure_item (lib/clflags.ml[175,8334+0]..[175,8334+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[175,8334+4]..[175,8334+13])
          Ppat_var "keep_docs" (lib/clflags.ml[175,8334+4]..[175,8334+13])
        expression (lib/clflags.ml[175,8334+16]..[175,8334+25])
          Pexp_apply
          expression (lib/clflags.ml[175,8334+16]..[175,8334+19])
            Pexp_ident "ref" (lib/clflags.ml[175,8334+16]..[175,8334+19])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[175,8334+20]..[175,8334+25])
                Pexp_construct "false" (lib/clflags.ml[175,8334+20]..[175,8334+25])
                None
          ]
    ]
  structure_item (lib/clflags.ml[176,8390+0]..[176,8390+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[176,8390+4]..[176,8390+13])
          Ppat_var "keep_locs" (lib/clflags.ml[176,8390+4]..[176,8390+13])
        expression (lib/clflags.ml[176,8390+16]..[176,8390+24])
          Pexp_apply
          expression (lib/clflags.ml[176,8390+16]..[176,8390+19])
            Pexp_ident "ref" (lib/clflags.ml[176,8390+16]..[176,8390+19])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[176,8390+20]..[176,8390+24])
                Pexp_construct "true" (lib/clflags.ml[176,8390+20]..[176,8390+24])
                None
          ]
    ]
  structure_item (lib/clflags.ml[178,8447+0]..[178,8447+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[178,8447+4]..[178,8447+20])
          Ppat_var "classic_inlining" (lib/clflags.ml[178,8447+4]..[178,8447+20])
        expression (lib/clflags.ml[178,8447+23]..[178,8447+32])
          Pexp_apply
          expression (lib/clflags.ml[178,8447+23]..[178,8447+26])
            Pexp_ident "ref" (lib/clflags.ml[178,8447+23]..[178,8447+26])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[178,8447+27]..[178,8447+32])
                Pexp_construct "false" (lib/clflags.ml[178,8447+27]..[178,8447+32])
                None
          ]
    ]
  structure_item (lib/clflags.ml[179,8502+0]..[179,8502+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[179,8502+4]..[179,8502+19])
          Ppat_var "inlining_report" (lib/clflags.ml[179,8502+4]..[179,8502+19])
        expression (lib/clflags.ml[179,8502+22]..[179,8502+31])
          Pexp_apply
          expression (lib/clflags.ml[179,8502+22]..[179,8502+25])
            Pexp_ident "ref" (lib/clflags.ml[179,8502+22]..[179,8502+25])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[179,8502+26]..[179,8502+31])
                Pexp_construct "false" (lib/clflags.ml[179,8502+26]..[179,8502+31])
                None
          ]
    ]
  structure_item (lib/clflags.ml[184,8708+0]..[184,8708+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[184,8708+4]..[184,8708+21])
          Ppat_var "function_sections" (lib/clflags.ml[184,8708+4]..[184,8708+21])
        expression (lib/clflags.ml[184,8708+24]..[184,8708+33])
          Pexp_apply
          expression (lib/clflags.ml[184,8708+24]..[184,8708+27])
            Pexp_ident "ref" (lib/clflags.ml[184,8708+24]..[184,8708+27])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[184,8708+28]..[184,8708+33])
                Pexp_construct "false" (lib/clflags.ml[184,8708+28]..[184,8708+33])
                None
          ]
    ]
  structure_item (lib/clflags.ml[186,8773+0]..[186,8773+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[186,8773+4]..[186,8773+19])
          Ppat_var "simplify_rounds" (lib/clflags.ml[186,8773+4]..[186,8773+19])
        expression (lib/clflags.ml[186,8773+22]..[186,8773+30])
          Pexp_apply
          expression (lib/clflags.ml[186,8773+22]..[186,8773+25])
            Pexp_ident "ref" (lib/clflags.ml[186,8773+22]..[186,8773+25])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[186,8773+26]..[186,8773+30])
                Pexp_construct "None" (lib/clflags.ml[186,8773+26]..[186,8773+30])
                None
          ]
    ]
  structure_item (lib/clflags.ml[187,8825+0]..[187,8825+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[187,8825+4]..[187,8825+27])
          Ppat_var "default_simplify_rounds" (lib/clflags.ml[187,8825+4]..[187,8825+27])
        expression (lib/clflags.ml[187,8825+30]..[187,8825+35])
          Pexp_apply
          expression (lib/clflags.ml[187,8825+30]..[187,8825+33])
            Pexp_ident "ref" (lib/clflags.ml[187,8825+30]..[187,8825+33])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[187,8825+34]..[187,8825+35])
                Pexp_constant PConst_int (1,None)
          ]
    ]
  structure_item (lib/clflags.ml[188,8882+0]..[191,8965+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[188,8882+4]..[188,8882+10])
          Ppat_var "rounds" (lib/clflags.ml[188,8882+4]..[188,8882+10])
        expression (lib/clflags.ml[188,8882+11]..[191,8965+15]) ghost
          Pexp_function
          [
            Pparam_val (lib/clflags.ml[188,8882+11]..[188,8882+13])
              Nolabel
              None
              pattern (lib/clflags.ml[188,8882+11]..[188,8882+13])
                Ppat_construct "()" (lib/clflags.ml[188,8882+11]..[188,8882+13])
                None
          ]
          None
          Pfunction_body
            expression (lib/clflags.ml[189,8898+2]..[191,8965+15])
              Pexp_match
              expression (lib/clflags.ml[189,8898+8]..[189,8898+24])
                Pexp_apply
                expression (lib/clflags.ml[189,8898+8]..[189,8898+9])
                  Pexp_ident "!" (lib/clflags.ml[189,8898+8]..[189,8898+9])
                [
                  <arg>
                  Nolabel
                    expression (lib/clflags.ml[189,8898+9]..[189,8898+24])
                      Pexp_ident "simplify_rounds" (lib/clflags.ml[189,8898+9]..[189,8898+24])
                ]
              [
                <case>
                  pattern (lib/clflags.ml[190,8928+4]..[190,8928+8])
                    Ppat_construct "None" (lib/clflags.ml[190,8928+4]..[190,8928+8])
                    None
                  expression (lib/clflags.ml[190,8928+12]..[190,8928+36])
                    Pexp_apply
                    expression (lib/clflags.ml[190,8928+12]..[190,8928+13])
                      Pexp_ident "!" (lib/clflags.ml[190,8928+12]..[190,8928+13])
                    [
                      <arg>
                      Nolabel
                        expression (lib/clflags.ml[190,8928+13]..[190,8928+36])
                          Pexp_ident "default_simplify_rounds" (lib/clflags.ml[190,8928+13]..[190,8928+36])
                    ]
                <case>
                  pattern (lib/clflags.ml[191,8965+4]..[191,8965+10])
                    Ppat_construct "Some" (lib/clflags.ml[191,8965+4]..[191,8965+8])
                    Some
                      []
                      pattern (lib/clflags.ml[191,8965+9]..[191,8965+10])
                        Ppat_var "r" (lib/clflags.ml[191,8965+9]..[191,8965+10])
                  expression (lib/clflags.ml[191,8965+14]..[191,8965+15])
                    Pexp_ident "r" (lib/clflags.ml[191,8965+14]..[191,8965+15])
              ]
    ]
  structure_item (lib/clflags.ml[193,8982+0]..[193,8982+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[193,8982+4]..[193,8982+28])
          Ppat_var "default_inline_threshold" (lib/clflags.ml[193,8982+4]..[193,8982+28])
        expression (lib/clflags.ml[193,8982+31]..[193,8982+34])
          Pexp_constant PConst_float (10.,None)
    ]
  structure_item (lib/clflags.ml[194,9017+0]..[194,9017+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[194,9017+4]..[194,9017+30])
          Ppat_var "inline_toplevel_multiplier" (lib/clflags.ml[194,9017+4]..[194,9017+30])
        expression (lib/clflags.ml[194,9017+33]..[194,9017+35])
          Pexp_constant PConst_int (16,None)
    ]
  structure_item (lib/clflags.ml[195,9053+0]..[196,9093+79])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[195,9053+4]..[195,9053+37])
          Ppat_var "default_inline_toplevel_threshold" (lib/clflags.ml[195,9053+4]..[195,9053+37])
        expression (lib/clflags.ml[196,9093+2]..[196,9093+79])
          Pexp_apply
          expression (lib/clflags.ml[196,9093+2]..[196,9093+14])
            Pexp_ident "int_of_float" (lib/clflags.ml[196,9093+2]..[196,9093+14])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[196,9093+15]..[196,9093+79])
                Pexp_apply
                expression (lib/clflags.ml[196,9093+51]..[196,9093+53])
                  Pexp_ident "*." (lib/clflags.ml[196,9093+51]..[196,9093+53])
                [
                  <arg>
                  Nolabel
                    expression (lib/clflags.ml[196,9093+16]..[196,9093+50])
                      Pexp_apply
                      expression (lib/clflags.ml[196,9093+17]..[196,9093+22])
                        Pexp_ident "float" (lib/clflags.ml[196,9093+17]..[196,9093+22])
                      [
                        <arg>
                        Nolabel
                          expression (lib/clflags.ml[196,9093+23]..[196,9093+49])
                            Pexp_ident "inline_toplevel_multiplier" (lib/clflags.ml[196,9093+23]..[196,9093+49])
                      ]
                  <arg>
                  Nolabel
                    expression (lib/clflags.ml[196,9093+54]..[196,9093+78])
                      Pexp_ident "default_inline_threshold" (lib/clflags.ml[196,9093+54]..[196,9093+78])
                ]
          ]
    ]
  structure_item (lib/clflags.ml[197,9173+0]..[197,9173+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[197,9173+4]..[197,9173+28])
          Ppat_var "default_inline_call_cost" (lib/clflags.ml[197,9173+4]..[197,9173+28])
        expression (lib/clflags.ml[197,9173+31]..[197,9173+32])
          Pexp_constant PConst_int (5,None)
    ]
  structure_item (lib/clflags.ml[198,9206+0]..[198,9206+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[198,9206+4]..[198,9206+29])
          Ppat_var "default_inline_alloc_cost" (lib/clflags.ml[198,9206+4]..[198,9206+29])
        expression (lib/clflags.ml[198,9206+32]..[198,9206+33])
          Pexp_constant PConst_int (7,None)
    ]
  structure_item (lib/clflags.ml[199,9240+0]..[199,9240+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[199,9240+4]..[199,9240+28])
          Ppat_var "default_inline_prim_cost" (lib/clflags.ml[199,9240+4]..[199,9240+28])
        expression (lib/clflags.ml[199,9240+31]..[199,9240+32])
          Pexp_constant PConst_int (3,None)
    ]
  structure_item (lib/clflags.ml[200,9273+0]..[200,9273+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[200,9273+4]..[200,9273+30])
          Ppat_var "default_inline_branch_cost" (lib/clflags.ml[200,9273+4]..[200,9273+30])
        expression (lib/clflags.ml[200,9273+33]..[200,9273+34])
          Pexp_constant PConst_int (5,None)
    ]
  structure_item (lib/clflags.ml[201,9308+0]..[201,9308+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[201,9308+4]..[201,9308+32])
          Ppat_var "default_inline_indirect_cost" (lib/clflags.ml[201,9308+4]..[201,9308+32])
        expression (lib/clflags.ml[201,9308+35]..[201,9308+36])
          Pexp_constant PConst_int (4,None)
    ]
  structure_item (lib/clflags.ml[202,9345+0]..[202,9345+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[202,9345+4]..[202,9345+32])
          Ppat_var "default_inline_branch_factor" (lib/clflags.ml[202,9345+4]..[202,9345+32])
        expression (lib/clflags.ml[202,9345+35]..[202,9345+38])
          Pexp_constant PConst_float (0.1,None)
    ]
  structure_item (lib/clflags.ml[203,9384+0]..[203,9384+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[203,9384+4]..[203,9384+34])
          Ppat_var "default_inline_lifting_benefit" (lib/clflags.ml[203,9384+4]..[203,9384+34])
        expression (lib/clflags.ml[203,9384+37]..[203,9384+41])
          Pexp_constant PConst_int (1300,None)
    ]
  structure_item (lib/clflags.ml[204,9426+0]..[204,9426+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[204,9426+4]..[204,9426+29])
          Ppat_var "default_inline_max_unroll" (lib/clflags.ml[204,9426+4]..[204,9426+29])
        expression (lib/clflags.ml[204,9426+32]..[204,9426+33])
          Pexp_constant PConst_int (0,None)
    ]
  structure_item (lib/clflags.ml[205,9460+0]..[205,9460+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[205,9460+4]..[205,9460+28])
          Ppat_var "default_inline_max_depth" (lib/clflags.ml[205,9460+4]..[205,9460+28])
        expression (lib/clflags.ml[205,9460+31]..[205,9460+32])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (lib/clflags.ml[227,10523+0]..[227,10523+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[227,10523+4]..[227,10523+26])
          Ppat_var "unbox_specialised_args" (lib/clflags.ml[227,10523+4]..[227,10523+26])
        expression (lib/clflags.ml[227,10523+29]..[227,10523+37])
          Pexp_apply
          expression (lib/clflags.ml[227,10523+29]..[227,10523+32])
            Pexp_ident "ref" (lib/clflags.ml[227,10523+29]..[227,10523+32])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[227,10523+33]..[227,10523+37])
                Pexp_construct "true" (lib/clflags.ml[227,10523+33]..[227,10523+37])
                None
          ]
    ]
  structure_item (lib/clflags.ml[228,10596+0]..[228,10596+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[228,10596+4]..[228,10596+31])
          Ppat_var "unbox_free_vars_of_closures" (lib/clflags.ml[228,10596+4]..[228,10596+31])
        expression (lib/clflags.ml[228,10596+34]..[228,10596+42])
          Pexp_apply
          expression (lib/clflags.ml[228,10596+34]..[228,10596+37])
            Pexp_ident "ref" (lib/clflags.ml[228,10596+34]..[228,10596+37])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[228,10596+38]..[228,10596+42])
                Pexp_construct "true" (lib/clflags.ml[228,10596+38]..[228,10596+42])
                None
          ]
    ]
  structure_item (lib/clflags.ml[229,10639+0]..[229,10639+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[229,10639+4]..[229,10639+18])
          Ppat_var "unbox_closures" (lib/clflags.ml[229,10639+4]..[229,10639+18])
        expression (lib/clflags.ml[229,10639+21]..[229,10639+30])
          Pexp_apply
          expression (lib/clflags.ml[229,10639+21]..[229,10639+24])
            Pexp_ident "ref" (lib/clflags.ml[229,10639+21]..[229,10639+24])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[229,10639+25]..[229,10639+30])
                Pexp_construct "false" (lib/clflags.ml[229,10639+25]..[229,10639+30])
                None
          ]
    ]
  structure_item (lib/clflags.ml[230,10701+0]..[230,10701+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[230,10701+4]..[230,10701+33])
          Ppat_var "default_unbox_closures_factor" (lib/clflags.ml[230,10701+4]..[230,10701+33])
        expression (lib/clflags.ml[230,10701+36]..[230,10701+38])
          Pexp_constant PConst_int (10,None)
    ]
  structure_item (lib/clflags.ml[231,10740+0]..[232,10768+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[231,10740+4]..[231,10740+25])
          Ppat_var "unbox_closures_factor" (lib/clflags.ml[231,10740+4]..[231,10740+25])
        expression (lib/clflags.ml[232,10768+2]..[232,10768+35])
          Pexp_apply
          expression (lib/clflags.ml[232,10768+2]..[232,10768+5])
            Pexp_ident "ref" (lib/clflags.ml[232,10768+2]..[232,10768+5])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[232,10768+6]..[232,10768+35])
                Pexp_ident "default_unbox_closures_factor" (lib/clflags.ml[232,10768+6]..[232,10768+35])
          ]
    ]
  structure_item (lib/clflags.ml[233,10838+0]..[233,10838+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[233,10838+4]..[233,10838+27])
          Ppat_var "remove_unused_arguments" (lib/clflags.ml[233,10838+4]..[233,10838+27])
        expression (lib/clflags.ml[233,10838+30]..[233,10838+39])
          Pexp_apply
          expression (lib/clflags.ml[233,10838+30]..[233,10838+33])
            Pexp_ident "ref" (lib/clflags.ml[233,10838+30]..[233,10838+33])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[233,10838+34]..[233,10838+39])
                Pexp_construct "false" (lib/clflags.ml[233,10838+34]..[233,10838+39])
                None
          ]
    ]
  structure_item (lib/clflags.ml[235,10910+0]..[247,11332+1])
    Pstr_type Rec
    [
      type_declaration "inlining_arguments" (lib/clflags.ml[235,10910+5]..[235,10910+23]) (lib/clflags.ml[235,10910+0]..[247,11332+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/clflags.ml[236,10938+2]..[236,10938+32])
                Immutable
                "inline_call_cost" (lib/clflags.ml[236,10938+2]..[236,10938+18])                core_type (lib/clflags.ml[236,10938+21]..[236,10938+31])
                  Ptyp_constr "option" (lib/clflags.ml[236,10938+25]..[236,10938+31])
                  [
                    core_type (lib/clflags.ml[236,10938+21]..[236,10938+24])
                      Ptyp_constr "int" (lib/clflags.ml[236,10938+21]..[236,10938+24])
                      []
                  ]
              (lib/clflags.ml[237,10971+2]..[237,10971+33])
                Immutable
                "inline_alloc_cost" (lib/clflags.ml[237,10971+2]..[237,10971+19])                core_type (lib/clflags.ml[237,10971+22]..[237,10971+32])
                  Ptyp_constr "option" (lib/clflags.ml[237,10971+26]..[237,10971+32])
                  [
                    core_type (lib/clflags.ml[237,10971+22]..[237,10971+25])
                      Ptyp_constr "int" (lib/clflags.ml[237,10971+22]..[237,10971+25])
                      []
                  ]
              (lib/clflags.ml[238,11005+2]..[238,11005+32])
                Immutable
                "inline_prim_cost" (lib/clflags.ml[238,11005+2]..[238,11005+18])                core_type (lib/clflags.ml[238,11005+21]..[238,11005+31])
                  Ptyp_constr "option" (lib/clflags.ml[238,11005+25]..[238,11005+31])
                  [
                    core_type (lib/clflags.ml[238,11005+21]..[238,11005+24])
                      Ptyp_constr "int" (lib/clflags.ml[238,11005+21]..[238,11005+24])
                      []
                  ]
              (lib/clflags.ml[239,11038+2]..[239,11038+34])
                Immutable
                "inline_branch_cost" (lib/clflags.ml[239,11038+2]..[239,11038+20])                core_type (lib/clflags.ml[239,11038+23]..[239,11038+33])
                  Ptyp_constr "option" (lib/clflags.ml[239,11038+27]..[239,11038+33])
                  [
                    core_type (lib/clflags.ml[239,11038+23]..[239,11038+26])
                      Ptyp_constr "int" (lib/clflags.ml[239,11038+23]..[239,11038+26])
                      []
                  ]
              (lib/clflags.ml[240,11073+2]..[240,11073+36])
                Immutable
                "inline_indirect_cost" (lib/clflags.ml[240,11073+2]..[240,11073+22])                core_type (lib/clflags.ml[240,11073+25]..[240,11073+35])
                  Ptyp_constr "option" (lib/clflags.ml[240,11073+29]..[240,11073+35])
                  [
                    core_type (lib/clflags.ml[240,11073+25]..[240,11073+28])
                      Ptyp_constr "int" (lib/clflags.ml[240,11073+25]..[240,11073+28])
                      []
                  ]
              (lib/clflags.ml[241,11110+2]..[241,11110+38])
                Immutable
                "inline_lifting_benefit" (lib/clflags.ml[241,11110+2]..[241,11110+24])                core_type (lib/clflags.ml[241,11110+27]..[241,11110+37])
                  Ptyp_constr "option" (lib/clflags.ml[241,11110+31]..[241,11110+37])
                  [
                    core_type (lib/clflags.ml[241,11110+27]..[241,11110+30])
                      Ptyp_constr "int" (lib/clflags.ml[241,11110+27]..[241,11110+30])
                      []
                  ]
              (lib/clflags.ml[242,11149+2]..[242,11149+38])
                Immutable
                "inline_branch_factor" (lib/clflags.ml[242,11149+2]..[242,11149+22])                core_type (lib/clflags.ml[242,11149+25]..[242,11149+37])
                  Ptyp_constr "option" (lib/clflags.ml[242,11149+31]..[242,11149+37])
                  [
                    core_type (lib/clflags.ml[242,11149+25]..[242,11149+30])
                      Ptyp_constr "float" (lib/clflags.ml[242,11149+25]..[242,11149+30])
                      []
                  ]
              (lib/clflags.ml[243,11188+2]..[243,11188+32])
                Immutable
                "inline_max_depth" (lib/clflags.ml[243,11188+2]..[243,11188+18])                core_type (lib/clflags.ml[243,11188+21]..[243,11188+31])
                  Ptyp_constr "option" (lib/clflags.ml[243,11188+25]..[243,11188+31])
                  [
                    core_type (lib/clflags.ml[243,11188+21]..[243,11188+24])
                      Ptyp_constr "int" (lib/clflags.ml[243,11188+21]..[243,11188+24])
                      []
                  ]
              (lib/clflags.ml[244,11221+2]..[244,11221+33])
                Immutable
                "inline_max_unroll" (lib/clflags.ml[244,11221+2]..[244,11221+19])                core_type (lib/clflags.ml[244,11221+22]..[244,11221+32])
                  Ptyp_constr "option" (lib/clflags.ml[244,11221+26]..[244,11221+32])
                  [
                    core_type (lib/clflags.ml[244,11221+22]..[244,11221+25])
                      Ptyp_constr "int" (lib/clflags.ml[244,11221+22]..[244,11221+25])
                      []
                  ]
              (lib/clflags.ml[245,11255+2]..[245,11255+34])
                Immutable
                "inline_threshold" (lib/clflags.ml[245,11255+2]..[245,11255+18])                core_type (lib/clflags.ml[245,11255+21]..[245,11255+33])
                  Ptyp_constr "option" (lib/clflags.ml[245,11255+27]..[245,11255+33])
                  [
                    core_type (lib/clflags.ml[245,11255+21]..[245,11255+26])
                      Ptyp_constr "float" (lib/clflags.ml[245,11255+21]..[245,11255+26])
                      []
                  ]
              (lib/clflags.ml[246,11290+2]..[246,11290+41])
                Immutable
                "inline_toplevel_threshold" (lib/clflags.ml[246,11290+2]..[246,11290+27])                core_type (lib/clflags.ml[246,11290+30]..[246,11290+40])
                  Ptyp_constr "option" (lib/clflags.ml[246,11290+34]..[246,11290+40])
                  [
                    core_type (lib/clflags.ml[246,11290+30]..[246,11290+33])
                      Ptyp_constr "int" (lib/clflags.ml[246,11290+30]..[246,11290+33])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/clflags.ml[377,16412+0]..[377,16412+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[377,16412+4]..[377,16412+18])
          Ppat_var "dump_into_file" (lib/clflags.ml[377,16412+4]..[377,16412+18])
        expression (lib/clflags.ml[377,16412+21]..[377,16412+30])
          Pexp_apply
          expression (lib/clflags.ml[377,16412+21]..[377,16412+24])
            Pexp_ident "ref" (lib/clflags.ml[377,16412+21]..[377,16412+24])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[377,16412+25]..[377,16412+30])
                Pexp_construct "false" (lib/clflags.ml[377,16412+25]..[377,16412+30])
                None
          ]
    ]
  structure_item (lib/clflags.ml[378,16465+0]..[378,16465+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[378,16465+4]..[378,16465+12])
          Ppat_var "dump_dir" (lib/clflags.ml[378,16465+4]..[378,16465+12])
        core_type (lib/clflags.ml[378,16465+14]..[378,16465+31])
          Ptyp_constr "ref" (lib/clflags.ml[378,16465+28]..[378,16465+31])
          [
            core_type (lib/clflags.ml[378,16465+14]..[378,16465+27])
              Ptyp_constr "option" (lib/clflags.ml[378,16465+21]..[378,16465+27])
              [
                core_type (lib/clflags.ml[378,16465+14]..[378,16465+20])
                  Ptyp_constr "string" (lib/clflags.ml[378,16465+14]..[378,16465+20])
                  []
              ]
          ]
        expression (lib/clflags.ml[378,16465+34]..[378,16465+42])
          Pexp_apply
          expression (lib/clflags.ml[378,16465+34]..[378,16465+37])
            Pexp_ident "ref" (lib/clflags.ml[378,16465+34]..[378,16465+37])
          [
            <arg>
            Nolabel
              expression (lib/clflags.ml[378,16465+38]..[378,16465+42])
                Pexp_construct "None" (lib/clflags.ml[378,16465+38]..[378,16465+42])
                None
          ]
    ]
  structure_item (lib/clflags.ml[380,16525+0]..[385,16641+1])
    Pstr_type Rec
    [
      type_declaration "env_reader" (lib/clflags.ml[380,16525+8]..[380,16525+18]) (lib/clflags.ml[380,16525+0]..[385,16641+1])
        ptype_params =
          [
            core_type (lib/clflags.ml[380,16525+5]..[380,16525+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/clflags.ml[381,16548+2]..[381,16548+30])
                Immutable
                "parse" (lib/clflags.ml[381,16548+2]..[381,16548+7])                core_type (lib/clflags.ml[381,16548+10]..[381,16548+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/clflags.ml[381,16548+10]..[381,16548+16])
                    Ptyp_constr "string" (lib/clflags.ml[381,16548+10]..[381,16548+16])
                    []
                  core_type (lib/clflags.ml[381,16548+20]..[381,16548+29])
                    Ptyp_constr "option" (lib/clflags.ml[381,16548+23]..[381,16548+29])
                    [
                      core_type (lib/clflags.ml[381,16548+20]..[381,16548+22])
                        Ptyp_var a
                    ]
              (lib/clflags.ml[382,16579+2]..[382,16579+23])
                Immutable
                "print" (lib/clflags.ml[382,16579+2]..[382,16579+7])                core_type (lib/clflags.ml[382,16579+10]..[382,16579+22])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/clflags.ml[382,16579+10]..[382,16579+12])
                    Ptyp_var a
                  core_type (lib/clflags.ml[382,16579+16]..[382,16579+22])
                    Ptyp_constr "string" (lib/clflags.ml[382,16579+16]..[382,16579+22])
                    []
              (lib/clflags.ml[383,16603+2]..[383,16603+17])
                Immutable
                "usage" (lib/clflags.ml[383,16603+2]..[383,16603+7])                core_type (lib/clflags.ml[383,16603+10]..[383,16603+16])
                  Ptyp_constr "string" (lib/clflags.ml[383,16603+10]..[383,16603+16])
                  []
              (lib/clflags.ml[384,16621+2]..[384,16621+19])
                Immutable
                "env_var" (lib/clflags.ml[384,16621+2]..[384,16621+9])                core_type (lib/clflags.ml[384,16621+12]..[384,16621+18])
                  Ptyp_constr "string" (lib/clflags.ml[384,16621+12]..[384,16621+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/clflags.ml[389,16687+0]..[401,17070+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[389,16687+4]..[389,16687+16])
          Ppat_var "color_reader" (lib/clflags.ml[389,16687+4]..[389,16687+16])
        expression (lib/clflags.ml[389,16687+19]..[401,17070+1])
          Pexp_record
          [
            "parse" (lib/clflags.ml[390,16708+2]..[390,16708+7])
              expression (lib/clflags.ml[390,16708+10]..[394,16845+16])
                Pexp_function
                []
                None
                Pfunction_cases (lib/clflags.ml[390,16708+11]..[394,16845+15])
                  [
                    <case>
                      pattern (lib/clflags.ml[391,16728+6]..[391,16728+12])
                        Ppat_constant PConst_string("auto",(lib/clflags.ml[391,16728+7]..[391,16728+11]),None)
                      expression (lib/clflags.ml[391,16728+16]..[391,16728+36])
                        Pexp_construct "Some" (lib/clflags.ml[391,16728+16]..[391,16728+20])
                        Some
                          expression (lib/clflags.ml[391,16728+21]..[391,16728+36])
                            Pexp_construct "Misc.Color.Auto" (lib/clflags.ml[391,16728+21]..[391,16728+36])
                            None
                    <case>
                      pattern (lib/clflags.ml[392,16765+6]..[392,16765+14])
                        Ppat_constant PConst_string("always",(lib/clflags.ml[392,16765+7]..[392,16765+13]),None)
                      expression (lib/clflags.ml[392,16765+18]..[392,16765+40])
                        Pexp_construct "Some" (lib/clflags.ml[392,16765+18]..[392,16765+22])
                        Some
                          expression (lib/clflags.ml[392,16765+23]..[392,16765+40])
                            Pexp_construct "Misc.Color.Always" (lib/clflags.ml[392,16765+23]..[392,16765+40])
                            None
                    <case>
                      pattern (lib/clflags.ml[393,16806+6]..[393,16806+13])
                        Ppat_constant PConst_string("never",(lib/clflags.ml[393,16806+7]..[393,16806+12]),None)
                      expression (lib/clflags.ml[393,16806+17]..[393,16806+38])
                        Pexp_construct "Some" (lib/clflags.ml[393,16806+17]..[393,16806+21])
                        Some
                          expression (lib/clflags.ml[393,16806+22]..[393,16806+38])
                            Pexp_construct "Misc.Color.Never" (lib/clflags.ml[393,16806+22]..[393,16806+38])
                            None
                    <case>
                      pattern (lib/clflags.ml[394,16845+6]..[394,16845+7])
                        Ppat_any
                      expression (lib/clflags.ml[394,16845+11]..[394,16845+15])
                        Pexp_construct "None" (lib/clflags.ml[394,16845+11]..[394,16845+15])
                        None
                  ]
            "print" (lib/clflags.ml[395,16863+2]..[395,16863+7])
              expression (lib/clflags.ml[395,16863+10]..[398,16951+34])
                Pexp_function
                []
                None
                Pfunction_cases (lib/clflags.ml[395,16863+11]..[398,16951+33])
                  [
                    <case>
                      pattern (lib/clflags.ml[396,16883+6]..[396,16883+21])
                        Ppat_construct "Misc.Color.Auto" (lib/clflags.ml[396,16883+6]..[396,16883+21])
                        None
                      expression (lib/clflags.ml[396,16883+25]..[396,16883+31])
                        Pexp_constant PConst_string("auto",(lib/clflags.ml[396,16883+26]..[396,16883+30]),None)
                    <case>
                      pattern (lib/clflags.ml[397,16915+6]..[397,16915+23])
                        Ppat_construct "Misc.Color.Always" (lib/clflags.ml[397,16915+6]..[397,16915+23])
                        None
                      expression (lib/clflags.ml[397,16915+27]..[397,16915+35])
                        Pexp_constant PConst_string("always",(lib/clflags.ml[397,16915+28]..[397,16915+34]),None)
                    <case>
                      pattern (lib/clflags.ml[398,16951+6]..[398,16951+22])
                        Ppat_construct "Misc.Color.Never" (lib/clflags.ml[398,16951+6]..[398,16951+22])
                        None
                      expression (lib/clflags.ml[398,16951+26]..[398,16951+33])
                        Pexp_constant PConst_string("never",(lib/clflags.ml[398,16951+27]..[398,16951+32]),None)
                  ]
            "usage" (lib/clflags.ml[399,16987+2]..[399,16987+7])
              expression (lib/clflags.ml[399,16987+10]..[399,16987+54])
                Pexp_constant PConst_string("expected \"auto\", \"always\" or \"never\"",(lib/clflags.ml[399,16987+11]..[399,16987+53]),None)
            "env_var" (lib/clflags.ml[400,17043+2]..[400,17043+9])
              expression (lib/clflags.ml[400,17043+12]..[400,17043+25])
                Pexp_constant PConst_string("OCAML_COLOR",(lib/clflags.ml[400,17043+13]..[400,17043+24]),None)
          ]
          None
    ]
]

let objfiles = ref ([] : string list)
and ccobjs = ref ([] : string list)
and dllibs = ref ([] : string list)
let compile_only = ref false
and output_name = ref (None : string option)
and include_dirs = ref ([] : string list)
and hidden_include_dirs = ref ([] : string list)
and no_std_include = ref false
and no_cwd = ref false
and print_types = ref false
and make_archive = ref false
and debug = ref false
and debug_full = ref false
and unsafe = ref false
and use_linscan = ref false
and link_everything = ref false
and custom_runtime = ref false
and no_check_prims = ref false
and bytecode_compatible_32 = ref false
and output_c_object = ref false
and output_complete_object = ref false
and output_complete_executable = ref false
and all_ccopts = ref ([] : string list)
and classic = ref false
and nopervasives = ref false
and match_context_rows = ref 32
and safer_matching = ref false
and preprocessor = ref (None : string option)
and all_ppx = ref ([] : string list)
let absname = ref false
let annotations = ref false
let binary_annotations = ref false
and use_threads = ref false
and noassert = ref false
and verbose = ref false
and noversion = ref false
and noprompt = ref false
and nopromptcont = ref false
and init_file = ref (None : string option)
and noinit = ref false
and use_prims = ref ""
and use_runtime = ref ""
and plugin = ref false
and principal = ref false
and real_paths = ref true
and recursive_types = ref false
and strict_sequence = ref false
and strict_formats = ref true
and applicative_functors = ref true
and make_runtime = ref false
and c_compiler = ref (None : string option)
and no_auto_link = ref false
and dllpaths = ref ([] : string list)
and make_package = ref false
and for_package = ref (None : string option)
and error_size = ref 500
and float_const_prop = ref true
and transparent_modules = ref false
let unique_ids = ref true
let locations = ref true
let dump_source = ref false
let dump_parsetree = ref false
and dump_typedtree = ref false
and dump_shape = ref false
and dump_rawlambda = ref false
and dump_lambda = ref false
and dump_rawclambda = ref false
and dump_clambda = ref false
and dump_rawflambda = ref false
and dump_flambda = ref false
and dump_flambda_let = ref (None : int option)
and dump_flambda_verbose = ref false
and dump_instr = ref false
and keep_camlprimc_file = ref false
let keep_asm_file = ref false
let optimize_for_speed = ref true
and opaque = ref false
and dump_cmm = ref false
let dump_selection = ref false
let dump_cse = ref false
let dump_live = ref false
let dump_spill = ref false
let dump_split = ref false
let dump_interf = ref false
let dump_prefer = ref false
let dump_regalloc = ref false
let dump_reload = ref false
let dump_scheduling = ref false
let dump_linear = ref false
let dump_interval = ref false
let keep_startup_file = ref false
let dump_combine = ref false
let native_code = ref false
let force_slash = ref false
let clambda_checks = ref false
let dont_write_files = ref false
let insn_sched_default = true
let insn_sched = ref insn_sched_default
let shared = ref false
let dlcode = ref true
let runtime_variant = ref ""
let with_runtime = ref true
let keep_docs = ref false
let keep_locs = ref true
let classic_inlining = ref false
let inlining_report = ref false
let function_sections = ref false
let simplify_rounds = ref None
let default_simplify_rounds = ref 1
let rounds () =
  match !simplify_rounds with
  | None -> !default_simplify_rounds
  | Some r -> r
let default_inline_threshold = 10.
let inline_toplevel_multiplier = 16
let default_inline_toplevel_threshold =
  int_of_float
    ((float inline_toplevel_multiplier) *. default_inline_threshold)
let default_inline_call_cost = 5
let default_inline_alloc_cost = 7
let default_inline_prim_cost = 3
let default_inline_branch_cost = 5
let default_inline_indirect_cost = 4
let default_inline_branch_factor = 0.1
let default_inline_lifting_benefit = 1300
let default_inline_max_unroll = 0
let default_inline_max_depth = 1
let unbox_specialised_args = ref true
let unbox_free_vars_of_closures = ref true
let unbox_closures = ref false
let default_unbox_closures_factor = 10
let unbox_closures_factor = ref default_unbox_closures_factor
let remove_unused_arguments = ref false
type inlining_arguments =
  {
  inline_call_cost: int option ;
  inline_alloc_cost: int option ;
  inline_prim_cost: int option ;
  inline_branch_cost: int option ;
  inline_indirect_cost: int option ;
  inline_lifting_benefit: int option ;
  inline_branch_factor: float option ;
  inline_max_depth: int option ;
  inline_max_unroll: int option ;
  inline_threshold: float option ;
  inline_toplevel_threshold: int option }
let dump_into_file = ref false
let dump_dir : string option ref = ref None
type 'a env_reader =
  {
  parse: string -> 'a option ;
  print: 'a -> string ;
  usage: string ;
  env_var: string }
let color_reader =
  {
    parse =
      (function
       | "auto" -> Some Misc.Color.Auto
       | "always" -> Some Misc.Color.Always
       | "never" -> Some Misc.Color.Never
       | _ -> None);
    print =
      (function
       | Misc.Color.Auto -> "auto"
       | Misc.Color.Always -> "always"
       | Misc.Color.Never -> "never");
    usage = "expected \"auto\", \"always\" or \"never\"";
    env_var = "OCAML_COLOR"
  }
[
  structure_item (lib/clflags.ml[42,1720+0]..lib/clflags.ml[44,1861+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[42,1720+4]..lib/clflags.ml[42,1720+12])
          Tpat_var "objfiles/298"
        expression (lib/clflags.ml[42,1720+15]..lib/clflags.ml[42,1720+37])
          Texp_apply
          expression (lib/clflags.ml[42,1720+15]..lib/clflags.ml[42,1720+18])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[42,1720+20]..lib/clflags.ml[42,1720+22])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[42,1720+25]..lib/clflags.ml[42,1720+36])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/clflags.ml[42,1720+25]..lib/clflags.ml[42,1720+31])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "[]"
                []
          ]
      <def>
        pattern (lib/clflags.ml[43,1786+4]..lib/clflags.ml[43,1786+10])
          Tpat_var "ccobjs/299"
        expression (lib/clflags.ml[43,1786+13]..lib/clflags.ml[43,1786+35])
          Texp_apply
          expression (lib/clflags.ml[43,1786+13]..lib/clflags.ml[43,1786+16])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[43,1786+18]..lib/clflags.ml[43,1786+20])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[43,1786+23]..lib/clflags.ml[43,1786+34])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/clflags.ml[43,1786+23]..lib/clflags.ml[43,1786+29])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "[]"
                []
          ]
      <def>
        pattern (lib/clflags.ml[44,1861+4]..lib/clflags.ml[44,1861+10])
          Tpat_var "dllibs/300"
        expression (lib/clflags.ml[44,1861+13]..lib/clflags.ml[44,1861+35])
          Texp_apply
          expression (lib/clflags.ml[44,1861+13]..lib/clflags.ml[44,1861+16])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[44,1861+18]..lib/clflags.ml[44,1861+20])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[44,1861+23]..lib/clflags.ml[44,1861+34])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/clflags.ml[44,1861+23]..lib/clflags.ml[44,1861+29])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "[]"
                []
          ]
    ]
  structure_item (lib/clflags.ml[48,1960+0]..lib/clflags.ml[73,3386+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[48,1960+4]..lib/clflags.ml[48,1960+16])
          Tpat_var "compile_only/301"
        expression (lib/clflags.ml[48,1960+19]..lib/clflags.ml[48,1960+28])
          Texp_apply
          expression (lib/clflags.ml[48,1960+19]..lib/clflags.ml[48,1960+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[48,1960+23]..lib/clflags.ml[48,1960+28])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[49,2009+4]..lib/clflags.ml[49,2009+15])
          Tpat_var "output_name/302"
        expression (lib/clflags.ml[49,2009+18]..lib/clflags.ml[49,2009+44])
          Texp_apply
          expression (lib/clflags.ml[49,2009+18]..lib/clflags.ml[49,2009+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[49,2009+23]..lib/clflags.ml[49,2009+27])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[49,2009+30]..lib/clflags.ml[49,2009+43])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[49,2009+30]..lib/clflags.ml[49,2009+36])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "None"
                []
          ]
      <def>
        pattern (lib/clflags.ml[50,2063+4]..lib/clflags.ml[50,2063+16])
          Tpat_var "include_dirs/303"
        expression (lib/clflags.ml[50,2063+19]..lib/clflags.ml[50,2063+41])
          Texp_apply
          expression (lib/clflags.ml[50,2063+19]..lib/clflags.ml[50,2063+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[50,2063+24]..lib/clflags.ml[50,2063+26])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[50,2063+29]..lib/clflags.ml[50,2063+40])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/clflags.ml[50,2063+29]..lib/clflags.ml[50,2063+35])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "[]"
                []
          ]
      <def>
        pattern (lib/clflags.ml[51,2114+4]..lib/clflags.ml[51,2114+23])
          Tpat_var "hidden_include_dirs/304"
        expression (lib/clflags.ml[51,2114+26]..lib/clflags.ml[51,2114+48])
          Texp_apply
          expression (lib/clflags.ml[51,2114+26]..lib/clflags.ml[51,2114+29])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[51,2114+31]..lib/clflags.ml[51,2114+33])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[51,2114+36]..lib/clflags.ml[51,2114+47])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/clflags.ml[51,2114+36]..lib/clflags.ml[51,2114+42])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "[]"
                []
          ]
      <def>
        pattern (lib/clflags.ml[52,2172+4]..lib/clflags.ml[52,2172+18])
          Tpat_var "no_std_include/305"
        expression (lib/clflags.ml[52,2172+21]..lib/clflags.ml[52,2172+30])
          Texp_apply
          expression (lib/clflags.ml[52,2172+21]..lib/clflags.ml[52,2172+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[52,2172+25]..lib/clflags.ml[52,2172+30])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[53,2228+4]..lib/clflags.ml[53,2228+10])
          Tpat_var "no_cwd/306"
        expression (lib/clflags.ml[53,2228+13]..lib/clflags.ml[53,2228+22])
          Texp_apply
          expression (lib/clflags.ml[53,2228+13]..lib/clflags.ml[53,2228+16])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[53,2228+17]..lib/clflags.ml[53,2228+22])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[54,2281+4]..lib/clflags.ml[54,2281+15])
          Tpat_var "print_types/307"
        expression (lib/clflags.ml[54,2281+18]..lib/clflags.ml[54,2281+27])
          Texp_apply
          expression (lib/clflags.ml[54,2281+18]..lib/clflags.ml[54,2281+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[54,2281+22]..lib/clflags.ml[54,2281+27])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[55,2330+4]..lib/clflags.ml[55,2330+16])
          Tpat_var "make_archive/308"
        expression (lib/clflags.ml[55,2330+19]..lib/clflags.ml[55,2330+28])
          Texp_apply
          expression (lib/clflags.ml[55,2330+19]..lib/clflags.ml[55,2330+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[55,2330+23]..lib/clflags.ml[55,2330+28])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[56,2379+4]..lib/clflags.ml[56,2379+9])
          Tpat_var "debug/309"
        expression (lib/clflags.ml[56,2379+12]..lib/clflags.ml[56,2379+21])
          Texp_apply
          expression (lib/clflags.ml[56,2379+12]..lib/clflags.ml[56,2379+15])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[56,2379+16]..lib/clflags.ml[56,2379+21])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[57,2428+4]..lib/clflags.ml[57,2428+14])
          Tpat_var "debug_full/310"
        expression (lib/clflags.ml[57,2428+17]..lib/clflags.ml[57,2428+26])
          Texp_apply
          expression (lib/clflags.ml[57,2428+17]..lib/clflags.ml[57,2428+20])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[57,2428+21]..lib/clflags.ml[57,2428+26])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[58,2497+4]..lib/clflags.ml[58,2497+10])
          Tpat_var "unsafe/311"
        expression (lib/clflags.ml[58,2497+13]..lib/clflags.ml[58,2497+22])
          Texp_apply
          expression (lib/clflags.ml[58,2497+13]..lib/clflags.ml[58,2497+16])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[58,2497+17]..lib/clflags.ml[58,2497+22])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[59,2551+4]..lib/clflags.ml[59,2551+15])
          Tpat_var "use_linscan/312"
        expression (lib/clflags.ml[59,2551+18]..lib/clflags.ml[59,2551+27])
          Texp_apply
          expression (lib/clflags.ml[59,2551+18]..lib/clflags.ml[59,2551+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[59,2551+22]..lib/clflags.ml[59,2551+27])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[60,2606+4]..lib/clflags.ml[60,2606+19])
          Tpat_var "link_everything/313"
        expression (lib/clflags.ml[60,2606+22]..lib/clflags.ml[60,2606+31])
          Texp_apply
          expression (lib/clflags.ml[60,2606+22]..lib/clflags.ml[60,2606+25])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[60,2606+26]..lib/clflags.ml[60,2606+31])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[61,2661+4]..lib/clflags.ml[61,2661+18])
          Tpat_var "custom_runtime/314"
        expression (lib/clflags.ml[61,2661+21]..lib/clflags.ml[61,2661+30])
          Texp_apply
          expression (lib/clflags.ml[61,2661+21]..lib/clflags.ml[61,2661+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[61,2661+25]..lib/clflags.ml[61,2661+30])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[62,2715+4]..lib/clflags.ml[62,2715+18])
          Tpat_var "no_check_prims/315"
        expression (lib/clflags.ml[62,2715+21]..lib/clflags.ml[62,2715+30])
          Texp_apply
          expression (lib/clflags.ml[62,2715+21]..lib/clflags.ml[62,2715+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[62,2715+25]..lib/clflags.ml[62,2715+30])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[63,2777+4]..lib/clflags.ml[63,2777+26])
          Tpat_var "bytecode_compatible_32/316"
        expression (lib/clflags.ml[63,2777+29]..lib/clflags.ml[63,2777+38])
          Texp_apply
          expression (lib/clflags.ml[63,2777+29]..lib/clflags.ml[63,2777+32])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[63,2777+33]..lib/clflags.ml[63,2777+38])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[64,2834+4]..lib/clflags.ml[64,2834+19])
          Tpat_var "output_c_object/317"
        expression (lib/clflags.ml[64,2834+22]..lib/clflags.ml[64,2834+31])
          Texp_apply
          expression (lib/clflags.ml[64,2834+22]..lib/clflags.ml[64,2834+25])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[64,2834+26]..lib/clflags.ml[64,2834+31])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[65,2892+4]..lib/clflags.ml[65,2892+26])
          Tpat_var "output_complete_object/318"
        expression (lib/clflags.ml[65,2892+29]..lib/clflags.ml[65,2892+38])
          Texp_apply
          expression (lib/clflags.ml[65,2892+29]..lib/clflags.ml[65,2892+32])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[65,2892+33]..lib/clflags.ml[65,2892+38])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[66,2959+4]..lib/clflags.ml[66,2959+30])
          Tpat_var "output_complete_executable/319"
        expression (lib/clflags.ml[66,2959+33]..lib/clflags.ml[66,2959+42])
          Texp_apply
          expression (lib/clflags.ml[66,2959+33]..lib/clflags.ml[66,2959+36])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[66,2959+37]..lib/clflags.ml[66,2959+42])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[67,3030+4]..lib/clflags.ml[67,3030+14])
          Tpat_var "all_ccopts/320"
        expression (lib/clflags.ml[67,3030+17]..lib/clflags.ml[67,3030+39])
          Texp_apply
          expression (lib/clflags.ml[67,3030+17]..lib/clflags.ml[67,3030+20])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[67,3030+22]..lib/clflags.ml[67,3030+24])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[67,3030+27]..lib/clflags.ml[67,3030+38])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/clflags.ml[67,3030+27]..lib/clflags.ml[67,3030+33])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "[]"
                []
          ]
      <def>
        pattern (lib/clflags.ml[68,3087+4]..lib/clflags.ml[68,3087+11])
          Tpat_var "classic/321"
        expression (lib/clflags.ml[68,3087+14]..lib/clflags.ml[68,3087+23])
          Texp_apply
          expression (lib/clflags.ml[68,3087+14]..lib/clflags.ml[68,3087+17])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[68,3087+18]..lib/clflags.ml[68,3087+23])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[69,3143+4]..lib/clflags.ml[69,3143+16])
          Tpat_var "nopervasives/322"
        expression (lib/clflags.ml[69,3143+19]..lib/clflags.ml[69,3143+28])
          Texp_apply
          expression (lib/clflags.ml[69,3143+19]..lib/clflags.ml[69,3143+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[69,3143+23]..lib/clflags.ml[69,3143+28])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[70,3203+4]..lib/clflags.ml[70,3203+22])
          Tpat_var "match_context_rows/323"
        expression (lib/clflags.ml[70,3203+25]..lib/clflags.ml[70,3203+31])
          Texp_apply
          expression (lib/clflags.ml[70,3203+25]..lib/clflags.ml[70,3203+28])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[70,3203+29]..lib/clflags.ml[70,3203+31])
                Texp_constant Const_int 32
          ]
      <def>
        pattern (lib/clflags.ml[71,3269+4]..lib/clflags.ml[71,3269+18])
          Tpat_var "safer_matching/324"
        expression (lib/clflags.ml[71,3269+21]..lib/clflags.ml[71,3269+30])
          Texp_apply
          expression (lib/clflags.ml[71,3269+21]..lib/clflags.ml[71,3269+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[71,3269+25]..lib/clflags.ml[71,3269+30])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[72,3331+4]..lib/clflags.ml[72,3331+16])
          Tpat_var "preprocessor/325"
        expression (lib/clflags.ml[72,3331+19]..lib/clflags.ml[72,3331+44])
          Texp_apply
          expression (lib/clflags.ml[72,3331+19]..lib/clflags.ml[72,3331+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[72,3331+23]..lib/clflags.ml[72,3331+27])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[72,3331+30]..lib/clflags.ml[72,3331+43])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[72,3331+30]..lib/clflags.ml[72,3331+36])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "None"
                []
          ]
      <def>
        pattern (lib/clflags.ml[73,3386+4]..lib/clflags.ml[73,3386+11])
          Tpat_var "all_ppx/326"
        expression (lib/clflags.ml[73,3386+14]..lib/clflags.ml[73,3386+36])
          Texp_apply
          expression (lib/clflags.ml[73,3386+14]..lib/clflags.ml[73,3386+17])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[73,3386+19]..lib/clflags.ml[73,3386+21])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[73,3386+24]..lib/clflags.ml[73,3386+35])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/clflags.ml[73,3386+24]..lib/clflags.ml[73,3386+30])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "[]"
                []
          ]
    ]
  structure_item (lib/clflags.ml[74,3441+0]..lib/clflags.ml[74,3441+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[74,3441+4]..lib/clflags.ml[74,3441+11])
          Tpat_var "absname/327"
        expression (lib/clflags.ml[74,3441+14]..lib/clflags.ml[74,3441+23])
          Texp_apply
          expression (lib/clflags.ml[74,3441+14]..lib/clflags.ml[74,3441+17])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[74,3441+18]..lib/clflags.ml[74,3441+23])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[75,3496+0]..lib/clflags.ml[75,3496+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[75,3496+4]..lib/clflags.ml[75,3496+15])
          Tpat_var "annotations/328"
        expression (lib/clflags.ml[75,3496+18]..lib/clflags.ml[75,3496+27])
          Texp_apply
          expression (lib/clflags.ml[75,3496+18]..lib/clflags.ml[75,3496+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[75,3496+22]..lib/clflags.ml[75,3496+27])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[76,3549+0]..lib/clflags.ml[103,5118+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[76,3549+4]..lib/clflags.ml[76,3549+22])
          Tpat_var "binary_annotations/329"
        expression (lib/clflags.ml[76,3549+25]..lib/clflags.ml[76,3549+34])
          Texp_apply
          expression (lib/clflags.ml[76,3549+25]..lib/clflags.ml[76,3549+28])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[76,3549+29]..lib/clflags.ml[76,3549+34])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[77,3606+4]..lib/clflags.ml[77,3606+15])
          Tpat_var "use_threads/330"
        expression (lib/clflags.ml[77,3606+18]..lib/clflags.ml[77,3606+27])
          Texp_apply
          expression (lib/clflags.ml[77,3606+18]..lib/clflags.ml[77,3606+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[77,3606+22]..lib/clflags.ml[77,3606+27])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[78,3660+4]..lib/clflags.ml[78,3660+12])
          Tpat_var "noassert/331"
        expression (lib/clflags.ml[78,3660+15]..lib/clflags.ml[78,3660+24])
          Texp_apply
          expression (lib/clflags.ml[78,3660+15]..lib/clflags.ml[78,3660+18])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[78,3660+19]..lib/clflags.ml[78,3660+24])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[79,3716+4]..lib/clflags.ml[79,3716+11])
          Tpat_var "verbose/332"
        expression (lib/clflags.ml[79,3716+14]..lib/clflags.ml[79,3716+23])
          Texp_apply
          expression (lib/clflags.ml[79,3716+14]..lib/clflags.ml[79,3716+17])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[79,3716+18]..lib/clflags.ml[79,3716+23])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[80,3771+4]..lib/clflags.ml[80,3771+13])
          Tpat_var "noversion/333"
        expression (lib/clflags.ml[80,3771+16]..lib/clflags.ml[80,3771+25])
          Texp_apply
          expression (lib/clflags.ml[80,3771+16]..lib/clflags.ml[80,3771+19])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[80,3771+20]..lib/clflags.ml[80,3771+25])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[81,3829+4]..lib/clflags.ml[81,3829+12])
          Tpat_var "noprompt/334"
        expression (lib/clflags.ml[81,3829+15]..lib/clflags.ml[81,3829+24])
          Texp_apply
          expression (lib/clflags.ml[81,3829+15]..lib/clflags.ml[81,3829+18])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[81,3829+19]..lib/clflags.ml[81,3829+24])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[82,3885+4]..lib/clflags.ml[82,3885+16])
          Tpat_var "nopromptcont/335"
        expression (lib/clflags.ml[82,3885+19]..lib/clflags.ml[82,3885+28])
          Texp_apply
          expression (lib/clflags.ml[82,3885+19]..lib/clflags.ml[82,3885+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[82,3885+23]..lib/clflags.ml[82,3885+28])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[83,3945+4]..lib/clflags.ml[83,3945+13])
          Tpat_var "init_file/336"
        expression (lib/clflags.ml[83,3945+16]..lib/clflags.ml[83,3945+42])
          Texp_apply
          expression (lib/clflags.ml[83,3945+16]..lib/clflags.ml[83,3945+19])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[83,3945+21]..lib/clflags.ml[83,3945+25])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[83,3945+28]..lib/clflags.ml[83,3945+41])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[83,3945+28]..lib/clflags.ml[83,3945+34])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "None"
                []
          ]
      <def>
        pattern (lib/clflags.ml[84,4002+4]..lib/clflags.ml[84,4002+10])
          Tpat_var "noinit/337"
        expression (lib/clflags.ml[84,4002+13]..lib/clflags.ml[84,4002+22])
          Texp_apply
          expression (lib/clflags.ml[84,4002+13]..lib/clflags.ml[84,4002+16])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[84,4002+17]..lib/clflags.ml[84,4002+22])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[86,4116+4]..lib/clflags.ml[86,4116+13])
          Tpat_var "use_prims/338"
        expression (lib/clflags.ml[86,4116+16]..lib/clflags.ml[86,4116+22])
          Texp_apply
          expression (lib/clflags.ml[86,4116+16]..lib/clflags.ml[86,4116+19])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[86,4116+20]..lib/clflags.ml[86,4116+22])
                Texp_constant Const_string("",(lib/clflags.ml[86,4116+21]..lib/clflags.ml[86,4116+21]),None)
          ]
      <def>
        pattern (lib/clflags.ml[87,4177+4]..lib/clflags.ml[87,4177+15])
          Tpat_var "use_runtime/339"
        expression (lib/clflags.ml[87,4177+18]..lib/clflags.ml[87,4177+24])
          Texp_apply
          expression (lib/clflags.ml[87,4177+18]..lib/clflags.ml[87,4177+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[87,4177+22]..lib/clflags.ml[87,4177+24])
                Texp_constant Const_string("",(lib/clflags.ml[87,4177+23]..lib/clflags.ml[87,4177+23]),None)
          ]
      <def>
        pattern (lib/clflags.ml[88,4240+4]..lib/clflags.ml[88,4240+10])
          Tpat_var "plugin/340"
        expression (lib/clflags.ml[88,4240+13]..lib/clflags.ml[88,4240+22])
          Texp_apply
          expression (lib/clflags.ml[88,4240+13]..lib/clflags.ml[88,4240+16])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[88,4240+17]..lib/clflags.ml[88,4240+22])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[89,4298+4]..lib/clflags.ml[89,4298+13])
          Tpat_var "principal/341"
        expression (lib/clflags.ml[89,4298+16]..lib/clflags.ml[89,4298+25])
          Texp_apply
          expression (lib/clflags.ml[89,4298+16]..lib/clflags.ml[89,4298+19])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[89,4298+20]..lib/clflags.ml[89,4298+25])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[90,4355+4]..lib/clflags.ml[90,4355+14])
          Tpat_var "real_paths/342"
        expression (lib/clflags.ml[90,4355+17]..lib/clflags.ml[90,4355+25])
          Texp_apply
          expression (lib/clflags.ml[90,4355+17]..lib/clflags.ml[90,4355+20])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[90,4355+21]..lib/clflags.ml[90,4355+25])
                Texp_construct "true"
                []
          ]
      <def>
        pattern (lib/clflags.ml[91,4414+4]..lib/clflags.ml[91,4414+19])
          Tpat_var "recursive_types/343"
        expression (lib/clflags.ml[91,4414+22]..lib/clflags.ml[91,4414+31])
          Texp_apply
          expression (lib/clflags.ml[91,4414+22]..lib/clflags.ml[91,4414+25])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[91,4414+26]..lib/clflags.ml[91,4414+31])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[92,4470+4]..lib/clflags.ml[92,4470+19])
          Tpat_var "strict_sequence/344"
        expression (lib/clflags.ml[92,4470+22]..lib/clflags.ml[92,4470+31])
          Texp_apply
          expression (lib/clflags.ml[92,4470+22]..lib/clflags.ml[92,4470+25])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[92,4470+26]..lib/clflags.ml[92,4470+31])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[93,4533+4]..lib/clflags.ml[93,4533+18])
          Tpat_var "strict_formats/345"
        expression (lib/clflags.ml[93,4533+21]..lib/clflags.ml[93,4533+29])
          Texp_apply
          expression (lib/clflags.ml[93,4533+21]..lib/clflags.ml[93,4533+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[93,4533+25]..lib/clflags.ml[93,4533+29])
                Texp_construct "true"
                []
          ]
      <def>
        pattern (lib/clflags.ml[94,4595+4]..lib/clflags.ml[94,4595+24])
          Tpat_var "applicative_functors/346"
        expression (lib/clflags.ml[94,4595+27]..lib/clflags.ml[94,4595+35])
          Texp_apply
          expression (lib/clflags.ml[94,4595+27]..lib/clflags.ml[94,4595+30])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[94,4595+31]..lib/clflags.ml[94,4595+35])
                Texp_construct "true"
                []
          ]
      <def>
        pattern (lib/clflags.ml[95,4655+4]..lib/clflags.ml[95,4655+16])
          Tpat_var "make_runtime/347"
        expression (lib/clflags.ml[95,4655+19]..lib/clflags.ml[95,4655+28])
          Texp_apply
          expression (lib/clflags.ml[95,4655+19]..lib/clflags.ml[95,4655+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[95,4655+23]..lib/clflags.ml[95,4655+28])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[96,4715+4]..lib/clflags.ml[96,4715+14])
          Tpat_var "c_compiler/348"
        expression (lib/clflags.ml[96,4715+17]..lib/clflags.ml[96,4715+42])
          Texp_apply
          expression (lib/clflags.ml[96,4715+17]..lib/clflags.ml[96,4715+20])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[96,4715+22]..lib/clflags.ml[96,4715+26])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[96,4715+28]..lib/clflags.ml[96,4715+41])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[96,4715+28]..lib/clflags.ml[96,4715+34])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "None"
                []
          ]
      <def>
        pattern (lib/clflags.ml[97,4768+4]..lib/clflags.ml[97,4768+16])
          Tpat_var "no_auto_link/349"
        expression (lib/clflags.ml[97,4768+19]..lib/clflags.ml[97,4768+28])
          Texp_apply
          expression (lib/clflags.ml[97,4768+19]..lib/clflags.ml[97,4768+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[97,4768+23]..lib/clflags.ml[97,4768+28])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[98,4826+4]..lib/clflags.ml[98,4826+12])
          Tpat_var "dllpaths/350"
        expression (lib/clflags.ml[98,4826+15]..lib/clflags.ml[98,4826+37])
          Texp_apply
          expression (lib/clflags.ml[98,4826+15]..lib/clflags.ml[98,4826+18])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[98,4826+20]..lib/clflags.ml[98,4826+22])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[98,4826+25]..lib/clflags.ml[98,4826+36])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/clflags.ml[98,4826+25]..lib/clflags.ml[98,4826+31])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "[]"
                []
          ]
      <def>
        pattern (lib/clflags.ml[99,4881+4]..lib/clflags.ml[99,4881+16])
          Tpat_var "make_package/351"
        expression (lib/clflags.ml[99,4881+19]..lib/clflags.ml[99,4881+28])
          Texp_apply
          expression (lib/clflags.ml[99,4881+19]..lib/clflags.ml[99,4881+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[99,4881+23]..lib/clflags.ml[99,4881+28])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[100,4933+4]..lib/clflags.ml[100,4933+15])
          Tpat_var "for_package/352"
        expression (lib/clflags.ml[100,4933+18]..lib/clflags.ml[100,4933+43])
          Texp_apply
          expression (lib/clflags.ml[100,4933+18]..lib/clflags.ml[100,4933+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[100,4933+23]..lib/clflags.ml[100,4933+27])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[100,4933+29]..lib/clflags.ml[100,4933+42])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[100,4933+29]..lib/clflags.ml[100,4933+35])
                        Ttyp_constr "string/15!"
                        []
                    ]
                Texp_construct "None"
                []
          ]
      <def>
        pattern (lib/clflags.ml[101,4993+4]..lib/clflags.ml[101,4993+14])
          Tpat_var "error_size/353"
        expression (lib/clflags.ml[101,4993+17]..lib/clflags.ml[101,4993+24])
          Texp_apply
          expression (lib/clflags.ml[101,4993+17]..lib/clflags.ml[101,4993+20])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[101,4993+21]..lib/clflags.ml[101,4993+24])
                Texp_constant Const_int 500
          ]
      <def>
        pattern (lib/clflags.ml[102,5051+4]..lib/clflags.ml[102,5051+20])
          Tpat_var "float_const_prop/354"
        expression (lib/clflags.ml[102,5051+23]..lib/clflags.ml[102,5051+31])
          Texp_apply
          expression (lib/clflags.ml[102,5051+23]..lib/clflags.ml[102,5051+26])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[102,5051+27]..lib/clflags.ml[102,5051+31])
                Texp_construct "true"
                []
          ]
      <def>
        pattern (lib/clflags.ml[103,5118+4]..lib/clflags.ml[103,5118+23])
          Tpat_var "transparent_modules/355"
        expression (lib/clflags.ml[103,5118+26]..lib/clflags.ml[103,5118+35])
          Texp_apply
          expression (lib/clflags.ml[103,5118+26]..lib/clflags.ml[103,5118+29])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[103,5118+30]..lib/clflags.ml[103,5118+35])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[104,5175+0]..lib/clflags.ml[104,5175+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[104,5175+4]..lib/clflags.ml[104,5175+14])
          Tpat_var "unique_ids/356"
        expression (lib/clflags.ml[104,5175+17]..lib/clflags.ml[104,5175+25])
          Texp_apply
          expression (lib/clflags.ml[104,5175+17]..lib/clflags.ml[104,5175+20])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[104,5175+21]..lib/clflags.ml[104,5175+25])
                Texp_construct "true"
                []
          ]
    ]
  structure_item (lib/clflags.ml[105,5238+0]..lib/clflags.ml[105,5238+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[105,5238+4]..lib/clflags.ml[105,5238+13])
          Tpat_var "locations/357"
        expression (lib/clflags.ml[105,5238+16]..lib/clflags.ml[105,5238+24])
          Texp_apply
          expression (lib/clflags.ml[105,5238+16]..lib/clflags.ml[105,5238+19])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[105,5238+20]..lib/clflags.ml[105,5238+24])
                Texp_construct "true"
                []
          ]
    ]
  structure_item (lib/clflags.ml[106,5301+0]..lib/clflags.ml[106,5301+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[106,5301+4]..lib/clflags.ml[106,5301+15])
          Tpat_var "dump_source/358"
        expression (lib/clflags.ml[106,5301+18]..lib/clflags.ml[106,5301+27])
          Texp_apply
          expression (lib/clflags.ml[106,5301+18]..lib/clflags.ml[106,5301+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[106,5301+22]..lib/clflags.ml[106,5301+27])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[107,5356+0]..lib/clflags.ml[119,6061+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[107,5356+4]..lib/clflags.ml[107,5356+18])
          Tpat_var "dump_parsetree/359"
        expression (lib/clflags.ml[107,5356+21]..lib/clflags.ml[107,5356+30])
          Texp_apply
          expression (lib/clflags.ml[107,5356+21]..lib/clflags.ml[107,5356+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[107,5356+25]..lib/clflags.ml[107,5356+30])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[108,5414+4]..lib/clflags.ml[108,5414+18])
          Tpat_var "dump_typedtree/360"
        expression (lib/clflags.ml[108,5414+21]..lib/clflags.ml[108,5414+30])
          Texp_apply
          expression (lib/clflags.ml[108,5414+21]..lib/clflags.ml[108,5414+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[108,5414+25]..lib/clflags.ml[108,5414+30])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[109,5472+4]..lib/clflags.ml[109,5472+14])
          Tpat_var "dump_shape/361"
        expression (lib/clflags.ml[109,5472+17]..lib/clflags.ml[109,5472+26])
          Texp_apply
          expression (lib/clflags.ml[109,5472+17]..lib/clflags.ml[109,5472+20])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[109,5472+21]..lib/clflags.ml[109,5472+26])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[110,5526+4]..lib/clflags.ml[110,5526+18])
          Tpat_var "dump_rawlambda/362"
        expression (lib/clflags.ml[110,5526+21]..lib/clflags.ml[110,5526+30])
          Texp_apply
          expression (lib/clflags.ml[110,5526+21]..lib/clflags.ml[110,5526+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[110,5526+25]..lib/clflags.ml[110,5526+30])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[111,5584+4]..lib/clflags.ml[111,5584+15])
          Tpat_var "dump_lambda/363"
        expression (lib/clflags.ml[111,5584+18]..lib/clflags.ml[111,5584+27])
          Texp_apply
          expression (lib/clflags.ml[111,5584+18]..lib/clflags.ml[111,5584+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[111,5584+22]..lib/clflags.ml[111,5584+27])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[112,5639+4]..lib/clflags.ml[112,5639+19])
          Tpat_var "dump_rawclambda/364"
        expression (lib/clflags.ml[112,5639+22]..lib/clflags.ml[112,5639+31])
          Texp_apply
          expression (lib/clflags.ml[112,5639+22]..lib/clflags.ml[112,5639+25])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[112,5639+26]..lib/clflags.ml[112,5639+31])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[113,5698+4]..lib/clflags.ml[113,5698+16])
          Tpat_var "dump_clambda/365"
        expression (lib/clflags.ml[113,5698+19]..lib/clflags.ml[113,5698+28])
          Texp_apply
          expression (lib/clflags.ml[113,5698+19]..lib/clflags.ml[113,5698+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[113,5698+23]..lib/clflags.ml[113,5698+28])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[114,5754+4]..lib/clflags.ml[114,5754+19])
          Tpat_var "dump_rawflambda/366"
        expression (lib/clflags.ml[114,5754+22]..lib/clflags.ml[114,5754+31])
          Texp_apply
          expression (lib/clflags.ml[114,5754+22]..lib/clflags.ml[114,5754+25])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[114,5754+26]..lib/clflags.ml[114,5754+31])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[115,5816+4]..lib/clflags.ml[115,5816+16])
          Tpat_var "dump_flambda/367"
        expression (lib/clflags.ml[115,5816+19]..lib/clflags.ml[115,5816+28])
          Texp_apply
          expression (lib/clflags.ml[115,5816+19]..lib/clflags.ml[115,5816+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[115,5816+23]..lib/clflags.ml[115,5816+28])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[116,5872+4]..lib/clflags.ml[116,5872+20])
          Tpat_var "dump_flambda_let/368"
        expression (lib/clflags.ml[116,5872+23]..lib/clflags.ml[116,5872+46])
          Texp_apply
          expression (lib/clflags.ml[116,5872+23]..lib/clflags.ml[116,5872+26])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[116,5872+28]..lib/clflags.ml[116,5872+32])
                extra
                  Texp_constraint
                  core_type (lib/clflags.ml[116,5872+35]..lib/clflags.ml[116,5872+45])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[116,5872+35]..lib/clflags.ml[116,5872+38])
                        Ttyp_constr "int/1!"
                        []
                    ]
                Texp_construct "None"
                []
          ]
      <def>
        pattern (lib/clflags.ml[117,5943+4]..lib/clflags.ml[117,5943+24])
          Tpat_var "dump_flambda_verbose/369"
        expression (lib/clflags.ml[117,5943+27]..lib/clflags.ml[117,5943+36])
          Texp_apply
          expression (lib/clflags.ml[117,5943+27]..lib/clflags.ml[117,5943+30])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[117,5943+31]..lib/clflags.ml[117,5943+36])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[118,6007+4]..lib/clflags.ml[118,6007+14])
          Tpat_var "dump_instr/370"
        expression (lib/clflags.ml[118,6007+17]..lib/clflags.ml[118,6007+26])
          Texp_apply
          expression (lib/clflags.ml[118,6007+17]..lib/clflags.ml[118,6007+20])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[118,6007+21]..lib/clflags.ml[118,6007+26])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[119,6061+4]..lib/clflags.ml[119,6061+23])
          Tpat_var "keep_camlprimc_file/371"
        expression (lib/clflags.ml[119,6061+26]..lib/clflags.ml[119,6061+35])
          Texp_apply
          expression (lib/clflags.ml[119,6061+26]..lib/clflags.ml[119,6061+29])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[119,6061+30]..lib/clflags.ml[119,6061+35])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[121,6120+0]..lib/clflags.ml[121,6120+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[121,6120+4]..lib/clflags.ml[121,6120+17])
          Tpat_var "keep_asm_file/372"
        expression (lib/clflags.ml[121,6120+20]..lib/clflags.ml[121,6120+29])
          Texp_apply
          expression (lib/clflags.ml[121,6120+20]..lib/clflags.ml[121,6120+23])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[121,6120+24]..lib/clflags.ml[121,6120+29])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[122,6169+0]..lib/clflags.ml[125,6279+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[122,6169+4]..lib/clflags.ml[122,6169+22])
          Tpat_var "optimize_for_speed/373"
        expression (lib/clflags.ml[122,6169+25]..lib/clflags.ml[122,6169+33])
          Texp_apply
          expression (lib/clflags.ml[122,6169+25]..lib/clflags.ml[122,6169+28])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[122,6169+29]..lib/clflags.ml[122,6169+33])
                Texp_construct "true"
                []
          ]
      <def>
        pattern (lib/clflags.ml[123,6224+4]..lib/clflags.ml[123,6224+10])
          Tpat_var "opaque/374"
        expression (lib/clflags.ml[123,6224+13]..lib/clflags.ml[123,6224+22])
          Texp_apply
          expression (lib/clflags.ml[123,6224+13]..lib/clflags.ml[123,6224+16])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[123,6224+17]..lib/clflags.ml[123,6224+22])
                Texp_construct "false"
                []
          ]
      <def>
        pattern (lib/clflags.ml[125,6279+4]..lib/clflags.ml[125,6279+12])
          Tpat_var "dump_cmm/375"
        expression (lib/clflags.ml[125,6279+15]..lib/clflags.ml[125,6279+24])
          Texp_apply
          expression (lib/clflags.ml[125,6279+15]..lib/clflags.ml[125,6279+18])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[125,6279+19]..lib/clflags.ml[125,6279+24])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[126,6331+0]..lib/clflags.ml[126,6331+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[126,6331+4]..lib/clflags.ml[126,6331+18])
          Tpat_var "dump_selection/376"
        expression (lib/clflags.ml[126,6331+21]..lib/clflags.ml[126,6331+30])
          Texp_apply
          expression (lib/clflags.ml[126,6331+21]..lib/clflags.ml[126,6331+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[126,6331+25]..lib/clflags.ml[126,6331+30])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[127,6383+0]..lib/clflags.ml[127,6383+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[127,6383+4]..lib/clflags.ml[127,6383+12])
          Tpat_var "dump_cse/377"
        expression (lib/clflags.ml[127,6383+15]..lib/clflags.ml[127,6383+24])
          Texp_apply
          expression (lib/clflags.ml[127,6383+15]..lib/clflags.ml[127,6383+18])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[127,6383+19]..lib/clflags.ml[127,6383+24])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[128,6435+0]..lib/clflags.ml[128,6435+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[128,6435+4]..lib/clflags.ml[128,6435+13])
          Tpat_var "dump_live/378"
        expression (lib/clflags.ml[128,6435+16]..lib/clflags.ml[128,6435+25])
          Texp_apply
          expression (lib/clflags.ml[128,6435+16]..lib/clflags.ml[128,6435+19])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[128,6435+20]..lib/clflags.ml[128,6435+25])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[129,6488+0]..lib/clflags.ml[129,6488+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[129,6488+4]..lib/clflags.ml[129,6488+14])
          Tpat_var "dump_spill/379"
        expression (lib/clflags.ml[129,6488+17]..lib/clflags.ml[129,6488+26])
          Texp_apply
          expression (lib/clflags.ml[129,6488+17]..lib/clflags.ml[129,6488+20])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[129,6488+21]..lib/clflags.ml[129,6488+26])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[130,6542+0]..lib/clflags.ml[130,6542+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[130,6542+4]..lib/clflags.ml[130,6542+14])
          Tpat_var "dump_split/380"
        expression (lib/clflags.ml[130,6542+17]..lib/clflags.ml[130,6542+26])
          Texp_apply
          expression (lib/clflags.ml[130,6542+17]..lib/clflags.ml[130,6542+20])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[130,6542+21]..lib/clflags.ml[130,6542+26])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[131,6596+0]..lib/clflags.ml[131,6596+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[131,6596+4]..lib/clflags.ml[131,6596+15])
          Tpat_var "dump_interf/381"
        expression (lib/clflags.ml[131,6596+18]..lib/clflags.ml[131,6596+27])
          Texp_apply
          expression (lib/clflags.ml[131,6596+18]..lib/clflags.ml[131,6596+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[131,6596+22]..lib/clflags.ml[131,6596+27])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[132,6651+0]..lib/clflags.ml[132,6651+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[132,6651+4]..lib/clflags.ml[132,6651+15])
          Tpat_var "dump_prefer/382"
        expression (lib/clflags.ml[132,6651+18]..lib/clflags.ml[132,6651+27])
          Texp_apply
          expression (lib/clflags.ml[132,6651+18]..lib/clflags.ml[132,6651+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[132,6651+22]..lib/clflags.ml[132,6651+27])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[133,6706+0]..lib/clflags.ml[133,6706+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[133,6706+4]..lib/clflags.ml[133,6706+17])
          Tpat_var "dump_regalloc/383"
        expression (lib/clflags.ml[133,6706+20]..lib/clflags.ml[133,6706+29])
          Texp_apply
          expression (lib/clflags.ml[133,6706+20]..lib/clflags.ml[133,6706+23])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[133,6706+24]..lib/clflags.ml[133,6706+29])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[134,6760+0]..lib/clflags.ml[134,6760+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[134,6760+4]..lib/clflags.ml[134,6760+15])
          Tpat_var "dump_reload/384"
        expression (lib/clflags.ml[134,6760+18]..lib/clflags.ml[134,6760+27])
          Texp_apply
          expression (lib/clflags.ml[134,6760+18]..lib/clflags.ml[134,6760+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[134,6760+22]..lib/clflags.ml[134,6760+27])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[135,6815+0]..lib/clflags.ml[135,6815+31])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[135,6815+4]..lib/clflags.ml[135,6815+19])
          Tpat_var "dump_scheduling/385"
        expression (lib/clflags.ml[135,6815+22]..lib/clflags.ml[135,6815+31])
          Texp_apply
          expression (lib/clflags.ml[135,6815+22]..lib/clflags.ml[135,6815+25])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[135,6815+26]..lib/clflags.ml[135,6815+31])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[136,6874+0]..lib/clflags.ml[136,6874+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[136,6874+4]..lib/clflags.ml[136,6874+15])
          Tpat_var "dump_linear/386"
        expression (lib/clflags.ml[136,6874+18]..lib/clflags.ml[136,6874+27])
          Texp_apply
          expression (lib/clflags.ml[136,6874+18]..lib/clflags.ml[136,6874+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[136,6874+22]..lib/clflags.ml[136,6874+27])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[137,6929+0]..lib/clflags.ml[137,6929+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[137,6929+4]..lib/clflags.ml[137,6929+17])
          Tpat_var "dump_interval/387"
        expression (lib/clflags.ml[137,6929+20]..lib/clflags.ml[137,6929+29])
          Texp_apply
          expression (lib/clflags.ml[137,6929+20]..lib/clflags.ml[137,6929+23])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[137,6929+24]..lib/clflags.ml[137,6929+29])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[138,6986+0]..lib/clflags.ml[138,6986+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[138,6986+4]..lib/clflags.ml[138,6986+21])
          Tpat_var "keep_startup_file/388"
        expression (lib/clflags.ml[138,6986+24]..lib/clflags.ml[138,6986+33])
          Texp_apply
          expression (lib/clflags.ml[138,6986+24]..lib/clflags.ml[138,6986+27])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[138,6986+28]..lib/clflags.ml[138,6986+33])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[139,7042+0]..lib/clflags.ml[139,7042+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[139,7042+4]..lib/clflags.ml[139,7042+16])
          Tpat_var "dump_combine/389"
        expression (lib/clflags.ml[139,7042+19]..lib/clflags.ml[139,7042+28])
          Texp_apply
          expression (lib/clflags.ml[139,7042+19]..lib/clflags.ml[139,7042+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[139,7042+23]..lib/clflags.ml[139,7042+28])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[142,7188+0]..lib/clflags.ml[142,7188+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[142,7188+4]..lib/clflags.ml[142,7188+15])
          Tpat_var "native_code/390"
        expression (lib/clflags.ml[142,7188+18]..lib/clflags.ml[142,7188+27])
          Texp_apply
          expression (lib/clflags.ml[142,7188+18]..lib/clflags.ml[142,7188+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[142,7188+22]..lib/clflags.ml[142,7188+27])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[144,7262+0]..lib/clflags.ml[144,7262+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[144,7262+4]..lib/clflags.ml[144,7262+15])
          Tpat_var "force_slash/391"
        expression (lib/clflags.ml[144,7262+18]..lib/clflags.ml[144,7262+27])
          Texp_apply
          expression (lib/clflags.ml[144,7262+18]..lib/clflags.ml[144,7262+21])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[144,7262+22]..lib/clflags.ml[144,7262+27])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[145,7321+0]..lib/clflags.ml[145,7321+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[145,7321+4]..lib/clflags.ml[145,7321+18])
          Tpat_var "clambda_checks/392"
        expression (lib/clflags.ml[145,7321+21]..lib/clflags.ml[145,7321+30])
          Texp_apply
          expression (lib/clflags.ml[145,7321+21]..lib/clflags.ml[145,7321+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[145,7321+25]..lib/clflags.ml[145,7321+30])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[152,7599+0]..lib/clflags.ml[152,7599+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[152,7599+4]..lib/clflags.ml[152,7599+20])
          Tpat_var "dont_write_files/393"
        expression (lib/clflags.ml[152,7599+23]..lib/clflags.ml[152,7599+32])
          Texp_apply
          expression (lib/clflags.ml[152,7599+23]..lib/clflags.ml[152,7599+26])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[152,7599+27]..lib/clflags.ml[152,7599+32])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[154,7673+0]..lib/clflags.ml[154,7673+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[154,7673+4]..lib/clflags.ml[154,7673+22])
          Tpat_var "insn_sched_default/394"
        expression (lib/clflags.ml[154,7673+25]..lib/clflags.ml[154,7673+29])
          Texp_construct "true"
          []
    ]
  structure_item (lib/clflags.ml[155,7703+0]..lib/clflags.ml[155,7703+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[155,7703+4]..lib/clflags.ml[155,7703+14])
          Tpat_var "insn_sched/395"
        expression (lib/clflags.ml[155,7703+17]..lib/clflags.ml[155,7703+39])
          Texp_apply
          expression (lib/clflags.ml[155,7703+17]..lib/clflags.ml[155,7703+20])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[155,7703+21]..lib/clflags.ml[155,7703+39])
                Texp_ident "insn_sched_default/394"
          ]
    ]
  structure_item (lib/clflags.ml[164,8002+0]..lib/clflags.ml[164,8002+22])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[164,8002+4]..lib/clflags.ml[164,8002+10])
          Tpat_var "shared/396"
        expression (lib/clflags.ml[164,8002+13]..lib/clflags.ml[164,8002+22])
          Texp_apply
          expression (lib/clflags.ml[164,8002+13]..lib/clflags.ml[164,8002+16])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[164,8002+17]..lib/clflags.ml[164,8002+22])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[165,8039+0]..lib/clflags.ml[165,8039+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[165,8039+4]..lib/clflags.ml[165,8039+10])
          Tpat_var "dlcode/397"
        expression (lib/clflags.ml[165,8039+13]..lib/clflags.ml[165,8039+21])
          Texp_apply
          expression (lib/clflags.ml[165,8039+13]..lib/clflags.ml[165,8039+16])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[165,8039+17]..lib/clflags.ml[165,8039+21])
                Texp_construct "true"
                []
          ]
    ]
  structure_item (lib/clflags.ml[171,8247+0]..lib/clflags.ml[171,8247+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[171,8247+4]..lib/clflags.ml[171,8247+19])
          Tpat_var "runtime_variant/398"
        expression (lib/clflags.ml[171,8247+22]..lib/clflags.ml[171,8247+28])
          Texp_apply
          expression (lib/clflags.ml[171,8247+22]..lib/clflags.ml[171,8247+25])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[171,8247+26]..lib/clflags.ml[171,8247+28])
                Texp_constant Const_string("",(lib/clflags.ml[171,8247+27]..lib/clflags.ml[171,8247+27]),None)
          ]
    ]
  structure_item (lib/clflags.ml[173,8277+0]..lib/clflags.ml[173,8277+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[173,8277+4]..lib/clflags.ml[173,8277+16])
          Tpat_var "with_runtime/399"
        expression (lib/clflags.ml[173,8277+19]..lib/clflags.ml[173,8277+27])
          Texp_apply
          expression (lib/clflags.ml[173,8277+19]..lib/clflags.ml[173,8277+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[173,8277+23]..lib/clflags.ml[173,8277+27])
                Texp_construct "true"
                []
          ]
    ]
  structure_item (lib/clflags.ml[175,8334+0]..lib/clflags.ml[175,8334+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[175,8334+4]..lib/clflags.ml[175,8334+13])
          Tpat_var "keep_docs/400"
        expression (lib/clflags.ml[175,8334+16]..lib/clflags.ml[175,8334+25])
          Texp_apply
          expression (lib/clflags.ml[175,8334+16]..lib/clflags.ml[175,8334+19])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[175,8334+20]..lib/clflags.ml[175,8334+25])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[176,8390+0]..lib/clflags.ml[176,8390+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[176,8390+4]..lib/clflags.ml[176,8390+13])
          Tpat_var "keep_locs/401"
        expression (lib/clflags.ml[176,8390+16]..lib/clflags.ml[176,8390+24])
          Texp_apply
          expression (lib/clflags.ml[176,8390+16]..lib/clflags.ml[176,8390+19])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[176,8390+20]..lib/clflags.ml[176,8390+24])
                Texp_construct "true"
                []
          ]
    ]
  structure_item (lib/clflags.ml[178,8447+0]..lib/clflags.ml[178,8447+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[178,8447+4]..lib/clflags.ml[178,8447+20])
          Tpat_var "classic_inlining/402"
        expression (lib/clflags.ml[178,8447+23]..lib/clflags.ml[178,8447+32])
          Texp_apply
          expression (lib/clflags.ml[178,8447+23]..lib/clflags.ml[178,8447+26])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[178,8447+27]..lib/clflags.ml[178,8447+32])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[179,8502+0]..lib/clflags.ml[179,8502+31])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[179,8502+4]..lib/clflags.ml[179,8502+19])
          Tpat_var "inlining_report/403"
        expression (lib/clflags.ml[179,8502+22]..lib/clflags.ml[179,8502+31])
          Texp_apply
          expression (lib/clflags.ml[179,8502+22]..lib/clflags.ml[179,8502+25])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[179,8502+26]..lib/clflags.ml[179,8502+31])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[184,8708+0]..lib/clflags.ml[184,8708+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[184,8708+4]..lib/clflags.ml[184,8708+21])
          Tpat_var "function_sections/404"
        expression (lib/clflags.ml[184,8708+24]..lib/clflags.ml[184,8708+33])
          Texp_apply
          expression (lib/clflags.ml[184,8708+24]..lib/clflags.ml[184,8708+27])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[184,8708+28]..lib/clflags.ml[184,8708+33])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[186,8773+0]..lib/clflags.ml[186,8773+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[186,8773+4]..lib/clflags.ml[186,8773+19])
          Tpat_var "simplify_rounds/405"
        expression (lib/clflags.ml[186,8773+22]..lib/clflags.ml[186,8773+30])
          Texp_apply
          expression (lib/clflags.ml[186,8773+22]..lib/clflags.ml[186,8773+25])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[186,8773+26]..lib/clflags.ml[186,8773+30])
                Texp_construct "None"
                []
          ]
    ]
  structure_item (lib/clflags.ml[187,8825+0]..lib/clflags.ml[187,8825+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[187,8825+4]..lib/clflags.ml[187,8825+27])
          Tpat_var "default_simplify_rounds/406"
        expression (lib/clflags.ml[187,8825+30]..lib/clflags.ml[187,8825+35])
          Texp_apply
          expression (lib/clflags.ml[187,8825+30]..lib/clflags.ml[187,8825+33])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[187,8825+34]..lib/clflags.ml[187,8825+35])
                Texp_constant Const_int 1
          ]
    ]
  structure_item (lib/clflags.ml[188,8882+0]..lib/clflags.ml[191,8965+15])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[188,8882+4]..lib/clflags.ml[188,8882+10])
          Tpat_var "rounds/407"
        expression (lib/clflags.ml[188,8882+11]..lib/clflags.ml[191,8965+15]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/clflags.ml[188,8882+11]..lib/clflags.ml[188,8882+13])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/clflags.ml[189,8898+2]..lib/clflags.ml[191,8965+15])
              Texp_match
              expression (lib/clflags.ml[189,8898+8]..lib/clflags.ml[189,8898+24])
                Texp_apply
                expression (lib/clflags.ml[189,8898+8]..lib/clflags.ml[189,8898+9])
                  Texp_ident "Stdlib!.!"
                [
                  <arg>
                    Nolabel
                    expression (lib/clflags.ml[189,8898+9]..lib/clflags.ml[189,8898+24])
                      Texp_ident "simplify_rounds/405"
                ]
              [
                <case>
                  pattern (lib/clflags.ml[190,8928+4]..lib/clflags.ml[190,8928+8])
                    Tpat_value
                    pattern (lib/clflags.ml[190,8928+4]..lib/clflags.ml[190,8928+8])
                      Tpat_construct "None"
                      []
                      None
                  expression (lib/clflags.ml[190,8928+12]..lib/clflags.ml[190,8928+36])
                    Texp_apply
                    expression (lib/clflags.ml[190,8928+12]..lib/clflags.ml[190,8928+13])
                      Texp_ident "Stdlib!.!"
                    [
                      <arg>
                        Nolabel
                        expression (lib/clflags.ml[190,8928+13]..lib/clflags.ml[190,8928+36])
                          Texp_ident "default_simplify_rounds/406"
                    ]
                <case>
                  pattern (lib/clflags.ml[191,8965+4]..lib/clflags.ml[191,8965+10])
                    Tpat_value
                    pattern (lib/clflags.ml[191,8965+4]..lib/clflags.ml[191,8965+10])
                      Tpat_construct "Some"
                      [
                        pattern (lib/clflags.ml[191,8965+9]..lib/clflags.ml[191,8965+10])
                          Tpat_var "r/409"
                      ]
                      None
                  expression (lib/clflags.ml[191,8965+14]..lib/clflags.ml[191,8965+15])
                    Texp_ident "r/409"
              ]
    ]
  structure_item (lib/clflags.ml[193,8982+0]..lib/clflags.ml[193,8982+34])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[193,8982+4]..lib/clflags.ml[193,8982+28])
          Tpat_var "default_inline_threshold/411"
        expression (lib/clflags.ml[193,8982+31]..lib/clflags.ml[193,8982+34])
          Texp_constant Const_float 10.
    ]
  structure_item (lib/clflags.ml[194,9017+0]..lib/clflags.ml[194,9017+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[194,9017+4]..lib/clflags.ml[194,9017+30])
          Tpat_var "inline_toplevel_multiplier/412"
        expression (lib/clflags.ml[194,9017+33]..lib/clflags.ml[194,9017+35])
          Texp_constant Const_int 16
    ]
  structure_item (lib/clflags.ml[195,9053+0]..lib/clflags.ml[196,9093+79])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[195,9053+4]..lib/clflags.ml[195,9053+37])
          Tpat_var "default_inline_toplevel_threshold/413"
        expression (lib/clflags.ml[196,9093+2]..lib/clflags.ml[196,9093+79])
          Texp_apply
          expression (lib/clflags.ml[196,9093+2]..lib/clflags.ml[196,9093+14])
            Texp_ident "Stdlib!.int_of_float"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[196,9093+15]..lib/clflags.ml[196,9093+79])
                Texp_apply
                expression (lib/clflags.ml[196,9093+51]..lib/clflags.ml[196,9093+53])
                  Texp_ident "Stdlib!.*."
                [
                  <arg>
                    Nolabel
                    expression (lib/clflags.ml[196,9093+16]..lib/clflags.ml[196,9093+50])
                      Texp_apply
                      expression (lib/clflags.ml[196,9093+17]..lib/clflags.ml[196,9093+22])
                        Texp_ident "Stdlib!.float"
                      [
                        <arg>
                          Nolabel
                          expression (lib/clflags.ml[196,9093+23]..lib/clflags.ml[196,9093+49])
                            Texp_ident "inline_toplevel_multiplier/412"
                      ]
                  <arg>
                    Nolabel
                    expression (lib/clflags.ml[196,9093+54]..lib/clflags.ml[196,9093+78])
                      Texp_ident "default_inline_threshold/411"
                ]
          ]
    ]
  structure_item (lib/clflags.ml[197,9173+0]..lib/clflags.ml[197,9173+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[197,9173+4]..lib/clflags.ml[197,9173+28])
          Tpat_var "default_inline_call_cost/414"
        expression (lib/clflags.ml[197,9173+31]..lib/clflags.ml[197,9173+32])
          Texp_constant Const_int 5
    ]
  structure_item (lib/clflags.ml[198,9206+0]..lib/clflags.ml[198,9206+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[198,9206+4]..lib/clflags.ml[198,9206+29])
          Tpat_var "default_inline_alloc_cost/415"
        expression (lib/clflags.ml[198,9206+32]..lib/clflags.ml[198,9206+33])
          Texp_constant Const_int 7
    ]
  structure_item (lib/clflags.ml[199,9240+0]..lib/clflags.ml[199,9240+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[199,9240+4]..lib/clflags.ml[199,9240+28])
          Tpat_var "default_inline_prim_cost/416"
        expression (lib/clflags.ml[199,9240+31]..lib/clflags.ml[199,9240+32])
          Texp_constant Const_int 3
    ]
  structure_item (lib/clflags.ml[200,9273+0]..lib/clflags.ml[200,9273+34])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[200,9273+4]..lib/clflags.ml[200,9273+30])
          Tpat_var "default_inline_branch_cost/417"
        expression (lib/clflags.ml[200,9273+33]..lib/clflags.ml[200,9273+34])
          Texp_constant Const_int 5
    ]
  structure_item (lib/clflags.ml[201,9308+0]..lib/clflags.ml[201,9308+36])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[201,9308+4]..lib/clflags.ml[201,9308+32])
          Tpat_var "default_inline_indirect_cost/418"
        expression (lib/clflags.ml[201,9308+35]..lib/clflags.ml[201,9308+36])
          Texp_constant Const_int 4
    ]
  structure_item (lib/clflags.ml[202,9345+0]..lib/clflags.ml[202,9345+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[202,9345+4]..lib/clflags.ml[202,9345+32])
          Tpat_var "default_inline_branch_factor/419"
        expression (lib/clflags.ml[202,9345+35]..lib/clflags.ml[202,9345+38])
          Texp_constant Const_float 0.1
    ]
  structure_item (lib/clflags.ml[203,9384+0]..lib/clflags.ml[203,9384+41])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[203,9384+4]..lib/clflags.ml[203,9384+34])
          Tpat_var "default_inline_lifting_benefit/420"
        expression (lib/clflags.ml[203,9384+37]..lib/clflags.ml[203,9384+41])
          Texp_constant Const_int 1300
    ]
  structure_item (lib/clflags.ml[204,9426+0]..lib/clflags.ml[204,9426+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[204,9426+4]..lib/clflags.ml[204,9426+29])
          Tpat_var "default_inline_max_unroll/421"
        expression (lib/clflags.ml[204,9426+32]..lib/clflags.ml[204,9426+33])
          Texp_constant Const_int 0
    ]
  structure_item (lib/clflags.ml[205,9460+0]..lib/clflags.ml[205,9460+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[205,9460+4]..lib/clflags.ml[205,9460+28])
          Tpat_var "default_inline_max_depth/422"
        expression (lib/clflags.ml[205,9460+31]..lib/clflags.ml[205,9460+32])
          Texp_constant Const_int 1
    ]
  structure_item (lib/clflags.ml[227,10523+0]..lib/clflags.ml[227,10523+37])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[227,10523+4]..lib/clflags.ml[227,10523+26])
          Tpat_var "unbox_specialised_args/423"
        expression (lib/clflags.ml[227,10523+29]..lib/clflags.ml[227,10523+37])
          Texp_apply
          expression (lib/clflags.ml[227,10523+29]..lib/clflags.ml[227,10523+32])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[227,10523+33]..lib/clflags.ml[227,10523+37])
                Texp_construct "true"
                []
          ]
    ]
  structure_item (lib/clflags.ml[228,10596+0]..lib/clflags.ml[228,10596+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[228,10596+4]..lib/clflags.ml[228,10596+31])
          Tpat_var "unbox_free_vars_of_closures/424"
        expression (lib/clflags.ml[228,10596+34]..lib/clflags.ml[228,10596+42])
          Texp_apply
          expression (lib/clflags.ml[228,10596+34]..lib/clflags.ml[228,10596+37])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[228,10596+38]..lib/clflags.ml[228,10596+42])
                Texp_construct "true"
                []
          ]
    ]
  structure_item (lib/clflags.ml[229,10639+0]..lib/clflags.ml[229,10639+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[229,10639+4]..lib/clflags.ml[229,10639+18])
          Tpat_var "unbox_closures/425"
        expression (lib/clflags.ml[229,10639+21]..lib/clflags.ml[229,10639+30])
          Texp_apply
          expression (lib/clflags.ml[229,10639+21]..lib/clflags.ml[229,10639+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[229,10639+25]..lib/clflags.ml[229,10639+30])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[230,10701+0]..lib/clflags.ml[230,10701+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[230,10701+4]..lib/clflags.ml[230,10701+33])
          Tpat_var "default_unbox_closures_factor/426"
        expression (lib/clflags.ml[230,10701+36]..lib/clflags.ml[230,10701+38])
          Texp_constant Const_int 10
    ]
  structure_item (lib/clflags.ml[231,10740+0]..lib/clflags.ml[232,10768+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[231,10740+4]..lib/clflags.ml[231,10740+25])
          Tpat_var "unbox_closures_factor/427"
        expression (lib/clflags.ml[232,10768+2]..lib/clflags.ml[232,10768+35])
          Texp_apply
          expression (lib/clflags.ml[232,10768+2]..lib/clflags.ml[232,10768+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[232,10768+6]..lib/clflags.ml[232,10768+35])
                Texp_ident "default_unbox_closures_factor/426"
          ]
    ]
  structure_item (lib/clflags.ml[233,10838+0]..lib/clflags.ml[233,10838+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[233,10838+4]..lib/clflags.ml[233,10838+27])
          Tpat_var "remove_unused_arguments/428"
        expression (lib/clflags.ml[233,10838+30]..lib/clflags.ml[233,10838+39])
          Texp_apply
          expression (lib/clflags.ml[233,10838+30]..lib/clflags.ml[233,10838+33])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[233,10838+34]..lib/clflags.ml[233,10838+39])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[235,10910+0]..lib/clflags.ml[247,11332+1])
    Tstr_type Rec
    [
      type_declaration inlining_arguments/429 (lib/clflags.ml[235,10910+0]..lib/clflags.ml[247,11332+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/clflags.ml[236,10938+2]..lib/clflags.ml[236,10938+32])
                Immutable
                inline_call_cost/430                core_type (lib/clflags.ml[236,10938+21]..lib/clflags.ml[236,10938+31])
                  Ttyp_poly
                  core_type (lib/clflags.ml[236,10938+21]..lib/clflags.ml[236,10938+31])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[236,10938+21]..lib/clflags.ml[236,10938+24])
                        Ttyp_constr "int/1!"
                        []
                    ]
              (lib/clflags.ml[237,10971+2]..lib/clflags.ml[237,10971+33])
                Immutable
                inline_alloc_cost/431                core_type (lib/clflags.ml[237,10971+22]..lib/clflags.ml[237,10971+32])
                  Ttyp_poly
                  core_type (lib/clflags.ml[237,10971+22]..lib/clflags.ml[237,10971+32])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[237,10971+22]..lib/clflags.ml[237,10971+25])
                        Ttyp_constr "int/1!"
                        []
                    ]
              (lib/clflags.ml[238,11005+2]..lib/clflags.ml[238,11005+32])
                Immutable
                inline_prim_cost/432                core_type (lib/clflags.ml[238,11005+21]..lib/clflags.ml[238,11005+31])
                  Ttyp_poly
                  core_type (lib/clflags.ml[238,11005+21]..lib/clflags.ml[238,11005+31])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[238,11005+21]..lib/clflags.ml[238,11005+24])
                        Ttyp_constr "int/1!"
                        []
                    ]
              (lib/clflags.ml[239,11038+2]..lib/clflags.ml[239,11038+34])
                Immutable
                inline_branch_cost/433                core_type (lib/clflags.ml[239,11038+23]..lib/clflags.ml[239,11038+33])
                  Ttyp_poly
                  core_type (lib/clflags.ml[239,11038+23]..lib/clflags.ml[239,11038+33])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[239,11038+23]..lib/clflags.ml[239,11038+26])
                        Ttyp_constr "int/1!"
                        []
                    ]
              (lib/clflags.ml[240,11073+2]..lib/clflags.ml[240,11073+36])
                Immutable
                inline_indirect_cost/434                core_type (lib/clflags.ml[240,11073+25]..lib/clflags.ml[240,11073+35])
                  Ttyp_poly
                  core_type (lib/clflags.ml[240,11073+25]..lib/clflags.ml[240,11073+35])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[240,11073+25]..lib/clflags.ml[240,11073+28])
                        Ttyp_constr "int/1!"
                        []
                    ]
              (lib/clflags.ml[241,11110+2]..lib/clflags.ml[241,11110+38])
                Immutable
                inline_lifting_benefit/435                core_type (lib/clflags.ml[241,11110+27]..lib/clflags.ml[241,11110+37])
                  Ttyp_poly
                  core_type (lib/clflags.ml[241,11110+27]..lib/clflags.ml[241,11110+37])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[241,11110+27]..lib/clflags.ml[241,11110+30])
                        Ttyp_constr "int/1!"
                        []
                    ]
              (lib/clflags.ml[242,11149+2]..lib/clflags.ml[242,11149+38])
                Immutable
                inline_branch_factor/436                core_type (lib/clflags.ml[242,11149+25]..lib/clflags.ml[242,11149+37])
                  Ttyp_poly
                  core_type (lib/clflags.ml[242,11149+25]..lib/clflags.ml[242,11149+37])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[242,11149+25]..lib/clflags.ml[242,11149+30])
                        Ttyp_constr "float/4!"
                        []
                    ]
              (lib/clflags.ml[243,11188+2]..lib/clflags.ml[243,11188+32])
                Immutable
                inline_max_depth/437                core_type (lib/clflags.ml[243,11188+21]..lib/clflags.ml[243,11188+31])
                  Ttyp_poly
                  core_type (lib/clflags.ml[243,11188+21]..lib/clflags.ml[243,11188+31])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[243,11188+21]..lib/clflags.ml[243,11188+24])
                        Ttyp_constr "int/1!"
                        []
                    ]
              (lib/clflags.ml[244,11221+2]..lib/clflags.ml[244,11221+33])
                Immutable
                inline_max_unroll/438                core_type (lib/clflags.ml[244,11221+22]..lib/clflags.ml[244,11221+32])
                  Ttyp_poly
                  core_type (lib/clflags.ml[244,11221+22]..lib/clflags.ml[244,11221+32])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[244,11221+22]..lib/clflags.ml[244,11221+25])
                        Ttyp_constr "int/1!"
                        []
                    ]
              (lib/clflags.ml[245,11255+2]..lib/clflags.ml[245,11255+34])
                Immutable
                inline_threshold/439                core_type (lib/clflags.ml[245,11255+21]..lib/clflags.ml[245,11255+33])
                  Ttyp_poly
                  core_type (lib/clflags.ml[245,11255+21]..lib/clflags.ml[245,11255+33])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[245,11255+21]..lib/clflags.ml[245,11255+26])
                        Ttyp_constr "float/4!"
                        []
                    ]
              (lib/clflags.ml[246,11290+2]..lib/clflags.ml[246,11290+41])
                Immutable
                inline_toplevel_threshold/440                core_type (lib/clflags.ml[246,11290+30]..lib/clflags.ml[246,11290+40])
                  Ttyp_poly
                  core_type (lib/clflags.ml[246,11290+30]..lib/clflags.ml[246,11290+40])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/clflags.ml[246,11290+30]..lib/clflags.ml[246,11290+33])
                        Ttyp_constr "int/1!"
                        []
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/clflags.ml[377,16412+0]..lib/clflags.ml[377,16412+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[377,16412+4]..lib/clflags.ml[377,16412+18])
          Tpat_var "dump_into_file/441"
        expression (lib/clflags.ml[377,16412+21]..lib/clflags.ml[377,16412+30])
          Texp_apply
          expression (lib/clflags.ml[377,16412+21]..lib/clflags.ml[377,16412+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[377,16412+25]..lib/clflags.ml[377,16412+30])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/clflags.ml[378,16465+0]..lib/clflags.ml[378,16465+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[378,16465+4]..lib/clflags.ml[378,16465+12])
          extra
            Tpat_extra_constraint
            core_type (lib/clflags.ml[378,16465+14]..lib/clflags.ml[378,16465+31])
              Ttyp_constr "Stdlib!.ref"
              [
                core_type (lib/clflags.ml[378,16465+14]..lib/clflags.ml[378,16465+27])
                  Ttyp_constr "option/10!"
                  [
                    core_type (lib/clflags.ml[378,16465+14]..lib/clflags.ml[378,16465+20])
                      Ttyp_constr "string/15!"
                      []
                  ]
              ]
          Tpat_alias "dump_dir/442"
          pattern (lib/clflags.ml[378,16465+4]..lib/clflags.ml[378,16465+12])
            Tpat_any
        expression (lib/clflags.ml[378,16465+34]..lib/clflags.ml[378,16465+42])
          extra
            Texp_constraint
            core_type (lib/clflags.ml[378,16465+14]..lib/clflags.ml[378,16465+31])
              Ttyp_constr "Stdlib!.ref"
              [
                core_type (lib/clflags.ml[378,16465+14]..lib/clflags.ml[378,16465+27])
                  Ttyp_constr "option/10!"
                  [
                    core_type (lib/clflags.ml[378,16465+14]..lib/clflags.ml[378,16465+20])
                      Ttyp_constr "string/15!"
                      []
                  ]
              ]
          Texp_apply
          expression (lib/clflags.ml[378,16465+34]..lib/clflags.ml[378,16465+37])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/clflags.ml[378,16465+38]..lib/clflags.ml[378,16465+42])
                Texp_construct "None"
                []
          ]
    ]
  structure_item (lib/clflags.ml[380,16525+0]..lib/clflags.ml[385,16641+1])
    Tstr_type Rec
    [
      type_declaration env_reader/443 (lib/clflags.ml[380,16525+0]..lib/clflags.ml[385,16641+1])
        ptype_params =
          [
            core_type (lib/clflags.ml[380,16525+5]..lib/clflags.ml[380,16525+7])
              Ttyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/clflags.ml[381,16548+2]..lib/clflags.ml[381,16548+30])
                Immutable
                parse/444                core_type (lib/clflags.ml[381,16548+10]..lib/clflags.ml[381,16548+29])
                  Ttyp_poly
                  core_type (lib/clflags.ml[381,16548+10]..lib/clflags.ml[381,16548+29])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/clflags.ml[381,16548+10]..lib/clflags.ml[381,16548+16])
                      Ttyp_constr "string/15!"
                      []
                    core_type (lib/clflags.ml[381,16548+20]..lib/clflags.ml[381,16548+29])
                      Ttyp_constr "option/10!"
                      [
                        core_type (lib/clflags.ml[381,16548+20]..lib/clflags.ml[381,16548+22])
                          Ttyp_var a
                      ]
              (lib/clflags.ml[382,16579+2]..lib/clflags.ml[382,16579+23])
                Immutable
                print/445                core_type (lib/clflags.ml[382,16579+10]..lib/clflags.ml[382,16579+22])
                  Ttyp_poly
                  core_type (lib/clflags.ml[382,16579+10]..lib/clflags.ml[382,16579+22])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/clflags.ml[382,16579+10]..lib/clflags.ml[382,16579+12])
                      Ttyp_var a
                    core_type (lib/clflags.ml[382,16579+16]..lib/clflags.ml[382,16579+22])
                      Ttyp_constr "string/15!"
                      []
              (lib/clflags.ml[383,16603+2]..lib/clflags.ml[383,16603+17])
                Immutable
                usage/446                core_type (lib/clflags.ml[383,16603+10]..lib/clflags.ml[383,16603+16])
                  Ttyp_poly
                  core_type (lib/clflags.ml[383,16603+10]..lib/clflags.ml[383,16603+16])
                    Ttyp_constr "string/15!"
                    []
              (lib/clflags.ml[384,16621+2]..lib/clflags.ml[384,16621+19])
                Immutable
                env_var/447                core_type (lib/clflags.ml[384,16621+12]..lib/clflags.ml[384,16621+18])
                  Ttyp_poly
                  core_type (lib/clflags.ml[384,16621+12]..lib/clflags.ml[384,16621+18])
                    Ttyp_constr "string/15!"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/clflags.ml[389,16687+0]..lib/clflags.ml[401,17070+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/clflags.ml[389,16687+4]..lib/clflags.ml[389,16687+16])
          Tpat_var "color_reader/448"
        expression (lib/clflags.ml[389,16687+19]..lib/clflags.ml[401,17070+1])
          Texp_record
            fields =
              [
                "parse"
                  expression (lib/clflags.ml[390,16708+10]..lib/clflags.ml[394,16845+16])
                    Texp_function
                    []
                    Tfunction_cases (lib/clflags.ml[390,16708+11]..lib/clflags.ml[394,16845+15])
                      [
                        <case>
                          pattern (lib/clflags.ml[391,16728+6]..lib/clflags.ml[391,16728+12])
                            Tpat_constant Const_string("auto",(lib/clflags.ml[391,16728+7]..lib/clflags.ml[391,16728+11]),None)
                          expression (lib/clflags.ml[391,16728+16]..lib/clflags.ml[391,16728+36])
                            Texp_construct "Some"
                            [
                              expression (lib/clflags.ml[391,16728+21]..lib/clflags.ml[391,16728+36])
                                Texp_construct "Misc.Color.Auto"
                                []
                            ]
                        <case>
                          pattern (lib/clflags.ml[392,16765+6]..lib/clflags.ml[392,16765+14])
                            Tpat_constant Const_string("always",(lib/clflags.ml[392,16765+7]..lib/clflags.ml[392,16765+13]),None)
                          expression (lib/clflags.ml[392,16765+18]..lib/clflags.ml[392,16765+40])
                            Texp_construct "Some"
                            [
                              expression (lib/clflags.ml[392,16765+23]..lib/clflags.ml[392,16765+40])
                                Texp_construct "Misc.Color.Always"
                                []
                            ]
                        <case>
                          pattern (lib/clflags.ml[393,16806+6]..lib/clflags.ml[393,16806+13])
                            Tpat_constant Const_string("never",(lib/clflags.ml[393,16806+7]..lib/clflags.ml[393,16806+12]),None)
                          expression (lib/clflags.ml[393,16806+17]..lib/clflags.ml[393,16806+38])
                            Texp_construct "Some"
                            [
                              expression (lib/clflags.ml[393,16806+22]..lib/clflags.ml[393,16806+38])
                                Texp_construct "Misc.Color.Never"
                                []
                            ]
                        <case>
                          pattern (lib/clflags.ml[394,16845+6]..lib/clflags.ml[394,16845+7])
                            Tpat_any
                          expression (lib/clflags.ml[394,16845+11]..lib/clflags.ml[394,16845+15])
                            Texp_construct "None"
                            []
                      ]
                "print"
                  expression (lib/clflags.ml[395,16863+10]..lib/clflags.ml[398,16951+34])
                    Texp_function
                    []
                    Tfunction_cases (lib/clflags.ml[395,16863+11]..lib/clflags.ml[398,16951+33])
                      [
                        <case>
                          pattern (lib/clflags.ml[396,16883+6]..lib/clflags.ml[396,16883+21])
                            Tpat_construct "Misc.Color.Auto"
                            []
                            None
                          expression (lib/clflags.ml[396,16883+25]..lib/clflags.ml[396,16883+31])
                            Texp_constant Const_string("auto",(lib/clflags.ml[396,16883+26]..lib/clflags.ml[396,16883+30]),None)
                        <case>
                          pattern (lib/clflags.ml[397,16915+6]..lib/clflags.ml[397,16915+23])
                            Tpat_construct "Misc.Color.Always"
                            []
                            None
                          expression (lib/clflags.ml[397,16915+27]..lib/clflags.ml[397,16915+35])
                            Texp_constant Const_string("always",(lib/clflags.ml[397,16915+28]..lib/clflags.ml[397,16915+34]),None)
                        <case>
                          pattern (lib/clflags.ml[398,16951+6]..lib/clflags.ml[398,16951+22])
                            Tpat_construct "Misc.Color.Never"
                            []
                            None
                          expression (lib/clflags.ml[398,16951+26]..lib/clflags.ml[398,16951+33])
                            Texp_constant Const_string("never",(lib/clflags.ml[398,16951+27]..lib/clflags.ml[398,16951+32]),None)
                      ]
                "usage"
                  expression (lib/clflags.ml[399,16987+10]..lib/clflags.ml[399,16987+54])
                    Texp_constant Const_string("expected \"auto\", \"always\" or \"never\"",(lib/clflags.ml[399,16987+11]..lib/clflags.ml[399,16987+53]),None)
                "env_var"
                  expression (lib/clflags.ml[400,17043+12]..lib/clflags.ml[400,17043+25])
                    Texp_constant Const_string("OCAML_COLOR",(lib/clflags.ml[400,17043+13]..lib/clflags.ml[400,17043+24]),None)
              ]
            representation =
              Record_regular
            extended_expression =
              None
    ]
]

{<Ocaml_ocaml_types__Clflags>
 "absname"[value] -> <Ocaml_ocaml_types__Clflags.29>;
 "all_ccopts"[value] -> <Ocaml_ocaml_types__Clflags.22>;
 "all_ppx"[value] -> <Ocaml_ocaml_types__Clflags.28>;
 "annotations"[value] -> <Ocaml_ocaml_types__Clflags.30>;
 "applicative_functors"[value] -> <Ocaml_ocaml_types__Clflags.48>;
 "binary_annotations"[value] -> <Ocaml_ocaml_types__Clflags.31>;
 "bytecode_compatible_32"[value] -> <Ocaml_ocaml_types__Clflags.18>;
 "c_compiler"[value] -> <Ocaml_ocaml_types__Clflags.50>;
 "ccobjs"[value] -> <Ocaml_ocaml_types__Clflags.1>;
 "clambda_checks"[value] -> <Ocaml_ocaml_types__Clflags.94>;
 "classic"[value] -> <Ocaml_ocaml_types__Clflags.23>;
 "classic_inlining"[value] -> <Ocaml_ocaml_types__Clflags.104>;
 "color_reader"[value] -> <Ocaml_ocaml_types__Clflags.148>;
 "compile_only"[value] -> <Ocaml_ocaml_types__Clflags.3>;
 "custom_runtime"[value] -> <Ocaml_ocaml_types__Clflags.16>;
 "debug"[value] -> <Ocaml_ocaml_types__Clflags.11>;
 "debug_full"[value] -> <Ocaml_ocaml_types__Clflags.12>;
 "default_inline_alloc_cost"[value] -> <Ocaml_ocaml_types__Clflags.115>;
 "default_inline_branch_cost"[value] -> <Ocaml_ocaml_types__Clflags.117>;
 "default_inline_branch_factor"[value] -> <Ocaml_ocaml_types__Clflags.119>;
 "default_inline_call_cost"[value] -> <Ocaml_ocaml_types__Clflags.114>;
 "default_inline_indirect_cost"[value] -> <Ocaml_ocaml_types__Clflags.118>;
 "default_inline_lifting_benefit"[value] -> <Ocaml_ocaml_types__Clflags.120>;
 "default_inline_max_depth"[value] -> <Ocaml_ocaml_types__Clflags.122>;
 "default_inline_max_unroll"[value] -> <Ocaml_ocaml_types__Clflags.121>;
 "default_inline_prim_cost"[value] -> <Ocaml_ocaml_types__Clflags.116>;
 "default_inline_threshold"[value] -> <Ocaml_ocaml_types__Clflags.111>;
 "default_inline_toplevel_threshold"[value] ->
   <Ocaml_ocaml_types__Clflags.113>;
 "default_simplify_rounds"[value] -> <Ocaml_ocaml_types__Clflags.108>;
 "default_unbox_closures_factor"[value] -> <Ocaml_ocaml_types__Clflags.126>;
 "dlcode"[value] -> <Ocaml_ocaml_types__Clflags.99>;
 "dllibs"[value] -> <Ocaml_ocaml_types__Clflags.2>;
 "dllpaths"[value] -> <Ocaml_ocaml_types__Clflags.52>;
 "dont_write_files"[value] -> <Ocaml_ocaml_types__Clflags.95>;
 "dump_clambda"[value] -> <Ocaml_ocaml_types__Clflags.67>;
 "dump_cmm"[value] -> <Ocaml_ocaml_types__Clflags.77>;
 "dump_combine"[value] -> <Ocaml_ocaml_types__Clflags.91>;
 "dump_cse"[value] -> <Ocaml_ocaml_types__Clflags.79>;
 "dump_dir"[value] -> <Ocaml_ocaml_types__Clflags.142>;
 "dump_flambda"[value] -> <Ocaml_ocaml_types__Clflags.69>;
 "dump_flambda_let"[value] -> <Ocaml_ocaml_types__Clflags.70>;
 "dump_flambda_verbose"[value] -> <Ocaml_ocaml_types__Clflags.71>;
 "dump_instr"[value] -> <Ocaml_ocaml_types__Clflags.72>;
 "dump_interf"[value] -> <Ocaml_ocaml_types__Clflags.83>;
 "dump_interval"[value] -> <Ocaml_ocaml_types__Clflags.89>;
 "dump_into_file"[value] -> <Ocaml_ocaml_types__Clflags.141>;
 "dump_lambda"[value] -> <Ocaml_ocaml_types__Clflags.65>;
 "dump_linear"[value] -> <Ocaml_ocaml_types__Clflags.88>;
 "dump_live"[value] -> <Ocaml_ocaml_types__Clflags.80>;
 "dump_parsetree"[value] -> <Ocaml_ocaml_types__Clflags.61>;
 "dump_prefer"[value] -> <Ocaml_ocaml_types__Clflags.84>;
 "dump_rawclambda"[value] -> <Ocaml_ocaml_types__Clflags.66>;
 "dump_rawflambda"[value] -> <Ocaml_ocaml_types__Clflags.68>;
 "dump_rawlambda"[value] -> <Ocaml_ocaml_types__Clflags.64>;
 "dump_regalloc"[value] -> <Ocaml_ocaml_types__Clflags.85>;
 "dump_reload"[value] -> <Ocaml_ocaml_types__Clflags.86>;
 "dump_scheduling"[value] -> <Ocaml_ocaml_types__Clflags.87>;
 "dump_selection"[value] -> <Ocaml_ocaml_types__Clflags.78>;
 "dump_shape"[value] -> <Ocaml_ocaml_types__Clflags.63>;
 "dump_source"[value] -> <Ocaml_ocaml_types__Clflags.60>;
 "dump_spill"[value] -> <Ocaml_ocaml_types__Clflags.81>;
 "dump_split"[value] -> <Ocaml_ocaml_types__Clflags.82>;
 "dump_typedtree"[value] -> <Ocaml_ocaml_types__Clflags.62>;
 "env_reader"[type] -> <Ocaml_ocaml_types__Clflags.143>;
 "error_size"[value] -> <Ocaml_ocaml_types__Clflags.55>;
 "float_const_prop"[value] -> <Ocaml_ocaml_types__Clflags.56>;
 "for_package"[value] -> <Ocaml_ocaml_types__Clflags.54>;
 "force_slash"[value] -> <Ocaml_ocaml_types__Clflags.93>;
 "function_sections"[value] -> <Ocaml_ocaml_types__Clflags.106>;
 "hidden_include_dirs"[value] -> <Ocaml_ocaml_types__Clflags.6>;
 "include_dirs"[value] -> <Ocaml_ocaml_types__Clflags.5>;
 "init_file"[value] -> <Ocaml_ocaml_types__Clflags.38>;
 "inline_toplevel_multiplier"[value] -> <Ocaml_ocaml_types__Clflags.112>;
 "inlining_arguments"[type] -> <Ocaml_ocaml_types__Clflags.129>;
 "inlining_report"[value] -> <Ocaml_ocaml_types__Clflags.105>;
 "insn_sched"[value] -> <Ocaml_ocaml_types__Clflags.97>;
 "insn_sched_default"[value] -> <Ocaml_ocaml_types__Clflags.96>;
 "keep_asm_file"[value] -> <Ocaml_ocaml_types__Clflags.74>;
 "keep_camlprimc_file"[value] -> <Ocaml_ocaml_types__Clflags.73>;
 "keep_docs"[value] -> <Ocaml_ocaml_types__Clflags.102>;
 "keep_locs"[value] -> <Ocaml_ocaml_types__Clflags.103>;
 "keep_startup_file"[value] -> <Ocaml_ocaml_types__Clflags.90>;
 "link_everything"[value] -> <Ocaml_ocaml_types__Clflags.15>;
 "locations"[value] -> <Ocaml_ocaml_types__Clflags.59>;
 "make_archive"[value] -> <Ocaml_ocaml_types__Clflags.10>;
 "make_package"[value] -> <Ocaml_ocaml_types__Clflags.53>;
 "make_runtime"[value] -> <Ocaml_ocaml_types__Clflags.49>;
 "match_context_rows"[value] -> <Ocaml_ocaml_types__Clflags.25>;
 "native_code"[value] -> <Ocaml_ocaml_types__Clflags.92>;
 "no_auto_link"[value] -> <Ocaml_ocaml_types__Clflags.51>;
 "no_check_prims"[value] -> <Ocaml_ocaml_types__Clflags.17>;
 "no_cwd"[value] -> <Ocaml_ocaml_types__Clflags.8>;
 "no_std_include"[value] -> <Ocaml_ocaml_types__Clflags.7>;
 "noassert"[value] -> <Ocaml_ocaml_types__Clflags.33>;
 "noinit"[value] -> <Ocaml_ocaml_types__Clflags.39>;
 "nopervasives"[value] -> <Ocaml_ocaml_types__Clflags.24>;
 "noprompt"[value] -> <Ocaml_ocaml_types__Clflags.36>;
 "nopromptcont"[value] -> <Ocaml_ocaml_types__Clflags.37>;
 "noversion"[value] -> <Ocaml_ocaml_types__Clflags.35>;
 "objfiles"[value] -> <Ocaml_ocaml_types__Clflags.0>;
 "opaque"[value] -> <Ocaml_ocaml_types__Clflags.76>;
 "optimize_for_speed"[value] -> <Ocaml_ocaml_types__Clflags.75>;
 "output_c_object"[value] -> <Ocaml_ocaml_types__Clflags.19>;
 "output_complete_executable"[value] -> <Ocaml_ocaml_types__Clflags.21>;
 "output_complete_object"[value] -> <Ocaml_ocaml_types__Clflags.20>;
 "output_name"[value] -> <Ocaml_ocaml_types__Clflags.4>;
 "plugin"[value] -> <Ocaml_ocaml_types__Clflags.42>;
 "preprocessor"[value] -> <Ocaml_ocaml_types__Clflags.27>;
 "principal"[value] -> <Ocaml_ocaml_types__Clflags.43>;
 "print_types"[value] -> <Ocaml_ocaml_types__Clflags.9>;
 "real_paths"[value] -> <Ocaml_ocaml_types__Clflags.44>;
 "recursive_types"[value] -> <Ocaml_ocaml_types__Clflags.45>;
 "remove_unused_arguments"[value] -> <Ocaml_ocaml_types__Clflags.128>;
 "rounds"[value] -> <Ocaml_ocaml_types__Clflags.109>;
 "runtime_variant"[value] -> <Ocaml_ocaml_types__Clflags.100>;
 "safer_matching"[value] -> <Ocaml_ocaml_types__Clflags.26>;
 "shared"[value] -> <Ocaml_ocaml_types__Clflags.98>;
 "simplify_rounds"[value] -> <Ocaml_ocaml_types__Clflags.107>;
 "strict_formats"[value] -> <Ocaml_ocaml_types__Clflags.47>;
 "strict_sequence"[value] -> <Ocaml_ocaml_types__Clflags.46>;
 "transparent_modules"[value] -> <Ocaml_ocaml_types__Clflags.57>;
 "unbox_closures"[value] -> <Ocaml_ocaml_types__Clflags.125>;
 "unbox_closures_factor"[value] -> <Ocaml_ocaml_types__Clflags.127>;
 "unbox_free_vars_of_closures"[value] -> <Ocaml_ocaml_types__Clflags.124>;
 "unbox_specialised_args"[value] -> <Ocaml_ocaml_types__Clflags.123>;
 "unique_ids"[value] -> <Ocaml_ocaml_types__Clflags.58>;
 "unsafe"[value] -> <Ocaml_ocaml_types__Clflags.13>;
 "use_linscan"[value] -> <Ocaml_ocaml_types__Clflags.14>;
 "use_prims"[value] -> <Ocaml_ocaml_types__Clflags.40>;
 "use_runtime"[value] -> <Ocaml_ocaml_types__Clflags.41>;
 "use_threads"[value] -> <Ocaml_ocaml_types__Clflags.32>;
 "verbose"[value] -> <Ocaml_ocaml_types__Clflags.34>;
 "with_runtime"[value] -> <Ocaml_ocaml_types__Clflags.101>;
 }

(setglobal Ocaml_ocaml_types__Clflags!
  (let
    (objfiles/298 = (makemutable 0 0)
     ccobjs/299 = (makemutable 0 0)
     dllibs/300 = (makemutable 0 0)
     compile_only/301 = (makemutable 0 (int) 0)
     output_name/302 = (makemutable 0 0)
     include_dirs/303 = (makemutable 0 0)
     hidden_include_dirs/304 = (makemutable 0 0)
     no_std_include/305 = (makemutable 0 (int) 0)
     no_cwd/306 = (makemutable 0 (int) 0)
     print_types/307 = (makemutable 0 (int) 0)
     make_archive/308 = (makemutable 0 (int) 0)
     debug/309 = (makemutable 0 (int) 0)
     debug_full/310 = (makemutable 0 (int) 0)
     unsafe/311 = (makemutable 0 (int) 0)
     use_linscan/312 = (makemutable 0 (int) 0)
     link_everything/313 = (makemutable 0 (int) 0)
     custom_runtime/314 = (makemutable 0 (int) 0)
     no_check_prims/315 = (makemutable 0 (int) 0)
     bytecode_compatible_32/316 = (makemutable 0 (int) 0)
     output_c_object/317 = (makemutable 0 (int) 0)
     output_complete_object/318 = (makemutable 0 (int) 0)
     output_complete_executable/319 = (makemutable 0 (int) 0)
     all_ccopts/320 = (makemutable 0 0)
     classic/321 = (makemutable 0 (int) 0)
     nopervasives/322 = (makemutable 0 (int) 0)
     match_context_rows/323 = (makemutable 0 (int) 32)
     safer_matching/324 = (makemutable 0 (int) 0)
     preprocessor/325 = (makemutable 0 0)
     all_ppx/326 = (makemutable 0 0)
     absname/327 = (makemutable 0 (int) 0)
     annotations/328 = (makemutable 0 (int) 0)
     binary_annotations/329 = (makemutable 0 (int) 0)
     use_threads/330 = (makemutable 0 (int) 0)
     noassert/331 = (makemutable 0 (int) 0)
     verbose/332 = (makemutable 0 (int) 0)
     noversion/333 = (makemutable 0 (int) 0)
     noprompt/334 = (makemutable 0 (int) 0)
     nopromptcont/335 = (makemutable 0 (int) 0)
     init_file/336 = (makemutable 0 0)
     noinit/337 = (makemutable 0 (int) 0)
     use_prims/338 = (makemutable 0 "")
     use_runtime/339 = (makemutable 0 "")
     plugin/340 = (makemutable 0 (int) 0)
     principal/341 = (makemutable 0 (int) 0)
     real_paths/342 = (makemutable 0 (int) 1)
     recursive_types/343 = (makemutable 0 (int) 0)
     strict_sequence/344 = (makemutable 0 (int) 0)
     strict_formats/345 = (makemutable 0 (int) 1)
     applicative_functors/346 = (makemutable 0 (int) 1)
     make_runtime/347 = (makemutable 0 (int) 0)
     c_compiler/348 = (makemutable 0 0)
     no_auto_link/349 = (makemutable 0 (int) 0)
     dllpaths/350 = (makemutable 0 0)
     make_package/351 = (makemutable 0 (int) 0)
     for_package/352 = (makemutable 0 0)
     error_size/353 = (makemutable 0 (int) 500)
     float_const_prop/354 = (makemutable 0 (int) 1)
     transparent_modules/355 = (makemutable 0 (int) 0)
     unique_ids/356 = (makemutable 0 (int) 1)
     locations/357 = (makemutable 0 (int) 1)
     dump_source/358 = (makemutable 0 (int) 0)
     dump_parsetree/359 = (makemutable 0 (int) 0)
     dump_typedtree/360 = (makemutable 0 (int) 0)
     dump_shape/361 = (makemutable 0 (int) 0)
     dump_rawlambda/362 = (makemutable 0 (int) 0)
     dump_lambda/363 = (makemutable 0 (int) 0)
     dump_rawclambda/364 = (makemutable 0 (int) 0)
     dump_clambda/365 = (makemutable 0 (int) 0)
     dump_rawflambda/366 = (makemutable 0 (int) 0)
     dump_flambda/367 = (makemutable 0 (int) 0)
     dump_flambda_let/368 = (makemutable 0 0)
     dump_flambda_verbose/369 = (makemutable 0 (int) 0)
     dump_instr/370 = (makemutable 0 (int) 0)
     keep_camlprimc_file/371 = (makemutable 0 (int) 0)
     keep_asm_file/372 = (makemutable 0 (int) 0)
     optimize_for_speed/373 = (makemutable 0 (int) 1)
     opaque/374 = (makemutable 0 (int) 0)
     dump_cmm/375 = (makemutable 0 (int) 0)
     dump_selection/376 = (makemutable 0 (int) 0)
     dump_cse/377 = (makemutable 0 (int) 0)
     dump_live/378 = (makemutable 0 (int) 0)
     dump_spill/379 = (makemutable 0 (int) 0)
     dump_split/380 = (makemutable 0 (int) 0)
     dump_interf/381 = (makemutable 0 (int) 0)
     dump_prefer/382 = (makemutable 0 (int) 0)
     dump_regalloc/383 = (makemutable 0 (int) 0)
     dump_reload/384 = (makemutable 0 (int) 0)
     dump_scheduling/385 = (makemutable 0 (int) 0)
     dump_linear/386 = (makemutable 0 (int) 0)
     dump_interval/387 = (makemutable 0 (int) 0)
     keep_startup_file/388 = (makemutable 0 (int) 0)
     dump_combine/389 = (makemutable 0 (int) 0)
     native_code/390 = (makemutable 0 (int) 0)
     force_slash/391 = (makemutable 0 (int) 0)
     clambda_checks/392 = (makemutable 0 (int) 0)
     dont_write_files/393 = (makemutable 0 (int) 0)
     insn_sched_default/394 =[int] 1
     insn_sched/395 = (makemutable 0 (int) insn_sched_default/394)
     shared/396 = (makemutable 0 (int) 0)
     dlcode/397 = (makemutable 0 (int) 1)
     runtime_variant/398 = (makemutable 0 "")
     with_runtime/399 = (makemutable 0 (int) 1)
     keep_docs/400 = (makemutable 0 (int) 0)
     keep_locs/401 = (makemutable 0 (int) 1)
     classic_inlining/402 = (makemutable 0 (int) 0)
     inlining_report/403 = (makemutable 0 (int) 0)
     function_sections/404 = (makemutable 0 (int) 0)
     simplify_rounds/405 = (makemutable 0 0)
     default_simplify_rounds/406 = (makemutable 0 (int) 1)
     rounds/407 =
       (function param/410[int] : int
         (funct-body Ocaml_ocaml_types__Clflags.rounds lib/clflags.ml(188)<ghost>:8893-8980
           (before Ocaml_ocaml_types__Clflags.rounds lib/clflags.ml(189):8900-8980
             (let (*match*/1283 = (field_mut 0 simplify_rounds/405))
               (if *match*/1283
                 (let (r/409 =a (field_imm 0 *match*/1283))
                   (before Ocaml_ocaml_types__Clflags.rounds lib/clflags.ml(191):8979-8980
                     r/409))
                 (before Ocaml_ocaml_types__Clflags.rounds lib/clflags.ml(190):8940-8964
                   (field_int 0 default_simplify_rounds/406)))))))
     default_inline_threshold/411 =[float] 10.
     inline_toplevel_multiplier/412 =[int] 16
     default_inline_toplevel_threshold/413 =[int]
       (int_of_float
         (after Ocaml_ocaml_types__Clflags.default_inline_toplevel_threshold lib/clflags.ml(196):9108-9172
           (*.
             (after Ocaml_ocaml_types__Clflags.default_inline_toplevel_threshold lib/clflags.ml(196):9109-9143
               (float_of_int inline_toplevel_multiplier/412))
             default_inline_threshold/411)))
     default_inline_call_cost/414 =[int] 5
     default_inline_alloc_cost/415 =[int] 7
     default_inline_prim_cost/416 =[int] 3
     default_inline_branch_cost/417 =[int] 5
     default_inline_indirect_cost/418 =[int] 4
     default_inline_branch_factor/419 =[float] 0.1
     default_inline_lifting_benefit/420 =[int] 1300
     default_inline_max_unroll/421 =[int] 0
     default_inline_max_depth/422 =[int] 1
     unbox_specialised_args/423 = (makemutable 0 (int) 1)
     unbox_free_vars_of_closures/424 = (makemutable 0 (int) 1)
     unbox_closures/425 = (makemutable 0 (int) 0)
     default_unbox_closures_factor/426 =[int] 10
     unbox_closures_factor/427 =
       (makemutable 0 (int) default_unbox_closures_factor/426)
     remove_unused_arguments/428 = (makemutable 0 (int) 0)
     dump_into_file/441 = (makemutable 0 (int) 0)
     dump_dir/442 = (makemutable 0 0)
     color_reader/448 =
       (makeblock 0
         (function param/609
           (funct-body Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(390):16718-16861
             (catch
               (stringswitch param/609
                case "always":
                 (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(392):16783-16805
                   [0: 1])
                case "auto":
                 (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(391):16744-16764
                   [0: 0])
                case "never":
                 (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(393):16823-16844
                   [0: 2])
                default: (exit 1))
              with (1)
               (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(394):16856-16860
                 0))))
         (function param/610[int]
           (funct-body Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(395):16873-16985
             (switch* param/610
              case int 0:
               (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(396):16908-16914
                 "auto")
              case int 1:
               (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(397):16942-16950
                 "always")
              case int 2:
               (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(398):16977-16984
                 "never"))))
         "expected \"auto\", \"always\" or \"never\"" "OCAML_COLOR"))
    (pseudo <unknown location>
      (makeblock 0 objfiles/298 ccobjs/299 dllibs/300 compile_only/301
        output_name/302 include_dirs/303 hidden_include_dirs/304
        no_std_include/305 no_cwd/306 print_types/307 make_archive/308
        debug/309 debug_full/310 unsafe/311 use_linscan/312
        link_everything/313 custom_runtime/314 no_check_prims/315
        bytecode_compatible_32/316 output_c_object/317
        output_complete_object/318 output_complete_executable/319
        all_ccopts/320 classic/321 nopervasives/322 match_context_rows/323
        safer_matching/324 preprocessor/325 all_ppx/326 absname/327
        annotations/328 binary_annotations/329 use_threads/330 noassert/331
        verbose/332 noversion/333 noprompt/334 nopromptcont/335 init_file/336
        noinit/337 use_prims/338 use_runtime/339 plugin/340 principal/341
        real_paths/342 recursive_types/343 strict_sequence/344
        strict_formats/345 applicative_functors/346 make_runtime/347
        c_compiler/348 no_auto_link/349 dllpaths/350 make_package/351
        for_package/352 error_size/353 float_const_prop/354
        transparent_modules/355 unique_ids/356 locations/357 dump_source/358
        dump_parsetree/359 dump_typedtree/360 dump_shape/361
        dump_rawlambda/362 dump_lambda/363 dump_rawclambda/364
        dump_clambda/365 dump_rawflambda/366 dump_flambda/367
        dump_flambda_let/368 dump_flambda_verbose/369 dump_instr/370
        keep_camlprimc_file/371 keep_asm_file/372 optimize_for_speed/373
        opaque/374 dump_cmm/375 dump_selection/376 dump_cse/377 dump_live/378
        dump_spill/379 dump_split/380 dump_interf/381 dump_prefer/382
        dump_regalloc/383 dump_reload/384 dump_scheduling/385 dump_linear/386
        dump_interval/387 keep_startup_file/388 dump_combine/389
        native_code/390 force_slash/391 clambda_checks/392
        dont_write_files/393 insn_sched_default/394 insn_sched/395 shared/396
        dlcode/397 runtime_variant/398 with_runtime/399 keep_docs/400
        keep_locs/401 classic_inlining/402 inlining_report/403
        function_sections/404 simplify_rounds/405 default_simplify_rounds/406
        rounds/407 default_inline_threshold/411
        inline_toplevel_multiplier/412 default_inline_toplevel_threshold/413
        default_inline_call_cost/414 default_inline_alloc_cost/415
        default_inline_prim_cost/416 default_inline_branch_cost/417
        default_inline_indirect_cost/418 default_inline_branch_factor/419
        default_inline_lifting_benefit/420 default_inline_max_unroll/421
        default_inline_max_depth/422 unbox_specialised_args/423
        unbox_free_vars_of_closures/424 unbox_closures/425
        default_unbox_closures_factor/426 unbox_closures_factor/427
        remove_unused_arguments/428 dump_into_file/441 dump_dir/442
        color_reader/448))))
(setglobal Ocaml_ocaml_types__Clflags!
  (let
    (objfiles/298 = (makemutable 0 0)
     ccobjs/299 = (makemutable 0 0)
     dllibs/300 = (makemutable 0 0)
     compile_only/301 = (makemutable 0 (int) 0)
     output_name/302 = (makemutable 0 0)
     include_dirs/303 = (makemutable 0 0)
     hidden_include_dirs/304 = (makemutable 0 0)
     no_std_include/305 = (makemutable 0 (int) 0)
     no_cwd/306 = (makemutable 0 (int) 0)
     print_types/307 = (makemutable 0 (int) 0)
     make_archive/308 = (makemutable 0 (int) 0)
     debug/309 = (makemutable 0 (int) 0)
     debug_full/310 = (makemutable 0 (int) 0)
     unsafe/311 = (makemutable 0 (int) 0)
     use_linscan/312 = (makemutable 0 (int) 0)
     link_everything/313 = (makemutable 0 (int) 0)
     custom_runtime/314 = (makemutable 0 (int) 0)
     no_check_prims/315 = (makemutable 0 (int) 0)
     bytecode_compatible_32/316 = (makemutable 0 (int) 0)
     output_c_object/317 = (makemutable 0 (int) 0)
     output_complete_object/318 = (makemutable 0 (int) 0)
     output_complete_executable/319 = (makemutable 0 (int) 0)
     all_ccopts/320 = (makemutable 0 0)
     classic/321 = (makemutable 0 (int) 0)
     nopervasives/322 = (makemutable 0 (int) 0)
     match_context_rows/323 = (makemutable 0 (int) 32)
     safer_matching/324 = (makemutable 0 (int) 0)
     preprocessor/325 = (makemutable 0 0)
     all_ppx/326 = (makemutable 0 0)
     absname/327 = (makemutable 0 (int) 0)
     annotations/328 = (makemutable 0 (int) 0)
     binary_annotations/329 = (makemutable 0 (int) 0)
     use_threads/330 = (makemutable 0 (int) 0)
     noassert/331 = (makemutable 0 (int) 0)
     verbose/332 = (makemutable 0 (int) 0)
     noversion/333 = (makemutable 0 (int) 0)
     noprompt/334 = (makemutable 0 (int) 0)
     nopromptcont/335 = (makemutable 0 (int) 0)
     init_file/336 = (makemutable 0 0)
     noinit/337 = (makemutable 0 (int) 0)
     use_prims/338 = (makemutable 0 "")
     use_runtime/339 = (makemutable 0 "")
     plugin/340 = (makemutable 0 (int) 0)
     principal/341 = (makemutable 0 (int) 0)
     real_paths/342 = (makemutable 0 (int) 1)
     recursive_types/343 = (makemutable 0 (int) 0)
     strict_sequence/344 = (makemutable 0 (int) 0)
     strict_formats/345 = (makemutable 0 (int) 1)
     applicative_functors/346 = (makemutable 0 (int) 1)
     make_runtime/347 = (makemutable 0 (int) 0)
     c_compiler/348 = (makemutable 0 0)
     no_auto_link/349 = (makemutable 0 (int) 0)
     dllpaths/350 = (makemutable 0 0)
     make_package/351 = (makemutable 0 (int) 0)
     for_package/352 = (makemutable 0 0)
     error_size/353 = (makemutable 0 (int) 500)
     float_const_prop/354 = (makemutable 0 (int) 1)
     transparent_modules/355 = (makemutable 0 (int) 0)
     unique_ids/356 = (makemutable 0 (int) 1)
     locations/357 = (makemutable 0 (int) 1)
     dump_source/358 = (makemutable 0 (int) 0)
     dump_parsetree/359 = (makemutable 0 (int) 0)
     dump_typedtree/360 = (makemutable 0 (int) 0)
     dump_shape/361 = (makemutable 0 (int) 0)
     dump_rawlambda/362 = (makemutable 0 (int) 0)
     dump_lambda/363 = (makemutable 0 (int) 0)
     dump_rawclambda/364 = (makemutable 0 (int) 0)
     dump_clambda/365 = (makemutable 0 (int) 0)
     dump_rawflambda/366 = (makemutable 0 (int) 0)
     dump_flambda/367 = (makemutable 0 (int) 0)
     dump_flambda_let/368 = (makemutable 0 0)
     dump_flambda_verbose/369 = (makemutable 0 (int) 0)
     dump_instr/370 = (makemutable 0 (int) 0)
     keep_camlprimc_file/371 = (makemutable 0 (int) 0)
     keep_asm_file/372 = (makemutable 0 (int) 0)
     optimize_for_speed/373 = (makemutable 0 (int) 1)
     opaque/374 = (makemutable 0 (int) 0)
     dump_cmm/375 = (makemutable 0 (int) 0)
     dump_selection/376 = (makemutable 0 (int) 0)
     dump_cse/377 = (makemutable 0 (int) 0)
     dump_live/378 = (makemutable 0 (int) 0)
     dump_spill/379 = (makemutable 0 (int) 0)
     dump_split/380 = (makemutable 0 (int) 0)
     dump_interf/381 = (makemutable 0 (int) 0)
     dump_prefer/382 = (makemutable 0 (int) 0)
     dump_regalloc/383 = (makemutable 0 (int) 0)
     dump_reload/384 = (makemutable 0 (int) 0)
     dump_scheduling/385 = (makemutable 0 (int) 0)
     dump_linear/386 = (makemutable 0 (int) 0)
     dump_interval/387 = (makemutable 0 (int) 0)
     keep_startup_file/388 = (makemutable 0 (int) 0)
     dump_combine/389 = (makemutable 0 (int) 0)
     native_code/390 = (makemutable 0 (int) 0)
     force_slash/391 = (makemutable 0 (int) 0)
     clambda_checks/392 = (makemutable 0 (int) 0)
     dont_write_files/393 = (makemutable 0 (int) 0)
     insn_sched_default/394 =[int] 1
     insn_sched/395 = (makemutable 0 (int) insn_sched_default/394)
     shared/396 = (makemutable 0 (int) 0)
     dlcode/397 = (makemutable 0 (int) 1)
     runtime_variant/398 = (makemutable 0 "")
     with_runtime/399 = (makemutable 0 (int) 1)
     keep_docs/400 = (makemutable 0 (int) 0)
     keep_locs/401 = (makemutable 0 (int) 1)
     classic_inlining/402 = (makemutable 0 (int) 0)
     inlining_report/403 = (makemutable 0 (int) 0)
     function_sections/404 = (makemutable 0 (int) 0)
     simplify_rounds/405 = (makemutable 0 0)
     default_simplify_rounds/406 = (makemutable 0 (int) 1)
     rounds/407 =
       (function param/410[int] : int
         (funct-body Ocaml_ocaml_types__Clflags.rounds lib/clflags.ml(188)<ghost>:8893-8980
           (before Ocaml_ocaml_types__Clflags.rounds lib/clflags.ml(189):8900-8980
             (let (*match*/1283 = (field_mut 0 simplify_rounds/405))
               (if *match*/1283
                 (let (r/409 =a (field_imm 0 *match*/1283))
                   (before Ocaml_ocaml_types__Clflags.rounds lib/clflags.ml(191):8979-8980
                     r/409))
                 (before Ocaml_ocaml_types__Clflags.rounds lib/clflags.ml(190):8940-8964
                   (field_int 0 default_simplify_rounds/406)))))))
     default_inline_threshold/411 =[float] 10.
     inline_toplevel_multiplier/412 =[int] 16
     default_inline_toplevel_threshold/413 =[int]
       (int_of_float
         (after Ocaml_ocaml_types__Clflags.default_inline_toplevel_threshold lib/clflags.ml(196):9108-9172
           (*.
             (after Ocaml_ocaml_types__Clflags.default_inline_toplevel_threshold lib/clflags.ml(196):9109-9143
               (float_of_int inline_toplevel_multiplier/412))
             default_inline_threshold/411)))
     default_inline_call_cost/414 =[int] 5
     default_inline_alloc_cost/415 =[int] 7
     default_inline_prim_cost/416 =[int] 3
     default_inline_branch_cost/417 =[int] 5
     default_inline_indirect_cost/418 =[int] 4
     default_inline_branch_factor/419 =[float] 0.1
     default_inline_lifting_benefit/420 =[int] 1300
     default_inline_max_unroll/421 =[int] 0
     default_inline_max_depth/422 =[int] 1
     unbox_specialised_args/423 = (makemutable 0 (int) 1)
     unbox_free_vars_of_closures/424 = (makemutable 0 (int) 1)
     unbox_closures/425 = (makemutable 0 (int) 0)
     default_unbox_closures_factor/426 =[int] 10
     unbox_closures_factor/427 =
       (makemutable 0 (int) default_unbox_closures_factor/426)
     remove_unused_arguments/428 = (makemutable 0 (int) 0)
     dump_into_file/441 = (makemutable 0 (int) 0)
     dump_dir/442 = (makemutable 0 0)
     color_reader/448 =
       (makeblock 0
         (function param/609
           (funct-body Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(390):16718-16861
             (catch
               (stringswitch param/609
                case "always":
                 (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(392):16783-16805
                   [0: 1])
                case "auto":
                 (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(391):16744-16764
                   [0: 0])
                case "never":
                 (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(393):16823-16844
                   [0: 2])
                default: (exit 1))
              with (1)
               (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(394):16856-16860
                 0))))
         (function param/610[int]
           (funct-body Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(395):16873-16985
             (switch* param/610
              case int 0:
               (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(396):16908-16914
                 "auto")
              case int 1:
               (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(397):16942-16950
                 "always")
              case int 2:
               (before Ocaml_ocaml_types__Clflags.color_reader.(fun) lib/clflags.ml(398):16977-16984
                 "never"))))
         "expected \"auto\", \"always\" or \"never\"" "OCAML_COLOR"))
    (pseudo <unknown location>
      (makeblock 0 objfiles/298 ccobjs/299 dllibs/300 compile_only/301
        output_name/302 include_dirs/303 hidden_include_dirs/304
        no_std_include/305 no_cwd/306 print_types/307 make_archive/308
        debug/309 debug_full/310 unsafe/311 use_linscan/312
        link_everything/313 custom_runtime/314 no_check_prims/315
        bytecode_compatible_32/316 output_c_object/317
        output_complete_object/318 output_complete_executable/319
        all_ccopts/320 classic/321 nopervasives/322 match_context_rows/323
        safer_matching/324 preprocessor/325 all_ppx/326 absname/327
        annotations/328 binary_annotations/329 use_threads/330 noassert/331
        verbose/332 noversion/333 noprompt/334 nopromptcont/335 init_file/336
        noinit/337 use_prims/338 use_runtime/339 plugin/340 principal/341
        real_paths/342 recursive_types/343 strict_sequence/344
        strict_formats/345 applicative_functors/346 make_runtime/347
        c_compiler/348 no_auto_link/349 dllpaths/350 make_package/351
        for_package/352 error_size/353 float_const_prop/354
        transparent_modules/355 unique_ids/356 locations/357 dump_source/358
        dump_parsetree/359 dump_typedtree/360 dump_shape/361
        dump_rawlambda/362 dump_lambda/363 dump_rawclambda/364
        dump_clambda/365 dump_rawflambda/366 dump_flambda/367
        dump_flambda_let/368 dump_flambda_verbose/369 dump_instr/370
        keep_camlprimc_file/371 keep_asm_file/372 optimize_for_speed/373
        opaque/374 dump_cmm/375 dump_selection/376 dump_cse/377 dump_live/378
        dump_spill/379 dump_split/380 dump_interf/381 dump_prefer/382
        dump_regalloc/383 dump_reload/384 dump_scheduling/385 dump_linear/386
        dump_interval/387 keep_startup_file/388 dump_combine/389
        native_code/390 force_slash/391 clambda_checks/392
        dont_write_files/393 insn_sched_default/394 insn_sched/395 shared/396
        dlcode/397 runtime_variant/398 with_runtime/399 keep_docs/400
        keep_locs/401 classic_inlining/402 inlining_report/403
        function_sections/404 simplify_rounds/405 default_simplify_rounds/406
        rounds/407 default_inline_threshold/411
        inline_toplevel_multiplier/412 default_inline_toplevel_threshold/413
        default_inline_call_cost/414 default_inline_alloc_cost/415
        default_inline_prim_cost/416 default_inline_branch_cost/417
        default_inline_indirect_cost/418 default_inline_branch_factor/419
        default_inline_lifting_benefit/420 default_inline_max_unroll/421
        default_inline_max_depth/422 unbox_specialised_args/423
        unbox_free_vars_of_closures/424 unbox_closures/425
        default_unbox_closures_factor/426 unbox_closures_factor/427
        remove_unused_arguments/428 dump_into_file/441 dump_dir/442
        color_reader/448))))
