[
  structure_item (lib/shape.ml[16,1080+0]..[64,2482+3])
    Pstr_module
    "Uid" (lib/shape.ml[16,1080+7]..[16,1080+10])
      module_expr (lib/shape.ml[16,1080+13]..[64,2482+3])
        Pmod_structure
        [
          structure_item (lib/shape.ml[17,1100+2]..[21,1204+22])
            Pstr_type Rec
            [
              type_declaration "t" (lib/shape.ml[17,1100+7]..[17,1100+8]) (lib/shape.ml[17,1100+2]..[21,1204+22])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (lib/shape.ml[18,1111+4]..[18,1111+32])
                        "Compilation_unit" (lib/shape.ml[18,1111+6]..[18,1111+22])
                        [
                          core_type (lib/shape.ml[18,1111+26]..[18,1111+32])
                            Ptyp_constr "string" (lib/shape.ml[18,1111+26]..[18,1111+32])
                            []
                        ]
                        None
                      (lib/shape.ml[19,1144+4]..[19,1144+44])
                        "Item" (lib/shape.ml[19,1144+6]..[19,1144+10])
                        [
                          (lib/shape.ml[19,1144+16]..[19,1144+34])
                            Immutable
                            "comp_unit" (lib/shape.ml[19,1144+16]..[19,1144+25])                            core_type (lib/shape.ml[19,1144+27]..[19,1144+33])
                              Ptyp_constr "string" (lib/shape.ml[19,1144+27]..[19,1144+33])
                              []
                          (lib/shape.ml[19,1144+35]..[19,1144+42])
                            Immutable
                            "id" (lib/shape.ml[19,1144+35]..[19,1144+37])                            core_type (lib/shape.ml[19,1144+39]..[19,1144+42])
                              Ptyp_constr "int" (lib/shape.ml[19,1144+39]..[19,1144+42])
                              []
                        ]
                        None
                      (lib/shape.ml[20,1189+4]..[20,1189+14])
                        "Internal" (lib/shape.ml[20,1189+6]..[20,1189+14])
                        []
                        None
                      (lib/shape.ml[21,1204+4]..[21,1204+22])
                        "Predef" (lib/shape.ml[21,1204+6]..[21,1204+12])
                        [
                          core_type (lib/shape.ml[21,1204+16]..[21,1204+22])
                            Ptyp_constr "string" (lib/shape.ml[21,1204+16]..[21,1204+22])
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lib/shape.ml[41,1867+2]..[41,1867+19])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[41,1867+6]..[41,1867+8])
                  Ppat_var "id" (lib/shape.ml[41,1867+6]..[41,1867+8])
                expression (lib/shape.ml[41,1867+11]..[41,1867+19])
                  Pexp_apply
                  expression (lib/shape.ml[41,1867+11]..[41,1867+14])
                    Pexp_ident "ref" (lib/shape.ml[41,1867+11]..[41,1867+14])
                  [
                    <arg>
                    Nolabel
                      expression (lib/shape.ml[41,1867+15]..[41,1867+19])
                        Pexp_constant PConst_int (-1,None)
                  ]
            ]
          structure_item (lib/shape.ml[43,1888+2]..[43,1888+28])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[43,1888+6]..[43,1888+12])
                  Ppat_var "reinit" (lib/shape.ml[43,1888+6]..[43,1888+12])
                expression (lib/shape.ml[43,1888+13]..[43,1888+28]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[43,1888+13]..[43,1888+15])
                      Nolabel
                      None
                      pattern (lib/shape.ml[43,1888+13]..[43,1888+15])
                        Ppat_construct "()" (lib/shape.ml[43,1888+13]..[43,1888+15])
                        None
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[43,1888+18]..[43,1888+28])
                      Pexp_apply
                      expression (lib/shape.ml[43,1888+21]..[43,1888+23])
                        Pexp_ident ":=" (lib/shape.ml[43,1888+21]..[43,1888+23])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[43,1888+18]..[43,1888+20])
                            Pexp_ident "id" (lib/shape.ml[43,1888+18]..[43,1888+20])
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[43,1888+24]..[43,1888+28])
                            Pexp_constant PConst_int (-1,None)
                      ]
            ]
          structure_item (lib/shape.ml[45,1918+2]..[47,1959+49])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[45,1918+6]..[45,1918+8])
                  Ppat_var "mk" (lib/shape.ml[45,1918+6]..[45,1918+8])
                expression (lib/shape.ml[45,1918+10]..[47,1959+49]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[45,1918+10]..[45,1918+23])
                      Labelled "current_unit"
                      None
                      pattern (lib/shape.ml[45,1918+11]..[45,1918+23])
                        Ppat_var "current_unit" (lib/shape.ml[45,1918+11]..[45,1918+23])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[46,1944+6]..[47,1959+49])
                      Pexp_sequence
                      expression (lib/shape.ml[46,1944+6]..[46,1944+13])
                        Pexp_apply
                        expression (lib/shape.ml[46,1944+6]..[46,1944+10])
                          Pexp_ident "incr" (lib/shape.ml[46,1944+6]..[46,1944+10])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[46,1944+11]..[46,1944+13])
                              Pexp_ident "id" (lib/shape.ml[46,1944+11]..[46,1944+13])
                        ]
                      expression (lib/shape.ml[47,1959+6]..[47,1959+49])
                        Pexp_construct "Item" (lib/shape.ml[47,1959+6]..[47,1959+10])
                        Some
                          expression (lib/shape.ml[47,1959+11]..[47,1959+49])
                            Pexp_record
                            [
                              "comp_unit" (lib/shape.ml[47,1959+13]..[47,1959+22])
                                expression (lib/shape.ml[47,1959+25]..[47,1959+37])
                                  Pexp_ident "current_unit" (lib/shape.ml[47,1959+25]..[47,1959+37])
                              "id" (lib/shape.ml[47,1959+39]..[47,1959+41])
                                expression (lib/shape.ml[47,1959+44]..[47,1959+47])
                                  Pexp_apply
                                  expression (lib/shape.ml[47,1959+44]..[47,1959+45])
                                    Pexp_ident "!" (lib/shape.ml[47,1959+44]..[47,1959+45])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[47,1959+45]..[47,1959+47])
                                        Pexp_ident "id" (lib/shape.ml[47,1959+45]..[47,1959+47])
                                  ]
                            ]
                            None
            ]
          structure_item (lib/shape.ml[49,2010+2]..[52,2161+36])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[49,2010+6]..[49,2010+28])
                  Ppat_var "of_compilation_unit_id" (lib/shape.ml[49,2010+6]..[49,2010+28])
                expression (lib/shape.ml[49,2010+29]..[52,2161+36]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[49,2010+29]..[49,2010+31])
                      Nolabel
                      None
                      pattern (lib/shape.ml[49,2010+29]..[49,2010+31])
                        Ppat_var "id" (lib/shape.ml[49,2010+29]..[49,2010+31])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[50,2044+4]..[52,2161+36])
                      Pexp_sequence
                      expression (lib/shape.ml[50,2044+4]..[51,2082+77])
                        Pexp_ifthenelse
                        expression (lib/shape.ml[50,2044+7]..[50,2044+32])
                          Pexp_apply
                          expression (lib/shape.ml[50,2044+7]..[50,2044+10])
                            Pexp_ident "not" (lib/shape.ml[50,2044+7]..[50,2044+10])
                          [
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[50,2044+11]..[50,2044+32])
                                Pexp_apply
                                expression (lib/shape.ml[50,2044+12]..[50,2044+28])
                                  Pexp_ident "Ident.persistent" (lib/shape.ml[50,2044+12]..[50,2044+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/shape.ml[50,2044+29]..[50,2044+31])
                                      Pexp_ident "id" (lib/shape.ml[50,2044+29]..[50,2044+31])
                                ]
                          ]
                        expression (lib/shape.ml[51,2082+6]..[51,2082+77])
                          Pexp_apply
                          expression (lib/shape.ml[51,2082+6]..[51,2082+23])
                            Pexp_ident "Misc.fatal_errorf" (lib/shape.ml[51,2082+6]..[51,2082+23])
                          [
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[51,2082+24]..[51,2082+61])
                                Pexp_constant PConst_string("Types.Uid.of_compilation_unit_id %S",(lib/shape.ml[51,2082+25]..[51,2082+60]),None)
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[51,2082+62]..[51,2082+77])
                                Pexp_apply
                                expression (lib/shape.ml[51,2082+63]..[51,2082+73])
                                  Pexp_ident "Ident.name" (lib/shape.ml[51,2082+63]..[51,2082+73])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/shape.ml[51,2082+74]..[51,2082+76])
                                      Pexp_ident "id" (lib/shape.ml[51,2082+74]..[51,2082+76])
                                ]
                          ]
                        None
                      expression (lib/shape.ml[52,2161+4]..[52,2161+36])
                        Pexp_construct "Compilation_unit" (lib/shape.ml[52,2161+4]..[52,2161+20])
                        Some
                          expression (lib/shape.ml[52,2161+21]..[52,2161+36])
                            Pexp_apply
                            expression (lib/shape.ml[52,2161+22]..[52,2161+32])
                              Pexp_ident "Ident.name" (lib/shape.ml[52,2161+22]..[52,2161+32])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[52,2161+33]..[52,2161+35])
                                  Pexp_ident "id" (lib/shape.ml[52,2161+33]..[52,2161+35])
                            ]
            ]
          structure_item (lib/shape.ml[54,2199+2]..[57,2329+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[54,2199+6]..[54,2199+18])
                  Ppat_var "of_predef_id" (lib/shape.ml[54,2199+6]..[54,2199+18])
                expression (lib/shape.ml[54,2199+19]..[57,2329+26]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[54,2199+19]..[54,2199+21])
                      Nolabel
                      None
                      pattern (lib/shape.ml[54,2199+19]..[54,2199+21])
                        Ppat_var "id" (lib/shape.ml[54,2199+19]..[54,2199+21])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[55,2223+4]..[57,2329+26])
                      Pexp_sequence
                      expression (lib/shape.ml[55,2223+4]..[56,2260+67])
                        Pexp_ifthenelse
                        expression (lib/shape.ml[55,2223+7]..[55,2223+31])
                          Pexp_apply
                          expression (lib/shape.ml[55,2223+7]..[55,2223+10])
                            Pexp_ident "not" (lib/shape.ml[55,2223+7]..[55,2223+10])
                          [
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[55,2223+11]..[55,2223+31])
                                Pexp_apply
                                expression (lib/shape.ml[55,2223+12]..[55,2223+27])
                                  Pexp_ident "Ident.is_predef" (lib/shape.ml[55,2223+12]..[55,2223+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/shape.ml[55,2223+28]..[55,2223+30])
                                      Pexp_ident "id" (lib/shape.ml[55,2223+28]..[55,2223+30])
                                ]
                          ]
                        expression (lib/shape.ml[56,2260+6]..[56,2260+67])
                          Pexp_apply
                          expression (lib/shape.ml[56,2260+6]..[56,2260+23])
                            Pexp_ident "Misc.fatal_errorf" (lib/shape.ml[56,2260+6]..[56,2260+23])
                          [
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[56,2260+24]..[56,2260+51])
                                Pexp_constant PConst_string("Types.Uid.of_predef_id %S",(lib/shape.ml[56,2260+25]..[56,2260+50]),None)
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[56,2260+52]..[56,2260+67])
                                Pexp_apply
                                expression (lib/shape.ml[56,2260+53]..[56,2260+63])
                                  Pexp_ident "Ident.name" (lib/shape.ml[56,2260+53]..[56,2260+63])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/shape.ml[56,2260+64]..[56,2260+66])
                                      Pexp_ident "id" (lib/shape.ml[56,2260+64]..[56,2260+66])
                                ]
                          ]
                        None
                      expression (lib/shape.ml[57,2329+4]..[57,2329+26])
                        Pexp_construct "Predef" (lib/shape.ml[57,2329+4]..[57,2329+10])
                        Some
                          expression (lib/shape.ml[57,2329+11]..[57,2329+26])
                            Pexp_apply
                            expression (lib/shape.ml[57,2329+12]..[57,2329+22])
                              Pexp_ident "Ident.name" (lib/shape.ml[57,2329+12]..[57,2329+22])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[57,2329+23]..[57,2329+25])
                                  Pexp_ident "id" (lib/shape.ml[57,2329+23]..[57,2329+25])
                            ]
            ]
          structure_item (lib/shape.ml[59,2357+2]..[59,2357+45])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[59,2357+6]..[59,2357+34])
                  Ppat_var "internal_not_actually_unique" (lib/shape.ml[59,2357+6]..[59,2357+34])
                expression (lib/shape.ml[59,2357+37]..[59,2357+45])
                  Pexp_construct "Internal" (lib/shape.ml[59,2357+37]..[59,2357+45])
                  None
            ]
          structure_item (lib/shape.ml[61,2404+2]..[63,2465+16])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[61,2404+6]..[61,2404+28])
                  Ppat_var "for_actual_declaration" (lib/shape.ml[61,2404+6]..[61,2404+28])
                expression (lib/shape.ml[61,2404+31]..[63,2465+16])
                  Pexp_function
                  []
                  None
                  Pfunction_cases (lib/shape.ml[61,2404+31]..[63,2465+16])
                    [
                      <case>
                        pattern (lib/shape.ml[62,2444+6]..[62,2444+12])
                          Ppat_construct "Item" (lib/shape.ml[62,2444+6]..[62,2444+10])
                          Some
                            []
                            pattern (lib/shape.ml[62,2444+11]..[62,2444+12])
                              Ppat_any
                        expression (lib/shape.ml[62,2444+16]..[62,2444+20])
                          Pexp_construct "true" (lib/shape.ml[62,2444+16]..[62,2444+20])
                          None
                      <case>
                        pattern (lib/shape.ml[63,2465+6]..[63,2465+7])
                          Ppat_any
                        expression (lib/shape.ml[63,2465+11]..[63,2465+16])
                          Pexp_construct "false" (lib/shape.ml[63,2465+11]..[63,2465+16])
                          None
                    ]
            ]
        ]
  structure_item (lib/shape.ml[66,2487+0]..[95,3069+3])
    Pstr_module
    "Sig_component_kind" (lib/shape.ml[66,2487+7]..[66,2487+25])
      module_expr (lib/shape.ml[66,2487+28]..[95,3069+3])
        Pmod_structure
        [
          structure_item (lib/shape.ml[67,2522+2]..[74,2627+16])
            Pstr_type Rec
            [
              type_declaration "t" (lib/shape.ml[67,2522+7]..[67,2522+8]) (lib/shape.ml[67,2522+2]..[74,2627+16])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (lib/shape.ml[68,2533+4]..[68,2533+11])
                        "Value" (lib/shape.ml[68,2533+6]..[68,2533+11])
                        []
                        None
                      (lib/shape.ml[69,2545+4]..[69,2545+10])
                        "Type" (lib/shape.ml[69,2545+6]..[69,2545+10])
                        []
                        None
                      (lib/shape.ml[70,2556+4]..[70,2556+12])
                        "Module" (lib/shape.ml[70,2556+6]..[70,2556+12])
                        []
                        None
                      (lib/shape.ml[71,2569+4]..[71,2569+17])
                        "Module_type" (lib/shape.ml[71,2569+6]..[71,2569+17])
                        []
                        None
                      (lib/shape.ml[72,2587+4]..[72,2587+27])
                        "Extension_constructor" (lib/shape.ml[72,2587+6]..[72,2587+27])
                        []
                        None
                      (lib/shape.ml[73,2615+4]..[73,2615+11])
                        "Class" (lib/shape.ml[73,2615+6]..[73,2615+11])
                        []
                        None
                      (lib/shape.ml[74,2627+4]..[74,2627+16])
                        "Class_type" (lib/shape.ml[74,2627+6]..[74,2627+16])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lib/shape.ml[76,2645+2]..[83,2854+32])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[76,2645+6]..[76,2645+15])
                  Ppat_var "to_string" (lib/shape.ml[76,2645+6]..[76,2645+15])
                expression (lib/shape.ml[76,2645+18]..[83,2854+32])
                  Pexp_function
                  []
                  None
                  Pfunction_cases (lib/shape.ml[76,2645+18]..[83,2854+32])
                    [
                      <case>
                        pattern (lib/shape.ml[77,2672+6]..[77,2672+11])
                          Ppat_construct "Value" (lib/shape.ml[77,2672+6]..[77,2672+11])
                          None
                        expression (lib/shape.ml[77,2672+15]..[77,2672+22])
                          Pexp_constant PConst_string("value",(lib/shape.ml[77,2672+16]..[77,2672+21]),None)
                      <case>
                        pattern (lib/shape.ml[78,2695+6]..[78,2695+10])
                          Ppat_construct "Type" (lib/shape.ml[78,2695+6]..[78,2695+10])
                          None
                        expression (lib/shape.ml[78,2695+14]..[78,2695+20])
                          Pexp_constant PConst_string("type",(lib/shape.ml[78,2695+15]..[78,2695+19]),None)
                      <case>
                        pattern (lib/shape.ml[79,2716+6]..[79,2716+12])
                          Ppat_construct "Module" (lib/shape.ml[79,2716+6]..[79,2716+12])
                          None
                        expression (lib/shape.ml[79,2716+16]..[79,2716+24])
                          Pexp_constant PConst_string("module",(lib/shape.ml[79,2716+17]..[79,2716+23]),None)
                      <case>
                        pattern (lib/shape.ml[80,2741+6]..[80,2741+17])
                          Ppat_construct "Module_type" (lib/shape.ml[80,2741+6]..[80,2741+17])
                          None
                        expression (lib/shape.ml[80,2741+21]..[80,2741+34])
                          Pexp_constant PConst_string("module type",(lib/shape.ml[80,2741+22]..[80,2741+33]),None)
                      <case>
                        pattern (lib/shape.ml[81,2776+6]..[81,2776+27])
                          Ppat_construct "Extension_constructor" (lib/shape.ml[81,2776+6]..[81,2776+27])
                          None
                        expression (lib/shape.ml[81,2776+31]..[81,2776+54])
                          Pexp_constant PConst_string("extension constructor",(lib/shape.ml[81,2776+32]..[81,2776+53]),None)
                      <case>
                        pattern (lib/shape.ml[82,2831+6]..[82,2831+11])
                          Ppat_construct "Class" (lib/shape.ml[82,2831+6]..[82,2831+11])
                          None
                        expression (lib/shape.ml[82,2831+15]..[82,2831+22])
                          Pexp_constant PConst_string("class",(lib/shape.ml[82,2831+16]..[82,2831+21]),None)
                      <case>
                        pattern (lib/shape.ml[83,2854+6]..[83,2854+16])
                          Ppat_construct "Class_type" (lib/shape.ml[83,2854+6]..[83,2854+16])
                          None
                        expression (lib/shape.ml[83,2854+20]..[83,2854+32])
                          Pexp_constant PConst_string("class type",(lib/shape.ml[83,2854+21]..[83,2854+31]),None)
                    ]
            ]
          structure_item (lib/shape.ml[85,2888+2]..[94,3056+12])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[85,2888+6]..[85,2888+25])
                  Ppat_var "can_appear_in_types" (lib/shape.ml[85,2888+6]..[85,2888+25])
                expression (lib/shape.ml[85,2888+28]..[94,3056+12])
                  Pexp_function
                  []
                  None
                  Pfunction_cases (lib/shape.ml[85,2888+28]..[94,3056+12])
                    [
                      <case>
                        pattern (lib/shape.ml[86,2925+6]..[87,2937+27])
                          Ppat_or
                          pattern (lib/shape.ml[86,2925+6]..[86,2925+11])
                            Ppat_construct "Value" (lib/shape.ml[86,2925+6]..[86,2925+11])
                            None
                          pattern (lib/shape.ml[87,2937+6]..[87,2937+27])
                            Ppat_construct "Extension_constructor" (lib/shape.ml[87,2937+6]..[87,2937+27])
                            None
                        expression (lib/shape.ml[88,2968+8]..[88,2968+13])
                          Pexp_construct "false" (lib/shape.ml[88,2968+8]..[88,2968+13])
                          None
                      <case>
                        pattern (lib/shape.ml[89,2982+6]..[93,3036+16])
                          Ppat_or
                          pattern (lib/shape.ml[89,2982+6]..[92,3024+11])
                            Ppat_or
                            pattern (lib/shape.ml[89,2982+6]..[91,3006+17])
                              Ppat_or
                              pattern (lib/shape.ml[89,2982+6]..[90,2993+12])
                                Ppat_or
                                pattern (lib/shape.ml[89,2982+6]..[89,2982+10])
                                  Ppat_construct "Type" (lib/shape.ml[89,2982+6]..[89,2982+10])
                                  None
                                pattern (lib/shape.ml[90,2993+6]..[90,2993+12])
                                  Ppat_construct "Module" (lib/shape.ml[90,2993+6]..[90,2993+12])
                                  None
                              pattern (lib/shape.ml[91,3006+6]..[91,3006+17])
                                Ppat_construct "Module_type" (lib/shape.ml[91,3006+6]..[91,3006+17])
                                None
                            pattern (lib/shape.ml[92,3024+6]..[92,3024+11])
                              Ppat_construct "Class" (lib/shape.ml[92,3024+6]..[92,3024+11])
                              None
                          pattern (lib/shape.ml[93,3036+6]..[93,3036+16])
                            Ppat_construct "Class_type" (lib/shape.ml[93,3036+6]..[93,3036+16])
                            None
                        expression (lib/shape.ml[94,3056+8]..[94,3056+12])
                          Pexp_construct "true" (lib/shape.ml[94,3056+8]..[94,3056+12])
                          None
                    ]
            ]
        ]
  structure_item (lib/shape.ml[97,3074+0]..[124,3872+3])
    Pstr_module
    "Item" (lib/shape.ml[97,3074+7]..[97,3074+11])
      module_expr (lib/shape.ml[97,3074+14]..[124,3872+3])
        Pmod_structure
        [
          structure_item (lib/shape.ml[98,3095+2]..[119,3825+5])
            Pstr_module
            "T" (lib/shape.ml[98,3095+9]..[98,3095+10])
              module_expr (lib/shape.ml[98,3095+13]..[119,3825+5])
                Pmod_structure
                [
                  structure_item (lib/shape.ml[99,3115+4]..[99,3115+42])
                    Pstr_type Rec
                    [
                      type_declaration "t" (lib/shape.ml[99,3115+9]..[99,3115+10]) (lib/shape.ml[99,3115+4]..[99,3115+42])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (lib/shape.ml[99,3115+13]..[99,3115+42])
                              Ptyp_tuple
                              [
                                core_type (lib/shape.ml[99,3115+13]..[99,3115+19])
                                  Ptyp_constr "string" (lib/shape.ml[99,3115+13]..[99,3115+19])
                                  []
                                core_type (lib/shape.ml[99,3115+22]..[99,3115+42])
                                  Ptyp_constr "Sig_component_kind.t" (lib/shape.ml[99,3115+22]..[99,3115+42])
                                  []
                              ]
                    ]
                  structure_item (lib/shape.ml[100,3158+4]..[100,3158+25])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[100,3158+8]..[100,3158+15])
                          Ppat_var "compare" (lib/shape.ml[100,3158+8]..[100,3158+15])
                        expression (lib/shape.ml[100,3158+18]..[100,3158+25])
                          Pexp_ident "compare" (lib/shape.ml[100,3158+18]..[100,3158+25])
                    ]
                  structure_item (lib/shape.ml[102,3185+4]..[102,3185+29])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[102,3185+8]..[102,3185+12])
                          Ppat_var "make" (lib/shape.ml[102,3185+8]..[102,3185+12])
                        expression (lib/shape.ml[102,3185+13]..[102,3185+29]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[102,3185+13]..[102,3185+16])
                              Nolabel
                              None
                              pattern (lib/shape.ml[102,3185+13]..[102,3185+16])
                                Ppat_var "str" (lib/shape.ml[102,3185+13]..[102,3185+16])
                            Pparam_val (lib/shape.ml[102,3185+17]..[102,3185+19])
                              Nolabel
                              None
                              pattern (lib/shape.ml[102,3185+17]..[102,3185+19])
                                Ppat_var "ns" (lib/shape.ml[102,3185+17]..[102,3185+19])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[102,3185+22]..[102,3185+29])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[102,3185+22]..[102,3185+25])
                                  Pexp_ident "str" (lib/shape.ml[102,3185+22]..[102,3185+25])
                                expression (lib/shape.ml[102,3185+27]..[102,3185+29])
                                  Pexp_ident "ns" (lib/shape.ml[102,3185+27]..[102,3185+29])
                              ]
                    ]
                  structure_item (lib/shape.ml[104,3216+4]..[104,3216+58])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[104,3216+8]..[104,3216+13])
                          Ppat_var "value" (lib/shape.ml[104,3216+8]..[104,3216+13])
                        expression (lib/shape.ml[104,3216+14]..[104,3216+58]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[104,3216+14]..[104,3216+16])
                              Nolabel
                              None
                              pattern (lib/shape.ml[104,3216+14]..[104,3216+16])
                                Ppat_var "id" (lib/shape.ml[104,3216+14]..[104,3216+16])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[104,3216+19]..[104,3216+58])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[104,3216+19]..[104,3216+32])
                                  Pexp_apply
                                  expression (lib/shape.ml[104,3216+19]..[104,3216+29])
                                    Pexp_ident "Ident.name" (lib/shape.ml[104,3216+19]..[104,3216+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[104,3216+30]..[104,3216+32])
                                        Pexp_ident "id" (lib/shape.ml[104,3216+30]..[104,3216+32])
                                  ]
                                expression (lib/shape.ml[104,3216+34]..[104,3216+58])
                                  Pexp_construct "Sig_component_kind.Value" (lib/shape.ml[104,3216+34]..[104,3216+58])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[105,3275+4]..[105,3275+57])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[105,3275+8]..[105,3275+13])
                          Ppat_var "type_" (lib/shape.ml[105,3275+8]..[105,3275+13])
                        expression (lib/shape.ml[105,3275+14]..[105,3275+57]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[105,3275+14]..[105,3275+16])
                              Nolabel
                              None
                              pattern (lib/shape.ml[105,3275+14]..[105,3275+16])
                                Ppat_var "id" (lib/shape.ml[105,3275+14]..[105,3275+16])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[105,3275+19]..[105,3275+57])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[105,3275+19]..[105,3275+32])
                                  Pexp_apply
                                  expression (lib/shape.ml[105,3275+19]..[105,3275+29])
                                    Pexp_ident "Ident.name" (lib/shape.ml[105,3275+19]..[105,3275+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[105,3275+30]..[105,3275+32])
                                        Pexp_ident "id" (lib/shape.ml[105,3275+30]..[105,3275+32])
                                  ]
                                expression (lib/shape.ml[105,3275+34]..[105,3275+57])
                                  Pexp_construct "Sig_component_kind.Type" (lib/shape.ml[105,3275+34]..[105,3275+57])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[106,3333+4]..[106,3333+61])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[106,3333+8]..[106,3333+15])
                          Ppat_var "module_" (lib/shape.ml[106,3333+8]..[106,3333+15])
                        expression (lib/shape.ml[106,3333+16]..[106,3333+61]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[106,3333+16]..[106,3333+18])
                              Nolabel
                              None
                              pattern (lib/shape.ml[106,3333+16]..[106,3333+18])
                                Ppat_var "id" (lib/shape.ml[106,3333+16]..[106,3333+18])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[106,3333+21]..[106,3333+61])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[106,3333+21]..[106,3333+34])
                                  Pexp_apply
                                  expression (lib/shape.ml[106,3333+21]..[106,3333+31])
                                    Pexp_ident "Ident.name" (lib/shape.ml[106,3333+21]..[106,3333+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[106,3333+32]..[106,3333+34])
                                        Pexp_ident "id" (lib/shape.ml[106,3333+32]..[106,3333+34])
                                  ]
                                expression (lib/shape.ml[106,3333+36]..[106,3333+61])
                                  Pexp_construct "Sig_component_kind.Module" (lib/shape.ml[106,3333+36]..[106,3333+61])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[107,3395+4]..[107,3395+70])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[107,3395+8]..[107,3395+19])
                          Ppat_var "module_type" (lib/shape.ml[107,3395+8]..[107,3395+19])
                        expression (lib/shape.ml[107,3395+20]..[107,3395+70]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[107,3395+20]..[107,3395+22])
                              Nolabel
                              None
                              pattern (lib/shape.ml[107,3395+20]..[107,3395+22])
                                Ppat_var "id" (lib/shape.ml[107,3395+20]..[107,3395+22])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[107,3395+25]..[107,3395+70])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[107,3395+25]..[107,3395+38])
                                  Pexp_apply
                                  expression (lib/shape.ml[107,3395+25]..[107,3395+35])
                                    Pexp_ident "Ident.name" (lib/shape.ml[107,3395+25]..[107,3395+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[107,3395+36]..[107,3395+38])
                                        Pexp_ident "id" (lib/shape.ml[107,3395+36]..[107,3395+38])
                                  ]
                                expression (lib/shape.ml[107,3395+40]..[107,3395+70])
                                  Pexp_construct "Sig_component_kind.Module_type" (lib/shape.ml[107,3395+40]..[107,3395+70])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[108,3466+4]..[109,3501+61])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[108,3466+8]..[108,3466+29])
                          Ppat_var "extension_constructor" (lib/shape.ml[108,3466+8]..[108,3466+29])
                        expression (lib/shape.ml[108,3466+30]..[109,3501+61]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[108,3466+30]..[108,3466+32])
                              Nolabel
                              None
                              pattern (lib/shape.ml[108,3466+30]..[108,3466+32])
                                Ppat_var "id" (lib/shape.ml[108,3466+30]..[108,3466+32])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[109,3501+6]..[109,3501+61])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[109,3501+6]..[109,3501+19])
                                  Pexp_apply
                                  expression (lib/shape.ml[109,3501+6]..[109,3501+16])
                                    Pexp_ident "Ident.name" (lib/shape.ml[109,3501+6]..[109,3501+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[109,3501+17]..[109,3501+19])
                                        Pexp_ident "id" (lib/shape.ml[109,3501+17]..[109,3501+19])
                                  ]
                                expression (lib/shape.ml[109,3501+21]..[109,3501+61])
                                  Pexp_construct "Sig_component_kind.Extension_constructor" (lib/shape.ml[109,3501+21]..[109,3501+61])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[110,3563+4]..[111,3583+45])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[110,3563+8]..[110,3563+14])
                          Ppat_var "class_" (lib/shape.ml[110,3563+8]..[110,3563+14])
                        expression (lib/shape.ml[110,3563+15]..[111,3583+45]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[110,3563+15]..[110,3563+17])
                              Nolabel
                              None
                              pattern (lib/shape.ml[110,3563+15]..[110,3563+17])
                                Ppat_var "id" (lib/shape.ml[110,3563+15]..[110,3563+17])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[111,3583+6]..[111,3583+45])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[111,3583+6]..[111,3583+19])
                                  Pexp_apply
                                  expression (lib/shape.ml[111,3583+6]..[111,3583+16])
                                    Pexp_ident "Ident.name" (lib/shape.ml[111,3583+6]..[111,3583+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[111,3583+17]..[111,3583+19])
                                        Pexp_ident "id" (lib/shape.ml[111,3583+17]..[111,3583+19])
                                  ]
                                expression (lib/shape.ml[111,3583+21]..[111,3583+45])
                                  Pexp_construct "Sig_component_kind.Class" (lib/shape.ml[111,3583+21]..[111,3583+45])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[112,3629+4]..[113,3653+50])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[112,3629+8]..[112,3629+18])
                          Ppat_var "class_type" (lib/shape.ml[112,3629+8]..[112,3629+18])
                        expression (lib/shape.ml[112,3629+19]..[113,3653+50]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[112,3629+19]..[112,3629+21])
                              Nolabel
                              None
                              pattern (lib/shape.ml[112,3629+19]..[112,3629+21])
                                Ppat_var "id" (lib/shape.ml[112,3629+19]..[112,3629+21])
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[113,3653+6]..[113,3653+50])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[113,3653+6]..[113,3653+19])
                                  Pexp_apply
                                  expression (lib/shape.ml[113,3653+6]..[113,3653+16])
                                    Pexp_ident "Ident.name" (lib/shape.ml[113,3653+6]..[113,3653+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[113,3653+17]..[113,3653+19])
                                        Pexp_ident "id" (lib/shape.ml[113,3653+17]..[113,3653+19])
                                  ]
                                expression (lib/shape.ml[113,3653+21]..[113,3653+50])
                                  Pexp_construct "Sig_component_kind.Class_type" (lib/shape.ml[113,3653+21]..[113,3653+50])
                                  None
                              ]
                    ]
                  structure_item (lib/shape.ml[115,3705+4]..[118,3783+41])
                    Pstr_value Nonrec
                    [
                      <def>
                        pattern (lib/shape.ml[115,3705+8]..[115,3705+13])
                          Ppat_var "print" (lib/shape.ml[115,3705+8]..[115,3705+13])
                        expression (lib/shape.ml[115,3705+14]..[118,3783+41]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/shape.ml[115,3705+14]..[115,3705+17])
                              Nolabel
                              None
                              pattern (lib/shape.ml[115,3705+14]..[115,3705+17])
                                Ppat_var "fmt" (lib/shape.ml[115,3705+14]..[115,3705+17])
                            Pparam_val (lib/shape.ml[115,3705+18]..[115,3705+28])
                              Nolabel
                              None
                              pattern (lib/shape.ml[115,3705+18]..[115,3705+28])
                                Ppat_tuple
                                [
                                  pattern (lib/shape.ml[115,3705+19]..[115,3705+23])
                                    Ppat_var "name" (lib/shape.ml[115,3705+19]..[115,3705+23])
                                  pattern (lib/shape.ml[115,3705+25]..[115,3705+27])
                                    Ppat_var "ns" (lib/shape.ml[115,3705+25]..[115,3705+27])
                                ]
                          ]
                          None
                          Pfunction_body
                            expression (lib/shape.ml[116,3736+6]..[118,3783+41])
                              Pexp_apply
                              expression (lib/shape.ml[116,3736+6]..[116,3736+20])
                                Pexp_ident "Format.fprintf" (lib/shape.ml[116,3736+6]..[116,3736+20])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[116,3736+21]..[116,3736+24])
                                    Pexp_ident "fmt" (lib/shape.ml[116,3736+21]..[116,3736+24])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[116,3736+25]..[116,3736+33])
                                    Pexp_constant PConst_string("%S[%s]",(lib/shape.ml[116,3736+26]..[116,3736+32]),None)
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[117,3770+8]..[117,3770+12])
                                    Pexp_ident "name" (lib/shape.ml[117,3770+8]..[117,3770+12])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[118,3783+8]..[118,3783+41])
                                    Pexp_apply
                                    expression (lib/shape.ml[118,3783+9]..[118,3783+37])
                                      Pexp_ident "Sig_component_kind.to_string" (lib/shape.ml[118,3783+9]..[118,3783+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/shape.ml[118,3783+38]..[118,3783+40])
                                          Pexp_ident "ns" (lib/shape.ml[118,3783+38]..[118,3783+40])
                                    ]
                              ]
                    ]
                ]
          structure_item (lib/shape.ml[121,3832+2]..[121,3832+11])
            Pstr_include            module_expr (lib/shape.ml[121,3832+10]..[121,3832+11])
              Pmod_ident "T" (lib/shape.ml[121,3832+10]..[121,3832+11])
          structure_item (lib/shape.ml[123,3845+2]..[123,3845+26])
            Pstr_module
            "Map" (lib/shape.ml[123,3845+9]..[123,3845+12])
              module_expr (lib/shape.ml[123,3845+15]..[123,3845+26])
                Pmod_apply
                module_expr (lib/shape.ml[123,3845+15]..[123,3845+23])
                  Pmod_ident "Map.Make" (lib/shape.ml[123,3845+15]..[123,3845+23])
                module_expr (lib/shape.ml[123,3845+24]..[123,3845+25])
                  Pmod_ident "T" (lib/shape.ml[123,3845+24]..[123,3845+25])
        ]
  structure_item (lib/shape.ml[126,3877+0]..[126,3877+18])
    Pstr_type Rec
    [
      type_declaration "var" (lib/shape.ml[126,3877+5]..[126,3877+8]) (lib/shape.ml[126,3877+0]..[126,3877+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/shape.ml[126,3877+11]..[126,3877+18])
              Ptyp_constr "Ident.t" (lib/shape.ml[126,3877+11]..[126,3877+18])
              []
    ]
  structure_item (lib/shape.ml[127,3896+0]..[135,4060+23])
    Pstr_type Rec
    [
      type_declaration "t" (lib/shape.ml[127,3896+5]..[127,3896+6]) (lib/shape.ml[127,3896+0]..[127,3896+42])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/shape.ml[127,3896+11]..[127,3896+29])
                Immutable
                "uid" (lib/shape.ml[127,3896+11]..[127,3896+14])                core_type (lib/shape.ml[127,3896+16]..[127,3896+28])
                  Ptyp_constr "option" (lib/shape.ml[127,3896+22]..[127,3896+28])
                  [
                    core_type (lib/shape.ml[127,3896+16]..[127,3896+21])
                      Ptyp_constr "Uid.t" (lib/shape.ml[127,3896+16]..[127,3896+21])
                      []
                  ]
              (lib/shape.ml[127,3896+30]..[127,3896+40])
                Immutable
                "desc" (lib/shape.ml[127,3896+30]..[127,3896+34])                core_type (lib/shape.ml[127,3896+36]..[127,3896+40])
                  Ptyp_constr "desc" (lib/shape.ml[127,3896+36]..[127,3896+40])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "desc" (lib/shape.ml[128,3939+4]..[128,3939+8]) (lib/shape.ml[128,3939+0]..[135,4060+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/shape.ml[129,3950+2]..[129,3950+14])
                "Var" (lib/shape.ml[129,3950+4]..[129,3950+7])
                [
                  core_type (lib/shape.ml[129,3950+11]..[129,3950+14])
                    Ptyp_constr "var" (lib/shape.ml[129,3950+11]..[129,3950+14])
                    []
                ]
                None
              (lib/shape.ml[130,3965+2]..[130,3965+18])
                "Abs" (lib/shape.ml[130,3965+4]..[130,3965+7])
                [
                  core_type (lib/shape.ml[130,3965+11]..[130,3965+14])
                    Ptyp_constr "var" (lib/shape.ml[130,3965+11]..[130,3965+14])
                    []
                  core_type (lib/shape.ml[130,3965+17]..[130,3965+18])
                    Ptyp_constr "t" (lib/shape.ml[130,3965+17]..[130,3965+18])
                    []
                ]
                None
              (lib/shape.ml[131,3984+2]..[131,3984+16])
                "App" (lib/shape.ml[131,3984+4]..[131,3984+7])
                [
                  core_type (lib/shape.ml[131,3984+11]..[131,3984+12])
                    Ptyp_constr "t" (lib/shape.ml[131,3984+11]..[131,3984+12])
                    []
                  core_type (lib/shape.ml[131,3984+15]..[131,3984+16])
                    Ptyp_constr "t" (lib/shape.ml[131,3984+15]..[131,3984+16])
                    []
                ]
                None
              (lib/shape.ml[132,4001+2]..[132,4001+26])
                "Struct" (lib/shape.ml[132,4001+4]..[132,4001+10])
                [
                  core_type (lib/shape.ml[132,4001+14]..[132,4001+26])
                    Ptyp_constr "Item.Map.t" (lib/shape.ml[132,4001+16]..[132,4001+26])
                    [
                      core_type (lib/shape.ml[132,4001+14]..[132,4001+15])
                        Ptyp_constr "t" (lib/shape.ml[132,4001+14]..[132,4001+15])
                        []
                    ]
                ]
                None
              (lib/shape.ml[133,4028+2]..[133,4028+8])
                "Leaf" (lib/shape.ml[133,4028+4]..[133,4028+8])
                []
                None
              (lib/shape.ml[134,4037+2]..[134,4037+22])
                "Proj" (lib/shape.ml[134,4037+4]..[134,4037+8])
                [
                  core_type (lib/shape.ml[134,4037+12]..[134,4037+13])
                    Ptyp_constr "t" (lib/shape.ml[134,4037+12]..[134,4037+13])
                    []
                  core_type (lib/shape.ml[134,4037+16]..[134,4037+22])
                    Ptyp_constr "Item.t" (lib/shape.ml[134,4037+16]..[134,4037+22])
                    []
                ]
                None
              (lib/shape.ml[135,4060+2]..[135,4060+23])
                "Comp_unit" (lib/shape.ml[135,4060+4]..[135,4060+13])
                [
                  core_type (lib/shape.ml[135,4060+17]..[135,4060+23])
                    Ptyp_constr "string" (lib/shape.ml[135,4060+17]..[135,4060+23])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/shape.ml[190,6170+0]..[192,6249+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[190,6170+4]..[190,6170+13])
          Ppat_var "fresh_var" (lib/shape.ml[190,6170+4]..[190,6170+13])
        expression (lib/shape.ml[190,6170+14]..[192,6249+41]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[190,6170+14]..[190,6170+33])
              Optional "name"
              Some
                expression (lib/shape.ml[190,6170+21]..[190,6170+32])
                  Pexp_constant PConst_string("shape-var",(lib/shape.ml[190,6170+22]..[190,6170+31]),None)
              pattern (lib/shape.ml[190,6170+16]..[190,6170+20])
                Ppat_var "name" (lib/shape.ml[190,6170+16]..[190,6170+20])
            Pparam_val (lib/shape.ml[190,6170+34]..[190,6170+37])
              Nolabel
              None
              pattern (lib/shape.ml[190,6170+34]..[190,6170+37])
                Ppat_var "uid" (lib/shape.ml[190,6170+34]..[190,6170+37])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[191,6210+2]..[192,6249+41])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/shape.ml[191,6210+6]..[191,6210+9])
                    Ppat_var "var" (lib/shape.ml[191,6210+6]..[191,6210+9])
                  expression (lib/shape.ml[191,6210+12]..[191,6210+35])
                    Pexp_apply
                    expression (lib/shape.ml[191,6210+12]..[191,6210+30])
                      Pexp_ident "Ident.create_local" (lib/shape.ml[191,6210+12]..[191,6210+30])
                    [
                      <arg>
                      Nolabel
                        expression (lib/shape.ml[191,6210+31]..[191,6210+35])
                          Pexp_ident "name" (lib/shape.ml[191,6210+31]..[191,6210+35])
                    ]
              ]
              expression (lib/shape.ml[192,6249+2]..[192,6249+41])
                Pexp_tuple
                [
                  expression (lib/shape.ml[192,6249+2]..[192,6249+5])
                    Pexp_ident "var" (lib/shape.ml[192,6249+2]..[192,6249+5])
                  expression (lib/shape.ml[192,6249+7]..[192,6249+41])
                    Pexp_record
                    [
                      "uid" (lib/shape.ml[192,6249+9]..[192,6249+12])
                        expression (lib/shape.ml[192,6249+15]..[192,6249+23])
                          Pexp_construct "Some" (lib/shape.ml[192,6249+15]..[192,6249+19])
                          Some
                            expression (lib/shape.ml[192,6249+20]..[192,6249+23])
                              Pexp_ident "uid" (lib/shape.ml[192,6249+20]..[192,6249+23])
                      "desc" (lib/shape.ml[192,6249+25]..[192,6249+29])
                        expression (lib/shape.ml[192,6249+32]..[192,6249+39])
                          Pexp_construct "Var" (lib/shape.ml[192,6249+32]..[192,6249+35])
                          Some
                            expression (lib/shape.ml[192,6249+36]..[192,6249+39])
                              Pexp_ident "var" (lib/shape.ml[192,6249+36]..[192,6249+39])
                    ]
                    None
                ]
    ]
  structure_item (lib/shape.ml[194,6292+0]..[194,6292+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[194,6292+4]..[194,6292+29])
          Ppat_var "for_unnamed_functor_param" (lib/shape.ml[194,6292+4]..[194,6292+29])
        expression (lib/shape.ml[194,6292+32]..[194,6292+55])
          Pexp_apply
          expression (lib/shape.ml[194,6292+32]..[194,6292+50])
            Pexp_ident "Ident.create_local" (lib/shape.ml[194,6292+32]..[194,6292+50])
          [
            <arg>
            Nolabel
              expression (lib/shape.ml[194,6292+51]..[194,6292+55])
                Pexp_constant PConst_string("()",(lib/shape.ml[194,6292+52]..[194,6292+54]),None)
          ]
    ]
  structure_item (lib/shape.ml[196,6349+0]..[197,6366+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[196,6349+4]..[196,6349+7])
          Ppat_var "var" (lib/shape.ml[196,6349+4]..[196,6349+7])
        expression (lib/shape.ml[196,6349+8]..[197,6366+35]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[196,6349+8]..[196,6349+11])
              Nolabel
              None
              pattern (lib/shape.ml[196,6349+8]..[196,6349+11])
                Ppat_var "uid" (lib/shape.ml[196,6349+8]..[196,6349+11])
            Pparam_val (lib/shape.ml[196,6349+12]..[196,6349+14])
              Nolabel
              None
              pattern (lib/shape.ml[196,6349+12]..[196,6349+14])
                Ppat_var "id" (lib/shape.ml[196,6349+12]..[196,6349+14])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[197,6366+2]..[197,6366+35])
              Pexp_record
              [
                "uid" (lib/shape.ml[197,6366+4]..[197,6366+7])
                  expression (lib/shape.ml[197,6366+10]..[197,6366+18])
                    Pexp_construct "Some" (lib/shape.ml[197,6366+10]..[197,6366+14])
                    Some
                      expression (lib/shape.ml[197,6366+15]..[197,6366+18])
                        Pexp_ident "uid" (lib/shape.ml[197,6366+15]..[197,6366+18])
                "desc" (lib/shape.ml[197,6366+20]..[197,6366+24])
                  expression (lib/shape.ml[197,6366+27]..[197,6366+33])
                    Pexp_construct "Var" (lib/shape.ml[197,6366+27]..[197,6366+30])
                    Some
                      expression (lib/shape.ml[197,6366+31]..[197,6366+33])
                        Pexp_ident "id" (lib/shape.ml[197,6366+31]..[197,6366+33])
              ]
              None
    ]
  structure_item (lib/shape.ml[199,6403+0]..[200,6427+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[199,6403+4]..[199,6403+7])
          Ppat_var "abs" (lib/shape.ml[199,6403+4]..[199,6403+7])
        expression (lib/shape.ml[199,6403+8]..[200,6427+33]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[199,6403+8]..[199,6403+12])
              Optional "uid"
              None
              pattern (lib/shape.ml[199,6403+9]..[199,6403+12])
                Ppat_var "uid" (lib/shape.ml[199,6403+9]..[199,6403+12])
            Pparam_val (lib/shape.ml[199,6403+13]..[199,6403+16])
              Nolabel
              None
              pattern (lib/shape.ml[199,6403+13]..[199,6403+16])
                Ppat_var "var" (lib/shape.ml[199,6403+13]..[199,6403+16])
            Pparam_val (lib/shape.ml[199,6403+17]..[199,6403+21])
              Nolabel
              None
              pattern (lib/shape.ml[199,6403+17]..[199,6403+21])
                Ppat_var "body" (lib/shape.ml[199,6403+17]..[199,6403+21])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[200,6427+2]..[200,6427+33])
              Pexp_record
              [
                "uid" (lib/shape.ml[200,6427+4]..[200,6427+7]) ghost
                  expression (lib/shape.ml[200,6427+4]..[200,6427+7])
                    Pexp_ident "uid" (lib/shape.ml[200,6427+4]..[200,6427+7])
                "desc" (lib/shape.ml[200,6427+9]..[200,6427+13])
                  expression (lib/shape.ml[200,6427+16]..[200,6427+31])
                    Pexp_construct "Abs" (lib/shape.ml[200,6427+16]..[200,6427+19])
                    Some
                      expression (lib/shape.ml[200,6427+20]..[200,6427+31])
                        Pexp_tuple
                        [
                          expression (lib/shape.ml[200,6427+21]..[200,6427+24])
                            Pexp_ident "var" (lib/shape.ml[200,6427+21]..[200,6427+24])
                          expression (lib/shape.ml[200,6427+26]..[200,6427+30])
                            Pexp_ident "body" (lib/shape.ml[200,6427+26]..[200,6427+30])
                        ]
              ]
              None
    ]
  structure_item (lib/shape.ml[202,6462+0]..[203,6481+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[202,6462+4]..[202,6462+7])
          Ppat_var "str" (lib/shape.ml[202,6462+4]..[202,6462+7])
        expression (lib/shape.ml[202,6462+8]..[203,6481+28]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[202,6462+8]..[202,6462+12])
              Optional "uid"
              None
              pattern (lib/shape.ml[202,6462+9]..[202,6462+12])
                Ppat_var "uid" (lib/shape.ml[202,6462+9]..[202,6462+12])
            Pparam_val (lib/shape.ml[202,6462+13]..[202,6462+16])
              Nolabel
              None
              pattern (lib/shape.ml[202,6462+13]..[202,6462+16])
                Ppat_var "map" (lib/shape.ml[202,6462+13]..[202,6462+16])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[203,6481+2]..[203,6481+28])
              Pexp_record
              [
                "uid" (lib/shape.ml[203,6481+4]..[203,6481+7]) ghost
                  expression (lib/shape.ml[203,6481+4]..[203,6481+7])
                    Pexp_ident "uid" (lib/shape.ml[203,6481+4]..[203,6481+7])
                "desc" (lib/shape.ml[203,6481+9]..[203,6481+13])
                  expression (lib/shape.ml[203,6481+16]..[203,6481+26])
                    Pexp_construct "Struct" (lib/shape.ml[203,6481+16]..[203,6481+22])
                    Some
                      expression (lib/shape.ml[203,6481+23]..[203,6481+26])
                        Pexp_ident "map" (lib/shape.ml[203,6481+23]..[203,6481+26])
              ]
              None
    ]
  structure_item (lib/shape.ml[205,6511+0]..[206,6526+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[205,6511+4]..[205,6511+8])
          Ppat_var "leaf" (lib/shape.ml[205,6511+4]..[205,6511+8])
        expression (lib/shape.ml[205,6511+9]..[206,6526+33]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[205,6511+9]..[205,6511+12])
              Nolabel
              None
              pattern (lib/shape.ml[205,6511+9]..[205,6511+12])
                Ppat_var "uid" (lib/shape.ml[205,6511+9]..[205,6511+12])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[206,6526+2]..[206,6526+33])
              Pexp_record
              [
                "uid" (lib/shape.ml[206,6526+4]..[206,6526+7])
                  expression (lib/shape.ml[206,6526+10]..[206,6526+18])
                    Pexp_construct "Some" (lib/shape.ml[206,6526+10]..[206,6526+14])
                    Some
                      expression (lib/shape.ml[206,6526+15]..[206,6526+18])
                        Pexp_ident "uid" (lib/shape.ml[206,6526+15]..[206,6526+18])
                "desc" (lib/shape.ml[206,6526+20]..[206,6526+24])
                  expression (lib/shape.ml[206,6526+27]..[206,6526+31])
                    Pexp_construct "Leaf" (lib/shape.ml[206,6526+27]..[206,6526+31])
                    None
              ]
              None
    ]
  structure_item (lib/shape.ml[208,6561+0]..[219,6841+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[208,6561+4]..[208,6561+8])
          Ppat_var "proj" (lib/shape.ml[208,6561+4]..[208,6561+8])
        expression (lib/shape.ml[208,6561+9]..[219,6841+36]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[208,6561+9]..[208,6561+13])
              Optional "uid"
              None
              pattern (lib/shape.ml[208,6561+10]..[208,6561+13])
                Ppat_var "uid" (lib/shape.ml[208,6561+10]..[208,6561+13])
            Pparam_val (lib/shape.ml[208,6561+14]..[208,6561+15])
              Nolabel
              None
              pattern (lib/shape.ml[208,6561+14]..[208,6561+15])
                Ppat_var "t" (lib/shape.ml[208,6561+14]..[208,6561+15])
            Pparam_val (lib/shape.ml[208,6561+16]..[208,6561+20])
              Nolabel
              None
              pattern (lib/shape.ml[208,6561+16]..[208,6561+20])
                Ppat_var "item" (lib/shape.ml[208,6561+16]..[208,6561+20])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[209,6584+2]..[219,6841+36])
              Pexp_match
              expression (lib/shape.ml[209,6584+8]..[209,6584+14])
                Pexp_field
                expression (lib/shape.ml[209,6584+8]..[209,6584+9])
                  Pexp_ident "t" (lib/shape.ml[209,6584+8]..[209,6584+9])
                "desc" (lib/shape.ml[209,6584+10]..[209,6584+14])
              [
                <case>
                  pattern (lib/shape.ml[210,6604+4]..[210,6604+8])
                    Ppat_construct "Leaf" (lib/shape.ml[210,6604+4]..[210,6604+8])
                    None
                  expression (lib/shape.ml[213,6707+6]..[213,6707+7])
                    Pexp_ident "t" (lib/shape.ml[213,6707+6]..[213,6707+7])
                <case>
                  pattern (lib/shape.ml[214,6715+4]..[214,6715+14])
                    Ppat_construct "Struct" (lib/shape.ml[214,6715+4]..[214,6715+10])
                    Some
                      []
                      pattern (lib/shape.ml[214,6715+11]..[214,6715+14])
                        Ppat_var "map" (lib/shape.ml[214,6715+11]..[214,6715+14])
                  expression (lib/shape.ml[215,6733+6]..[217,6822+9])
                    Pexp_try
                    expression (lib/shape.ml[215,6733+16]..[215,6733+38])
                      Pexp_apply
                      expression (lib/shape.ml[215,6733+16]..[215,6733+29])
                        Pexp_ident "Item.Map.find" (lib/shape.ml[215,6733+16]..[215,6733+29])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[215,6733+30]..[215,6733+34])
                            Pexp_ident "item" (lib/shape.ml[215,6733+30]..[215,6733+34])
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[215,6733+35]..[215,6733+38])
                            Pexp_ident "map" (lib/shape.ml[215,6733+35]..[215,6733+38])
                      ]
                    [
                      <case>
                        pattern (lib/shape.ml[216,6772+11]..[216,6772+20])
                          Ppat_construct "Not_found" (lib/shape.ml[216,6772+11]..[216,6772+20])
                          None
                        expression (lib/shape.ml[216,6772+24]..[216,6772+25])
                          Pexp_ident "t" (lib/shape.ml[216,6772+24]..[216,6772+25])
                    ]
                <case>
                  pattern (lib/shape.ml[218,6832+4]..[218,6832+5])
                    Ppat_any
                  expression (lib/shape.ml[219,6841+6]..[219,6841+36])
                    Pexp_record
                    [
                      "uid" (lib/shape.ml[219,6841+8]..[219,6841+11]) ghost
                        expression (lib/shape.ml[219,6841+8]..[219,6841+11])
                          Pexp_ident "uid" (lib/shape.ml[219,6841+8]..[219,6841+11])
                      "desc" (lib/shape.ml[219,6841+13]..[219,6841+17])
                        expression (lib/shape.ml[219,6841+20]..[219,6841+34])
                          Pexp_construct "Proj" (lib/shape.ml[219,6841+20]..[219,6841+24])
                          Some
                            expression (lib/shape.ml[219,6841+25]..[219,6841+34])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[219,6841+26]..[219,6841+27])
                                  Pexp_ident "t" (lib/shape.ml[219,6841+26]..[219,6841+27])
                                expression (lib/shape.ml[219,6841+29]..[219,6841+33])
                                  Pexp_ident "item" (lib/shape.ml[219,6841+29]..[219,6841+33])
                              ]
                    ]
                    None
              ]
    ]
  structure_item (lib/shape.ml[221,6879+0]..[222,6901+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[221,6879+4]..[221,6879+7])
          Ppat_var "app" (lib/shape.ml[221,6879+4]..[221,6879+7])
        expression (lib/shape.ml[221,6879+8]..[222,6901+34]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[221,6879+8]..[221,6879+12])
              Optional "uid"
              None
              pattern (lib/shape.ml[221,6879+9]..[221,6879+12])
                Ppat_var "uid" (lib/shape.ml[221,6879+9]..[221,6879+12])
            Pparam_val (lib/shape.ml[221,6879+13]..[221,6879+14])
              Nolabel
              None
              pattern (lib/shape.ml[221,6879+13]..[221,6879+14])
                Ppat_var "f" (lib/shape.ml[221,6879+13]..[221,6879+14])
            Pparam_val (lib/shape.ml[221,6879+15]..[221,6879+19])
              Labelled "arg"
              None
              pattern (lib/shape.ml[221,6879+16]..[221,6879+19])
                Ppat_var "arg" (lib/shape.ml[221,6879+16]..[221,6879+19])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[222,6901+6]..[222,6901+34])
              Pexp_record
              [
                "uid" (lib/shape.ml[222,6901+8]..[222,6901+11]) ghost
                  expression (lib/shape.ml[222,6901+8]..[222,6901+11])
                    Pexp_ident "uid" (lib/shape.ml[222,6901+8]..[222,6901+11])
                "desc" (lib/shape.ml[222,6901+13]..[222,6901+17])
                  expression (lib/shape.ml[222,6901+20]..[222,6901+32])
                    Pexp_construct "App" (lib/shape.ml[222,6901+20]..[222,6901+23])
                    Some
                      expression (lib/shape.ml[222,6901+24]..[222,6901+32])
                        Pexp_tuple
                        [
                          expression (lib/shape.ml[222,6901+25]..[222,6901+26])
                            Pexp_ident "f" (lib/shape.ml[222,6901+25]..[222,6901+26])
                          expression (lib/shape.ml[222,6901+28]..[222,6901+31])
                            Pexp_ident "arg" (lib/shape.ml[222,6901+28]..[222,6901+31])
                        ]
              ]
              None
    ]
  structure_item (lib/shape.ml[224,6937+0]..[227,7009+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[224,6937+4]..[224,6937+17])
          Ppat_var "decompose_abs" (lib/shape.ml[224,6937+4]..[224,6937+17])
        expression (lib/shape.ml[224,6937+18]..[227,7009+13]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[224,6937+18]..[224,6937+19])
              Nolabel
              None
              pattern (lib/shape.ml[224,6937+18]..[224,6937+19])
                Ppat_var "t" (lib/shape.ml[224,6937+18]..[224,6937+19])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[225,6959+2]..[227,7009+13])
              Pexp_match
              expression (lib/shape.ml[225,6959+8]..[225,6959+14])
                Pexp_field
                expression (lib/shape.ml[225,6959+8]..[225,6959+9])
                  Pexp_ident "t" (lib/shape.ml[225,6959+8]..[225,6959+9])
                "desc" (lib/shape.ml[225,6959+10]..[225,6959+14])
              [
                <case>
                  pattern (lib/shape.ml[226,6979+4]..[226,6979+14])
                    Ppat_construct "Abs" (lib/shape.ml[226,6979+4]..[226,6979+7])
                    Some
                      []
                      pattern (lib/shape.ml[226,6979+8]..[226,6979+14])
                        Ppat_tuple
                        [
                          pattern (lib/shape.ml[226,6979+9]..[226,6979+10])
                            Ppat_var "x" (lib/shape.ml[226,6979+9]..[226,6979+10])
                          pattern (lib/shape.ml[226,6979+12]..[226,6979+13])
                            Ppat_var "t" (lib/shape.ml[226,6979+12]..[226,6979+13])
                        ]
                  expression (lib/shape.ml[226,6979+18]..[226,6979+29])
                    Pexp_construct "Some" (lib/shape.ml[226,6979+18]..[226,6979+22])
                    Some
                      expression (lib/shape.ml[226,6979+23]..[226,6979+29])
                        Pexp_tuple
                        [
                          expression (lib/shape.ml[226,6979+24]..[226,6979+25])
                            Pexp_ident "x" (lib/shape.ml[226,6979+24]..[226,6979+25])
                          expression (lib/shape.ml[226,6979+27]..[226,6979+28])
                            Pexp_ident "t" (lib/shape.ml[226,6979+27]..[226,6979+28])
                        ]
                <case>
                  pattern (lib/shape.ml[227,7009+4]..[227,7009+5])
                    Ppat_any
                  expression (lib/shape.ml[227,7009+9]..[227,7009+13])
                    Pexp_construct "None" (lib/shape.ml[227,7009+9]..[227,7009+13])
                    None
              ]
    ]
  structure_item (lib/shape.ml[229,7024+0]..[450,15651+3])
    Pstr_module
    "Make_reduce" (lib/shape.ml[229,7024+7]..[229,7024+18])
      module_expr (lib/shape.ml[229,7024+18]..[450,15651+3])
        Pmod_functor "Params" (lib/shape.ml[229,7024+19]..[229,7024+25])
        module_type (lib/shape.ml[229,7024+28]..[234,7176+3])
          Pmty_signature
          [
            signature_item (lib/shape.ml[230,7056+2]..[230,7056+10])
              Psig_type Rec
              [
                type_declaration "env" (lib/shape.ml[230,7056+7]..[230,7056+10]) (lib/shape.ml[230,7056+2]..[230,7056+10])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (lib/shape.ml[231,7067+2]..[231,7067+16])
              Psig_value
              value_description "fuel" (lib/shape.ml[231,7067+6]..[231,7067+10]) (lib/shape.ml[231,7067+2]..[231,7067+16])
                core_type (lib/shape.ml[231,7067+13]..[231,7067+16])
                  Ptyp_constr "int" (lib/shape.ml[231,7067+13]..[231,7067+16])
                  []
                []
            signature_item (lib/shape.ml[232,7084+2]..[232,7084+52])
              Psig_value
              value_description "read_unit_shape" (lib/shape.ml[232,7084+6]..[232,7084+21]) (lib/shape.ml[232,7084+2]..[232,7084+52])
                core_type (lib/shape.ml[232,7084+24]..[232,7084+52])
                  Ptyp_arrow
                  Labelled "unit_name"
                  core_type (lib/shape.ml[232,7084+34]..[232,7084+40])
                    Ptyp_constr "string" (lib/shape.ml[232,7084+34]..[232,7084+40])
                    []
                  core_type (lib/shape.ml[232,7084+44]..[232,7084+52])
                    Ptyp_constr "option" (lib/shape.ml[232,7084+46]..[232,7084+52])
                    [
                      core_type (lib/shape.ml[232,7084+44]..[232,7084+45])
                        Ptyp_constr "t" (lib/shape.ml[232,7084+44]..[232,7084+45])
                        []
                    ]
                []
            signature_item (lib/shape.ml[233,7137+2]..[233,7137+38])
              Psig_value
              value_description "find_shape" (lib/shape.ml[233,7137+6]..[233,7137+16]) (lib/shape.ml[233,7137+2]..[233,7137+38])
                core_type (lib/shape.ml[233,7137+19]..[233,7137+38])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/shape.ml[233,7137+19]..[233,7137+22])
                    Ptyp_constr "env" (lib/shape.ml[233,7137+19]..[233,7137+22])
                    []
                  core_type (lib/shape.ml[233,7137+26]..[233,7137+38])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/shape.ml[233,7137+26]..[233,7137+33])
                      Ptyp_constr "Ident.t" (lib/shape.ml[233,7137+26]..[233,7137+33])
                      []
                    core_type (lib/shape.ml[233,7137+37]..[233,7137+38])
                      Ptyp_constr "t" (lib/shape.ml[233,7137+37]..[233,7137+38])
                      []
                []
          ]
        module_expr (lib/shape.ml[234,7176+7]..[450,15651+3])
          Pmod_structure
          [
            structure_item (lib/shape.ml[238,7299+2]..[266,8430+41])
              Pstr_type Rec
              [
                type_declaration "nf" (lib/shape.ml[238,7299+7]..[238,7299+9]) (lib/shape.ml[238,7299+2]..[238,7299+48])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (lib/shape.ml[238,7299+14]..[238,7299+32])
                          Immutable
                          "uid" (lib/shape.ml[238,7299+14]..[238,7299+17])                          core_type (lib/shape.ml[238,7299+19]..[238,7299+31])
                            Ptyp_constr "option" (lib/shape.ml[238,7299+25]..[238,7299+31])
                            [
                              core_type (lib/shape.ml[238,7299+19]..[238,7299+24])
                                Ptyp_constr "Uid.t" (lib/shape.ml[238,7299+19]..[238,7299+24])
                                []
                            ]
                        (lib/shape.ml[238,7299+33]..[238,7299+46])
                          Immutable
                          "desc" (lib/shape.ml[238,7299+33]..[238,7299+37])                          core_type (lib/shape.ml[238,7299+39]..[238,7299+46])
                            Ptyp_constr "nf_desc" (lib/shape.ml[238,7299+39]..[238,7299+46])
                            []
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
                type_declaration "nf_desc" (lib/shape.ml[239,7348+6]..[239,7348+13]) (lib/shape.ml[239,7348+2]..[247,7556+24])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (lib/shape.ml[240,7364+4]..[240,7364+17])
                          "NVar" (lib/shape.ml[240,7364+6]..[240,7364+10])
                          [
                            core_type (lib/shape.ml[240,7364+14]..[240,7364+17])
                              Ptyp_constr "var" (lib/shape.ml[240,7364+14]..[240,7364+17])
                              []
                          ]
                          None
                        (lib/shape.ml[241,7382+4]..[241,7382+21])
                          "NApp" (lib/shape.ml[241,7382+6]..[241,7382+10])
                          [
                            core_type (lib/shape.ml[241,7382+14]..[241,7382+16])
                              Ptyp_constr "nf" (lib/shape.ml[241,7382+14]..[241,7382+16])
                              []
                            core_type (lib/shape.ml[241,7382+19]..[241,7382+21])
                              Ptyp_constr "nf" (lib/shape.ml[241,7382+19]..[241,7382+21])
                              []
                          ]
                          None
                        (lib/shape.ml[242,7404+4]..[242,7404+46])
                          "NAbs" (lib/shape.ml[242,7404+6]..[242,7404+10])
                          [
                            core_type (lib/shape.ml[242,7404+14]..[242,7404+23])
                              Ptyp_constr "local_env" (lib/shape.ml[242,7404+14]..[242,7404+23])
                              []
                            core_type (lib/shape.ml[242,7404+26]..[242,7404+29])
                              Ptyp_constr "var" (lib/shape.ml[242,7404+26]..[242,7404+29])
                              []
                            core_type (lib/shape.ml[242,7404+32]..[242,7404+33])
                              Ptyp_constr "t" (lib/shape.ml[242,7404+32]..[242,7404+33])
                              []
                            core_type (lib/shape.ml[242,7404+36]..[242,7404+46])
                              Ptyp_constr "delayed_nf" (lib/shape.ml[242,7404+36]..[242,7404+46])
                              []
                          ]
                          None
                        (lib/shape.ml[243,7451+4]..[243,7451+38])
                          "NStruct" (lib/shape.ml[243,7451+6]..[243,7451+13])
                          [
                            core_type (lib/shape.ml[243,7451+17]..[243,7451+38])
                              Ptyp_constr "Item.Map.t" (lib/shape.ml[243,7451+28]..[243,7451+38])
                              [
                                core_type (lib/shape.ml[243,7451+17]..[243,7451+27])
                                  Ptyp_constr "delayed_nf" (lib/shape.ml[243,7451+17]..[243,7451+27])
                                  []
                              ]
                          ]
                          None
                        (lib/shape.ml[244,7490+4]..[244,7490+26])
                          "NProj" (lib/shape.ml[244,7490+6]..[244,7490+11])
                          [
                            core_type (lib/shape.ml[244,7490+15]..[244,7490+17])
                              Ptyp_constr "nf" (lib/shape.ml[244,7490+15]..[244,7490+17])
                              []
                            core_type (lib/shape.ml[244,7490+20]..[244,7490+26])
                              Ptyp_constr "Item.t" (lib/shape.ml[244,7490+20]..[244,7490+26])
                              []
                          ]
                          None
                        (lib/shape.ml[245,7517+4]..[245,7517+11])
                          "NLeaf" (lib/shape.ml[245,7517+6]..[245,7517+11])
                          []
                          None
                        (lib/shape.ml[246,7529+4]..[246,7529+26])
                          "NComp_unit" (lib/shape.ml[246,7529+6]..[246,7529+16])
                          [
                            core_type (lib/shape.ml[246,7529+20]..[246,7529+26])
                              Ptyp_constr "string" (lib/shape.ml[246,7529+20]..[246,7529+26])
                              []
                          ]
                          None
                        (lib/shape.ml[247,7556+4]..[247,7556+24])
                          "NoFuelLeft" (lib/shape.ml[247,7556+6]..[247,7556+16])
                          [
                            core_type (lib/shape.ml[247,7556+20]..[247,7556+24])
                              Ptyp_constr "desc" (lib/shape.ml[247,7556+20]..[247,7556+24])
                              []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
                type_declaration "delayed_nf" (lib/shape.ml[266,8430+6]..[266,8430+16]) (lib/shape.ml[266,8430+2]..[266,8430+41])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (lib/shape.ml[266,8430+19]..[266,8430+41])
                          "Thunk" (lib/shape.ml[266,8430+19]..[266,8430+24])
                          [
                            core_type (lib/shape.ml[266,8430+28]..[266,8430+37])
                              Ptyp_constr "local_env" (lib/shape.ml[266,8430+28]..[266,8430+37])
                              []
                            core_type (lib/shape.ml[266,8430+40]..[266,8430+41])
                              Ptyp_constr "t" (lib/shape.ml[266,8430+40]..[266,8430+41])
                              []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lib/shape.ml[274,8801+2]..[277,8876+29])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/shape.ml[274,8801+6]..[274,8801+17])
                    Ppat_var "improve_uid" (lib/shape.ml[274,8801+6]..[274,8801+17])
                  expression (lib/shape.ml[274,8801+18]..[277,8876+29]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[274,8801+18]..[274,8801+21])
                        Nolabel
                        None
                        pattern (lib/shape.ml[274,8801+18]..[274,8801+21])
                          Ppat_var "uid" (lib/shape.ml[274,8801+18]..[274,8801+21])
                      Pparam_val (lib/shape.ml[274,8801+22]..[274,8801+31])
                        Nolabel
                        None
                        pattern (lib/shape.ml[274,8801+22]..[274,8801+31])
                          Ppat_constraint
                          pattern (lib/shape.ml[274,8801+23]..[274,8801+25])
                            Ppat_var "nf" (lib/shape.ml[274,8801+23]..[274,8801+25])
                          core_type (lib/shape.ml[274,8801+28]..[274,8801+30])
                            Ptyp_constr "nf" (lib/shape.ml[274,8801+28]..[274,8801+30])
                            []
                    ]
                    None
                    Pfunction_body
                      expression (lib/shape.ml[275,8835+4]..[277,8876+29])
                        Pexp_match
                        expression (lib/shape.ml[275,8835+10]..[275,8835+16])
                          Pexp_field
                          expression (lib/shape.ml[275,8835+10]..[275,8835+12])
                            Pexp_ident "nf" (lib/shape.ml[275,8835+10]..[275,8835+12])
                          "uid" (lib/shape.ml[275,8835+13]..[275,8835+16])
                        [
                          <case>
                            pattern (lib/shape.ml[276,8857+6]..[276,8857+12])
                              Ppat_construct "Some" (lib/shape.ml[276,8857+6]..[276,8857+10])
                              Some
                                []
                                pattern (lib/shape.ml[276,8857+11]..[276,8857+12])
                                  Ppat_any
                            expression (lib/shape.ml[276,8857+16]..[276,8857+18])
                              Pexp_ident "nf" (lib/shape.ml[276,8857+16]..[276,8857+18])
                          <case>
                            pattern (lib/shape.ml[277,8876+6]..[277,8876+10])
                              Ppat_construct "None" (lib/shape.ml[277,8876+6]..[277,8876+10])
                              None
                            expression (lib/shape.ml[277,8876+14]..[277,8876+29])
                              Pexp_record
                              [
                                "uid" (lib/shape.ml[277,8876+24]..[277,8876+27]) ghost
                                  expression (lib/shape.ml[277,8876+24]..[277,8876+27])
                                    Pexp_ident "uid" (lib/shape.ml[277,8876+24]..[277,8876+27])
                              ]
                              Some
                                expression (lib/shape.ml[277,8876+16]..[277,8876+18])
                                  Pexp_ident "nf" (lib/shape.ml[277,8876+16]..[277,8876+18])
                        ]
              ]
            structure_item (lib/shape.ml[279,8907+2]..[285,9125+11])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/shape.ml[279,8907+6]..[279,8907+19])
                    Ppat_var "in_memo_table" (lib/shape.ml[279,8907+6]..[279,8907+19])
                  expression (lib/shape.ml[279,8907+20]..[285,9125+11]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[279,8907+20]..[279,8907+30])
                        Nolabel
                        None
                        pattern (lib/shape.ml[279,8907+20]..[279,8907+30])
                          Ppat_var "memo_table" (lib/shape.ml[279,8907+20]..[279,8907+30])
                      Pparam_val (lib/shape.ml[279,8907+31]..[279,8907+39])
                        Nolabel
                        None
                        pattern (lib/shape.ml[279,8907+31]..[279,8907+39])
                          Ppat_var "memo_key" (lib/shape.ml[279,8907+31]..[279,8907+39])
                      Pparam_val (lib/shape.ml[279,8907+40]..[279,8907+41])
                        Nolabel
                        None
                        pattern (lib/shape.ml[279,8907+40]..[279,8907+41])
                          Ppat_var "f" (lib/shape.ml[279,8907+40]..[279,8907+41])
                      Pparam_val (lib/shape.ml[279,8907+42]..[279,8907+45])
                        Nolabel
                        None
                        pattern (lib/shape.ml[279,8907+42]..[279,8907+45])
                          Ppat_var "arg" (lib/shape.ml[279,8907+42]..[279,8907+45])
                    ]
                    None
                    Pfunction_body
                      expression (lib/shape.ml[280,8955+4]..[285,9125+11])
                        Pexp_match
                        expression (lib/shape.ml[280,8955+10]..[280,8955+42])
                          Pexp_apply
                          expression (lib/shape.ml[280,8955+10]..[280,8955+22])
                            Pexp_ident "Hashtbl.find" (lib/shape.ml[280,8955+10]..[280,8955+22])
                          [
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[280,8955+23]..[280,8955+33])
                                Pexp_ident "memo_table" (lib/shape.ml[280,8955+23]..[280,8955+33])
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[280,8955+34]..[280,8955+42])
                                Pexp_ident "memo_key" (lib/shape.ml[280,8955+34]..[280,8955+42])
                          ]
                        [
                          <case>
                            pattern (lib/shape.ml[281,9003+6]..[281,9003+9])
                              Ppat_var "res" (lib/shape.ml[281,9003+6]..[281,9003+9])
                            expression (lib/shape.ml[281,9003+13]..[281,9003+16])
                              Pexp_ident "res" (lib/shape.ml[281,9003+13]..[281,9003+16])
                          <case>
                            pattern (lib/shape.ml[282,9020+6]..[282,9020+25])
                              Ppat_exception
                              pattern (lib/shape.ml[282,9020+16]..[282,9020+25])
                                Ppat_construct "Not_found" (lib/shape.ml[282,9020+16]..[282,9020+25])
                                None
                            expression (lib/shape.ml[283,9049+8]..[285,9125+11])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/shape.ml[283,9049+12]..[283,9049+15])
                                    Ppat_var "res" (lib/shape.ml[283,9049+12]..[283,9049+15])
                                  expression (lib/shape.ml[283,9049+18]..[283,9049+23])
                                    Pexp_apply
                                    expression (lib/shape.ml[283,9049+18]..[283,9049+19])
                                      Pexp_ident "f" (lib/shape.ml[283,9049+18]..[283,9049+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/shape.ml[283,9049+20]..[283,9049+23])
                                          Pexp_ident "arg" (lib/shape.ml[283,9049+20]..[283,9049+23])
                                    ]
                              ]
                              expression (lib/shape.ml[284,9076+8]..[285,9125+11])
                                Pexp_sequence
                                expression (lib/shape.ml[284,9076+8]..[284,9076+47])
                                  Pexp_apply
                                  expression (lib/shape.ml[284,9076+8]..[284,9076+23])
                                    Pexp_ident "Hashtbl.replace" (lib/shape.ml[284,9076+8]..[284,9076+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[284,9076+24]..[284,9076+34])
                                        Pexp_ident "memo_table" (lib/shape.ml[284,9076+24]..[284,9076+34])
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[284,9076+35]..[284,9076+43])
                                        Pexp_ident "memo_key" (lib/shape.ml[284,9076+35]..[284,9076+43])
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[284,9076+44]..[284,9076+47])
                                        Pexp_ident "res" (lib/shape.ml[284,9076+44]..[284,9076+47])
                                  ]
                                expression (lib/shape.ml[285,9125+8]..[285,9125+11])
                                  Pexp_ident "res" (lib/shape.ml[285,9125+8]..[285,9125+11])
                        ]
              ]
            structure_item (lib/shape.ml[287,9138+2]..[293,9337+3])
              Pstr_type Rec
              [
                type_declaration "env" (lib/shape.ml[287,9138+7]..[287,9138+10]) (lib/shape.ml[287,9138+2]..[293,9337+3])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_record
                      [
                        (lib/shape.ml[288,9153+4]..[288,9153+18])
                          Immutable
                          "fuel" (lib/shape.ml[288,9153+4]..[288,9153+8])                          core_type (lib/shape.ml[288,9153+10]..[288,9153+17])
                            Ptyp_constr "ref" (lib/shape.ml[288,9153+14]..[288,9153+17])
                            [
                              core_type (lib/shape.ml[288,9153+10]..[288,9153+13])
                                Ptyp_constr "int" (lib/shape.ml[288,9153+10]..[288,9153+13])
                                []
                            ]
                        (lib/shape.ml[289,9172+4]..[289,9172+27])
                          Immutable
                          "global_env" (lib/shape.ml[289,9172+4]..[289,9172+14])                          core_type (lib/shape.ml[289,9172+16]..[289,9172+26])
                            Ptyp_constr "Params.env" (lib/shape.ml[289,9172+16]..[289,9172+26])
                            []
                        (lib/shape.ml[292,9292+4]..[292,9292+44])
                          Immutable
                          "read_back_memo_table" (lib/shape.ml[292,9292+4]..[292,9292+24])                          core_type (lib/shape.ml[292,9292+26]..[292,9292+43])
                            Ptyp_constr "Hashtbl.t" (lib/shape.ml[292,9292+34]..[292,9292+43])
                            [
                              core_type (lib/shape.ml[292,9292+27]..[292,9292+29])
                                Ptyp_constr "nf" (lib/shape.ml[292,9292+27]..[292,9292+29])
                                []
                              core_type (lib/shape.ml[292,9292+31]..[292,9292+32])
                                Ptyp_constr "t" (lib/shape.ml[292,9292+31]..[292,9292+32])
                                []
                            ]
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lib/shape.ml[295,9342+2]..[296,9369+66])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/shape.ml[295,9342+6]..[295,9342+10])
                    Ppat_var "bind" (lib/shape.ml[295,9342+6]..[295,9342+10])
                  expression (lib/shape.ml[295,9342+11]..[296,9369+66]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[295,9342+11]..[295,9342+14])
                        Nolabel
                        None
                        pattern (lib/shape.ml[295,9342+11]..[295,9342+14])
                          Ppat_var "env" (lib/shape.ml[295,9342+11]..[295,9342+14])
                      Pparam_val (lib/shape.ml[295,9342+15]..[295,9342+18])
                        Nolabel
                        None
                        pattern (lib/shape.ml[295,9342+15]..[295,9342+18])
                          Ppat_var "var" (lib/shape.ml[295,9342+15]..[295,9342+18])
                      Pparam_val (lib/shape.ml[295,9342+19]..[295,9342+24])
                        Nolabel
                        None
                        pattern (lib/shape.ml[295,9342+19]..[295,9342+24])
                          Ppat_var "shape" (lib/shape.ml[295,9342+19]..[295,9342+24])
                    ]
                    None
                    Pfunction_body
                      expression (lib/shape.ml[296,9369+4]..[296,9369+66])
                        Pexp_record
                        [
                          "local_env" (lib/shape.ml[296,9369+15]..[296,9369+24])
                            expression (lib/shape.ml[296,9369+27]..[296,9369+64])
                              Pexp_apply
                              expression (lib/shape.ml[296,9369+27]..[296,9369+40])
                                Pexp_ident "Ident.Map.add" (lib/shape.ml[296,9369+27]..[296,9369+40])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[296,9369+41]..[296,9369+44])
                                    Pexp_ident "var" (lib/shape.ml[296,9369+41]..[296,9369+44])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[296,9369+45]..[296,9369+50])
                                    Pexp_ident "shape" (lib/shape.ml[296,9369+45]..[296,9369+50])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[296,9369+51]..[296,9369+64])
                                    Pexp_field
                                    expression (lib/shape.ml[296,9369+51]..[296,9369+54])
                                      Pexp_ident "env" (lib/shape.ml[296,9369+51]..[296,9369+54])
                                    "local_env" (lib/shape.ml[296,9369+55]..[296,9369+64])
                              ]
                        ]
                        Some
                          expression (lib/shape.ml[296,9369+6]..[296,9369+9])
                            Pexp_ident "env" (lib/shape.ml[296,9369+6]..[296,9369+9])
              ]
            structure_item (lib/shape.ml[298,9437+2]..[406,14244+30])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/shape.ml[298,9437+10]..[298,9437+17])
                    Ppat_var "reduce_" (lib/shape.ml[298,9437+10]..[298,9437+17])
                  expression (lib/shape.ml[298,9437+18]..[300,9504+65]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[298,9437+18]..[298,9437+21])
                        Nolabel
                        None
                        pattern (lib/shape.ml[298,9437+18]..[298,9437+21])
                          Ppat_var "env" (lib/shape.ml[298,9437+18]..[298,9437+21])
                      Pparam_val (lib/shape.ml[298,9437+22]..[298,9437+23])
                        Nolabel
                        None
                        pattern (lib/shape.ml[298,9437+22]..[298,9437+23])
                          Ppat_var "t" (lib/shape.ml[298,9437+22]..[298,9437+23])
                    ]
                    None
                    Pfunction_body
                      expression (lib/shape.ml[299,9463+4]..[300,9504+65])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/shape.ml[299,9463+8]..[299,9463+16])
                              Ppat_var "memo_key" (lib/shape.ml[299,9463+8]..[299,9463+16])
                            expression (lib/shape.ml[299,9463+19]..[299,9463+37])
                              Pexp_tuple
                              [
                                expression (lib/shape.ml[299,9463+20]..[299,9463+33])
                                  Pexp_field
                                  expression (lib/shape.ml[299,9463+20]..[299,9463+23])
                                    Pexp_ident "env" (lib/shape.ml[299,9463+20]..[299,9463+23])
                                  "local_env" (lib/shape.ml[299,9463+24]..[299,9463+33])
                                expression (lib/shape.ml[299,9463+35]..[299,9463+36])
                                  Pexp_ident "t" (lib/shape.ml[299,9463+35]..[299,9463+36])
                              ]
                        ]
                        expression (lib/shape.ml[300,9504+4]..[300,9504+65])
                          Pexp_apply
                          expression (lib/shape.ml[300,9504+4]..[300,9504+17])
                            Pexp_ident "in_memo_table" (lib/shape.ml[300,9504+4]..[300,9504+17])
                          [
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[300,9504+18]..[300,9504+39])
                                Pexp_field
                                expression (lib/shape.ml[300,9504+18]..[300,9504+21])
                                  Pexp_ident "env" (lib/shape.ml[300,9504+18]..[300,9504+21])
                                "reduce_memo_table" (lib/shape.ml[300,9504+22]..[300,9504+39])
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[300,9504+40]..[300,9504+48])
                                Pexp_ident "memo_key" (lib/shape.ml[300,9504+40]..[300,9504+48])
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[300,9504+49]..[300,9504+63])
                                Pexp_apply
                                expression (lib/shape.ml[300,9504+50]..[300,9504+58])
                                  Pexp_ident "reduce__" (lib/shape.ml[300,9504+50]..[300,9504+58])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/shape.ml[300,9504+59]..[300,9504+62])
                                      Pexp_ident "env" (lib/shape.ml[300,9504+59]..[300,9504+62])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/shape.ml[300,9504+64]..[300,9504+65])
                                Pexp_ident "t" (lib/shape.ml[300,9504+64]..[300,9504+65])
                          ]
                <def>
                  pattern (lib/shape.ml[339,11606+6]..[339,11606+14])
                    Ppat_var "reduce__" (lib/shape.ml[339,11606+6]..[339,11606+14])
                  expression (lib/shape.ml[339,11606+15]..[406,14244+30]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[339,11606+15]..[339,11606+56])
                        Nolabel
                        None
                        pattern (lib/shape.ml[339,11606+15]..[339,11606+56])
                          Ppat_alias "env" (lib/shape.ml[339,11606+52]..[339,11606+55])
                          pattern (lib/shape.ml[339,11606+16]..[339,11606+48])
                            Ppat_record Open
                            [
                              "fuel" (lib/shape.ml[339,11606+17]..[339,11606+21]) ghost
                                pattern (lib/shape.ml[339,11606+17]..[339,11606+21])
                                  Ppat_var "fuel" (lib/shape.ml[339,11606+17]..[339,11606+21])
                              "global_env" (lib/shape.ml[339,11606+23]..[339,11606+33]) ghost
                                pattern (lib/shape.ml[339,11606+23]..[339,11606+33])
                                  Ppat_var "global_env" (lib/shape.ml[339,11606+23]..[339,11606+33])
                              "local_env" (lib/shape.ml[339,11606+35]..[339,11606+44]) ghost
                                pattern (lib/shape.ml[339,11606+35]..[339,11606+44])
                                  Ppat_var "local_env" (lib/shape.ml[339,11606+35]..[339,11606+44])
                            ]
                      Pparam_val (lib/shape.ml[339,11606+57]..[339,11606+64])
                        Nolabel
                        None
                        pattern (lib/shape.ml[339,11606+57]..[339,11606+64])
                          Ppat_constraint
                          pattern (lib/shape.ml[339,11606+58]..[339,11606+59])
                            Ppat_var "t" (lib/shape.ml[339,11606+58]..[339,11606+59])
                          core_type (lib/shape.ml[339,11606+62]..[339,11606+63])
                            Ptyp_constr "t" (lib/shape.ml[339,11606+62]..[339,11606+63])
                            []
                    ]
                    None
                    Pfunction_body
                      expression (lib/shape.ml[340,11673+4]..[406,14244+30])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/shape.ml[340,11673+8]..[340,11673+14])
                              Ppat_var "reduce" (lib/shape.ml[340,11673+8]..[340,11673+14])
                            expression (lib/shape.ml[340,11673+15]..[340,11673+36]) ghost
                              Pexp_function
                              [
                                Pparam_val (lib/shape.ml[340,11673+15]..[340,11673+18])
                                  Nolabel
                                  None
                                  pattern (lib/shape.ml[340,11673+15]..[340,11673+18])
                                    Ppat_var "env" (lib/shape.ml[340,11673+15]..[340,11673+18])
                                Pparam_val (lib/shape.ml[340,11673+19]..[340,11673+20])
                                  Nolabel
                                  None
                                  pattern (lib/shape.ml[340,11673+19]..[340,11673+20])
                                    Ppat_var "t" (lib/shape.ml[340,11673+19]..[340,11673+20])
                              ]
                              None
                              Pfunction_body
                                expression (lib/shape.ml[340,11673+23]..[340,11673+36])
                                  Pexp_apply
                                  expression (lib/shape.ml[340,11673+23]..[340,11673+30])
                                    Pexp_ident "reduce_" (lib/shape.ml[340,11673+23]..[340,11673+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[340,11673+31]..[340,11673+34])
                                        Pexp_ident "env" (lib/shape.ml[340,11673+31]..[340,11673+34])
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[340,11673+35]..[340,11673+36])
                                        Pexp_ident "t" (lib/shape.ml[340,11673+35]..[340,11673+36])
                                  ]
                        ]
                        expression (lib/shape.ml[341,11713+4]..[406,14244+30])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/shape.ml[341,11713+8]..[341,11713+20])
                                Ppat_var "delay_reduce" (lib/shape.ml[341,11713+8]..[341,11713+20])
                              expression (lib/shape.ml[341,11713+21]..[341,11713+53]) ghost
                                Pexp_function
                                [
                                  Pparam_val (lib/shape.ml[341,11713+21]..[341,11713+24])
                                    Nolabel
                                    None
                                    pattern (lib/shape.ml[341,11713+21]..[341,11713+24])
                                      Ppat_var "env" (lib/shape.ml[341,11713+21]..[341,11713+24])
                                  Pparam_val (lib/shape.ml[341,11713+25]..[341,11713+26])
                                    Nolabel
                                    None
                                    pattern (lib/shape.ml[341,11713+25]..[341,11713+26])
                                      Ppat_var "t" (lib/shape.ml[341,11713+25]..[341,11713+26])
                                ]
                                None
                                Pfunction_body
                                  expression (lib/shape.ml[341,11713+29]..[341,11713+53])
                                    Pexp_construct "Thunk" (lib/shape.ml[341,11713+29]..[341,11713+34])
                                    Some
                                      expression (lib/shape.ml[341,11713+35]..[341,11713+53])
                                        Pexp_tuple
                                        [
                                          expression (lib/shape.ml[341,11713+36]..[341,11713+49])
                                            Pexp_field
                                            expression (lib/shape.ml[341,11713+36]..[341,11713+39])
                                              Pexp_ident "env" (lib/shape.ml[341,11713+36]..[341,11713+39])
                                            "local_env" (lib/shape.ml[341,11713+40]..[341,11713+49])
                                          expression (lib/shape.ml[341,11713+51]..[341,11713+52])
                                            Pexp_ident "t" (lib/shape.ml[341,11713+51]..[341,11713+52])
                                        ]
                          ]
                          expression (lib/shape.ml[342,11770+4]..[406,14244+30])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/shape.ml[342,11770+8]..[342,11770+13])
                                  Ppat_var "force" (lib/shape.ml[342,11770+8]..[342,11770+13])
                                expression (lib/shape.ml[342,11770+14]..[343,11809+37]) ghost
                                  Pexp_function
                                  [
                                    Pparam_val (lib/shape.ml[342,11770+14]..[342,11770+36])
                                      Nolabel
                                      None
                                      pattern (lib/shape.ml[342,11770+14]..[342,11770+36])
                                        Ppat_construct "Thunk" (lib/shape.ml[342,11770+15]..[342,11770+20])
                                        Some
                                          []
                                          pattern (lib/shape.ml[342,11770+21]..[342,11770+35])
                                            Ppat_tuple
                                            [
                                              pattern (lib/shape.ml[342,11770+22]..[342,11770+31])
                                                Ppat_var "local_env" (lib/shape.ml[342,11770+22]..[342,11770+31])
                                              pattern (lib/shape.ml[342,11770+33]..[342,11770+34])
                                                Ppat_var "t" (lib/shape.ml[342,11770+33]..[342,11770+34])
                                            ]
                                  ]
                                  None
                                  Pfunction_body
                                    expression (lib/shape.ml[343,11809+6]..[343,11809+37])
                                      Pexp_apply
                                      expression (lib/shape.ml[343,11809+6]..[343,11809+12])
                                        Pexp_ident "reduce" (lib/shape.ml[343,11809+6]..[343,11809+12])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/shape.ml[343,11809+13]..[343,11809+35])
                                            Pexp_record
                                            [
                                              "local_env" (lib/shape.ml[343,11809+24]..[343,11809+33]) ghost
                                                expression (lib/shape.ml[343,11809+24]..[343,11809+33])
                                                  Pexp_ident "local_env" (lib/shape.ml[343,11809+24]..[343,11809+33])
                                            ]
                                            Some
                                              expression (lib/shape.ml[343,11809+15]..[343,11809+18])
                                                Pexp_ident "env" (lib/shape.ml[343,11809+15]..[343,11809+18])
                                        <arg>
                                        Nolabel
                                          expression (lib/shape.ml[343,11809+36]..[343,11809+37])
                                            Pexp_ident "t" (lib/shape.ml[343,11809+36]..[343,11809+37])
                                      ]
                            ]
                            expression (lib/shape.ml[344,11850+4]..[406,14244+30])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/shape.ml[344,11850+8]..[344,11850+14])
                                    Ppat_var "return" (lib/shape.ml[344,11850+8]..[344,11850+14])
                                  expression (lib/shape.ml[344,11850+15]..[344,11850+48]) ghost
                                    Pexp_function
                                    [
                                      Pparam_val (lib/shape.ml[344,11850+15]..[344,11850+19])
                                        Nolabel
                                        None
                                        pattern (lib/shape.ml[344,11850+15]..[344,11850+19])
                                          Ppat_var "desc" (lib/shape.ml[344,11850+15]..[344,11850+19])
                                    ]
                                    Some
                                      Pconstraint
                                        core_type (lib/shape.ml[344,11850+22]..[344,11850+24])
                                          Ptyp_constr "nf" (lib/shape.ml[344,11850+22]..[344,11850+24])
                                          []
                                    Pfunction_body
                                      expression (lib/shape.ml[344,11850+27]..[344,11850+48])
                                        Pexp_record
                                        [
                                          "uid" (lib/shape.ml[344,11850+29]..[344,11850+32])
                                            expression (lib/shape.ml[344,11850+35]..[344,11850+40])
                                              Pexp_field
                                              expression (lib/shape.ml[344,11850+35]..[344,11850+36])
                                                Pexp_ident "t" (lib/shape.ml[344,11850+35]..[344,11850+36])
                                              "uid" (lib/shape.ml[344,11850+37]..[344,11850+40])
                                          "desc" (lib/shape.ml[344,11850+42]..[344,11850+46]) ghost
                                            expression (lib/shape.ml[344,11850+42]..[344,11850+46])
                                              Pexp_ident "desc" (lib/shape.ml[344,11850+42]..[344,11850+46])
                                        ]
                                        None
                              ]
                              expression (lib/shape.ml[345,11902+4]..[406,14244+30])
                                Pexp_ifthenelse
                                expression (lib/shape.ml[345,11902+7]..[345,11902+16])
                                  Pexp_apply
                                  expression (lib/shape.ml[345,11902+13]..[345,11902+14])
                                    Pexp_ident "<" (lib/shape.ml[345,11902+13]..[345,11902+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[345,11902+7]..[345,11902+12])
                                        Pexp_apply
                                        expression (lib/shape.ml[345,11902+7]..[345,11902+8])
                                          Pexp_ident "!" (lib/shape.ml[345,11902+7]..[345,11902+8])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/shape.ml[345,11902+8]..[345,11902+12])
                                              Pexp_ident "fuel" (lib/shape.ml[345,11902+8]..[345,11902+12])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[345,11902+15]..[345,11902+16])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                expression (lib/shape.ml[345,11902+22]..[345,11902+48])
                                  Pexp_apply
                                  expression (lib/shape.ml[345,11902+22]..[345,11902+28])
                                    Pexp_ident "return" (lib/shape.ml[345,11902+22]..[345,11902+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[345,11902+29]..[345,11902+48])
                                        Pexp_construct "NoFuelLeft" (lib/shape.ml[345,11902+30]..[345,11902+40])
                                        Some
                                          expression (lib/shape.ml[345,11902+41]..[345,11902+47])
                                            Pexp_field
                                            expression (lib/shape.ml[345,11902+41]..[345,11902+42])
                                              Pexp_ident "t" (lib/shape.ml[345,11902+41]..[345,11902+42])
                                            "desc" (lib/shape.ml[345,11902+43]..[345,11902+47])
                                  ]
                                Some
                                  expression (lib/shape.ml[347,11960+6]..[406,14244+30])
                                    Pexp_match
                                    expression (lib/shape.ml[347,11960+12]..[347,11960+18])
                                      Pexp_field
                                      expression (lib/shape.ml[347,11960+12]..[347,11960+13])
                                        Pexp_ident "t" (lib/shape.ml[347,11960+12]..[347,11960+13])
                                      "desc" (lib/shape.ml[347,11960+14]..[347,11960+18])
                                    [
                                      <case>
                                        pattern (lib/shape.ml[348,11984+8]..[348,11984+27])
                                          Ppat_construct "Comp_unit" (lib/shape.ml[348,11984+8]..[348,11984+17])
                                          Some
                                            []
                                            pattern (lib/shape.ml[348,11984+18]..[348,11984+27])
                                              Ppat_var "unit_name" (lib/shape.ml[348,11984+18]..[348,11984+27])
                                        expression (lib/shape.ml[349,12015+10]..[352,12161+13])
                                          Pexp_match
                                          expression (lib/shape.ml[349,12015+22]..[349,12015+55])
                                            Pexp_apply
                                            expression (lib/shape.ml[349,12015+22]..[349,12015+44])
                                              Pexp_ident "Params.read_unit_shape" (lib/shape.ml[349,12015+22]..[349,12015+44])
                                            [
                                              <arg>
                                              Labelled "unit_name"
                                                expression (lib/shape.ml[349,12015+46]..[349,12015+55])
                                                  Pexp_ident "unit_name" (lib/shape.ml[349,12015+46]..[349,12015+55])
                                            ]
                                          [
                                            <case>
                                              pattern (lib/shape.ml[350,12076+12]..[350,12076+18])
                                                Ppat_construct "Some" (lib/shape.ml[350,12076+12]..[350,12076+16])
                                                Some
                                                  []
                                                  pattern (lib/shape.ml[350,12076+17]..[350,12076+18])
                                                    Ppat_var "t" (lib/shape.ml[350,12076+17]..[350,12076+18])
                                              expression (lib/shape.ml[350,12076+22]..[350,12076+34])
                                                Pexp_apply
                                                expression (lib/shape.ml[350,12076+22]..[350,12076+28])
                                                  Pexp_ident "reduce" (lib/shape.ml[350,12076+22]..[350,12076+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[350,12076+29]..[350,12076+32])
                                                      Pexp_ident "env" (lib/shape.ml[350,12076+29]..[350,12076+32])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[350,12076+33]..[350,12076+34])
                                                      Pexp_ident "t" (lib/shape.ml[350,12076+33]..[350,12076+34])
                                                ]
                                            <case>
                                              pattern (lib/shape.ml[351,12111+12]..[351,12111+16])
                                                Ppat_construct "None" (lib/shape.ml[351,12111+12]..[351,12111+16])
                                                None
                                              expression (lib/shape.ml[351,12111+20]..[351,12111+49])
                                                Pexp_apply
                                                expression (lib/shape.ml[351,12111+20]..[351,12111+26])
                                                  Pexp_ident "return" (lib/shape.ml[351,12111+20]..[351,12111+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[351,12111+27]..[351,12111+49])
                                                      Pexp_construct "NComp_unit" (lib/shape.ml[351,12111+28]..[351,12111+38])
                                                      Some
                                                        expression (lib/shape.ml[351,12111+39]..[351,12111+48])
                                                          Pexp_ident "unit_name" (lib/shape.ml[351,12111+39]..[351,12111+48])
                                                ]
                                          ]
                                      <case>
                                        pattern (lib/shape.ml[353,12175+8]..[353,12175+19])
                                          Ppat_construct "App" (lib/shape.ml[353,12175+8]..[353,12175+11])
                                          Some
                                            []
                                            pattern (lib/shape.ml[353,12175+11]..[353,12175+19])
                                              Ppat_tuple
                                              [
                                                pattern (lib/shape.ml[353,12175+12]..[353,12175+13])
                                                  Ppat_var "f" (lib/shape.ml[353,12175+12]..[353,12175+13])
                                                pattern (lib/shape.ml[353,12175+15]..[353,12175+18])
                                                  Ppat_var "arg" (lib/shape.ml[353,12175+15]..[353,12175+18])
                                              ]
                                        expression (lib/shape.ml[354,12198+10]..[364,12606+13])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/shape.ml[354,12198+14]..[354,12198+15])
                                                Ppat_var "f" (lib/shape.ml[354,12198+14]..[354,12198+15])
                                              expression (lib/shape.ml[354,12198+18]..[354,12198+30])
                                                Pexp_apply
                                                expression (lib/shape.ml[354,12198+18]..[354,12198+24])
                                                  Pexp_ident "reduce" (lib/shape.ml[354,12198+18]..[354,12198+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[354,12198+25]..[354,12198+28])
                                                      Pexp_ident "env" (lib/shape.ml[354,12198+25]..[354,12198+28])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[354,12198+29]..[354,12198+30])
                                                      Pexp_ident "f" (lib/shape.ml[354,12198+29]..[354,12198+30])
                                                ]
                                          ]
                                          expression (lib/shape.ml[355,12232+10]..[364,12606+13])
                                            Pexp_match
                                            expression (lib/shape.ml[355,12232+22]..[355,12232+28])
                                              Pexp_field
                                              expression (lib/shape.ml[355,12232+22]..[355,12232+23])
                                                Pexp_ident "f" (lib/shape.ml[355,12232+22]..[355,12232+23])
                                              "desc" (lib/shape.ml[355,12232+24]..[355,12232+28])
                                            [
                                              <case>
                                                pattern (lib/shape.ml[356,12266+12]..[356,12266+47])
                                                  Ppat_construct "NAbs" (lib/shape.ml[356,12266+12]..[356,12266+16])
                                                  Some
                                                    []
                                                    pattern (lib/shape.ml[356,12266+16]..[356,12266+47])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lib/shape.ml[356,12266+17]..[356,12266+25])
                                                          Ppat_var "clos_env" (lib/shape.ml[356,12266+17]..[356,12266+25])
                                                        pattern (lib/shape.ml[356,12266+27]..[356,12266+30])
                                                          Ppat_var "var" (lib/shape.ml[356,12266+27]..[356,12266+30])
                                                        pattern (lib/shape.ml[356,12266+32]..[356,12266+36])
                                                          Ppat_var "body" (lib/shape.ml[356,12266+32]..[356,12266+36])
                                                        pattern (lib/shape.ml[356,12266+38]..[356,12266+46])
                                                          Ppat_var "_body_nf" (lib/shape.ml[356,12266+38]..[356,12266+46])
                                                      ]
                                                expression (lib/shape.ml[357,12317+14]..[360,12476+34])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/shape.ml[357,12317+18]..[357,12317+21])
                                                        Ppat_var "arg" (lib/shape.ml[357,12317+18]..[357,12317+21])
                                                      expression (lib/shape.ml[357,12317+24]..[357,12317+44])
                                                        Pexp_apply
                                                        expression (lib/shape.ml[357,12317+24]..[357,12317+36])
                                                          Pexp_ident "delay_reduce" (lib/shape.ml[357,12317+24]..[357,12317+36])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/shape.ml[357,12317+37]..[357,12317+40])
                                                              Pexp_ident "env" (lib/shape.ml[357,12317+37]..[357,12317+40])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/shape.ml[357,12317+41]..[357,12317+44])
                                                              Pexp_ident "arg" (lib/shape.ml[357,12317+41]..[357,12317+44])
                                                        ]
                                                  ]
                                                  expression (lib/shape.ml[358,12365+14]..[360,12476+34])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/shape.ml[358,12365+18]..[358,12365+21])
                                                          Ppat_var "env" (lib/shape.ml[358,12365+18]..[358,12365+21])
                                                        expression (lib/shape.ml[358,12365+24]..[358,12365+77])
                                                          Pexp_apply
                                                          expression (lib/shape.ml[358,12365+24]..[358,12365+28])
                                                            Pexp_ident "bind" (lib/shape.ml[358,12365+24]..[358,12365+28])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/shape.ml[358,12365+29]..[358,12365+62])
                                                                Pexp_record
                                                                [
                                                                  "local_env" (lib/shape.ml[358,12365+40]..[358,12365+49])
                                                                    expression (lib/shape.ml[358,12365+52]..[358,12365+60])
                                                                      Pexp_ident "clos_env" (lib/shape.ml[358,12365+52]..[358,12365+60])
                                                                ]
                                                                Some
                                                                  expression (lib/shape.ml[358,12365+31]..[358,12365+34])
                                                                    Pexp_ident "env" (lib/shape.ml[358,12365+31]..[358,12365+34])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/shape.ml[358,12365+63]..[358,12365+66])
                                                                Pexp_ident "var" (lib/shape.ml[358,12365+63]..[358,12365+66])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/shape.ml[358,12365+67]..[358,12365+77])
                                                                Pexp_construct "Some" (lib/shape.ml[358,12365+68]..[358,12365+72])
                                                                Some
                                                                  expression (lib/shape.ml[358,12365+73]..[358,12365+76])
                                                                    Pexp_ident "arg" (lib/shape.ml[358,12365+73]..[358,12365+76])
                                                          ]
                                                    ]
                                                    expression (lib/shape.ml[359,12446+14]..[360,12476+34])
                                                      Pexp_apply
                                                      expression (lib/shape.ml[360,12476+14]..[360,12476+16])
                                                        Pexp_ident "|>" (lib/shape.ml[360,12476+14]..[360,12476+16])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/shape.ml[359,12446+14]..[359,12446+29])
                                                            Pexp_apply
                                                            expression (lib/shape.ml[359,12446+14]..[359,12446+20])
                                                              Pexp_ident "reduce" (lib/shape.ml[359,12446+14]..[359,12446+20])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/shape.ml[359,12446+21]..[359,12446+24])
                                                                  Pexp_ident "env" (lib/shape.ml[359,12446+21]..[359,12446+24])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/shape.ml[359,12446+25]..[359,12446+29])
                                                                  Pexp_ident "body" (lib/shape.ml[359,12446+25]..[359,12446+29])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/shape.ml[360,12476+17]..[360,12476+34])
                                                            Pexp_apply
                                                            expression (lib/shape.ml[360,12476+17]..[360,12476+28])
                                                              Pexp_ident "improve_uid" (lib/shape.ml[360,12476+17]..[360,12476+28])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/shape.ml[360,12476+29]..[360,12476+34])
                                                                  Pexp_field
                                                                  expression (lib/shape.ml[360,12476+29]..[360,12476+30])
                                                                    Pexp_ident "t" (lib/shape.ml[360,12476+29]..[360,12476+30])
                                                                  "uid" (lib/shape.ml[360,12476+31]..[360,12476+34])
                                                            ]
                                                      ]
                                              <case>
                                                pattern (lib/shape.ml[361,12511+12]..[361,12511+13])
                                                  Ppat_any
                                                expression (lib/shape.ml[362,12528+14]..[363,12570+35])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/shape.ml[362,12528+18]..[362,12528+21])
                                                        Ppat_var "arg" (lib/shape.ml[362,12528+18]..[362,12528+21])
                                                      expression (lib/shape.ml[362,12528+24]..[362,12528+38])
                                                        Pexp_apply
                                                        expression (lib/shape.ml[362,12528+24]..[362,12528+30])
                                                          Pexp_ident "reduce" (lib/shape.ml[362,12528+24]..[362,12528+30])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/shape.ml[362,12528+31]..[362,12528+34])
                                                              Pexp_ident "env" (lib/shape.ml[362,12528+31]..[362,12528+34])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/shape.ml[362,12528+35]..[362,12528+38])
                                                              Pexp_ident "arg" (lib/shape.ml[362,12528+35]..[362,12528+38])
                                                        ]
                                                  ]
                                                  expression (lib/shape.ml[363,12570+14]..[363,12570+35])
                                                    Pexp_apply
                                                    expression (lib/shape.ml[363,12570+14]..[363,12570+20])
                                                      Pexp_ident "return" (lib/shape.ml[363,12570+14]..[363,12570+20])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/shape.ml[363,12570+21]..[363,12570+35])
                                                          Pexp_construct "NApp" (lib/shape.ml[363,12570+22]..[363,12570+26])
                                                          Some
                                                            expression (lib/shape.ml[363,12570+26]..[363,12570+34])
                                                              Pexp_tuple
                                                              [
                                                                expression (lib/shape.ml[363,12570+27]..[363,12570+28])
                                                                  Pexp_ident "f" (lib/shape.ml[363,12570+27]..[363,12570+28])
                                                                expression (lib/shape.ml[363,12570+30]..[363,12570+33])
                                                                  Pexp_ident "arg" (lib/shape.ml[363,12570+30]..[363,12570+33])
                                                              ]
                                                    ]
                                            ]
                                      <case>
                                        pattern (lib/shape.ml[365,12620+8]..[365,12620+23])
                                          Ppat_construct "Proj" (lib/shape.ml[365,12620+8]..[365,12620+12])
                                          Some
                                            []
                                            pattern (lib/shape.ml[365,12620+12]..[365,12620+23])
                                              Ppat_tuple
                                              [
                                                pattern (lib/shape.ml[365,12620+13]..[365,12620+16])
                                                  Ppat_var "str" (lib/shape.ml[365,12620+13]..[365,12620+16])
                                                pattern (lib/shape.ml[365,12620+18]..[365,12620+22])
                                                  Ppat_var "item" (lib/shape.ml[365,12620+18]..[365,12620+22])
                                              ]
                                        expression (lib/shape.ml[366,12647+10]..[378,13056+13])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/shape.ml[366,12647+14]..[366,12647+17])
                                                Ppat_var "str" (lib/shape.ml[366,12647+14]..[366,12647+17])
                                              expression (lib/shape.ml[366,12647+20]..[366,12647+34])
                                                Pexp_apply
                                                expression (lib/shape.ml[366,12647+20]..[366,12647+26])
                                                  Pexp_ident "reduce" (lib/shape.ml[366,12647+20]..[366,12647+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[366,12647+27]..[366,12647+30])
                                                      Pexp_ident "env" (lib/shape.ml[366,12647+27]..[366,12647+30])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[366,12647+31]..[366,12647+34])
                                                      Pexp_ident "str" (lib/shape.ml[366,12647+31]..[366,12647+34])
                                                ]
                                          ]
                                          expression (lib/shape.ml[367,12685+10]..[378,13056+13])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/shape.ml[367,12685+14]..[367,12685+19])
                                                  Ppat_var "nored" (lib/shape.ml[367,12685+14]..[367,12685+19])
                                                expression (lib/shape.ml[367,12685+20]..[367,12685+50]) ghost
                                                  Pexp_function
                                                  [
                                                    Pparam_val (lib/shape.ml[367,12685+20]..[367,12685+22])
                                                      Nolabel
                                                      None
                                                      pattern (lib/shape.ml[367,12685+20]..[367,12685+22])
                                                        Ppat_construct "()" (lib/shape.ml[367,12685+20]..[367,12685+22])
                                                        None
                                                  ]
                                                  None
                                                  Pfunction_body
                                                    expression (lib/shape.ml[367,12685+25]..[367,12685+50])
                                                      Pexp_apply
                                                      expression (lib/shape.ml[367,12685+25]..[367,12685+31])
                                                        Pexp_ident "return" (lib/shape.ml[367,12685+25]..[367,12685+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/shape.ml[367,12685+32]..[367,12685+50])
                                                            Pexp_construct "NProj" (lib/shape.ml[367,12685+33]..[367,12685+38])
                                                            Some
                                                              expression (lib/shape.ml[367,12685+38]..[367,12685+49])
                                                                Pexp_tuple
                                                                [
                                                                  expression (lib/shape.ml[367,12685+39]..[367,12685+42])
                                                                    Pexp_ident "str" (lib/shape.ml[367,12685+39]..[367,12685+42])
                                                                  expression (lib/shape.ml[367,12685+44]..[367,12685+48])
                                                                    Pexp_ident "item" (lib/shape.ml[367,12685+44]..[367,12685+48])
                                                                ]
                                                      ]
                                            ]
                                            expression (lib/shape.ml[368,12739+10]..[378,13056+13])
                                              Pexp_match
                                              expression (lib/shape.ml[368,12739+22]..[368,12739+30])
                                                Pexp_field
                                                expression (lib/shape.ml[368,12739+22]..[368,12739+25])
                                                  Pexp_ident "str" (lib/shape.ml[368,12739+22]..[368,12739+25])
                                                "desc" (lib/shape.ml[368,12739+26]..[368,12739+30])
                                              [
                                                <case>
                                                  pattern (lib/shape.ml[369,12775+12]..[369,12775+27])
                                                    Ppat_construct "NStruct" (lib/shape.ml[369,12775+12]..[369,12775+19])
                                                    Some
                                                      []
                                                      pattern (lib/shape.ml[369,12775+20]..[369,12775+27])
                                                        Ppat_var "items" (lib/shape.ml[369,12775+21]..[369,12775+26])
                                                  expression (lib/shape.ml[370,12806+14]..[375,12998+17])
                                                    Pexp_match
                                                    expression (lib/shape.ml[370,12806+26]..[370,12806+50])
                                                      Pexp_apply
                                                      expression (lib/shape.ml[370,12806+26]..[370,12806+39])
                                                        Pexp_ident "Item.Map.find" (lib/shape.ml[370,12806+26]..[370,12806+39])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/shape.ml[370,12806+40]..[370,12806+44])
                                                            Pexp_ident "item" (lib/shape.ml[370,12806+40]..[370,12806+44])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/shape.ml[370,12806+45]..[370,12806+50])
                                                            Pexp_ident "items" (lib/shape.ml[370,12806+45]..[370,12806+50])
                                                      ]
                                                    [
                                                      <case>
                                                        pattern (lib/shape.ml[371,12862+16]..[371,12862+35])
                                                          Ppat_exception
                                                          pattern (lib/shape.ml[371,12862+26]..[371,12862+35])
                                                            Ppat_construct "Not_found" (lib/shape.ml[371,12862+26]..[371,12862+35])
                                                            None
                                                        expression (lib/shape.ml[371,12862+39]..[371,12862+47])
                                                          Pexp_apply
                                                          expression (lib/shape.ml[371,12862+39]..[371,12862+44])
                                                            Pexp_ident "nored" (lib/shape.ml[371,12862+39]..[371,12862+44])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/shape.ml[371,12862+45]..[371,12862+47])
                                                                Pexp_construct "()" (lib/shape.ml[371,12862+45]..[371,12862+47])
                                                                None
                                                          ]
                                                      <case>
                                                        pattern (lib/shape.ml[372,12910+16]..[372,12910+18])
                                                          Ppat_var "nf" (lib/shape.ml[372,12910+16]..[372,12910+18])
                                                        expression (lib/shape.ml[373,12932+18]..[374,12959+38])
                                                          Pexp_apply
                                                          expression (lib/shape.ml[374,12959+18]..[374,12959+20])
                                                            Pexp_ident "|>" (lib/shape.ml[374,12959+18]..[374,12959+20])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/shape.ml[373,12932+18]..[373,12932+26])
                                                                Pexp_apply
                                                                expression (lib/shape.ml[373,12932+18]..[373,12932+23])
                                                                  Pexp_ident "force" (lib/shape.ml[373,12932+18]..[373,12932+23])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/shape.ml[373,12932+24]..[373,12932+26])
                                                                      Pexp_ident "nf" (lib/shape.ml[373,12932+24]..[373,12932+26])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/shape.ml[374,12959+21]..[374,12959+38])
                                                                Pexp_apply
                                                                expression (lib/shape.ml[374,12959+21]..[374,12959+32])
                                                                  Pexp_ident "improve_uid" (lib/shape.ml[374,12959+21]..[374,12959+32])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lib/shape.ml[374,12959+33]..[374,12959+38])
                                                                      Pexp_field
                                                                      expression (lib/shape.ml[374,12959+33]..[374,12959+34])
Pexp_ident "t" (lib/shape.ml[374,12959+33]..[374,12959+34])
                                                                      "uid" (lib/shape.ml[374,12959+35]..[374,12959+38])
                                                                ]
                                                          ]
                                                    ]
                                                <case>
                                                  pattern (lib/shape.ml[376,13016+12]..[376,13016+13])
                                                    Ppat_any
                                                  expression (lib/shape.ml[377,13033+14]..[377,13033+22])
                                                    Pexp_apply
                                                    expression (lib/shape.ml[377,13033+14]..[377,13033+19])
                                                      Pexp_ident "nored" (lib/shape.ml[377,13033+14]..[377,13033+19])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/shape.ml[377,13033+20]..[377,13033+22])
                                                          Pexp_construct "()" (lib/shape.ml[377,13033+20]..[377,13033+22])
                                                          None
                                                    ]
                                              ]
                                      <case>
                                        pattern (lib/shape.ml[379,13070+8]..[379,13070+22])
                                          Ppat_construct "Abs" (lib/shape.ml[379,13070+8]..[379,13070+11])
                                          Some
                                            []
                                            pattern (lib/shape.ml[379,13070+11]..[379,13070+22])
                                              Ppat_tuple
                                              [
                                                pattern (lib/shape.ml[379,13070+12]..[379,13070+15])
                                                  Ppat_var "var" (lib/shape.ml[379,13070+12]..[379,13070+15])
                                                pattern (lib/shape.ml[379,13070+17]..[379,13070+21])
                                                  Ppat_var "body" (lib/shape.ml[379,13070+17]..[379,13070+21])
                                              ]
                                        expression (lib/shape.ml[380,13096+10]..[381,13161+54])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/shape.ml[380,13096+14]..[380,13096+21])
                                                Ppat_var "body_nf" (lib/shape.ml[380,13096+14]..[380,13096+21])
                                              expression (lib/shape.ml[380,13096+24]..[380,13096+61])
                                                Pexp_apply
                                                expression (lib/shape.ml[380,13096+24]..[380,13096+36])
                                                  Pexp_ident "delay_reduce" (lib/shape.ml[380,13096+24]..[380,13096+36])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[380,13096+37]..[380,13096+56])
                                                      Pexp_apply
                                                      expression (lib/shape.ml[380,13096+38]..[380,13096+42])
                                                        Pexp_ident "bind" (lib/shape.ml[380,13096+38]..[380,13096+42])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/shape.ml[380,13096+43]..[380,13096+46])
                                                            Pexp_ident "env" (lib/shape.ml[380,13096+43]..[380,13096+46])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/shape.ml[380,13096+47]..[380,13096+50])
                                                            Pexp_ident "var" (lib/shape.ml[380,13096+47]..[380,13096+50])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/shape.ml[380,13096+51]..[380,13096+55])
                                                            Pexp_construct "None" (lib/shape.ml[380,13096+51]..[380,13096+55])
                                                            None
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[380,13096+57]..[380,13096+61])
                                                      Pexp_ident "body" (lib/shape.ml[380,13096+57]..[380,13096+61])
                                                ]
                                          ]
                                          expression (lib/shape.ml[381,13161+10]..[381,13161+54])
                                            Pexp_apply
                                            expression (lib/shape.ml[381,13161+10]..[381,13161+16])
                                              Pexp_ident "return" (lib/shape.ml[381,13161+10]..[381,13161+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/shape.ml[381,13161+17]..[381,13161+54])
                                                  Pexp_construct "NAbs" (lib/shape.ml[381,13161+18]..[381,13161+22])
                                                  Some
                                                    expression (lib/shape.ml[381,13161+22]..[381,13161+53])
                                                      Pexp_tuple
                                                      [
                                                        expression (lib/shape.ml[381,13161+23]..[381,13161+32])
                                                          Pexp_ident "local_env" (lib/shape.ml[381,13161+23]..[381,13161+32])
                                                        expression (lib/shape.ml[381,13161+34]..[381,13161+37])
                                                          Pexp_ident "var" (lib/shape.ml[381,13161+34]..[381,13161+37])
                                                        expression (lib/shape.ml[381,13161+39]..[381,13161+43])
                                                          Pexp_ident "body" (lib/shape.ml[381,13161+39]..[381,13161+43])
                                                        expression (lib/shape.ml[381,13161+45]..[381,13161+52])
                                                          Pexp_ident "body_nf" (lib/shape.ml[381,13161+45]..[381,13161+52])
                                                      ]
                                            ]
                                      <case>
                                        pattern (lib/shape.ml[382,13216+8]..[382,13216+14])
                                          Ppat_construct "Var" (lib/shape.ml[382,13216+8]..[382,13216+11])
                                          Some
                                            []
                                            pattern (lib/shape.ml[382,13216+12]..[382,13216+14])
                                              Ppat_var "id" (lib/shape.ml[382,13216+12]..[382,13216+14])
                                        expression (lib/shape.ml[383,13234+10]..[402,14124+13])
                                          Pexp_match
                                          expression (lib/shape.ml[383,13234+22]..[383,13234+49])
                                            Pexp_apply
                                            expression (lib/shape.ml[383,13234+22]..[383,13234+36])
                                              Pexp_ident "Ident.Map.find" (lib/shape.ml[383,13234+22]..[383,13234+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/shape.ml[383,13234+37]..[383,13234+39])
                                                  Pexp_ident "id" (lib/shape.ml[383,13234+37]..[383,13234+39])
                                              <arg>
                                              Nolabel
                                                expression (lib/shape.ml[383,13234+40]..[383,13234+49])
                                                  Pexp_ident "local_env" (lib/shape.ml[383,13234+40]..[383,13234+49])
                                            ]
                                          [
                                            <case>
                                              pattern (lib/shape.ml[393,13791+12]..[393,13791+16])
                                                Ppat_construct "None" (lib/shape.ml[393,13791+12]..[393,13791+16])
                                                None
                                              expression (lib/shape.ml[393,13791+20]..[393,13791+36])
                                                Pexp_apply
                                                expression (lib/shape.ml[393,13791+20]..[393,13791+26])
                                                  Pexp_ident "return" (lib/shape.ml[393,13791+20]..[393,13791+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[393,13791+27]..[393,13791+36])
                                                      Pexp_construct "NVar" (lib/shape.ml[393,13791+28]..[393,13791+32])
                                                      Some
                                                        expression (lib/shape.ml[393,13791+33]..[393,13791+35])
                                                          Pexp_ident "id" (lib/shape.ml[393,13791+33]..[393,13791+35])
                                                ]
                                            <case>
                                              pattern (lib/shape.ml[394,13828+12]..[394,13828+20])
                                                Ppat_construct "Some" (lib/shape.ml[394,13828+12]..[394,13828+16])
                                                Some
                                                  []
                                                  pattern (lib/shape.ml[394,13828+17]..[394,13828+20])
                                                    Ppat_var "def" (lib/shape.ml[394,13828+17]..[394,13828+20])
                                              expression (lib/shape.ml[394,13828+24]..[394,13828+33])
                                                Pexp_apply
                                                expression (lib/shape.ml[394,13828+24]..[394,13828+29])
                                                  Pexp_ident "force" (lib/shape.ml[394,13828+24]..[394,13828+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[394,13828+30]..[394,13828+33])
                                                      Pexp_ident "def" (lib/shape.ml[394,13828+30]..[394,13828+33])
                                                ]
                                            <case>
                                              pattern (lib/shape.ml[395,13862+12]..[395,13862+31])
                                                Ppat_exception
                                                pattern (lib/shape.ml[395,13862+22]..[395,13862+31])
                                                  Ppat_construct "Not_found" (lib/shape.ml[395,13862+22]..[395,13862+31])
                                                  None
                                              expression (lib/shape.ml[396,13897+10]..[401,14095+28])
                                                Pexp_match
                                                expression (lib/shape.ml[396,13897+16]..[396,13897+47])
                                                  Pexp_apply
                                                  expression (lib/shape.ml[396,13897+16]..[396,13897+33])
                                                    Pexp_ident "Params.find_shape" (lib/shape.ml[396,13897+16]..[396,13897+33])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/shape.ml[396,13897+34]..[396,13897+44])
                                                        Pexp_ident "global_env" (lib/shape.ml[396,13897+34]..[396,13897+44])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/shape.ml[396,13897+45]..[396,13897+47])
                                                        Pexp_ident "id" (lib/shape.ml[396,13897+45]..[396,13897+47])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (lib/shape.ml[397,13950+12]..[397,13950+31])
                                                      Ppat_exception
                                                      pattern (lib/shape.ml[397,13950+22]..[397,13950+31])
                                                        Ppat_construct "Not_found" (lib/shape.ml[397,13950+22]..[397,13950+31])
                                                        None
                                                    expression (lib/shape.ml[397,13950+35]..[397,13950+51])
                                                      Pexp_apply
                                                      expression (lib/shape.ml[397,13950+35]..[397,13950+41])
                                                        Pexp_ident "return" (lib/shape.ml[397,13950+35]..[397,13950+41])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/shape.ml[397,13950+42]..[397,13950+51])
                                                            Pexp_construct "NVar" (lib/shape.ml[397,13950+43]..[397,13950+47])
                                                            Some
                                                              expression (lib/shape.ml[397,13950+48]..[397,13950+50])
                                                                Pexp_ident "id" (lib/shape.ml[397,13950+48]..[397,13950+50])
                                                      ]
                                                  <case>
                                                    pattern (lib/shape.ml[398,14002+12]..[398,14002+15])
                                                      Ppat_var "res" (lib/shape.ml[398,14002+12]..[398,14002+15])
                                                    <when>
                                                      expression (lib/shape.ml[398,14002+21]..[398,14002+28])
                                                        Pexp_apply
                                                        expression (lib/shape.ml[398,14002+25]..[398,14002+26])
                                                          Pexp_ident "=" (lib/shape.ml[398,14002+25]..[398,14002+26])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/shape.ml[398,14002+21]..[398,14002+24])
                                                              Pexp_ident "res" (lib/shape.ml[398,14002+21]..[398,14002+24])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/shape.ml[398,14002+27]..[398,14002+28])
                                                              Pexp_ident "t" (lib/shape.ml[398,14002+27]..[398,14002+28])
                                                        ]
                                                    expression (lib/shape.ml[398,14002+32]..[398,14002+48])
                                                      Pexp_apply
                                                      expression (lib/shape.ml[398,14002+32]..[398,14002+38])
                                                        Pexp_ident "return" (lib/shape.ml[398,14002+32]..[398,14002+38])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/shape.ml[398,14002+39]..[398,14002+48])
                                                            Pexp_construct "NVar" (lib/shape.ml[398,14002+40]..[398,14002+44])
                                                            Some
                                                              expression (lib/shape.ml[398,14002+45]..[398,14002+47])
                                                                Pexp_ident "id" (lib/shape.ml[398,14002+45]..[398,14002+47])
                                                      ]
                                                  <case>
                                                    pattern (lib/shape.ml[399,14051+12]..[399,14051+15])
                                                      Ppat_var "res" (lib/shape.ml[399,14051+12]..[399,14051+15])
                                                    expression (lib/shape.ml[400,14070+14]..[401,14095+28])
                                                      Pexp_sequence
                                                      expression (lib/shape.ml[400,14070+14]..[400,14070+23])
                                                        Pexp_apply
                                                        expression (lib/shape.ml[400,14070+14]..[400,14070+18])
                                                          Pexp_ident "decr" (lib/shape.ml[400,14070+14]..[400,14070+18])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/shape.ml[400,14070+19]..[400,14070+23])
                                                              Pexp_ident "fuel" (lib/shape.ml[400,14070+19]..[400,14070+23])
                                                        ]
                                                      expression (lib/shape.ml[401,14095+14]..[401,14095+28])
                                                        Pexp_apply
                                                        expression (lib/shape.ml[401,14095+14]..[401,14095+20])
                                                          Pexp_ident "reduce" (lib/shape.ml[401,14095+14]..[401,14095+20])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/shape.ml[401,14095+21]..[401,14095+24])
                                                              Pexp_ident "env" (lib/shape.ml[401,14095+21]..[401,14095+24])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/shape.ml[401,14095+25]..[401,14095+28])
                                                              Pexp_ident "res" (lib/shape.ml[401,14095+25]..[401,14095+28])
                                                        ]
                                                ]
                                          ]
                                      <case>
                                        pattern (lib/shape.ml[403,14138+8]..[403,14138+12])
                                          Ppat_construct "Leaf" (lib/shape.ml[403,14138+8]..[403,14138+12])
                                          None
                                        expression (lib/shape.ml[403,14138+16]..[403,14138+28])
                                          Pexp_apply
                                          expression (lib/shape.ml[403,14138+16]..[403,14138+22])
                                            Pexp_ident "return" (lib/shape.ml[403,14138+16]..[403,14138+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/shape.ml[403,14138+23]..[403,14138+28])
                                                Pexp_construct "NLeaf" (lib/shape.ml[403,14138+23]..[403,14138+28])
                                                None
                                          ]
                                      <case>
                                        pattern (lib/shape.ml[404,14167+8]..[404,14167+16])
                                          Ppat_construct "Struct" (lib/shape.ml[404,14167+8]..[404,14167+14])
                                          Some
                                            []
                                            pattern (lib/shape.ml[404,14167+15]..[404,14167+16])
                                              Ppat_var "m" (lib/shape.ml[404,14167+15]..[404,14167+16])
                                        expression (lib/shape.ml[405,14187+10]..[406,14244+30])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/shape.ml[405,14187+14]..[405,14187+17])
                                                Ppat_var "mnf" (lib/shape.ml[405,14187+14]..[405,14187+17])
                                              expression (lib/shape.ml[405,14187+20]..[405,14187+53])
                                                Pexp_apply
                                                expression (lib/shape.ml[405,14187+20]..[405,14187+32])
                                                  Pexp_ident "Item.Map.map" (lib/shape.ml[405,14187+20]..[405,14187+32])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[405,14187+33]..[405,14187+51])
                                                      Pexp_apply
                                                      expression (lib/shape.ml[405,14187+34]..[405,14187+46])
                                                        Pexp_ident "delay_reduce" (lib/shape.ml[405,14187+34]..[405,14187+46])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/shape.ml[405,14187+47]..[405,14187+50])
                                                            Pexp_ident "env" (lib/shape.ml[405,14187+47]..[405,14187+50])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/shape.ml[405,14187+52]..[405,14187+53])
                                                      Pexp_ident "m" (lib/shape.ml[405,14187+52]..[405,14187+53])
                                                ]
                                          ]
                                          expression (lib/shape.ml[406,14244+10]..[406,14244+30])
                                            Pexp_apply
                                            expression (lib/shape.ml[406,14244+10]..[406,14244+16])
                                              Pexp_ident "return" (lib/shape.ml[406,14244+10]..[406,14244+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/shape.ml[406,14244+17]..[406,14244+30])
                                                  Pexp_construct "NStruct" (lib/shape.ml[406,14244+18]..[406,14244+25])
                                                  Some
                                                    expression (lib/shape.ml[406,14244+26]..[406,14244+29])
                                                      Pexp_ident "mnf" (lib/shape.ml[406,14244+26]..[406,14244+29])
                                            ]
                                    ]
              ]
            structure_item (lib/shape.ml[408,14276+2]..[435,15264+23])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/shape.ml[408,14276+10]..[408,14276+19])
                    Ppat_var "read_back" (lib/shape.ml[408,14276+10]..[408,14276+19])
                  expression (lib/shape.ml[408,14276+20]..[409,14316+65]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[408,14276+20]..[408,14276+23])
                        Nolabel
                        None
                        pattern (lib/shape.ml[408,14276+20]..[408,14276+23])
                          Ppat_var "env" (lib/shape.ml[408,14276+20]..[408,14276+23])
                      Pparam_val (lib/shape.ml[408,14276+24]..[408,14276+33])
                        Nolabel
                        None
                        pattern (lib/shape.ml[408,14276+24]..[408,14276+33])
                          Ppat_constraint
                          pattern (lib/shape.ml[408,14276+25]..[408,14276+27])
                            Ppat_var "nf" (lib/shape.ml[408,14276+25]..[408,14276+27])
                          core_type (lib/shape.ml[408,14276+30]..[408,14276+32])
                            Ptyp_constr "nf" (lib/shape.ml[408,14276+30]..[408,14276+32])
                            []
                    ]
                    Some
                      Pconstraint
                        core_type (lib/shape.ml[408,14276+36]..[408,14276+37])
                          Ptyp_constr "t" (lib/shape.ml[408,14276+36]..[408,14276+37])
                          []
                    Pfunction_body
                      expression (lib/shape.ml[409,14316+4]..[409,14316+65])
                        Pexp_apply
                        expression (lib/shape.ml[409,14316+4]..[409,14316+17])
                          Pexp_ident "in_memo_table" (lib/shape.ml[409,14316+4]..[409,14316+17])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[409,14316+18]..[409,14316+42])
                              Pexp_field
                              expression (lib/shape.ml[409,14316+18]..[409,14316+21])
                                Pexp_ident "env" (lib/shape.ml[409,14316+18]..[409,14316+21])
                              "read_back_memo_table" (lib/shape.ml[409,14316+22]..[409,14316+42])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[409,14316+43]..[409,14316+45])
                              Pexp_ident "nf" (lib/shape.ml[409,14316+43]..[409,14316+45])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[409,14316+46]..[409,14316+62])
                              Pexp_apply
                              expression (lib/shape.ml[409,14316+47]..[409,14316+57])
                                Pexp_ident "read_back_" (lib/shape.ml[409,14316+47]..[409,14316+57])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[409,14316+58]..[409,14316+61])
                                    Pexp_ident "env" (lib/shape.ml[409,14316+58]..[409,14316+61])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[409,14316+63]..[409,14316+65])
                              Pexp_ident "nf" (lib/shape.ml[409,14316+63]..[409,14316+65])
                        ]
                <def>
                  pattern (lib/shape.ml[415,14621+6]..[415,14621+16])
                    Ppat_var "read_back_" (lib/shape.ml[415,14621+6]..[415,14621+16])
                  expression (lib/shape.ml[415,14621+17]..[416,14658+55]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[415,14621+17]..[415,14621+20])
                        Nolabel
                        None
                        pattern (lib/shape.ml[415,14621+17]..[415,14621+20])
                          Ppat_var "env" (lib/shape.ml[415,14621+17]..[415,14621+20])
                      Pparam_val (lib/shape.ml[415,14621+21]..[415,14621+30])
                        Nolabel
                        None
                        pattern (lib/shape.ml[415,14621+21]..[415,14621+30])
                          Ppat_constraint
                          pattern (lib/shape.ml[415,14621+22]..[415,14621+24])
                            Ppat_var "nf" (lib/shape.ml[415,14621+22]..[415,14621+24])
                          core_type (lib/shape.ml[415,14621+27]..[415,14621+29])
                            Ptyp_constr "nf" (lib/shape.ml[415,14621+27]..[415,14621+29])
                            []
                    ]
                    Some
                      Pconstraint
                        core_type (lib/shape.ml[415,14621+33]..[415,14621+34])
                          Ptyp_constr "t" (lib/shape.ml[415,14621+33]..[415,14621+34])
                          []
                    Pfunction_body
                      expression (lib/shape.ml[416,14658+4]..[416,14658+55])
                        Pexp_record
                        [
                          "uid" (lib/shape.ml[416,14658+6]..[416,14658+9])
                            expression (lib/shape.ml[416,14658+12]..[416,14658+18])
                              Pexp_field
                              expression (lib/shape.ml[416,14658+12]..[416,14658+14])
                                Pexp_ident "nf" (lib/shape.ml[416,14658+12]..[416,14658+14])
                              "uid" (lib/shape.ml[416,14658+15]..[416,14658+18])
                          "desc" (lib/shape.ml[416,14658+20]..[416,14658+24])
                            expression (lib/shape.ml[416,14658+27]..[416,14658+53])
                              Pexp_apply
                              expression (lib/shape.ml[416,14658+27]..[416,14658+41])
                                Pexp_ident "read_back_desc" (lib/shape.ml[416,14658+27]..[416,14658+41])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[416,14658+42]..[416,14658+45])
                                    Pexp_ident "env" (lib/shape.ml[416,14658+42]..[416,14658+45])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[416,14658+46]..[416,14658+53])
                                    Pexp_field
                                    expression (lib/shape.ml[416,14658+46]..[416,14658+48])
                                      Pexp_ident "nf" (lib/shape.ml[416,14658+46]..[416,14658+48])
                                    "desc" (lib/shape.ml[416,14658+49]..[416,14658+53])
                              ]
                        ]
                        None
                <def>
                  pattern (lib/shape.ml[418,14715+6]..[418,14715+20])
                    Ppat_var "read_back_desc" (lib/shape.ml[418,14715+6]..[418,14715+20])
                  expression (lib/shape.ml[418,14715+21]..[435,15264+23]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[418,14715+21]..[418,14715+24])
                        Nolabel
                        None
                        pattern (lib/shape.ml[418,14715+21]..[418,14715+24])
                          Ppat_var "env" (lib/shape.ml[418,14715+21]..[418,14715+24])
                      Pparam_val (lib/shape.ml[418,14715+25]..[418,14715+29])
                        Nolabel
                        None
                        pattern (lib/shape.ml[418,14715+25]..[418,14715+29])
                          Ppat_var "desc" (lib/shape.ml[418,14715+25]..[418,14715+29])
                    ]
                    None
                    Pfunction_body
                      expression (lib/shape.ml[419,14747+4]..[435,15264+23])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/shape.ml[419,14747+8]..[419,14747+17])
                              Ppat_var "read_back" (lib/shape.ml[419,14747+8]..[419,14747+17])
                            expression (lib/shape.ml[419,14747+18]..[419,14747+39]) ghost
                              Pexp_function
                              [
                                Pparam_val (lib/shape.ml[419,14747+18]..[419,14747+20])
                                  Nolabel
                                  None
                                  pattern (lib/shape.ml[419,14747+18]..[419,14747+20])
                                    Ppat_var "nf" (lib/shape.ml[419,14747+18]..[419,14747+20])
                              ]
                              None
                              Pfunction_body
                                expression (lib/shape.ml[419,14747+23]..[419,14747+39])
                                  Pexp_apply
                                  expression (lib/shape.ml[419,14747+23]..[419,14747+32])
                                    Pexp_ident "read_back" (lib/shape.ml[419,14747+23]..[419,14747+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[419,14747+33]..[419,14747+36])
                                        Pexp_ident "env" (lib/shape.ml[419,14747+33]..[419,14747+36])
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[419,14747+37]..[419,14747+39])
                                        Pexp_ident "nf" (lib/shape.ml[419,14747+37]..[419,14747+39])
                                  ]
                        ]
                        expression (lib/shape.ml[420,14790+4]..[435,15264+23])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/shape.ml[420,14790+8]..[420,14790+23])
                                Ppat_var "read_back_force" (lib/shape.ml[420,14790+8]..[420,14790+23])
                              expression (lib/shape.ml[420,14790+24]..[421,14839+50]) ghost
                                Pexp_function
                                [
                                  Pparam_val (lib/shape.ml[420,14790+24]..[420,14790+46])
                                    Nolabel
                                    None
                                    pattern (lib/shape.ml[420,14790+24]..[420,14790+46])
                                      Ppat_construct "Thunk" (lib/shape.ml[420,14790+25]..[420,14790+30])
                                      Some
                                        []
                                        pattern (lib/shape.ml[420,14790+31]..[420,14790+45])
                                          Ppat_tuple
                                          [
                                            pattern (lib/shape.ml[420,14790+32]..[420,14790+41])
                                              Ppat_var "local_env" (lib/shape.ml[420,14790+32]..[420,14790+41])
                                            pattern (lib/shape.ml[420,14790+43]..[420,14790+44])
                                              Ppat_var "t" (lib/shape.ml[420,14790+43]..[420,14790+44])
                                          ]
                                ]
                                None
                                Pfunction_body
                                  expression (lib/shape.ml[421,14839+6]..[421,14839+50])
                                    Pexp_apply
                                    expression (lib/shape.ml[421,14839+6]..[421,14839+15])
                                      Pexp_ident "read_back" (lib/shape.ml[421,14839+6]..[421,14839+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/shape.ml[421,14839+16]..[421,14839+50])
                                          Pexp_apply
                                          expression (lib/shape.ml[421,14839+17]..[421,14839+24])
                                            Pexp_ident "reduce_" (lib/shape.ml[421,14839+17]..[421,14839+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/shape.ml[421,14839+25]..[421,14839+47])
                                                Pexp_record
                                                [
                                                  "local_env" (lib/shape.ml[421,14839+36]..[421,14839+45]) ghost
                                                    expression (lib/shape.ml[421,14839+36]..[421,14839+45])
                                                      Pexp_ident "local_env" (lib/shape.ml[421,14839+36]..[421,14839+45])
                                                ]
                                                Some
                                                  expression (lib/shape.ml[421,14839+27]..[421,14839+30])
                                                    Pexp_ident "env" (lib/shape.ml[421,14839+27]..[421,14839+30])
                                            <arg>
                                            Nolabel
                                              expression (lib/shape.ml[421,14839+48]..[421,14839+49])
                                                Pexp_ident "t" (lib/shape.ml[421,14839+48]..[421,14839+49])
                                          ]
                                    ]
                          ]
                          expression (lib/shape.ml[422,14893+4]..[435,15264+23])
                            Pexp_match
                            expression (lib/shape.ml[422,14893+10]..[422,14893+14])
                              Pexp_ident "desc" (lib/shape.ml[422,14893+10]..[422,14893+14])
                            [
                              <case>
                                pattern (lib/shape.ml[423,14913+6]..[423,14913+12])
                                  Ppat_construct "NVar" (lib/shape.ml[423,14913+6]..[423,14913+10])
                                  Some
                                    []
                                    pattern (lib/shape.ml[423,14913+11]..[423,14913+12])
                                      Ppat_var "v" (lib/shape.ml[423,14913+11]..[423,14913+12])
                                expression (lib/shape.ml[424,14929+8]..[424,14929+13])
                                  Pexp_construct "Var" (lib/shape.ml[424,14929+8]..[424,14929+11])
                                  Some
                                    expression (lib/shape.ml[424,14929+12]..[424,14929+13])
                                      Pexp_ident "v" (lib/shape.ml[424,14929+12]..[424,14929+13])
                              <case>
                                pattern (lib/shape.ml[425,14943+6]..[425,14943+21])
                                  Ppat_construct "NApp" (lib/shape.ml[425,14943+6]..[425,14943+10])
                                  Some
                                    []
                                    pattern (lib/shape.ml[425,14943+11]..[425,14943+21])
                                      Ppat_tuple
                                      [
                                        pattern (lib/shape.ml[425,14943+12]..[425,14943+15])
                                          Ppat_var "nft" (lib/shape.ml[425,14943+12]..[425,14943+15])
                                        pattern (lib/shape.ml[425,14943+17]..[425,14943+20])
                                          Ppat_var "nfu" (lib/shape.ml[425,14943+17]..[425,14943+20])
                                      ]
                                expression (lib/shape.ml[426,14968+8]..[426,14968+41])
                                  Pexp_construct "App" (lib/shape.ml[426,14968+8]..[426,14968+11])
                                  Some
                                    expression (lib/shape.ml[426,14968+11]..[426,14968+41])
                                      Pexp_tuple
                                      [
                                        expression (lib/shape.ml[426,14968+12]..[426,14968+25])
                                          Pexp_apply
                                          expression (lib/shape.ml[426,14968+12]..[426,14968+21])
                                            Pexp_ident "read_back" (lib/shape.ml[426,14968+12]..[426,14968+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/shape.ml[426,14968+22]..[426,14968+25])
                                                Pexp_ident "nft" (lib/shape.ml[426,14968+22]..[426,14968+25])
                                          ]
                                        expression (lib/shape.ml[426,14968+27]..[426,14968+40])
                                          Pexp_apply
                                          expression (lib/shape.ml[426,14968+27]..[426,14968+36])
                                            Pexp_ident "read_back" (lib/shape.ml[426,14968+27]..[426,14968+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/shape.ml[426,14968+37]..[426,14968+40])
                                                Pexp_ident "nfu" (lib/shape.ml[426,14968+37]..[426,14968+40])
                                          ]
                                      ]
                              <case>
                                pattern (lib/shape.ml[427,15010+6]..[427,15010+28])
                                  Ppat_construct "NAbs" (lib/shape.ml[427,15010+6]..[427,15010+10])
                                  Some
                                    []
                                    pattern (lib/shape.ml[427,15010+11]..[427,15010+28])
                                      Ppat_tuple
                                      [
                                        pattern (lib/shape.ml[427,15010+12]..[427,15010+16])
                                          Ppat_var "_env" (lib/shape.ml[427,15010+12]..[427,15010+16])
                                        pattern (lib/shape.ml[427,15010+18]..[427,15010+19])
                                          Ppat_var "x" (lib/shape.ml[427,15010+18]..[427,15010+19])
                                        pattern (lib/shape.ml[427,15010+21]..[427,15010+23])
                                          Ppat_var "_t" (lib/shape.ml[427,15010+21]..[427,15010+23])
                                        pattern (lib/shape.ml[427,15010+25]..[427,15010+27])
                                          Ppat_var "nf" (lib/shape.ml[427,15010+25]..[427,15010+27])
                                      ]
                                expression (lib/shape.ml[428,15042+8]..[428,15042+34])
                                  Pexp_construct "Abs" (lib/shape.ml[428,15042+8]..[428,15042+11])
                                  Some
                                    expression (lib/shape.ml[428,15042+11]..[428,15042+34])
                                      Pexp_tuple
                                      [
                                        expression (lib/shape.ml[428,15042+12]..[428,15042+13])
                                          Pexp_ident "x" (lib/shape.ml[428,15042+12]..[428,15042+13])
                                        expression (lib/shape.ml[428,15042+15]..[428,15042+33])
                                          Pexp_apply
                                          expression (lib/shape.ml[428,15042+15]..[428,15042+30])
                                            Pexp_ident "read_back_force" (lib/shape.ml[428,15042+15]..[428,15042+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/shape.ml[428,15042+31]..[428,15042+33])
                                                Pexp_ident "nf" (lib/shape.ml[428,15042+31]..[428,15042+33])
                                          ]
                                      ]
                              <case>
                                pattern (lib/shape.ml[429,15077+6]..[429,15077+18])
                                  Ppat_construct "NStruct" (lib/shape.ml[429,15077+6]..[429,15077+13])
                                  Some
                                    []
                                    pattern (lib/shape.ml[429,15077+14]..[429,15077+18])
                                      Ppat_var "nstr" (lib/shape.ml[429,15077+14]..[429,15077+18])
                                expression (lib/shape.ml[430,15099+8]..[430,15099+50])
                                  Pexp_construct "Struct" (lib/shape.ml[430,15099+8]..[430,15099+14])
                                  Some
                                    expression (lib/shape.ml[430,15099+15]..[430,15099+50])
                                      Pexp_apply
                                      expression (lib/shape.ml[430,15099+16]..[430,15099+28])
                                        Pexp_ident "Item.Map.map" (lib/shape.ml[430,15099+16]..[430,15099+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/shape.ml[430,15099+29]..[430,15099+44])
                                            Pexp_ident "read_back_force" (lib/shape.ml[430,15099+29]..[430,15099+44])
                                        <arg>
                                        Nolabel
                                          expression (lib/shape.ml[430,15099+45]..[430,15099+49])
                                            Pexp_ident "nstr" (lib/shape.ml[430,15099+45]..[430,15099+49])
                                      ]
                              <case>
                                pattern (lib/shape.ml[431,15150+6]..[431,15150+22])
                                  Ppat_construct "NProj" (lib/shape.ml[431,15150+6]..[431,15150+11])
                                  Some
                                    []
                                    pattern (lib/shape.ml[431,15150+12]..[431,15150+22])
                                      Ppat_tuple
                                      [
                                        pattern (lib/shape.ml[431,15150+13]..[431,15150+15])
                                          Ppat_var "nf" (lib/shape.ml[431,15150+13]..[431,15150+15])
                                        pattern (lib/shape.ml[431,15150+17]..[431,15150+21])
                                          Ppat_var "item" (lib/shape.ml[431,15150+17]..[431,15150+21])
                                      ]
                                expression (lib/shape.ml[432,15176+8]..[432,15176+33])
                                  Pexp_construct "Proj" (lib/shape.ml[432,15176+8]..[432,15176+12])
                                  Some
                                    expression (lib/shape.ml[432,15176+13]..[432,15176+33])
                                      Pexp_tuple
                                      [
                                        expression (lib/shape.ml[432,15176+14]..[432,15176+26])
                                          Pexp_apply
                                          expression (lib/shape.ml[432,15176+14]..[432,15176+23])
                                            Pexp_ident "read_back" (lib/shape.ml[432,15176+14]..[432,15176+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/shape.ml[432,15176+24]..[432,15176+26])
                                                Pexp_ident "nf" (lib/shape.ml[432,15176+24]..[432,15176+26])
                                          ]
                                        expression (lib/shape.ml[432,15176+28]..[432,15176+32])
                                          Pexp_ident "item" (lib/shape.ml[432,15176+28]..[432,15176+32])
                                      ]
                              <case>
                                pattern (lib/shape.ml[433,15210+6]..[433,15210+11])
                                  Ppat_construct "NLeaf" (lib/shape.ml[433,15210+6]..[433,15210+11])
                                  None
                                expression (lib/shape.ml[433,15210+15]..[433,15210+19])
                                  Pexp_construct "Leaf" (lib/shape.ml[433,15210+15]..[433,15210+19])
                                  None
                              <case>
                                pattern (lib/shape.ml[434,15230+6]..[434,15230+18])
                                  Ppat_construct "NComp_unit" (lib/shape.ml[434,15230+6]..[434,15230+16])
                                  Some
                                    []
                                    pattern (lib/shape.ml[434,15230+17]..[434,15230+18])
                                      Ppat_var "s" (lib/shape.ml[434,15230+17]..[434,15230+18])
                                expression (lib/shape.ml[434,15230+22]..[434,15230+33])
                                  Pexp_construct "Comp_unit" (lib/shape.ml[434,15230+22]..[434,15230+31])
                                  Some
                                    expression (lib/shape.ml[434,15230+32]..[434,15230+33])
                                      Pexp_ident "s" (lib/shape.ml[434,15230+32]..[434,15230+33])
                              <case>
                                pattern (lib/shape.ml[435,15264+6]..[435,15264+18])
                                  Ppat_construct "NoFuelLeft" (lib/shape.ml[435,15264+6]..[435,15264+16])
                                  Some
                                    []
                                    pattern (lib/shape.ml[435,15264+17]..[435,15264+18])
                                      Ppat_var "t" (lib/shape.ml[435,15264+17]..[435,15264+18])
                                expression (lib/shape.ml[435,15264+22]..[435,15264+23])
                                  Pexp_ident "t" (lib/shape.ml[435,15264+22]..[435,15264+23])
                            ]
              ]
            structure_item (lib/shape.ml[437,15289+2]..[449,15616+34])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/shape.ml[437,15289+6]..[437,15289+12])
                    Ppat_var "reduce" (lib/shape.ml[437,15289+6]..[437,15289+12])
                  expression (lib/shape.ml[437,15289+13]..[449,15616+34]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[437,15289+13]..[437,15289+23])
                        Nolabel
                        None
                        pattern (lib/shape.ml[437,15289+13]..[437,15289+23])
                          Ppat_var "global_env" (lib/shape.ml[437,15289+13]..[437,15289+23])
                      Pparam_val (lib/shape.ml[437,15289+24]..[437,15289+25])
                        Nolabel
                        None
                        pattern (lib/shape.ml[437,15289+24]..[437,15289+25])
                          Ppat_var "t" (lib/shape.ml[437,15289+24]..[437,15289+25])
                    ]
                    None
                    Pfunction_body
                      expression (lib/shape.ml[438,15317+4]..[449,15616+34])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/shape.ml[438,15317+8]..[438,15317+12])
                              Ppat_var "fuel" (lib/shape.ml[438,15317+8]..[438,15317+12])
                            expression (lib/shape.ml[438,15317+15]..[438,15317+30])
                              Pexp_apply
                              expression (lib/shape.ml[438,15317+15]..[438,15317+18])
                                Pexp_ident "ref" (lib/shape.ml[438,15317+15]..[438,15317+18])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[438,15317+19]..[438,15317+30])
                                    Pexp_ident "Params.fuel" (lib/shape.ml[438,15317+19]..[438,15317+30])
                              ]
                        ]
                        expression (lib/shape.ml[439,15351+4]..[449,15616+34])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/shape.ml[439,15351+8]..[439,15351+25])
                                Ppat_var "reduce_memo_table" (lib/shape.ml[439,15351+8]..[439,15351+25])
                              expression (lib/shape.ml[439,15351+28]..[439,15351+45])
                                Pexp_apply
                                expression (lib/shape.ml[439,15351+28]..[439,15351+42])
                                  Pexp_ident "Hashtbl.create" (lib/shape.ml[439,15351+28]..[439,15351+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/shape.ml[439,15351+43]..[439,15351+45])
                                      Pexp_constant PConst_int (42,None)
                                ]
                          ]
                          expression (lib/shape.ml[440,15400+4]..[449,15616+34])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/shape.ml[440,15400+8]..[440,15400+28])
                                  Ppat_var "read_back_memo_table" (lib/shape.ml[440,15400+8]..[440,15400+28])
                                expression (lib/shape.ml[440,15400+31]..[440,15400+48])
                                  Pexp_apply
                                  expression (lib/shape.ml[440,15400+31]..[440,15400+45])
                                    Pexp_ident "Hashtbl.create" (lib/shape.ml[440,15400+31]..[440,15400+45])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[440,15400+46]..[440,15400+48])
                                        Pexp_constant PConst_int (42,None)
                                  ]
                            ]
                            expression (lib/shape.ml[441,15452+4]..[449,15616+34])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/shape.ml[441,15452+8]..[441,15452+17])
                                    Ppat_var "local_env" (lib/shape.ml[441,15452+8]..[441,15452+17])
                                  expression (lib/shape.ml[441,15452+20]..[441,15452+35])
                                    Pexp_ident "Ident.Map.empty" (lib/shape.ml[441,15452+20]..[441,15452+35])
                              ]
                              expression (lib/shape.ml[442,15491+4]..[449,15616+34])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/shape.ml[442,15491+8]..[442,15491+11])
                                      Ppat_var "env" (lib/shape.ml[442,15491+8]..[442,15491+11])
                                    expression (lib/shape.ml[442,15491+14]..[448,15607+5])
                                      Pexp_record
                                      [
                                        "fuel" (lib/shape.ml[443,15507+6]..[443,15507+10]) ghost
                                          expression (lib/shape.ml[443,15507+6]..[443,15507+10])
                                            Pexp_ident "fuel" (lib/shape.ml[443,15507+6]..[443,15507+10])
                                        "global_env" (lib/shape.ml[444,15519+6]..[444,15519+16]) ghost
                                          expression (lib/shape.ml[444,15519+6]..[444,15519+16])
                                            Pexp_ident "global_env" (lib/shape.ml[444,15519+6]..[444,15519+16])
                                        "reduce_memo_table" (lib/shape.ml[445,15537+6]..[445,15537+23]) ghost
                                          expression (lib/shape.ml[445,15537+6]..[445,15537+23])
                                            Pexp_ident "reduce_memo_table" (lib/shape.ml[445,15537+6]..[445,15537+23])
                                        "read_back_memo_table" (lib/shape.ml[446,15562+6]..[446,15562+26]) ghost
                                          expression (lib/shape.ml[446,15562+6]..[446,15562+26])
                                            Pexp_ident "read_back_memo_table" (lib/shape.ml[446,15562+6]..[446,15562+26])
                                        "local_env" (lib/shape.ml[447,15590+6]..[447,15590+15]) ghost
                                          expression (lib/shape.ml[447,15590+6]..[447,15590+15])
                                            Pexp_ident "local_env" (lib/shape.ml[447,15590+6]..[447,15590+15])
                                      ]
                                      None
                                ]
                                expression (lib/shape.ml[449,15616+4]..[449,15616+34])
                                  Pexp_apply
                                  expression (lib/shape.ml[449,15616+18]..[449,15616+20])
                                    Pexp_ident "|>" (lib/shape.ml[449,15616+18]..[449,15616+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[449,15616+4]..[449,15616+17])
                                        Pexp_apply
                                        expression (lib/shape.ml[449,15616+4]..[449,15616+11])
                                          Pexp_ident "reduce_" (lib/shape.ml[449,15616+4]..[449,15616+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/shape.ml[449,15616+12]..[449,15616+15])
                                              Pexp_ident "env" (lib/shape.ml[449,15616+12]..[449,15616+15])
                                          <arg>
                                          Nolabel
                                            expression (lib/shape.ml[449,15616+16]..[449,15616+17])
                                              Pexp_ident "t" (lib/shape.ml[449,15616+16]..[449,15616+17])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[449,15616+21]..[449,15616+34])
                                        Pexp_apply
                                        expression (lib/shape.ml[449,15616+21]..[449,15616+30])
                                          Pexp_ident "read_back" (lib/shape.ml[449,15616+21]..[449,15616+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/shape.ml[449,15616+31]..[449,15616+34])
                                              Pexp_ident "env" (lib/shape.ml[449,15616+31]..[449,15616+34])
                                        ]
                                  ]
              ]
          ]
  structure_item (lib/shape.ml[452,15656+0]..[463,16142+6])
    Pstr_module
    "Local_reduce" (lib/shape.ml[452,15656+7]..[452,15656+19])
      module_expr (lib/shape.ml[458,15993+2]..[463,16142+6])
        Pmod_apply
        module_expr (lib/shape.ml[458,15993+2]..[458,15993+13])
          Pmod_ident "Make_reduce" (lib/shape.ml[458,15993+2]..[458,15993+13])
        module_expr (lib/shape.ml[458,15993+14]..[463,16142+5])
          Pmod_structure
          [
            structure_item (lib/shape.ml[459,16014+4]..[459,16014+19])
              Pstr_type Rec
              [
                type_declaration "env" (lib/shape.ml[459,16014+9]..[459,16014+12]) (lib/shape.ml[459,16014+4]..[459,16014+19])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/shape.ml[459,16014+15]..[459,16014+19])
                        Ptyp_constr "unit" (lib/shape.ml[459,16014+15]..[459,16014+19])
                        []
              ]
            structure_item (lib/shape.ml[460,16034+4]..[460,16034+17])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/shape.ml[460,16034+8]..[460,16034+12])
                    Ppat_var "fuel" (lib/shape.ml[460,16034+8]..[460,16034+12])
                  expression (lib/shape.ml[460,16034+15]..[460,16034+17])
                    Pexp_constant PConst_int (10,None)
              ]
            structure_item (lib/shape.ml[461,16052+4]..[461,16052+43])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/shape.ml[461,16052+8]..[461,16052+23])
                    Ppat_var "read_unit_shape" (lib/shape.ml[461,16052+8]..[461,16052+23])
                  expression (lib/shape.ml[461,16052+24]..[461,16052+43]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[461,16052+24]..[461,16052+36])
                        Labelled "unit_name"
                        None
                        pattern (lib/shape.ml[461,16052+35]..[461,16052+36])
                          Ppat_any
                    ]
                    None
                    Pfunction_body
                      expression (lib/shape.ml[461,16052+39]..[461,16052+43])
                        Pexp_construct "None" (lib/shape.ml[461,16052+39]..[461,16052+43])
                        None
              ]
            structure_item (lib/shape.ml[462,16096+4]..[462,16096+45])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/shape.ml[462,16096+8]..[462,16096+18])
                    Ppat_var "find_shape" (lib/shape.ml[462,16096+8]..[462,16096+18])
                  expression (lib/shape.ml[462,16096+19]..[462,16096+45]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[462,16096+19]..[462,16096+23])
                        Nolabel
                        None
                        pattern (lib/shape.ml[462,16096+19]..[462,16096+23])
                          Ppat_var "_env" (lib/shape.ml[462,16096+19]..[462,16096+23])
                      Pparam_val (lib/shape.ml[462,16096+24]..[462,16096+27])
                        Nolabel
                        None
                        pattern (lib/shape.ml[462,16096+24]..[462,16096+27])
                          Ppat_var "_id" (lib/shape.ml[462,16096+24]..[462,16096+27])
                    ]
                    None
                    Pfunction_body
                      expression (lib/shape.ml[462,16096+30]..[462,16096+45])
                        Pexp_apply
                        expression (lib/shape.ml[462,16096+30]..[462,16096+35])
                          Pexp_ident "raise" (lib/shape.ml[462,16096+30]..[462,16096+35])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[462,16096+36]..[462,16096+45])
                              Pexp_construct "Not_found" (lib/shape.ml[462,16096+36]..[462,16096+45])
                              None
                        ]
              ]
          ]
  structure_item (lib/shape.ml[465,16150+0]..[466,16175+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[465,16150+4]..[465,16150+16])
          Ppat_var "local_reduce" (lib/shape.ml[465,16150+4]..[465,16150+16])
        expression (lib/shape.ml[465,16150+17]..[466,16175+30]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[465,16150+17]..[465,16150+22])
              Nolabel
              None
              pattern (lib/shape.ml[465,16150+17]..[465,16150+22])
                Ppat_var "shape" (lib/shape.ml[465,16150+17]..[465,16150+22])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[466,16175+2]..[466,16175+30])
              Pexp_apply
              expression (lib/shape.ml[466,16175+2]..[466,16175+21])
                Pexp_ident "Local_reduce.reduce" (lib/shape.ml[466,16175+2]..[466,16175+21])
              [
                <arg>
                Nolabel
                  expression (lib/shape.ml[466,16175+22]..[466,16175+24])
                    Pexp_construct "()" (lib/shape.ml[466,16175+22]..[466,16175+24])
                    None
                <arg>
                Nolabel
                  expression (lib/shape.ml[466,16175+25]..[466,16175+30])
                    Pexp_ident "shape" (lib/shape.ml[466,16175+25]..[466,16175+30])
              ]
    ]
  structure_item (lib/shape.ml[468,16207+0]..[468,16207+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[468,16207+4]..[468,16207+13])
          Ppat_var "dummy_mod" (lib/shape.ml[468,16207+4]..[468,16207+13])
        expression (lib/shape.ml[468,16207+16]..[468,16207+60])
          Pexp_record
          [
            "uid" (lib/shape.ml[468,16207+18]..[468,16207+21])
              expression (lib/shape.ml[468,16207+24]..[468,16207+28])
                Pexp_construct "None" (lib/shape.ml[468,16207+24]..[468,16207+28])
                None
            "desc" (lib/shape.ml[468,16207+30]..[468,16207+34])
              expression (lib/shape.ml[468,16207+37]..[468,16207+58])
                Pexp_construct "Struct" (lib/shape.ml[468,16207+37]..[468,16207+43])
                Some
                  expression (lib/shape.ml[468,16207+44]..[468,16207+58])
                    Pexp_ident "Item.Map.empty" (lib/shape.ml[468,16207+44]..[468,16207+58])
          ]
          None
    ]
  structure_item (lib/shape.ml[470,16269+0]..[481,16711+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[470,16269+4]..[470,16269+11])
          Ppat_var "of_path" (lib/shape.ml[470,16269+4]..[470,16269+11])
        expression (lib/shape.ml[470,16269+12]..[481,16711+15]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[470,16269+12]..[470,16269+23])
              Labelled "find_shape"
              None
              pattern (lib/shape.ml[470,16269+13]..[470,16269+23])
                Ppat_var "find_shape" (lib/shape.ml[470,16269+13]..[470,16269+23])
            Pparam_val (lib/shape.ml[470,16269+24]..[470,16269+34])
              Labelled "namespace"
              None
              pattern (lib/shape.ml[470,16269+25]..[470,16269+34])
                Ppat_var "namespace" (lib/shape.ml[470,16269+25]..[470,16269+34])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[471,16306+2]..[481,16711+15])
              Pexp_let Rec
              [
                <def>
                  pattern (lib/shape.ml[471,16306+10]..[471,16306+13])
                    Ppat_var "aux" (lib/shape.ml[471,16306+10]..[471,16306+13])
                  core_type (lib/shape.ml[471,16306+16]..[471,16306+51])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/shape.ml[471,16306+16]..[471,16306+36])
                      Ptyp_constr "Sig_component_kind.t" (lib/shape.ml[471,16306+16]..[471,16306+36])
                      []
                    core_type (lib/shape.ml[471,16306+40]..[471,16306+51])
                      Ptyp_arrow
                      Nolabel
                      core_type (lib/shape.ml[471,16306+40]..[471,16306+46])
                        Ptyp_constr "Path.t" (lib/shape.ml[471,16306+40]..[471,16306+46])
                        []
                      core_type (lib/shape.ml[471,16306+50]..[471,16306+51])
                        Ptyp_constr "t" (lib/shape.ml[471,16306+50]..[471,16306+51])
                        []
                  expression (lib/shape.ml[471,16306+54]..[479,16696+9])
                    Pexp_function
                    [
                      Pparam_val (lib/shape.ml[471,16306+58]..[471,16306+60])
                        Nolabel
                        None
                        pattern (lib/shape.ml[471,16306+58]..[471,16306+60])
                          Ppat_var "ns" (lib/shape.ml[471,16306+58]..[471,16306+60])
                    ]
                    None
                    Pfunction_cases (lib/shape.ml[471,16306+64]..[479,16696+9])
                      [
                        <case>
                          pattern (lib/shape.ml[472,16379+6]..[472,16379+15])
                            Ppat_construct "Pident" (lib/shape.ml[472,16379+6]..[472,16379+12])
                            Some
                              []
                              pattern (lib/shape.ml[472,16379+13]..[472,16379+15])
                                Ppat_var "id" (lib/shape.ml[472,16379+13]..[472,16379+15])
                          expression (lib/shape.ml[472,16379+19]..[472,16379+35])
                            Pexp_apply
                            expression (lib/shape.ml[472,16379+19]..[472,16379+29])
                              Pexp_ident "find_shape" (lib/shape.ml[472,16379+19]..[472,16379+29])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[472,16379+30]..[472,16379+32])
                                  Pexp_ident "ns" (lib/shape.ml[472,16379+30]..[472,16379+32])
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[472,16379+33]..[472,16379+35])
                                  Pexp_ident "id" (lib/shape.ml[472,16379+33]..[472,16379+35])
                            ]
                        <case>
                          pattern (lib/shape.ml[473,16415+6]..[473,16415+23])
                            Ppat_construct "Pdot" (lib/shape.ml[473,16415+6]..[473,16415+10])
                            Some
                              []
                              pattern (lib/shape.ml[473,16415+11]..[473,16415+23])
                                Ppat_tuple
                                [
                                  pattern (lib/shape.ml[473,16415+12]..[473,16415+16])
                                    Ppat_var "path" (lib/shape.ml[473,16415+12]..[473,16415+16])
                                  pattern (lib/shape.ml[473,16415+18]..[473,16415+22])
                                    Ppat_var "name" (lib/shape.ml[473,16415+18]..[473,16415+22])
                                ]
                          expression (lib/shape.ml[473,16415+27]..[473,16415+60])
                            Pexp_apply
                            expression (lib/shape.ml[473,16415+27]..[473,16415+31])
                              Pexp_ident "proj" (lib/shape.ml[473,16415+27]..[473,16415+31])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[473,16415+32]..[473,16415+49])
                                  Pexp_apply
                                  expression (lib/shape.ml[473,16415+33]..[473,16415+36])
                                    Pexp_ident "aux" (lib/shape.ml[473,16415+33]..[473,16415+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[473,16415+37]..[473,16415+43])
                                        Pexp_construct "Module" (lib/shape.ml[473,16415+37]..[473,16415+43])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[473,16415+44]..[473,16415+48])
                                        Pexp_ident "path" (lib/shape.ml[473,16415+44]..[473,16415+48])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[473,16415+50]..[473,16415+60])
                                  Pexp_tuple
                                  [
                                    expression (lib/shape.ml[473,16415+51]..[473,16415+55])
                                      Pexp_ident "name" (lib/shape.ml[473,16415+51]..[473,16415+55])
                                    expression (lib/shape.ml[473,16415+57]..[473,16415+59])
                                      Pexp_ident "ns" (lib/shape.ml[473,16415+57]..[473,16415+59])
                                  ]
                            ]
                        <case>
                          pattern (lib/shape.ml[474,16476+6]..[474,16476+21])
                            Ppat_construct "Papply" (lib/shape.ml[474,16476+6]..[474,16476+12])
                            Some
                              []
                              pattern (lib/shape.ml[474,16476+13]..[474,16476+21])
                                Ppat_tuple
                                [
                                  pattern (lib/shape.ml[474,16476+14]..[474,16476+16])
                                    Ppat_var "p1" (lib/shape.ml[474,16476+14]..[474,16476+16])
                                  pattern (lib/shape.ml[474,16476+18]..[474,16476+20])
                                    Ppat_var "p2" (lib/shape.ml[474,16476+18]..[474,16476+20])
                                ]
                          expression (lib/shape.ml[474,16476+25]..[474,16476+65])
                            Pexp_apply
                            expression (lib/shape.ml[474,16476+25]..[474,16476+28])
                              Pexp_ident "app" (lib/shape.ml[474,16476+25]..[474,16476+28])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[474,16476+29]..[474,16476+44])
                                  Pexp_apply
                                  expression (lib/shape.ml[474,16476+30]..[474,16476+33])
                                    Pexp_ident "aux" (lib/shape.ml[474,16476+30]..[474,16476+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[474,16476+34]..[474,16476+40])
                                        Pexp_construct "Module" (lib/shape.ml[474,16476+34]..[474,16476+40])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[474,16476+41]..[474,16476+43])
                                        Pexp_ident "p1" (lib/shape.ml[474,16476+41]..[474,16476+43])
                                  ]
                              <arg>
                              Labelled "arg"
                                expression (lib/shape.ml[474,16476+50]..[474,16476+65])
                                  Pexp_apply
                                  expression (lib/shape.ml[474,16476+51]..[474,16476+54])
                                    Pexp_ident "aux" (lib/shape.ml[474,16476+51]..[474,16476+54])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[474,16476+55]..[474,16476+61])
                                        Pexp_construct "Module" (lib/shape.ml[474,16476+55]..[474,16476+61])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[474,16476+62]..[474,16476+64])
                                        Pexp_ident "p2" (lib/shape.ml[474,16476+62]..[474,16476+64])
                                  ]
                            ]
                        <case>
                          pattern (lib/shape.ml[475,16542+6]..[475,16542+29])
                            Ppat_construct "Pextra_ty" (lib/shape.ml[475,16542+6]..[475,16542+15])
                            Some
                              []
                              pattern (lib/shape.ml[475,16542+16]..[475,16542+29])
                                Ppat_tuple
                                [
                                  pattern (lib/shape.ml[475,16542+17]..[475,16542+21])
                                    Ppat_var "path" (lib/shape.ml[475,16542+17]..[475,16542+21])
                                  pattern (lib/shape.ml[475,16542+23]..[475,16542+28])
                                    Ppat_var "extra" (lib/shape.ml[475,16542+23]..[475,16542+28])
                                ]
                          expression (lib/shape.ml[475,16542+33]..[479,16696+9])
                            Pexp_match
                            expression (lib/shape.ml[476,16581+14]..[476,16581+19])
                              Pexp_ident "extra" (lib/shape.ml[476,16581+14]..[476,16581+19])
                            [
                              <case>
                                pattern (lib/shape.ml[477,16606+10]..[477,16606+20])
                                  Ppat_construct "Pcstr_ty" (lib/shape.ml[477,16606+10]..[477,16606+18])
                                  Some
                                    []
                                    pattern (lib/shape.ml[477,16606+19]..[477,16606+20])
                                      Ppat_any
                                expression (lib/shape.ml[477,16606+24]..[477,16606+37])
                                  Pexp_apply
                                  expression (lib/shape.ml[477,16606+24]..[477,16606+27])
                                    Pexp_ident "aux" (lib/shape.ml[477,16606+24]..[477,16606+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[477,16606+28]..[477,16606+32])
                                        Pexp_construct "Type" (lib/shape.ml[477,16606+28]..[477,16606+32])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[477,16606+33]..[477,16606+37])
                                        Pexp_ident "path" (lib/shape.ml[477,16606+33]..[477,16606+37])
                                  ]
                              <case>
                                pattern (lib/shape.ml[478,16644+10]..[478,16644+17])
                                  Ppat_construct "Pext_ty" (lib/shape.ml[478,16644+10]..[478,16644+17])
                                  None
                                expression (lib/shape.ml[478,16644+21]..[478,16644+51])
                                  Pexp_apply
                                  expression (lib/shape.ml[478,16644+21]..[478,16644+24])
                                    Pexp_ident "aux" (lib/shape.ml[478,16644+21]..[478,16644+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[478,16644+25]..[478,16644+46])
                                        Pexp_construct "Extension_constructor" (lib/shape.ml[478,16644+25]..[478,16644+46])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/shape.ml[478,16644+47]..[478,16644+51])
                                        Pexp_ident "path" (lib/shape.ml[478,16644+47]..[478,16644+51])
                                  ]
                            ]
                      ]
              ]
              expression (lib/shape.ml[481,16711+2]..[481,16711+15])
                Pexp_apply
                expression (lib/shape.ml[481,16711+2]..[481,16711+5])
                  Pexp_ident "aux" (lib/shape.ml[481,16711+2]..[481,16711+5])
                [
                  <arg>
                  Nolabel
                    expression (lib/shape.ml[481,16711+6]..[481,16711+15])
                      Pexp_ident "namespace" (lib/shape.ml[481,16711+6]..[481,16711+15])
                ]
    ]
  structure_item (lib/shape.ml[483,16728+0]..[485,16829+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[483,16728+4]..[483,16728+23])
          Ppat_var "for_persistent_unit" (lib/shape.ml[483,16728+4]..[483,16728+23])
        expression (lib/shape.ml[483,16728+24]..[485,16829+24]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[483,16728+24]..[483,16728+25])
              Nolabel
              None
              pattern (lib/shape.ml[483,16728+24]..[483,16728+25])
                Ppat_var "s" (lib/shape.ml[483,16728+24]..[483,16728+25])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[484,16756+2]..[485,16829+24])
              Pexp_record
              [
                "uid" (lib/shape.ml[484,16756+4]..[484,16756+7])
                  expression (lib/shape.ml[484,16756+10]..[484,16756+71])
                    Pexp_construct "Some" (lib/shape.ml[484,16756+10]..[484,16756+14])
                    Some
                      expression (lib/shape.ml[484,16756+15]..[484,16756+71])
                        Pexp_apply
                        expression (lib/shape.ml[484,16756+16]..[484,16756+42])
                          Pexp_ident "Uid.of_compilation_unit_id" (lib/shape.ml[484,16756+16]..[484,16756+42])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[484,16756+43]..[484,16756+70])
                              Pexp_apply
                              expression (lib/shape.ml[484,16756+44]..[484,16756+67])
                                Pexp_ident "Ident.create_persistent" (lib/shape.ml[484,16756+44]..[484,16756+67])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[484,16756+68]..[484,16756+69])
                                    Pexp_ident "s" (lib/shape.ml[484,16756+68]..[484,16756+69])
                              ]
                        ]
                "desc" (lib/shape.ml[485,16829+4]..[485,16829+8])
                  expression (lib/shape.ml[485,16829+11]..[485,16829+22])
                    Pexp_construct "Comp_unit" (lib/shape.ml[485,16829+11]..[485,16829+20])
                    Some
                      expression (lib/shape.ml[485,16829+21]..[485,16829+22])
                        Pexp_ident "s" (lib/shape.ml[485,16829+21]..[485,16829+22])
              ]
              None
    ]
  structure_item (lib/shape.ml[487,16855+0]..[487,16855+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[487,16855+4]..[487,16855+19])
          Ppat_var "leaf_for_unpack" (lib/shape.ml[487,16855+4]..[487,16855+19])
        expression (lib/shape.ml[487,16855+22]..[487,16855+49])
          Pexp_record
          [
            "uid" (lib/shape.ml[487,16855+24]..[487,16855+27])
              expression (lib/shape.ml[487,16855+30]..[487,16855+34])
                Pexp_construct "None" (lib/shape.ml[487,16855+30]..[487,16855+34])
                None
            "desc" (lib/shape.ml[487,16855+36]..[487,16855+40])
              expression (lib/shape.ml[487,16855+43]..[487,16855+47])
                Pexp_construct "Leaf" (lib/shape.ml[487,16855+43]..[487,16855+47])
                None
          ]
          None
    ]
  structure_item (lib/shape.ml[489,16906+0]..[492,16991+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/shape.ml[489,16906+4]..[489,16906+19])
          Ppat_var "set_uid_if_none" (lib/shape.ml[489,16906+4]..[489,16906+19])
        expression (lib/shape.ml[489,16906+20]..[492,16991+10]) ghost
          Pexp_function
          [
            Pparam_val (lib/shape.ml[489,16906+20]..[489,16906+21])
              Nolabel
              None
              pattern (lib/shape.ml[489,16906+20]..[489,16906+21])
                Ppat_var "t" (lib/shape.ml[489,16906+20]..[489,16906+21])
            Pparam_val (lib/shape.ml[489,16906+22]..[489,16906+25])
              Nolabel
              None
              pattern (lib/shape.ml[489,16906+22]..[489,16906+25])
                Ppat_var "uid" (lib/shape.ml[489,16906+22]..[489,16906+25])
          ]
          None
          Pfunction_body
            expression (lib/shape.ml[490,16934+2]..[492,16991+10])
              Pexp_match
              expression (lib/shape.ml[490,16934+8]..[490,16934+13])
                Pexp_field
                expression (lib/shape.ml[490,16934+8]..[490,16934+9])
                  Pexp_ident "t" (lib/shape.ml[490,16934+8]..[490,16934+9])
                "uid" (lib/shape.ml[490,16934+10]..[490,16934+13])
              [
                <case>
                  pattern (lib/shape.ml[491,16953+4]..[491,16953+8])
                    Ppat_construct "None" (lib/shape.ml[491,16953+4]..[491,16953+8])
                    None
                  expression (lib/shape.ml[491,16953+12]..[491,16953+37])
                    Pexp_record
                    [
                      "uid" (lib/shape.ml[491,16953+21]..[491,16953+24])
                        expression (lib/shape.ml[491,16953+27]..[491,16953+35])
                          Pexp_construct "Some" (lib/shape.ml[491,16953+27]..[491,16953+31])
                          Some
                            expression (lib/shape.ml[491,16953+32]..[491,16953+35])
                              Pexp_ident "uid" (lib/shape.ml[491,16953+32]..[491,16953+35])
                    ]
                    Some
                      expression (lib/shape.ml[491,16953+14]..[491,16953+15])
                        Pexp_ident "t" (lib/shape.ml[491,16953+14]..[491,16953+15])
                <case>
                  pattern (lib/shape.ml[492,16991+4]..[492,16991+5])
                    Ppat_any
                  expression (lib/shape.ml[492,16991+9]..[492,16991+10])
                    Pexp_ident "t" (lib/shape.ml[492,16991+9]..[492,16991+10])
              ]
    ]
  structure_item (lib/shape.ml[494,17003+0]..[538,18490+3])
    Pstr_module
    "Map" (lib/shape.ml[494,17003+7]..[494,17003+10])
      module_expr (lib/shape.ml[494,17003+13]..[538,18490+3])
        Pmod_structure
        [
          structure_item (lib/shape.ml[495,17023+2]..[495,17023+16])
            Pstr_type Rec
            [
              type_declaration "shape" (lib/shape.ml[495,17023+7]..[495,17023+12]) (lib/shape.ml[495,17023+2]..[495,17023+16])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lib/shape.ml[495,17023+15]..[495,17023+16])
                      Ptyp_constr "t" (lib/shape.ml[495,17023+15]..[495,17023+16])
                      []
            ]
          structure_item (lib/shape.ml[496,17040+2]..[496,17040+30])
            Pstr_type Nonrec
            [
              type_declaration "t" (lib/shape.ml[496,17040+14]..[496,17040+15]) (lib/shape.ml[496,17040+2]..[496,17040+30])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lib/shape.ml[496,17040+18]..[496,17040+30])
                      Ptyp_constr "Item.Map.t" (lib/shape.ml[496,17040+20]..[496,17040+30])
                      [
                        core_type (lib/shape.ml[496,17040+18]..[496,17040+19])
                          Ptyp_constr "t" (lib/shape.ml[496,17040+18]..[496,17040+19])
                          []
                      ]
            ]
          structure_item (lib/shape.ml[498,17072+2]..[498,17072+28])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[498,17072+6]..[498,17072+11])
                  Ppat_var "empty" (lib/shape.ml[498,17072+6]..[498,17072+11])
                expression (lib/shape.ml[498,17072+14]..[498,17072+28])
                  Pexp_ident "Item.Map.empty" (lib/shape.ml[498,17072+14]..[498,17072+28])
            ]
          structure_item (lib/shape.ml[500,17102+2]..[500,17102+50])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[500,17102+6]..[500,17102+9])
                  Ppat_var "add" (lib/shape.ml[500,17102+6]..[500,17102+9])
                expression (lib/shape.ml[500,17102+10]..[500,17102+50]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[500,17102+10]..[500,17102+11])
                      Nolabel
                      None
                      pattern (lib/shape.ml[500,17102+10]..[500,17102+11])
                        Ppat_var "t" (lib/shape.ml[500,17102+10]..[500,17102+11])
                    Pparam_val (lib/shape.ml[500,17102+12]..[500,17102+16])
                      Nolabel
                      None
                      pattern (lib/shape.ml[500,17102+12]..[500,17102+16])
                        Ppat_var "item" (lib/shape.ml[500,17102+12]..[500,17102+16])
                    Pparam_val (lib/shape.ml[500,17102+17]..[500,17102+22])
                      Nolabel
                      None
                      pattern (lib/shape.ml[500,17102+17]..[500,17102+22])
                        Ppat_var "shape" (lib/shape.ml[500,17102+17]..[500,17102+22])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[500,17102+25]..[500,17102+50])
                      Pexp_apply
                      expression (lib/shape.ml[500,17102+25]..[500,17102+37])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[500,17102+25]..[500,17102+37])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[500,17102+38]..[500,17102+42])
                            Pexp_ident "item" (lib/shape.ml[500,17102+38]..[500,17102+42])
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[500,17102+43]..[500,17102+48])
                            Pexp_ident "shape" (lib/shape.ml[500,17102+43]..[500,17102+48])
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[500,17102+49]..[500,17102+50])
                            Pexp_ident "t" (lib/shape.ml[500,17102+49]..[500,17102+50])
                      ]
            ]
          structure_item (lib/shape.ml[502,17154+2]..[502,17154+68])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[502,17154+6]..[502,17154+15])
                  Ppat_var "add_value" (lib/shape.ml[502,17154+6]..[502,17154+15])
                expression (lib/shape.ml[502,17154+16]..[502,17154+68]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[502,17154+16]..[502,17154+17])
                      Nolabel
                      None
                      pattern (lib/shape.ml[502,17154+16]..[502,17154+17])
                        Ppat_var "t" (lib/shape.ml[502,17154+16]..[502,17154+17])
                    Pparam_val (lib/shape.ml[502,17154+18]..[502,17154+20])
                      Nolabel
                      None
                      pattern (lib/shape.ml[502,17154+18]..[502,17154+20])
                        Ppat_var "id" (lib/shape.ml[502,17154+18]..[502,17154+20])
                    Pparam_val (lib/shape.ml[502,17154+21]..[502,17154+24])
                      Nolabel
                      None
                      pattern (lib/shape.ml[502,17154+21]..[502,17154+24])
                        Ppat_var "uid" (lib/shape.ml[502,17154+21]..[502,17154+24])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[502,17154+27]..[502,17154+68])
                      Pexp_apply
                      expression (lib/shape.ml[502,17154+27]..[502,17154+39])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[502,17154+27]..[502,17154+39])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[502,17154+40]..[502,17154+55])
                            Pexp_apply
                            expression (lib/shape.ml[502,17154+41]..[502,17154+51])
                              Pexp_ident "Item.value" (lib/shape.ml[502,17154+41]..[502,17154+51])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[502,17154+52]..[502,17154+54])
                                  Pexp_ident "id" (lib/shape.ml[502,17154+52]..[502,17154+54])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[502,17154+56]..[502,17154+66])
                            Pexp_apply
                            expression (lib/shape.ml[502,17154+57]..[502,17154+61])
                              Pexp_ident "leaf" (lib/shape.ml[502,17154+57]..[502,17154+61])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[502,17154+62]..[502,17154+65])
                                  Pexp_ident "uid" (lib/shape.ml[502,17154+62]..[502,17154+65])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[502,17154+67]..[502,17154+68])
                            Pexp_ident "t" (lib/shape.ml[502,17154+67]..[502,17154+68])
                      ]
            ]
          structure_item (lib/shape.ml[503,17223+2]..[505,17289+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[503,17223+6]..[503,17223+20])
                  Ppat_var "add_value_proj" (lib/shape.ml[503,17223+6]..[503,17223+20])
                expression (lib/shape.ml[503,17223+21]..[505,17289+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[503,17223+21]..[503,17223+22])
                      Nolabel
                      None
                      pattern (lib/shape.ml[503,17223+21]..[503,17223+22])
                        Ppat_var "t" (lib/shape.ml[503,17223+21]..[503,17223+22])
                    Pparam_val (lib/shape.ml[503,17223+23]..[503,17223+25])
                      Nolabel
                      None
                      pattern (lib/shape.ml[503,17223+23]..[503,17223+25])
                        Ppat_var "id" (lib/shape.ml[503,17223+23]..[503,17223+25])
                    Pparam_val (lib/shape.ml[503,17223+26]..[503,17223+31])
                      Nolabel
                      None
                      pattern (lib/shape.ml[503,17223+26]..[503,17223+31])
                        Ppat_var "shape" (lib/shape.ml[503,17223+26]..[503,17223+31])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[504,17257+4]..[505,17289+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[504,17257+8]..[504,17257+12])
                            Ppat_var "item" (lib/shape.ml[504,17257+8]..[504,17257+12])
                          expression (lib/shape.ml[504,17257+15]..[504,17257+28])
                            Pexp_apply
                            expression (lib/shape.ml[504,17257+15]..[504,17257+25])
                              Pexp_ident "Item.value" (lib/shape.ml[504,17257+15]..[504,17257+25])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[504,17257+26]..[504,17257+28])
                                  Pexp_ident "id" (lib/shape.ml[504,17257+26]..[504,17257+28])
                            ]
                      ]
                      expression (lib/shape.ml[505,17289+4]..[505,17289+41])
                        Pexp_apply
                        expression (lib/shape.ml[505,17289+4]..[505,17289+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[505,17289+4]..[505,17289+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[505,17289+17]..[505,17289+21])
                              Pexp_ident "item" (lib/shape.ml[505,17289+17]..[505,17289+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[505,17289+22]..[505,17289+39])
                              Pexp_apply
                              expression (lib/shape.ml[505,17289+23]..[505,17289+27])
                                Pexp_ident "proj" (lib/shape.ml[505,17289+23]..[505,17289+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[505,17289+28]..[505,17289+33])
                                    Pexp_ident "shape" (lib/shape.ml[505,17289+28]..[505,17289+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[505,17289+34]..[505,17289+38])
                                    Pexp_ident "item" (lib/shape.ml[505,17289+34]..[505,17289+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[505,17289+40]..[505,17289+41])
                              Pexp_ident "t" (lib/shape.ml[505,17289+40]..[505,17289+41])
                        ]
            ]
          structure_item (lib/shape.ml[507,17332+2]..[507,17332+67])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[507,17332+6]..[507,17332+14])
                  Ppat_var "add_type" (lib/shape.ml[507,17332+6]..[507,17332+14])
                expression (lib/shape.ml[507,17332+15]..[507,17332+67]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[507,17332+15]..[507,17332+16])
                      Nolabel
                      None
                      pattern (lib/shape.ml[507,17332+15]..[507,17332+16])
                        Ppat_var "t" (lib/shape.ml[507,17332+15]..[507,17332+16])
                    Pparam_val (lib/shape.ml[507,17332+17]..[507,17332+19])
                      Nolabel
                      None
                      pattern (lib/shape.ml[507,17332+17]..[507,17332+19])
                        Ppat_var "id" (lib/shape.ml[507,17332+17]..[507,17332+19])
                    Pparam_val (lib/shape.ml[507,17332+20]..[507,17332+23])
                      Nolabel
                      None
                      pattern (lib/shape.ml[507,17332+20]..[507,17332+23])
                        Ppat_var "uid" (lib/shape.ml[507,17332+20]..[507,17332+23])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[507,17332+26]..[507,17332+67])
                      Pexp_apply
                      expression (lib/shape.ml[507,17332+26]..[507,17332+38])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[507,17332+26]..[507,17332+38])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[507,17332+39]..[507,17332+54])
                            Pexp_apply
                            expression (lib/shape.ml[507,17332+40]..[507,17332+50])
                              Pexp_ident "Item.type_" (lib/shape.ml[507,17332+40]..[507,17332+50])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[507,17332+51]..[507,17332+53])
                                  Pexp_ident "id" (lib/shape.ml[507,17332+51]..[507,17332+53])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[507,17332+55]..[507,17332+65])
                            Pexp_apply
                            expression (lib/shape.ml[507,17332+56]..[507,17332+60])
                              Pexp_ident "leaf" (lib/shape.ml[507,17332+56]..[507,17332+60])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[507,17332+61]..[507,17332+64])
                                  Pexp_ident "uid" (lib/shape.ml[507,17332+61]..[507,17332+64])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[507,17332+66]..[507,17332+67])
                            Pexp_ident "t" (lib/shape.ml[507,17332+66]..[507,17332+67])
                      ]
            ]
          structure_item (lib/shape.ml[508,17400+2]..[510,17465+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[508,17400+6]..[508,17400+19])
                  Ppat_var "add_type_proj" (lib/shape.ml[508,17400+6]..[508,17400+19])
                expression (lib/shape.ml[508,17400+20]..[510,17465+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[508,17400+20]..[508,17400+21])
                      Nolabel
                      None
                      pattern (lib/shape.ml[508,17400+20]..[508,17400+21])
                        Ppat_var "t" (lib/shape.ml[508,17400+20]..[508,17400+21])
                    Pparam_val (lib/shape.ml[508,17400+22]..[508,17400+24])
                      Nolabel
                      None
                      pattern (lib/shape.ml[508,17400+22]..[508,17400+24])
                        Ppat_var "id" (lib/shape.ml[508,17400+22]..[508,17400+24])
                    Pparam_val (lib/shape.ml[508,17400+25]..[508,17400+30])
                      Nolabel
                      None
                      pattern (lib/shape.ml[508,17400+25]..[508,17400+30])
                        Ppat_var "shape" (lib/shape.ml[508,17400+25]..[508,17400+30])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[509,17433+4]..[510,17465+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[509,17433+8]..[509,17433+12])
                            Ppat_var "item" (lib/shape.ml[509,17433+8]..[509,17433+12])
                          expression (lib/shape.ml[509,17433+15]..[509,17433+28])
                            Pexp_apply
                            expression (lib/shape.ml[509,17433+15]..[509,17433+25])
                              Pexp_ident "Item.type_" (lib/shape.ml[509,17433+15]..[509,17433+25])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[509,17433+26]..[509,17433+28])
                                  Pexp_ident "id" (lib/shape.ml[509,17433+26]..[509,17433+28])
                            ]
                      ]
                      expression (lib/shape.ml[510,17465+4]..[510,17465+41])
                        Pexp_apply
                        expression (lib/shape.ml[510,17465+4]..[510,17465+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[510,17465+4]..[510,17465+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[510,17465+17]..[510,17465+21])
                              Pexp_ident "item" (lib/shape.ml[510,17465+17]..[510,17465+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[510,17465+22]..[510,17465+39])
                              Pexp_apply
                              expression (lib/shape.ml[510,17465+23]..[510,17465+27])
                                Pexp_ident "proj" (lib/shape.ml[510,17465+23]..[510,17465+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[510,17465+28]..[510,17465+33])
                                    Pexp_ident "shape" (lib/shape.ml[510,17465+28]..[510,17465+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[510,17465+34]..[510,17465+38])
                                    Pexp_ident "item" (lib/shape.ml[510,17465+34]..[510,17465+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[510,17465+40]..[510,17465+41])
                              Pexp_ident "t" (lib/shape.ml[510,17465+40]..[510,17465+41])
                        ]
            ]
          structure_item (lib/shape.ml[512,17508+2]..[512,17508+68])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[512,17508+6]..[512,17508+16])
                  Ppat_var "add_module" (lib/shape.ml[512,17508+6]..[512,17508+16])
                expression (lib/shape.ml[512,17508+17]..[512,17508+68]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[512,17508+17]..[512,17508+18])
                      Nolabel
                      None
                      pattern (lib/shape.ml[512,17508+17]..[512,17508+18])
                        Ppat_var "t" (lib/shape.ml[512,17508+17]..[512,17508+18])
                    Pparam_val (lib/shape.ml[512,17508+19]..[512,17508+21])
                      Nolabel
                      None
                      pattern (lib/shape.ml[512,17508+19]..[512,17508+21])
                        Ppat_var "id" (lib/shape.ml[512,17508+19]..[512,17508+21])
                    Pparam_val (lib/shape.ml[512,17508+22]..[512,17508+27])
                      Nolabel
                      None
                      pattern (lib/shape.ml[512,17508+22]..[512,17508+27])
                        Ppat_var "shape" (lib/shape.ml[512,17508+22]..[512,17508+27])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[512,17508+30]..[512,17508+68])
                      Pexp_apply
                      expression (lib/shape.ml[512,17508+30]..[512,17508+42])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[512,17508+30]..[512,17508+42])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[512,17508+43]..[512,17508+60])
                            Pexp_apply
                            expression (lib/shape.ml[512,17508+44]..[512,17508+56])
                              Pexp_ident "Item.module_" (lib/shape.ml[512,17508+44]..[512,17508+56])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[512,17508+57]..[512,17508+59])
                                  Pexp_ident "id" (lib/shape.ml[512,17508+57]..[512,17508+59])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[512,17508+61]..[512,17508+66])
                            Pexp_ident "shape" (lib/shape.ml[512,17508+61]..[512,17508+66])
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[512,17508+67]..[512,17508+68])
                            Pexp_ident "t" (lib/shape.ml[512,17508+67]..[512,17508+68])
                      ]
            ]
          structure_item (lib/shape.ml[513,17577+2]..[515,17646+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[513,17577+6]..[513,17577+21])
                  Ppat_var "add_module_proj" (lib/shape.ml[513,17577+6]..[513,17577+21])
                expression (lib/shape.ml[513,17577+22]..[515,17646+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[513,17577+22]..[513,17577+23])
                      Nolabel
                      None
                      pattern (lib/shape.ml[513,17577+22]..[513,17577+23])
                        Ppat_var "t" (lib/shape.ml[513,17577+22]..[513,17577+23])
                    Pparam_val (lib/shape.ml[513,17577+24]..[513,17577+26])
                      Nolabel
                      None
                      pattern (lib/shape.ml[513,17577+24]..[513,17577+26])
                        Ppat_var "id" (lib/shape.ml[513,17577+24]..[513,17577+26])
                    Pparam_val (lib/shape.ml[513,17577+27]..[513,17577+32])
                      Nolabel
                      None
                      pattern (lib/shape.ml[513,17577+27]..[513,17577+32])
                        Ppat_var "shape" (lib/shape.ml[513,17577+27]..[513,17577+32])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[514,17612+4]..[515,17646+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[514,17612+8]..[514,17612+12])
                            Ppat_var "item" (lib/shape.ml[514,17612+8]..[514,17612+12])
                          expression (lib/shape.ml[514,17612+15]..[514,17612+30])
                            Pexp_apply
                            expression (lib/shape.ml[514,17612+15]..[514,17612+27])
                              Pexp_ident "Item.module_" (lib/shape.ml[514,17612+15]..[514,17612+27])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[514,17612+28]..[514,17612+30])
                                  Pexp_ident "id" (lib/shape.ml[514,17612+28]..[514,17612+30])
                            ]
                      ]
                      expression (lib/shape.ml[515,17646+4]..[515,17646+41])
                        Pexp_apply
                        expression (lib/shape.ml[515,17646+4]..[515,17646+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[515,17646+4]..[515,17646+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[515,17646+17]..[515,17646+21])
                              Pexp_ident "item" (lib/shape.ml[515,17646+17]..[515,17646+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[515,17646+22]..[515,17646+39])
                              Pexp_apply
                              expression (lib/shape.ml[515,17646+23]..[515,17646+27])
                                Pexp_ident "proj" (lib/shape.ml[515,17646+23]..[515,17646+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[515,17646+28]..[515,17646+33])
                                    Pexp_ident "shape" (lib/shape.ml[515,17646+28]..[515,17646+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[515,17646+34]..[515,17646+38])
                                    Pexp_ident "item" (lib/shape.ml[515,17646+34]..[515,17646+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[515,17646+40]..[515,17646+41])
                              Pexp_ident "t" (lib/shape.ml[515,17646+40]..[515,17646+41])
                        ]
            ]
          structure_item (lib/shape.ml[517,17689+2]..[518,17722+51])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[517,17689+6]..[517,17689+21])
                  Ppat_var "add_module_type" (lib/shape.ml[517,17689+6]..[517,17689+21])
                expression (lib/shape.ml[517,17689+22]..[518,17722+51]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[517,17689+22]..[517,17689+23])
                      Nolabel
                      None
                      pattern (lib/shape.ml[517,17689+22]..[517,17689+23])
                        Ppat_var "t" (lib/shape.ml[517,17689+22]..[517,17689+23])
                    Pparam_val (lib/shape.ml[517,17689+24]..[517,17689+26])
                      Nolabel
                      None
                      pattern (lib/shape.ml[517,17689+24]..[517,17689+26])
                        Ppat_var "id" (lib/shape.ml[517,17689+24]..[517,17689+26])
                    Pparam_val (lib/shape.ml[517,17689+27]..[517,17689+30])
                      Nolabel
                      None
                      pattern (lib/shape.ml[517,17689+27]..[517,17689+30])
                        Ppat_var "uid" (lib/shape.ml[517,17689+27]..[517,17689+30])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[518,17722+4]..[518,17722+51])
                      Pexp_apply
                      expression (lib/shape.ml[518,17722+4]..[518,17722+16])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[518,17722+4]..[518,17722+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[518,17722+17]..[518,17722+38])
                            Pexp_apply
                            expression (lib/shape.ml[518,17722+18]..[518,17722+34])
                              Pexp_ident "Item.module_type" (lib/shape.ml[518,17722+18]..[518,17722+34])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[518,17722+35]..[518,17722+37])
                                  Pexp_ident "id" (lib/shape.ml[518,17722+35]..[518,17722+37])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[518,17722+39]..[518,17722+49])
                            Pexp_apply
                            expression (lib/shape.ml[518,17722+40]..[518,17722+44])
                              Pexp_ident "leaf" (lib/shape.ml[518,17722+40]..[518,17722+44])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[518,17722+45]..[518,17722+48])
                                  Pexp_ident "uid" (lib/shape.ml[518,17722+45]..[518,17722+48])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[518,17722+50]..[518,17722+51])
                            Pexp_ident "t" (lib/shape.ml[518,17722+50]..[518,17722+51])
                      ]
            ]
          structure_item (lib/shape.ml[519,17774+2]..[521,17852+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[519,17774+6]..[519,17774+26])
                  Ppat_var "add_module_type_proj" (lib/shape.ml[519,17774+6]..[519,17774+26])
                expression (lib/shape.ml[519,17774+27]..[521,17852+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[519,17774+27]..[519,17774+28])
                      Nolabel
                      None
                      pattern (lib/shape.ml[519,17774+27]..[519,17774+28])
                        Ppat_var "t" (lib/shape.ml[519,17774+27]..[519,17774+28])
                    Pparam_val (lib/shape.ml[519,17774+29]..[519,17774+31])
                      Nolabel
                      None
                      pattern (lib/shape.ml[519,17774+29]..[519,17774+31])
                        Ppat_var "id" (lib/shape.ml[519,17774+29]..[519,17774+31])
                    Pparam_val (lib/shape.ml[519,17774+32]..[519,17774+37])
                      Nolabel
                      None
                      pattern (lib/shape.ml[519,17774+32]..[519,17774+37])
                        Ppat_var "shape" (lib/shape.ml[519,17774+32]..[519,17774+37])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[520,17814+4]..[521,17852+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[520,17814+8]..[520,17814+12])
                            Ppat_var "item" (lib/shape.ml[520,17814+8]..[520,17814+12])
                          expression (lib/shape.ml[520,17814+15]..[520,17814+34])
                            Pexp_apply
                            expression (lib/shape.ml[520,17814+15]..[520,17814+31])
                              Pexp_ident "Item.module_type" (lib/shape.ml[520,17814+15]..[520,17814+31])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[520,17814+32]..[520,17814+34])
                                  Pexp_ident "id" (lib/shape.ml[520,17814+32]..[520,17814+34])
                            ]
                      ]
                      expression (lib/shape.ml[521,17852+4]..[521,17852+41])
                        Pexp_apply
                        expression (lib/shape.ml[521,17852+4]..[521,17852+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[521,17852+4]..[521,17852+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[521,17852+17]..[521,17852+21])
                              Pexp_ident "item" (lib/shape.ml[521,17852+17]..[521,17852+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[521,17852+22]..[521,17852+39])
                              Pexp_apply
                              expression (lib/shape.ml[521,17852+23]..[521,17852+27])
                                Pexp_ident "proj" (lib/shape.ml[521,17852+23]..[521,17852+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[521,17852+28]..[521,17852+33])
                                    Pexp_ident "shape" (lib/shape.ml[521,17852+28]..[521,17852+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[521,17852+34]..[521,17852+38])
                                    Pexp_ident "item" (lib/shape.ml[521,17852+34]..[521,17852+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[521,17852+40]..[521,17852+41])
                              Pexp_ident "t" (lib/shape.ml[521,17852+40]..[521,17852+41])
                        ]
            ]
          structure_item (lib/shape.ml[523,17895+2]..[524,17924+61])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[523,17895+6]..[523,17895+17])
                  Ppat_var "add_extcons" (lib/shape.ml[523,17895+6]..[523,17895+17])
                expression (lib/shape.ml[523,17895+18]..[524,17924+61]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[523,17895+18]..[523,17895+19])
                      Nolabel
                      None
                      pattern (lib/shape.ml[523,17895+18]..[523,17895+19])
                        Ppat_var "t" (lib/shape.ml[523,17895+18]..[523,17895+19])
                    Pparam_val (lib/shape.ml[523,17895+20]..[523,17895+22])
                      Nolabel
                      None
                      pattern (lib/shape.ml[523,17895+20]..[523,17895+22])
                        Ppat_var "id" (lib/shape.ml[523,17895+20]..[523,17895+22])
                    Pparam_val (lib/shape.ml[523,17895+23]..[523,17895+26])
                      Nolabel
                      None
                      pattern (lib/shape.ml[523,17895+23]..[523,17895+26])
                        Ppat_var "uid" (lib/shape.ml[523,17895+23]..[523,17895+26])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[524,17924+4]..[524,17924+61])
                      Pexp_apply
                      expression (lib/shape.ml[524,17924+4]..[524,17924+16])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[524,17924+4]..[524,17924+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[524,17924+17]..[524,17924+48])
                            Pexp_apply
                            expression (lib/shape.ml[524,17924+18]..[524,17924+44])
                              Pexp_ident "Item.extension_constructor" (lib/shape.ml[524,17924+18]..[524,17924+44])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[524,17924+45]..[524,17924+47])
                                  Pexp_ident "id" (lib/shape.ml[524,17924+45]..[524,17924+47])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[524,17924+49]..[524,17924+59])
                            Pexp_apply
                            expression (lib/shape.ml[524,17924+50]..[524,17924+54])
                              Pexp_ident "leaf" (lib/shape.ml[524,17924+50]..[524,17924+54])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[524,17924+55]..[524,17924+58])
                                  Pexp_ident "uid" (lib/shape.ml[524,17924+55]..[524,17924+58])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[524,17924+60]..[524,17924+61])
                            Pexp_ident "t" (lib/shape.ml[524,17924+60]..[524,17924+61])
                      ]
            ]
          structure_item (lib/shape.ml[525,17986+2]..[527,18070+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[525,17986+6]..[525,17986+22])
                  Ppat_var "add_extcons_proj" (lib/shape.ml[525,17986+6]..[525,17986+22])
                expression (lib/shape.ml[525,17986+23]..[527,18070+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[525,17986+23]..[525,17986+24])
                      Nolabel
                      None
                      pattern (lib/shape.ml[525,17986+23]..[525,17986+24])
                        Ppat_var "t" (lib/shape.ml[525,17986+23]..[525,17986+24])
                    Pparam_val (lib/shape.ml[525,17986+25]..[525,17986+27])
                      Nolabel
                      None
                      pattern (lib/shape.ml[525,17986+25]..[525,17986+27])
                        Ppat_var "id" (lib/shape.ml[525,17986+25]..[525,17986+27])
                    Pparam_val (lib/shape.ml[525,17986+28]..[525,17986+33])
                      Nolabel
                      None
                      pattern (lib/shape.ml[525,17986+28]..[525,17986+33])
                        Ppat_var "shape" (lib/shape.ml[525,17986+28]..[525,17986+33])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[526,18022+4]..[527,18070+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[526,18022+8]..[526,18022+12])
                            Ppat_var "item" (lib/shape.ml[526,18022+8]..[526,18022+12])
                          expression (lib/shape.ml[526,18022+15]..[526,18022+44])
                            Pexp_apply
                            expression (lib/shape.ml[526,18022+15]..[526,18022+41])
                              Pexp_ident "Item.extension_constructor" (lib/shape.ml[526,18022+15]..[526,18022+41])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[526,18022+42]..[526,18022+44])
                                  Pexp_ident "id" (lib/shape.ml[526,18022+42]..[526,18022+44])
                            ]
                      ]
                      expression (lib/shape.ml[527,18070+4]..[527,18070+41])
                        Pexp_apply
                        expression (lib/shape.ml[527,18070+4]..[527,18070+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[527,18070+4]..[527,18070+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[527,18070+17]..[527,18070+21])
                              Pexp_ident "item" (lib/shape.ml[527,18070+17]..[527,18070+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[527,18070+22]..[527,18070+39])
                              Pexp_apply
                              expression (lib/shape.ml[527,18070+23]..[527,18070+27])
                                Pexp_ident "proj" (lib/shape.ml[527,18070+23]..[527,18070+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[527,18070+28]..[527,18070+33])
                                    Pexp_ident "shape" (lib/shape.ml[527,18070+28]..[527,18070+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[527,18070+34]..[527,18070+38])
                                    Pexp_ident "item" (lib/shape.ml[527,18070+34]..[527,18070+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[527,18070+40]..[527,18070+41])
                              Pexp_ident "t" (lib/shape.ml[527,18070+40]..[527,18070+41])
                        ]
            ]
          structure_item (lib/shape.ml[529,18113+2]..[529,18113+69])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[529,18113+6]..[529,18113+15])
                  Ppat_var "add_class" (lib/shape.ml[529,18113+6]..[529,18113+15])
                expression (lib/shape.ml[529,18113+16]..[529,18113+69]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[529,18113+16]..[529,18113+17])
                      Nolabel
                      None
                      pattern (lib/shape.ml[529,18113+16]..[529,18113+17])
                        Ppat_var "t" (lib/shape.ml[529,18113+16]..[529,18113+17])
                    Pparam_val (lib/shape.ml[529,18113+18]..[529,18113+20])
                      Nolabel
                      None
                      pattern (lib/shape.ml[529,18113+18]..[529,18113+20])
                        Ppat_var "id" (lib/shape.ml[529,18113+18]..[529,18113+20])
                    Pparam_val (lib/shape.ml[529,18113+21]..[529,18113+24])
                      Nolabel
                      None
                      pattern (lib/shape.ml[529,18113+21]..[529,18113+24])
                        Ppat_var "uid" (lib/shape.ml[529,18113+21]..[529,18113+24])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[529,18113+27]..[529,18113+69])
                      Pexp_apply
                      expression (lib/shape.ml[529,18113+27]..[529,18113+39])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[529,18113+27]..[529,18113+39])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[529,18113+40]..[529,18113+56])
                            Pexp_apply
                            expression (lib/shape.ml[529,18113+41]..[529,18113+52])
                              Pexp_ident "Item.class_" (lib/shape.ml[529,18113+41]..[529,18113+52])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[529,18113+53]..[529,18113+55])
                                  Pexp_ident "id" (lib/shape.ml[529,18113+53]..[529,18113+55])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[529,18113+57]..[529,18113+67])
                            Pexp_apply
                            expression (lib/shape.ml[529,18113+58]..[529,18113+62])
                              Pexp_ident "leaf" (lib/shape.ml[529,18113+58]..[529,18113+62])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[529,18113+63]..[529,18113+66])
                                  Pexp_ident "uid" (lib/shape.ml[529,18113+63]..[529,18113+66])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[529,18113+68]..[529,18113+69])
                            Pexp_ident "t" (lib/shape.ml[529,18113+68]..[529,18113+69])
                      ]
            ]
          structure_item (lib/shape.ml[530,18183+2]..[532,18250+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[530,18183+6]..[530,18183+20])
                  Ppat_var "add_class_proj" (lib/shape.ml[530,18183+6]..[530,18183+20])
                expression (lib/shape.ml[530,18183+21]..[532,18250+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[530,18183+21]..[530,18183+22])
                      Nolabel
                      None
                      pattern (lib/shape.ml[530,18183+21]..[530,18183+22])
                        Ppat_var "t" (lib/shape.ml[530,18183+21]..[530,18183+22])
                    Pparam_val (lib/shape.ml[530,18183+23]..[530,18183+25])
                      Nolabel
                      None
                      pattern (lib/shape.ml[530,18183+23]..[530,18183+25])
                        Ppat_var "id" (lib/shape.ml[530,18183+23]..[530,18183+25])
                    Pparam_val (lib/shape.ml[530,18183+26]..[530,18183+31])
                      Nolabel
                      None
                      pattern (lib/shape.ml[530,18183+26]..[530,18183+31])
                        Ppat_var "shape" (lib/shape.ml[530,18183+26]..[530,18183+31])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[531,18217+4]..[532,18250+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[531,18217+8]..[531,18217+12])
                            Ppat_var "item" (lib/shape.ml[531,18217+8]..[531,18217+12])
                          expression (lib/shape.ml[531,18217+15]..[531,18217+29])
                            Pexp_apply
                            expression (lib/shape.ml[531,18217+15]..[531,18217+26])
                              Pexp_ident "Item.class_" (lib/shape.ml[531,18217+15]..[531,18217+26])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[531,18217+27]..[531,18217+29])
                                  Pexp_ident "id" (lib/shape.ml[531,18217+27]..[531,18217+29])
                            ]
                      ]
                      expression (lib/shape.ml[532,18250+4]..[532,18250+41])
                        Pexp_apply
                        expression (lib/shape.ml[532,18250+4]..[532,18250+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[532,18250+4]..[532,18250+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[532,18250+17]..[532,18250+21])
                              Pexp_ident "item" (lib/shape.ml[532,18250+17]..[532,18250+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[532,18250+22]..[532,18250+39])
                              Pexp_apply
                              expression (lib/shape.ml[532,18250+23]..[532,18250+27])
                                Pexp_ident "proj" (lib/shape.ml[532,18250+23]..[532,18250+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[532,18250+28]..[532,18250+33])
                                    Pexp_ident "shape" (lib/shape.ml[532,18250+28]..[532,18250+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[532,18250+34]..[532,18250+38])
                                    Pexp_ident "item" (lib/shape.ml[532,18250+34]..[532,18250+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[532,18250+40]..[532,18250+41])
                              Pexp_ident "t" (lib/shape.ml[532,18250+40]..[532,18250+41])
                        ]
            ]
          structure_item (lib/shape.ml[534,18293+2]..[534,18293+78])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[534,18293+6]..[534,18293+20])
                  Ppat_var "add_class_type" (lib/shape.ml[534,18293+6]..[534,18293+20])
                expression (lib/shape.ml[534,18293+21]..[534,18293+78]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[534,18293+21]..[534,18293+22])
                      Nolabel
                      None
                      pattern (lib/shape.ml[534,18293+21]..[534,18293+22])
                        Ppat_var "t" (lib/shape.ml[534,18293+21]..[534,18293+22])
                    Pparam_val (lib/shape.ml[534,18293+23]..[534,18293+25])
                      Nolabel
                      None
                      pattern (lib/shape.ml[534,18293+23]..[534,18293+25])
                        Ppat_var "id" (lib/shape.ml[534,18293+23]..[534,18293+25])
                    Pparam_val (lib/shape.ml[534,18293+26]..[534,18293+29])
                      Nolabel
                      None
                      pattern (lib/shape.ml[534,18293+26]..[534,18293+29])
                        Ppat_var "uid" (lib/shape.ml[534,18293+26]..[534,18293+29])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[534,18293+32]..[534,18293+78])
                      Pexp_apply
                      expression (lib/shape.ml[534,18293+32]..[534,18293+44])
                        Pexp_ident "Item.Map.add" (lib/shape.ml[534,18293+32]..[534,18293+44])
                      [
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[534,18293+45]..[534,18293+65])
                            Pexp_apply
                            expression (lib/shape.ml[534,18293+46]..[534,18293+61])
                              Pexp_ident "Item.class_type" (lib/shape.ml[534,18293+46]..[534,18293+61])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[534,18293+62]..[534,18293+64])
                                  Pexp_ident "id" (lib/shape.ml[534,18293+62]..[534,18293+64])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[534,18293+66]..[534,18293+76])
                            Pexp_apply
                            expression (lib/shape.ml[534,18293+67]..[534,18293+71])
                              Pexp_ident "leaf" (lib/shape.ml[534,18293+67]..[534,18293+71])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[534,18293+72]..[534,18293+75])
                                  Pexp_ident "uid" (lib/shape.ml[534,18293+72]..[534,18293+75])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/shape.ml[534,18293+77]..[534,18293+78])
                            Pexp_ident "t" (lib/shape.ml[534,18293+77]..[534,18293+78])
                      ]
            ]
          structure_item (lib/shape.ml[535,18372+2]..[537,18448+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/shape.ml[535,18372+6]..[535,18372+25])
                  Ppat_var "add_class_type_proj" (lib/shape.ml[535,18372+6]..[535,18372+25])
                expression (lib/shape.ml[535,18372+26]..[537,18448+41]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/shape.ml[535,18372+26]..[535,18372+27])
                      Nolabel
                      None
                      pattern (lib/shape.ml[535,18372+26]..[535,18372+27])
                        Ppat_var "t" (lib/shape.ml[535,18372+26]..[535,18372+27])
                    Pparam_val (lib/shape.ml[535,18372+28]..[535,18372+30])
                      Nolabel
                      None
                      pattern (lib/shape.ml[535,18372+28]..[535,18372+30])
                        Ppat_var "id" (lib/shape.ml[535,18372+28]..[535,18372+30])
                    Pparam_val (lib/shape.ml[535,18372+31]..[535,18372+36])
                      Nolabel
                      None
                      pattern (lib/shape.ml[535,18372+31]..[535,18372+36])
                        Ppat_var "shape" (lib/shape.ml[535,18372+31]..[535,18372+36])
                  ]
                  None
                  Pfunction_body
                    expression (lib/shape.ml[536,18411+4]..[537,18448+41])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/shape.ml[536,18411+8]..[536,18411+12])
                            Ppat_var "item" (lib/shape.ml[536,18411+8]..[536,18411+12])
                          expression (lib/shape.ml[536,18411+15]..[536,18411+33])
                            Pexp_apply
                            expression (lib/shape.ml[536,18411+15]..[536,18411+30])
                              Pexp_ident "Item.class_type" (lib/shape.ml[536,18411+15]..[536,18411+30])
                            [
                              <arg>
                              Nolabel
                                expression (lib/shape.ml[536,18411+31]..[536,18411+33])
                                  Pexp_ident "id" (lib/shape.ml[536,18411+31]..[536,18411+33])
                            ]
                      ]
                      expression (lib/shape.ml[537,18448+4]..[537,18448+41])
                        Pexp_apply
                        expression (lib/shape.ml[537,18448+4]..[537,18448+16])
                          Pexp_ident "Item.Map.add" (lib/shape.ml[537,18448+4]..[537,18448+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[537,18448+17]..[537,18448+21])
                              Pexp_ident "item" (lib/shape.ml[537,18448+17]..[537,18448+21])
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[537,18448+22]..[537,18448+39])
                              Pexp_apply
                              expression (lib/shape.ml[537,18448+23]..[537,18448+27])
                                Pexp_ident "proj" (lib/shape.ml[537,18448+23]..[537,18448+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[537,18448+28]..[537,18448+33])
                                    Pexp_ident "shape" (lib/shape.ml[537,18448+28]..[537,18448+33])
                                <arg>
                                Nolabel
                                  expression (lib/shape.ml[537,18448+34]..[537,18448+38])
                                    Pexp_ident "item" (lib/shape.ml[537,18448+34]..[537,18448+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/shape.ml[537,18448+40]..[537,18448+41])
                              Pexp_ident "t" (lib/shape.ml[537,18448+40]..[537,18448+41])
                        ]
            ]
        ]
]

module Uid =
  struct
    type t =
      | Compilation_unit of string 
      | Item of {
      comp_unit: string ;
      id: int } 
      | Internal 
      | Predef of string 
    let id = ref (-1)
    let reinit () = id := (-1)
    let mk ~current_unit =
      incr id; Item { comp_unit = current_unit; id = (!id) }
    let of_compilation_unit_id id =
      if not (Ident.persistent id)
      then
        Misc.fatal_errorf "Types.Uid.of_compilation_unit_id %S"
          (Ident.name id);
      Compilation_unit (Ident.name id)
    let of_predef_id id =
      if not (Ident.is_predef id)
      then Misc.fatal_errorf "Types.Uid.of_predef_id %S" (Ident.name id);
      Predef (Ident.name id)
    let internal_not_actually_unique = Internal
    let for_actual_declaration = function | Item _ -> true | _ -> false
  end
module Sig_component_kind =
  struct
    type t =
      | Value 
      | Type 
      | Module 
      | Module_type 
      | Extension_constructor 
      | Class 
      | Class_type 
    let to_string =
      function
      | Value -> "value"
      | Type -> "type"
      | Module -> "module"
      | Module_type -> "module type"
      | Extension_constructor -> "extension constructor"
      | Class -> "class"
      | Class_type -> "class type"
    let can_appear_in_types =
      function
      | Value | Extension_constructor -> false
      | Type | Module | Module_type | Class | Class_type -> true
  end
module Item =
  struct
    module T =
      struct
        type t = (string * Sig_component_kind.t)
        let compare = compare
        let make str ns = (str, ns)
        let value id = ((Ident.name id), Sig_component_kind.Value)
        let type_ id = ((Ident.name id), Sig_component_kind.Type)
        let module_ id = ((Ident.name id), Sig_component_kind.Module)
        let module_type id =
          ((Ident.name id), Sig_component_kind.Module_type)
        let extension_constructor id =
          ((Ident.name id), Sig_component_kind.Extension_constructor)
        let class_ id = ((Ident.name id), Sig_component_kind.Class)
        let class_type id = ((Ident.name id), Sig_component_kind.Class_type)
        let print fmt (name, ns) =
          Format.fprintf fmt "%S[%s]" name (Sig_component_kind.to_string ns)
      end
    include T
    module Map = (Map.Make)(T)
  end
type var = Ident.t
type t = {
  uid: Uid.t option ;
  desc: desc }
and desc =
  | Var of var 
  | Abs of var * t 
  | App of t * t 
  | Struct of t Item.Map.t 
  | Leaf 
  | Proj of t * Item.t 
  | Comp_unit of string 
let fresh_var ?(name= "shape-var") uid =
  let var = Ident.create_local name in
  (var, { uid = (Some uid); desc = (Var var) })
let for_unnamed_functor_param = Ident.create_local "()"
let var uid id = { uid = (Some uid); desc = (Var id) }
let abs ?uid var body = { uid; desc = (Abs (var, body)) }
let str ?uid map = { uid; desc = (Struct map) }
let leaf uid = { uid = (Some uid); desc = Leaf }
let proj ?uid t item =
  match t.desc with
  | Leaf -> t
  | Struct map -> (try Item.Map.find item map with | Not_found -> t)
  | _ -> { uid; desc = (Proj (t, item)) }
let app ?uid f ~arg = { uid; desc = (App (f, arg)) }
let decompose_abs t =
  match t.desc with | Abs (x, t) -> Some (x, t) | _ -> None
module Make_reduce(Params:sig
                            type env
                            val fuel : int
                            val read_unit_shape :
                              unit_name:string -> t option
                            val find_shape : env -> Ident.t -> t
                          end) =
  struct
    type nf = {
      uid: Uid.t option ;
      desc: nf_desc }
    and nf_desc =
      | NVar of var 
      | NApp of nf * nf 
      | NAbs of local_env * var * t * delayed_nf 
      | NStruct of delayed_nf Item.Map.t 
      | NProj of nf * Item.t 
      | NLeaf 
      | NComp_unit of string 
      | NoFuelLeft of desc 
    and delayed_nf =
      | Thunk of local_env * t 
    let improve_uid uid (nf : nf) =
      match nf.uid with | Some _ -> nf | None -> { nf with uid }
    let in_memo_table memo_table memo_key f arg =
      match Hashtbl.find memo_table memo_key with
      | res -> res
      | exception Not_found ->
          let res = f arg in (Hashtbl.replace memo_table memo_key res; res)
    type env =
      {
      fuel: int ref ;
      global_env: Params.env ;
      read_back_memo_table: (nf, t) Hashtbl.t }
    let bind env var shape =
      { env with local_env = (Ident.Map.add var shape env.local_env) }
    let rec reduce_ env t =
      let memo_key = ((env.local_env), t) in
      in_memo_table env.reduce_memo_table memo_key (reduce__ env) t
    and reduce__ ({ fuel; global_env; local_env;_} as env) (t : t) =
      let reduce env t = reduce_ env t in
      let delay_reduce env t = Thunk ((env.local_env), t) in
      let force (Thunk (local_env, t)) = reduce { env with local_env } t in
      let return desc : nf= { uid = (t.uid); desc } in
      if (!fuel) < 0
      then return (NoFuelLeft (t.desc))
      else
        (match t.desc with
         | Comp_unit unit_name ->
             (match Params.read_unit_shape ~unit_name with
              | Some t -> reduce env t
              | None -> return (NComp_unit unit_name))
         | App (f, arg) ->
             let f = reduce env f in
             (match f.desc with
              | NAbs (clos_env, var, body, _body_nf) ->
                  let arg = delay_reduce env arg in
                  let env =
                    bind { env with local_env = clos_env } var (Some arg) in
                  (reduce env body) |> (improve_uid t.uid)
              | _ -> let arg = reduce env arg in return (NApp (f, arg)))
         | Proj (str, item) ->
             let str = reduce env str in
             let nored () = return (NProj (str, item)) in
             (match str.desc with
              | NStruct items ->
                  (match Item.Map.find item items with
                   | exception Not_found -> nored ()
                   | nf -> (force nf) |> (improve_uid t.uid))
              | _ -> nored ())
         | Abs (var, body) ->
             let body_nf = delay_reduce (bind env var None) body in
             return (NAbs (local_env, var, body, body_nf))
         | Var id ->
             (match Ident.Map.find id local_env with
              | None -> return (NVar id)
              | Some def -> force def
              | exception Not_found ->
                  (match Params.find_shape global_env id with
                   | exception Not_found -> return (NVar id)
                   | res when res = t -> return (NVar id)
                   | res -> (decr fuel; reduce env res)))
         | Leaf -> return NLeaf
         | Struct m ->
             let mnf = Item.Map.map (delay_reduce env) m in
             return (NStruct mnf))
    let rec read_back env (nf : nf) : t=
      in_memo_table env.read_back_memo_table nf (read_back_ env) nf
    and read_back_ env (nf : nf) : t=
      { uid = (nf.uid); desc = (read_back_desc env nf.desc) }
    and read_back_desc env desc =
      let read_back nf = read_back env nf in
      let read_back_force (Thunk (local_env, t)) =
        read_back (reduce_ { env with local_env } t) in
      match desc with
      | NVar v -> Var v
      | NApp (nft, nfu) -> App ((read_back nft), (read_back nfu))
      | NAbs (_env, x, _t, nf) -> Abs (x, (read_back_force nf))
      | NStruct nstr -> Struct (Item.Map.map read_back_force nstr)
      | NProj (nf, item) -> Proj ((read_back nf), item)
      | NLeaf -> Leaf
      | NComp_unit s -> Comp_unit s
      | NoFuelLeft t -> t
    let reduce global_env t =
      let fuel = ref Params.fuel in
      let reduce_memo_table = Hashtbl.create 42 in
      let read_back_memo_table = Hashtbl.create 42 in
      let local_env = Ident.Map.empty in
      let env =
        {
          fuel;
          global_env;
          reduce_memo_table;
          read_back_memo_table;
          local_env
        } in
      (reduce_ env t) |> (read_back env)
  end
module Local_reduce =
  (Make_reduce)(struct
                  type env = unit
                  let fuel = 10
                  let read_unit_shape ~unit_name:_ = None
                  let find_shape _env _id = raise Not_found
                end)
let local_reduce shape = Local_reduce.reduce () shape
let dummy_mod = { uid = None; desc = (Struct Item.Map.empty) }
let of_path ~find_shape ~namespace =
  let rec aux : Sig_component_kind.t -> Path.t -> t =
    fun ns ->
      function
      | Pident id -> find_shape ns id
      | Pdot (path, name) -> proj (aux Module path) (name, ns)
      | Papply (p1, p2) -> app (aux Module p1) ~arg:(aux Module p2)
      | Pextra_ty (path, extra) ->
          (match extra with
           | Pcstr_ty _ -> aux Type path
           | Pext_ty -> aux Extension_constructor path) in
  aux namespace
let for_persistent_unit s =
  {
    uid = (Some (Uid.of_compilation_unit_id (Ident.create_persistent s)));
    desc = (Comp_unit s)
  }
let leaf_for_unpack = { uid = None; desc = Leaf }
let set_uid_if_none t uid =
  match t.uid with | None -> { t with uid = (Some uid) } | _ -> t
module Map =
  struct
    type shape = t
    type nonrec t = t Item.Map.t
    let empty = Item.Map.empty
    let add t item shape = Item.Map.add item shape t
    let add_value t id uid = Item.Map.add (Item.value id) (leaf uid) t
    let add_value_proj t id shape =
      let item = Item.value id in Item.Map.add item (proj shape item) t
    let add_type t id uid = Item.Map.add (Item.type_ id) (leaf uid) t
    let add_type_proj t id shape =
      let item = Item.type_ id in Item.Map.add item (proj shape item) t
    let add_module t id shape = Item.Map.add (Item.module_ id) shape t
    let add_module_proj t id shape =
      let item = Item.module_ id in Item.Map.add item (proj shape item) t
    let add_module_type t id uid =
      Item.Map.add (Item.module_type id) (leaf uid) t
    let add_module_type_proj t id shape =
      let item = Item.module_type id in Item.Map.add item (proj shape item) t
    let add_extcons t id uid =
      Item.Map.add (Item.extension_constructor id) (leaf uid) t
    let add_extcons_proj t id shape =
      let item = Item.extension_constructor id in
      Item.Map.add item (proj shape item) t
    let add_class t id uid = Item.Map.add (Item.class_ id) (leaf uid) t
    let add_class_proj t id shape =
      let item = Item.class_ id in Item.Map.add item (proj shape item) t
    let add_class_type t id uid =
      Item.Map.add (Item.class_type id) (leaf uid) t
    let add_class_type_proj t id shape =
      let item = Item.class_type id in Item.Map.add item (proj shape item) t
  end
