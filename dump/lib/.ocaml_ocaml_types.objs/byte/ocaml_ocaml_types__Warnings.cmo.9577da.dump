[
  structure_item (lib/warnings.ml[21,1201+0]..[25,1291+1])
    Pstr_type Rec
    [
      type_declaration "loc" (lib/warnings.ml[21,1201+5]..[21,1201+8]) (lib/warnings.ml[21,1201+0]..[25,1291+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/warnings.ml[22,1214+2]..[22,1214+29])
                Immutable
                "loc_start" (lib/warnings.ml[22,1214+2]..[22,1214+11])                core_type (lib/warnings.ml[22,1214+13]..[22,1214+28])
                  Ptyp_constr "Lexing.position" (lib/warnings.ml[22,1214+13]..[22,1214+28])
                  []
              (lib/warnings.ml[23,1244+2]..[23,1244+27])
                Immutable
                "loc_end" (lib/warnings.ml[23,1244+2]..[23,1244+9])                core_type (lib/warnings.ml[23,1244+11]..[23,1244+26])
                  Ptyp_constr "Lexing.position" (lib/warnings.ml[23,1244+11]..[23,1244+26])
                  []
              (lib/warnings.ml[24,1272+2]..[24,1272+18])
                Immutable
                "loc_ghost" (lib/warnings.ml[24,1272+2]..[24,1272+11])                core_type (lib/warnings.ml[24,1272+13]..[24,1272+17])
                  Ptyp_constr "bool" (lib/warnings.ml[24,1272+13]..[24,1272+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[27,1294+0]..[30,1345+15])
    Pstr_type Rec
    [
      type_declaration "field_usage_warning" (lib/warnings.ml[27,1294+5]..[27,1294+24]) (lib/warnings.ml[27,1294+0]..[30,1345+15])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/warnings.ml[28,1321+2]..[28,1321+10])
                "Unused" (lib/warnings.ml[28,1321+4]..[28,1321+10])
                []
                None
              (lib/warnings.ml[29,1332+2]..[29,1332+12])
                "Not_read" (lib/warnings.ml[29,1332+4]..[29,1332+12])
                []
                None
              (lib/warnings.ml[30,1345+2]..[30,1345+15])
                "Not_mutated" (lib/warnings.ml[30,1345+4]..[30,1345+15])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[32,1362+0]..[35,1426+25])
    Pstr_type Rec
    [
      type_declaration "constructor_usage_warning" (lib/warnings.ml[32,1362+5]..[32,1362+30]) (lib/warnings.ml[32,1362+0]..[35,1426+25])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/warnings.ml[33,1395+2]..[33,1395+10])
                "Unused" (lib/warnings.ml[33,1395+4]..[33,1395+10])
                []
                None
              (lib/warnings.ml[34,1406+2]..[34,1406+19])
                "Not_constructed" (lib/warnings.ml[34,1406+4]..[34,1406+19])
                []
                None
              (lib/warnings.ml[35,1426+2]..[35,1426+25])
                "Only_exported_private" (lib/warnings.ml[35,1426+4]..[35,1426+25])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[37,1453+0]..[111,5456+39])
    Pstr_type Rec
    [
      type_declaration "t" (lib/warnings.ml[37,1453+5]..[37,1453+6]) (lib/warnings.ml[37,1453+0]..[111,5456+39])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/warnings.ml[38,1462+2]..[38,1462+17])
                "Comment_start" (lib/warnings.ml[38,1462+4]..[38,1462+17])
                []
                None
              (lib/warnings.ml[39,1515+2]..[39,1515+19])
                "Comment_not_end" (lib/warnings.ml[39,1515+4]..[39,1515+19])
                []
                None
              (lib/warnings.ml[41,1621+2]..[41,1621+27])
                "Fragile_match" (lib/warnings.ml[41,1621+4]..[41,1621+17])
                [
                  core_type (lib/warnings.ml[41,1621+21]..[41,1621+27])
                    Ptyp_constr "string" (lib/warnings.ml[41,1621+21]..[41,1621+27])
                    []
                ]
                None
              (lib/warnings.ml[42,1674+2]..[42,1674+31])
                "Ignored_partial_application" (lib/warnings.ml[42,1674+4]..[42,1674+31])
                []
                None
              (lib/warnings.ml[43,1727+2]..[43,1727+33])
                "Labels_omitted" (lib/warnings.ml[43,1727+4]..[43,1727+18])
                [
                  core_type (lib/warnings.ml[43,1727+22]..[43,1727+33])
                    Ptyp_constr "list" (lib/warnings.ml[43,1727+29]..[43,1727+33])
                    [
                      core_type (lib/warnings.ml[43,1727+22]..[43,1727+28])
                        Ptyp_constr "string" (lib/warnings.ml[43,1727+22]..[43,1727+28])
                        []
                    ]
                ]
                None
              (lib/warnings.ml[44,1780+2]..[44,1780+34])
                "Method_override" (lib/warnings.ml[44,1780+4]..[44,1780+19])
                [
                  core_type (lib/warnings.ml[44,1780+23]..[44,1780+34])
                    Ptyp_constr "list" (lib/warnings.ml[44,1780+30]..[44,1780+34])
                    [
                      core_type (lib/warnings.ml[44,1780+23]..[44,1780+29])
                        Ptyp_constr "string" (lib/warnings.ml[44,1780+23]..[44,1780+29])
                        []
                    ]
                ]
                None
              (lib/warnings.ml[45,1833+2]..[45,1833+27])
                "Partial_match" (lib/warnings.ml[45,1833+4]..[45,1833+17])
                [
                  core_type (lib/warnings.ml[45,1833+21]..[45,1833+27])
                    Ptyp_constr "string" (lib/warnings.ml[45,1833+21]..[45,1833+27])
                    []
                ]
                None
              (lib/warnings.ml[46,1886+2]..[46,1886+42])
                "Missing_record_field_pattern" (lib/warnings.ml[46,1886+4]..[46,1886+32])
                [
                  core_type (lib/warnings.ml[46,1886+36]..[46,1886+42])
                    Ptyp_constr "string" (lib/warnings.ml[46,1886+36]..[46,1886+42])
                    []
                ]
                None
              (lib/warnings.ml[47,1939+2]..[47,1939+22])
                "Non_unit_statement" (lib/warnings.ml[47,1939+4]..[47,1939+22])
                []
                None
              (lib/warnings.ml[48,1992+2]..[48,1992+18])
                "Redundant_case" (lib/warnings.ml[48,1992+4]..[48,1992+18])
                []
                None
              (lib/warnings.ml[49,2045+2]..[49,2045+20])
                "Redundant_subpat" (lib/warnings.ml[49,2045+4]..[49,2045+20])
                []
                None
              (lib/warnings.ml[50,2098+2]..[50,2098+45])
                "Instance_variable_override" (lib/warnings.ml[50,2098+4]..[50,2098+30])
                [
                  core_type (lib/warnings.ml[50,2098+34]..[50,2098+45])
                    Ptyp_constr "list" (lib/warnings.ml[50,2098+41]..[50,2098+45])
                    [
                      core_type (lib/warnings.ml[50,2098+34]..[50,2098+40])
                        Ptyp_constr "string" (lib/warnings.ml[50,2098+34]..[50,2098+40])
                        []
                    ]
                ]
                None
              (lib/warnings.ml[51,2153+2]..[51,2153+21])
                "Illegal_backslash" (lib/warnings.ml[51,2153+4]..[51,2153+21])
                []
                None
              (lib/warnings.ml[52,2206+2]..[52,2206+42])
                "Implicit_public_methods" (lib/warnings.ml[52,2206+4]..[52,2206+27])
                [
                  core_type (lib/warnings.ml[52,2206+31]..[52,2206+42])
                    Ptyp_constr "list" (lib/warnings.ml[52,2206+38]..[52,2206+42])
                    [
                      core_type (lib/warnings.ml[52,2206+31]..[52,2206+37])
                        Ptyp_constr "string" (lib/warnings.ml[52,2206+31]..[52,2206+37])
                        []
                    ]
                ]
                None
              (lib/warnings.ml[53,2259+2]..[53,2259+32])
                "Unerasable_optional_argument" (lib/warnings.ml[53,2259+4]..[53,2259+32])
                []
                None
              (lib/warnings.ml[54,2312+2]..[54,2312+39])
                "Undeclared_virtual_method" (lib/warnings.ml[54,2312+4]..[54,2312+29])
                [
                  core_type (lib/warnings.ml[54,2312+33]..[54,2312+39])
                    Ptyp_constr "string" (lib/warnings.ml[54,2312+33]..[54,2312+39])
                    []
                ]
                None
              (lib/warnings.ml[55,2365+2]..[55,2365+27])
                "Not_principal" (lib/warnings.ml[55,2365+4]..[55,2365+17])
                [
                  core_type (lib/warnings.ml[55,2365+21]..[55,2365+27])
                    Ptyp_constr "string" (lib/warnings.ml[55,2365+21]..[55,2365+27])
                    []
                ]
                None
              (lib/warnings.ml[56,2418+2]..[56,2418+34])
                "Non_principal_labels" (lib/warnings.ml[56,2418+4]..[56,2418+24])
                [
                  core_type (lib/warnings.ml[56,2418+28]..[56,2418+34])
                    Ptyp_constr "string" (lib/warnings.ml[56,2418+28]..[56,2418+34])
                    []
                ]
                None
              (lib/warnings.ml[57,2471+2]..[57,2471+26])
                "Ignored_extra_argument" (lib/warnings.ml[57,2471+4]..[57,2471+26])
                []
                None
              (lib/warnings.ml[58,2524+2]..[58,2524+26])
                "Nonreturning_statement" (lib/warnings.ml[58,2524+4]..[58,2524+26])
                []
                None
              (lib/warnings.ml[59,2577+2]..[59,2577+26])
                "Preprocessor" (lib/warnings.ml[59,2577+4]..[59,2577+16])
                [
                  core_type (lib/warnings.ml[59,2577+20]..[59,2577+26])
                    Ptyp_constr "string" (lib/warnings.ml[59,2577+20]..[59,2577+26])
                    []
                ]
                None
              (lib/warnings.ml[60,2630+2]..[60,2630+23])
                "Useless_record_with" (lib/warnings.ml[60,2630+4]..[60,2630+23])
                []
                None
              (lib/warnings.ml[61,2683+2]..[61,2683+29])
                "Bad_module_name" (lib/warnings.ml[61,2683+4]..[61,2683+19])
                [
                  core_type (lib/warnings.ml[61,2683+23]..[61,2683+29])
                    Ptyp_constr "string" (lib/warnings.ml[61,2683+23]..[61,2683+29])
                    []
                ]
                None
              (lib/warnings.ml[62,2736+2]..[62,2736+23])
                "All_clauses_guarded" (lib/warnings.ml[62,2736+4]..[62,2736+23])
                []
                None
              (lib/warnings.ml[63,2803+2]..[63,2803+24])
                "Unused_var" (lib/warnings.ml[63,2803+4]..[63,2803+14])
                [
                  core_type (lib/warnings.ml[63,2803+18]..[63,2803+24])
                    Ptyp_constr "string" (lib/warnings.ml[63,2803+18]..[63,2803+24])
                    []
                ]
                None
              (lib/warnings.ml[64,2856+2]..[64,2856+31])
                "Unused_var_strict" (lib/warnings.ml[64,2856+4]..[64,2856+21])
                [
                  core_type (lib/warnings.ml[64,2856+25]..[64,2856+31])
                    Ptyp_constr "string" (lib/warnings.ml[64,2856+25]..[64,2856+31])
                    []
                ]
                None
              (lib/warnings.ml[65,2909+2]..[65,2909+35])
                "Wildcard_arg_to_constant_constr" (lib/warnings.ml[65,2909+4]..[65,2909+35])
                []
                None
              (lib/warnings.ml[66,2962+2]..[66,2962+17])
                "Eol_in_string" (lib/warnings.ml[66,2962+4]..[66,2962+17])
                []
                None
              (lib/warnings.ml[67,3015+2]..[67,3015+62])
                "Duplicate_definitions" (lib/warnings.ml[67,3015+4]..[67,3015+25])
                [
                  core_type (lib/warnings.ml[67,3015+29]..[67,3015+35])
                    Ptyp_constr "string" (lib/warnings.ml[67,3015+29]..[67,3015+35])
                    []
                  core_type (lib/warnings.ml[67,3015+38]..[67,3015+44])
                    Ptyp_constr "string" (lib/warnings.ml[67,3015+38]..[67,3015+44])
                    []
                  core_type (lib/warnings.ml[67,3015+47]..[67,3015+53])
                    Ptyp_constr "string" (lib/warnings.ml[67,3015+47]..[67,3015+53])
                    []
                  core_type (lib/warnings.ml[67,3015+56]..[67,3015+62])
                    Ptyp_constr "string" (lib/warnings.ml[67,3015+56]..[67,3015+62])
                    []
                ]
                None
              (lib/warnings.ml[70,3187+2]..[70,3187+38])
                "Unused_value_declaration" (lib/warnings.ml[70,3187+4]..[70,3187+28])
                [
                  core_type (lib/warnings.ml[70,3187+32]..[70,3187+38])
                    Ptyp_constr "string" (lib/warnings.ml[70,3187+32]..[70,3187+38])
                    []
                ]
                None
              (lib/warnings.ml[71,3240+2]..[71,3240+25])
                "Unused_open" (lib/warnings.ml[71,3240+4]..[71,3240+15])
                [
                  core_type (lib/warnings.ml[71,3240+19]..[71,3240+25])
                    Ptyp_constr "string" (lib/warnings.ml[71,3240+19]..[71,3240+25])
                    []
                ]
                None
              (lib/warnings.ml[72,3293+2]..[72,3293+37])
                "Unused_type_declaration" (lib/warnings.ml[72,3293+4]..[72,3293+27])
                [
                  core_type (lib/warnings.ml[72,3293+31]..[72,3293+37])
                    Ptyp_constr "string" (lib/warnings.ml[72,3293+31]..[72,3293+37])
                    []
                ]
                None
              (lib/warnings.ml[73,3346+2]..[73,3346+30])
                "Unused_for_index" (lib/warnings.ml[73,3346+4]..[73,3346+20])
                [
                  core_type (lib/warnings.ml[73,3346+24]..[73,3346+30])
                    Ptyp_constr "string" (lib/warnings.ml[73,3346+24]..[73,3346+30])
                    []
                ]
                None
              (lib/warnings.ml[74,3399+2]..[74,3399+29])
                "Unused_ancestor" (lib/warnings.ml[74,3399+4]..[74,3399+19])
                [
                  core_type (lib/warnings.ml[74,3399+23]..[74,3399+29])
                    Ptyp_constr "string" (lib/warnings.ml[74,3399+23]..[74,3399+29])
                    []
                ]
                None
              (lib/warnings.ml[75,3452+2]..[75,3452+60])
                "Unused_constructor" (lib/warnings.ml[75,3452+4]..[75,3452+22])
                [
                  core_type (lib/warnings.ml[75,3452+26]..[75,3452+32])
                    Ptyp_constr "string" (lib/warnings.ml[75,3452+26]..[75,3452+32])
                    []
                  core_type (lib/warnings.ml[75,3452+35]..[75,3452+60])
                    Ptyp_constr "constructor_usage_warning" (lib/warnings.ml[75,3452+35]..[75,3452+60])
                    []
                ]
                None
              (lib/warnings.ml[76,3522+2]..[76,3522+65])
                "Unused_extension" (lib/warnings.ml[76,3522+4]..[76,3522+20])
                [
                  core_type (lib/warnings.ml[76,3522+24]..[76,3522+30])
                    Ptyp_constr "string" (lib/warnings.ml[76,3522+24]..[76,3522+30])
                    []
                  core_type (lib/warnings.ml[76,3522+33]..[76,3522+37])
                    Ptyp_constr "bool" (lib/warnings.ml[76,3522+33]..[76,3522+37])
                    []
                  core_type (lib/warnings.ml[76,3522+40]..[76,3522+65])
                    Ptyp_constr "constructor_usage_warning" (lib/warnings.ml[76,3522+40]..[76,3522+65])
                    []
                ]
                None
              (lib/warnings.ml[77,3597+2]..[77,3597+19])
                "Unused_rec_flag" (lib/warnings.ml[77,3597+4]..[77,3597+19])
                []
                None
              (lib/warnings.ml[78,3650+2]..[78,3650+52])
                "Name_out_of_scope" (lib/warnings.ml[78,3650+4]..[78,3650+21])
                [
                  core_type (lib/warnings.ml[78,3650+25]..[78,3650+31])
                    Ptyp_constr "string" (lib/warnings.ml[78,3650+25]..[78,3650+31])
                    []
                  core_type (lib/warnings.ml[78,3650+34]..[78,3650+45])
                    Ptyp_constr "list" (lib/warnings.ml[78,3650+41]..[78,3650+45])
                    [
                      core_type (lib/warnings.ml[78,3650+34]..[78,3650+40])
                        Ptyp_constr "string" (lib/warnings.ml[78,3650+34]..[78,3650+40])
                        []
                    ]
                  core_type (lib/warnings.ml[78,3650+48]..[78,3650+52])
                    Ptyp_constr "bool" (lib/warnings.ml[78,3650+48]..[78,3650+52])
                    []
                ]
                None
              (lib/warnings.ml[79,3712+2]..[79,3712+64])
                "Ambiguous_name" (lib/warnings.ml[79,3712+4]..[79,3712+18])
                [
                  core_type (lib/warnings.ml[79,3712+22]..[79,3712+33])
                    Ptyp_constr "list" (lib/warnings.ml[79,3712+29]..[79,3712+33])
                    [
                      core_type (lib/warnings.ml[79,3712+22]..[79,3712+28])
                        Ptyp_constr "string" (lib/warnings.ml[79,3712+22]..[79,3712+28])
                        []
                    ]
                  core_type (lib/warnings.ml[79,3712+36]..[79,3712+47])
                    Ptyp_constr "list" (lib/warnings.ml[79,3712+43]..[79,3712+47])
                    [
                      core_type (lib/warnings.ml[79,3712+36]..[79,3712+42])
                        Ptyp_constr "string" (lib/warnings.ml[79,3712+36]..[79,3712+42])
                        []
                    ]
                  core_type (lib/warnings.ml[79,3712+51]..[79,3712+55])
                    Ptyp_constr "bool" (lib/warnings.ml[79,3712+51]..[79,3712+55])
                    []
                  core_type (lib/warnings.ml[79,3712+58]..[79,3712+64])
                    Ptyp_constr "string" (lib/warnings.ml[79,3712+58]..[79,3712+64])
                    []
                ]
                None
              (lib/warnings.ml[80,3786+2]..[80,3786+32])
                "Disambiguated_name" (lib/warnings.ml[80,3786+4]..[80,3786+22])
                [
                  core_type (lib/warnings.ml[80,3786+26]..[80,3786+32])
                    Ptyp_constr "string" (lib/warnings.ml[80,3786+26]..[80,3786+32])
                    []
                ]
                None
              (lib/warnings.ml[81,3839+2]..[81,3839+31])
                "Nonoptional_label" (lib/warnings.ml[81,3839+4]..[81,3839+21])
                [
                  core_type (lib/warnings.ml[81,3839+25]..[81,3839+31])
                    Ptyp_constr "string" (lib/warnings.ml[81,3839+25]..[81,3839+31])
                    []
                ]
                None
              (lib/warnings.ml[82,3892+2]..[82,3892+45])
                "Open_shadow_identifier" (lib/warnings.ml[82,3892+4]..[82,3892+26])
                [
                  core_type (lib/warnings.ml[82,3892+30]..[82,3892+36])
                    Ptyp_constr "string" (lib/warnings.ml[82,3892+30]..[82,3892+36])
                    []
                  core_type (lib/warnings.ml[82,3892+39]..[82,3892+45])
                    Ptyp_constr "string" (lib/warnings.ml[82,3892+39]..[82,3892+45])
                    []
                ]
                None
              (lib/warnings.ml[83,3947+2]..[83,3947+52])
                "Open_shadow_label_constructor" (lib/warnings.ml[83,3947+4]..[83,3947+33])
                [
                  core_type (lib/warnings.ml[83,3947+37]..[83,3947+43])
                    Ptyp_constr "string" (lib/warnings.ml[83,3947+37]..[83,3947+43])
                    []
                  core_type (lib/warnings.ml[83,3947+46]..[83,3947+52])
                    Ptyp_constr "string" (lib/warnings.ml[83,3947+46]..[83,3947+52])
                    []
                ]
                None
              (lib/warnings.ml[84,4009+2]..[84,4009+39])
                "Bad_env_variable" (lib/warnings.ml[84,4009+4]..[84,4009+20])
                [
                  core_type (lib/warnings.ml[84,4009+24]..[84,4009+30])
                    Ptyp_constr "string" (lib/warnings.ml[84,4009+24]..[84,4009+30])
                    []
                  core_type (lib/warnings.ml[84,4009+33]..[84,4009+39])
                    Ptyp_constr "string" (lib/warnings.ml[84,4009+33]..[84,4009+39])
                    []
                ]
                None
              (lib/warnings.ml[85,4062+2]..[85,4062+40])
                "Attribute_payload" (lib/warnings.ml[85,4062+4]..[85,4062+21])
                [
                  core_type (lib/warnings.ml[85,4062+25]..[85,4062+31])
                    Ptyp_constr "string" (lib/warnings.ml[85,4062+25]..[85,4062+31])
                    []
                  core_type (lib/warnings.ml[85,4062+34]..[85,4062+40])
                    Ptyp_constr "string" (lib/warnings.ml[85,4062+34]..[85,4062+40])
                    []
                ]
                None
              (lib/warnings.ml[86,4115+2]..[86,4115+48])
                "Eliminated_optional_arguments" (lib/warnings.ml[86,4115+4]..[86,4115+33])
                [
                  core_type (lib/warnings.ml[86,4115+37]..[86,4115+48])
                    Ptyp_constr "list" (lib/warnings.ml[86,4115+44]..[86,4115+48])
                    [
                      core_type (lib/warnings.ml[86,4115+37]..[86,4115+43])
                        Ptyp_constr "string" (lib/warnings.ml[86,4115+37]..[86,4115+43])
                        []
                    ]
                ]
                None
              (lib/warnings.ml[87,4173+2]..[87,4173+41])
                "No_cmi_file" (lib/warnings.ml[87,4173+4]..[87,4173+15])
                [
                  core_type (lib/warnings.ml[87,4173+19]..[87,4173+25])
                    Ptyp_constr "string" (lib/warnings.ml[87,4173+19]..[87,4173+25])
                    []
                  core_type (lib/warnings.ml[87,4173+28]..[87,4173+41])
                    Ptyp_constr "option" (lib/warnings.ml[87,4173+35]..[87,4173+41])
                    [
                      core_type (lib/warnings.ml[87,4173+28]..[87,4173+34])
                        Ptyp_constr "string" (lib/warnings.ml[87,4173+28]..[87,4173+34])
                        []
                    ]
                ]
                None
              (lib/warnings.ml[88,4226+2]..[88,4226+32])
                "Unexpected_docstring" (lib/warnings.ml[88,4226+4]..[88,4226+24])
                [
                  core_type (lib/warnings.ml[88,4226+28]..[88,4226+32])
                    Ptyp_constr "bool" (lib/warnings.ml[88,4226+28]..[88,4226+32])
                    []
                ]
                None
              (lib/warnings.ml[89,4279+2]..[89,4279+38])
                "Wrong_tailcall_expectation" (lib/warnings.ml[89,4279+4]..[89,4279+30])
                [
                  core_type (lib/warnings.ml[89,4279+34]..[89,4279+38])
                    Ptyp_constr "bool" (lib/warnings.ml[89,4279+34]..[89,4279+38])
                    []
                ]
                None
              (lib/warnings.ml[90,4332+2]..[90,4332+27])
                "Fragile_literal_pattern" (lib/warnings.ml[90,4332+4]..[90,4332+27])
                []
                None
              (lib/warnings.ml[91,4385+2]..[91,4385+33])
                "Misplaced_attribute" (lib/warnings.ml[91,4385+4]..[91,4385+23])
                [
                  core_type (lib/warnings.ml[91,4385+27]..[91,4385+33])
                    Ptyp_constr "string" (lib/warnings.ml[91,4385+27]..[91,4385+33])
                    []
                ]
                None
              (lib/warnings.ml[92,4438+2]..[92,4438+34])
                "Duplicated_attribute" (lib/warnings.ml[92,4438+4]..[92,4438+24])
                [
                  core_type (lib/warnings.ml[92,4438+28]..[92,4438+34])
                    Ptyp_constr "string" (lib/warnings.ml[92,4438+28]..[92,4438+34])
                    []
                ]
                None
              (lib/warnings.ml[93,4491+2]..[93,4491+33])
                "Inlining_impossible" (lib/warnings.ml[93,4491+4]..[93,4491+23])
                [
                  core_type (lib/warnings.ml[93,4491+27]..[93,4491+33])
                    Ptyp_constr "string" (lib/warnings.ml[93,4491+27]..[93,4491+33])
                    []
                ]
                None
              (lib/warnings.ml[94,4544+2]..[94,4544+20])
                "Unreachable_case" (lib/warnings.ml[94,4544+4]..[94,4544+20])
                []
                None
              (lib/warnings.ml[95,4597+2]..[95,4597+49])
                "Ambiguous_var_in_pattern_guard" (lib/warnings.ml[95,4597+4]..[95,4597+34])
                [
                  core_type (lib/warnings.ml[95,4597+38]..[95,4597+49])
                    Ptyp_constr "list" (lib/warnings.ml[95,4597+45]..[95,4597+49])
                    [
                      core_type (lib/warnings.ml[95,4597+38]..[95,4597+44])
                        Ptyp_constr "string" (lib/warnings.ml[95,4597+38]..[95,4597+44])
                        []
                    ]
                ]
                None
              (lib/warnings.ml[96,4656+2]..[96,4656+25])
                "No_cmx_file" (lib/warnings.ml[96,4656+4]..[96,4656+15])
                [
                  core_type (lib/warnings.ml[96,4656+19]..[96,4656+25])
                    Ptyp_constr "string" (lib/warnings.ml[96,4656+19]..[96,4656+25])
                    []
                ]
                None
              (lib/warnings.ml[97,4709+2]..[97,4709+43])
                "Flambda_assignment_to_non_mutable_value" (lib/warnings.ml[97,4709+4]..[97,4709+43])
                []
                None
              (lib/warnings.ml[98,4762+2]..[98,4762+27])
                "Unused_module" (lib/warnings.ml[98,4762+4]..[98,4762+17])
                [
                  core_type (lib/warnings.ml[98,4762+21]..[98,4762+27])
                    Ptyp_constr "string" (lib/warnings.ml[98,4762+21]..[98,4762+27])
                    []
                ]
                None
              (lib/warnings.ml[99,4815+2]..[99,4815+41])
                "Unboxable_type_in_prim_decl" (lib/warnings.ml[99,4815+4]..[99,4815+31])
                [
                  core_type (lib/warnings.ml[99,4815+35]..[99,4815+41])
                    Ptyp_constr "string" (lib/warnings.ml[99,4815+35]..[99,4815+41])
                    []
                ]
                None
              (lib/warnings.ml[100,4868+2]..[100,4868+22])
                "Constraint_on_gadt" (lib/warnings.ml[100,4868+4]..[100,4868+22])
                []
                None
              (lib/warnings.ml[101,4921+2]..[101,4921+41])
                "Erroneous_printed_signature" (lib/warnings.ml[101,4921+4]..[101,4921+31])
                [
                  core_type (lib/warnings.ml[101,4921+35]..[101,4921+41])
                    Ptyp_constr "string" (lib/warnings.ml[101,4921+35]..[101,4921+41])
                    []
                ]
                None
              (lib/warnings.ml[102,4974+2]..[102,4974+39])
                "Unsafe_array_syntax_without_parsing" (lib/warnings.ml[102,4974+4]..[102,4974+39])
                []
                None
              (lib/warnings.ml[103,5027+2]..[103,5027+29])
                "Redefining_unit" (lib/warnings.ml[103,5027+4]..[103,5027+19])
                [
                  core_type (lib/warnings.ml[103,5027+23]..[103,5027+29])
                    Ptyp_constr "string" (lib/warnings.ml[103,5027+23]..[103,5027+29])
                    []
                ]
                None
              (lib/warnings.ml[104,5080+2]..[104,5080+30])
                "Unused_open_bang" (lib/warnings.ml[104,5080+4]..[104,5080+20])
                [
                  core_type (lib/warnings.ml[104,5080+24]..[104,5080+30])
                    Ptyp_constr "string" (lib/warnings.ml[104,5080+24]..[104,5080+30])
                    []
                ]
                None
              (lib/warnings.ml[105,5133+2]..[105,5133+38])
                "Unused_functor_parameter" (lib/warnings.ml[105,5133+4]..[105,5133+28])
                [
                  core_type (lib/warnings.ml[105,5133+32]..[105,5133+38])
                    Ptyp_constr "string" (lib/warnings.ml[105,5133+32]..[105,5133+38])
                    []
                ]
                None
              (lib/warnings.ml[106,5186+2]..[106,5186+42])
                "Match_on_mutable_state_prevent_uncurry" (lib/warnings.ml[106,5186+4]..[106,5186+42])
                []
                None
              (lib/warnings.ml[107,5239+2]..[107,5239+48])
                "Unused_field" (lib/warnings.ml[107,5239+4]..[107,5239+16])
                [
                  core_type (lib/warnings.ml[107,5239+20]..[107,5239+26])
                    Ptyp_constr "string" (lib/warnings.ml[107,5239+20]..[107,5239+26])
                    []
                  core_type (lib/warnings.ml[107,5239+29]..[107,5239+48])
                    Ptyp_constr "field_usage_warning" (lib/warnings.ml[107,5239+29]..[107,5239+48])
                    []
                ]
                None
              (lib/warnings.ml[108,5297+2]..[108,5297+15])
                "Missing_mli" (lib/warnings.ml[108,5297+4]..[108,5297+15])
                []
                None
              (lib/warnings.ml[109,5350+2]..[109,5350+24])
                "Unused_tmc_attribute" (lib/warnings.ml[109,5350+4]..[109,5350+24])
                []
                None
              (lib/warnings.ml[110,5403+2]..[110,5403+23])
                "Tmc_breaks_tailcall" (lib/warnings.ml[110,5403+4]..[110,5403+23])
                []
                None
              (lib/warnings.ml[111,5456+2]..[111,5456+39])
                "Generative_application_expects_unit" (lib/warnings.ml[111,5456+4]..[111,5456+39])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[119,5724+0]..[119,5724+60])
    Pstr_type Rec
    [
      type_declaration "alert" (lib/warnings.ml[119,5724+5]..[119,5724+10]) (lib/warnings.ml[119,5724+0]..[119,5724+60])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/warnings.ml[119,5724+14]..[119,5724+26])
                Immutable
                "kind" (lib/warnings.ml[119,5724+14]..[119,5724+18])                core_type (lib/warnings.ml[119,5724+19]..[119,5724+25])
                  Ptyp_constr "string" (lib/warnings.ml[119,5724+19]..[119,5724+25])
                  []
              (lib/warnings.ml[119,5724+27]..[119,5724+42])
                Immutable
                "message" (lib/warnings.ml[119,5724+27]..[119,5724+34])                core_type (lib/warnings.ml[119,5724+35]..[119,5724+41])
                  Ptyp_constr "string" (lib/warnings.ml[119,5724+35]..[119,5724+41])
                  []
              (lib/warnings.ml[119,5724+43]..[119,5724+51])
                Immutable
                "def" (lib/warnings.ml[119,5724+43]..[119,5724+46])                core_type (lib/warnings.ml[119,5724+47]..[119,5724+50])
                  Ptyp_constr "loc" (lib/warnings.ml[119,5724+47]..[119,5724+50])
                  []
              (lib/warnings.ml[119,5724+52]..[119,5724+59])
                Immutable
                "use" (lib/warnings.ml[119,5724+52]..[119,5724+55])                core_type (lib/warnings.ml[119,5724+56]..[119,5724+59])
                  Ptyp_constr "loc" (lib/warnings.ml[119,5724+56]..[119,5724+59])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[121,5786+0]..[192,8046+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[121,5786+4]..[121,5786+10])
          Ppat_var "number" (lib/warnings.ml[121,5786+4]..[121,5786+10])
        expression (lib/warnings.ml[121,5786+13]..[192,8046+45])
          Pexp_function
          []
          None
          Pfunction_cases (lib/warnings.ml[121,5786+13]..[192,8046+45])
            [
              <case>
                pattern (lib/warnings.ml[122,5808+4]..[122,5808+17])
                  Ppat_construct "Comment_start" (lib/warnings.ml[122,5808+4]..[122,5808+17])
                  None
                expression (lib/warnings.ml[122,5808+21]..[122,5808+22])
                  Pexp_constant PConst_int (1,None)
              <case>
                pattern (lib/warnings.ml[123,5831+4]..[123,5831+19])
                  Ppat_construct "Comment_not_end" (lib/warnings.ml[123,5831+4]..[123,5831+19])
                  None
                expression (lib/warnings.ml[123,5831+23]..[123,5831+24])
                  Pexp_constant PConst_int (2,None)
              <case>
                pattern (lib/warnings.ml[124,5856+4]..[124,5856+19])
                  Ppat_construct "Fragile_match" (lib/warnings.ml[124,5856+4]..[124,5856+17])
                  Some
                    []
                    pattern (lib/warnings.ml[124,5856+18]..[124,5856+19])
                      Ppat_any
                expression (lib/warnings.ml[124,5856+23]..[124,5856+24])
                  Pexp_constant PConst_int (4,None)
              <case>
                pattern (lib/warnings.ml[125,5881+4]..[125,5881+31])
                  Ppat_construct "Ignored_partial_application" (lib/warnings.ml[125,5881+4]..[125,5881+31])
                  None
                expression (lib/warnings.ml[125,5881+35]..[125,5881+36])
                  Pexp_constant PConst_int (5,None)
              <case>
                pattern (lib/warnings.ml[126,5918+4]..[126,5918+20])
                  Ppat_construct "Labels_omitted" (lib/warnings.ml[126,5918+4]..[126,5918+18])
                  Some
                    []
                    pattern (lib/warnings.ml[126,5918+19]..[126,5918+20])
                      Ppat_any
                expression (lib/warnings.ml[126,5918+24]..[126,5918+25])
                  Pexp_constant PConst_int (6,None)
              <case>
                pattern (lib/warnings.ml[127,5944+4]..[127,5944+21])
                  Ppat_construct "Method_override" (lib/warnings.ml[127,5944+4]..[127,5944+19])
                  Some
                    []
                    pattern (lib/warnings.ml[127,5944+20]..[127,5944+21])
                      Ppat_any
                expression (lib/warnings.ml[127,5944+25]..[127,5944+26])
                  Pexp_constant PConst_int (7,None)
              <case>
                pattern (lib/warnings.ml[128,5971+4]..[128,5971+19])
                  Ppat_construct "Partial_match" (lib/warnings.ml[128,5971+4]..[128,5971+17])
                  Some
                    []
                    pattern (lib/warnings.ml[128,5971+18]..[128,5971+19])
                      Ppat_any
                expression (lib/warnings.ml[128,5971+23]..[128,5971+24])
                  Pexp_constant PConst_int (8,None)
              <case>
                pattern (lib/warnings.ml[129,5996+4]..[129,5996+34])
                  Ppat_construct "Missing_record_field_pattern" (lib/warnings.ml[129,5996+4]..[129,5996+32])
                  Some
                    []
                    pattern (lib/warnings.ml[129,5996+33]..[129,5996+34])
                      Ppat_any
                expression (lib/warnings.ml[129,5996+38]..[129,5996+39])
                  Pexp_constant PConst_int (9,None)
              <case>
                pattern (lib/warnings.ml[130,6036+4]..[130,6036+22])
                  Ppat_construct "Non_unit_statement" (lib/warnings.ml[130,6036+4]..[130,6036+22])
                  None
                expression (lib/warnings.ml[130,6036+26]..[130,6036+28])
                  Pexp_constant PConst_int (10,None)
              <case>
                pattern (lib/warnings.ml[131,6065+4]..[131,6065+18])
                  Ppat_construct "Redundant_case" (lib/warnings.ml[131,6065+4]..[131,6065+18])
                  None
                expression (lib/warnings.ml[131,6065+22]..[131,6065+24])
                  Pexp_constant PConst_int (11,None)
              <case>
                pattern (lib/warnings.ml[132,6090+4]..[132,6090+20])
                  Ppat_construct "Redundant_subpat" (lib/warnings.ml[132,6090+4]..[132,6090+20])
                  None
                expression (lib/warnings.ml[132,6090+24]..[132,6090+26])
                  Pexp_constant PConst_int (12,None)
              <case>
                pattern (lib/warnings.ml[133,6117+4]..[133,6117+32])
                  Ppat_construct "Instance_variable_override" (lib/warnings.ml[133,6117+4]..[133,6117+30])
                  Some
                    []
                    pattern (lib/warnings.ml[133,6117+31]..[133,6117+32])
                      Ppat_any
                expression (lib/warnings.ml[133,6117+36]..[133,6117+38])
                  Pexp_constant PConst_int (13,None)
              <case>
                pattern (lib/warnings.ml[134,6156+4]..[134,6156+21])
                  Ppat_construct "Illegal_backslash" (lib/warnings.ml[134,6156+4]..[134,6156+21])
                  None
                expression (lib/warnings.ml[134,6156+25]..[134,6156+27])
                  Pexp_constant PConst_int (14,None)
              <case>
                pattern (lib/warnings.ml[135,6184+4]..[135,6184+29])
                  Ppat_construct "Implicit_public_methods" (lib/warnings.ml[135,6184+4]..[135,6184+27])
                  Some
                    []
                    pattern (lib/warnings.ml[135,6184+28]..[135,6184+29])
                      Ppat_any
                expression (lib/warnings.ml[135,6184+33]..[135,6184+35])
                  Pexp_constant PConst_int (15,None)
              <case>
                pattern (lib/warnings.ml[136,6220+4]..[136,6220+32])
                  Ppat_construct "Unerasable_optional_argument" (lib/warnings.ml[136,6220+4]..[136,6220+32])
                  None
                expression (lib/warnings.ml[136,6220+36]..[136,6220+38])
                  Pexp_constant PConst_int (16,None)
              <case>
                pattern (lib/warnings.ml[137,6259+4]..[137,6259+31])
                  Ppat_construct "Undeclared_virtual_method" (lib/warnings.ml[137,6259+4]..[137,6259+29])
                  Some
                    []
                    pattern (lib/warnings.ml[137,6259+30]..[137,6259+31])
                      Ppat_any
                expression (lib/warnings.ml[137,6259+35]..[137,6259+37])
                  Pexp_constant PConst_int (17,None)
              <case>
                pattern (lib/warnings.ml[138,6297+4]..[138,6297+19])
                  Ppat_construct "Not_principal" (lib/warnings.ml[138,6297+4]..[138,6297+17])
                  Some
                    []
                    pattern (lib/warnings.ml[138,6297+18]..[138,6297+19])
                      Ppat_any
                expression (lib/warnings.ml[138,6297+23]..[138,6297+25])
                  Pexp_constant PConst_int (18,None)
              <case>
                pattern (lib/warnings.ml[139,6323+4]..[139,6323+26])
                  Ppat_construct "Non_principal_labels" (lib/warnings.ml[139,6323+4]..[139,6323+24])
                  Some
                    []
                    pattern (lib/warnings.ml[139,6323+25]..[139,6323+26])
                      Ppat_any
                expression (lib/warnings.ml[139,6323+30]..[139,6323+32])
                  Pexp_constant PConst_int (19,None)
              <case>
                pattern (lib/warnings.ml[140,6356+4]..[140,6356+26])
                  Ppat_construct "Ignored_extra_argument" (lib/warnings.ml[140,6356+4]..[140,6356+26])
                  None
                expression (lib/warnings.ml[140,6356+30]..[140,6356+32])
                  Pexp_constant PConst_int (20,None)
              <case>
                pattern (lib/warnings.ml[141,6389+4]..[141,6389+26])
                  Ppat_construct "Nonreturning_statement" (lib/warnings.ml[141,6389+4]..[141,6389+26])
                  None
                expression (lib/warnings.ml[141,6389+30]..[141,6389+32])
                  Pexp_constant PConst_int (21,None)
              <case>
                pattern (lib/warnings.ml[142,6422+4]..[142,6422+18])
                  Ppat_construct "Preprocessor" (lib/warnings.ml[142,6422+4]..[142,6422+16])
                  Some
                    []
                    pattern (lib/warnings.ml[142,6422+17]..[142,6422+18])
                      Ppat_any
                expression (lib/warnings.ml[142,6422+22]..[142,6422+24])
                  Pexp_constant PConst_int (22,None)
              <case>
                pattern (lib/warnings.ml[143,6447+4]..[143,6447+23])
                  Ppat_construct "Useless_record_with" (lib/warnings.ml[143,6447+4]..[143,6447+23])
                  None
                expression (lib/warnings.ml[143,6447+27]..[143,6447+29])
                  Pexp_constant PConst_int (23,None)
              <case>
                pattern (lib/warnings.ml[144,6477+4]..[144,6477+21])
                  Ppat_construct "Bad_module_name" (lib/warnings.ml[144,6477+4]..[144,6477+19])
                  Some
                    []
                    pattern (lib/warnings.ml[144,6477+20]..[144,6477+21])
                      Ppat_any
                expression (lib/warnings.ml[144,6477+25]..[144,6477+27])
                  Pexp_constant PConst_int (24,None)
              <case>
                pattern (lib/warnings.ml[145,6505+4]..[145,6505+23])
                  Ppat_construct "All_clauses_guarded" (lib/warnings.ml[145,6505+4]..[145,6505+23])
                  None
                expression (lib/warnings.ml[145,6505+27]..[145,6505+28])
                  Pexp_constant PConst_int (8,None)
              <case>
                pattern (lib/warnings.ml[146,6554+4]..[146,6554+16])
                  Ppat_construct "Unused_var" (lib/warnings.ml[146,6554+4]..[146,6554+14])
                  Some
                    []
                    pattern (lib/warnings.ml[146,6554+15]..[146,6554+16])
                      Ppat_any
                expression (lib/warnings.ml[146,6554+20]..[146,6554+22])
                  Pexp_constant PConst_int (26,None)
              <case>
                pattern (lib/warnings.ml[147,6577+4]..[147,6577+23])
                  Ppat_construct "Unused_var_strict" (lib/warnings.ml[147,6577+4]..[147,6577+21])
                  Some
                    []
                    pattern (lib/warnings.ml[147,6577+22]..[147,6577+23])
                      Ppat_any
                expression (lib/warnings.ml[147,6577+27]..[147,6577+29])
                  Pexp_constant PConst_int (27,None)
              <case>
                pattern (lib/warnings.ml[148,6607+4]..[148,6607+35])
                  Ppat_construct "Wildcard_arg_to_constant_constr" (lib/warnings.ml[148,6607+4]..[148,6607+35])
                  None
                expression (lib/warnings.ml[148,6607+39]..[148,6607+41])
                  Pexp_constant PConst_int (28,None)
              <case>
                pattern (lib/warnings.ml[149,6649+4]..[149,6649+17])
                  Ppat_construct "Eol_in_string" (lib/warnings.ml[149,6649+4]..[149,6649+17])
                  None
                expression (lib/warnings.ml[149,6649+21]..[149,6649+23])
                  Pexp_constant PConst_int (29,None)
              <case>
                pattern (lib/warnings.ml[150,6673+4]..[150,6673+27])
                  Ppat_construct "Duplicate_definitions" (lib/warnings.ml[150,6673+4]..[150,6673+25])
                  Some
                    []
                    pattern (lib/warnings.ml[150,6673+26]..[150,6673+27])
                      Ppat_any
                expression (lib/warnings.ml[150,6673+31]..[150,6673+33])
                  Pexp_constant PConst_int (30,None)
              <case>
                pattern (lib/warnings.ml[151,6707+4]..[151,6707+30])
                  Ppat_construct "Unused_value_declaration" (lib/warnings.ml[151,6707+4]..[151,6707+28])
                  Some
                    []
                    pattern (lib/warnings.ml[151,6707+29]..[151,6707+30])
                      Ppat_any
                expression (lib/warnings.ml[151,6707+34]..[151,6707+36])
                  Pexp_constant PConst_int (32,None)
              <case>
                pattern (lib/warnings.ml[152,6744+4]..[152,6744+17])
                  Ppat_construct "Unused_open" (lib/warnings.ml[152,6744+4]..[152,6744+15])
                  Some
                    []
                    pattern (lib/warnings.ml[152,6744+16]..[152,6744+17])
                      Ppat_any
                expression (lib/warnings.ml[152,6744+21]..[152,6744+23])
                  Pexp_constant PConst_int (33,None)
              <case>
                pattern (lib/warnings.ml[153,6768+4]..[153,6768+29])
                  Ppat_construct "Unused_type_declaration" (lib/warnings.ml[153,6768+4]..[153,6768+27])
                  Some
                    []
                    pattern (lib/warnings.ml[153,6768+28]..[153,6768+29])
                      Ppat_any
                expression (lib/warnings.ml[153,6768+33]..[153,6768+35])
                  Pexp_constant PConst_int (34,None)
              <case>
                pattern (lib/warnings.ml[154,6804+4]..[154,6804+22])
                  Ppat_construct "Unused_for_index" (lib/warnings.ml[154,6804+4]..[154,6804+20])
                  Some
                    []
                    pattern (lib/warnings.ml[154,6804+21]..[154,6804+22])
                      Ppat_any
                expression (lib/warnings.ml[154,6804+26]..[154,6804+28])
                  Pexp_constant PConst_int (35,None)
              <case>
                pattern (lib/warnings.ml[155,6833+4]..[155,6833+21])
                  Ppat_construct "Unused_ancestor" (lib/warnings.ml[155,6833+4]..[155,6833+19])
                  Some
                    []
                    pattern (lib/warnings.ml[155,6833+20]..[155,6833+21])
                      Ppat_any
                expression (lib/warnings.ml[155,6833+25]..[155,6833+27])
                  Pexp_constant PConst_int (36,None)
              <case>
                pattern (lib/warnings.ml[156,6861+4]..[156,6861+24])
                  Ppat_construct "Unused_constructor" (lib/warnings.ml[156,6861+4]..[156,6861+22])
                  Some
                    []
                    pattern (lib/warnings.ml[156,6861+23]..[156,6861+24])
                      Ppat_any
                expression (lib/warnings.ml[156,6861+28]..[156,6861+30])
                  Pexp_constant PConst_int (37,None)
              <case>
                pattern (lib/warnings.ml[157,6892+4]..[157,6892+22])
                  Ppat_construct "Unused_extension" (lib/warnings.ml[157,6892+4]..[157,6892+20])
                  Some
                    []
                    pattern (lib/warnings.ml[157,6892+21]..[157,6892+22])
                      Ppat_any
                expression (lib/warnings.ml[157,6892+26]..[157,6892+28])
                  Pexp_constant PConst_int (38,None)
              <case>
                pattern (lib/warnings.ml[158,6921+4]..[158,6921+19])
                  Ppat_construct "Unused_rec_flag" (lib/warnings.ml[158,6921+4]..[158,6921+19])
                  None
                expression (lib/warnings.ml[158,6921+23]..[158,6921+25])
                  Pexp_constant PConst_int (39,None)
              <case>
                pattern (lib/warnings.ml[159,6947+4]..[159,6947+23])
                  Ppat_construct "Name_out_of_scope" (lib/warnings.ml[159,6947+4]..[159,6947+21])
                  Some
                    []
                    pattern (lib/warnings.ml[159,6947+22]..[159,6947+23])
                      Ppat_any
                expression (lib/warnings.ml[159,6947+27]..[159,6947+29])
                  Pexp_constant PConst_int (40,None)
              <case>
                pattern (lib/warnings.ml[160,6977+4]..[160,6977+20])
                  Ppat_construct "Ambiguous_name" (lib/warnings.ml[160,6977+4]..[160,6977+18])
                  Some
                    []
                    pattern (lib/warnings.ml[160,6977+19]..[160,6977+20])
                      Ppat_any
                expression (lib/warnings.ml[160,6977+24]..[160,6977+26])
                  Pexp_constant PConst_int (41,None)
              <case>
                pattern (lib/warnings.ml[161,7004+4]..[161,7004+24])
                  Ppat_construct "Disambiguated_name" (lib/warnings.ml[161,7004+4]..[161,7004+22])
                  Some
                    []
                    pattern (lib/warnings.ml[161,7004+23]..[161,7004+24])
                      Ppat_any
                expression (lib/warnings.ml[161,7004+28]..[161,7004+30])
                  Pexp_constant PConst_int (42,None)
              <case>
                pattern (lib/warnings.ml[162,7035+4]..[162,7035+23])
                  Ppat_construct "Nonoptional_label" (lib/warnings.ml[162,7035+4]..[162,7035+21])
                  Some
                    []
                    pattern (lib/warnings.ml[162,7035+22]..[162,7035+23])
                      Ppat_any
                expression (lib/warnings.ml[162,7035+27]..[162,7035+29])
                  Pexp_constant PConst_int (43,None)
              <case>
                pattern (lib/warnings.ml[163,7065+4]..[163,7065+28])
                  Ppat_construct "Open_shadow_identifier" (lib/warnings.ml[163,7065+4]..[163,7065+26])
                  Some
                    []
                    pattern (lib/warnings.ml[163,7065+27]..[163,7065+28])
                      Ppat_any
                expression (lib/warnings.ml[163,7065+32]..[163,7065+34])
                  Pexp_constant PConst_int (44,None)
              <case>
                pattern (lib/warnings.ml[164,7100+4]..[164,7100+35])
                  Ppat_construct "Open_shadow_label_constructor" (lib/warnings.ml[164,7100+4]..[164,7100+33])
                  Some
                    []
                    pattern (lib/warnings.ml[164,7100+34]..[164,7100+35])
                      Ppat_any
                expression (lib/warnings.ml[164,7100+39]..[164,7100+41])
                  Pexp_constant PConst_int (45,None)
              <case>
                pattern (lib/warnings.ml[165,7142+4]..[165,7142+22])
                  Ppat_construct "Bad_env_variable" (lib/warnings.ml[165,7142+4]..[165,7142+20])
                  Some
                    []
                    pattern (lib/warnings.ml[165,7142+21]..[165,7142+22])
                      Ppat_any
                expression (lib/warnings.ml[165,7142+26]..[165,7142+28])
                  Pexp_constant PConst_int (46,None)
              <case>
                pattern (lib/warnings.ml[166,7171+4]..[166,7171+23])
                  Ppat_construct "Attribute_payload" (lib/warnings.ml[166,7171+4]..[166,7171+21])
                  Some
                    []
                    pattern (lib/warnings.ml[166,7171+22]..[166,7171+23])
                      Ppat_any
                expression (lib/warnings.ml[166,7171+27]..[166,7171+29])
                  Pexp_constant PConst_int (47,None)
              <case>
                pattern (lib/warnings.ml[167,7201+4]..[167,7201+35])
                  Ppat_construct "Eliminated_optional_arguments" (lib/warnings.ml[167,7201+4]..[167,7201+33])
                  Some
                    []
                    pattern (lib/warnings.ml[167,7201+34]..[167,7201+35])
                      Ppat_any
                expression (lib/warnings.ml[167,7201+39]..[167,7201+41])
                  Pexp_constant PConst_int (48,None)
              <case>
                pattern (lib/warnings.ml[168,7243+4]..[168,7243+17])
                  Ppat_construct "No_cmi_file" (lib/warnings.ml[168,7243+4]..[168,7243+15])
                  Some
                    []
                    pattern (lib/warnings.ml[168,7243+16]..[168,7243+17])
                      Ppat_any
                expression (lib/warnings.ml[168,7243+21]..[168,7243+23])
                  Pexp_constant PConst_int (49,None)
              <case>
                pattern (lib/warnings.ml[169,7267+4]..[169,7267+26])
                  Ppat_construct "Unexpected_docstring" (lib/warnings.ml[169,7267+4]..[169,7267+24])
                  Some
                    []
                    pattern (lib/warnings.ml[169,7267+25]..[169,7267+26])
                      Ppat_any
                expression (lib/warnings.ml[169,7267+30]..[169,7267+32])
                  Pexp_constant PConst_int (50,None)
              <case>
                pattern (lib/warnings.ml[170,7300+4]..[170,7300+32])
                  Ppat_construct "Wrong_tailcall_expectation" (lib/warnings.ml[170,7300+4]..[170,7300+30])
                  Some
                    []
                    pattern (lib/warnings.ml[170,7300+31]..[170,7300+32])
                      Ppat_any
                expression (lib/warnings.ml[170,7300+36]..[170,7300+38])
                  Pexp_constant PConst_int (51,None)
              <case>
                pattern (lib/warnings.ml[171,7339+4]..[171,7339+27])
                  Ppat_construct "Fragile_literal_pattern" (lib/warnings.ml[171,7339+4]..[171,7339+27])
                  None
                expression (lib/warnings.ml[171,7339+31]..[171,7339+33])
                  Pexp_constant PConst_int (52,None)
              <case>
                pattern (lib/warnings.ml[172,7373+4]..[172,7373+25])
                  Ppat_construct "Misplaced_attribute" (lib/warnings.ml[172,7373+4]..[172,7373+23])
                  Some
                    []
                    pattern (lib/warnings.ml[172,7373+24]..[172,7373+25])
                      Ppat_any
                expression (lib/warnings.ml[172,7373+29]..[172,7373+31])
                  Pexp_constant PConst_int (53,None)
              <case>
                pattern (lib/warnings.ml[173,7405+4]..[173,7405+26])
                  Ppat_construct "Duplicated_attribute" (lib/warnings.ml[173,7405+4]..[173,7405+24])
                  Some
                    []
                    pattern (lib/warnings.ml[173,7405+25]..[173,7405+26])
                      Ppat_any
                expression (lib/warnings.ml[173,7405+30]..[173,7405+32])
                  Pexp_constant PConst_int (54,None)
              <case>
                pattern (lib/warnings.ml[174,7438+4]..[174,7438+25])
                  Ppat_construct "Inlining_impossible" (lib/warnings.ml[174,7438+4]..[174,7438+23])
                  Some
                    []
                    pattern (lib/warnings.ml[174,7438+24]..[174,7438+25])
                      Ppat_any
                expression (lib/warnings.ml[174,7438+29]..[174,7438+31])
                  Pexp_constant PConst_int (55,None)
              <case>
                pattern (lib/warnings.ml[175,7470+4]..[175,7470+20])
                  Ppat_construct "Unreachable_case" (lib/warnings.ml[175,7470+4]..[175,7470+20])
                  None
                expression (lib/warnings.ml[175,7470+24]..[175,7470+26])
                  Pexp_constant PConst_int (56,None)
              <case>
                pattern (lib/warnings.ml[176,7497+4]..[176,7497+36])
                  Ppat_construct "Ambiguous_var_in_pattern_guard" (lib/warnings.ml[176,7497+4]..[176,7497+34])
                  Some
                    []
                    pattern (lib/warnings.ml[176,7497+35]..[176,7497+36])
                      Ppat_any
                expression (lib/warnings.ml[176,7497+40]..[176,7497+42])
                  Pexp_constant PConst_int (57,None)
              <case>
                pattern (lib/warnings.ml[177,7540+4]..[177,7540+17])
                  Ppat_construct "No_cmx_file" (lib/warnings.ml[177,7540+4]..[177,7540+15])
                  Some
                    []
                    pattern (lib/warnings.ml[177,7540+16]..[177,7540+17])
                      Ppat_any
                expression (lib/warnings.ml[177,7540+21]..[177,7540+23])
                  Pexp_constant PConst_int (58,None)
              <case>
                pattern (lib/warnings.ml[178,7564+4]..[178,7564+43])
                  Ppat_construct "Flambda_assignment_to_non_mutable_value" (lib/warnings.ml[178,7564+4]..[178,7564+43])
                  None
                expression (lib/warnings.ml[178,7564+47]..[178,7564+49])
                  Pexp_constant PConst_int (59,None)
              <case>
                pattern (lib/warnings.ml[179,7614+4]..[179,7614+19])
                  Ppat_construct "Unused_module" (lib/warnings.ml[179,7614+4]..[179,7614+17])
                  Some
                    []
                    pattern (lib/warnings.ml[179,7614+18]..[179,7614+19])
                      Ppat_any
                expression (lib/warnings.ml[179,7614+23]..[179,7614+25])
                  Pexp_constant PConst_int (60,None)
              <case>
                pattern (lib/warnings.ml[180,7640+4]..[180,7640+33])
                  Ppat_construct "Unboxable_type_in_prim_decl" (lib/warnings.ml[180,7640+4]..[180,7640+31])
                  Some
                    []
                    pattern (lib/warnings.ml[180,7640+32]..[180,7640+33])
                      Ppat_any
                expression (lib/warnings.ml[180,7640+37]..[180,7640+39])
                  Pexp_constant PConst_int (61,None)
              <case>
                pattern (lib/warnings.ml[181,7680+4]..[181,7680+22])
                  Ppat_construct "Constraint_on_gadt" (lib/warnings.ml[181,7680+4]..[181,7680+22])
                  None
                expression (lib/warnings.ml[181,7680+26]..[181,7680+28])
                  Pexp_constant PConst_int (62,None)
              <case>
                pattern (lib/warnings.ml[182,7709+4]..[182,7709+33])
                  Ppat_construct "Erroneous_printed_signature" (lib/warnings.ml[182,7709+4]..[182,7709+31])
                  Some
                    []
                    pattern (lib/warnings.ml[182,7709+32]..[182,7709+33])
                      Ppat_any
                expression (lib/warnings.ml[182,7709+37]..[182,7709+39])
                  Pexp_constant PConst_int (63,None)
              <case>
                pattern (lib/warnings.ml[183,7749+4]..[183,7749+39])
                  Ppat_construct "Unsafe_array_syntax_without_parsing" (lib/warnings.ml[183,7749+4]..[183,7749+39])
                  None
                expression (lib/warnings.ml[183,7749+43]..[183,7749+45])
                  Pexp_constant PConst_int (64,None)
              <case>
                pattern (lib/warnings.ml[184,7795+4]..[184,7795+21])
                  Ppat_construct "Redefining_unit" (lib/warnings.ml[184,7795+4]..[184,7795+19])
                  Some
                    []
                    pattern (lib/warnings.ml[184,7795+20]..[184,7795+21])
                      Ppat_any
                expression (lib/warnings.ml[184,7795+25]..[184,7795+27])
                  Pexp_constant PConst_int (65,None)
              <case>
                pattern (lib/warnings.ml[185,7823+4]..[185,7823+22])
                  Ppat_construct "Unused_open_bang" (lib/warnings.ml[185,7823+4]..[185,7823+20])
                  Some
                    []
                    pattern (lib/warnings.ml[185,7823+21]..[185,7823+22])
                      Ppat_any
                expression (lib/warnings.ml[185,7823+26]..[185,7823+28])
                  Pexp_constant PConst_int (66,None)
              <case>
                pattern (lib/warnings.ml[186,7852+4]..[186,7852+30])
                  Ppat_construct "Unused_functor_parameter" (lib/warnings.ml[186,7852+4]..[186,7852+28])
                  Some
                    []
                    pattern (lib/warnings.ml[186,7852+29]..[186,7852+30])
                      Ppat_any
                expression (lib/warnings.ml[186,7852+34]..[186,7852+36])
                  Pexp_constant PConst_int (67,None)
              <case>
                pattern (lib/warnings.ml[187,7889+4]..[187,7889+42])
                  Ppat_construct "Match_on_mutable_state_prevent_uncurry" (lib/warnings.ml[187,7889+4]..[187,7889+42])
                  None
                expression (lib/warnings.ml[187,7889+46]..[187,7889+48])
                  Pexp_constant PConst_int (68,None)
              <case>
                pattern (lib/warnings.ml[188,7938+4]..[188,7938+18])
                  Ppat_construct "Unused_field" (lib/warnings.ml[188,7938+4]..[188,7938+16])
                  Some
                    []
                    pattern (lib/warnings.ml[188,7938+17]..[188,7938+18])
                      Ppat_any
                expression (lib/warnings.ml[188,7938+22]..[188,7938+24])
                  Pexp_constant PConst_int (69,None)
              <case>
                pattern (lib/warnings.ml[189,7963+4]..[189,7963+15])
                  Ppat_construct "Missing_mli" (lib/warnings.ml[189,7963+4]..[189,7963+15])
                  None
                expression (lib/warnings.ml[189,7963+19]..[189,7963+21])
                  Pexp_constant PConst_int (70,None)
              <case>
                pattern (lib/warnings.ml[190,7985+4]..[190,7985+24])
                  Ppat_construct "Unused_tmc_attribute" (lib/warnings.ml[190,7985+4]..[190,7985+24])
                  None
                expression (lib/warnings.ml[190,7985+28]..[190,7985+30])
                  Pexp_constant PConst_int (71,None)
              <case>
                pattern (lib/warnings.ml[191,8016+4]..[191,8016+23])
                  Ppat_construct "Tmc_breaks_tailcall" (lib/warnings.ml[191,8016+4]..[191,8016+23])
                  None
                expression (lib/warnings.ml[191,8016+27]..[191,8016+29])
                  Pexp_constant PConst_int (72,None)
              <case>
                pattern (lib/warnings.ml[192,8046+4]..[192,8046+39])
                  Ppat_construct "Generative_application_expects_unit" (lib/warnings.ml[192,8046+4]..[192,8046+39])
                  None
                expression (lib/warnings.ml[192,8046+43]..[192,8046+45])
                  Pexp_constant PConst_int (73,None)
            ]
    ]
  structure_item (lib/warnings.ml[198,8266+0]..[198,8266+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[198,8266+4]..[198,8266+23])
          Ppat_var "last_warning_number" (lib/warnings.ml[198,8266+4]..[198,8266+23])
        expression (lib/warnings.ml[198,8266+26]..[198,8266+28])
          Pexp_constant PConst_int (73,None)
    ]
  structure_item (lib/warnings.ml[200,8296+0]..[210,8772+3])
    Pstr_type Rec
    [
      type_declaration "description" (lib/warnings.ml[200,8296+5]..[200,8296+16]) (lib/warnings.ml[200,8296+0]..[210,8772+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/warnings.ml[201,8315+4]..[201,8315+17])
                Immutable
                "number" (lib/warnings.ml[201,8315+4]..[201,8315+10])                core_type (lib/warnings.ml[201,8315+13]..[201,8315+16])
                  Ptyp_constr "int" (lib/warnings.ml[201,8315+13]..[201,8315+16])
                  []
              (lib/warnings.ml[202,8333+4]..[202,8333+24])
                Immutable
                "names" (lib/warnings.ml[202,8333+4]..[202,8333+9])                core_type (lib/warnings.ml[202,8333+12]..[202,8333+23])
                  Ptyp_constr "list" (lib/warnings.ml[202,8333+19]..[202,8333+23])
                  [
                    core_type (lib/warnings.ml[202,8333+12]..[202,8333+18])
                      Ptyp_constr "string" (lib/warnings.ml[202,8333+12]..[202,8333+18])
                      []
                  ]
              (lib/warnings.ml[206,8550+4]..[206,8550+25])
                Immutable
                "description" (lib/warnings.ml[206,8550+4]..[206,8550+15])                core_type (lib/warnings.ml[206,8550+18]..[206,8550+24])
                  Ptyp_constr "string" (lib/warnings.ml[206,8550+18]..[206,8550+24])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[214,8860+0]..[216,8882+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[214,8860+4]..[214,8860+16])
          Ppat_var "descriptions" (lib/warnings.ml[214,8860+4]..[214,8860+16])
        expression (lib/warnings.ml[214,8860+19]..[216,8882+1])
          Pexp_construct "[]" (lib/warnings.ml[214,8860+19]..[216,8882+1])
          None
    ]
  structure_item (lib/warnings.ml[218,8885+0]..[223,9075+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[218,8885+4]..[218,8885+18])
          Ppat_var "name_to_number" (lib/warnings.ml[218,8885+4]..[218,8885+18])
        expression (lib/warnings.ml[219,8906+2]..[223,9075+31])
          Pexp_let Nonrec
          [
            <def>
              pattern (lib/warnings.ml[219,8906+6]..[219,8906+7])
                Ppat_var "h" (lib/warnings.ml[219,8906+6]..[219,8906+7])
              expression (lib/warnings.ml[219,8906+10]..[219,8906+44])
                Pexp_apply
                expression (lib/warnings.ml[219,8906+10]..[219,8906+24])
                  Pexp_ident "Hashtbl.create" (lib/warnings.ml[219,8906+10]..[219,8906+24])
                [
                  <arg>
                  Nolabel
                    expression (lib/warnings.ml[219,8906+25]..[219,8906+44])
                      Pexp_ident "last_warning_number" (lib/warnings.ml[219,8906+25]..[219,8906+44])
                ]
          ]
          expression (lib/warnings.ml[220,8954+2]..[223,9075+31])
            Pexp_sequence
            expression (lib/warnings.ml[220,8954+2]..[222,9055+18])
              Pexp_apply
              expression (lib/warnings.ml[220,8954+2]..[220,8954+11])
                Pexp_ident "List.iter" (lib/warnings.ml[220,8954+2]..[220,8954+11])
              [
                <arg>
                Nolabel
                  expression (lib/warnings.ml[220,8954+12]..[222,9055+5])
                    Pexp_function
                    [
                      Pparam_val (lib/warnings.ml[220,8954+17]..[220,8954+35])
                        Nolabel
                        None
                        pattern (lib/warnings.ml[220,8954+17]..[220,8954+35])
                          Ppat_record Open
                          [
                            "number" (lib/warnings.ml[220,8954+18]..[220,8954+24]) ghost
                              pattern (lib/warnings.ml[220,8954+18]..[220,8954+24])
                                Ppat_var "number" (lib/warnings.ml[220,8954+18]..[220,8954+24])
                            "names" (lib/warnings.ml[220,8954+26]..[220,8954+31]) ghost
                              pattern (lib/warnings.ml[220,8954+26]..[220,8954+31])
                                Ppat_var "names" (lib/warnings.ml[220,8954+26]..[220,8954+31])
                          ]
                    ]
                    None
                    Pfunction_body
                      expression (lib/warnings.ml[221,8993+6]..[221,8993+61])
                        Pexp_apply
                        expression (lib/warnings.ml[221,8993+6]..[221,8993+15])
                          Pexp_ident "List.iter" (lib/warnings.ml[221,8993+6]..[221,8993+15])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[221,8993+16]..[221,8993+55])
                              Pexp_function
                              [
                                Pparam_val (lib/warnings.ml[221,8993+21]..[221,8993+25])
                                  Nolabel
                                  None
                                  pattern (lib/warnings.ml[221,8993+21]..[221,8993+25])
                                    Ppat_var "name" (lib/warnings.ml[221,8993+21]..[221,8993+25])
                              ]
                              None
                              Pfunction_body
                                expression (lib/warnings.ml[221,8993+29]..[221,8993+54])
                                  Pexp_apply
                                  expression (lib/warnings.ml[221,8993+29]..[221,8993+40])
                                    Pexp_ident "Hashtbl.add" (lib/warnings.ml[221,8993+29]..[221,8993+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[221,8993+41]..[221,8993+42])
                                        Pexp_ident "h" (lib/warnings.ml[221,8993+41]..[221,8993+42])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[221,8993+43]..[221,8993+47])
                                        Pexp_ident "name" (lib/warnings.ml[221,8993+43]..[221,8993+47])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[221,8993+48]..[221,8993+54])
                                        Pexp_ident "number" (lib/warnings.ml[221,8993+48]..[221,8993+54])
                                  ]
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[221,8993+56]..[221,8993+61])
                              Pexp_ident "names" (lib/warnings.ml[221,8993+56]..[221,8993+61])
                        ]
                <arg>
                Nolabel
                  expression (lib/warnings.ml[222,9055+6]..[222,9055+18])
                    Pexp_ident "descriptions" (lib/warnings.ml[222,9055+6]..[222,9055+18])
              ]
            expression (lib/warnings.ml[223,9075+2]..[223,9075+31])
              Pexp_function
              [
                Pparam_val (lib/warnings.ml[223,9075+6]..[223,9075+7])
                  Nolabel
                  None
                  pattern (lib/warnings.ml[223,9075+6]..[223,9075+7])
                    Ppat_var "s" (lib/warnings.ml[223,9075+6]..[223,9075+7])
              ]
              None
              Pfunction_body
                expression (lib/warnings.ml[223,9075+11]..[223,9075+31])
                  Pexp_apply
                  expression (lib/warnings.ml[223,9075+11]..[223,9075+27])
                    Pexp_ident "Hashtbl.find_opt" (lib/warnings.ml[223,9075+11]..[223,9075+27])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[223,9075+28]..[223,9075+29])
                        Pexp_ident "h" (lib/warnings.ml[223,9075+28]..[223,9075+29])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[223,9075+30]..[223,9075+31])
                        Pexp_ident "s" (lib/warnings.ml[223,9075+30]..[223,9075+31])
                  ]
    ]
  structure_item (lib/warnings.ml[227,9173+0]..[256,9752+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[227,9173+4]..[227,9173+10])
          Ppat_var "letter" (lib/warnings.ml[227,9173+4]..[227,9173+10])
        expression (lib/warnings.ml[227,9173+13]..[256,9752+21])
          Pexp_function
          []
          None
          Pfunction_cases (lib/warnings.ml[227,9173+13]..[256,9752+21])
            [
              <case>
                pattern (lib/warnings.ml[228,9195+4]..[228,9195+7])
                  Ppat_constant PConst_char 61
                expression (lib/warnings.ml[229,9206+5]..[230,9271+29])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (lib/warnings.ml[229,9206+13]..[229,9206+17])
                        Ppat_var "loop" (lib/warnings.ml[229,9206+13]..[229,9206+17])
                      expression (lib/warnings.ml[229,9206+18]..[229,9206+61]) ghost
                        Pexp_function
                        [
                          Pparam_val (lib/warnings.ml[229,9206+18]..[229,9206+19])
                            Nolabel
                            None
                            pattern (lib/warnings.ml[229,9206+18]..[229,9206+19])
                              Ppat_var "i" (lib/warnings.ml[229,9206+18]..[229,9206+19])
                        ]
                        None
                        Pfunction_body
                          expression (lib/warnings.ml[229,9206+22]..[229,9206+61])
                            Pexp_ifthenelse
                            expression (lib/warnings.ml[229,9206+25]..[229,9206+30])
                              Pexp_apply
                              expression (lib/warnings.ml[229,9206+27]..[229,9206+28])
                                Pexp_ident "=" (lib/warnings.ml[229,9206+27]..[229,9206+28])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[229,9206+25]..[229,9206+26])
                                    Pexp_ident "i" (lib/warnings.ml[229,9206+25]..[229,9206+26])
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[229,9206+29]..[229,9206+30])
                                    Pexp_constant PConst_int (0,None)
                              ]
                            expression (lib/warnings.ml[229,9206+36]..[229,9206+38])
                              Pexp_construct "[]" (lib/warnings.ml[229,9206+36]..[229,9206+38])
                              None
                            Some
                              expression (lib/warnings.ml[229,9206+44]..[229,9206+61])
                                Pexp_construct "::" (lib/warnings.ml[229,9206+46]..[229,9206+48])
                                Some
                                  expression (lib/warnings.ml[229,9206+44]..[229,9206+61]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/warnings.ml[229,9206+44]..[229,9206+45])
                                        Pexp_ident "i" (lib/warnings.ml[229,9206+44]..[229,9206+45])
                                      expression (lib/warnings.ml[229,9206+49]..[229,9206+61])
                                        Pexp_apply
                                        expression (lib/warnings.ml[229,9206+49]..[229,9206+53])
                                          Pexp_ident "loop" (lib/warnings.ml[229,9206+49]..[229,9206+53])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[229,9206+54]..[229,9206+61])
                                              Pexp_apply
                                              expression (lib/warnings.ml[229,9206+57]..[229,9206+58])
                                                Pexp_ident "-" (lib/warnings.ml[229,9206+57]..[229,9206+58])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[229,9206+55]..[229,9206+56])
                                                    Pexp_ident "i" (lib/warnings.ml[229,9206+55]..[229,9206+56])
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[229,9206+59]..[229,9206+60])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                        ]
                                    ]
                  ]
                  expression (lib/warnings.ml[230,9271+5]..[230,9271+29])
                    Pexp_apply
                    expression (lib/warnings.ml[230,9271+5]..[230,9271+9])
                      Pexp_ident "loop" (lib/warnings.ml[230,9271+5]..[230,9271+9])
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[230,9271+10]..[230,9271+29])
                          Pexp_ident "last_warning_number" (lib/warnings.ml[230,9271+10]..[230,9271+29])
                    ]
              <case>
                pattern (lib/warnings.ml[231,9301+4]..[231,9301+7])
                  Ppat_constant PConst_char 62
                expression (lib/warnings.ml[231,9301+11]..[231,9301+13])
                  Pexp_construct "[]" (lib/warnings.ml[231,9301+11]..[231,9301+13])
                  None
              <case>
                pattern (lib/warnings.ml[232,9315+4]..[232,9315+7])
                  Ppat_constant PConst_char 63
                expression (lib/warnings.ml[232,9315+11]..[232,9315+17])
                  Pexp_construct "::" (lib/warnings.ml[232,9315+12]..[232,9315+17]) ghost
                  Some
                    expression (lib/warnings.ml[232,9315+12]..[232,9315+17]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[232,9315+12]..[232,9315+13])
                          Pexp_constant PConst_int (1,None)
                        expression (lib/warnings.ml[232,9315+15]..[232,9315+17]) ghost
                          Pexp_construct "::" (lib/warnings.ml[232,9315+15]..[232,9315+17]) ghost
                          Some
                            expression (lib/warnings.ml[232,9315+15]..[232,9315+17]) ghost
                              Pexp_tuple
                              [
                                expression (lib/warnings.ml[232,9315+15]..[232,9315+16])
                                  Pexp_constant PConst_int (2,None)
                                expression (lib/warnings.ml[232,9315+16]..[232,9315+17]) ghost
                                  Pexp_construct "[]" (lib/warnings.ml[232,9315+16]..[232,9315+17]) ghost
                                  None
                              ]
                      ]
              <case>
                pattern (lib/warnings.ml[233,9333+4]..[233,9333+7])
                  Ppat_constant PConst_char 64
                expression (lib/warnings.ml[233,9333+11]..[233,9333+14])
                  Pexp_construct "::" (lib/warnings.ml[233,9333+12]..[233,9333+14]) ghost
                  Some
                    expression (lib/warnings.ml[233,9333+12]..[233,9333+14]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[233,9333+12]..[233,9333+13])
                          Pexp_constant PConst_int (3,None)
                        expression (lib/warnings.ml[233,9333+13]..[233,9333+14]) ghost
                          Pexp_construct "[]" (lib/warnings.ml[233,9333+13]..[233,9333+14]) ghost
                          None
                      ]
              <case>
                pattern (lib/warnings.ml[234,9348+4]..[234,9348+7])
                  Ppat_constant PConst_char 65
                expression (lib/warnings.ml[234,9348+11]..[234,9348+14])
                  Pexp_construct "::" (lib/warnings.ml[234,9348+12]..[234,9348+14]) ghost
                  Some
                    expression (lib/warnings.ml[234,9348+12]..[234,9348+14]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[234,9348+12]..[234,9348+13])
                          Pexp_constant PConst_int (4,None)
                        expression (lib/warnings.ml[234,9348+13]..[234,9348+14]) ghost
                          Pexp_construct "[]" (lib/warnings.ml[234,9348+13]..[234,9348+14]) ghost
                          None
                      ]
              <case>
                pattern (lib/warnings.ml[235,9363+4]..[235,9363+7])
                  Ppat_constant PConst_char 66
                expression (lib/warnings.ml[235,9363+11]..[235,9363+14])
                  Pexp_construct "::" (lib/warnings.ml[235,9363+12]..[235,9363+14]) ghost
                  Some
                    expression (lib/warnings.ml[235,9363+12]..[235,9363+14]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[235,9363+12]..[235,9363+13])
                          Pexp_constant PConst_int (5,None)
                        expression (lib/warnings.ml[235,9363+13]..[235,9363+14]) ghost
                          Pexp_construct "[]" (lib/warnings.ml[235,9363+13]..[235,9363+14]) ghost
                          None
                      ]
              <case>
                pattern (lib/warnings.ml[236,9378+4]..[236,9378+7])
                  Ppat_constant PConst_char 67
                expression (lib/warnings.ml[236,9378+11]..[236,9378+13])
                  Pexp_construct "[]" (lib/warnings.ml[236,9378+11]..[236,9378+13])
                  None
              <case>
                pattern (lib/warnings.ml[237,9392+4]..[237,9392+7])
                  Ppat_constant PConst_char 68
                expression (lib/warnings.ml[237,9392+11]..[237,9392+13])
                  Pexp_construct "[]" (lib/warnings.ml[237,9392+11]..[237,9392+13])
                  None
              <case>
                pattern (lib/warnings.ml[238,9406+4]..[238,9406+7])
                  Ppat_constant PConst_char 69
                expression (lib/warnings.ml[238,9406+11]..[238,9406+13])
                  Pexp_construct "[]" (lib/warnings.ml[238,9406+11]..[238,9406+13])
                  None
              <case>
                pattern (lib/warnings.ml[239,9420+4]..[239,9420+7])
                  Ppat_constant PConst_char 6a
                expression (lib/warnings.ml[239,9420+11]..[239,9420+13])
                  Pexp_construct "[]" (lib/warnings.ml[239,9420+11]..[239,9420+13])
                  None
              <case>
                pattern (lib/warnings.ml[240,9434+4]..[240,9434+7])
                  Ppat_constant PConst_char 6b
                expression (lib/warnings.ml[240,9434+11]..[240,9434+43])
                  Pexp_construct "::" (lib/warnings.ml[240,9434+12]..[240,9434+43]) ghost
                  Some
                    expression (lib/warnings.ml[240,9434+12]..[240,9434+43]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[240,9434+12]..[240,9434+14])
                          Pexp_constant PConst_int (32,None)
                        expression (lib/warnings.ml[240,9434+16]..[240,9434+43]) ghost
                          Pexp_construct "::" (lib/warnings.ml[240,9434+16]..[240,9434+43]) ghost
                          Some
                            expression (lib/warnings.ml[240,9434+16]..[240,9434+43]) ghost
                              Pexp_tuple
                              [
                                expression (lib/warnings.ml[240,9434+16]..[240,9434+18])
                                  Pexp_constant PConst_int (33,None)
                                expression (lib/warnings.ml[240,9434+20]..[240,9434+43]) ghost
                                  Pexp_construct "::" (lib/warnings.ml[240,9434+20]..[240,9434+43]) ghost
                                  Some
                                    expression (lib/warnings.ml[240,9434+20]..[240,9434+43]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lib/warnings.ml[240,9434+20]..[240,9434+22])
                                          Pexp_constant PConst_int (34,None)
                                        expression (lib/warnings.ml[240,9434+24]..[240,9434+43]) ghost
                                          Pexp_construct "::" (lib/warnings.ml[240,9434+24]..[240,9434+43]) ghost
                                          Some
                                            expression (lib/warnings.ml[240,9434+24]..[240,9434+43]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lib/warnings.ml[240,9434+24]..[240,9434+26])
                                                  Pexp_constant PConst_int (35,None)
                                                expression (lib/warnings.ml[240,9434+28]..[240,9434+43]) ghost
                                                  Pexp_construct "::" (lib/warnings.ml[240,9434+28]..[240,9434+43]) ghost
                                                  Some
                                                    expression (lib/warnings.ml[240,9434+28]..[240,9434+43]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lib/warnings.ml[240,9434+28]..[240,9434+30])
                                                          Pexp_constant PConst_int (36,None)
                                                        expression (lib/warnings.ml[240,9434+32]..[240,9434+43]) ghost
                                                          Pexp_construct "::" (lib/warnings.ml[240,9434+32]..[240,9434+43]) ghost
                                                          Some
                                                            expression (lib/warnings.ml[240,9434+32]..[240,9434+43]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (lib/warnings.ml[240,9434+32]..[240,9434+34])
                                                                  Pexp_constant PConst_int (37,None)
                                                                expression (lib/warnings.ml[240,9434+36]..[240,9434+43]) ghost
                                                                  Pexp_construct "::" (lib/warnings.ml[240,9434+36]..[240,9434+43]) ghost
                                                                  Some
                                                                    expression (lib/warnings.ml[240,9434+36]..[240,9434+43]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (lib/warnings.ml[240,9434+36]..[240,9434+38])
  Pexp_constant PConst_int (38,None)
expression (lib/warnings.ml[240,9434+40]..[240,9434+43]) ghost
  Pexp_construct "::" (lib/warnings.ml[240,9434+40]..[240,9434+43]) ghost
  Some
    expression (lib/warnings.ml[240,9434+40]..[240,9434+43]) ghost
      Pexp_tuple
      [
        expression (lib/warnings.ml[240,9434+40]..[240,9434+42])
          Pexp_constant PConst_int (39,None)
        expression (lib/warnings.ml[240,9434+42]..[240,9434+43]) ghost
          Pexp_construct "[]" (lib/warnings.ml[240,9434+42]..[240,9434+43]) ghost
          None
      ]
                                                                      ]
                                                              ]
                                                      ]
                                              ]
                                      ]
                              ]
                      ]
              <case>
                pattern (lib/warnings.ml[241,9478+4]..[241,9478+7])
                  Ppat_constant PConst_char 6c
                expression (lib/warnings.ml[241,9478+11]..[241,9478+14])
                  Pexp_construct "::" (lib/warnings.ml[241,9478+12]..[241,9478+14]) ghost
                  Some
                    expression (lib/warnings.ml[241,9478+12]..[241,9478+14]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[241,9478+12]..[241,9478+13])
                          Pexp_constant PConst_int (6,None)
                        expression (lib/warnings.ml[241,9478+13]..[241,9478+14]) ghost
                          Pexp_construct "[]" (lib/warnings.ml[241,9478+13]..[241,9478+14]) ghost
                          None
                      ]
              <case>
                pattern (lib/warnings.ml[242,9493+4]..[242,9493+7])
                  Ppat_constant PConst_char 6d
                expression (lib/warnings.ml[242,9493+11]..[242,9493+14])
                  Pexp_construct "::" (lib/warnings.ml[242,9493+12]..[242,9493+14]) ghost
                  Some
                    expression (lib/warnings.ml[242,9493+12]..[242,9493+14]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[242,9493+12]..[242,9493+13])
                          Pexp_constant PConst_int (7,None)
                        expression (lib/warnings.ml[242,9493+13]..[242,9493+14]) ghost
                          Pexp_construct "[]" (lib/warnings.ml[242,9493+13]..[242,9493+14]) ghost
                          None
                      ]
              <case>
                pattern (lib/warnings.ml[243,9508+4]..[243,9508+7])
                  Ppat_constant PConst_char 6e
                expression (lib/warnings.ml[243,9508+11]..[243,9508+13])
                  Pexp_construct "[]" (lib/warnings.ml[243,9508+11]..[243,9508+13])
                  None
              <case>
                pattern (lib/warnings.ml[244,9522+4]..[244,9522+7])
                  Ppat_constant PConst_char 6f
                expression (lib/warnings.ml[244,9522+11]..[244,9522+13])
                  Pexp_construct "[]" (lib/warnings.ml[244,9522+11]..[244,9522+13])
                  None
              <case>
                pattern (lib/warnings.ml[245,9536+4]..[245,9536+7])
                  Ppat_constant PConst_char 70
                expression (lib/warnings.ml[245,9536+11]..[245,9536+14])
                  Pexp_construct "::" (lib/warnings.ml[245,9536+12]..[245,9536+14]) ghost
                  Some
                    expression (lib/warnings.ml[245,9536+12]..[245,9536+14]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[245,9536+12]..[245,9536+13])
                          Pexp_constant PConst_int (8,None)
                        expression (lib/warnings.ml[245,9536+13]..[245,9536+14]) ghost
                          Pexp_construct "[]" (lib/warnings.ml[245,9536+13]..[245,9536+14]) ghost
                          None
                      ]
              <case>
                pattern (lib/warnings.ml[246,9551+4]..[246,9551+7])
                  Ppat_constant PConst_char 71
                expression (lib/warnings.ml[246,9551+11]..[246,9551+13])
                  Pexp_construct "[]" (lib/warnings.ml[246,9551+11]..[246,9551+13])
                  None
              <case>
                pattern (lib/warnings.ml[247,9565+4]..[247,9565+7])
                  Ppat_constant PConst_char 72
                expression (lib/warnings.ml[247,9565+11]..[247,9565+14])
                  Pexp_construct "::" (lib/warnings.ml[247,9565+12]..[247,9565+14]) ghost
                  Some
                    expression (lib/warnings.ml[247,9565+12]..[247,9565+14]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[247,9565+12]..[247,9565+13])
                          Pexp_constant PConst_int (9,None)
                        expression (lib/warnings.ml[247,9565+13]..[247,9565+14]) ghost
                          Pexp_construct "[]" (lib/warnings.ml[247,9565+13]..[247,9565+14]) ghost
                          None
                      ]
              <case>
                pattern (lib/warnings.ml[248,9580+4]..[248,9580+7])
                  Ppat_constant PConst_char 73
                expression (lib/warnings.ml[248,9580+11]..[248,9580+15])
                  Pexp_construct "::" (lib/warnings.ml[248,9580+12]..[248,9580+15]) ghost
                  Some
                    expression (lib/warnings.ml[248,9580+12]..[248,9580+15]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[248,9580+12]..[248,9580+14])
                          Pexp_constant PConst_int (10,None)
                        expression (lib/warnings.ml[248,9580+14]..[248,9580+15]) ghost
                          Pexp_construct "[]" (lib/warnings.ml[248,9580+14]..[248,9580+15]) ghost
                          None
                      ]
              <case>
                pattern (lib/warnings.ml[249,9596+4]..[249,9596+7])
                  Ppat_constant PConst_char 74
                expression (lib/warnings.ml[249,9596+11]..[249,9596+13])
                  Pexp_construct "[]" (lib/warnings.ml[249,9596+11]..[249,9596+13])
                  None
              <case>
                pattern (lib/warnings.ml[250,9610+4]..[250,9610+7])
                  Ppat_constant PConst_char 75
                expression (lib/warnings.ml[250,9610+11]..[250,9610+19])
                  Pexp_construct "::" (lib/warnings.ml[250,9610+12]..[250,9610+19]) ghost
                  Some
                    expression (lib/warnings.ml[250,9610+12]..[250,9610+19]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[250,9610+12]..[250,9610+14])
                          Pexp_constant PConst_int (11,None)
                        expression (lib/warnings.ml[250,9610+16]..[250,9610+19]) ghost
                          Pexp_construct "::" (lib/warnings.ml[250,9610+16]..[250,9610+19]) ghost
                          Some
                            expression (lib/warnings.ml[250,9610+16]..[250,9610+19]) ghost
                              Pexp_tuple
                              [
                                expression (lib/warnings.ml[250,9610+16]..[250,9610+18])
                                  Pexp_constant PConst_int (12,None)
                                expression (lib/warnings.ml[250,9610+18]..[250,9610+19]) ghost
                                  Pexp_construct "[]" (lib/warnings.ml[250,9610+18]..[250,9610+19]) ghost
                                  None
                              ]
                      ]
              <case>
                pattern (lib/warnings.ml[251,9630+4]..[251,9630+7])
                  Ppat_constant PConst_char 76
                expression (lib/warnings.ml[251,9630+11]..[251,9630+15])
                  Pexp_construct "::" (lib/warnings.ml[251,9630+12]..[251,9630+15]) ghost
                  Some
                    expression (lib/warnings.ml[251,9630+12]..[251,9630+15]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[251,9630+12]..[251,9630+14])
                          Pexp_constant PConst_int (13,None)
                        expression (lib/warnings.ml[251,9630+14]..[251,9630+15]) ghost
                          Pexp_construct "[]" (lib/warnings.ml[251,9630+14]..[251,9630+15]) ghost
                          None
                      ]
              <case>
                pattern (lib/warnings.ml[252,9646+4]..[252,9646+7])
                  Ppat_constant PConst_char 77
                expression (lib/warnings.ml[252,9646+11]..[252,9646+13])
                  Pexp_construct "[]" (lib/warnings.ml[252,9646+11]..[252,9646+13])
                  None
              <case>
                pattern (lib/warnings.ml[253,9660+4]..[253,9660+7])
                  Ppat_constant PConst_char 78
                expression (lib/warnings.ml[253,9660+11]..[253,9660+59])
                  Pexp_construct "::" (lib/warnings.ml[253,9660+12]..[253,9660+59]) ghost
                  Some
                    expression (lib/warnings.ml[253,9660+12]..[253,9660+59]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[253,9660+12]..[253,9660+14])
                          Pexp_constant PConst_int (14,None)
                        expression (lib/warnings.ml[253,9660+16]..[253,9660+59]) ghost
                          Pexp_construct "::" (lib/warnings.ml[253,9660+16]..[253,9660+59]) ghost
                          Some
                            expression (lib/warnings.ml[253,9660+16]..[253,9660+59]) ghost
                              Pexp_tuple
                              [
                                expression (lib/warnings.ml[253,9660+16]..[253,9660+18])
                                  Pexp_constant PConst_int (15,None)
                                expression (lib/warnings.ml[253,9660+20]..[253,9660+59]) ghost
                                  Pexp_construct "::" (lib/warnings.ml[253,9660+20]..[253,9660+59]) ghost
                                  Some
                                    expression (lib/warnings.ml[253,9660+20]..[253,9660+59]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lib/warnings.ml[253,9660+20]..[253,9660+22])
                                          Pexp_constant PConst_int (16,None)
                                        expression (lib/warnings.ml[253,9660+24]..[253,9660+59]) ghost
                                          Pexp_construct "::" (lib/warnings.ml[253,9660+24]..[253,9660+59]) ghost
                                          Some
                                            expression (lib/warnings.ml[253,9660+24]..[253,9660+59]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lib/warnings.ml[253,9660+24]..[253,9660+26])
                                                  Pexp_constant PConst_int (17,None)
                                                expression (lib/warnings.ml[253,9660+28]..[253,9660+59]) ghost
                                                  Pexp_construct "::" (lib/warnings.ml[253,9660+28]..[253,9660+59]) ghost
                                                  Some
                                                    expression (lib/warnings.ml[253,9660+28]..[253,9660+59]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lib/warnings.ml[253,9660+28]..[253,9660+30])
                                                          Pexp_constant PConst_int (18,None)
                                                        expression (lib/warnings.ml[253,9660+32]..[253,9660+59]) ghost
                                                          Pexp_construct "::" (lib/warnings.ml[253,9660+32]..[253,9660+59]) ghost
                                                          Some
                                                            expression (lib/warnings.ml[253,9660+32]..[253,9660+59]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (lib/warnings.ml[253,9660+32]..[253,9660+34])
                                                                  Pexp_constant PConst_int (19,None)
                                                                expression (lib/warnings.ml[253,9660+36]..[253,9660+59]) ghost
                                                                  Pexp_construct "::" (lib/warnings.ml[253,9660+36]..[253,9660+59]) ghost
                                                                  Some
                                                                    expression (lib/warnings.ml[253,9660+36]..[253,9660+59]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (lib/warnings.ml[253,9660+36]..[253,9660+38])
  Pexp_constant PConst_int (20,None)
expression (lib/warnings.ml[253,9660+40]..[253,9660+59]) ghost
  Pexp_construct "::" (lib/warnings.ml[253,9660+40]..[253,9660+59]) ghost
  Some
    expression (lib/warnings.ml[253,9660+40]..[253,9660+59]) ghost
      Pexp_tuple
      [
        expression (lib/warnings.ml[253,9660+40]..[253,9660+42])
          Pexp_constant PConst_int (21,None)
        expression (lib/warnings.ml[253,9660+44]..[253,9660+59]) ghost
          Pexp_construct "::" (lib/warnings.ml[253,9660+44]..[253,9660+59]) ghost
          Some
            expression (lib/warnings.ml[253,9660+44]..[253,9660+59]) ghost
              Pexp_tuple
              [
                expression (lib/warnings.ml[253,9660+44]..[253,9660+46])
                  Pexp_constant PConst_int (22,None)
                expression (lib/warnings.ml[253,9660+48]..[253,9660+59]) ghost
                  Pexp_construct "::" (lib/warnings.ml[253,9660+48]..[253,9660+59]) ghost
                  Some
                    expression (lib/warnings.ml[253,9660+48]..[253,9660+59]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[253,9660+48]..[253,9660+50])
                          Pexp_constant PConst_int (23,None)
                        expression (lib/warnings.ml[253,9660+52]..[253,9660+59]) ghost
                          Pexp_construct "::" (lib/warnings.ml[253,9660+52]..[253,9660+59]) ghost
                          Some
                            expression (lib/warnings.ml[253,9660+52]..[253,9660+59]) ghost
                              Pexp_tuple
                              [
                                expression (lib/warnings.ml[253,9660+52]..[253,9660+54])
                                  Pexp_constant PConst_int (24,None)
                                expression (lib/warnings.ml[253,9660+56]..[253,9660+59]) ghost
                                  Pexp_construct "::" (lib/warnings.ml[253,9660+56]..[253,9660+59]) ghost
                                  Some
                                    expression (lib/warnings.ml[253,9660+56]..[253,9660+59]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lib/warnings.ml[253,9660+56]..[253,9660+58])
                                          Pexp_constant PConst_int (30,None)
                                        expression (lib/warnings.ml[253,9660+58]..[253,9660+59]) ghost
                                          Pexp_construct "[]" (lib/warnings.ml[253,9660+58]..[253,9660+59]) ghost
                                          None
                                      ]
                              ]
                      ]
              ]
      ]
                                                                      ]
                                                              ]
                                                      ]
                                              ]
                                      ]
                              ]
                      ]
              <case>
                pattern (lib/warnings.ml[254,9720+4]..[254,9720+7])
                  Ppat_constant PConst_char 79
                expression (lib/warnings.ml[254,9720+11]..[254,9720+15])
                  Pexp_construct "::" (lib/warnings.ml[254,9720+12]..[254,9720+15]) ghost
                  Some
                    expression (lib/warnings.ml[254,9720+12]..[254,9720+15]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[254,9720+12]..[254,9720+14])
                          Pexp_constant PConst_int (26,None)
                        expression (lib/warnings.ml[254,9720+14]..[254,9720+15]) ghost
                          Pexp_construct "[]" (lib/warnings.ml[254,9720+14]..[254,9720+15]) ghost
                          None
                      ]
              <case>
                pattern (lib/warnings.ml[255,9736+4]..[255,9736+7])
                  Ppat_constant PConst_char 7a
                expression (lib/warnings.ml[255,9736+11]..[255,9736+15])
                  Pexp_construct "::" (lib/warnings.ml[255,9736+12]..[255,9736+15]) ghost
                  Some
                    expression (lib/warnings.ml[255,9736+12]..[255,9736+15]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[255,9736+12]..[255,9736+14])
                          Pexp_constant PConst_int (27,None)
                        expression (lib/warnings.ml[255,9736+14]..[255,9736+15]) ghost
                          Pexp_construct "[]" (lib/warnings.ml[255,9736+14]..[255,9736+15]) ghost
                          None
                      ]
              <case>
                pattern (lib/warnings.ml[256,9752+4]..[256,9752+5])
                  Ppat_any
                expression (lib/warnings.ml[256,9752+9]..[256,9752+21])
                  Pexp_assert
                  expression (lib/warnings.ml[256,9752+16]..[256,9752+21])
                    Pexp_construct "false" (lib/warnings.ml[256,9752+16]..[256,9752+21])
                    None
            ]
    ]
  structure_item (lib/warnings.ml[258,9775+0]..[264,9993+3])
    Pstr_type Rec
    [
      type_declaration "state" (lib/warnings.ml[258,9775+5]..[258,9775+10]) (lib/warnings.ml[258,9775+0]..[264,9993+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/warnings.ml[260,9792+4]..[260,9792+23])
                Immutable
                "active" (lib/warnings.ml[260,9792+4]..[260,9792+10])                core_type (lib/warnings.ml[260,9792+12]..[260,9792+22])
                  Ptyp_constr "array" (lib/warnings.ml[260,9792+17]..[260,9792+22])
                  [
                    core_type (lib/warnings.ml[260,9792+12]..[260,9792+16])
                      Ptyp_constr "bool" (lib/warnings.ml[260,9792+12]..[260,9792+16])
                      []
                  ]
              (lib/warnings.ml[261,9816+4]..[261,9816+22])
                Immutable
                "error" (lib/warnings.ml[261,9816+4]..[261,9816+9])                core_type (lib/warnings.ml[261,9816+11]..[261,9816+21])
                  Ptyp_constr "array" (lib/warnings.ml[261,9816+16]..[261,9816+21])
                  [
                    core_type (lib/warnings.ml[261,9816+11]..[261,9816+15])
                      Ptyp_constr "bool" (lib/warnings.ml[261,9816+11]..[261,9816+15])
                      []
                  ]
              (lib/warnings.ml[262,9839+4]..[262,9839+46])
                Immutable
                "alerts" (lib/warnings.ml[262,9839+4]..[262,9839+10])                core_type (lib/warnings.ml[262,9839+13]..[262,9839+44])
                  Ptyp_tuple
                  [
                    core_type (lib/warnings.ml[262,9839+13]..[262,9839+37])
                      Ptyp_constr "Misc.Stdlib.String.Set.t" (lib/warnings.ml[262,9839+13]..[262,9839+37])
                      []
                    core_type (lib/warnings.ml[262,9839+40]..[262,9839+44])
                      Ptyp_constr "bool" (lib/warnings.ml[262,9839+40]..[262,9839+44])
                      []
                  ]
              (lib/warnings.ml[263,9913+4]..[263,9913+52])
                Immutable
                "alert_errors" (lib/warnings.ml[263,9913+4]..[263,9913+16])                core_type (lib/warnings.ml[263,9913+19]..[263,9913+50])
                  Ptyp_tuple
                  [
                    core_type (lib/warnings.ml[263,9913+19]..[263,9913+43])
                      Ptyp_constr "Misc.Stdlib.String.Set.t" (lib/warnings.ml[263,9913+19]..[263,9913+43])
                      []
                    core_type (lib/warnings.ml[263,9913+46]..[263,9913+50])
                      Ptyp_constr "bool" (lib/warnings.ml[263,9913+46]..[263,9913+50])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[266,9998+0]..[273,10268+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[266,9998+4]..[266,9998+11])
          Ppat_var "current" (lib/warnings.ml[266,9998+4]..[266,9998+11])
        expression (lib/warnings.ml[267,10012+2]..[273,10268+5])
          Pexp_apply
          expression (lib/warnings.ml[267,10012+2]..[267,10012+5])
            Pexp_ident "ref" (lib/warnings.ml[267,10012+2]..[267,10012+5])
          [
            <arg>
            Nolabel
              expression (lib/warnings.ml[268,10018+4]..[273,10268+5])
                Pexp_record
                [
                  "active" (lib/warnings.ml[269,10024+6]..[269,10024+12])
                    expression (lib/warnings.ml[269,10024+15]..[269,10024+56])
                      Pexp_apply
                      expression (lib/warnings.ml[269,10024+15]..[269,10024+25])
                        Pexp_ident "Array.make" (lib/warnings.ml[269,10024+15]..[269,10024+25])
                      [
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[269,10024+26]..[269,10024+51])
                            Pexp_apply
                            expression (lib/warnings.ml[269,10024+47]..[269,10024+48])
                              Pexp_ident "+" (lib/warnings.ml[269,10024+47]..[269,10024+48])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[269,10024+27]..[269,10024+46])
                                  Pexp_ident "last_warning_number" (lib/warnings.ml[269,10024+27]..[269,10024+46])
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[269,10024+49]..[269,10024+50])
                                  Pexp_constant PConst_int (1,None)
                            ]
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[269,10024+52]..[269,10024+56])
                            Pexp_construct "true" (lib/warnings.ml[269,10024+52]..[269,10024+56])
                            None
                      ]
                  "error" (lib/warnings.ml[270,10082+6]..[270,10082+11])
                    expression (lib/warnings.ml[270,10082+14]..[270,10082+56])
                      Pexp_apply
                      expression (lib/warnings.ml[270,10082+14]..[270,10082+24])
                        Pexp_ident "Array.make" (lib/warnings.ml[270,10082+14]..[270,10082+24])
                      [
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[270,10082+25]..[270,10082+50])
                            Pexp_apply
                            expression (lib/warnings.ml[270,10082+46]..[270,10082+47])
                              Pexp_ident "+" (lib/warnings.ml[270,10082+46]..[270,10082+47])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[270,10082+26]..[270,10082+45])
                                  Pexp_ident "last_warning_number" (lib/warnings.ml[270,10082+26]..[270,10082+45])
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[270,10082+48]..[270,10082+49])
                                  Pexp_constant PConst_int (1,None)
                            ]
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[270,10082+51]..[270,10082+56])
                            Pexp_construct "false" (lib/warnings.ml[270,10082+51]..[270,10082+56])
                            None
                      ]
                  "alerts" (lib/warnings.ml[271,10140+6]..[271,10140+12])
                    expression (lib/warnings.ml[271,10140+15]..[271,10140+52])
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[271,10140+16]..[271,10140+44])
                          Pexp_ident "Misc.Stdlib.String.Set.empty" (lib/warnings.ml[271,10140+16]..[271,10140+44])
                        expression (lib/warnings.ml[271,10140+46]..[271,10140+51])
                          Pexp_construct "false" (lib/warnings.ml[271,10140+46]..[271,10140+51])
                          None
                      ]
                  "alert_errors" (lib/warnings.ml[272,10194+6]..[272,10194+18])
                    expression (lib/warnings.ml[272,10194+21]..[272,10194+57])
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[272,10194+22]..[272,10194+50])
                          Pexp_ident "Misc.Stdlib.String.Set.empty" (lib/warnings.ml[272,10194+22]..[272,10194+50])
                        expression (lib/warnings.ml[272,10194+52]..[272,10194+56])
                          Pexp_construct "true" (lib/warnings.ml[272,10194+52]..[272,10194+56])
                          None
                      ]
                ]
                None
          ]
    ]
  structure_item (lib/warnings.ml[275,10275+0]..[275,10275+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[275,10275+4]..[275,10275+12])
          Ppat_var "disabled" (lib/warnings.ml[275,10275+4]..[275,10275+12])
        expression (lib/warnings.ml[275,10275+15]..[275,10275+24])
          Pexp_apply
          expression (lib/warnings.ml[275,10275+15]..[275,10275+18])
            Pexp_ident "ref" (lib/warnings.ml[275,10275+15]..[275,10275+18])
          [
            <arg>
            Nolabel
              expression (lib/warnings.ml[275,10275+19]..[275,10275+24])
                Pexp_construct "false" (lib/warnings.ml[275,10275+19]..[275,10275+24])
                None
          ]
    ]
  structure_item (lib/warnings.ml[277,10301+0]..[278,10326+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[277,10301+4]..[277,10301+20])
          Ppat_var "without_warnings" (lib/warnings.ml[277,10301+4]..[277,10301+20])
        expression (lib/warnings.ml[277,10301+21]..[278,10326+46]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[277,10301+21]..[277,10301+22])
              Nolabel
              None
              pattern (lib/warnings.ml[277,10301+21]..[277,10301+22])
                Ppat_var "f" (lib/warnings.ml[277,10301+21]..[277,10301+22])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[278,10326+2]..[278,10326+46])
              Pexp_apply
              expression (lib/warnings.ml[278,10326+2]..[278,10326+19])
                Pexp_ident "Misc.protect_refs" (lib/warnings.ml[278,10326+2]..[278,10326+19])
              [
                <arg>
                Nolabel
                  expression (lib/warnings.ml[278,10326+20]..[278,10326+44])
                    Pexp_construct "::" (lib/warnings.ml[278,10326+21]..[278,10326+44]) ghost
                    Some
                      expression (lib/warnings.ml[278,10326+21]..[278,10326+44]) ghost
                        Pexp_tuple
                        [
                          expression (lib/warnings.ml[278,10326+21]..[278,10326+43])
                            Pexp_construct "Misc.R" (lib/warnings.ml[278,10326+21]..[278,10326+27])
                            Some
                              expression (lib/warnings.ml[278,10326+27]..[278,10326+43])
                                Pexp_tuple
                                [
                                  expression (lib/warnings.ml[278,10326+28]..[278,10326+36])
                                    Pexp_ident "disabled" (lib/warnings.ml[278,10326+28]..[278,10326+36])
                                  expression (lib/warnings.ml[278,10326+38]..[278,10326+42])
                                    Pexp_construct "true" (lib/warnings.ml[278,10326+38]..[278,10326+42])
                                    None
                                ]
                          expression (lib/warnings.ml[278,10326+43]..[278,10326+44]) ghost
                            Pexp_construct "[]" (lib/warnings.ml[278,10326+43]..[278,10326+44]) ghost
                            None
                        ]
                <arg>
                Nolabel
                  expression (lib/warnings.ml[278,10326+45]..[278,10326+46])
                    Pexp_ident "f" (lib/warnings.ml[278,10326+45]..[278,10326+46])
              ]
    ]
  structure_item (lib/warnings.ml[280,10374+0]..[280,10374+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[280,10374+4]..[280,10374+10])
          Ppat_var "backup" (lib/warnings.ml[280,10374+4]..[280,10374+10])
        expression (lib/warnings.ml[280,10374+11]..[280,10374+24]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[280,10374+11]..[280,10374+13])
              Nolabel
              None
              pattern (lib/warnings.ml[280,10374+11]..[280,10374+13])
                Ppat_construct "()" (lib/warnings.ml[280,10374+11]..[280,10374+13])
                None
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[280,10374+16]..[280,10374+24])
              Pexp_apply
              expression (lib/warnings.ml[280,10374+16]..[280,10374+17])
                Pexp_ident "!" (lib/warnings.ml[280,10374+16]..[280,10374+17])
              [
                <arg>
                Nolabel
                  expression (lib/warnings.ml[280,10374+17]..[280,10374+24])
                    Pexp_ident "current" (lib/warnings.ml[280,10374+17]..[280,10374+24])
              ]
    ]
  structure_item (lib/warnings.ml[282,10400+0]..[282,10400+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[282,10400+4]..[282,10400+11])
          Ppat_var "restore" (lib/warnings.ml[282,10400+4]..[282,10400+11])
        expression (lib/warnings.ml[282,10400+12]..[282,10400+28]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[282,10400+12]..[282,10400+13])
              Nolabel
              None
              pattern (lib/warnings.ml[282,10400+12]..[282,10400+13])
                Ppat_var "x" (lib/warnings.ml[282,10400+12]..[282,10400+13])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[282,10400+16]..[282,10400+28])
              Pexp_apply
              expression (lib/warnings.ml[282,10400+24]..[282,10400+26])
                Pexp_ident ":=" (lib/warnings.ml[282,10400+24]..[282,10400+26])
              [
                <arg>
                Nolabel
                  expression (lib/warnings.ml[282,10400+16]..[282,10400+23])
                    Pexp_ident "current" (lib/warnings.ml[282,10400+16]..[282,10400+23])
                <arg>
                Nolabel
                  expression (lib/warnings.ml[282,10400+27]..[282,10400+28])
                    Pexp_ident "x" (lib/warnings.ml[282,10400+27]..[282,10400+28])
              ]
    ]
  structure_item (lib/warnings.ml[284,10430+0]..[285,10448+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[284,10430+4]..[284,10430+13])
          Ppat_var "is_active" (lib/warnings.ml[284,10430+4]..[284,10430+13])
        expression (lib/warnings.ml[284,10430+14]..[285,10448+47]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[284,10430+14]..[284,10430+15])
              Nolabel
              None
              pattern (lib/warnings.ml[284,10430+14]..[284,10430+15])
                Ppat_var "x" (lib/warnings.ml[284,10430+14]..[284,10430+15])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[285,10448+2]..[285,10448+47])
              Pexp_apply
              expression (lib/warnings.ml[285,10448+16]..[285,10448+18])
                Pexp_ident "&&" (lib/warnings.ml[285,10448+16]..[285,10448+18])
              [
                <arg>
                Nolabel
                  expression (lib/warnings.ml[285,10448+2]..[285,10448+15])
                    Pexp_apply
                    expression (lib/warnings.ml[285,10448+2]..[285,10448+5])
                      Pexp_ident "not" (lib/warnings.ml[285,10448+2]..[285,10448+5])
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[285,10448+6]..[285,10448+15])
                          Pexp_apply
                          expression (lib/warnings.ml[285,10448+6]..[285,10448+7])
                            Pexp_ident "!" (lib/warnings.ml[285,10448+6]..[285,10448+7])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[285,10448+7]..[285,10448+15])
                                Pexp_ident "disabled" (lib/warnings.ml[285,10448+7]..[285,10448+15])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (lib/warnings.ml[285,10448+19]..[285,10448+47])
                    Pexp_apply
                    expression (lib/warnings.ml[285,10448+19]..[285,10448+47]) ghost
                      Pexp_ident "Array.get" (lib/warnings.ml[285,10448+19]..[285,10448+47]) ghost
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[285,10448+19]..[285,10448+36])
                          Pexp_field
                          expression (lib/warnings.ml[285,10448+19]..[285,10448+29])
                            Pexp_apply
                            expression (lib/warnings.ml[285,10448+20]..[285,10448+21])
                              Pexp_ident "!" (lib/warnings.ml[285,10448+20]..[285,10448+21])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[285,10448+21]..[285,10448+28])
                                  Pexp_ident "current" (lib/warnings.ml[285,10448+21]..[285,10448+28])
                            ]
                          "active" (lib/warnings.ml[285,10448+30]..[285,10448+36])
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[285,10448+38]..[285,10448+46])
                          Pexp_apply
                          expression (lib/warnings.ml[285,10448+38]..[285,10448+44])
                            Pexp_ident "number" (lib/warnings.ml[285,10448+38]..[285,10448+44])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[285,10448+45]..[285,10448+46])
                                Pexp_ident "x" (lib/warnings.ml[285,10448+45]..[285,10448+46])
                          ]
                    ]
              ]
    ]
  structure_item (lib/warnings.ml[287,10497+0]..[288,10514+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[287,10497+4]..[287,10497+12])
          Ppat_var "is_error" (lib/warnings.ml[287,10497+4]..[287,10497+12])
        expression (lib/warnings.ml[287,10497+13]..[288,10514+46]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[287,10497+13]..[287,10497+14])
              Nolabel
              None
              pattern (lib/warnings.ml[287,10497+13]..[287,10497+14])
                Ppat_var "x" (lib/warnings.ml[287,10497+13]..[287,10497+14])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[288,10514+2]..[288,10514+46])
              Pexp_apply
              expression (lib/warnings.ml[288,10514+16]..[288,10514+18])
                Pexp_ident "&&" (lib/warnings.ml[288,10514+16]..[288,10514+18])
              [
                <arg>
                Nolabel
                  expression (lib/warnings.ml[288,10514+2]..[288,10514+15])
                    Pexp_apply
                    expression (lib/warnings.ml[288,10514+2]..[288,10514+5])
                      Pexp_ident "not" (lib/warnings.ml[288,10514+2]..[288,10514+5])
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[288,10514+6]..[288,10514+15])
                          Pexp_apply
                          expression (lib/warnings.ml[288,10514+6]..[288,10514+7])
                            Pexp_ident "!" (lib/warnings.ml[288,10514+6]..[288,10514+7])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[288,10514+7]..[288,10514+15])
                                Pexp_ident "disabled" (lib/warnings.ml[288,10514+7]..[288,10514+15])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (lib/warnings.ml[288,10514+19]..[288,10514+46])
                    Pexp_apply
                    expression (lib/warnings.ml[288,10514+19]..[288,10514+46]) ghost
                      Pexp_ident "Array.get" (lib/warnings.ml[288,10514+19]..[288,10514+46]) ghost
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[288,10514+19]..[288,10514+35])
                          Pexp_field
                          expression (lib/warnings.ml[288,10514+19]..[288,10514+29])
                            Pexp_apply
                            expression (lib/warnings.ml[288,10514+20]..[288,10514+21])
                              Pexp_ident "!" (lib/warnings.ml[288,10514+20]..[288,10514+21])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[288,10514+21]..[288,10514+28])
                                  Pexp_ident "current" (lib/warnings.ml[288,10514+21]..[288,10514+28])
                            ]
                          "error" (lib/warnings.ml[288,10514+30]..[288,10514+35])
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[288,10514+37]..[288,10514+45])
                          Pexp_apply
                          expression (lib/warnings.ml[288,10514+37]..[288,10514+43])
                            Pexp_ident "number" (lib/warnings.ml[288,10514+37]..[288,10514+43])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[288,10514+44]..[288,10514+45])
                                Pexp_ident "x" (lib/warnings.ml[288,10514+44]..[288,10514+45])
                          ]
                    ]
              ]
    ]
  structure_item (lib/warnings.ml[290,10562+0]..[293,10653+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[290,10562+4]..[290,10562+19])
          Ppat_var "alert_is_active" (lib/warnings.ml[290,10562+4]..[290,10562+19])
        expression (lib/warnings.ml[290,10562+20]..[293,10653+43]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[290,10562+20]..[290,10562+29])
              Nolabel
              None
              pattern (lib/warnings.ml[290,10562+20]..[290,10562+29])
                Ppat_record Open
                [
                  "kind" (lib/warnings.ml[290,10562+21]..[290,10562+25]) ghost
                    pattern (lib/warnings.ml[290,10562+21]..[290,10562+25])
                      Ppat_var "kind" (lib/warnings.ml[290,10562+21]..[290,10562+25])
                ]
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[291,10594+2]..[293,10653+43])
              Pexp_apply
              expression (lib/warnings.ml[291,10594+16]..[291,10594+18])
                Pexp_ident "&&" (lib/warnings.ml[291,10594+16]..[291,10594+18])
              [
                <arg>
                Nolabel
                  expression (lib/warnings.ml[291,10594+2]..[291,10594+15])
                    Pexp_apply
                    expression (lib/warnings.ml[291,10594+2]..[291,10594+5])
                      Pexp_ident "not" (lib/warnings.ml[291,10594+2]..[291,10594+5])
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[291,10594+6]..[291,10594+15])
                          Pexp_apply
                          expression (lib/warnings.ml[291,10594+6]..[291,10594+7])
                            Pexp_ident "!" (lib/warnings.ml[291,10594+6]..[291,10594+7])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[291,10594+7]..[291,10594+15])
                                Pexp_ident "disabled" (lib/warnings.ml[291,10594+7]..[291,10594+15])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (lib/warnings.ml[292,10613+2]..[293,10653+43])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[292,10613+6]..[292,10613+16])
                          Ppat_tuple
                          [
                            pattern (lib/warnings.ml[292,10613+7]..[292,10613+10])
                              Ppat_var "set" (lib/warnings.ml[292,10613+7]..[292,10613+10])
                            pattern (lib/warnings.ml[292,10613+12]..[292,10613+15])
                              Ppat_var "pos" (lib/warnings.ml[292,10613+12]..[292,10613+15])
                          ]
                        expression (lib/warnings.ml[292,10613+19]..[292,10613+36])
                          Pexp_field
                          expression (lib/warnings.ml[292,10613+19]..[292,10613+29])
                            Pexp_apply
                            expression (lib/warnings.ml[292,10613+20]..[292,10613+21])
                              Pexp_ident "!" (lib/warnings.ml[292,10613+20]..[292,10613+21])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[292,10613+21]..[292,10613+28])
                                  Pexp_ident "current" (lib/warnings.ml[292,10613+21]..[292,10613+28])
                            ]
                          "alerts" (lib/warnings.ml[292,10613+30]..[292,10613+36])
                    ]
                    expression (lib/warnings.ml[293,10653+2]..[293,10653+43])
                      Pexp_apply
                      expression (lib/warnings.ml[293,10653+38]..[293,10653+39])
                        Pexp_ident "=" (lib/warnings.ml[293,10653+38]..[293,10653+39])
                      [
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[293,10653+2]..[293,10653+37])
                            Pexp_apply
                            expression (lib/warnings.ml[293,10653+2]..[293,10653+28])
                              Pexp_ident "Misc.Stdlib.String.Set.mem" (lib/warnings.ml[293,10653+2]..[293,10653+28])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[293,10653+29]..[293,10653+33])
                                  Pexp_ident "kind" (lib/warnings.ml[293,10653+29]..[293,10653+33])
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[293,10653+34]..[293,10653+37])
                                  Pexp_ident "set" (lib/warnings.ml[293,10653+34]..[293,10653+37])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[293,10653+40]..[293,10653+43])
                            Pexp_ident "pos" (lib/warnings.ml[293,10653+40]..[293,10653+43])
                      ]
              ]
    ]
  structure_item (lib/warnings.ml[295,10698+0]..[298,10794+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[295,10698+4]..[295,10698+18])
          Ppat_var "alert_is_error" (lib/warnings.ml[295,10698+4]..[295,10698+18])
        expression (lib/warnings.ml[295,10698+19]..[298,10794+43]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[295,10698+19]..[295,10698+28])
              Nolabel
              None
              pattern (lib/warnings.ml[295,10698+19]..[295,10698+28])
                Ppat_record Open
                [
                  "kind" (lib/warnings.ml[295,10698+20]..[295,10698+24]) ghost
                    pattern (lib/warnings.ml[295,10698+20]..[295,10698+24])
                      Ppat_var "kind" (lib/warnings.ml[295,10698+20]..[295,10698+24])
                ]
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[296,10729+2]..[298,10794+43])
              Pexp_apply
              expression (lib/warnings.ml[296,10729+16]..[296,10729+18])
                Pexp_ident "&&" (lib/warnings.ml[296,10729+16]..[296,10729+18])
              [
                <arg>
                Nolabel
                  expression (lib/warnings.ml[296,10729+2]..[296,10729+15])
                    Pexp_apply
                    expression (lib/warnings.ml[296,10729+2]..[296,10729+5])
                      Pexp_ident "not" (lib/warnings.ml[296,10729+2]..[296,10729+5])
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[296,10729+6]..[296,10729+15])
                          Pexp_apply
                          expression (lib/warnings.ml[296,10729+6]..[296,10729+7])
                            Pexp_ident "!" (lib/warnings.ml[296,10729+6]..[296,10729+7])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[296,10729+7]..[296,10729+15])
                                Pexp_ident "disabled" (lib/warnings.ml[296,10729+7]..[296,10729+15])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (lib/warnings.ml[297,10748+2]..[298,10794+43])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[297,10748+6]..[297,10748+16])
                          Ppat_tuple
                          [
                            pattern (lib/warnings.ml[297,10748+7]..[297,10748+10])
                              Ppat_var "set" (lib/warnings.ml[297,10748+7]..[297,10748+10])
                            pattern (lib/warnings.ml[297,10748+12]..[297,10748+15])
                              Ppat_var "pos" (lib/warnings.ml[297,10748+12]..[297,10748+15])
                          ]
                        expression (lib/warnings.ml[297,10748+19]..[297,10748+42])
                          Pexp_field
                          expression (lib/warnings.ml[297,10748+19]..[297,10748+29])
                            Pexp_apply
                            expression (lib/warnings.ml[297,10748+20]..[297,10748+21])
                              Pexp_ident "!" (lib/warnings.ml[297,10748+20]..[297,10748+21])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[297,10748+21]..[297,10748+28])
                                  Pexp_ident "current" (lib/warnings.ml[297,10748+21]..[297,10748+28])
                            ]
                          "alert_errors" (lib/warnings.ml[297,10748+30]..[297,10748+42])
                    ]
                    expression (lib/warnings.ml[298,10794+2]..[298,10794+43])
                      Pexp_apply
                      expression (lib/warnings.ml[298,10794+38]..[298,10794+39])
                        Pexp_ident "=" (lib/warnings.ml[298,10794+38]..[298,10794+39])
                      [
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[298,10794+2]..[298,10794+37])
                            Pexp_apply
                            expression (lib/warnings.ml[298,10794+2]..[298,10794+28])
                              Pexp_ident "Misc.Stdlib.String.Set.mem" (lib/warnings.ml[298,10794+2]..[298,10794+28])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[298,10794+29]..[298,10794+33])
                                  Pexp_ident "kind" (lib/warnings.ml[298,10794+29]..[298,10794+33])
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[298,10794+34]..[298,10794+37])
                                  Pexp_ident "set" (lib/warnings.ml[298,10794+34]..[298,10794+37])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[298,10794+40]..[298,10794+43])
                            Pexp_ident "pos" (lib/warnings.ml[298,10794+40]..[298,10794+43])
                      ]
              ]
    ]
  structure_item (lib/warnings.ml[300,10839+0]..[309,10989+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[300,10839+4]..[300,10839+14])
          Ppat_var "with_state" (lib/warnings.ml[300,10839+4]..[300,10839+14])
        expression (lib/warnings.ml[300,10839+15]..[309,10989+13]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[300,10839+15]..[300,10839+20])
              Nolabel
              None
              pattern (lib/warnings.ml[300,10839+15]..[300,10839+20])
                Ppat_var "state" (lib/warnings.ml[300,10839+15]..[300,10839+20])
            Pparam_val (lib/warnings.ml[300,10839+21]..[300,10839+22])
              Nolabel
              None
              pattern (lib/warnings.ml[300,10839+21]..[300,10839+22])
                Ppat_var "f" (lib/warnings.ml[300,10839+21]..[300,10839+22])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[301,10864+2]..[309,10989+13])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[301,10864+6]..[301,10864+10])
                    Ppat_var "prev" (lib/warnings.ml[301,10864+6]..[301,10864+10])
                  expression (lib/warnings.ml[301,10864+13]..[301,10864+22])
                    Pexp_apply
                    expression (lib/warnings.ml[301,10864+13]..[301,10864+19])
                      Pexp_ident "backup" (lib/warnings.ml[301,10864+13]..[301,10864+19])
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[301,10864+20]..[301,10864+22])
                          Pexp_construct "()" (lib/warnings.ml[301,10864+20]..[301,10864+22])
                          None
                    ]
              ]
              expression (lib/warnings.ml[302,10890+2]..[309,10989+13])
                Pexp_sequence
                expression (lib/warnings.ml[302,10890+2]..[302,10890+15])
                  Pexp_apply
                  expression (lib/warnings.ml[302,10890+2]..[302,10890+9])
                    Pexp_ident "restore" (lib/warnings.ml[302,10890+2]..[302,10890+9])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[302,10890+10]..[302,10890+15])
                        Pexp_ident "state" (lib/warnings.ml[302,10890+10]..[302,10890+15])
                  ]
                expression (lib/warnings.ml[303,10907+2]..[309,10989+13])
                  Pexp_try
                  expression (lib/warnings.ml[304,10913+4]..[306,10951+5])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[304,10913+8]..[304,10913+9])
                          Ppat_var "r" (lib/warnings.ml[304,10913+8]..[304,10913+9])
                        expression (lib/warnings.ml[304,10913+12]..[304,10913+16])
                          Pexp_apply
                          expression (lib/warnings.ml[304,10913+12]..[304,10913+13])
                            Pexp_ident "f" (lib/warnings.ml[304,10913+12]..[304,10913+13])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[304,10913+14]..[304,10913+16])
                                Pexp_construct "()" (lib/warnings.ml[304,10913+14]..[304,10913+16])
                                None
                          ]
                    ]
                    expression (lib/warnings.ml[305,10933+4]..[306,10951+5])
                      Pexp_sequence
                      expression (lib/warnings.ml[305,10933+4]..[305,10933+16])
                        Pexp_apply
                        expression (lib/warnings.ml[305,10933+4]..[305,10933+11])
                          Pexp_ident "restore" (lib/warnings.ml[305,10933+4]..[305,10933+11])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[305,10933+12]..[305,10933+16])
                              Pexp_ident "prev" (lib/warnings.ml[305,10933+12]..[305,10933+16])
                        ]
                      expression (lib/warnings.ml[306,10951+4]..[306,10951+5])
                        Pexp_ident "r" (lib/warnings.ml[306,10951+4]..[306,10951+5])
                  [
                    <case>
                      pattern (lib/warnings.ml[307,10957+7]..[307,10957+10])
                        Ppat_var "exn" (lib/warnings.ml[307,10957+7]..[307,10957+10])
                      expression (lib/warnings.ml[308,10971+4]..[309,10989+13])
                        Pexp_sequence
                        expression (lib/warnings.ml[308,10971+4]..[308,10971+16])
                          Pexp_apply
                          expression (lib/warnings.ml[308,10971+4]..[308,10971+11])
                            Pexp_ident "restore" (lib/warnings.ml[308,10971+4]..[308,10971+11])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[308,10971+12]..[308,10971+16])
                                Pexp_ident "prev" (lib/warnings.ml[308,10971+12]..[308,10971+16])
                          ]
                        expression (lib/warnings.ml[309,10989+4]..[309,10989+13])
                          Pexp_apply
                          expression (lib/warnings.ml[309,10989+4]..[309,10989+9])
                            Pexp_ident "raise" (lib/warnings.ml[309,10989+4]..[309,10989+9])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[309,10989+10]..[309,10989+13])
                                Pexp_ident "exn" (lib/warnings.ml[309,10989+10]..[309,10989+13])
                          ]
                  ]
    ]
  structure_item (lib/warnings.ml[311,11004+0]..[313,11047+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[311,11004+4]..[311,11004+11])
          Ppat_var "mk_lazy" (lib/warnings.ml[311,11004+4]..[311,11004+11])
        expression (lib/warnings.ml[311,11004+12]..[313,11047+27]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[311,11004+12]..[311,11004+13])
              Nolabel
              None
              pattern (lib/warnings.ml[311,11004+12]..[311,11004+13])
                Ppat_var "f" (lib/warnings.ml[311,11004+12]..[311,11004+13])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[312,11020+2]..[313,11047+27])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[312,11020+6]..[312,11020+11])
                    Ppat_var "state" (lib/warnings.ml[312,11020+6]..[312,11020+11])
                  expression (lib/warnings.ml[312,11020+14]..[312,11020+23])
                    Pexp_apply
                    expression (lib/warnings.ml[312,11020+14]..[312,11020+20])
                      Pexp_ident "backup" (lib/warnings.ml[312,11020+14]..[312,11020+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[312,11020+21]..[312,11020+23])
                          Pexp_construct "()" (lib/warnings.ml[312,11020+21]..[312,11020+23])
                          None
                    ]
              ]
              expression (lib/warnings.ml[313,11047+2]..[313,11047+27])
                Pexp_lazy
                expression (lib/warnings.ml[313,11047+7]..[313,11047+27])
                  Pexp_apply
                  expression (lib/warnings.ml[313,11047+8]..[313,11047+18])
                    Pexp_ident "with_state" (lib/warnings.ml[313,11047+8]..[313,11047+18])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[313,11047+19]..[313,11047+24])
                        Pexp_ident "state" (lib/warnings.ml[313,11047+19]..[313,11047+24])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[313,11047+25]..[313,11047+26])
                        Pexp_ident "f" (lib/warnings.ml[313,11047+25]..[313,11047+26])
                  ]
    ]
  structure_item (lib/warnings.ml[315,11076+0]..[334,11563+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[315,11076+4]..[315,11076+13])
          Ppat_var "set_alert" (lib/warnings.ml[315,11076+4]..[315,11076+13])
        expression (lib/warnings.ml[315,11076+14]..[334,11563+43]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[315,11076+14]..[315,11076+20])
              Labelled "error"
              None
              pattern (lib/warnings.ml[315,11076+15]..[315,11076+20])
                Ppat_var "error" (lib/warnings.ml[315,11076+15]..[315,11076+20])
            Pparam_val (lib/warnings.ml[315,11076+21]..[315,11076+28])
              Labelled "enable"
              None
              pattern (lib/warnings.ml[315,11076+22]..[315,11076+28])
                Ppat_var "enable" (lib/warnings.ml[315,11076+22]..[315,11076+28])
            Pparam_val (lib/warnings.ml[315,11076+29]..[315,11076+30])
              Nolabel
              None
              pattern (lib/warnings.ml[315,11076+29]..[315,11076+30])
                Ppat_var "s" (lib/warnings.ml[315,11076+29]..[315,11076+30])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[316,11109+2]..[334,11563+43])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[316,11109+6]..[316,11109+9])
                    Ppat_var "upd" (lib/warnings.ml[316,11109+6]..[316,11109+9])
                  expression (lib/warnings.ml[317,11121+4]..[329,11462+22])
                    Pexp_match
                    expression (lib/warnings.ml[317,11121+10]..[317,11121+11])
                      Pexp_ident "s" (lib/warnings.ml[317,11121+10]..[317,11121+11])
                    [
                      <case>
                        pattern (lib/warnings.ml[318,11138+6]..[318,11138+11])
                          Ppat_constant PConst_string("all",(lib/warnings.ml[318,11138+7]..[318,11138+10]),None)
                        expression (lib/warnings.ml[319,11153+8]..[319,11153+50])
                          Pexp_tuple
                          [
                            expression (lib/warnings.ml[319,11153+9]..[319,11153+37])
                              Pexp_ident "Misc.Stdlib.String.Set.empty" (lib/warnings.ml[319,11153+9]..[319,11153+37])
                            expression (lib/warnings.ml[319,11153+39]..[319,11153+49])
                              Pexp_apply
                              expression (lib/warnings.ml[319,11153+39]..[319,11153+42])
                                Pexp_ident "not" (lib/warnings.ml[319,11153+39]..[319,11153+42])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[319,11153+43]..[319,11153+49])
                                    Pexp_ident "enable" (lib/warnings.ml[319,11153+43]..[319,11153+49])
                              ]
                          ]
                      <case>
                        pattern (lib/warnings.ml[320,11204+6]..[320,11204+7])
                          Ppat_var "s" (lib/warnings.ml[320,11204+6]..[320,11204+7])
                        expression (lib/warnings.ml[321,11215+8]..[329,11462+22])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/warnings.ml[321,11215+12]..[321,11215+22])
                                Ppat_tuple
                                [
                                  pattern (lib/warnings.ml[321,11215+13]..[321,11215+16])
                                    Ppat_var "set" (lib/warnings.ml[321,11215+13]..[321,11215+16])
                                  pattern (lib/warnings.ml[321,11215+18]..[321,11215+21])
                                    Ppat_var "pos" (lib/warnings.ml[321,11215+18]..[321,11215+21])
                                ]
                              expression (lib/warnings.ml[322,11240+10]..[322,11240+70])
                                Pexp_ifthenelse
                                expression (lib/warnings.ml[322,11240+13]..[322,11240+18])
                                  Pexp_ident "error" (lib/warnings.ml[322,11240+13]..[322,11240+18])
                                expression (lib/warnings.ml[322,11240+24]..[322,11240+47])
                                  Pexp_field
                                  expression (lib/warnings.ml[322,11240+24]..[322,11240+34])
                                    Pexp_apply
                                    expression (lib/warnings.ml[322,11240+25]..[322,11240+26])
                                      Pexp_ident "!" (lib/warnings.ml[322,11240+25]..[322,11240+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[322,11240+26]..[322,11240+33])
                                          Pexp_ident "current" (lib/warnings.ml[322,11240+26]..[322,11240+33])
                                    ]
                                  "alert_errors" (lib/warnings.ml[322,11240+35]..[322,11240+47])
                                Some
                                  expression (lib/warnings.ml[322,11240+53]..[322,11240+70])
                                    Pexp_field
                                    expression (lib/warnings.ml[322,11240+53]..[322,11240+63])
                                      Pexp_apply
                                      expression (lib/warnings.ml[322,11240+54]..[322,11240+55])
                                        Pexp_ident "!" (lib/warnings.ml[322,11240+54]..[322,11240+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[322,11240+55]..[322,11240+62])
                                            Pexp_ident "current" (lib/warnings.ml[322,11240+55]..[322,11240+62])
                                      ]
                                    "alerts" (lib/warnings.ml[322,11240+64]..[322,11240+70])
                          ]
                          expression (lib/warnings.ml[324,11322+8]..[329,11462+22])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/warnings.ml[324,11322+12]..[324,11322+13])
                                  Ppat_var "f" (lib/warnings.ml[324,11322+12]..[324,11322+13])
                                expression (lib/warnings.ml[325,11338+10]..[327,11406+44])
                                  Pexp_ifthenelse
                                  expression (lib/warnings.ml[325,11338+13]..[325,11338+25])
                                    Pexp_apply
                                    expression (lib/warnings.ml[325,11338+20]..[325,11338+21])
                                      Pexp_ident "=" (lib/warnings.ml[325,11338+20]..[325,11338+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[325,11338+13]..[325,11338+19])
                                          Pexp_ident "enable" (lib/warnings.ml[325,11338+13]..[325,11338+19])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[325,11338+22]..[325,11338+25])
                                          Pexp_ident "pos" (lib/warnings.ml[325,11338+22]..[325,11338+25])
                                    ]
                                  expression (lib/warnings.ml[326,11364+15]..[326,11364+41])
                                    Pexp_ident "Misc.Stdlib.String.Set.add" (lib/warnings.ml[326,11364+15]..[326,11364+41])
                                  Some
                                    expression (lib/warnings.ml[327,11406+15]..[327,11406+44])
                                      Pexp_ident "Misc.Stdlib.String.Set.remove" (lib/warnings.ml[327,11406+15]..[327,11406+44])
                            ]
                            expression (lib/warnings.ml[329,11462+8]..[329,11462+22])
                              Pexp_tuple
                              [
                                expression (lib/warnings.ml[329,11462+9]..[329,11462+16])
                                  Pexp_apply
                                  expression (lib/warnings.ml[329,11462+9]..[329,11462+10])
                                    Pexp_ident "f" (lib/warnings.ml[329,11462+9]..[329,11462+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[329,11462+11]..[329,11462+12])
                                        Pexp_ident "s" (lib/warnings.ml[329,11462+11]..[329,11462+12])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[329,11462+13]..[329,11462+16])
                                        Pexp_ident "set" (lib/warnings.ml[329,11462+13]..[329,11462+16])
                                  ]
                                expression (lib/warnings.ml[329,11462+18]..[329,11462+21])
                                  Pexp_ident "pos" (lib/warnings.ml[329,11462+18]..[329,11462+21])
                              ]
                    ]
              ]
              expression (lib/warnings.ml[331,11490+2]..[334,11563+43])
                Pexp_ifthenelse
                expression (lib/warnings.ml[331,11490+5]..[331,11490+10])
                  Pexp_ident "error" (lib/warnings.ml[331,11490+5]..[331,11490+10])
                expression (lib/warnings.ml[332,11506+4]..[332,11506+49])
                  Pexp_apply
                  expression (lib/warnings.ml[332,11506+12]..[332,11506+14])
                    Pexp_ident ":=" (lib/warnings.ml[332,11506+12]..[332,11506+14])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[332,11506+4]..[332,11506+11])
                        Pexp_ident "current" (lib/warnings.ml[332,11506+4]..[332,11506+11])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[332,11506+15]..[332,11506+49])
                        Pexp_record
                        [
                          "alert_errors" (lib/warnings.ml[332,11506+32]..[332,11506+44])
                            expression (lib/warnings.ml[332,11506+45]..[332,11506+48])
                              Pexp_ident "upd" (lib/warnings.ml[332,11506+45]..[332,11506+48])
                        ]
                        Some
                          expression (lib/warnings.ml[332,11506+16]..[332,11506+26])
                            Pexp_apply
                            expression (lib/warnings.ml[332,11506+17]..[332,11506+18])
                              Pexp_ident "!" (lib/warnings.ml[332,11506+17]..[332,11506+18])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[332,11506+18]..[332,11506+25])
                                  Pexp_ident "current" (lib/warnings.ml[332,11506+18]..[332,11506+25])
                            ]
                  ]
                Some
                  expression (lib/warnings.ml[334,11563+4]..[334,11563+43])
                    Pexp_apply
                    expression (lib/warnings.ml[334,11563+12]..[334,11563+14])
                      Pexp_ident ":=" (lib/warnings.ml[334,11563+12]..[334,11563+14])
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[334,11563+4]..[334,11563+11])
                          Pexp_ident "current" (lib/warnings.ml[334,11563+4]..[334,11563+11])
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[334,11563+15]..[334,11563+43])
                          Pexp_record
                          [
                            "alerts" (lib/warnings.ml[334,11563+32]..[334,11563+38])
                              expression (lib/warnings.ml[334,11563+39]..[334,11563+42])
                                Pexp_ident "upd" (lib/warnings.ml[334,11563+39]..[334,11563+42])
                          ]
                          Some
                            expression (lib/warnings.ml[334,11563+16]..[334,11563+26])
                              Pexp_apply
                              expression (lib/warnings.ml[334,11563+17]..[334,11563+18])
                                Pexp_ident "!" (lib/warnings.ml[334,11563+17]..[334,11563+18])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[334,11563+18]..[334,11563+25])
                                    Pexp_ident "current" (lib/warnings.ml[334,11563+18]..[334,11563+25])
                              ]
                    ]
    ]
  structure_item (lib/warnings.ml[336,11608+0]..[366,12690+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[336,11608+4]..[336,11608+22])
          Ppat_var "parse_alert_option" (lib/warnings.ml[336,11608+4]..[336,11608+22])
        expression (lib/warnings.ml[336,11608+23]..[366,12690+8]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[336,11608+23]..[336,11608+24])
              Nolabel
              None
              pattern (lib/warnings.ml[336,11608+23]..[336,11608+24])
                Ppat_var "s" (lib/warnings.ml[336,11608+23]..[336,11608+24])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[337,11635+2]..[366,12690+8])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[337,11635+6]..[337,11635+7])
                    Ppat_var "n" (lib/warnings.ml[337,11635+6]..[337,11635+7])
                  expression (lib/warnings.ml[337,11635+10]..[337,11635+25])
                    Pexp_apply
                    expression (lib/warnings.ml[337,11635+10]..[337,11635+23])
                      Pexp_ident "String.length" (lib/warnings.ml[337,11635+10]..[337,11635+23])
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[337,11635+24]..[337,11635+25])
                          Pexp_ident "s" (lib/warnings.ml[337,11635+24]..[337,11635+25])
                    ]
              ]
              expression (lib/warnings.ml[338,11664+2]..[366,12690+8])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/warnings.ml[338,11664+6]..[338,11664+13])
                      Ppat_var "id_char" (lib/warnings.ml[338,11664+6]..[338,11664+13])
                    expression (lib/warnings.ml[338,11664+16]..[340,11747+16])
                      Pexp_function
                      []
                      None
                      Pfunction_cases (lib/warnings.ml[338,11664+16]..[340,11747+16])
                        [
                          <case>
                            pattern (lib/warnings.ml[339,11689+6]..[339,11689+49])
                              Ppat_or
                              pattern (lib/warnings.ml[339,11689+6]..[339,11689+38])
                                Ppat_or
                                pattern (lib/warnings.ml[339,11689+6]..[339,11689+31])
                                  Ppat_or
                                  pattern (lib/warnings.ml[339,11689+6]..[339,11689+25])
                                    Ppat_or
                                    pattern (lib/warnings.ml[339,11689+6]..[339,11689+14])
                                      Ppat_interval PConst_char 61..PConst_char 7a
                                    pattern (lib/warnings.ml[339,11689+17]..[339,11689+25])
                                      Ppat_interval PConst_char 41..PConst_char 5a
                                  pattern (lib/warnings.ml[339,11689+28]..[339,11689+31])
                                    Ppat_constant PConst_char 5f
                                pattern (lib/warnings.ml[339,11689+34]..[339,11689+38])
                                  Ppat_constant PConst_char 27
                              pattern (lib/warnings.ml[339,11689+41]..[339,11689+49])
                                Ppat_interval PConst_char 30..PConst_char 39
                            expression (lib/warnings.ml[339,11689+53]..[339,11689+57])
                              Pexp_construct "true" (lib/warnings.ml[339,11689+53]..[339,11689+57])
                              None
                          <case>
                            pattern (lib/warnings.ml[340,11747+6]..[340,11747+7])
                              Ppat_any
                            expression (lib/warnings.ml[340,11747+11]..[340,11747+16])
                              Pexp_construct "false" (lib/warnings.ml[340,11747+11]..[340,11747+16])
                              None
                        ]
                ]
                expression (lib/warnings.ml[342,11769+2]..[366,12690+8])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (lib/warnings.ml[342,11769+10]..[342,11769+18])
                        Ppat_var "parse_id" (lib/warnings.ml[342,11769+10]..[342,11769+18])
                      expression (lib/warnings.ml[342,11769+19]..[343,11792+58]) ghost
                        Pexp_function
                        [
                          Pparam_val (lib/warnings.ml[342,11769+19]..[342,11769+20])
                            Nolabel
                            None
                            pattern (lib/warnings.ml[342,11769+19]..[342,11769+20])
                              Ppat_var "i" (lib/warnings.ml[342,11769+19]..[342,11769+20])
                        ]
                        None
                        Pfunction_body
                          expression (lib/warnings.ml[343,11792+4]..[343,11792+58])
                            Pexp_ifthenelse
                            expression (lib/warnings.ml[343,11792+7]..[343,11792+29])
                              Pexp_apply
                              expression (lib/warnings.ml[343,11792+13]..[343,11792+15])
                                Pexp_ident "&&" (lib/warnings.ml[343,11792+13]..[343,11792+15])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[343,11792+7]..[343,11792+12])
                                    Pexp_apply
                                    expression (lib/warnings.ml[343,11792+9]..[343,11792+10])
                                      Pexp_ident "<" (lib/warnings.ml[343,11792+9]..[343,11792+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[343,11792+7]..[343,11792+8])
                                          Pexp_ident "i" (lib/warnings.ml[343,11792+7]..[343,11792+8])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[343,11792+11]..[343,11792+12])
                                          Pexp_ident "n" (lib/warnings.ml[343,11792+11]..[343,11792+12])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[343,11792+16]..[343,11792+29])
                                    Pexp_apply
                                    expression (lib/warnings.ml[343,11792+16]..[343,11792+23])
                                      Pexp_ident "id_char" (lib/warnings.ml[343,11792+16]..[343,11792+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[343,11792+24]..[343,11792+29])
                                          Pexp_apply
                                          expression (lib/warnings.ml[343,11792+24]..[343,11792+29]) ghost
                                            Pexp_ident "String.get" (lib/warnings.ml[343,11792+24]..[343,11792+29]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[343,11792+24]..[343,11792+25])
                                                Pexp_ident "s" (lib/warnings.ml[343,11792+24]..[343,11792+25])
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[343,11792+27]..[343,11792+28])
                                                Pexp_ident "i" (lib/warnings.ml[343,11792+27]..[343,11792+28])
                                          ]
                                    ]
                              ]
                            expression (lib/warnings.ml[343,11792+35]..[343,11792+51])
                              Pexp_apply
                              expression (lib/warnings.ml[343,11792+35]..[343,11792+43])
                                Pexp_ident "parse_id" (lib/warnings.ml[343,11792+35]..[343,11792+43])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[343,11792+44]..[343,11792+51])
                                    Pexp_apply
                                    expression (lib/warnings.ml[343,11792+47]..[343,11792+48])
                                      Pexp_ident "+" (lib/warnings.ml[343,11792+47]..[343,11792+48])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[343,11792+45]..[343,11792+46])
                                          Pexp_ident "i" (lib/warnings.ml[343,11792+45]..[343,11792+46])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[343,11792+49]..[343,11792+50])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                              ]
                            Some
                              expression (lib/warnings.ml[343,11792+57]..[343,11792+58])
                                Pexp_ident "i" (lib/warnings.ml[343,11792+57]..[343,11792+58])
                  ]
                  expression (lib/warnings.ml[345,11856+2]..[366,12690+8])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (lib/warnings.ml[345,11856+10]..[345,11856+14])
                          Ppat_var "scan" (lib/warnings.ml[345,11856+10]..[345,11856+14])
                        expression (lib/warnings.ml[345,11856+15]..[358,12448+64]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/warnings.ml[345,11856+15]..[345,11856+16])
                              Nolabel
                              None
                              pattern (lib/warnings.ml[345,11856+15]..[345,11856+16])
                                Ppat_var "i" (lib/warnings.ml[345,11856+15]..[345,11856+16])
                          ]
                          None
                          Pfunction_body
                            expression (lib/warnings.ml[346,11875+4]..[358,12448+64])
                              Pexp_ifthenelse
                              expression (lib/warnings.ml[346,11875+7]..[346,11875+12])
                                Pexp_apply
                                expression (lib/warnings.ml[346,11875+9]..[346,11875+10])
                                  Pexp_ident "=" (lib/warnings.ml[346,11875+9]..[346,11875+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[346,11875+7]..[346,11875+8])
                                      Pexp_ident "i" (lib/warnings.ml[346,11875+7]..[346,11875+8])
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[346,11875+11]..[346,11875+12])
                                      Pexp_ident "n" (lib/warnings.ml[346,11875+11]..[346,11875+12])
                                ]
                              expression (lib/warnings.ml[346,11875+18]..[346,11875+20])
                                Pexp_construct "()" (lib/warnings.ml[346,11875+18]..[346,11875+20])
                                None
                              Some
                                expression (lib/warnings.ml[347,11896+9]..[358,12448+64])
                                  Pexp_ifthenelse
                                  expression (lib/warnings.ml[347,11896+12]..[347,11896+21])
                                    Pexp_apply
                                    expression (lib/warnings.ml[347,11896+18]..[347,11896+19])
                                      Pexp_ident "=" (lib/warnings.ml[347,11896+18]..[347,11896+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[347,11896+12]..[347,11896+17])
                                          Pexp_apply
                                          expression (lib/warnings.ml[347,11896+14]..[347,11896+15])
                                            Pexp_ident "+" (lib/warnings.ml[347,11896+14]..[347,11896+15])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[347,11896+12]..[347,11896+13])
                                                Pexp_ident "i" (lib/warnings.ml[347,11896+12]..[347,11896+13])
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[347,11896+16]..[347,11896+17])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[347,11896+20]..[347,11896+21])
                                          Pexp_ident "n" (lib/warnings.ml[347,11896+20]..[347,11896+21])
                                    ]
                                  expression (lib/warnings.ml[347,11896+27]..[347,11896+78])
                                    Pexp_apply
                                    expression (lib/warnings.ml[347,11896+27]..[347,11896+32])
                                      Pexp_ident "raise" (lib/warnings.ml[347,11896+27]..[347,11896+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[347,11896+33]..[347,11896+78])
                                          Pexp_construct "Arg.Bad" (lib/warnings.ml[347,11896+34]..[347,11896+41])
                                          Some
                                            expression (lib/warnings.ml[347,11896+42]..[347,11896+77])
                                              Pexp_constant PConst_string("Ill-formed list of alert settings",(lib/warnings.ml[347,11896+43]..[347,11896+76]),None)
                                    ]
                                  Some
                                    expression (lib/warnings.ml[348,11975+9]..[358,12448+64])
                                      Pexp_match
                                      expression (lib/warnings.ml[348,11975+15]..[348,11975+29])
                                        Pexp_tuple
                                        [
                                          expression (lib/warnings.ml[348,11975+15]..[348,11975+20])
                                            Pexp_apply
                                            expression (lib/warnings.ml[348,11975+15]..[348,11975+20]) ghost
                                              Pexp_ident "String.get" (lib/warnings.ml[348,11975+15]..[348,11975+20]) ghost
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[348,11975+15]..[348,11975+16])
                                                  Pexp_ident "s" (lib/warnings.ml[348,11975+15]..[348,11975+16])
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[348,11975+18]..[348,11975+19])
                                                  Pexp_ident "i" (lib/warnings.ml[348,11975+18]..[348,11975+19])
                                            ]
                                          expression (lib/warnings.ml[348,11975+22]..[348,11975+29])
                                            Pexp_apply
                                            expression (lib/warnings.ml[348,11975+22]..[348,11975+29]) ghost
                                              Pexp_ident "String.get" (lib/warnings.ml[348,11975+22]..[348,11975+29]) ghost
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[348,11975+22]..[348,11975+23])
                                                  Pexp_ident "s" (lib/warnings.ml[348,11975+22]..[348,11975+23])
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[348,11975+25]..[348,11975+28])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[348,11975+26]..[348,11975+27])
                                                    Pexp_ident "+" (lib/warnings.ml[348,11975+26]..[348,11975+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[348,11975+25]..[348,11975+26])
                                                        Pexp_ident "i" (lib/warnings.ml[348,11975+25]..[348,11975+26])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[348,11975+27]..[348,11975+28])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                            ]
                                        ]
                                      [
                                        <case>
                                          pattern (lib/warnings.ml[349,12010+8]..[349,12010+16])
                                            Ppat_tuple
                                            [
                                              pattern (lib/warnings.ml[349,12010+8]..[349,12010+11])
                                                Ppat_constant PConst_char 2b
                                              pattern (lib/warnings.ml[349,12010+13]..[349,12010+16])
                                                Ppat_constant PConst_char 2b
                                            ]
                                          expression (lib/warnings.ml[349,12010+20]..[349,12010+67])
                                            Pexp_apply
                                            expression (lib/warnings.ml[349,12010+20]..[349,12010+22])
                                              Pexp_ident "id" (lib/warnings.ml[349,12010+20]..[349,12010+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[349,12010+23]..[349,12010+59])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[349,12010+24]..[349,12010+33])
                                                    Pexp_ident "set_alert" (lib/warnings.ml[349,12010+24]..[349,12010+33])
                                                  [
                                                    <arg>
                                                    Labelled "error"
                                                      expression (lib/warnings.ml[349,12010+41]..[349,12010+45])
                                                        Pexp_construct "true" (lib/warnings.ml[349,12010+41]..[349,12010+45])
                                                        None
                                                    <arg>
                                                    Labelled "enable"
                                                      expression (lib/warnings.ml[349,12010+54]..[349,12010+58])
                                                        Pexp_construct "true" (lib/warnings.ml[349,12010+54]..[349,12010+58])
                                                        None
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[349,12010+60]..[349,12010+67])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[349,12010+63]..[349,12010+64])
                                                    Pexp_ident "+" (lib/warnings.ml[349,12010+63]..[349,12010+64])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[349,12010+61]..[349,12010+62])
                                                        Pexp_ident "i" (lib/warnings.ml[349,12010+61]..[349,12010+62])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[349,12010+65]..[349,12010+66])
                                                        Pexp_constant PConst_int (2,None)
                                                  ]
                                            ]
                                        <case>
                                          pattern (lib/warnings.ml[350,12078+8]..[350,12078+14])
                                            Ppat_tuple
                                            [
                                              pattern (lib/warnings.ml[350,12078+8]..[350,12078+11])
                                                Ppat_constant PConst_char 2b
                                              pattern (lib/warnings.ml[350,12078+13]..[350,12078+14])
                                                Ppat_any
                                            ]
                                          expression (lib/warnings.ml[350,12078+18]..[350,12078+66])
                                            Pexp_apply
                                            expression (lib/warnings.ml[350,12078+18]..[350,12078+20])
                                              Pexp_ident "id" (lib/warnings.ml[350,12078+18]..[350,12078+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[350,12078+21]..[350,12078+58])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[350,12078+22]..[350,12078+31])
                                                    Pexp_ident "set_alert" (lib/warnings.ml[350,12078+22]..[350,12078+31])
                                                  [
                                                    <arg>
                                                    Labelled "error"
                                                      expression (lib/warnings.ml[350,12078+39]..[350,12078+44])
                                                        Pexp_construct "false" (lib/warnings.ml[350,12078+39]..[350,12078+44])
                                                        None
                                                    <arg>
                                                    Labelled "enable"
                                                      expression (lib/warnings.ml[350,12078+53]..[350,12078+57])
                                                        Pexp_construct "true" (lib/warnings.ml[350,12078+53]..[350,12078+57])
                                                        None
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[350,12078+59]..[350,12078+66])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[350,12078+62]..[350,12078+63])
                                                    Pexp_ident "+" (lib/warnings.ml[350,12078+62]..[350,12078+63])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[350,12078+60]..[350,12078+61])
                                                        Pexp_ident "i" (lib/warnings.ml[350,12078+60]..[350,12078+61])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[350,12078+64]..[350,12078+65])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                            ]
                                        <case>
                                          pattern (lib/warnings.ml[351,12145+8]..[351,12145+16])
                                            Ppat_tuple
                                            [
                                              pattern (lib/warnings.ml[351,12145+8]..[351,12145+11])
                                                Ppat_constant PConst_char 2d
                                              pattern (lib/warnings.ml[351,12145+13]..[351,12145+16])
                                                Ppat_constant PConst_char 2d
                                            ]
                                          expression (lib/warnings.ml[351,12145+20]..[351,12145+68])
                                            Pexp_apply
                                            expression (lib/warnings.ml[351,12145+20]..[351,12145+22])
                                              Pexp_ident "id" (lib/warnings.ml[351,12145+20]..[351,12145+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[351,12145+23]..[351,12145+60])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[351,12145+24]..[351,12145+33])
                                                    Pexp_ident "set_alert" (lib/warnings.ml[351,12145+24]..[351,12145+33])
                                                  [
                                                    <arg>
                                                    Labelled "error"
                                                      expression (lib/warnings.ml[351,12145+41]..[351,12145+45])
                                                        Pexp_construct "true" (lib/warnings.ml[351,12145+41]..[351,12145+45])
                                                        None
                                                    <arg>
                                                    Labelled "enable"
                                                      expression (lib/warnings.ml[351,12145+54]..[351,12145+59])
                                                        Pexp_construct "false" (lib/warnings.ml[351,12145+54]..[351,12145+59])
                                                        None
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[351,12145+61]..[351,12145+68])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[351,12145+64]..[351,12145+65])
                                                    Pexp_ident "+" (lib/warnings.ml[351,12145+64]..[351,12145+65])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[351,12145+62]..[351,12145+63])
                                                        Pexp_ident "i" (lib/warnings.ml[351,12145+62]..[351,12145+63])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[351,12145+66]..[351,12145+67])
                                                        Pexp_constant PConst_int (2,None)
                                                  ]
                                            ]
                                        <case>
                                          pattern (lib/warnings.ml[352,12214+8]..[352,12214+14])
                                            Ppat_tuple
                                            [
                                              pattern (lib/warnings.ml[352,12214+8]..[352,12214+11])
                                                Ppat_constant PConst_char 2d
                                              pattern (lib/warnings.ml[352,12214+13]..[352,12214+14])
                                                Ppat_any
                                            ]
                                          expression (lib/warnings.ml[352,12214+18]..[352,12214+67])
                                            Pexp_apply
                                            expression (lib/warnings.ml[352,12214+18]..[352,12214+20])
                                              Pexp_ident "id" (lib/warnings.ml[352,12214+18]..[352,12214+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[352,12214+21]..[352,12214+59])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[352,12214+22]..[352,12214+31])
                                                    Pexp_ident "set_alert" (lib/warnings.ml[352,12214+22]..[352,12214+31])
                                                  [
                                                    <arg>
                                                    Labelled "error"
                                                      expression (lib/warnings.ml[352,12214+39]..[352,12214+44])
                                                        Pexp_construct "false" (lib/warnings.ml[352,12214+39]..[352,12214+44])
                                                        None
                                                    <arg>
                                                    Labelled "enable"
                                                      expression (lib/warnings.ml[352,12214+53]..[352,12214+58])
                                                        Pexp_construct "false" (lib/warnings.ml[352,12214+53]..[352,12214+58])
                                                        None
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[352,12214+60]..[352,12214+67])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[352,12214+63]..[352,12214+64])
                                                    Pexp_ident "+" (lib/warnings.ml[352,12214+63]..[352,12214+64])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[352,12214+61]..[352,12214+62])
                                                        Pexp_ident "i" (lib/warnings.ml[352,12214+61]..[352,12214+62])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[352,12214+65]..[352,12214+66])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                            ]
                                        <case>
                                          pattern (lib/warnings.ml[353,12282+8]..[353,12282+14])
                                            Ppat_tuple
                                            [
                                              pattern (lib/warnings.ml[353,12282+8]..[353,12282+11])
                                                Ppat_constant PConst_char 40
                                              pattern (lib/warnings.ml[353,12282+13]..[353,12282+14])
                                                Ppat_any
                                            ]
                                          expression (lib/warnings.ml[354,12300+10]..[357,12428+19])
                                            Pexp_apply
                                            expression (lib/warnings.ml[354,12300+10]..[354,12300+12])
                                              Pexp_ident "id" (lib/warnings.ml[354,12300+10]..[354,12300+12])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[354,12300+13]..[356,12375+52])
                                                  Pexp_function
                                                  [
                                                    Pparam_val (lib/warnings.ml[354,12300+18]..[354,12300+19])
                                                      Nolabel
                                                      None
                                                      pattern (lib/warnings.ml[354,12300+18]..[354,12300+19])
                                                        Ppat_var "s" (lib/warnings.ml[354,12300+18]..[354,12300+19])
                                                  ]
                                                  None
                                                  Pfunction_body
                                                    expression (lib/warnings.ml[355,12323+14]..[356,12375+51])
                                                      Pexp_sequence
                                                      expression (lib/warnings.ml[355,12323+14]..[355,12323+50])
                                                        Pexp_apply
                                                        expression (lib/warnings.ml[355,12323+14]..[355,12323+23])
                                                          Pexp_ident "set_alert" (lib/warnings.ml[355,12323+14]..[355,12323+23])
                                                        [
                                                          <arg>
                                                          Labelled "error"
                                                            expression (lib/warnings.ml[355,12323+31]..[355,12323+35])
                                                              Pexp_construct "true" (lib/warnings.ml[355,12323+31]..[355,12323+35])
                                                              None
                                                          <arg>
                                                          Labelled "enable"
                                                            expression (lib/warnings.ml[355,12323+44]..[355,12323+48])
                                                              Pexp_construct "true" (lib/warnings.ml[355,12323+44]..[355,12323+48])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/warnings.ml[355,12323+49]..[355,12323+50])
                                                              Pexp_ident "s" (lib/warnings.ml[355,12323+49]..[355,12323+50])
                                                        ]
                                                      expression (lib/warnings.ml[356,12375+14]..[356,12375+51])
                                                        Pexp_apply
                                                        expression (lib/warnings.ml[356,12375+14]..[356,12375+23])
                                                          Pexp_ident "set_alert" (lib/warnings.ml[356,12375+14]..[356,12375+23])
                                                        [
                                                          <arg>
                                                          Labelled "error"
                                                            expression (lib/warnings.ml[356,12375+31]..[356,12375+36])
                                                              Pexp_construct "false" (lib/warnings.ml[356,12375+31]..[356,12375+36])
                                                              None
                                                          <arg>
                                                          Labelled "enable"
                                                            expression (lib/warnings.ml[356,12375+45]..[356,12375+49])
                                                              Pexp_construct "true" (lib/warnings.ml[356,12375+45]..[356,12375+49])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/warnings.ml[356,12375+50]..[356,12375+51])
                                                              Pexp_ident "s" (lib/warnings.ml[356,12375+50]..[356,12375+51])
                                                        ]
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[357,12428+12]..[357,12428+19])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[357,12428+15]..[357,12428+16])
                                                    Pexp_ident "+" (lib/warnings.ml[357,12428+15]..[357,12428+16])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[357,12428+13]..[357,12428+14])
                                                        Pexp_ident "i" (lib/warnings.ml[357,12428+13]..[357,12428+14])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[357,12428+17]..[357,12428+18])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                            ]
                                        <case>
                                          pattern (lib/warnings.ml[358,12448+8]..[358,12448+9])
                                            Ppat_any
                                          expression (lib/warnings.ml[358,12448+13]..[358,12448+64])
                                            Pexp_apply
                                            expression (lib/warnings.ml[358,12448+13]..[358,12448+18])
                                              Pexp_ident "raise" (lib/warnings.ml[358,12448+13]..[358,12448+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[358,12448+19]..[358,12448+64])
                                                  Pexp_construct "Arg.Bad" (lib/warnings.ml[358,12448+20]..[358,12448+27])
                                                  Some
                                                    expression (lib/warnings.ml[358,12448+28]..[358,12448+63])
                                                      Pexp_constant PConst_string("Ill-formed list of alert settings",(lib/warnings.ml[358,12448+29]..[358,12448+62]),None)
                                            ]
                                      ]
                      <def>
                        pattern (lib/warnings.ml[359,12513+6]..[359,12513+8])
                          Ppat_var "id" (lib/warnings.ml[359,12513+6]..[359,12513+8])
                        expression (lib/warnings.ml[359,12513+9]..[364,12674+10]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/warnings.ml[359,12513+9]..[359,12513+10])
                              Nolabel
                              None
                              pattern (lib/warnings.ml[359,12513+9]..[359,12513+10])
                                Ppat_var "f" (lib/warnings.ml[359,12513+9]..[359,12513+10])
                            Pparam_val (lib/warnings.ml[359,12513+11]..[359,12513+12])
                              Nolabel
                              None
                              pattern (lib/warnings.ml[359,12513+11]..[359,12513+12])
                                Ppat_var "i" (lib/warnings.ml[359,12513+11]..[359,12513+12])
                          ]
                          None
                          Pfunction_body
                            expression (lib/warnings.ml[360,12528+4]..[364,12674+10])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/warnings.ml[360,12528+8]..[360,12528+9])
                                    Ppat_var "j" (lib/warnings.ml[360,12528+8]..[360,12528+9])
                                  expression (lib/warnings.ml[360,12528+12]..[360,12528+22])
                                    Pexp_apply
                                    expression (lib/warnings.ml[360,12528+12]..[360,12528+20])
                                      Pexp_ident "parse_id" (lib/warnings.ml[360,12528+12]..[360,12528+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[360,12528+21]..[360,12528+22])
                                          Pexp_ident "i" (lib/warnings.ml[360,12528+21]..[360,12528+22])
                                    ]
                              ]
                              expression (lib/warnings.ml[361,12554+4]..[364,12674+10])
                                Pexp_sequence
                                expression (lib/warnings.ml[361,12554+4]..[361,12554+69])
                                  Pexp_ifthenelse
                                  expression (lib/warnings.ml[361,12554+7]..[361,12554+12])
                                    Pexp_apply
                                    expression (lib/warnings.ml[361,12554+9]..[361,12554+10])
                                      Pexp_ident "=" (lib/warnings.ml[361,12554+9]..[361,12554+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[361,12554+7]..[361,12554+8])
                                          Pexp_ident "j" (lib/warnings.ml[361,12554+7]..[361,12554+8])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[361,12554+11]..[361,12554+12])
                                          Pexp_ident "i" (lib/warnings.ml[361,12554+11]..[361,12554+12])
                                    ]
                                  expression (lib/warnings.ml[361,12554+18]..[361,12554+69])
                                    Pexp_apply
                                    expression (lib/warnings.ml[361,12554+18]..[361,12554+23])
                                      Pexp_ident "raise" (lib/warnings.ml[361,12554+18]..[361,12554+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[361,12554+24]..[361,12554+69])
                                          Pexp_construct "Arg.Bad" (lib/warnings.ml[361,12554+25]..[361,12554+32])
                                          Some
                                            expression (lib/warnings.ml[361,12554+33]..[361,12554+68])
                                              Pexp_constant PConst_string("Ill-formed list of alert settings",(lib/warnings.ml[361,12554+34]..[361,12554+67]),None)
                                    ]
                                  None
                                expression (lib/warnings.ml[362,12625+4]..[364,12674+10])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/warnings.ml[362,12625+8]..[362,12625+10])
                                        Ppat_var "id" (lib/warnings.ml[362,12625+8]..[362,12625+10])
                                      expression (lib/warnings.ml[362,12625+13]..[362,12625+35])
                                        Pexp_apply
                                        expression (lib/warnings.ml[362,12625+13]..[362,12625+23])
                                          Pexp_ident "String.sub" (lib/warnings.ml[362,12625+13]..[362,12625+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[362,12625+24]..[362,12625+25])
                                              Pexp_ident "s" (lib/warnings.ml[362,12625+24]..[362,12625+25])
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[362,12625+26]..[362,12625+27])
                                              Pexp_ident "i" (lib/warnings.ml[362,12625+26]..[362,12625+27])
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[362,12625+28]..[362,12625+35])
                                              Pexp_apply
                                              expression (lib/warnings.ml[362,12625+31]..[362,12625+32])
                                                Pexp_ident "-" (lib/warnings.ml[362,12625+31]..[362,12625+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[362,12625+29]..[362,12625+30])
                                                    Pexp_ident "j" (lib/warnings.ml[362,12625+29]..[362,12625+30])
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[362,12625+33]..[362,12625+34])
                                                    Pexp_ident "i" (lib/warnings.ml[362,12625+33]..[362,12625+34])
                                              ]
                                        ]
                                  ]
                                  expression (lib/warnings.ml[363,12664+4]..[364,12674+10])
                                    Pexp_sequence
                                    expression (lib/warnings.ml[363,12664+4]..[363,12664+8])
                                      Pexp_apply
                                      expression (lib/warnings.ml[363,12664+4]..[363,12664+5])
                                        Pexp_ident "f" (lib/warnings.ml[363,12664+4]..[363,12664+5])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[363,12664+6]..[363,12664+8])
                                            Pexp_ident "id" (lib/warnings.ml[363,12664+6]..[363,12664+8])
                                      ]
                                    expression (lib/warnings.ml[364,12674+4]..[364,12674+10])
                                      Pexp_apply
                                      expression (lib/warnings.ml[364,12674+4]..[364,12674+8])
                                        Pexp_ident "scan" (lib/warnings.ml[364,12674+4]..[364,12674+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[364,12674+9]..[364,12674+10])
                                            Pexp_ident "j" (lib/warnings.ml[364,12674+9]..[364,12674+10])
                                      ]
                    ]
                    expression (lib/warnings.ml[366,12690+2]..[366,12690+8])
                      Pexp_apply
                      expression (lib/warnings.ml[366,12690+2]..[366,12690+6])
                        Pexp_ident "scan" (lib/warnings.ml[366,12690+2]..[366,12690+6])
                      [
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[366,12690+7]..[366,12690+8])
                            Pexp_constant PConst_int (0,None)
                      ]
    ]
  structure_item (lib/warnings.ml[368,12700+0]..[371,12754+11])
    Pstr_type Rec
    [
      type_declaration "modifier" (lib/warnings.ml[368,12700+5]..[368,12700+13]) (lib/warnings.ml[368,12700+0]..[371,12754+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/warnings.ml[369,12716+2]..[369,12716+7])
                "Set" (lib/warnings.ml[369,12716+4]..[369,12716+7])
                attribute "ocaml.doc"
                  [
                    structure_item (lib/warnings.ml[369,12716+8]..[369,12716+17])
                      Pstr_eval
                      expression (lib/warnings.ml[369,12716+8]..[369,12716+17])
                        Pexp_constant PConst_string(" +a ",(lib/warnings.ml[369,12716+8]..[369,12716+17]),None)
                  ]
                []
                None
              (lib/warnings.ml[370,12734+2]..[370,12734+9])
                "Clear" (lib/warnings.ml[370,12734+4]..[370,12734+9])
                attribute "ocaml.doc"
                  [
                    structure_item (lib/warnings.ml[370,12734+10]..[370,12734+19])
                      Pstr_eval
                      expression (lib/warnings.ml[370,12734+10]..[370,12734+19])
                        Pexp_constant PConst_string(" -a ",(lib/warnings.ml[370,12734+10]..[370,12734+19]),None)
                  ]
                []
                None
              (lib/warnings.ml[371,12754+2]..[371,12754+11])
                "Set_all" (lib/warnings.ml[371,12754+4]..[371,12754+11])
                attribute "ocaml.doc"
                  [
                    structure_item (lib/warnings.ml[371,12754+12]..[371,12754+21])
                      Pstr_eval
                      expression (lib/warnings.ml[371,12754+12]..[371,12754+21])
                        Pexp_constant PConst_string(" @a ",(lib/warnings.ml[371,12754+12]..[371,12754+21]),None)
                  ]
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[373,12777+0]..[375,12827+31])
    Pstr_type Rec
    [
      type_declaration "token" (lib/warnings.ml[373,12777+5]..[373,12777+10]) (lib/warnings.ml[373,12777+0]..[375,12827+31])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/warnings.ml[374,12790+2]..[374,12790+36])
                "Letter" (lib/warnings.ml[374,12790+4]..[374,12790+10])
                [
                  core_type (lib/warnings.ml[374,12790+14]..[374,12790+18])
                    Ptyp_constr "char" (lib/warnings.ml[374,12790+14]..[374,12790+18])
                    []
                  core_type (lib/warnings.ml[374,12790+21]..[374,12790+36])
                    Ptyp_constr "option" (lib/warnings.ml[374,12790+30]..[374,12790+36])
                    [
                      core_type (lib/warnings.ml[374,12790+21]..[374,12790+29])
                        Ptyp_constr "modifier" (lib/warnings.ml[374,12790+21]..[374,12790+29])
                        []
                    ]
                ]
                None
              (lib/warnings.ml[375,12827+2]..[375,12827+31])
                "Num" (lib/warnings.ml[375,12827+4]..[375,12827+7])
                [
                  core_type (lib/warnings.ml[375,12827+11]..[375,12827+14])
                    Ptyp_constr "int" (lib/warnings.ml[375,12827+11]..[375,12827+14])
                    []
                  core_type (lib/warnings.ml[375,12827+17]..[375,12827+20])
                    Ptyp_constr "int" (lib/warnings.ml[375,12827+17]..[375,12827+20])
                    []
                  core_type (lib/warnings.ml[375,12827+23]..[375,12827+31])
                    Ptyp_constr "modifier" (lib/warnings.ml[375,12827+23]..[375,12827+31])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[377,12860+0]..[379,12947+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[377,12860+4]..[377,12860+21])
          Ppat_var "ghost_loc_in_file" (lib/warnings.ml[377,12860+4]..[377,12860+21])
        expression (lib/warnings.ml[377,12860+22]..[379,12947+54]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[377,12860+22]..[377,12860+26])
              Nolabel
              None
              pattern (lib/warnings.ml[377,12860+22]..[377,12860+26])
                Ppat_var "name" (lib/warnings.ml[377,12860+22]..[377,12860+26])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[378,12889+2]..[379,12947+54])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[378,12889+6]..[378,12889+9])
                    Ppat_var "pos" (lib/warnings.ml[378,12889+6]..[378,12889+9])
                  expression (lib/warnings.ml[378,12889+12]..[378,12889+54])
                    Pexp_record
                    [
                      "pos_fname" (lib/warnings.ml[378,12889+36]..[378,12889+45])
                        expression (lib/warnings.ml[378,12889+48]..[378,12889+52])
                          Pexp_ident "name" (lib/warnings.ml[378,12889+48]..[378,12889+52])
                    ]
                    Some
                      expression (lib/warnings.ml[378,12889+14]..[378,12889+30])
                        Pexp_ident "Lexing.dummy_pos" (lib/warnings.ml[378,12889+14]..[378,12889+30])
              ]
              expression (lib/warnings.ml[379,12947+2]..[379,12947+54])
                Pexp_record
                [
                  "loc_start" (lib/warnings.ml[379,12947+4]..[379,12947+13])
                    expression (lib/warnings.ml[379,12947+16]..[379,12947+19])
                      Pexp_ident "pos" (lib/warnings.ml[379,12947+16]..[379,12947+19])
                  "loc_end" (lib/warnings.ml[379,12947+21]..[379,12947+28])
                    expression (lib/warnings.ml[379,12947+31]..[379,12947+34])
                      Pexp_ident "pos" (lib/warnings.ml[379,12947+31]..[379,12947+34])
                  "loc_ghost" (lib/warnings.ml[379,12947+36]..[379,12947+45])
                    expression (lib/warnings.ml[379,12947+48]..[379,12947+52])
                      Pexp_construct "true" (lib/warnings.ml[379,12947+48]..[379,12947+52])
                      None
                ]
                None
    ]
  structure_item (lib/warnings.ml[381,13003+0]..[448,15341+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[381,13003+4]..[381,13003+16])
          Ppat_var "letter_alert" (lib/warnings.ml[381,13003+4]..[381,13003+16])
        expression (lib/warnings.ml[381,13003+17]..[448,15341+7]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[381,13003+17]..[381,13003+23])
              Nolabel
              None
              pattern (lib/warnings.ml[381,13003+17]..[381,13003+23])
                Ppat_var "tokens" (lib/warnings.ml[381,13003+17]..[381,13003+23])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[382,13029+2]..[448,15341+7])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[382,13029+6]..[382,13029+24])
                    Ppat_var "print_warning_char" (lib/warnings.ml[382,13029+6]..[382,13029+24])
                  expression (lib/warnings.ml[382,13029+25]..[385,13142+40]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/warnings.ml[382,13029+25]..[382,13029+28])
                        Nolabel
                        None
                        pattern (lib/warnings.ml[382,13029+25]..[382,13029+28])
                          Ppat_var "ppf" (lib/warnings.ml[382,13029+25]..[382,13029+28])
                      Pparam_val (lib/warnings.ml[382,13029+29]..[382,13029+30])
                        Nolabel
                        None
                        pattern (lib/warnings.ml[382,13029+29]..[382,13029+30])
                          Ppat_var "c" (lib/warnings.ml[382,13029+29]..[382,13029+30])
                    ]
                    None
                    Pfunction_body
                      expression (lib/warnings.ml[383,13062+4]..[385,13142+40])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/warnings.ml[383,13062+8]..[383,13062+17])
                              Ppat_var "lowercase" (lib/warnings.ml[383,13062+8]..[383,13062+17])
                            expression (lib/warnings.ml[383,13062+20]..[383,13062+46])
                              Pexp_apply
                              expression (lib/warnings.ml[383,13062+43]..[383,13062+44])
                                Pexp_ident "=" (lib/warnings.ml[383,13062+43]..[383,13062+44])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[383,13062+20]..[383,13062+42])
                                    Pexp_apply
                                    expression (lib/warnings.ml[383,13062+20]..[383,13062+40])
                                      Pexp_ident "Char.lowercase_ascii" (lib/warnings.ml[383,13062+20]..[383,13062+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[383,13062+41]..[383,13062+42])
                                          Pexp_ident "c" (lib/warnings.ml[383,13062+41]..[383,13062+42])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[383,13062+45]..[383,13062+46])
                                    Pexp_ident "c" (lib/warnings.ml[383,13062+45]..[383,13062+46])
                              ]
                        ]
                        expression (lib/warnings.ml[384,13112+4]..[385,13142+40])
                          Pexp_apply
                          expression (lib/warnings.ml[384,13112+4]..[384,13112+18])
                            Pexp_ident "Format.fprintf" (lib/warnings.ml[384,13112+4]..[384,13112+18])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[384,13112+19]..[384,13112+22])
                                Pexp_ident "ppf" (lib/warnings.ml[384,13112+19]..[384,13112+22])
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[384,13112+23]..[384,13112+29])
                                Pexp_constant PConst_string("%c%c",(lib/warnings.ml[384,13112+24]..[384,13112+28]),None)
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[385,13142+6]..[385,13142+38])
                                Pexp_ifthenelse
                                expression (lib/warnings.ml[385,13142+10]..[385,13142+19])
                                  Pexp_ident "lowercase" (lib/warnings.ml[385,13142+10]..[385,13142+19])
                                expression (lib/warnings.ml[385,13142+25]..[385,13142+28])
                                  Pexp_constant PConst_char 2d
                                Some
                                  expression (lib/warnings.ml[385,13142+34]..[385,13142+37])
                                    Pexp_constant PConst_char 2b
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[385,13142+39]..[385,13142+40])
                                Pexp_ident "c" (lib/warnings.ml[385,13142+39]..[385,13142+40])
                          ]
              ]
              expression (lib/warnings.ml[387,13188+2]..[448,15341+7])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/warnings.ml[387,13188+6]..[387,13188+20])
                      Ppat_var "print_modifier" (lib/warnings.ml[387,13188+6]..[387,13188+20])
                    expression (lib/warnings.ml[387,13188+21]..[390,13302+35]) ghost
                      Pexp_function
                      [
                        Pparam_val (lib/warnings.ml[387,13188+21]..[387,13188+24])
                          Nolabel
                          None
                          pattern (lib/warnings.ml[387,13188+21]..[387,13188+24])
                            Ppat_var "ppf" (lib/warnings.ml[387,13188+21]..[387,13188+24])
                      ]
                      None
                      Pfunction_cases (lib/warnings.ml[387,13188+27]..[390,13302+35])
                        [
                          <case>
                            pattern (lib/warnings.ml[388,13224+6]..[388,13224+13])
                              Ppat_construct "Set_all" (lib/warnings.ml[388,13224+6]..[388,13224+13])
                              None
                            expression (lib/warnings.ml[388,13224+17]..[388,13224+39])
                              Pexp_apply
                              expression (lib/warnings.ml[388,13224+17]..[388,13224+31])
                                Pexp_ident "Format.fprintf" (lib/warnings.ml[388,13224+17]..[388,13224+31])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[388,13224+32]..[388,13224+35])
                                    Pexp_ident "ppf" (lib/warnings.ml[388,13224+32]..[388,13224+35])
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[388,13224+36]..[388,13224+39])
                                    Pexp_constant PConst_string("@",(lib/warnings.ml[388,13224+37]..[388,13224+38]),None)
                              ]
                          <case>
                            pattern (lib/warnings.ml[389,13264+6]..[389,13264+11])
                              Ppat_construct "Clear" (lib/warnings.ml[389,13264+6]..[389,13264+11])
                              None
                            expression (lib/warnings.ml[389,13264+15]..[389,13264+37])
                              Pexp_apply
                              expression (lib/warnings.ml[389,13264+15]..[389,13264+29])
                                Pexp_ident "Format.fprintf" (lib/warnings.ml[389,13264+15]..[389,13264+29])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[389,13264+30]..[389,13264+33])
                                    Pexp_ident "ppf" (lib/warnings.ml[389,13264+30]..[389,13264+33])
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[389,13264+34]..[389,13264+37])
                                    Pexp_constant PConst_string("-",(lib/warnings.ml[389,13264+35]..[389,13264+36]),None)
                              ]
                          <case>
                            pattern (lib/warnings.ml[390,13302+6]..[390,13302+9])
                              Ppat_construct "Set" (lib/warnings.ml[390,13302+6]..[390,13302+9])
                              None
                            expression (lib/warnings.ml[390,13302+13]..[390,13302+35])
                              Pexp_apply
                              expression (lib/warnings.ml[390,13302+13]..[390,13302+27])
                                Pexp_ident "Format.fprintf" (lib/warnings.ml[390,13302+13]..[390,13302+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[390,13302+28]..[390,13302+31])
                                    Pexp_ident "ppf" (lib/warnings.ml[390,13302+28]..[390,13302+31])
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[390,13302+32]..[390,13302+35])
                                    Pexp_constant PConst_string("+",(lib/warnings.ml[390,13302+33]..[390,13302+34]),None)
                              ]
                        ]
                ]
                expression (lib/warnings.ml[392,13343+2]..[448,15341+7])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/warnings.ml[392,13343+6]..[392,13343+17])
                        Ppat_var "print_token" (lib/warnings.ml[392,13343+6]..[392,13343+17])
                      expression (lib/warnings.ml[392,13343+18]..[398,13611+48]) ghost
                        Pexp_function
                        [
                          Pparam_val (lib/warnings.ml[392,13343+18]..[392,13343+21])
                            Nolabel
                            None
                            pattern (lib/warnings.ml[392,13343+18]..[392,13343+21])
                              Ppat_var "ppf" (lib/warnings.ml[392,13343+18]..[392,13343+21])
                        ]
                        None
                        Pfunction_cases (lib/warnings.ml[392,13343+24]..[398,13611+48])
                          [
                            <case>
                              pattern (lib/warnings.ml[393,13376+6]..[393,13376+17])
                                Ppat_construct "Num" (lib/warnings.ml[393,13376+6]..[393,13376+9])
                                Some
                                  []
                                  pattern (lib/warnings.ml[393,13376+10]..[393,13376+17])
                                    Ppat_tuple
                                    [
                                      pattern (lib/warnings.ml[393,13376+11]..[393,13376+12])
                                        Ppat_var "a" (lib/warnings.ml[393,13376+11]..[393,13376+12])
                                      pattern (lib/warnings.ml[393,13376+13]..[393,13376+14])
                                        Ppat_var "b" (lib/warnings.ml[393,13376+13]..[393,13376+14])
                                      pattern (lib/warnings.ml[393,13376+15]..[393,13376+16])
                                        Ppat_var "m" (lib/warnings.ml[393,13376+15]..[393,13376+16])
                                    ]
                              expression (lib/warnings.ml[393,13376+21]..[396,13479+60])
                                Pexp_ifthenelse
                                expression (lib/warnings.ml[393,13376+24]..[393,13376+29])
                                  Pexp_apply
                                  expression (lib/warnings.ml[393,13376+26]..[393,13376+27])
                                    Pexp_ident "=" (lib/warnings.ml[393,13376+26]..[393,13376+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[393,13376+24]..[393,13376+25])
                                        Pexp_ident "a" (lib/warnings.ml[393,13376+24]..[393,13376+25])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[393,13376+28]..[393,13376+29])
                                        Pexp_ident "b" (lib/warnings.ml[393,13376+28]..[393,13376+29])
                                  ]
                                expression (lib/warnings.ml[394,13411+10]..[394,13411+54])
                                  Pexp_apply
                                  expression (lib/warnings.ml[394,13411+10]..[394,13411+24])
                                    Pexp_ident "Format.fprintf" (lib/warnings.ml[394,13411+10]..[394,13411+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[394,13411+25]..[394,13411+28])
                                        Pexp_ident "ppf" (lib/warnings.ml[394,13411+25]..[394,13411+28])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[394,13411+29]..[394,13411+35])
                                        Pexp_constant PConst_string("%a%d",(lib/warnings.ml[394,13411+30]..[394,13411+34]),None)
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[394,13411+36]..[394,13411+50])
                                        Pexp_ident "print_modifier" (lib/warnings.ml[394,13411+36]..[394,13411+50])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[394,13411+51]..[394,13411+52])
                                        Pexp_ident "m" (lib/warnings.ml[394,13411+51]..[394,13411+52])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[394,13411+53]..[394,13411+54])
                                        Pexp_ident "a" (lib/warnings.ml[394,13411+53]..[394,13411+54])
                                  ]
                                Some
                                  expression (lib/warnings.ml[396,13479+10]..[396,13479+60])
                                    Pexp_apply
                                    expression (lib/warnings.ml[396,13479+10]..[396,13479+24])
                                      Pexp_ident "Format.fprintf" (lib/warnings.ml[396,13479+10]..[396,13479+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[396,13479+25]..[396,13479+28])
                                          Pexp_ident "ppf" (lib/warnings.ml[396,13479+25]..[396,13479+28])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[396,13479+29]..[396,13479+39])
                                          Pexp_constant PConst_string("%a%d..%d",(lib/warnings.ml[396,13479+30]..[396,13479+38]),None)
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[396,13479+40]..[396,13479+54])
                                          Pexp_ident "print_modifier" (lib/warnings.ml[396,13479+40]..[396,13479+54])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[396,13479+55]..[396,13479+56])
                                          Pexp_ident "m" (lib/warnings.ml[396,13479+55]..[396,13479+56])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[396,13479+57]..[396,13479+58])
                                          Pexp_ident "a" (lib/warnings.ml[396,13479+57]..[396,13479+58])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[396,13479+59]..[396,13479+60])
                                          Pexp_ident "b" (lib/warnings.ml[396,13479+59]..[396,13479+60])
                                    ]
                            <case>
                              pattern (lib/warnings.ml[397,13540+6]..[397,13540+22])
                                Ppat_construct "Letter" (lib/warnings.ml[397,13540+6]..[397,13540+12])
                                Some
                                  []
                                  pattern (lib/warnings.ml[397,13540+12]..[397,13540+22])
                                    Ppat_tuple
                                    [
                                      pattern (lib/warnings.ml[397,13540+13]..[397,13540+14])
                                        Ppat_var "l" (lib/warnings.ml[397,13540+13]..[397,13540+14])
                                      pattern (lib/warnings.ml[397,13540+15]..[397,13540+21])
                                        Ppat_construct "Some" (lib/warnings.ml[397,13540+15]..[397,13540+19])
                                        Some
                                          []
                                          pattern (lib/warnings.ml[397,13540+20]..[397,13540+21])
                                            Ppat_var "m" (lib/warnings.ml[397,13540+20]..[397,13540+21])
                                    ]
                              expression (lib/warnings.ml[397,13540+26]..[397,13540+70])
                                Pexp_apply
                                expression (lib/warnings.ml[397,13540+26]..[397,13540+40])
                                  Pexp_ident "Format.fprintf" (lib/warnings.ml[397,13540+26]..[397,13540+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[397,13540+41]..[397,13540+44])
                                      Pexp_ident "ppf" (lib/warnings.ml[397,13540+41]..[397,13540+44])
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[397,13540+45]..[397,13540+51])
                                      Pexp_constant PConst_string("%a%c",(lib/warnings.ml[397,13540+46]..[397,13540+50]),None)
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[397,13540+52]..[397,13540+66])
                                      Pexp_ident "print_modifier" (lib/warnings.ml[397,13540+52]..[397,13540+66])
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[397,13540+67]..[397,13540+68])
                                      Pexp_ident "m" (lib/warnings.ml[397,13540+67]..[397,13540+68])
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[397,13540+69]..[397,13540+70])
                                      Pexp_ident "l" (lib/warnings.ml[397,13540+69]..[397,13540+70])
                                ]
                            <case>
                              pattern (lib/warnings.ml[398,13611+6]..[398,13611+20])
                                Ppat_construct "Letter" (lib/warnings.ml[398,13611+6]..[398,13611+12])
                                Some
                                  []
                                  pattern (lib/warnings.ml[398,13611+12]..[398,13611+20])
                                    Ppat_tuple
                                    [
                                      pattern (lib/warnings.ml[398,13611+13]..[398,13611+14])
                                        Ppat_var "l" (lib/warnings.ml[398,13611+13]..[398,13611+14])
                                      pattern (lib/warnings.ml[398,13611+15]..[398,13611+19])
                                        Ppat_construct "None" (lib/warnings.ml[398,13611+15]..[398,13611+19])
                                        None
                                    ]
                              expression (lib/warnings.ml[398,13611+24]..[398,13611+48])
                                Pexp_apply
                                expression (lib/warnings.ml[398,13611+24]..[398,13611+42])
                                  Pexp_ident "print_warning_char" (lib/warnings.ml[398,13611+24]..[398,13611+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[398,13611+43]..[398,13611+46])
                                      Pexp_ident "ppf" (lib/warnings.ml[398,13611+43]..[398,13611+46])
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[398,13611+47]..[398,13611+48])
                                      Pexp_ident "l" (lib/warnings.ml[398,13611+47]..[398,13611+48])
                                ]
                          ]
                  ]
                  expression (lib/warnings.ml[400,13665+2]..[448,15341+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[400,13665+6]..[400,13665+25])
                          Ppat_var "consecutive_letters" (lib/warnings.ml[400,13665+6]..[400,13665+25])
                        expression (lib/warnings.ml[403,13835+4]..[414,14189+27])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/warnings.ml[403,13835+8]..[403,13835+20])
                                Ppat_var "commit_chunk" (lib/warnings.ml[403,13835+8]..[403,13835+20])
                              expression (lib/warnings.ml[403,13835+21]..[405,13893+51]) ghost
                                Pexp_function
                                [
                                  Pparam_val (lib/warnings.ml[403,13835+21]..[403,13835+22])
                                    Nolabel
                                    None
                                    pattern (lib/warnings.ml[403,13835+21]..[403,13835+22])
                                      Ppat_var "l" (lib/warnings.ml[403,13835+21]..[403,13835+22])
                                ]
                                None
                                Pfunction_cases (lib/warnings.ml[403,13835+25]..[405,13893+51])
                                  [
                                    <case>
                                      pattern (lib/warnings.ml[404,13869+8]..[404,13869+18])
                                        Ppat_or
                                        pattern (lib/warnings.ml[404,13869+8]..[404,13869+10])
                                          Ppat_construct "[]" (lib/warnings.ml[404,13869+8]..[404,13869+10])
                                          None
                                        pattern (lib/warnings.ml[404,13869+13]..[404,13869+18])
                                          Ppat_construct "::" (lib/warnings.ml[404,13869+15]..[404,13869+18]) ghost
                                          Some
                                            []
                                            pattern (lib/warnings.ml[404,13869+15]..[404,13869+18]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (lib/warnings.ml[404,13869+15]..[404,13869+16])
                                                  Ppat_any
                                                pattern (lib/warnings.ml[404,13869+17]..[404,13869+18]) ghost
                                                  Ppat_construct "[]" (lib/warnings.ml[404,13869+17]..[404,13869+18]) ghost
                                                  None
                                              ]
                                      expression (lib/warnings.ml[404,13869+22]..[404,13869+23])
                                        Pexp_ident "l" (lib/warnings.ml[404,13869+22]..[404,13869+23])
                                    <case>
                                      pattern (lib/warnings.ml[405,13893+8]..[405,13893+28])
                                        Ppat_alias "chunk" (lib/warnings.ml[405,13893+23]..[405,13893+28])
                                        pattern (lib/warnings.ml[405,13893+8]..[405,13893+19])
                                          Ppat_construct "::" (lib/warnings.ml[405,13893+10]..[405,13893+12])
                                          Some
                                            []
                                            pattern (lib/warnings.ml[405,13893+8]..[405,13893+19]) ghost
                                              Ppat_tuple
                                              [
                                                pattern (lib/warnings.ml[405,13893+8]..[405,13893+9])
                                                  Ppat_any
                                                pattern (lib/warnings.ml[405,13893+13]..[405,13893+19])
                                                  Ppat_construct "::" (lib/warnings.ml[405,13893+15]..[405,13893+17])
                                                  Some
                                                    []
                                                    pattern (lib/warnings.ml[405,13893+13]..[405,13893+19]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (lib/warnings.ml[405,13893+13]..[405,13893+14])
                                                          Ppat_any
                                                        pattern (lib/warnings.ml[405,13893+18]..[405,13893+19])
                                                          Ppat_any
                                                      ]
                                              ]
                                      expression (lib/warnings.ml[405,13893+32]..[405,13893+51])
                                        Pexp_construct "::" (lib/warnings.ml[405,13893+47]..[405,13893+49])
                                        Some
                                          expression (lib/warnings.ml[405,13893+32]..[405,13893+51]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/warnings.ml[405,13893+32]..[405,13893+46])
                                                Pexp_apply
                                                expression (lib/warnings.ml[405,13893+32]..[405,13893+40])
                                                  Pexp_ident "List.rev" (lib/warnings.ml[405,13893+32]..[405,13893+40])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/warnings.ml[405,13893+41]..[405,13893+46])
                                                      Pexp_ident "chunk" (lib/warnings.ml[405,13893+41]..[405,13893+46])
                                                ]
                                              expression (lib/warnings.ml[405,13893+50]..[405,13893+51])
                                                Pexp_ident "l" (lib/warnings.ml[405,13893+50]..[405,13893+51])
                                            ]
                                  ]
                          ]
                          expression (lib/warnings.ml[407,13952+4]..[414,14189+27])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/warnings.ml[407,13952+8]..[407,13952+33])
                                  Ppat_var "group_consecutive_letters" (lib/warnings.ml[407,13952+8]..[407,13952+33])
                                expression (lib/warnings.ml[407,13952+34]..[409,14051+39]) ghost
                                  Pexp_function
                                  [
                                    Pparam_val (lib/warnings.ml[407,13952+34]..[407,13952+45])
                                      Nolabel
                                      None
                                      pattern (lib/warnings.ml[407,13952+34]..[407,13952+45])
                                        Ppat_tuple
                                        [
                                          pattern (lib/warnings.ml[407,13952+35]..[407,13952+36])
                                            Ppat_var "l" (lib/warnings.ml[407,13952+35]..[407,13952+36])
                                          pattern (lib/warnings.ml[407,13952+37]..[407,13952+44])
                                            Ppat_var "current" (lib/warnings.ml[407,13952+37]..[407,13952+44])
                                        ]
                                  ]
                                  None
                                  Pfunction_cases (lib/warnings.ml[407,13952+48]..[409,14051+39])
                                    [
                                      <case>
                                        pattern (lib/warnings.ml[408,14009+6]..[408,14009+22])
                                          Ppat_construct "Letter" (lib/warnings.ml[408,14009+6]..[408,14009+12])
                                          Some
                                            []
                                            pattern (lib/warnings.ml[408,14009+13]..[408,14009+22])
                                              Ppat_tuple
                                              [
                                                pattern (lib/warnings.ml[408,14009+14]..[408,14009+15])
                                                  Ppat_var "x" (lib/warnings.ml[408,14009+14]..[408,14009+15])
                                                pattern (lib/warnings.ml[408,14009+17]..[408,14009+21])
                                                  Ppat_construct "None" (lib/warnings.ml[408,14009+17]..[408,14009+21])
                                                  None
                                              ]
                                        expression (lib/warnings.ml[408,14009+26]..[408,14009+41])
                                          Pexp_tuple
                                          [
                                            expression (lib/warnings.ml[408,14009+27]..[408,14009+28])
                                              Pexp_ident "l" (lib/warnings.ml[408,14009+27]..[408,14009+28])
                                            expression (lib/warnings.ml[408,14009+30]..[408,14009+40])
                                              Pexp_construct "::" (lib/warnings.ml[408,14009+31]..[408,14009+33])
                                              Some
                                                expression (lib/warnings.ml[408,14009+30]..[408,14009+40]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lib/warnings.ml[408,14009+30]..[408,14009+31])
                                                      Pexp_ident "x" (lib/warnings.ml[408,14009+30]..[408,14009+31])
                                                    expression (lib/warnings.ml[408,14009+33]..[408,14009+40])
                                                      Pexp_ident "current" (lib/warnings.ml[408,14009+33]..[408,14009+40])
                                                  ]
                                          ]
                                      <case>
                                        pattern (lib/warnings.ml[409,14051+6]..[409,14051+7])
                                          Ppat_any
                                        expression (lib/warnings.ml[409,14051+11]..[409,14051+39])
                                          Pexp_tuple
                                          [
                                            expression (lib/warnings.ml[409,14051+12]..[409,14051+34])
                                              Pexp_apply
                                              expression (lib/warnings.ml[409,14051+12]..[409,14051+24])
                                                Pexp_ident "commit_chunk" (lib/warnings.ml[409,14051+12]..[409,14051+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[409,14051+25]..[409,14051+26])
                                                    Pexp_ident "l" (lib/warnings.ml[409,14051+25]..[409,14051+26])
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[409,14051+27]..[409,14051+34])
                                                    Pexp_ident "current" (lib/warnings.ml[409,14051+27]..[409,14051+34])
                                              ]
                                            expression (lib/warnings.ml[409,14051+36]..[409,14051+38])
                                              Pexp_construct "[]" (lib/warnings.ml[409,14051+36]..[409,14051+38])
                                              None
                                          ]
                                    ]
                            ]
                            expression (lib/warnings.ml[411,14098+4]..[414,14189+27])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/warnings.ml[411,14098+8]..[411,14098+19])
                                    Ppat_tuple
                                    [
                                      pattern (lib/warnings.ml[411,14098+8]..[411,14098+9])
                                        Ppat_var "l" (lib/warnings.ml[411,14098+8]..[411,14098+9])
                                      pattern (lib/warnings.ml[411,14098+11]..[411,14098+19])
                                        Ppat_var "on_going" (lib/warnings.ml[411,14098+11]..[411,14098+19])
                                    ]
                                  expression (lib/warnings.ml[412,14120+6]..[412,14120+61])
                                    Pexp_apply
                                    expression (lib/warnings.ml[412,14120+6]..[412,14120+20])
                                      Pexp_ident "List.fold_left" (lib/warnings.ml[412,14120+6]..[412,14120+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[412,14120+21]..[412,14120+46])
                                          Pexp_ident "group_consecutive_letters" (lib/warnings.ml[412,14120+21]..[412,14120+46])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[412,14120+47]..[412,14120+54])
                                          Pexp_tuple
                                          [
                                            expression (lib/warnings.ml[412,14120+48]..[412,14120+50])
                                              Pexp_construct "[]" (lib/warnings.ml[412,14120+48]..[412,14120+50])
                                              None
                                            expression (lib/warnings.ml[412,14120+51]..[412,14120+53])
                                              Pexp_construct "[]" (lib/warnings.ml[412,14120+51]..[412,14120+53])
                                              None
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[412,14120+55]..[412,14120+61])
                                          Pexp_ident "tokens" (lib/warnings.ml[412,14120+55]..[412,14120+61])
                                    ]
                              ]
                              expression (lib/warnings.ml[414,14189+4]..[414,14189+27])
                                Pexp_apply
                                expression (lib/warnings.ml[414,14189+4]..[414,14189+16])
                                  Pexp_ident "commit_chunk" (lib/warnings.ml[414,14189+4]..[414,14189+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[414,14189+17]..[414,14189+18])
                                      Pexp_ident "l" (lib/warnings.ml[414,14189+17]..[414,14189+18])
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[414,14189+19]..[414,14189+27])
                                      Pexp_ident "on_going" (lib/warnings.ml[414,14189+19]..[414,14189+27])
                                ]
                    ]
                    expression (lib/warnings.ml[416,14222+2]..[448,15341+7])
                      Pexp_match
                      expression (lib/warnings.ml[416,14222+8]..[416,14222+27])
                        Pexp_ident "consecutive_letters" (lib/warnings.ml[416,14222+8]..[416,14222+27])
                      [
                        <case>
                          pattern (lib/warnings.ml[417,14255+4]..[417,14255+6])
                            Ppat_construct "[]" (lib/warnings.ml[417,14255+4]..[417,14255+6])
                            None
                          expression (lib/warnings.ml[417,14255+10]..[417,14255+14])
                            Pexp_construct "None" (lib/warnings.ml[417,14255+10]..[417,14255+14])
                            None
                        <case>
                          pattern (lib/warnings.ml[418,14270+4]..[418,14270+16])
                            Ppat_construct "::" (lib/warnings.ml[418,14270+12]..[418,14270+14])
                            Some
                              []
                              pattern (lib/warnings.ml[418,14270+4]..[418,14270+16]) ghost
                                Ppat_tuple
                                [
                                  pattern (lib/warnings.ml[418,14270+4]..[418,14270+11])
                                    Ppat_var "example" (lib/warnings.ml[418,14270+4]..[418,14270+11])
                                  pattern (lib/warnings.ml[418,14270+15]..[418,14270+16])
                                    Ppat_any
                                ]
                          expression (lib/warnings.ml[419,14291+6]..[448,15341+7])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/warnings.ml[419,14291+10]..[419,14291+17])
                                  Ppat_var "nowhere" (lib/warnings.ml[419,14291+10]..[419,14291+17])
                                expression (lib/warnings.ml[419,14291+20]..[419,14291+46])
                                  Pexp_apply
                                  expression (lib/warnings.ml[419,14291+20]..[419,14291+37])
                                    Pexp_ident "ghost_loc_in_file" (lib/warnings.ml[419,14291+20]..[419,14291+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[419,14291+38]..[419,14291+46])
                                        Pexp_constant PConst_string("_none_",(lib/warnings.ml[419,14291+39]..[419,14291+45]),None)
                                  ]
                            ]
                            expression (lib/warnings.ml[420,14341+6]..[448,15341+7])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/warnings.ml[420,14341+10]..[420,14341+23])
                                    Ppat_var "spelling_hint" (lib/warnings.ml[420,14341+10]..[420,14341+23])
                                  expression (lib/warnings.ml[420,14341+24]..[430,14682+12]) ghost
                                    Pexp_function
                                    [
                                      Pparam_val (lib/warnings.ml[420,14341+24]..[420,14341+27])
                                        Nolabel
                                        None
                                        pattern (lib/warnings.ml[420,14341+24]..[420,14341+27])
                                          Ppat_var "ppf" (lib/warnings.ml[420,14341+24]..[420,14341+27])
                                    ]
                                    None
                                    Pfunction_body
                                      expression (lib/warnings.ml[421,14371+8]..[430,14682+12])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/warnings.ml[421,14371+12]..[421,14371+23])
                                              Ppat_var "max_seq_len" (lib/warnings.ml[421,14371+12]..[421,14371+23])
                                            expression (lib/warnings.ml[422,14397+10]..[423,14461+33])
                                              Pexp_apply
                                              expression (lib/warnings.ml[422,14397+10]..[422,14397+24])
                                                Pexp_ident "List.fold_left" (lib/warnings.ml[422,14397+10]..[422,14397+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[422,14397+25]..[422,14397+63])
                                                    Pexp_function
                                                    [
                                                      Pparam_val (lib/warnings.ml[422,14397+30]..[422,14397+31])
                                                        Nolabel
                                                        None
                                                        pattern (lib/warnings.ml[422,14397+30]..[422,14397+31])
                                                          Ppat_var "l" (lib/warnings.ml[422,14397+30]..[422,14397+31])
                                                      Pparam_val (lib/warnings.ml[422,14397+32]..[422,14397+33])
                                                        Nolabel
                                                        None
                                                        pattern (lib/warnings.ml[422,14397+32]..[422,14397+33])
                                                          Ppat_var "x" (lib/warnings.ml[422,14397+32]..[422,14397+33])
                                                    ]
                                                    None
                                                    Pfunction_body
                                                      expression (lib/warnings.ml[422,14397+37]..[422,14397+62])
                                                        Pexp_apply
                                                        expression (lib/warnings.ml[422,14397+37]..[422,14397+44])
                                                          Pexp_ident "Int.max" (lib/warnings.ml[422,14397+37]..[422,14397+44])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/warnings.ml[422,14397+45]..[422,14397+46])
                                                              Pexp_ident "l" (lib/warnings.ml[422,14397+45]..[422,14397+46])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/warnings.ml[422,14397+47]..[422,14397+62])
                                                              Pexp_apply
                                                              expression (lib/warnings.ml[422,14397+48]..[422,14397+59])
                                                                Pexp_ident "List.length" (lib/warnings.ml[422,14397+48]..[422,14397+59])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/warnings.ml[422,14397+60]..[422,14397+61])
                                                                    Pexp_ident "x" (lib/warnings.ml[422,14397+60]..[422,14397+61])
                                                              ]
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[423,14461+12]..[423,14461+13])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[423,14461+14]..[423,14461+33])
                                                    Pexp_ident "consecutive_letters" (lib/warnings.ml[423,14461+14]..[423,14461+33])
                                              ]
                                        ]
                                        expression (lib/warnings.ml[425,14506+8]..[430,14682+12])
                                          Pexp_ifthenelse
                                          expression (lib/warnings.ml[425,14506+11]..[425,14506+27])
                                            Pexp_apply
                                            expression (lib/warnings.ml[425,14506+23]..[425,14506+25])
                                              Pexp_ident ">=" (lib/warnings.ml[425,14506+23]..[425,14506+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[425,14506+11]..[425,14506+22])
                                                  Pexp_ident "max_seq_len" (lib/warnings.ml[425,14506+11]..[425,14506+22])
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[425,14506+26]..[425,14506+27])
                                                  Pexp_constant PConst_int (5,None)
                                            ]
                                          expression (lib/warnings.ml[426,14539+10]..[428,14625+43])
                                            Pexp_apply
                                            expression (lib/warnings.ml[426,14539+10]..[426,14539+24])
                                              Pexp_ident "Format.fprintf" (lib/warnings.ml[426,14539+10]..[426,14539+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[426,14539+25]..[426,14539+28])
                                                  Pexp_ident "ppf" (lib/warnings.ml[426,14539+25]..[426,14539+28])
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[427,14568+12]..[428,14625+43])
                                                  Pexp_constant PConst_string("@ @[Hint: Did you make a spelling mistake when using a mnemonic name?@]",(lib/warnings.ml[427,14568+13]..[428,14625+42]),None)
                                            ]
                                          Some
                                            expression (lib/warnings.ml[430,14682+10]..[430,14682+12])
                                              Pexp_construct "()" (lib/warnings.ml[430,14682+10]..[430,14682+12])
                                              None
                              ]
                              expression (lib/warnings.ml[432,14704+6]..[448,15341+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/warnings.ml[432,14704+10]..[432,14704+17])
                                      Ppat_var "message" (lib/warnings.ml[432,14704+10]..[432,14704+17])
                                    expression (lib/warnings.ml[433,14724+8]..[442,15208+23])
                                      Pexp_apply
                                      expression (lib/warnings.ml[433,14724+8]..[433,14724+23])
                                        Pexp_ident "Format.asprintf" (lib/warnings.ml[433,14724+8]..[433,14724+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[434,14748+10]..[439,15050+18])
                                            Pexp_constant PConst_string("@[<v>@[Setting a warning with a sequence of lowercase or uppercase letters,@ like '%a',@ is deprecated.@]@ @[Use the equivalent signed form:@ %t.@]@ @[Hint: Enabling or disabling a warning by its mnemonic name requires a + or - prefix.@]%t@?@]",(lib/warnings.ml[434,14748+11]..[439,15050+17]),None)
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[440,15069+10]..[440,15069+72])
                                            Pexp_open Fresh
                                            module_expr (lib/warnings.ml[440,15069+10]..[440,15069+16])
                                              Pmod_ident "Format" (lib/warnings.ml[440,15069+10]..[440,15069+16])
                                            expression (lib/warnings.ml[440,15069+18]..[440,15069+71])
                                              Pexp_apply
                                              expression (lib/warnings.ml[440,15069+18]..[440,15069+31])
                                                Pexp_ident "pp_print_list" (lib/warnings.ml[440,15069+18]..[440,15069+31])
                                              [
                                                <arg>
                                                Labelled "pp_sep"
                                                  expression (lib/warnings.ml[440,15069+40]..[440,15069+57])
                                                    Pexp_function
                                                    [
                                                      Pparam_val (lib/warnings.ml[440,15069+45]..[440,15069+46])
                                                        Nolabel
                                                        None
                                                        pattern (lib/warnings.ml[440,15069+45]..[440,15069+46])
                                                          Ppat_any
                                                    ]
                                                    None
                                                    Pfunction_body
                                                      expression (lib/warnings.ml[440,15069+50]..[440,15069+56])
                                                        Pexp_ident "ignore" (lib/warnings.ml[440,15069+50]..[440,15069+56])
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[440,15069+58]..[440,15069+71])
                                                    Pexp_ident "pp_print_char" (lib/warnings.ml[440,15069+58]..[440,15069+71])
                                              ]
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[440,15069+73]..[440,15069+80])
                                            Pexp_ident "example" (lib/warnings.ml[440,15069+73]..[440,15069+80])
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[441,15150+10]..[441,15150+57])
                                            Pexp_function
                                            [
                                              Pparam_val (lib/warnings.ml[441,15150+15]..[441,15150+18])
                                                Nolabel
                                                None
                                                pattern (lib/warnings.ml[441,15150+15]..[441,15150+18])
                                                  Ppat_var "ppf" (lib/warnings.ml[441,15150+15]..[441,15150+18])
                                            ]
                                            None
                                            Pfunction_body
                                              expression (lib/warnings.ml[441,15150+22]..[441,15150+56])
                                                Pexp_apply
                                                expression (lib/warnings.ml[441,15150+22]..[441,15150+31])
                                                  Pexp_ident "List.iter" (lib/warnings.ml[441,15150+22]..[441,15150+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/warnings.ml[441,15150+32]..[441,15150+49])
                                                      Pexp_apply
                                                      expression (lib/warnings.ml[441,15150+33]..[441,15150+44])
                                                        Pexp_ident "print_token" (lib/warnings.ml[441,15150+33]..[441,15150+44])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/warnings.ml[441,15150+45]..[441,15150+48])
                                                            Pexp_ident "ppf" (lib/warnings.ml[441,15150+45]..[441,15150+48])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/warnings.ml[441,15150+50]..[441,15150+56])
                                                      Pexp_ident "tokens" (lib/warnings.ml[441,15150+50]..[441,15150+56])
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[442,15208+10]..[442,15208+23])
                                            Pexp_ident "spelling_hint" (lib/warnings.ml[442,15208+10]..[442,15208+23])
                                      ]
                                ]
                                expression (lib/warnings.ml[444,15241+6]..[448,15341+7])
                                  Pexp_construct "Some" (lib/warnings.ml[444,15241+6]..[444,15241+10])
                                  Some
                                    expression (lib/warnings.ml[444,15241+11]..[448,15341+7])
                                      Pexp_record
                                      [
                                        "kind" (lib/warnings.ml[445,15254+8]..[445,15254+12])
                                          expression (lib/warnings.ml[445,15254+13]..[445,15254+35])
                                            Pexp_constant PConst_string("ocaml_deprecated_cli",(lib/warnings.ml[445,15254+14]..[445,15254+34]),None)
                                        "use" (lib/warnings.ml[446,15291+8]..[446,15291+11])
                                          expression (lib/warnings.ml[446,15291+12]..[446,15291+19])
                                            Pexp_ident "nowhere" (lib/warnings.ml[446,15291+12]..[446,15291+19])
                                        "def" (lib/warnings.ml[446,15291+21]..[446,15291+24])
                                          expression (lib/warnings.ml[446,15291+25]..[446,15291+32])
                                            Pexp_ident "nowhere" (lib/warnings.ml[446,15291+25]..[446,15291+32])
                                        "message" (lib/warnings.ml[447,15325+8]..[447,15325+15]) ghost
                                          expression (lib/warnings.ml[447,15325+8]..[447,15325+15])
                                            Pexp_ident "message" (lib/warnings.ml[447,15325+8]..[447,15325+15])
                                      ]
                                      None
                      ]
    ]
  structure_item (lib/warnings.ml[451,15351+0]..[487,16538+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[451,15351+4]..[451,15351+18])
          Ppat_var "parse_warnings" (lib/warnings.ml[451,15351+4]..[451,15351+18])
        expression (lib/warnings.ml[451,15351+19]..[487,16538+11]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[451,15351+19]..[451,15351+20])
              Nolabel
              None
              pattern (lib/warnings.ml[451,15351+19]..[451,15351+20])
                Ppat_var "s" (lib/warnings.ml[451,15351+19]..[451,15351+20])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[452,15374+2]..[487,16538+11])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[452,15374+6]..[452,15374+11])
                    Ppat_var "error" (lib/warnings.ml[452,15374+6]..[452,15374+11])
                  expression (lib/warnings.ml[452,15374+12]..[452,15374+62]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/warnings.ml[452,15374+12]..[452,15374+14])
                        Nolabel
                        None
                        pattern (lib/warnings.ml[452,15374+12]..[452,15374+14])
                          Ppat_construct "()" (lib/warnings.ml[452,15374+12]..[452,15374+14])
                          None
                    ]
                    None
                    Pfunction_body
                      expression (lib/warnings.ml[452,15374+17]..[452,15374+62])
                        Pexp_apply
                        expression (lib/warnings.ml[452,15374+17]..[452,15374+22])
                          Pexp_ident "raise" (lib/warnings.ml[452,15374+17]..[452,15374+22])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[452,15374+23]..[452,15374+62])
                              Pexp_construct "Arg.Bad" (lib/warnings.ml[452,15374+24]..[452,15374+31])
                              Some
                                expression (lib/warnings.ml[452,15374+32]..[452,15374+61])
                                  Pexp_constant PConst_string("Ill-formed list of warnings",(lib/warnings.ml[452,15374+33]..[452,15374+60]),None)
                        ]
              ]
              expression (lib/warnings.ml[453,15440+2]..[487,16538+11])
                Pexp_let Rec
                [
                  <def>
                    pattern (lib/warnings.ml[453,15440+10]..[453,15440+17])
                      Ppat_var "get_num" (lib/warnings.ml[453,15440+10]..[453,15440+17])
                    expression (lib/warnings.ml[453,15440+18]..[457,15605+15]) ghost
                      Pexp_function
                      [
                        Pparam_val (lib/warnings.ml[453,15440+18]..[453,15440+19])
                          Nolabel
                          None
                          pattern (lib/warnings.ml[453,15440+18]..[453,15440+19])
                            Ppat_var "n" (lib/warnings.ml[453,15440+18]..[453,15440+19])
                        Pparam_val (lib/warnings.ml[453,15440+20]..[453,15440+21])
                          Nolabel
                          None
                          pattern (lib/warnings.ml[453,15440+20]..[453,15440+21])
                            Ppat_var "i" (lib/warnings.ml[453,15440+20]..[453,15440+21])
                      ]
                      None
                      Pfunction_body
                        expression (lib/warnings.ml[454,15464+4]..[457,15605+15])
                          Pexp_ifthenelse
                          expression (lib/warnings.ml[454,15464+7]..[454,15464+27])
                            Pexp_apply
                            expression (lib/warnings.ml[454,15464+9]..[454,15464+11])
                              Pexp_ident ">=" (lib/warnings.ml[454,15464+9]..[454,15464+11])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[454,15464+7]..[454,15464+8])
                                  Pexp_ident "i" (lib/warnings.ml[454,15464+7]..[454,15464+8])
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[454,15464+12]..[454,15464+27])
                                  Pexp_apply
                                  expression (lib/warnings.ml[454,15464+12]..[454,15464+25])
                                    Pexp_ident "String.length" (lib/warnings.ml[454,15464+12]..[454,15464+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[454,15464+26]..[454,15464+27])
                                        Pexp_ident "s" (lib/warnings.ml[454,15464+26]..[454,15464+27])
                                  ]
                            ]
                          expression (lib/warnings.ml[454,15464+33]..[454,15464+37])
                            Pexp_tuple
                            [
                              expression (lib/warnings.ml[454,15464+33]..[454,15464+34])
                                Pexp_ident "i" (lib/warnings.ml[454,15464+33]..[454,15464+34])
                              expression (lib/warnings.ml[454,15464+36]..[454,15464+37])
                                Pexp_ident "n" (lib/warnings.ml[454,15464+36]..[454,15464+37])
                            ]
                          Some
                            expression (lib/warnings.ml[455,15502+9]..[457,15605+15])
                              Pexp_match
                              expression (lib/warnings.ml[455,15502+15]..[455,15502+20])
                                Pexp_apply
                                expression (lib/warnings.ml[455,15502+15]..[455,15502+20]) ghost
                                  Pexp_ident "String.get" (lib/warnings.ml[455,15502+15]..[455,15502+20]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[455,15502+15]..[455,15502+16])
                                      Pexp_ident "s" (lib/warnings.ml[455,15502+15]..[455,15502+16])
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[455,15502+18]..[455,15502+19])
                                      Pexp_ident "i" (lib/warnings.ml[455,15502+18]..[455,15502+19])
                                ]
                              [
                                <case>
                                  pattern (lib/warnings.ml[456,15528+6]..[456,15528+14])
                                    Ppat_interval PConst_char 30..PConst_char 39
                                  expression (lib/warnings.ml[456,15528+18]..[456,15528+76])
                                    Pexp_apply
                                    expression (lib/warnings.ml[456,15528+18]..[456,15528+25])
                                      Pexp_ident "get_num" (lib/warnings.ml[456,15528+18]..[456,15528+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[456,15528+26]..[456,15528+68])
                                          Pexp_apply
                                          expression (lib/warnings.ml[456,15528+52]..[456,15528+53])
                                            Pexp_ident "-" (lib/warnings.ml[456,15528+52]..[456,15528+53])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[456,15528+27]..[456,15528+51])
                                                Pexp_apply
                                                expression (lib/warnings.ml[456,15528+34]..[456,15528+35])
                                                  Pexp_ident "+" (lib/warnings.ml[456,15528+34]..[456,15528+35])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/warnings.ml[456,15528+27]..[456,15528+33])
                                                      Pexp_apply
                                                      expression (lib/warnings.ml[456,15528+30]..[456,15528+31])
                                                        Pexp_ident "*" (lib/warnings.ml[456,15528+30]..[456,15528+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/warnings.ml[456,15528+27]..[456,15528+29])
                                                            Pexp_constant PConst_int (10,None)
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/warnings.ml[456,15528+32]..[456,15528+33])
                                                            Pexp_ident "n" (lib/warnings.ml[456,15528+32]..[456,15528+33])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/warnings.ml[456,15528+36]..[456,15528+51])
                                                      Pexp_apply
                                                      expression (lib/warnings.ml[456,15528+36]..[456,15528+45])
                                                        Pexp_ident "Char.code" (lib/warnings.ml[456,15528+36]..[456,15528+45])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/warnings.ml[456,15528+46]..[456,15528+51])
                                                            Pexp_apply
                                                            expression (lib/warnings.ml[456,15528+46]..[456,15528+51]) ghost
                                                              Pexp_ident "String.get" (lib/warnings.ml[456,15528+46]..[456,15528+51]) ghost
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/warnings.ml[456,15528+46]..[456,15528+47])
                                                                  Pexp_ident "s" (lib/warnings.ml[456,15528+46]..[456,15528+47])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/warnings.ml[456,15528+49]..[456,15528+50])
                                                                  Pexp_ident "i" (lib/warnings.ml[456,15528+49]..[456,15528+50])
                                                            ]
                                                      ]
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[456,15528+54]..[456,15528+67])
                                                Pexp_apply
                                                expression (lib/warnings.ml[456,15528+54]..[456,15528+63])
                                                  Pexp_ident "Char.code" (lib/warnings.ml[456,15528+54]..[456,15528+63])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/warnings.ml[456,15528+64]..[456,15528+67])
                                                      Pexp_constant PConst_char 30
                                                ]
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[456,15528+69]..[456,15528+76])
                                          Pexp_apply
                                          expression (lib/warnings.ml[456,15528+72]..[456,15528+73])
                                            Pexp_ident "+" (lib/warnings.ml[456,15528+72]..[456,15528+73])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[456,15528+70]..[456,15528+71])
                                                Pexp_ident "i" (lib/warnings.ml[456,15528+70]..[456,15528+71])
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[456,15528+74]..[456,15528+75])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                    ]
                                <case>
                                  pattern (lib/warnings.ml[457,15605+6]..[457,15605+7])
                                    Ppat_any
                                  expression (lib/warnings.ml[457,15605+11]..[457,15605+15])
                                    Pexp_tuple
                                    [
                                      expression (lib/warnings.ml[457,15605+11]..[457,15605+12])
                                        Pexp_ident "i" (lib/warnings.ml[457,15605+11]..[457,15605+12])
                                      expression (lib/warnings.ml[457,15605+14]..[457,15605+15])
                                        Pexp_ident "n" (lib/warnings.ml[457,15605+14]..[457,15605+15])
                                    ]
                              ]
                ]
                expression (lib/warnings.ml[459,15626+2]..[487,16538+11])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/warnings.ml[459,15626+6]..[459,15626+15])
                        Ppat_var "get_range" (lib/warnings.ml[459,15626+6]..[459,15626+15])
                      expression (lib/warnings.ml[459,15626+16]..[466,15843+15]) ghost
                        Pexp_function
                        [
                          Pparam_val (lib/warnings.ml[459,15626+16]..[459,15626+17])
                            Nolabel
                            None
                            pattern (lib/warnings.ml[459,15626+16]..[459,15626+17])
                              Ppat_var "i" (lib/warnings.ml[459,15626+16]..[459,15626+17])
                        ]
                        None
                        Pfunction_body
                          expression (lib/warnings.ml[460,15646+4]..[466,15843+15])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/warnings.ml[460,15646+8]..[460,15646+13])
                                  Ppat_tuple
                                  [
                                    pattern (lib/warnings.ml[460,15646+8]..[460,15646+9])
                                      Ppat_var "i" (lib/warnings.ml[460,15646+8]..[460,15646+9])
                                    pattern (lib/warnings.ml[460,15646+11]..[460,15646+13])
                                      Ppat_var "n1" (lib/warnings.ml[460,15646+11]..[460,15646+13])
                                  ]
                                expression (lib/warnings.ml[460,15646+16]..[460,15646+27])
                                  Pexp_apply
                                  expression (lib/warnings.ml[460,15646+16]..[460,15646+23])
                                    Pexp_ident "get_num" (lib/warnings.ml[460,15646+16]..[460,15646+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[460,15646+24]..[460,15646+25])
                                        Pexp_constant PConst_int (0,None)
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[460,15646+26]..[460,15646+27])
                                        Pexp_ident "i" (lib/warnings.ml[460,15646+26]..[460,15646+27])
                                  ]
                            ]
                            expression (lib/warnings.ml[461,15677+4]..[466,15843+15])
                              Pexp_ifthenelse
                              expression (lib/warnings.ml[461,15677+7]..[461,15677+64])
                                Pexp_apply
                                expression (lib/warnings.ml[461,15677+31]..[461,15677+33])
                                  Pexp_ident "&&" (lib/warnings.ml[461,15677+31]..[461,15677+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[461,15677+7]..[461,15677+30])
                                      Pexp_apply
                                      expression (lib/warnings.ml[461,15677+13]..[461,15677+14])
                                        Pexp_ident "<" (lib/warnings.ml[461,15677+13]..[461,15677+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[461,15677+7]..[461,15677+12])
                                            Pexp_apply
                                            expression (lib/warnings.ml[461,15677+9]..[461,15677+10])
                                              Pexp_ident "+" (lib/warnings.ml[461,15677+9]..[461,15677+10])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[461,15677+7]..[461,15677+8])
                                                  Pexp_ident "i" (lib/warnings.ml[461,15677+7]..[461,15677+8])
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[461,15677+11]..[461,15677+12])
                                                  Pexp_constant PConst_int (2,None)
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[461,15677+15]..[461,15677+30])
                                            Pexp_apply
                                            expression (lib/warnings.ml[461,15677+15]..[461,15677+28])
                                              Pexp_ident "String.length" (lib/warnings.ml[461,15677+15]..[461,15677+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[461,15677+29]..[461,15677+30])
                                                  Pexp_ident "s" (lib/warnings.ml[461,15677+29]..[461,15677+30])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[461,15677+34]..[461,15677+64])
                                      Pexp_apply
                                      expression (lib/warnings.ml[461,15677+46]..[461,15677+48])
                                        Pexp_ident "&&" (lib/warnings.ml[461,15677+46]..[461,15677+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[461,15677+34]..[461,15677+45])
                                            Pexp_apply
                                            expression (lib/warnings.ml[461,15677+40]..[461,15677+41])
                                              Pexp_ident "=" (lib/warnings.ml[461,15677+40]..[461,15677+41])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[461,15677+34]..[461,15677+39])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[461,15677+34]..[461,15677+39]) ghost
                                                    Pexp_ident "String.get" (lib/warnings.ml[461,15677+34]..[461,15677+39]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[461,15677+34]..[461,15677+35])
                                                        Pexp_ident "s" (lib/warnings.ml[461,15677+34]..[461,15677+35])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[461,15677+37]..[461,15677+38])
                                                        Pexp_ident "i" (lib/warnings.ml[461,15677+37]..[461,15677+38])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[461,15677+42]..[461,15677+45])
                                                  Pexp_constant PConst_char 2e
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[461,15677+49]..[461,15677+64])
                                            Pexp_apply
                                            expression (lib/warnings.ml[461,15677+59]..[461,15677+60])
                                              Pexp_ident "=" (lib/warnings.ml[461,15677+59]..[461,15677+60])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[461,15677+49]..[461,15677+58])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[461,15677+49]..[461,15677+58]) ghost
                                                    Pexp_ident "String.get" (lib/warnings.ml[461,15677+49]..[461,15677+58]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[461,15677+49]..[461,15677+50])
                                                        Pexp_ident "s" (lib/warnings.ml[461,15677+49]..[461,15677+50])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[461,15677+52]..[461,15677+57])
                                                        Pexp_apply
                                                        expression (lib/warnings.ml[461,15677+54]..[461,15677+55])
                                                          Pexp_ident "+" (lib/warnings.ml[461,15677+54]..[461,15677+55])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/warnings.ml[461,15677+52]..[461,15677+53])
                                                              Pexp_ident "i" (lib/warnings.ml[461,15677+52]..[461,15677+53])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/warnings.ml[461,15677+56]..[461,15677+57])
                                                              Pexp_constant PConst_int (1,None)
                                                        ]
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[461,15677+61]..[461,15677+64])
                                                  Pexp_constant PConst_char 2e
                                            ]
                                      ]
                                ]
                              expression (lib/warnings.ml[462,15747+6]..[464,15818+15])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/warnings.ml[462,15747+10]..[462,15747+15])
                                      Ppat_tuple
                                      [
                                        pattern (lib/warnings.ml[462,15747+10]..[462,15747+11])
                                          Ppat_var "i" (lib/warnings.ml[462,15747+10]..[462,15747+11])
                                        pattern (lib/warnings.ml[462,15747+13]..[462,15747+15])
                                          Ppat_var "n2" (lib/warnings.ml[462,15747+13]..[462,15747+15])
                                      ]
                                    expression (lib/warnings.ml[462,15747+18]..[462,15747+35])
                                      Pexp_apply
                                      expression (lib/warnings.ml[462,15747+18]..[462,15747+25])
                                        Pexp_ident "get_num" (lib/warnings.ml[462,15747+18]..[462,15747+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[462,15747+26]..[462,15747+27])
                                            Pexp_constant PConst_int (0,None)
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[462,15747+28]..[462,15747+35])
                                            Pexp_apply
                                            expression (lib/warnings.ml[462,15747+31]..[462,15747+32])
                                              Pexp_ident "+" (lib/warnings.ml[462,15747+31]..[462,15747+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[462,15747+29]..[462,15747+30])
                                                  Pexp_ident "i" (lib/warnings.ml[462,15747+29]..[462,15747+30])
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[462,15747+33]..[462,15747+34])
                                                  Pexp_constant PConst_int (2,None)
                                            ]
                                      ]
                                ]
                                expression (lib/warnings.ml[463,15786+6]..[464,15818+15])
                                  Pexp_sequence
                                  expression (lib/warnings.ml[463,15786+6]..[463,15786+30])
                                    Pexp_ifthenelse
                                    expression (lib/warnings.ml[463,15786+9]..[463,15786+16])
                                      Pexp_apply
                                      expression (lib/warnings.ml[463,15786+12]..[463,15786+13])
                                        Pexp_ident "<" (lib/warnings.ml[463,15786+12]..[463,15786+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[463,15786+9]..[463,15786+11])
                                            Pexp_ident "n2" (lib/warnings.ml[463,15786+9]..[463,15786+11])
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[463,15786+14]..[463,15786+16])
                                            Pexp_ident "n1" (lib/warnings.ml[463,15786+14]..[463,15786+16])
                                      ]
                                    expression (lib/warnings.ml[463,15786+22]..[463,15786+30])
                                      Pexp_apply
                                      expression (lib/warnings.ml[463,15786+22]..[463,15786+27])
                                        Pexp_ident "error" (lib/warnings.ml[463,15786+22]..[463,15786+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[463,15786+28]..[463,15786+30])
                                            Pexp_construct "()" (lib/warnings.ml[463,15786+28]..[463,15786+30])
                                            None
                                      ]
                                    None
                                  expression (lib/warnings.ml[464,15818+6]..[464,15818+15])
                                    Pexp_tuple
                                    [
                                      expression (lib/warnings.ml[464,15818+6]..[464,15818+7])
                                        Pexp_ident "i" (lib/warnings.ml[464,15818+6]..[464,15818+7])
                                      expression (lib/warnings.ml[464,15818+9]..[464,15818+11])
                                        Pexp_ident "n1" (lib/warnings.ml[464,15818+9]..[464,15818+11])
                                      expression (lib/warnings.ml[464,15818+13]..[464,15818+15])
                                        Pexp_ident "n2" (lib/warnings.ml[464,15818+13]..[464,15818+15])
                                    ]
                              Some
                                expression (lib/warnings.ml[466,15843+6]..[466,15843+15])
                                  Pexp_tuple
                                  [
                                    expression (lib/warnings.ml[466,15843+6]..[466,15843+7])
                                      Pexp_ident "i" (lib/warnings.ml[466,15843+6]..[466,15843+7])
                                    expression (lib/warnings.ml[466,15843+9]..[466,15843+11])
                                      Pexp_ident "n1" (lib/warnings.ml[466,15843+9]..[466,15843+11])
                                    expression (lib/warnings.ml[466,15843+13]..[466,15843+15])
                                      Pexp_ident "n1" (lib/warnings.ml[466,15843+13]..[466,15843+15])
                                  ]
                  ]
                  expression (lib/warnings.ml[468,15864+2]..[487,16538+11])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (lib/warnings.ml[468,15864+10]..[468,15864+14])
                          Ppat_var "loop" (lib/warnings.ml[468,15864+10]..[468,15864+14])
                        expression (lib/warnings.ml[468,15864+15]..[476,16190+19]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/warnings.ml[468,15864+15]..[468,15864+21])
                              Nolabel
                              None
                              pattern (lib/warnings.ml[468,15864+15]..[468,15864+21])
                                Ppat_var "tokens" (lib/warnings.ml[468,15864+15]..[468,15864+21])
                            Pparam_val (lib/warnings.ml[468,15864+22]..[468,15864+23])
                              Nolabel
                              None
                              pattern (lib/warnings.ml[468,15864+22]..[468,15864+23])
                                Ppat_var "i" (lib/warnings.ml[468,15864+22]..[468,15864+23])
                          ]
                          None
                          Pfunction_body
                            expression (lib/warnings.ml[469,15890+4]..[476,16190+19])
                              Pexp_ifthenelse
                              expression (lib/warnings.ml[469,15890+7]..[469,15890+27])
                                Pexp_apply
                                expression (lib/warnings.ml[469,15890+9]..[469,15890+11])
                                  Pexp_ident ">=" (lib/warnings.ml[469,15890+9]..[469,15890+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[469,15890+7]..[469,15890+8])
                                      Pexp_ident "i" (lib/warnings.ml[469,15890+7]..[469,15890+8])
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[469,15890+12]..[469,15890+27])
                                      Pexp_apply
                                      expression (lib/warnings.ml[469,15890+12]..[469,15890+25])
                                        Pexp_ident "String.length" (lib/warnings.ml[469,15890+12]..[469,15890+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[469,15890+26]..[469,15890+27])
                                            Pexp_ident "s" (lib/warnings.ml[469,15890+26]..[469,15890+27])
                                      ]
                                ]
                              expression (lib/warnings.ml[469,15890+33]..[469,15890+48])
                                Pexp_apply
                                expression (lib/warnings.ml[469,15890+33]..[469,15890+41])
                                  Pexp_ident "List.rev" (lib/warnings.ml[469,15890+33]..[469,15890+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[469,15890+42]..[469,15890+48])
                                      Pexp_ident "tokens" (lib/warnings.ml[469,15890+42]..[469,15890+48])
                                ]
                              Some
                                expression (lib/warnings.ml[470,15944+4]..[476,16190+19])
                                  Pexp_match
                                  expression (lib/warnings.ml[470,15944+10]..[470,15944+15])
                                    Pexp_apply
                                    expression (lib/warnings.ml[470,15944+10]..[470,15944+15]) ghost
                                      Pexp_ident "String.get" (lib/warnings.ml[470,15944+10]..[470,15944+15]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[470,15944+10]..[470,15944+11])
                                          Pexp_ident "s" (lib/warnings.ml[470,15944+10]..[470,15944+11])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[470,15944+13]..[470,15944+14])
                                          Pexp_ident "i" (lib/warnings.ml[470,15944+13]..[470,15944+14])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/warnings.ml[471,15965+6]..[471,15965+29])
                                        Ppat_or
                                        pattern (lib/warnings.ml[471,15965+6]..[471,15965+16])
                                          Ppat_interval PConst_char 41..PConst_char 5a
                                        pattern (lib/warnings.ml[471,15965+19]..[471,15965+29])
                                          Ppat_interval PConst_char 61..PConst_char 7a
                                      expression (lib/warnings.ml[472,15998+8]..[472,15998+47])
                                        Pexp_apply
                                        expression (lib/warnings.ml[472,15998+8]..[472,15998+12])
                                          Pexp_ident "loop" (lib/warnings.ml[472,15998+8]..[472,15998+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[472,15998+13]..[472,15998+41])
                                              Pexp_construct "::" (lib/warnings.ml[472,15998+32]..[472,15998+34])
                                              Some
                                                expression (lib/warnings.ml[472,15998+14]..[472,15998+40]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lib/warnings.ml[472,15998+14]..[472,15998+32])
                                                      Pexp_construct "Letter" (lib/warnings.ml[472,15998+14]..[472,15998+20])
                                                      Some
                                                        expression (lib/warnings.ml[472,15998+20]..[472,15998+32])
                                                          Pexp_tuple
                                                          [
                                                            expression (lib/warnings.ml[472,15998+21]..[472,15998+26])
                                                              Pexp_apply
                                                              expression (lib/warnings.ml[472,15998+21]..[472,15998+26]) ghost
                                                                Pexp_ident "String.get" (lib/warnings.ml[472,15998+21]..[472,15998+26]) ghost
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/warnings.ml[472,15998+21]..[472,15998+22])
                                                                    Pexp_ident "s" (lib/warnings.ml[472,15998+21]..[472,15998+22])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/warnings.ml[472,15998+24]..[472,15998+25])
                                                                    Pexp_ident "i" (lib/warnings.ml[472,15998+24]..[472,15998+25])
                                                              ]
                                                            expression (lib/warnings.ml[472,15998+27]..[472,15998+31])
                                                              Pexp_construct "None" (lib/warnings.ml[472,15998+27]..[472,15998+31])
                                                              None
                                                          ]
                                                    expression (lib/warnings.ml[472,15998+34]..[472,15998+40])
                                                      Pexp_ident "tokens" (lib/warnings.ml[472,15998+34]..[472,15998+40])
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[472,15998+42]..[472,15998+47])
                                              Pexp_apply
                                              expression (lib/warnings.ml[472,15998+44]..[472,15998+45])
                                                Pexp_ident "+" (lib/warnings.ml[472,15998+44]..[472,15998+45])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[472,15998+43]..[472,15998+44])
                                                    Pexp_ident "i" (lib/warnings.ml[472,15998+43]..[472,15998+44])
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[472,15998+45]..[472,15998+46])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/warnings.ml[473,16046+6]..[473,16046+9])
                                        Ppat_constant PConst_char 2b
                                      expression (lib/warnings.ml[473,16046+13]..[473,16046+45])
                                        Pexp_apply
                                        expression (lib/warnings.ml[473,16046+13]..[473,16046+28])
                                          Pexp_ident "loop_letter_num" (lib/warnings.ml[473,16046+13]..[473,16046+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[473,16046+29]..[473,16046+35])
                                              Pexp_ident "tokens" (lib/warnings.ml[473,16046+29]..[473,16046+35])
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[473,16046+36]..[473,16046+39])
                                              Pexp_construct "Set" (lib/warnings.ml[473,16046+36]..[473,16046+39])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[473,16046+40]..[473,16046+45])
                                              Pexp_apply
                                              expression (lib/warnings.ml[473,16046+42]..[473,16046+43])
                                                Pexp_ident "+" (lib/warnings.ml[473,16046+42]..[473,16046+43])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[473,16046+41]..[473,16046+42])
                                                    Pexp_ident "i" (lib/warnings.ml[473,16046+41]..[473,16046+42])
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[473,16046+43]..[473,16046+44])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/warnings.ml[474,16092+6]..[474,16092+9])
                                        Ppat_constant PConst_char 2d
                                      expression (lib/warnings.ml[474,16092+13]..[474,16092+47])
                                        Pexp_apply
                                        expression (lib/warnings.ml[474,16092+13]..[474,16092+28])
                                          Pexp_ident "loop_letter_num" (lib/warnings.ml[474,16092+13]..[474,16092+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[474,16092+29]..[474,16092+35])
                                              Pexp_ident "tokens" (lib/warnings.ml[474,16092+29]..[474,16092+35])
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[474,16092+36]..[474,16092+41])
                                              Pexp_construct "Clear" (lib/warnings.ml[474,16092+36]..[474,16092+41])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[474,16092+42]..[474,16092+47])
                                              Pexp_apply
                                              expression (lib/warnings.ml[474,16092+44]..[474,16092+45])
                                                Pexp_ident "+" (lib/warnings.ml[474,16092+44]..[474,16092+45])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[474,16092+43]..[474,16092+44])
                                                    Pexp_ident "i" (lib/warnings.ml[474,16092+43]..[474,16092+44])
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[474,16092+45]..[474,16092+46])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/warnings.ml[475,16140+6]..[475,16140+9])
                                        Ppat_constant PConst_char 40
                                      expression (lib/warnings.ml[475,16140+13]..[475,16140+49])
                                        Pexp_apply
                                        expression (lib/warnings.ml[475,16140+13]..[475,16140+28])
                                          Pexp_ident "loop_letter_num" (lib/warnings.ml[475,16140+13]..[475,16140+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[475,16140+29]..[475,16140+35])
                                              Pexp_ident "tokens" (lib/warnings.ml[475,16140+29]..[475,16140+35])
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[475,16140+36]..[475,16140+43])
                                              Pexp_construct "Set_all" (lib/warnings.ml[475,16140+36]..[475,16140+43])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[475,16140+44]..[475,16140+49])
                                              Pexp_apply
                                              expression (lib/warnings.ml[475,16140+46]..[475,16140+47])
                                                Pexp_ident "+" (lib/warnings.ml[475,16140+46]..[475,16140+47])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[475,16140+45]..[475,16140+46])
                                                    Pexp_ident "i" (lib/warnings.ml[475,16140+45]..[475,16140+46])
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[475,16140+47]..[475,16140+48])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/warnings.ml[476,16190+6]..[476,16190+7])
                                        Ppat_any
                                      expression (lib/warnings.ml[476,16190+11]..[476,16190+19])
                                        Pexp_apply
                                        expression (lib/warnings.ml[476,16190+11]..[476,16190+16])
                                          Pexp_ident "error" (lib/warnings.ml[476,16190+11]..[476,16190+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[476,16190+17]..[476,16190+19])
                                              Pexp_construct "()" (lib/warnings.ml[476,16190+17]..[476,16190+19])
                                              None
                                        ]
                                  ]
                      <def>
                        pattern (lib/warnings.ml[477,16210+6]..[477,16210+21])
                          Ppat_var "loop_letter_num" (lib/warnings.ml[477,16210+6]..[477,16210+21])
                        expression (lib/warnings.ml[477,16210+22]..[485,16513+19]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/warnings.ml[477,16210+22]..[477,16210+28])
                              Nolabel
                              None
                              pattern (lib/warnings.ml[477,16210+22]..[477,16210+28])
                                Ppat_var "tokens" (lib/warnings.ml[477,16210+22]..[477,16210+28])
                            Pparam_val (lib/warnings.ml[477,16210+29]..[477,16210+37])
                              Nolabel
                              None
                              pattern (lib/warnings.ml[477,16210+29]..[477,16210+37])
                                Ppat_var "modifier" (lib/warnings.ml[477,16210+29]..[477,16210+37])
                            Pparam_val (lib/warnings.ml[477,16210+38]..[477,16210+39])
                              Nolabel
                              None
                              pattern (lib/warnings.ml[477,16210+38]..[477,16210+39])
                                Ppat_var "i" (lib/warnings.ml[477,16210+38]..[477,16210+39])
                          ]
                          None
                          Pfunction_body
                            expression (lib/warnings.ml[478,16252+4]..[485,16513+19])
                              Pexp_ifthenelse
                              expression (lib/warnings.ml[478,16252+7]..[478,16252+27])
                                Pexp_apply
                                expression (lib/warnings.ml[478,16252+9]..[478,16252+11])
                                  Pexp_ident ">=" (lib/warnings.ml[478,16252+9]..[478,16252+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[478,16252+7]..[478,16252+8])
                                      Pexp_ident "i" (lib/warnings.ml[478,16252+7]..[478,16252+8])
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[478,16252+12]..[478,16252+27])
                                      Pexp_apply
                                      expression (lib/warnings.ml[478,16252+12]..[478,16252+25])
                                        Pexp_ident "String.length" (lib/warnings.ml[478,16252+12]..[478,16252+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[478,16252+26]..[478,16252+27])
                                            Pexp_ident "s" (lib/warnings.ml[478,16252+26]..[478,16252+27])
                                      ]
                                ]
                              expression (lib/warnings.ml[478,16252+33]..[478,16252+41])
                                Pexp_apply
                                expression (lib/warnings.ml[478,16252+33]..[478,16252+38])
                                  Pexp_ident "error" (lib/warnings.ml[478,16252+33]..[478,16252+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[478,16252+39]..[478,16252+41])
                                      Pexp_construct "()" (lib/warnings.ml[478,16252+39]..[478,16252+41])
                                      None
                                ]
                              Some
                                expression (lib/warnings.ml[479,16299+4]..[485,16513+19])
                                  Pexp_match
                                  expression (lib/warnings.ml[479,16299+10]..[479,16299+15])
                                    Pexp_apply
                                    expression (lib/warnings.ml[479,16299+10]..[479,16299+15]) ghost
                                      Pexp_ident "String.get" (lib/warnings.ml[479,16299+10]..[479,16299+15]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[479,16299+10]..[479,16299+11])
                                          Pexp_ident "s" (lib/warnings.ml[479,16299+10]..[479,16299+11])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[479,16299+13]..[479,16299+14])
                                          Pexp_ident "i" (lib/warnings.ml[479,16299+13]..[479,16299+14])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/warnings.ml[480,16320+6]..[480,16320+16])
                                        Ppat_interval PConst_char 30..PConst_char 39
                                      expression (lib/warnings.ml[481,16340+8]..[482,16379+44])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/warnings.ml[481,16340+12]..[481,16340+21])
                                              Ppat_tuple
                                              [
                                                pattern (lib/warnings.ml[481,16340+12]..[481,16340+13])
                                                  Ppat_var "i" (lib/warnings.ml[481,16340+12]..[481,16340+13])
                                                pattern (lib/warnings.ml[481,16340+15]..[481,16340+17])
                                                  Ppat_var "n1" (lib/warnings.ml[481,16340+15]..[481,16340+17])
                                                pattern (lib/warnings.ml[481,16340+19]..[481,16340+21])
                                                  Ppat_var "n2" (lib/warnings.ml[481,16340+19]..[481,16340+21])
                                              ]
                                            expression (lib/warnings.ml[481,16340+24]..[481,16340+35])
                                              Pexp_apply
                                              expression (lib/warnings.ml[481,16340+24]..[481,16340+33])
                                                Pexp_ident "get_range" (lib/warnings.ml[481,16340+24]..[481,16340+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[481,16340+34]..[481,16340+35])
                                                    Pexp_ident "i" (lib/warnings.ml[481,16340+34]..[481,16340+35])
                                              ]
                                        ]
                                        expression (lib/warnings.ml[482,16379+8]..[482,16379+44])
                                          Pexp_apply
                                          expression (lib/warnings.ml[482,16379+8]..[482,16379+12])
                                            Pexp_ident "loop" (lib/warnings.ml[482,16379+8]..[482,16379+12])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[482,16379+13]..[482,16379+42])
                                                Pexp_construct "::" (lib/warnings.ml[482,16379+33]..[482,16379+35])
                                                Some
                                                  expression (lib/warnings.ml[482,16379+14]..[482,16379+41]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lib/warnings.ml[482,16379+14]..[482,16379+33])
                                                        Pexp_construct "Num" (lib/warnings.ml[482,16379+14]..[482,16379+17])
                                                        Some
                                                          expression (lib/warnings.ml[482,16379+17]..[482,16379+33])
                                                            Pexp_tuple
                                                            [
                                                              expression (lib/warnings.ml[482,16379+18]..[482,16379+20])
                                                                Pexp_ident "n1" (lib/warnings.ml[482,16379+18]..[482,16379+20])
                                                              expression (lib/warnings.ml[482,16379+21]..[482,16379+23])
                                                                Pexp_ident "n2" (lib/warnings.ml[482,16379+21]..[482,16379+23])
                                                              expression (lib/warnings.ml[482,16379+24]..[482,16379+32])
                                                                Pexp_ident "modifier" (lib/warnings.ml[482,16379+24]..[482,16379+32])
                                                            ]
                                                      expression (lib/warnings.ml[482,16379+35]..[482,16379+41])
                                                        Pexp_ident "tokens" (lib/warnings.ml[482,16379+35]..[482,16379+41])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[482,16379+43]..[482,16379+44])
                                                Pexp_ident "i" (lib/warnings.ml[482,16379+43]..[482,16379+44])
                                          ]
                                    <case>
                                      pattern (lib/warnings.ml[483,16424+6]..[483,16424+29])
                                        Ppat_or
                                        pattern (lib/warnings.ml[483,16424+6]..[483,16424+16])
                                          Ppat_interval PConst_char 41..PConst_char 5a
                                        pattern (lib/warnings.ml[483,16424+19]..[483,16424+29])
                                          Ppat_interval PConst_char 61..PConst_char 7a
                                      expression (lib/warnings.ml[484,16457+7]..[484,16457+55])
                                        Pexp_apply
                                        expression (lib/warnings.ml[484,16457+7]..[484,16457+11])
                                          Pexp_ident "loop" (lib/warnings.ml[484,16457+7]..[484,16457+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[484,16457+12]..[484,16457+49])
                                              Pexp_construct "::" (lib/warnings.ml[484,16457+40]..[484,16457+42])
                                              Some
                                                expression (lib/warnings.ml[484,16457+13]..[484,16457+48]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lib/warnings.ml[484,16457+13]..[484,16457+40])
                                                      Pexp_construct "Letter" (lib/warnings.ml[484,16457+13]..[484,16457+19])
                                                      Some
                                                        expression (lib/warnings.ml[484,16457+19]..[484,16457+40])
                                                          Pexp_tuple
                                                          [
                                                            expression (lib/warnings.ml[484,16457+20]..[484,16457+25])
                                                              Pexp_apply
                                                              expression (lib/warnings.ml[484,16457+20]..[484,16457+25]) ghost
                                                                Pexp_ident "String.get" (lib/warnings.ml[484,16457+20]..[484,16457+25]) ghost
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/warnings.ml[484,16457+20]..[484,16457+21])
                                                                    Pexp_ident "s" (lib/warnings.ml[484,16457+20]..[484,16457+21])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/warnings.ml[484,16457+23]..[484,16457+24])
                                                                    Pexp_ident "i" (lib/warnings.ml[484,16457+23]..[484,16457+24])
                                                              ]
                                                            expression (lib/warnings.ml[484,16457+26]..[484,16457+39])
                                                              Pexp_construct "Some" (lib/warnings.ml[484,16457+26]..[484,16457+30])
                                                              Some
                                                                expression (lib/warnings.ml[484,16457+31]..[484,16457+39])
                                                                  Pexp_ident "modifier" (lib/warnings.ml[484,16457+31]..[484,16457+39])
                                                          ]
                                                    expression (lib/warnings.ml[484,16457+42]..[484,16457+48])
                                                      Pexp_ident "tokens" (lib/warnings.ml[484,16457+42]..[484,16457+48])
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[484,16457+50]..[484,16457+55])
                                              Pexp_apply
                                              expression (lib/warnings.ml[484,16457+52]..[484,16457+53])
                                                Pexp_ident "+" (lib/warnings.ml[484,16457+52]..[484,16457+53])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[484,16457+51]..[484,16457+52])
                                                    Pexp_ident "i" (lib/warnings.ml[484,16457+51]..[484,16457+52])
                                                <arg>
                                                Nolabel
                                                  expression (lib/warnings.ml[484,16457+53]..[484,16457+54])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/warnings.ml[485,16513+6]..[485,16513+7])
                                        Ppat_any
                                      expression (lib/warnings.ml[485,16513+11]..[485,16513+19])
                                        Pexp_apply
                                        expression (lib/warnings.ml[485,16513+11]..[485,16513+16])
                                          Pexp_ident "error" (lib/warnings.ml[485,16513+11]..[485,16513+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[485,16513+17]..[485,16513+19])
                                              Pexp_construct "()" (lib/warnings.ml[485,16513+17]..[485,16513+19])
                                              None
                                        ]
                                  ]
                    ]
                    expression (lib/warnings.ml[487,16538+2]..[487,16538+11])
                      Pexp_apply
                      expression (lib/warnings.ml[487,16538+2]..[487,16538+6])
                        Pexp_ident "loop" (lib/warnings.ml[487,16538+2]..[487,16538+6])
                      [
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[487,16538+7]..[487,16538+9])
                            Pexp_construct "[]" (lib/warnings.ml[487,16538+7]..[487,16538+9])
                            None
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[487,16538+10]..[487,16538+11])
                            Pexp_constant PConst_int (0,None)
                      ]
    ]
  structure_item (lib/warnings.ml[489,16551+0]..[535,18087+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[489,16551+4]..[489,16551+13])
          Ppat_var "parse_opt" (lib/warnings.ml[489,16551+4]..[489,16551+13])
        expression (lib/warnings.ml[489,16551+14]..[535,18087+9]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[489,16551+14]..[489,16551+19])
              Nolabel
              None
              pattern (lib/warnings.ml[489,16551+14]..[489,16551+19])
                Ppat_var "error" (lib/warnings.ml[489,16551+14]..[489,16551+19])
            Pparam_val (lib/warnings.ml[489,16551+20]..[489,16551+26])
              Nolabel
              None
              pattern (lib/warnings.ml[489,16551+20]..[489,16551+26])
                Ppat_var "active" (lib/warnings.ml[489,16551+20]..[489,16551+26])
            Pparam_val (lib/warnings.ml[489,16551+27]..[489,16551+34])
              Nolabel
              None
              pattern (lib/warnings.ml[489,16551+27]..[489,16551+34])
                Ppat_var "errflag" (lib/warnings.ml[489,16551+27]..[489,16551+34])
            Pparam_val (lib/warnings.ml[489,16551+35]..[489,16551+36])
              Nolabel
              None
              pattern (lib/warnings.ml[489,16551+35]..[489,16551+36])
                Ppat_var "s" (lib/warnings.ml[489,16551+35]..[489,16551+36])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[490,16590+2]..[535,18087+9])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[490,16590+6]..[490,16590+11])
                    Ppat_var "flags" (lib/warnings.ml[490,16590+6]..[490,16590+11])
                  expression (lib/warnings.ml[490,16590+14]..[490,16590+47])
                    Pexp_ifthenelse
                    expression (lib/warnings.ml[490,16590+17]..[490,16590+24])
                      Pexp_ident "errflag" (lib/warnings.ml[490,16590+17]..[490,16590+24])
                    expression (lib/warnings.ml[490,16590+30]..[490,16590+35])
                      Pexp_ident "error" (lib/warnings.ml[490,16590+30]..[490,16590+35])
                    Some
                      expression (lib/warnings.ml[490,16590+41]..[490,16590+47])
                        Pexp_ident "active" (lib/warnings.ml[490,16590+41]..[490,16590+47])
              ]
              expression (lib/warnings.ml[491,16641+2]..[535,18087+9])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/warnings.ml[491,16641+6]..[491,16641+12])
                      Ppat_var "action" (lib/warnings.ml[491,16641+6]..[491,16641+12])
                    expression (lib/warnings.ml[491,16641+13]..[506,17177+11]) ghost
                      Pexp_function
                      [
                        Pparam_val (lib/warnings.ml[491,16641+13]..[491,16641+21])
                          Nolabel
                          None
                          pattern (lib/warnings.ml[491,16641+13]..[491,16641+21])
                            Ppat_var "modifier" (lib/warnings.ml[491,16641+13]..[491,16641+21])
                        Pparam_val (lib/warnings.ml[491,16641+22]..[491,16641+23])
                          Nolabel
                          None
                          pattern (lib/warnings.ml[491,16641+22]..[491,16641+23])
                            Ppat_var "i" (lib/warnings.ml[491,16641+22]..[491,16641+23])
                      ]
                      None
                      Pfunction_body
                        expression (lib/warnings.ml[491,16641+26]..[506,17177+11])
                          Pexp_match
                          expression (lib/warnings.ml[491,16641+32]..[491,16641+40])
                            Pexp_ident "modifier" (lib/warnings.ml[491,16641+32]..[491,16641+40])
                          [
                            <case>
                              pattern (lib/warnings.ml[492,16687+6]..[492,16687+9])
                                Ppat_construct "Set" (lib/warnings.ml[492,16687+6]..[492,16687+9])
                                None
                              expression (lib/warnings.ml[493,16700+8]..[494,16773+30])
                                Pexp_ifthenelse
                                expression (lib/warnings.ml[493,16700+11]..[493,16700+16])
                                  Pexp_apply
                                  expression (lib/warnings.ml[493,16700+13]..[493,16700+14])
                                    Pexp_ident "=" (lib/warnings.ml[493,16700+13]..[493,16700+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[493,16700+11]..[493,16700+12])
                                        Pexp_ident "i" (lib/warnings.ml[493,16700+11]..[493,16700+12])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[493,16700+15]..[493,16700+16])
                                        Pexp_constant PConst_int (3,None)
                                  ]
                                expression (lib/warnings.ml[493,16700+22]..[493,16700+72])
                                  Pexp_apply
                                  expression (lib/warnings.ml[493,16700+22]..[493,16700+31])
                                    Pexp_ident "set_alert" (lib/warnings.ml[493,16700+22]..[493,16700+31])
                                  [
                                    <arg>
                                    Labelled "error"
                                      expression (lib/warnings.ml[493,16700+39]..[493,16700+46])
                                        Pexp_ident "errflag" (lib/warnings.ml[493,16700+39]..[493,16700+46])
                                    <arg>
                                    Labelled "enable"
                                      expression (lib/warnings.ml[493,16700+55]..[493,16700+59])
                                        Pexp_construct "true" (lib/warnings.ml[493,16700+55]..[493,16700+59])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[493,16700+60]..[493,16700+72])
                                        Pexp_constant PConst_string("deprecated",(lib/warnings.ml[493,16700+61]..[493,16700+71]),None)
                                  ]
                                Some
                                  expression (lib/warnings.ml[494,16773+13]..[494,16773+30])
                                    Pexp_apply
                                    expression (lib/warnings.ml[494,16773+13]..[494,16773+30]) ghost
                                      Pexp_ident "Array.set" (lib/warnings.ml[494,16773+13]..[494,16773+30]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[494,16773+13]..[494,16773+18])
                                          Pexp_ident "flags" (lib/warnings.ml[494,16773+13]..[494,16773+18])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[494,16773+20]..[494,16773+21])
                                          Pexp_ident "i" (lib/warnings.ml[494,16773+20]..[494,16773+21])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[494,16773+26]..[494,16773+30])
                                          Pexp_construct "true" (lib/warnings.ml[494,16773+26]..[494,16773+30])
                                          None
                                    ]
                            <case>
                              pattern (lib/warnings.ml[495,16804+6]..[495,16804+11])
                                Ppat_construct "Clear" (lib/warnings.ml[495,16804+6]..[495,16804+11])
                                None
                              expression (lib/warnings.ml[496,16819+8]..[497,16893+31])
                                Pexp_ifthenelse
                                expression (lib/warnings.ml[496,16819+11]..[496,16819+16])
                                  Pexp_apply
                                  expression (lib/warnings.ml[496,16819+13]..[496,16819+14])
                                    Pexp_ident "=" (lib/warnings.ml[496,16819+13]..[496,16819+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[496,16819+11]..[496,16819+12])
                                        Pexp_ident "i" (lib/warnings.ml[496,16819+11]..[496,16819+12])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[496,16819+15]..[496,16819+16])
                                        Pexp_constant PConst_int (3,None)
                                  ]
                                expression (lib/warnings.ml[496,16819+22]..[496,16819+73])
                                  Pexp_apply
                                  expression (lib/warnings.ml[496,16819+22]..[496,16819+31])
                                    Pexp_ident "set_alert" (lib/warnings.ml[496,16819+22]..[496,16819+31])
                                  [
                                    <arg>
                                    Labelled "error"
                                      expression (lib/warnings.ml[496,16819+39]..[496,16819+46])
                                        Pexp_ident "errflag" (lib/warnings.ml[496,16819+39]..[496,16819+46])
                                    <arg>
                                    Labelled "enable"
                                      expression (lib/warnings.ml[496,16819+55]..[496,16819+60])
                                        Pexp_construct "false" (lib/warnings.ml[496,16819+55]..[496,16819+60])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[496,16819+61]..[496,16819+73])
                                        Pexp_constant PConst_string("deprecated",(lib/warnings.ml[496,16819+62]..[496,16819+72]),None)
                                  ]
                                Some
                                  expression (lib/warnings.ml[497,16893+13]..[497,16893+31])
                                    Pexp_apply
                                    expression (lib/warnings.ml[497,16893+13]..[497,16893+31]) ghost
                                      Pexp_ident "Array.set" (lib/warnings.ml[497,16893+13]..[497,16893+31]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[497,16893+13]..[497,16893+18])
                                          Pexp_ident "flags" (lib/warnings.ml[497,16893+13]..[497,16893+18])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[497,16893+20]..[497,16893+21])
                                          Pexp_ident "i" (lib/warnings.ml[497,16893+20]..[497,16893+21])
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[497,16893+26]..[497,16893+31])
                                          Pexp_construct "false" (lib/warnings.ml[497,16893+26]..[497,16893+31])
                                          None
                                    ]
                            <case>
                              pattern (lib/warnings.ml[498,16925+6]..[498,16925+13])
                                Ppat_construct "Set_all" (lib/warnings.ml[498,16925+6]..[498,16925+13])
                                None
                              expression (lib/warnings.ml[499,16942+8]..[506,17177+11])
                                Pexp_ifthenelse
                                expression (lib/warnings.ml[499,16942+11]..[499,16942+16])
                                  Pexp_apply
                                  expression (lib/warnings.ml[499,16942+13]..[499,16942+14])
                                    Pexp_ident "=" (lib/warnings.ml[499,16942+13]..[499,16942+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[499,16942+11]..[499,16942+12])
                                        Pexp_ident "i" (lib/warnings.ml[499,16942+11]..[499,16942+12])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[499,16942+15]..[499,16942+16])
                                        Pexp_constant PConst_int (3,None)
                                  ]
                                expression (lib/warnings.ml[499,16942+22]..[502,17088+11])
                                  Pexp_sequence
                                  expression (lib/warnings.ml[500,16970+10]..[500,16970+58])
                                    Pexp_apply
                                    expression (lib/warnings.ml[500,16970+10]..[500,16970+19])
                                      Pexp_ident "set_alert" (lib/warnings.ml[500,16970+10]..[500,16970+19])
                                    [
                                      <arg>
                                      Labelled "error"
                                        expression (lib/warnings.ml[500,16970+27]..[500,16970+32])
                                          Pexp_construct "false" (lib/warnings.ml[500,16970+27]..[500,16970+32])
                                          None
                                      <arg>
                                      Labelled "enable"
                                        expression (lib/warnings.ml[500,16970+41]..[500,16970+45])
                                          Pexp_construct "true" (lib/warnings.ml[500,16970+41]..[500,16970+45])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[500,16970+46]..[500,16970+58])
                                          Pexp_constant PConst_string("deprecated",(lib/warnings.ml[500,16970+47]..[500,16970+57]),None)
                                    ]
                                  expression (lib/warnings.ml[501,17030+10]..[501,17030+57])
                                    Pexp_apply
                                    expression (lib/warnings.ml[501,17030+10]..[501,17030+19])
                                      Pexp_ident "set_alert" (lib/warnings.ml[501,17030+10]..[501,17030+19])
                                    [
                                      <arg>
                                      Labelled "error"
                                        expression (lib/warnings.ml[501,17030+27]..[501,17030+31])
                                          Pexp_construct "true" (lib/warnings.ml[501,17030+27]..[501,17030+31])
                                          None
                                      <arg>
                                      Labelled "enable"
                                        expression (lib/warnings.ml[501,17030+40]..[501,17030+44])
                                          Pexp_construct "true" (lib/warnings.ml[501,17030+40]..[501,17030+44])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[501,17030+45]..[501,17030+57])
                                          Pexp_constant PConst_string("deprecated",(lib/warnings.ml[501,17030+46]..[501,17030+56]),None)
                                    ]
                                Some
                                  expression (lib/warnings.ml[503,17100+13]..[506,17177+11])
                                    Pexp_sequence
                                    expression (lib/warnings.ml[504,17119+10]..[504,17119+28])
                                      Pexp_apply
                                      expression (lib/warnings.ml[504,17119+10]..[504,17119+28]) ghost
                                        Pexp_ident "Array.set" (lib/warnings.ml[504,17119+10]..[504,17119+28]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[504,17119+10]..[504,17119+16])
                                            Pexp_ident "active" (lib/warnings.ml[504,17119+10]..[504,17119+16])
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[504,17119+18]..[504,17119+19])
                                            Pexp_ident "i" (lib/warnings.ml[504,17119+18]..[504,17119+19])
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[504,17119+24]..[504,17119+28])
                                            Pexp_construct "true" (lib/warnings.ml[504,17119+24]..[504,17119+28])
                                            None
                                      ]
                                    expression (lib/warnings.ml[505,17149+10]..[505,17149+27])
                                      Pexp_apply
                                      expression (lib/warnings.ml[505,17149+10]..[505,17149+27]) ghost
                                        Pexp_ident "Array.set" (lib/warnings.ml[505,17149+10]..[505,17149+27]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[505,17149+10]..[505,17149+15])
                                            Pexp_ident "error" (lib/warnings.ml[505,17149+10]..[505,17149+15])
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[505,17149+17]..[505,17149+18])
                                            Pexp_ident "i" (lib/warnings.ml[505,17149+17]..[505,17149+18])
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[505,17149+23]..[505,17149+27])
                                            Pexp_construct "true" (lib/warnings.ml[505,17149+23]..[505,17149+27])
                                            None
                                      ]
                          ]
                ]
                expression (lib/warnings.ml[508,17194+2]..[535,18087+9])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/warnings.ml[508,17194+6]..[508,17194+10])
                        Ppat_var "eval" (lib/warnings.ml[508,17194+6]..[508,17194+10])
                      expression (lib/warnings.ml[508,17194+13]..[517,17479+78])
                        Pexp_function
                        []
                        None
                        Pfunction_cases (lib/warnings.ml[508,17194+13]..[517,17479+78])
                          [
                            <case>
                              pattern (lib/warnings.ml[509,17216+6]..[509,17216+18])
                                Ppat_construct "Letter" (lib/warnings.ml[509,17216+6]..[509,17216+12])
                                Some
                                  []
                                  pattern (lib/warnings.ml[509,17216+12]..[509,17216+18])
                                    Ppat_tuple
                                    [
                                      pattern (lib/warnings.ml[509,17216+13]..[509,17216+14])
                                        Ppat_var "c" (lib/warnings.ml[509,17216+13]..[509,17216+14])
                                      pattern (lib/warnings.ml[509,17216+16]..[509,17216+17])
                                        Ppat_var "m" (lib/warnings.ml[509,17216+16]..[509,17216+17])
                                    ]
                              expression (lib/warnings.ml[510,17238+8]..[515,17402+47])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/warnings.ml[510,17238+12]..[510,17238+14])
                                      Ppat_var "lc" (lib/warnings.ml[510,17238+12]..[510,17238+14])
                                    expression (lib/warnings.ml[510,17238+17]..[510,17238+39])
                                      Pexp_apply
                                      expression (lib/warnings.ml[510,17238+17]..[510,17238+37])
                                        Pexp_ident "Char.lowercase_ascii" (lib/warnings.ml[510,17238+17]..[510,17238+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[510,17238+38]..[510,17238+39])
                                            Pexp_ident "c" (lib/warnings.ml[510,17238+38]..[510,17238+39])
                                      ]
                                ]
                                expression (lib/warnings.ml[511,17281+8]..[515,17402+47])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/warnings.ml[511,17281+12]..[511,17281+20])
                                        Ppat_var "modifier" (lib/warnings.ml[511,17281+12]..[511,17281+20])
                                      expression (lib/warnings.ml[511,17281+23]..[513,17367+23])
                                        Pexp_match
                                        expression (lib/warnings.ml[511,17281+29]..[511,17281+30])
                                          Pexp_ident "m" (lib/warnings.ml[511,17281+29]..[511,17281+30])
                                        [
                                          <case>
                                            pattern (lib/warnings.ml[512,17317+12]..[512,17317+16])
                                              Ppat_construct "None" (lib/warnings.ml[512,17317+12]..[512,17317+16])
                                              None
                                            expression (lib/warnings.ml[512,17317+20]..[512,17317+49])
                                              Pexp_ifthenelse
                                              expression (lib/warnings.ml[512,17317+23]..[512,17317+29])
                                                Pexp_apply
                                                expression (lib/warnings.ml[512,17317+25]..[512,17317+26])
                                                  Pexp_ident "=" (lib/warnings.ml[512,17317+25]..[512,17317+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/warnings.ml[512,17317+23]..[512,17317+24])
                                                      Pexp_ident "c" (lib/warnings.ml[512,17317+23]..[512,17317+24])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/warnings.ml[512,17317+27]..[512,17317+29])
                                                      Pexp_ident "lc" (lib/warnings.ml[512,17317+27]..[512,17317+29])
                                                ]
                                              expression (lib/warnings.ml[512,17317+35]..[512,17317+40])
                                                Pexp_construct "Clear" (lib/warnings.ml[512,17317+35]..[512,17317+40])
                                                None
                                              Some
                                                expression (lib/warnings.ml[512,17317+46]..[512,17317+49])
                                                  Pexp_construct "Set" (lib/warnings.ml[512,17317+46]..[512,17317+49])
                                                  None
                                          <case>
                                            pattern (lib/warnings.ml[513,17367+12]..[513,17367+18])
                                              Ppat_construct "Some" (lib/warnings.ml[513,17367+12]..[513,17367+16])
                                              Some
                                                []
                                                pattern (lib/warnings.ml[513,17367+17]..[513,17367+18])
                                                  Ppat_var "m" (lib/warnings.ml[513,17367+17]..[513,17367+18])
                                            expression (lib/warnings.ml[513,17367+22]..[513,17367+23])
                                              Pexp_ident "m" (lib/warnings.ml[513,17367+22]..[513,17367+23])
                                        ]
                                  ]
                                  expression (lib/warnings.ml[515,17402+8]..[515,17402+47])
                                    Pexp_apply
                                    expression (lib/warnings.ml[515,17402+8]..[515,17402+17])
                                      Pexp_ident "List.iter" (lib/warnings.ml[515,17402+8]..[515,17402+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[515,17402+18]..[515,17402+35])
                                          Pexp_apply
                                          expression (lib/warnings.ml[515,17402+19]..[515,17402+25])
                                            Pexp_ident "action" (lib/warnings.ml[515,17402+19]..[515,17402+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[515,17402+26]..[515,17402+34])
                                                Pexp_ident "modifier" (lib/warnings.ml[515,17402+26]..[515,17402+34])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[515,17402+36]..[515,17402+47])
                                          Pexp_apply
                                          expression (lib/warnings.ml[515,17402+37]..[515,17402+43])
                                            Pexp_ident "letter" (lib/warnings.ml[515,17402+37]..[515,17402+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[515,17402+44]..[515,17402+46])
                                                Pexp_ident "lc" (lib/warnings.ml[515,17402+44]..[515,17402+46])
                                          ]
                                    ]
                            <case>
                              pattern (lib/warnings.ml[516,17450+6]..[516,17450+25])
                                Ppat_construct "Num" (lib/warnings.ml[516,17450+6]..[516,17450+9])
                                Some
                                  []
                                  pattern (lib/warnings.ml[516,17450+9]..[516,17450+25])
                                    Ppat_tuple
                                    [
                                      pattern (lib/warnings.ml[516,17450+10]..[516,17450+12])
                                        Ppat_var "n1" (lib/warnings.ml[516,17450+10]..[516,17450+12])
                                      pattern (lib/warnings.ml[516,17450+13]..[516,17450+15])
                                        Ppat_var "n2" (lib/warnings.ml[516,17450+13]..[516,17450+15])
                                      pattern (lib/warnings.ml[516,17450+16]..[516,17450+24])
                                        Ppat_var "modifier" (lib/warnings.ml[516,17450+16]..[516,17450+24])
                                    ]
                              expression (lib/warnings.ml[517,17479+8]..[517,17479+78])
                                Pexp_for Up
                                pattern (lib/warnings.ml[517,17479+12]..[517,17479+13])
                                  Ppat_var "n" (lib/warnings.ml[517,17479+12]..[517,17479+13])
                                expression (lib/warnings.ml[517,17479+16]..[517,17479+18])
                                  Pexp_ident "n1" (lib/warnings.ml[517,17479+16]..[517,17479+18])
                                expression (lib/warnings.ml[517,17479+22]..[517,17479+52])
                                  Pexp_apply
                                  expression (lib/warnings.ml[517,17479+22]..[517,17479+29])
                                    Pexp_ident "Int.min" (lib/warnings.ml[517,17479+22]..[517,17479+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[517,17479+30]..[517,17479+32])
                                        Pexp_ident "n2" (lib/warnings.ml[517,17479+30]..[517,17479+32])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[517,17479+33]..[517,17479+52])
                                        Pexp_ident "last_warning_number" (lib/warnings.ml[517,17479+33]..[517,17479+52])
                                  ]
                                expression (lib/warnings.ml[517,17479+56]..[517,17479+73])
                                  Pexp_apply
                                  expression (lib/warnings.ml[517,17479+56]..[517,17479+62])
                                    Pexp_ident "action" (lib/warnings.ml[517,17479+56]..[517,17479+62])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[517,17479+63]..[517,17479+71])
                                        Pexp_ident "modifier" (lib/warnings.ml[517,17479+63]..[517,17479+71])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[517,17479+72]..[517,17479+73])
                                        Pexp_ident "n" (lib/warnings.ml[517,17479+72]..[517,17479+73])
                                  ]
                          ]
                  ]
                  expression (lib/warnings.ml[519,17563+2]..[535,18087+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[519,17563+6]..[519,17563+20])
                          Ppat_var "parse_and_eval" (lib/warnings.ml[519,17563+6]..[519,17563+20])
                        expression (lib/warnings.ml[519,17563+21]..[522,17652+23]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/warnings.ml[519,17563+21]..[519,17563+22])
                              Nolabel
                              None
                              pattern (lib/warnings.ml[519,17563+21]..[519,17563+22])
                                Ppat_var "s" (lib/warnings.ml[519,17563+21]..[519,17563+22])
                          ]
                          None
                          Pfunction_body
                            expression (lib/warnings.ml[520,17588+4]..[522,17652+23])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/warnings.ml[520,17588+8]..[520,17588+14])
                                    Ppat_var "tokens" (lib/warnings.ml[520,17588+8]..[520,17588+14])
                                  expression (lib/warnings.ml[520,17588+17]..[520,17588+33])
                                    Pexp_apply
                                    expression (lib/warnings.ml[520,17588+17]..[520,17588+31])
                                      Pexp_ident "parse_warnings" (lib/warnings.ml[520,17588+17]..[520,17588+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[520,17588+32]..[520,17588+33])
                                          Pexp_ident "s" (lib/warnings.ml[520,17588+32]..[520,17588+33])
                                    ]
                              ]
                              expression (lib/warnings.ml[521,17625+4]..[522,17652+23])
                                Pexp_sequence
                                expression (lib/warnings.ml[521,17625+4]..[521,17625+25])
                                  Pexp_apply
                                  expression (lib/warnings.ml[521,17625+4]..[521,17625+13])
                                    Pexp_ident "List.iter" (lib/warnings.ml[521,17625+4]..[521,17625+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[521,17625+14]..[521,17625+18])
                                        Pexp_ident "eval" (lib/warnings.ml[521,17625+14]..[521,17625+18])
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[521,17625+19]..[521,17625+25])
                                        Pexp_ident "tokens" (lib/warnings.ml[521,17625+19]..[521,17625+25])
                                  ]
                                expression (lib/warnings.ml[522,17652+4]..[522,17652+23])
                                  Pexp_apply
                                  expression (lib/warnings.ml[522,17652+4]..[522,17652+16])
                                    Pexp_ident "letter_alert" (lib/warnings.ml[522,17652+4]..[522,17652+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[522,17652+17]..[522,17652+23])
                                        Pexp_ident "tokens" (lib/warnings.ml[522,17652+17]..[522,17652+23])
                                  ]
                    ]
                    expression (lib/warnings.ml[524,17681+3]..[535,18087+9])
                      Pexp_match
                      expression (lib/warnings.ml[524,17681+9]..[524,17681+25])
                        Pexp_apply
                        expression (lib/warnings.ml[524,17681+9]..[524,17681+23])
                          Pexp_ident "name_to_number" (lib/warnings.ml[524,17681+9]..[524,17681+23])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[524,17681+24]..[524,17681+25])
                              Pexp_ident "s" (lib/warnings.ml[524,17681+24]..[524,17681+25])
                        ]
                      [
                        <case>
                          pattern (lib/warnings.ml[525,17712+4]..[525,17712+10])
                            Ppat_construct "Some" (lib/warnings.ml[525,17712+4]..[525,17712+8])
                            Some
                              []
                              pattern (lib/warnings.ml[525,17712+9]..[525,17712+10])
                                Ppat_var "n" (lib/warnings.ml[525,17712+9]..[525,17712+10])
                          expression (lib/warnings.ml[525,17712+14]..[525,17712+32])
                            Pexp_sequence
                            expression (lib/warnings.ml[525,17712+14]..[525,17712+26])
                              Pexp_apply
                              expression (lib/warnings.ml[525,17712+14]..[525,17712+20])
                                Pexp_ident "action" (lib/warnings.ml[525,17712+14]..[525,17712+20])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[525,17712+21]..[525,17712+24])
                                    Pexp_construct "Set" (lib/warnings.ml[525,17712+21]..[525,17712+24])
                                    None
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[525,17712+25]..[525,17712+26])
                                    Pexp_ident "n" (lib/warnings.ml[525,17712+25]..[525,17712+26])
                              ]
                            expression (lib/warnings.ml[525,17712+28]..[525,17712+32])
                              Pexp_construct "None" (lib/warnings.ml[525,17712+28]..[525,17712+32])
                              None
                        <case>
                          pattern (lib/warnings.ml[526,17745+4]..[526,17745+8])
                            Ppat_construct "None" (lib/warnings.ml[526,17745+4]..[526,17745+8])
                            None
                          expression (lib/warnings.ml[527,17757+6]..[535,18087+9])
                            Pexp_ifthenelse
                            expression (lib/warnings.ml[527,17757+9]..[527,17757+15])
                              Pexp_apply
                              expression (lib/warnings.ml[527,17757+11]..[527,17757+12])
                                Pexp_ident "=" (lib/warnings.ml[527,17757+11]..[527,17757+12])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[527,17757+9]..[527,17757+10])
                                    Pexp_ident "s" (lib/warnings.ml[527,17757+9]..[527,17757+10])
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[527,17757+13]..[527,17757+15])
                                    Pexp_constant PConst_string("",(lib/warnings.ml[527,17757+14]..[527,17757+14]),None)
                              ]
                            expression (lib/warnings.ml[527,17757+21]..[527,17757+37])
                              Pexp_apply
                              expression (lib/warnings.ml[527,17757+21]..[527,17757+35])
                                Pexp_ident "parse_and_eval" (lib/warnings.ml[527,17757+21]..[527,17757+35])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[527,17757+36]..[527,17757+37])
                                    Pexp_ident "s" (lib/warnings.ml[527,17757+36]..[527,17757+37])
                              ]
                            Some
                              expression (lib/warnings.ml[528,17795+11]..[535,18087+9])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/warnings.ml[529,17812+12]..[529,17812+16])
                                      Ppat_var "rest" (lib/warnings.ml[529,17812+12]..[529,17812+16])
                                    expression (lib/warnings.ml[529,17812+19]..[529,17812+55])
                                      Pexp_apply
                                      expression (lib/warnings.ml[529,17812+19]..[529,17812+29])
                                        Pexp_ident "String.sub" (lib/warnings.ml[529,17812+19]..[529,17812+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[529,17812+30]..[529,17812+31])
                                            Pexp_ident "s" (lib/warnings.ml[529,17812+30]..[529,17812+31])
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[529,17812+32]..[529,17812+33])
                                            Pexp_constant PConst_int (1,None)
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[529,17812+34]..[529,17812+55])
                                            Pexp_apply
                                            expression (lib/warnings.ml[529,17812+51]..[529,17812+52])
                                              Pexp_ident "-" (lib/warnings.ml[529,17812+51]..[529,17812+52])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[529,17812+35]..[529,17812+50])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[529,17812+35]..[529,17812+48])
                                                    Pexp_ident "String.length" (lib/warnings.ml[529,17812+35]..[529,17812+48])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[529,17812+49]..[529,17812+50])
                                                        Pexp_ident "s" (lib/warnings.ml[529,17812+49]..[529,17812+50])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[529,17812+53]..[529,17812+54])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                      ]
                                ]
                                expression (lib/warnings.ml[530,17871+8]..[534,18055+31])
                                  Pexp_match
                                  expression (lib/warnings.ml[530,17871+14]..[530,17871+40])
                                    Pexp_tuple
                                    [
                                      expression (lib/warnings.ml[530,17871+14]..[530,17871+19])
                                        Pexp_apply
                                        expression (lib/warnings.ml[530,17871+14]..[530,17871+19]) ghost
                                          Pexp_ident "String.get" (lib/warnings.ml[530,17871+14]..[530,17871+19]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[530,17871+14]..[530,17871+15])
                                              Pexp_ident "s" (lib/warnings.ml[530,17871+14]..[530,17871+15])
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[530,17871+17]..[530,17871+18])
                                              Pexp_constant PConst_int (0,None)
                                        ]
                                      expression (lib/warnings.ml[530,17871+21]..[530,17871+40])
                                        Pexp_apply
                                        expression (lib/warnings.ml[530,17871+21]..[530,17871+35])
                                          Pexp_ident "name_to_number" (lib/warnings.ml[530,17871+21]..[530,17871+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[530,17871+36]..[530,17871+40])
                                              Pexp_ident "rest" (lib/warnings.ml[530,17871+36]..[530,17871+40])
                                        ]
                                    ]
                                  [
                                    <case>
                                      pattern (lib/warnings.ml[531,17917+10]..[531,17917+21])
                                        Ppat_tuple
                                        [
                                          pattern (lib/warnings.ml[531,17917+10]..[531,17917+13])
                                            Ppat_constant PConst_char 2b
                                          pattern (lib/warnings.ml[531,17917+15]..[531,17917+21])
                                            Ppat_construct "Some" (lib/warnings.ml[531,17917+15]..[531,17917+19])
                                            Some
                                              []
                                              pattern (lib/warnings.ml[531,17917+20]..[531,17917+21])
                                                Ppat_var "n" (lib/warnings.ml[531,17917+20]..[531,17917+21])
                                        ]
                                      expression (lib/warnings.ml[531,17917+25]..[531,17917+43])
                                        Pexp_sequence
                                        expression (lib/warnings.ml[531,17917+25]..[531,17917+37])
                                          Pexp_apply
                                          expression (lib/warnings.ml[531,17917+25]..[531,17917+31])
                                            Pexp_ident "action" (lib/warnings.ml[531,17917+25]..[531,17917+31])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[531,17917+32]..[531,17917+35])
                                                Pexp_construct "Set" (lib/warnings.ml[531,17917+32]..[531,17917+35])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[531,17917+36]..[531,17917+37])
                                                Pexp_ident "n" (lib/warnings.ml[531,17917+36]..[531,17917+37])
                                          ]
                                        expression (lib/warnings.ml[531,17917+39]..[531,17917+43])
                                          Pexp_construct "None" (lib/warnings.ml[531,17917+39]..[531,17917+43])
                                          None
                                    <case>
                                      pattern (lib/warnings.ml[532,17961+10]..[532,17961+21])
                                        Ppat_tuple
                                        [
                                          pattern (lib/warnings.ml[532,17961+10]..[532,17961+13])
                                            Ppat_constant PConst_char 2d
                                          pattern (lib/warnings.ml[532,17961+15]..[532,17961+21])
                                            Ppat_construct "Some" (lib/warnings.ml[532,17961+15]..[532,17961+19])
                                            Some
                                              []
                                              pattern (lib/warnings.ml[532,17961+20]..[532,17961+21])
                                                Ppat_var "n" (lib/warnings.ml[532,17961+20]..[532,17961+21])
                                        ]
                                      expression (lib/warnings.ml[532,17961+25]..[532,17961+45])
                                        Pexp_sequence
                                        expression (lib/warnings.ml[532,17961+25]..[532,17961+39])
                                          Pexp_apply
                                          expression (lib/warnings.ml[532,17961+25]..[532,17961+31])
                                            Pexp_ident "action" (lib/warnings.ml[532,17961+25]..[532,17961+31])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[532,17961+32]..[532,17961+37])
                                                Pexp_construct "Clear" (lib/warnings.ml[532,17961+32]..[532,17961+37])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[532,17961+38]..[532,17961+39])
                                                Pexp_ident "n" (lib/warnings.ml[532,17961+38]..[532,17961+39])
                                          ]
                                        expression (lib/warnings.ml[532,17961+41]..[532,17961+45])
                                          Pexp_construct "None" (lib/warnings.ml[532,17961+41]..[532,17961+45])
                                          None
                                    <case>
                                      pattern (lib/warnings.ml[533,18007+10]..[533,18007+21])
                                        Ppat_tuple
                                        [
                                          pattern (lib/warnings.ml[533,18007+10]..[533,18007+13])
                                            Ppat_constant PConst_char 40
                                          pattern (lib/warnings.ml[533,18007+15]..[533,18007+21])
                                            Ppat_construct "Some" (lib/warnings.ml[533,18007+15]..[533,18007+19])
                                            Some
                                              []
                                              pattern (lib/warnings.ml[533,18007+20]..[533,18007+21])
                                                Ppat_var "n" (lib/warnings.ml[533,18007+20]..[533,18007+21])
                                        ]
                                      expression (lib/warnings.ml[533,18007+25]..[533,18007+47])
                                        Pexp_sequence
                                        expression (lib/warnings.ml[533,18007+25]..[533,18007+41])
                                          Pexp_apply
                                          expression (lib/warnings.ml[533,18007+25]..[533,18007+31])
                                            Pexp_ident "action" (lib/warnings.ml[533,18007+25]..[533,18007+31])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[533,18007+32]..[533,18007+39])
                                                Pexp_construct "Set_all" (lib/warnings.ml[533,18007+32]..[533,18007+39])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[533,18007+40]..[533,18007+41])
                                                Pexp_ident "n" (lib/warnings.ml[533,18007+40]..[533,18007+41])
                                          ]
                                        expression (lib/warnings.ml[533,18007+43]..[533,18007+47])
                                          Pexp_construct "None" (lib/warnings.ml[533,18007+43]..[533,18007+47])
                                          None
                                    <case>
                                      pattern (lib/warnings.ml[534,18055+10]..[534,18055+11])
                                        Ppat_any
                                      expression (lib/warnings.ml[534,18055+15]..[534,18055+31])
                                        Pexp_apply
                                        expression (lib/warnings.ml[534,18055+15]..[534,18055+29])
                                          Pexp_ident "parse_and_eval" (lib/warnings.ml[534,18055+15]..[534,18055+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[534,18055+30]..[534,18055+31])
                                              Pexp_ident "s" (lib/warnings.ml[534,18055+30]..[534,18055+31])
                                        ]
                                  ]
                      ]
    ]
  structure_item (lib/warnings.ml[537,18098+0]..[542,18317+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[537,18098+4]..[537,18098+17])
          Ppat_var "parse_options" (lib/warnings.ml[537,18098+4]..[537,18098+17])
        expression (lib/warnings.ml[537,18098+18]..[542,18317+8]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[537,18098+18]..[537,18098+25])
              Nolabel
              None
              pattern (lib/warnings.ml[537,18098+18]..[537,18098+25])
                Ppat_var "errflag" (lib/warnings.ml[537,18098+18]..[537,18098+25])
            Pparam_val (lib/warnings.ml[537,18098+26]..[537,18098+27])
              Nolabel
              None
              pattern (lib/warnings.ml[537,18098+26]..[537,18098+27])
                Ppat_var "s" (lib/warnings.ml[537,18098+26]..[537,18098+27])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[538,18128+2]..[542,18317+8])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[538,18128+6]..[538,18128+11])
                    Ppat_var "error" (lib/warnings.ml[538,18128+6]..[538,18128+11])
                  expression (lib/warnings.ml[538,18128+14]..[538,18128+41])
                    Pexp_apply
                    expression (lib/warnings.ml[538,18128+14]..[538,18128+24])
                      Pexp_ident "Array.copy" (lib/warnings.ml[538,18128+14]..[538,18128+24])
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[538,18128+25]..[538,18128+41])
                          Pexp_field
                          expression (lib/warnings.ml[538,18128+25]..[538,18128+35])
                            Pexp_apply
                            expression (lib/warnings.ml[538,18128+26]..[538,18128+27])
                              Pexp_ident "!" (lib/warnings.ml[538,18128+26]..[538,18128+27])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[538,18128+27]..[538,18128+34])
                                  Pexp_ident "current" (lib/warnings.ml[538,18128+27]..[538,18128+34])
                            ]
                          "error" (lib/warnings.ml[538,18128+36]..[538,18128+41])
                    ]
              ]
              expression (lib/warnings.ml[539,18173+2]..[542,18317+8])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/warnings.ml[539,18173+6]..[539,18173+12])
                      Ppat_var "active" (lib/warnings.ml[539,18173+6]..[539,18173+12])
                    expression (lib/warnings.ml[539,18173+15]..[539,18173+43])
                      Pexp_apply
                      expression (lib/warnings.ml[539,18173+15]..[539,18173+25])
                        Pexp_ident "Array.copy" (lib/warnings.ml[539,18173+15]..[539,18173+25])
                      [
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[539,18173+26]..[539,18173+43])
                            Pexp_field
                            expression (lib/warnings.ml[539,18173+26]..[539,18173+36])
                              Pexp_apply
                              expression (lib/warnings.ml[539,18173+27]..[539,18173+28])
                                Pexp_ident "!" (lib/warnings.ml[539,18173+27]..[539,18173+28])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[539,18173+28]..[539,18173+35])
                                    Pexp_ident "current" (lib/warnings.ml[539,18173+28]..[539,18173+35])
                              ]
                            "active" (lib/warnings.ml[539,18173+37]..[539,18173+43])
                      ]
                ]
                expression (lib/warnings.ml[540,18220+2]..[542,18317+8])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/warnings.ml[540,18220+6]..[540,18220+12])
                        Ppat_var "alerts" (lib/warnings.ml[540,18220+6]..[540,18220+12])
                      expression (lib/warnings.ml[540,18220+15]..[540,18220+47])
                        Pexp_apply
                        expression (lib/warnings.ml[540,18220+15]..[540,18220+24])
                          Pexp_ident "parse_opt" (lib/warnings.ml[540,18220+15]..[540,18220+24])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[540,18220+25]..[540,18220+30])
                              Pexp_ident "error" (lib/warnings.ml[540,18220+25]..[540,18220+30])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[540,18220+31]..[540,18220+37])
                              Pexp_ident "active" (lib/warnings.ml[540,18220+31]..[540,18220+37])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[540,18220+38]..[540,18220+45])
                              Pexp_ident "errflag" (lib/warnings.ml[540,18220+38]..[540,18220+45])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[540,18220+46]..[540,18220+47])
                              Pexp_ident "s" (lib/warnings.ml[540,18220+46]..[540,18220+47])
                        ]
                  ]
                  expression (lib/warnings.ml[541,18271+2]..[542,18317+8])
                    Pexp_sequence
                    expression (lib/warnings.ml[541,18271+2]..[541,18271+44])
                      Pexp_apply
                      expression (lib/warnings.ml[541,18271+10]..[541,18271+12])
                        Pexp_ident ":=" (lib/warnings.ml[541,18271+10]..[541,18271+12])
                      [
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[541,18271+2]..[541,18271+9])
                            Pexp_ident "current" (lib/warnings.ml[541,18271+2]..[541,18271+9])
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[541,18271+13]..[541,18271+44])
                            Pexp_record
                            [
                              "error" (lib/warnings.ml[541,18271+30]..[541,18271+35]) ghost
                                expression (lib/warnings.ml[541,18271+30]..[541,18271+35])
                                  Pexp_ident "error" (lib/warnings.ml[541,18271+30]..[541,18271+35])
                              "active" (lib/warnings.ml[541,18271+37]..[541,18271+43]) ghost
                                expression (lib/warnings.ml[541,18271+37]..[541,18271+43])
                                  Pexp_ident "active" (lib/warnings.ml[541,18271+37]..[541,18271+43])
                            ]
                            Some
                              expression (lib/warnings.ml[541,18271+14]..[541,18271+24])
                                Pexp_apply
                                expression (lib/warnings.ml[541,18271+15]..[541,18271+16])
                                  Pexp_ident "!" (lib/warnings.ml[541,18271+15]..[541,18271+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[541,18271+16]..[541,18271+23])
                                      Pexp_ident "current" (lib/warnings.ml[541,18271+16]..[541,18271+23])
                                ]
                      ]
                    expression (lib/warnings.ml[542,18317+2]..[542,18317+8])
                      Pexp_ident "alerts" (lib/warnings.ml[542,18317+2]..[542,18317+8])
    ]
  structure_item (lib/warnings.ml[545,18398+0]..[545,18398+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[545,18398+4]..[545,18398+14])
          Ppat_var "defaults_w" (lib/warnings.ml[545,18398+4]..[545,18398+14])
        expression (lib/warnings.ml[545,18398+17]..[545,18398+65])
          Pexp_constant PConst_string("+a-4-7-9-27-29-30-32..42-44-45-48-50-60-66..70",(lib/warnings.ml[545,18398+18]..[545,18398+64]),None)
    ]
  structure_item (lib/warnings.ml[546,18464+0]..[546,18464+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[546,18464+4]..[546,18464+23])
          Ppat_var "defaults_warn_error" (lib/warnings.ml[546,18464+4]..[546,18464+23])
        expression (lib/warnings.ml[546,18464+26]..[546,18464+30])
          Pexp_constant PConst_string("-a",(lib/warnings.ml[546,18464+27]..[546,18464+29]),None)
    ]
  structure_item (lib/warnings.ml[547,18495+0]..[547,18495+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[547,18495+4]..[547,18495+27])
          Ppat_var "default_disabled_alerts" (lib/warnings.ml[547,18495+4]..[547,18495+27])
        expression (lib/warnings.ml[547,18495+30]..[547,18495+69])
          Pexp_construct "::" (lib/warnings.ml[547,18495+32]..[547,18495+69]) ghost
          Some
            expression (lib/warnings.ml[547,18495+32]..[547,18495+69]) ghost
              Pexp_tuple
              [
                expression (lib/warnings.ml[547,18495+32]..[547,18495+42])
                  Pexp_constant PConst_string("unstable",(lib/warnings.ml[547,18495+33]..[547,18495+41]),None)
                expression (lib/warnings.ml[547,18495+44]..[547,18495+69]) ghost
                  Pexp_construct "::" (lib/warnings.ml[547,18495+44]..[547,18495+69]) ghost
                  Some
                    expression (lib/warnings.ml[547,18495+44]..[547,18495+69]) ghost
                      Pexp_tuple
                      [
                        expression (lib/warnings.ml[547,18495+44]..[547,18495+67])
                          Pexp_constant PConst_string("unsynchronized_access",(lib/warnings.ml[547,18495+45]..[547,18495+66]),None)
                        expression (lib/warnings.ml[547,18495+68]..[547,18495+69]) ghost
                          Pexp_construct "[]" (lib/warnings.ml[547,18495+68]..[547,18495+69]) ghost
                          None
                      ]
              ]
    ]
  structure_item (lib/warnings.ml[549,18566+0]..[549,18566+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[549,18566+4]..[549,18566+6])
          Ppat_construct "()" (lib/warnings.ml[549,18566+4]..[549,18566+6])
          None
        expression (lib/warnings.ml[549,18566+9]..[549,18566+49])
          Pexp_apply
          expression (lib/warnings.ml[549,18566+16]..[549,18566+18])
            Pexp_ident "@@" (lib/warnings.ml[549,18566+16]..[549,18566+18])
          [
            <arg>
            Nolabel
              expression (lib/warnings.ml[549,18566+9]..[549,18566+15])
                Pexp_ident "ignore" (lib/warnings.ml[549,18566+9]..[549,18566+15])
            <arg>
            Nolabel
              expression (lib/warnings.ml[549,18566+19]..[549,18566+49])
                Pexp_apply
                expression (lib/warnings.ml[549,18566+19]..[549,18566+32])
                  Pexp_ident "parse_options" (lib/warnings.ml[549,18566+19]..[549,18566+32])
                [
                  <arg>
                  Nolabel
                    expression (lib/warnings.ml[549,18566+33]..[549,18566+38])
                      Pexp_construct "false" (lib/warnings.ml[549,18566+33]..[549,18566+38])
                      None
                  <arg>
                  Nolabel
                    expression (lib/warnings.ml[549,18566+39]..[549,18566+49])
                      Pexp_ident "defaults_w" (lib/warnings.ml[549,18566+39]..[549,18566+49])
                ]
          ]
    ]
  structure_item (lib/warnings.ml[550,18616+0]..[550,18616+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[550,18616+4]..[550,18616+6])
          Ppat_construct "()" (lib/warnings.ml[550,18616+4]..[550,18616+6])
          None
        expression (lib/warnings.ml[550,18616+9]..[550,18616+57])
          Pexp_apply
          expression (lib/warnings.ml[550,18616+16]..[550,18616+18])
            Pexp_ident "@@" (lib/warnings.ml[550,18616+16]..[550,18616+18])
          [
            <arg>
            Nolabel
              expression (lib/warnings.ml[550,18616+9]..[550,18616+15])
                Pexp_ident "ignore" (lib/warnings.ml[550,18616+9]..[550,18616+15])
            <arg>
            Nolabel
              expression (lib/warnings.ml[550,18616+19]..[550,18616+57])
                Pexp_apply
                expression (lib/warnings.ml[550,18616+19]..[550,18616+32])
                  Pexp_ident "parse_options" (lib/warnings.ml[550,18616+19]..[550,18616+32])
                [
                  <arg>
                  Nolabel
                    expression (lib/warnings.ml[550,18616+33]..[550,18616+37])
                      Pexp_construct "true" (lib/warnings.ml[550,18616+33]..[550,18616+37])
                      None
                  <arg>
                  Nolabel
                    expression (lib/warnings.ml[550,18616+38]..[550,18616+57])
                      Pexp_ident "defaults_warn_error" (lib/warnings.ml[550,18616+38]..[550,18616+57])
                ]
          ]
    ]
  structure_item (lib/warnings.ml[551,18674+0]..[552,18683+74])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[551,18674+4]..[551,18674+6])
          Ppat_construct "()" (lib/warnings.ml[551,18674+4]..[551,18674+6])
          None
        expression (lib/warnings.ml[552,18683+2]..[552,18683+74])
          Pexp_apply
          expression (lib/warnings.ml[552,18683+2]..[552,18683+11])
            Pexp_ident "List.iter" (lib/warnings.ml[552,18683+2]..[552,18683+11])
          [
            <arg>
            Nolabel
              expression (lib/warnings.ml[552,18683+12]..[552,18683+50])
                Pexp_apply
                expression (lib/warnings.ml[552,18683+13]..[552,18683+22])
                  Pexp_ident "set_alert" (lib/warnings.ml[552,18683+13]..[552,18683+22])
                [
                  <arg>
                  Labelled "error"
                    expression (lib/warnings.ml[552,18683+30]..[552,18683+35])
                      Pexp_construct "false" (lib/warnings.ml[552,18683+30]..[552,18683+35])
                      None
                  <arg>
                  Labelled "enable"
                    expression (lib/warnings.ml[552,18683+44]..[552,18683+49])
                      Pexp_construct "false" (lib/warnings.ml[552,18683+44]..[552,18683+49])
                      None
                ]
            <arg>
            Nolabel
              expression (lib/warnings.ml[552,18683+51]..[552,18683+74])
                Pexp_ident "default_disabled_alerts" (lib/warnings.ml[552,18683+51]..[552,18683+74])
          ]
    ]
  structure_item (lib/warnings.ml[554,18759+0]..[817,31065+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[554,18759+4]..[554,18759+11])
          Ppat_var "message" (lib/warnings.ml[554,18759+4]..[554,18759+11])
        expression (lib/warnings.ml[554,18759+14]..[817,31065+70])
          Pexp_function
          []
          None
          Pfunction_cases (lib/warnings.ml[554,18759+14]..[817,31065+70])
            [
              <case>
                pattern (lib/warnings.ml[555,18782+4]..[555,18782+17])
                  Ppat_construct "Comment_start" (lib/warnings.ml[555,18782+4]..[555,18782+17])
                  None
                expression (lib/warnings.ml[556,18803+6]..[557,18850+76])
                  Pexp_constant PConst_string("this `(*' is the start of a comment.\nHint: Did you forget spaces when writing the infix operator `( * )'?",(lib/warnings.ml[556,18803+7]..[557,18850+75]),None)
              <case>
                pattern (lib/warnings.ml[558,18927+4]..[558,18927+19])
                  Ppat_construct "Comment_not_end" (lib/warnings.ml[558,18927+4]..[558,18927+19])
                  None
                expression (lib/warnings.ml[558,18927+23]..[558,18927+58])
                  Pexp_constant PConst_string("this is not the end of a comment.",(lib/warnings.ml[558,18927+24]..[558,18927+57]),None)
              <case>
                pattern (lib/warnings.ml[559,18986+4]..[559,18986+20])
                  Ppat_construct "Fragile_match" (lib/warnings.ml[559,18986+4]..[559,18986+17])
                  Some
                    []
                    pattern (lib/warnings.ml[559,18986+18]..[559,18986+20])
                      Ppat_constant PConst_string("",(lib/warnings.ml[559,18986+19]..[559,18986+19]),None)
                expression (lib/warnings.ml[560,19010+6]..[560,19010+41])
                  Pexp_constant PConst_string("this pattern-matching is fragile.",(lib/warnings.ml[560,19010+7]..[560,19010+40]),None)
              <case>
                pattern (lib/warnings.ml[561,19052+4]..[561,19052+19])
                  Ppat_construct "Fragile_match" (lib/warnings.ml[561,19052+4]..[561,19052+17])
                  Some
                    []
                    pattern (lib/warnings.ml[561,19052+18]..[561,19052+19])
                      Ppat_var "s" (lib/warnings.ml[561,19052+18]..[561,19052+19])
                expression (lib/warnings.ml[562,19075+6]..[563,19119+80])
                  Pexp_apply
                  expression (lib/warnings.ml[563,19119+71]..[563,19119+72])
                    Pexp_ident "^" (lib/warnings.ml[563,19119+71]..[563,19119+72])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[562,19075+6]..[563,19119+70])
                        Pexp_constant PConst_string("this pattern-matching is fragile.\nIt will remain exhaustive when constructors are added to type ",(lib/warnings.ml[562,19075+7]..[563,19119+69]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[563,19119+73]..[563,19119+80])
                        Pexp_apply
                        expression (lib/warnings.ml[563,19119+75]..[563,19119+76])
                          Pexp_ident "^" (lib/warnings.ml[563,19119+75]..[563,19119+76])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[563,19119+73]..[563,19119+74])
                              Pexp_ident "s" (lib/warnings.ml[563,19119+73]..[563,19119+74])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[563,19119+77]..[563,19119+80])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[563,19119+78]..[563,19119+79]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[564,19200+4]..[564,19200+31])
                  Ppat_construct "Ignored_partial_application" (lib/warnings.ml[564,19200+4]..[564,19200+31])
                  None
                expression (lib/warnings.ml[565,19235+6]..[566,19283+41])
                  Pexp_constant PConst_string("this function application is partial,\nmaybe some arguments are missing.",(lib/warnings.ml[565,19235+7]..[566,19283+40]),None)
              <case>
                pattern (lib/warnings.ml[567,19325+4]..[567,19325+21])
                  Ppat_construct "Labels_omitted" (lib/warnings.ml[567,19325+4]..[567,19325+18])
                  Some
                    []
                    pattern (lib/warnings.ml[567,19325+19]..[567,19325+21])
                      Ppat_construct "[]" (lib/warnings.ml[567,19325+19]..[567,19325+21])
                      None
                expression (lib/warnings.ml[567,19325+25]..[567,19325+37])
                  Pexp_assert
                  expression (lib/warnings.ml[567,19325+32]..[567,19325+37])
                    Pexp_construct "false" (lib/warnings.ml[567,19325+32]..[567,19325+37])
                    None
              <case>
                pattern (lib/warnings.ml[568,19363+4]..[568,19363+22])
                  Ppat_construct "Labels_omitted" (lib/warnings.ml[568,19363+4]..[568,19363+18])
                  Some
                    []
                    pattern (lib/warnings.ml[568,19363+19]..[568,19363+22])
                      Ppat_construct "::" (lib/warnings.ml[568,19363+20]..[568,19363+22]) ghost
                      Some
                        []
                        pattern (lib/warnings.ml[568,19363+20]..[568,19363+22]) ghost
                          Ppat_tuple
                          [
                            pattern (lib/warnings.ml[568,19363+20]..[568,19363+21])
                              Ppat_var "l" (lib/warnings.ml[568,19363+20]..[568,19363+21])
                            pattern (lib/warnings.ml[568,19363+21]..[568,19363+22]) ghost
                              Ppat_construct "[]" (lib/warnings.ml[568,19363+21]..[568,19363+22]) ghost
                              None
                          ]
                expression (lib/warnings.ml[569,19389+5]..[569,19389+71])
                  Pexp_apply
                  expression (lib/warnings.ml[569,19389+14]..[569,19389+15])
                    Pexp_ident "^" (lib/warnings.ml[569,19389+14]..[569,19389+15])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[569,19389+5]..[569,19389+13])
                        Pexp_constant PConst_string("label ",(lib/warnings.ml[569,19389+6]..[569,19389+12]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[569,19389+16]..[569,19389+71])
                        Pexp_apply
                        expression (lib/warnings.ml[569,19389+18]..[569,19389+19])
                          Pexp_ident "^" (lib/warnings.ml[569,19389+18]..[569,19389+19])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[569,19389+16]..[569,19389+17])
                              Pexp_ident "l" (lib/warnings.ml[569,19389+16]..[569,19389+17])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[569,19389+20]..[569,19389+71])
                              Pexp_constant PConst_string(" was omitted in the application of this function.",(lib/warnings.ml[569,19389+21]..[569,19389+70]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[570,19461+4]..[570,19461+21])
                  Ppat_construct "Labels_omitted" (lib/warnings.ml[570,19461+4]..[570,19461+18])
                  Some
                    []
                    pattern (lib/warnings.ml[570,19461+19]..[570,19461+21])
                      Ppat_var "ls" (lib/warnings.ml[570,19461+19]..[570,19461+21])
                expression (lib/warnings.ml[571,19486+5]..[572,19527+59])
                  Pexp_apply
                  expression (lib/warnings.ml[571,19486+15]..[571,19486+16])
                    Pexp_ident "^" (lib/warnings.ml[571,19486+15]..[571,19486+16])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[571,19486+5]..[571,19486+14])
                        Pexp_constant PConst_string("labels ",(lib/warnings.ml[571,19486+6]..[571,19486+13]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[571,19486+17]..[572,19527+59])
                        Pexp_apply
                        expression (lib/warnings.ml[571,19486+39]..[571,19486+40])
                          Pexp_ident "^" (lib/warnings.ml[571,19486+39]..[571,19486+40])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[571,19486+17]..[571,19486+38])
                              Pexp_apply
                              expression (lib/warnings.ml[571,19486+17]..[571,19486+30])
                                Pexp_ident "String.concat" (lib/warnings.ml[571,19486+17]..[571,19486+30])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[571,19486+31]..[571,19486+35])
                                    Pexp_constant PConst_string(", ",(lib/warnings.ml[571,19486+32]..[571,19486+34]),None)
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[571,19486+36]..[571,19486+38])
                                    Pexp_ident "ls" (lib/warnings.ml[571,19486+36]..[571,19486+38])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[572,19527+7]..[572,19527+59])
                              Pexp_constant PConst_string(" were omitted in the application of this function.",(lib/warnings.ml[572,19527+8]..[572,19527+58]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[573,19587+4]..[573,19587+25])
                  Ppat_construct "Method_override" (lib/warnings.ml[573,19587+4]..[573,19587+19])
                  Some
                    []
                    pattern (lib/warnings.ml[573,19587+20]..[573,19587+25])
                      Ppat_construct "::" (lib/warnings.ml[573,19587+21]..[573,19587+25]) ghost
                      Some
                        []
                        pattern (lib/warnings.ml[573,19587+21]..[573,19587+25]) ghost
                          Ppat_tuple
                          [
                            pattern (lib/warnings.ml[573,19587+21]..[573,19587+24])
                              Ppat_var "lab" (lib/warnings.ml[573,19587+21]..[573,19587+24])
                            pattern (lib/warnings.ml[573,19587+24]..[573,19587+25]) ghost
                              Ppat_construct "[]" (lib/warnings.ml[573,19587+24]..[573,19587+25]) ghost
                              None
                          ]
                expression (lib/warnings.ml[574,19616+6]..[574,19616+45])
                  Pexp_apply
                  expression (lib/warnings.ml[574,19616+20]..[574,19616+21])
                    Pexp_ident "^" (lib/warnings.ml[574,19616+20]..[574,19616+21])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[574,19616+6]..[574,19616+19])
                        Pexp_constant PConst_string("the method ",(lib/warnings.ml[574,19616+7]..[574,19616+18]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[574,19616+22]..[574,19616+45])
                        Pexp_apply
                        expression (lib/warnings.ml[574,19616+26]..[574,19616+27])
                          Pexp_ident "^" (lib/warnings.ml[574,19616+26]..[574,19616+27])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[574,19616+22]..[574,19616+25])
                              Pexp_ident "lab" (lib/warnings.ml[574,19616+22]..[574,19616+25])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[574,19616+28]..[574,19616+45])
                              Pexp_constant PConst_string(" is overridden.",(lib/warnings.ml[574,19616+29]..[574,19616+44]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[575,19662+4]..[575,19662+36])
                  Ppat_construct "Method_override" (lib/warnings.ml[575,19662+4]..[575,19662+19])
                  Some
                    []
                    pattern (lib/warnings.ml[575,19662+20]..[575,19662+36])
                      Ppat_construct "::" (lib/warnings.ml[575,19662+27]..[575,19662+29])
                      Some
                        []
                        pattern (lib/warnings.ml[575,19662+21]..[575,19662+35]) ghost
                          Ppat_tuple
                          [
                            pattern (lib/warnings.ml[575,19662+21]..[575,19662+26])
                              Ppat_var "cname" (lib/warnings.ml[575,19662+21]..[575,19662+26])
                            pattern (lib/warnings.ml[575,19662+30]..[575,19662+35])
                              Ppat_var "slist" (lib/warnings.ml[575,19662+30]..[575,19662+35])
                          ]
                expression (lib/warnings.ml[576,19702+6]..[578,19787+38])
                  Pexp_apply
                  expression (lib/warnings.ml[576,19702+6]..[576,19702+19])
                    Pexp_ident "String.concat" (lib/warnings.ml[576,19702+6]..[576,19702+19])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[576,19702+20]..[576,19702+23])
                        Pexp_constant PConst_string(" ",(lib/warnings.ml[576,19702+21]..[576,19702+22]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[577,19726+8]..[578,19787+38])
                        Pexp_construct "::" (lib/warnings.ml[578,19787+9]..[578,19787+11])
                        Some
                          expression (lib/warnings.ml[577,19726+9]..[578,19787+37]) ghost
                            Pexp_tuple
                            [
                              expression (lib/warnings.ml[577,19726+9]..[577,19726+60])
                                Pexp_constant PConst_string("the following methods are overridden by the class",(lib/warnings.ml[577,19726+10]..[577,19726+59]),None)
                              expression (lib/warnings.ml[578,19787+12]..[578,19787+37])
                                Pexp_construct "::" (lib/warnings.ml[578,19787+19]..[578,19787+21])
                                Some
                                  expression (lib/warnings.ml[578,19787+12]..[578,19787+37]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/warnings.ml[578,19787+12]..[578,19787+17])
                                        Pexp_ident "cname" (lib/warnings.ml[578,19787+12]..[578,19787+17])
                                      expression (lib/warnings.ml[578,19787+22]..[578,19787+37])
                                        Pexp_construct "::" (lib/warnings.ml[578,19787+29]..[578,19787+31])
                                        Some
                                          expression (lib/warnings.ml[578,19787+22]..[578,19787+37]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/warnings.ml[578,19787+22]..[578,19787+28])
                                                Pexp_constant PConst_string(":\n ",(lib/warnings.ml[578,19787+23]..[578,19787+27]),None)
                                              expression (lib/warnings.ml[578,19787+32]..[578,19787+37])
                                                Pexp_ident "slist" (lib/warnings.ml[578,19787+32]..[578,19787+37])
                                            ]
                                    ]
                            ]
                  ]
              <case>
                pattern (lib/warnings.ml[579,19826+4]..[579,19826+22])
                  Ppat_construct "Method_override" (lib/warnings.ml[579,19826+4]..[579,19826+19])
                  Some
                    []
                    pattern (lib/warnings.ml[579,19826+20]..[579,19826+22])
                      Ppat_construct "[]" (lib/warnings.ml[579,19826+20]..[579,19826+22])
                      None
                expression (lib/warnings.ml[579,19826+26]..[579,19826+38])
                  Pexp_assert
                  expression (lib/warnings.ml[579,19826+33]..[579,19826+38])
                    Pexp_construct "false" (lib/warnings.ml[579,19826+33]..[579,19826+38])
                    None
              <case>
                pattern (lib/warnings.ml[580,19865+4]..[580,19865+20])
                  Ppat_construct "Partial_match" (lib/warnings.ml[580,19865+4]..[580,19865+17])
                  Some
                    []
                    pattern (lib/warnings.ml[580,19865+18]..[580,19865+20])
                      Ppat_constant PConst_string("",(lib/warnings.ml[580,19865+19]..[580,19865+19]),None)
                expression (lib/warnings.ml[580,19865+24]..[580,19865+66])
                  Pexp_constant PConst_string("this pattern-matching is not exhaustive.",(lib/warnings.ml[580,19865+25]..[580,19865+65]),None)
              <case>
                pattern (lib/warnings.ml[581,19932+4]..[581,19932+19])
                  Ppat_construct "Partial_match" (lib/warnings.ml[581,19932+4]..[581,19932+17])
                  Some
                    []
                    pattern (lib/warnings.ml[581,19932+18]..[581,19932+19])
                      Ppat_var "s" (lib/warnings.ml[581,19932+18]..[581,19932+19])
                expression (lib/warnings.ml[582,19955+6]..[583,20006+63])
                  Pexp_apply
                  expression (lib/warnings.ml[583,20006+60]..[583,20006+61])
                    Pexp_ident "^" (lib/warnings.ml[583,20006+60]..[583,20006+61])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[582,19955+6]..[583,20006+59])
                        Pexp_constant PConst_string("this pattern-matching is not exhaustive.\nHere is an example of a case that is not matched:\n",(lib/warnings.ml[582,19955+7]..[583,20006+58]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[583,20006+62]..[583,20006+63])
                        Pexp_ident "s" (lib/warnings.ml[583,20006+62]..[583,20006+63])
                  ]
              <case>
                pattern (lib/warnings.ml[584,20070+4]..[584,20070+34])
                  Ppat_construct "Missing_record_field_pattern" (lib/warnings.ml[584,20070+4]..[584,20070+32])
                  Some
                    []
                    pattern (lib/warnings.ml[584,20070+33]..[584,20070+34])
                      Ppat_var "s" (lib/warnings.ml[584,20070+33]..[584,20070+34])
                expression (lib/warnings.ml[585,20108+6]..[586,20183+74])
                  Pexp_apply
                  expression (lib/warnings.ml[585,20108+69]..[585,20108+70])
                    Pexp_ident "^" (lib/warnings.ml[585,20108+69]..[585,20108+70])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[585,20108+6]..[585,20108+68])
                        Pexp_constant PConst_string("the following labels are not bound in this record pattern:\n",(lib/warnings.ml[585,20108+7]..[585,20108+67]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[585,20108+71]..[586,20183+74])
                        Pexp_apply
                        expression (lib/warnings.ml[585,20108+73]..[585,20108+74])
                          Pexp_ident "^" (lib/warnings.ml[585,20108+73]..[585,20108+74])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[585,20108+71]..[585,20108+72])
                              Pexp_ident "s" (lib/warnings.ml[585,20108+71]..[585,20108+72])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[586,20183+6]..[586,20183+74])
                              Pexp_constant PConst_string("\nEither bind these labels explicitly or add '; _' to the pattern.",(lib/warnings.ml[586,20183+7]..[586,20183+73]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[587,20258+4]..[587,20258+22])
                  Ppat_construct "Non_unit_statement" (lib/warnings.ml[587,20258+4]..[587,20258+22])
                  None
                expression (lib/warnings.ml[588,20284+6]..[588,20284+46])
                  Pexp_constant PConst_string("this expression should have type unit.",(lib/warnings.ml[588,20284+7]..[588,20284+45]),None)
              <case>
                pattern (lib/warnings.ml[589,20331+4]..[589,20331+18])
                  Ppat_construct "Redundant_case" (lib/warnings.ml[589,20331+4]..[589,20331+18])
                  None
                expression (lib/warnings.ml[589,20331+22]..[589,20331+50])
                  Pexp_constant PConst_string("this match case is unused.",(lib/warnings.ml[589,20331+23]..[589,20331+49]),None)
              <case>
                pattern (lib/warnings.ml[590,20382+4]..[590,20382+20])
                  Ppat_construct "Redundant_subpat" (lib/warnings.ml[590,20382+4]..[590,20382+20])
                  None
                expression (lib/warnings.ml[590,20382+24]..[590,20382+53])
                  Pexp_constant PConst_string("this sub-pattern is unused.",(lib/warnings.ml[590,20382+25]..[590,20382+52]),None)
              <case>
                pattern (lib/warnings.ml[591,20436+4]..[591,20436+36])
                  Ppat_construct "Instance_variable_override" (lib/warnings.ml[591,20436+4]..[591,20436+30])
                  Some
                    []
                    pattern (lib/warnings.ml[591,20436+31]..[591,20436+36])
                      Ppat_construct "::" (lib/warnings.ml[591,20436+32]..[591,20436+36]) ghost
                      Some
                        []
                        pattern (lib/warnings.ml[591,20436+32]..[591,20436+36]) ghost
                          Ppat_tuple
                          [
                            pattern (lib/warnings.ml[591,20436+32]..[591,20436+35])
                              Ppat_var "lab" (lib/warnings.ml[591,20436+32]..[591,20436+35])
                            pattern (lib/warnings.ml[591,20436+35]..[591,20436+36]) ghost
                              Ppat_construct "[]" (lib/warnings.ml[591,20436+35]..[591,20436+36]) ghost
                              None
                          ]
                expression (lib/warnings.ml[592,20476+6]..[592,20476+56])
                  Pexp_apply
                  expression (lib/warnings.ml[592,20476+31]..[592,20476+32])
                    Pexp_ident "^" (lib/warnings.ml[592,20476+31]..[592,20476+32])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[592,20476+6]..[592,20476+30])
                        Pexp_constant PConst_string("the instance variable ",(lib/warnings.ml[592,20476+7]..[592,20476+29]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[592,20476+33]..[592,20476+56])
                        Pexp_apply
                        expression (lib/warnings.ml[592,20476+37]..[592,20476+38])
                          Pexp_ident "^" (lib/warnings.ml[592,20476+37]..[592,20476+38])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[592,20476+33]..[592,20476+36])
                              Pexp_ident "lab" (lib/warnings.ml[592,20476+33]..[592,20476+36])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[592,20476+39]..[592,20476+56])
                              Pexp_constant PConst_string(" is overridden.",(lib/warnings.ml[592,20476+40]..[592,20476+55]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[593,20533+4]..[593,20533+47])
                  Ppat_construct "Instance_variable_override" (lib/warnings.ml[593,20533+4]..[593,20533+30])
                  Some
                    []
                    pattern (lib/warnings.ml[593,20533+31]..[593,20533+47])
                      Ppat_construct "::" (lib/warnings.ml[593,20533+38]..[593,20533+40])
                      Some
                        []
                        pattern (lib/warnings.ml[593,20533+32]..[593,20533+46]) ghost
                          Ppat_tuple
                          [
                            pattern (lib/warnings.ml[593,20533+32]..[593,20533+37])
                              Ppat_var "cname" (lib/warnings.ml[593,20533+32]..[593,20533+37])
                            pattern (lib/warnings.ml[593,20533+41]..[593,20533+46])
                              Ppat_var "slist" (lib/warnings.ml[593,20533+41]..[593,20533+46])
                          ]
                expression (lib/warnings.ml[594,20584+6]..[596,20680+38])
                  Pexp_apply
                  expression (lib/warnings.ml[594,20584+6]..[594,20584+19])
                    Pexp_ident "String.concat" (lib/warnings.ml[594,20584+6]..[594,20584+19])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[594,20584+20]..[594,20584+23])
                        Pexp_constant PConst_string(" ",(lib/warnings.ml[594,20584+21]..[594,20584+22]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[595,20608+8]..[596,20680+38])
                        Pexp_construct "::" (lib/warnings.ml[596,20680+9]..[596,20680+11])
                        Some
                          expression (lib/warnings.ml[595,20608+9]..[596,20680+37]) ghost
                            Pexp_tuple
                            [
                              expression (lib/warnings.ml[595,20608+9]..[595,20608+71])
                                Pexp_constant PConst_string("the following instance variables are overridden by the class",(lib/warnings.ml[595,20608+10]..[595,20608+70]),None)
                              expression (lib/warnings.ml[596,20680+12]..[596,20680+37])
                                Pexp_construct "::" (lib/warnings.ml[596,20680+19]..[596,20680+21])
                                Some
                                  expression (lib/warnings.ml[596,20680+12]..[596,20680+37]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/warnings.ml[596,20680+12]..[596,20680+17])
                                        Pexp_ident "cname" (lib/warnings.ml[596,20680+12]..[596,20680+17])
                                      expression (lib/warnings.ml[596,20680+22]..[596,20680+37])
                                        Pexp_construct "::" (lib/warnings.ml[596,20680+29]..[596,20680+31])
                                        Some
                                          expression (lib/warnings.ml[596,20680+22]..[596,20680+37]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/warnings.ml[596,20680+22]..[596,20680+28])
                                                Pexp_constant PConst_string(":\n ",(lib/warnings.ml[596,20680+23]..[596,20680+27]),None)
                                              expression (lib/warnings.ml[596,20680+32]..[596,20680+37])
                                                Pexp_ident "slist" (lib/warnings.ml[596,20680+32]..[596,20680+37])
                                            ]
                                    ]
                            ]
                  ]
              <case>
                pattern (lib/warnings.ml[597,20719+4]..[597,20719+33])
                  Ppat_construct "Instance_variable_override" (lib/warnings.ml[597,20719+4]..[597,20719+30])
                  Some
                    []
                    pattern (lib/warnings.ml[597,20719+31]..[597,20719+33])
                      Ppat_construct "[]" (lib/warnings.ml[597,20719+31]..[597,20719+33])
                      None
                expression (lib/warnings.ml[597,20719+37]..[597,20719+49])
                  Pexp_assert
                  expression (lib/warnings.ml[597,20719+44]..[597,20719+49])
                    Pexp_construct "false" (lib/warnings.ml[597,20719+44]..[597,20719+49])
                    None
              <case>
                pattern (lib/warnings.ml[598,20769+4]..[598,20769+21])
                  Ppat_construct "Illegal_backslash" (lib/warnings.ml[598,20769+4]..[598,20769+21])
                  None
                expression (lib/warnings.ml[599,20794+4]..[602,20981+75])
                  Pexp_constant PConst_string("illegal backslash escape in string.\nHint: Single backslashes \\ are reserved for escape sequences\n(\\n, \\r, ...). Did you check the list of OCaml escape sequences?\nTo get a backslash character, escape it with a second backslash: \\\\.",(lib/warnings.ml[599,20794+5]..[602,20981+74]),None)
              <case>
                pattern (lib/warnings.ml[603,21057+4]..[603,21057+29])
                  Ppat_construct "Implicit_public_methods" (lib/warnings.ml[603,21057+4]..[603,21057+27])
                  Some
                    []
                    pattern (lib/warnings.ml[603,21057+28]..[603,21057+29])
                      Ppat_var "l" (lib/warnings.ml[603,21057+28]..[603,21057+29])
                expression (lib/warnings.ml[604,21090+6]..[605,21160+33])
                  Pexp_apply
                  expression (lib/warnings.ml[605,21160+6]..[605,21160+7])
                    Pexp_ident "^" (lib/warnings.ml[605,21160+6]..[605,21160+7])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[604,21090+6]..[604,21090+69])
                        Pexp_constant PConst_string("the following private methods were made public implicitly:\n ",(lib/warnings.ml[604,21090+7]..[604,21090+68]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[605,21160+8]..[605,21160+33])
                        Pexp_apply
                        expression (lib/warnings.ml[605,21160+28]..[605,21160+29])
                          Pexp_ident "^" (lib/warnings.ml[605,21160+28]..[605,21160+29])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[605,21160+8]..[605,21160+27])
                              Pexp_apply
                              expression (lib/warnings.ml[605,21160+8]..[605,21160+21])
                                Pexp_ident "String.concat" (lib/warnings.ml[605,21160+8]..[605,21160+21])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[605,21160+22]..[605,21160+25])
                                    Pexp_constant PConst_string(" ",(lib/warnings.ml[605,21160+23]..[605,21160+24]),None)
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[605,21160+26]..[605,21160+27])
                                    Pexp_ident "l" (lib/warnings.ml[605,21160+26]..[605,21160+27])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[605,21160+30]..[605,21160+33])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[605,21160+31]..[605,21160+32]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[606,21194+4]..[606,21194+32])
                  Ppat_construct "Unerasable_optional_argument" (lib/warnings.ml[606,21194+4]..[606,21194+32])
                  None
                expression (lib/warnings.ml[606,21194+36]..[606,21194+78])
                  Pexp_constant PConst_string("this optional argument cannot be erased.",(lib/warnings.ml[606,21194+37]..[606,21194+77]),None)
              <case>
                pattern (lib/warnings.ml[607,21273+4]..[607,21273+31])
                  Ppat_construct "Undeclared_virtual_method" (lib/warnings.ml[607,21273+4]..[607,21273+29])
                  Some
                    []
                    pattern (lib/warnings.ml[607,21273+30]..[607,21273+31])
                      Ppat_var "m" (lib/warnings.ml[607,21273+30]..[607,21273+31])
                expression (lib/warnings.ml[607,21273+35]..[607,21273+78])
                  Pexp_apply
                  expression (lib/warnings.ml[607,21273+56]..[607,21273+57])
                    Pexp_ident "^" (lib/warnings.ml[607,21273+56]..[607,21273+57])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[607,21273+35]..[607,21273+56])
                        Pexp_constant PConst_string("the virtual method ",(lib/warnings.ml[607,21273+36]..[607,21273+55]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[607,21273+57]..[607,21273+78])
                        Pexp_apply
                        expression (lib/warnings.ml[607,21273+58]..[607,21273+59])
                          Pexp_ident "^" (lib/warnings.ml[607,21273+58]..[607,21273+59])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[607,21273+57]..[607,21273+58])
                              Pexp_ident "m" (lib/warnings.ml[607,21273+57]..[607,21273+58])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[607,21273+59]..[607,21273+78])
                              Pexp_constant PConst_string(" is not declared.",(lib/warnings.ml[607,21273+60]..[607,21273+77]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[608,21352+4]..[608,21352+19])
                  Ppat_construct "Not_principal" (lib/warnings.ml[608,21352+4]..[608,21352+17])
                  Some
                    []
                    pattern (lib/warnings.ml[608,21352+18]..[608,21352+19])
                      Ppat_var "s" (lib/warnings.ml[608,21352+18]..[608,21352+19])
                expression (lib/warnings.ml[608,21352+23]..[608,21352+45])
                  Pexp_apply
                  expression (lib/warnings.ml[608,21352+24]..[608,21352+25])
                    Pexp_ident "^" (lib/warnings.ml[608,21352+24]..[608,21352+25])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[608,21352+23]..[608,21352+24])
                        Pexp_ident "s" (lib/warnings.ml[608,21352+23]..[608,21352+24])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[608,21352+25]..[608,21352+45])
                        Pexp_constant PConst_string(" is not principal.",(lib/warnings.ml[608,21352+26]..[608,21352+44]),None)
                  ]
              <case>
                pattern (lib/warnings.ml[609,21398+4]..[609,21398+26])
                  Ppat_construct "Non_principal_labels" (lib/warnings.ml[609,21398+4]..[609,21398+24])
                  Some
                    []
                    pattern (lib/warnings.ml[609,21398+25]..[609,21398+26])
                      Ppat_var "s" (lib/warnings.ml[609,21398+25]..[609,21398+26])
                expression (lib/warnings.ml[609,21398+30]..[609,21398+56])
                  Pexp_apply
                  expression (lib/warnings.ml[609,21398+31]..[609,21398+32])
                    Pexp_ident "^" (lib/warnings.ml[609,21398+31]..[609,21398+32])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[609,21398+30]..[609,21398+31])
                        Pexp_ident "s" (lib/warnings.ml[609,21398+30]..[609,21398+31])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[609,21398+32]..[609,21398+56])
                        Pexp_constant PConst_string(" without principality.",(lib/warnings.ml[609,21398+33]..[609,21398+55]),None)
                  ]
              <case>
                pattern (lib/warnings.ml[610,21455+4]..[610,21455+26])
                  Ppat_construct "Ignored_extra_argument" (lib/warnings.ml[610,21455+4]..[610,21455+26])
                  None
                expression (lib/warnings.ml[610,21455+30]..[610,21455+79])
                  Pexp_constant PConst_string("this argument will not be used by the function.",(lib/warnings.ml[610,21455+31]..[610,21455+78]),None)
              <case>
                pattern (lib/warnings.ml[611,21535+4]..[611,21535+26])
                  Ppat_construct "Nonreturning_statement" (lib/warnings.ml[611,21535+4]..[611,21535+26])
                  None
                expression (lib/warnings.ml[612,21565+6]..[612,21565+62])
                  Pexp_constant PConst_string("this statement never returns (or has an unsound type.)",(lib/warnings.ml[612,21565+7]..[612,21565+61]),None)
              <case>
                pattern (lib/warnings.ml[613,21628+4]..[613,21628+18])
                  Ppat_construct "Preprocessor" (lib/warnings.ml[613,21628+4]..[613,21628+16])
                  Some
                    []
                    pattern (lib/warnings.ml[613,21628+17]..[613,21628+18])
                      Ppat_var "s" (lib/warnings.ml[613,21628+17]..[613,21628+18])
                expression (lib/warnings.ml[613,21628+22]..[613,21628+23])
                  Pexp_ident "s" (lib/warnings.ml[613,21628+22]..[613,21628+23])
              <case>
                pattern (lib/warnings.ml[614,21652+4]..[614,21652+23])
                  Ppat_construct "Useless_record_with" (lib/warnings.ml[614,21652+4]..[614,21652+23])
                  None
                expression (lib/warnings.ml[615,21679+6]..[616,21742+37])
                  Pexp_constant PConst_string("all the fields are explicitly listed in this record:\nthe 'with' clause is useless.",(lib/warnings.ml[615,21679+7]..[616,21742+36]),None)
              <case>
                pattern (lib/warnings.ml[617,21780+4]..[617,21780+29])
                  Ppat_construct "Bad_module_name" (lib/warnings.ml[617,21780+4]..[617,21780+19])
                  Some
                    []
                    pattern (lib/warnings.ml[617,21780+20]..[617,21780+29])
                      Ppat_var "modname" (lib/warnings.ml[617,21780+21]..[617,21780+28])
                expression (lib/warnings.ml[618,21813+6]..[618,21813+77])
                  Pexp_apply
                  expression (lib/warnings.ml[618,21813+33]..[618,21813+34])
                    Pexp_ident "^" (lib/warnings.ml[618,21813+33]..[618,21813+34])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[618,21813+6]..[618,21813+32])
                        Pexp_constant PConst_string("bad source file name: \"",(lib/warnings.ml[618,21813+7]..[618,21813+31]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[618,21813+35]..[618,21813+77])
                        Pexp_apply
                        expression (lib/warnings.ml[618,21813+43]..[618,21813+44])
                          Pexp_ident "^" (lib/warnings.ml[618,21813+43]..[618,21813+44])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[618,21813+35]..[618,21813+42])
                              Pexp_ident "modname" (lib/warnings.ml[618,21813+35]..[618,21813+42])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[618,21813+45]..[618,21813+77])
                              Pexp_constant PConst_string("\" is not a valid module name.",(lib/warnings.ml[618,21813+46]..[618,21813+76]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[619,21891+4]..[619,21891+23])
                  Ppat_construct "All_clauses_guarded" (lib/warnings.ml[619,21891+4]..[619,21891+23])
                  None
                expression (lib/warnings.ml[620,21918+6]..[621,21969+57])
                  Pexp_constant PConst_string("this pattern-matching is not exhaustive.\nAll clauses in this pattern-matching are guarded.",(lib/warnings.ml[620,21918+7]..[621,21969+56]),None)
              <case>
                pattern (lib/warnings.ml[622,22027+4]..[622,22027+38])
                  Ppat_or
                  pattern (lib/warnings.ml[622,22027+4]..[622,22027+16])
                    Ppat_construct "Unused_var" (lib/warnings.ml[622,22027+4]..[622,22027+14])
                    Some
                      []
                      pattern (lib/warnings.ml[622,22027+15]..[622,22027+16])
                        Ppat_var "v" (lib/warnings.ml[622,22027+15]..[622,22027+16])
                  pattern (lib/warnings.ml[622,22027+19]..[622,22027+38])
                    Ppat_construct "Unused_var_strict" (lib/warnings.ml[622,22027+19]..[622,22027+36])
                    Some
                      []
                      pattern (lib/warnings.ml[622,22027+37]..[622,22027+38])
                        Ppat_var "v" (lib/warnings.ml[622,22027+37]..[622,22027+38])
                expression (lib/warnings.ml[622,22027+42]..[622,22027+70])
                  Pexp_apply
                  expression (lib/warnings.ml[622,22027+61]..[622,22027+62])
                    Pexp_ident "^" (lib/warnings.ml[622,22027+61]..[622,22027+62])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[622,22027+42]..[622,22027+60])
                        Pexp_constant PConst_string("unused variable ",(lib/warnings.ml[622,22027+43]..[622,22027+59]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[622,22027+63]..[622,22027+70])
                        Pexp_apply
                        expression (lib/warnings.ml[622,22027+65]..[622,22027+66])
                          Pexp_ident "^" (lib/warnings.ml[622,22027+65]..[622,22027+66])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[622,22027+63]..[622,22027+64])
                              Pexp_ident "v" (lib/warnings.ml[622,22027+63]..[622,22027+64])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[622,22027+67]..[622,22027+70])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[622,22027+68]..[622,22027+69]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[623,22098+4]..[623,22098+35])
                  Ppat_construct "Wildcard_arg_to_constant_constr" (lib/warnings.ml[623,22098+4]..[623,22098+35])
                  None
                expression (lib/warnings.ml[624,22137+5]..[624,22137+67])
                  Pexp_constant PConst_string("wildcard pattern given as argument to a constant constructor",(lib/warnings.ml[624,22137+6]..[624,22137+66]),None)
              <case>
                pattern (lib/warnings.ml[625,22205+4]..[625,22205+17])
                  Ppat_construct "Eol_in_string" (lib/warnings.ml[625,22205+4]..[625,22205+17])
                  None
                expression (lib/warnings.ml[626,22226+5]..[627,22278+47])
                  Pexp_constant PConst_string("unescaped end-of-line in a string constant\n(non-portable behavior before OCaml 5.2)",(lib/warnings.ml[626,22226+6]..[627,22278+46]),None)
              <case>
                pattern (lib/warnings.ml[628,22326+4]..[628,22326+49])
                  Ppat_construct "Duplicate_definitions" (lib/warnings.ml[628,22326+4]..[628,22326+25])
                  Some
                    []
                    pattern (lib/warnings.ml[628,22326+26]..[628,22326+49])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[628,22326+27]..[628,22326+31])
                          Ppat_var "kind" (lib/warnings.ml[628,22326+27]..[628,22326+31])
                        pattern (lib/warnings.ml[628,22326+33]..[628,22326+38])
                          Ppat_var "cname" (lib/warnings.ml[628,22326+33]..[628,22326+38])
                        pattern (lib/warnings.ml[628,22326+40]..[628,22326+43])
                          Ppat_var "tc1" (lib/warnings.ml[628,22326+40]..[628,22326+43])
                        pattern (lib/warnings.ml[628,22326+45]..[628,22326+48])
                          Ppat_var "tc2" (lib/warnings.ml[628,22326+45]..[628,22326+48])
                      ]
                expression (lib/warnings.ml[629,22379+6]..[630,22448+26])
                  Pexp_apply
                  expression (lib/warnings.ml[629,22379+6]..[629,22379+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[629,22379+6]..[629,22379+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[629,22379+21]..[629,22379+68])
                        Pexp_constant PConst_string("the %s %s is defined in both types %s and %s.",(lib/warnings.ml[629,22379+22]..[629,22379+67]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[630,22448+8]..[630,22448+12])
                        Pexp_ident "kind" (lib/warnings.ml[630,22448+8]..[630,22448+12])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[630,22448+13]..[630,22448+18])
                        Pexp_ident "cname" (lib/warnings.ml[630,22448+13]..[630,22448+18])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[630,22448+19]..[630,22448+22])
                        Pexp_ident "tc1" (lib/warnings.ml[630,22448+19]..[630,22448+22])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[630,22448+23]..[630,22448+26])
                        Pexp_ident "tc2" (lib/warnings.ml[630,22448+23]..[630,22448+26])
                  ]
              <case>
                pattern (lib/warnings.ml[631,22475+4]..[631,22475+30])
                  Ppat_construct "Unused_value_declaration" (lib/warnings.ml[631,22475+4]..[631,22475+28])
                  Some
                    []
                    pattern (lib/warnings.ml[631,22475+29]..[631,22475+30])
                      Ppat_var "v" (lib/warnings.ml[631,22475+29]..[631,22475+30])
                expression (lib/warnings.ml[631,22475+34]..[631,22475+59])
                  Pexp_apply
                  expression (lib/warnings.ml[631,22475+50]..[631,22475+51])
                    Pexp_ident "^" (lib/warnings.ml[631,22475+50]..[631,22475+51])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[631,22475+34]..[631,22475+49])
                        Pexp_constant PConst_string("unused value ",(lib/warnings.ml[631,22475+35]..[631,22475+48]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[631,22475+52]..[631,22475+59])
                        Pexp_apply
                        expression (lib/warnings.ml[631,22475+54]..[631,22475+55])
                          Pexp_ident "^" (lib/warnings.ml[631,22475+54]..[631,22475+55])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[631,22475+52]..[631,22475+53])
                              Pexp_ident "v" (lib/warnings.ml[631,22475+52]..[631,22475+53])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[631,22475+56]..[631,22475+59])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[631,22475+57]..[631,22475+58]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[632,22535+4]..[632,22535+17])
                  Ppat_construct "Unused_open" (lib/warnings.ml[632,22535+4]..[632,22535+15])
                  Some
                    []
                    pattern (lib/warnings.ml[632,22535+16]..[632,22535+17])
                      Ppat_var "s" (lib/warnings.ml[632,22535+16]..[632,22535+17])
                expression (lib/warnings.ml[632,22535+21]..[632,22535+45])
                  Pexp_apply
                  expression (lib/warnings.ml[632,22535+36]..[632,22535+37])
                    Pexp_ident "^" (lib/warnings.ml[632,22535+36]..[632,22535+37])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[632,22535+21]..[632,22535+35])
                        Pexp_constant PConst_string("unused open ",(lib/warnings.ml[632,22535+22]..[632,22535+34]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[632,22535+38]..[632,22535+45])
                        Pexp_apply
                        expression (lib/warnings.ml[632,22535+40]..[632,22535+41])
                          Pexp_ident "^" (lib/warnings.ml[632,22535+40]..[632,22535+41])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[632,22535+38]..[632,22535+39])
                              Pexp_ident "s" (lib/warnings.ml[632,22535+38]..[632,22535+39])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[632,22535+42]..[632,22535+45])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[632,22535+43]..[632,22535+44]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[633,22581+4]..[633,22581+22])
                  Ppat_construct "Unused_open_bang" (lib/warnings.ml[633,22581+4]..[633,22581+20])
                  Some
                    []
                    pattern (lib/warnings.ml[633,22581+21]..[633,22581+22])
                      Ppat_var "s" (lib/warnings.ml[633,22581+21]..[633,22581+22])
                expression (lib/warnings.ml[633,22581+26]..[633,22581+51])
                  Pexp_apply
                  expression (lib/warnings.ml[633,22581+42]..[633,22581+43])
                    Pexp_ident "^" (lib/warnings.ml[633,22581+42]..[633,22581+43])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[633,22581+26]..[633,22581+41])
                        Pexp_constant PConst_string("unused open! ",(lib/warnings.ml[633,22581+27]..[633,22581+40]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[633,22581+44]..[633,22581+51])
                        Pexp_apply
                        expression (lib/warnings.ml[633,22581+46]..[633,22581+47])
                          Pexp_ident "^" (lib/warnings.ml[633,22581+46]..[633,22581+47])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[633,22581+44]..[633,22581+45])
                              Pexp_ident "s" (lib/warnings.ml[633,22581+44]..[633,22581+45])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[633,22581+48]..[633,22581+51])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[633,22581+49]..[633,22581+50]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[634,22633+4]..[634,22633+29])
                  Ppat_construct "Unused_type_declaration" (lib/warnings.ml[634,22633+4]..[634,22633+27])
                  Some
                    []
                    pattern (lib/warnings.ml[634,22633+28]..[634,22633+29])
                      Ppat_var "s" (lib/warnings.ml[634,22633+28]..[634,22633+29])
                expression (lib/warnings.ml[634,22633+33]..[634,22633+57])
                  Pexp_apply
                  expression (lib/warnings.ml[634,22633+48]..[634,22633+49])
                    Pexp_ident "^" (lib/warnings.ml[634,22633+48]..[634,22633+49])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[634,22633+33]..[634,22633+47])
                        Pexp_constant PConst_string("unused type ",(lib/warnings.ml[634,22633+34]..[634,22633+46]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[634,22633+50]..[634,22633+57])
                        Pexp_apply
                        expression (lib/warnings.ml[634,22633+52]..[634,22633+53])
                          Pexp_ident "^" (lib/warnings.ml[634,22633+52]..[634,22633+53])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[634,22633+50]..[634,22633+51])
                              Pexp_ident "s" (lib/warnings.ml[634,22633+50]..[634,22633+51])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[634,22633+54]..[634,22633+57])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[634,22633+55]..[634,22633+56]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[635,22691+4]..[635,22691+22])
                  Ppat_construct "Unused_for_index" (lib/warnings.ml[635,22691+4]..[635,22691+20])
                  Some
                    []
                    pattern (lib/warnings.ml[635,22691+21]..[635,22691+22])
                      Ppat_var "s" (lib/warnings.ml[635,22691+21]..[635,22691+22])
                expression (lib/warnings.ml[635,22691+26]..[635,22691+60])
                  Pexp_apply
                  expression (lib/warnings.ml[635,22691+51]..[635,22691+52])
                    Pexp_ident "^" (lib/warnings.ml[635,22691+51]..[635,22691+52])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[635,22691+26]..[635,22691+50])
                        Pexp_constant PConst_string("unused for-loop index ",(lib/warnings.ml[635,22691+27]..[635,22691+49]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[635,22691+53]..[635,22691+60])
                        Pexp_apply
                        expression (lib/warnings.ml[635,22691+55]..[635,22691+56])
                          Pexp_ident "^" (lib/warnings.ml[635,22691+55]..[635,22691+56])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[635,22691+53]..[635,22691+54])
                              Pexp_ident "s" (lib/warnings.ml[635,22691+53]..[635,22691+54])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[635,22691+57]..[635,22691+60])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[635,22691+58]..[635,22691+59]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[636,22752+4]..[636,22752+21])
                  Ppat_construct "Unused_ancestor" (lib/warnings.ml[636,22752+4]..[636,22752+19])
                  Some
                    []
                    pattern (lib/warnings.ml[636,22752+20]..[636,22752+21])
                      Ppat_var "s" (lib/warnings.ml[636,22752+20]..[636,22752+21])
                expression (lib/warnings.ml[636,22752+25]..[636,22752+62])
                  Pexp_apply
                  expression (lib/warnings.ml[636,22752+53]..[636,22752+54])
                    Pexp_ident "^" (lib/warnings.ml[636,22752+53]..[636,22752+54])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[636,22752+25]..[636,22752+52])
                        Pexp_constant PConst_string("unused ancestor variable ",(lib/warnings.ml[636,22752+26]..[636,22752+51]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[636,22752+55]..[636,22752+62])
                        Pexp_apply
                        expression (lib/warnings.ml[636,22752+57]..[636,22752+58])
                          Pexp_ident "^" (lib/warnings.ml[636,22752+57]..[636,22752+58])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[636,22752+55]..[636,22752+56])
                              Pexp_ident "s" (lib/warnings.ml[636,22752+55]..[636,22752+56])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[636,22752+59]..[636,22752+62])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[636,22752+60]..[636,22752+61]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[637,22815+4]..[637,22815+34])
                  Ppat_construct "Unused_constructor" (lib/warnings.ml[637,22815+4]..[637,22815+22])
                  Some
                    []
                    pattern (lib/warnings.ml[637,22815+23]..[637,22815+34])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[637,22815+24]..[637,22815+25])
                          Ppat_var "s" (lib/warnings.ml[637,22815+24]..[637,22815+25])
                        pattern (lib/warnings.ml[637,22815+27]..[637,22815+33])
                          Ppat_construct "Unused" (lib/warnings.ml[637,22815+27]..[637,22815+33])
                          None
                      ]
                expression (lib/warnings.ml[637,22815+38]..[637,22815+69])
                  Pexp_apply
                  expression (lib/warnings.ml[637,22815+60]..[637,22815+61])
                    Pexp_ident "^" (lib/warnings.ml[637,22815+60]..[637,22815+61])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[637,22815+38]..[637,22815+59])
                        Pexp_constant PConst_string("unused constructor ",(lib/warnings.ml[637,22815+39]..[637,22815+58]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[637,22815+62]..[637,22815+69])
                        Pexp_apply
                        expression (lib/warnings.ml[637,22815+64]..[637,22815+65])
                          Pexp_ident "^" (lib/warnings.ml[637,22815+64]..[637,22815+65])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[637,22815+62]..[637,22815+63])
                              Pexp_ident "s" (lib/warnings.ml[637,22815+62]..[637,22815+63])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[637,22815+66]..[637,22815+69])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[637,22815+67]..[637,22815+68]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[638,22885+4]..[638,22885+43])
                  Ppat_construct "Unused_constructor" (lib/warnings.ml[638,22885+4]..[638,22885+22])
                  Some
                    []
                    pattern (lib/warnings.ml[638,22885+23]..[638,22885+43])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[638,22885+24]..[638,22885+25])
                          Ppat_var "s" (lib/warnings.ml[638,22885+24]..[638,22885+25])
                        pattern (lib/warnings.ml[638,22885+27]..[638,22885+42])
                          Ppat_construct "Not_constructed" (lib/warnings.ml[638,22885+27]..[638,22885+42])
                          None
                      ]
                expression (lib/warnings.ml[639,22932+6]..[641,23001+57])
                  Pexp_apply
                  expression (lib/warnings.ml[639,22932+21]..[639,22932+22])
                    Pexp_ident "^" (lib/warnings.ml[639,22932+21]..[639,22932+22])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[639,22932+6]..[639,22932+20])
                        Pexp_constant PConst_string("constructor ",(lib/warnings.ml[639,22932+7]..[639,22932+19]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[639,22932+23]..[641,23001+57])
                        Pexp_apply
                        expression (lib/warnings.ml[639,22932+25]..[639,22932+26])
                          Pexp_ident "^" (lib/warnings.ml[639,22932+25]..[639,22932+26])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[639,22932+23]..[639,22932+24])
                              Pexp_ident "s" (lib/warnings.ml[639,22932+23]..[639,22932+24])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[640,22959+6]..[641,23001+57])
                              Pexp_constant PConst_string(" is never used to build values.\n(However, this constructor appears in patterns.)",(lib/warnings.ml[640,22959+7]..[641,23001+56]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[642,23059+4]..[642,23059+49])
                  Ppat_construct "Unused_constructor" (lib/warnings.ml[642,23059+4]..[642,23059+22])
                  Some
                    []
                    pattern (lib/warnings.ml[642,23059+23]..[642,23059+49])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[642,23059+24]..[642,23059+25])
                          Ppat_var "s" (lib/warnings.ml[642,23059+24]..[642,23059+25])
                        pattern (lib/warnings.ml[642,23059+27]..[642,23059+48])
                          Ppat_construct "Only_exported_private" (lib/warnings.ml[642,23059+27]..[642,23059+48])
                          None
                      ]
                expression (lib/warnings.ml[643,23112+6]..[645,23181+48])
                  Pexp_apply
                  expression (lib/warnings.ml[643,23112+21]..[643,23112+22])
                    Pexp_ident "^" (lib/warnings.ml[643,23112+21]..[643,23112+22])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[643,23112+6]..[643,23112+20])
                        Pexp_constant PConst_string("constructor ",(lib/warnings.ml[643,23112+7]..[643,23112+19]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[643,23112+23]..[645,23181+48])
                        Pexp_apply
                        expression (lib/warnings.ml[643,23112+25]..[643,23112+26])
                          Pexp_ident "^" (lib/warnings.ml[643,23112+25]..[643,23112+26])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[643,23112+23]..[643,23112+24])
                              Pexp_ident "s" (lib/warnings.ml[643,23112+23]..[643,23112+24])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[644,23139+6]..[645,23181+48])
                              Pexp_constant PConst_string(" is never used to build values.\nIts type is exported as a private type.",(lib/warnings.ml[644,23139+7]..[645,23181+47]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[646,23230+4]..[646,23230+49])
                  Ppat_construct "Unused_extension" (lib/warnings.ml[646,23230+4]..[646,23230+20])
                  Some
                    []
                    pattern (lib/warnings.ml[646,23230+21]..[646,23230+49])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[646,23230+22]..[646,23230+23])
                          Ppat_var "s" (lib/warnings.ml[646,23230+22]..[646,23230+23])
                        pattern (lib/warnings.ml[646,23230+25]..[646,23230+37])
                          Ppat_var "is_exception" (lib/warnings.ml[646,23230+25]..[646,23230+37])
                        pattern (lib/warnings.ml[646,23230+39]..[646,23230+48])
                          Ppat_var "complaint" (lib/warnings.ml[646,23230+39]..[646,23230+48])
                      ]
                expression (lib/warnings.ml[647,23283+5]..[660,23785+8])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/warnings.ml[647,23283+9]..[647,23283+13])
                        Ppat_var "kind" (lib/warnings.ml[647,23283+9]..[647,23283+13])
                      expression (lib/warnings.ml[648,23299+7]..[648,23299+68])
                        Pexp_ifthenelse
                        expression (lib/warnings.ml[648,23299+10]..[648,23299+22])
                          Pexp_ident "is_exception" (lib/warnings.ml[648,23299+10]..[648,23299+22])
                        expression (lib/warnings.ml[648,23299+28]..[648,23299+39])
                          Pexp_constant PConst_string("exception",(lib/warnings.ml[648,23299+29]..[648,23299+38]),None)
                        Some
                          expression (lib/warnings.ml[648,23299+45]..[648,23299+68])
                            Pexp_constant PConst_string("extension constructor",(lib/warnings.ml[648,23299+46]..[648,23299+67]),None)
                  ]
                  expression (lib/warnings.ml[649,23371+5]..[660,23785+8])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[649,23371+9]..[649,23371+13])
                          Ppat_var "name" (lib/warnings.ml[649,23371+9]..[649,23371+13])
                        expression (lib/warnings.ml[649,23371+16]..[649,23371+30])
                          Pexp_apply
                          expression (lib/warnings.ml[649,23371+21]..[649,23371+22])
                            Pexp_ident "^" (lib/warnings.ml[649,23371+21]..[649,23371+22])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[649,23371+16]..[649,23371+20])
                                Pexp_ident "kind" (lib/warnings.ml[649,23371+16]..[649,23371+20])
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[649,23371+23]..[649,23371+30])
                                Pexp_apply
                                expression (lib/warnings.ml[649,23371+27]..[649,23371+28])
                                  Pexp_ident "^" (lib/warnings.ml[649,23371+27]..[649,23371+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[649,23371+23]..[649,23371+26])
                                      Pexp_constant PConst_string(" ",(lib/warnings.ml[649,23371+24]..[649,23371+25]),None)
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[649,23371+29]..[649,23371+30])
                                      Pexp_ident "s" (lib/warnings.ml[649,23371+29]..[649,23371+30])
                                ]
                          ]
                    ]
                    expression (lib/warnings.ml[650,23405+5]..[660,23785+8])
                      Pexp_match
                      expression (lib/warnings.ml[650,23405+17]..[650,23405+26])
                        Pexp_ident "complaint" (lib/warnings.ml[650,23405+17]..[650,23405+26])
                      [
                        <case>
                          pattern (lib/warnings.ml[651,23437+9]..[651,23437+15])
                            Ppat_construct "Unused" (lib/warnings.ml[651,23437+9]..[651,23437+15])
                            None
                          expression (lib/warnings.ml[651,23437+19]..[651,23437+35])
                            Pexp_apply
                            expression (lib/warnings.ml[651,23437+29]..[651,23437+30])
                              Pexp_ident "^" (lib/warnings.ml[651,23437+29]..[651,23437+30])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[651,23437+19]..[651,23437+28])
                                  Pexp_constant PConst_string("unused ",(lib/warnings.ml[651,23437+20]..[651,23437+27]),None)
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[651,23437+31]..[651,23437+35])
                                  Pexp_ident "name" (lib/warnings.ml[651,23437+31]..[651,23437+35])
                            ]
                        <case>
                          pattern (lib/warnings.ml[652,23473+9]..[652,23473+24])
                            Ppat_construct "Not_constructed" (lib/warnings.ml[652,23473+9]..[652,23473+24])
                            None
                          expression (lib/warnings.ml[653,23501+10]..[655,23564+60])
                            Pexp_apply
                            expression (lib/warnings.ml[653,23501+15]..[653,23501+16])
                              Pexp_ident "^" (lib/warnings.ml[653,23501+15]..[653,23501+16])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[653,23501+10]..[653,23501+14])
                                  Pexp_ident "name" (lib/warnings.ml[653,23501+10]..[653,23501+14])
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[654,23518+10]..[655,23564+60])
                                  Pexp_constant PConst_string(" is never used to build values.\n(However, this constructor appears in patterns.)",(lib/warnings.ml[654,23518+11]..[655,23564+59]),None)
                            ]
                        <case>
                          pattern (lib/warnings.ml[656,23625+9]..[656,23625+30])
                            Ppat_construct "Only_exported_private" (lib/warnings.ml[656,23625+9]..[656,23625+30])
                            None
                          expression (lib/warnings.ml[657,23659+10]..[659,23722+62])
                            Pexp_apply
                            expression (lib/warnings.ml[657,23659+15]..[657,23659+16])
                              Pexp_ident "^" (lib/warnings.ml[657,23659+15]..[657,23659+16])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[657,23659+10]..[657,23659+14])
                                  Pexp_ident "name" (lib/warnings.ml[657,23659+10]..[657,23659+14])
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[658,23676+10]..[659,23722+62])
                                  Pexp_constant PConst_string(" is never used to build values.\nIt is exported or rebound as a private extension.",(lib/warnings.ml[658,23676+11]..[659,23722+61]),None)
                            ]
                      ]
              <case>
                pattern (lib/warnings.ml[661,23794+4]..[661,23794+19])
                  Ppat_construct "Unused_rec_flag" (lib/warnings.ml[661,23794+4]..[661,23794+19])
                  None
                expression (lib/warnings.ml[662,23817+6]..[662,23817+24])
                  Pexp_constant PConst_string("unused rec flag.",(lib/warnings.ml[662,23817+7]..[662,23817+23]),None)
              <case>
                pattern (lib/warnings.ml[663,23842+4]..[663,23842+39])
                  Ppat_construct "Name_out_of_scope" (lib/warnings.ml[663,23842+4]..[663,23842+21])
                  Some
                    []
                    pattern (lib/warnings.ml[663,23842+22]..[663,23842+39])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[663,23842+23]..[663,23842+25])
                          Ppat_var "ty" (lib/warnings.ml[663,23842+23]..[663,23842+25])
                        pattern (lib/warnings.ml[663,23842+27]..[663,23842+31])
                          Ppat_construct "::" (lib/warnings.ml[663,23842+28]..[663,23842+31]) ghost
                          Some
                            []
                            pattern (lib/warnings.ml[663,23842+28]..[663,23842+31]) ghost
                              Ppat_tuple
                              [
                                pattern (lib/warnings.ml[663,23842+28]..[663,23842+30])
                                  Ppat_var "nm" (lib/warnings.ml[663,23842+28]..[663,23842+30])
                                pattern (lib/warnings.ml[663,23842+30]..[663,23842+31]) ghost
                                  Ppat_construct "[]" (lib/warnings.ml[663,23842+30]..[663,23842+31]) ghost
                                  None
                              ]
                        pattern (lib/warnings.ml[663,23842+33]..[663,23842+38])
                          Ppat_construct "false" (lib/warnings.ml[663,23842+33]..[663,23842+38])
                          None
                      ]
                expression (lib/warnings.ml[664,23885+6]..[666,23997+48])
                  Pexp_apply
                  expression (lib/warnings.ml[664,23885+9]..[664,23885+10])
                    Pexp_ident "^" (lib/warnings.ml[664,23885+9]..[664,23885+10])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[664,23885+6]..[664,23885+8])
                        Pexp_ident "nm" (lib/warnings.ml[664,23885+6]..[664,23885+8])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[664,23885+11]..[666,23997+48])
                        Pexp_apply
                        expression (lib/warnings.ml[664,23885+38]..[664,23885+39])
                          Pexp_ident "^" (lib/warnings.ml[664,23885+38]..[664,23885+39])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[664,23885+11]..[664,23885+37])
                              Pexp_constant PConst_string(" was selected from type ",(lib/warnings.ml[664,23885+12]..[664,23885+36]),None)
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[664,23885+40]..[666,23997+48])
                              Pexp_apply
                              expression (lib/warnings.ml[664,23885+43]..[664,23885+44])
                                Pexp_ident "^" (lib/warnings.ml[664,23885+43]..[664,23885+44])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[664,23885+40]..[664,23885+42])
                                    Pexp_ident "ty" (lib/warnings.ml[664,23885+40]..[664,23885+42])
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[665,23930+6]..[666,23997+48])
                                    Pexp_constant PConst_string(".\nIt is not visible in the current scope, and will not \nbe selected if the type becomes unknown.",(lib/warnings.ml[665,23930+7]..[666,23997+47]),None)
                              ]
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[667,24046+4]..[667,24046+35])
                  Ppat_construct "Name_out_of_scope" (lib/warnings.ml[667,24046+4]..[667,24046+21])
                  Some
                    []
                    pattern (lib/warnings.ml[667,24046+22]..[667,24046+35])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[667,24046+23]..[667,24046+24])
                          Ppat_any
                        pattern (lib/warnings.ml[667,24046+26]..[667,24046+27])
                          Ppat_any
                        pattern (lib/warnings.ml[667,24046+29]..[667,24046+34])
                          Ppat_construct "false" (lib/warnings.ml[667,24046+29]..[667,24046+34])
                          None
                      ]
                expression (lib/warnings.ml[667,24046+39]..[667,24046+51])
                  Pexp_assert
                  expression (lib/warnings.ml[667,24046+46]..[667,24046+51])
                    Pexp_construct "false" (lib/warnings.ml[667,24046+46]..[667,24046+51])
                    None
              <case>
                pattern (lib/warnings.ml[668,24098+4]..[668,24098+39])
                  Ppat_construct "Name_out_of_scope" (lib/warnings.ml[668,24098+4]..[668,24098+21])
                  Some
                    []
                    pattern (lib/warnings.ml[668,24098+22]..[668,24098+39])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[668,24098+23]..[668,24098+25])
                          Ppat_var "ty" (lib/warnings.ml[668,24098+23]..[668,24098+25])
                        pattern (lib/warnings.ml[668,24098+27]..[668,24098+32])
                          Ppat_var "slist" (lib/warnings.ml[668,24098+27]..[668,24098+32])
                        pattern (lib/warnings.ml[668,24098+34]..[668,24098+38])
                          Ppat_construct "true" (lib/warnings.ml[668,24098+34]..[668,24098+38])
                          None
                      ]
                expression (lib/warnings.ml[669,24141+6]..[672,24289+62])
                  Pexp_apply
                  expression (lib/warnings.ml[669,24141+28]..[669,24141+29])
                    Pexp_ident "^" (lib/warnings.ml[669,24141+28]..[669,24141+29])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[669,24141+6]..[669,24141+28])
                        Pexp_constant PConst_string("this record of type ",(lib/warnings.ml[669,24141+7]..[669,24141+27]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[669,24141+30]..[672,24289+62])
                        Pexp_apply
                        expression (lib/warnings.ml[669,24141+33]..[669,24141+34])
                          Pexp_ident "^" (lib/warnings.ml[669,24141+33]..[669,24141+34])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[669,24141+30]..[669,24141+32])
                              Pexp_ident "ty" (lib/warnings.ml[669,24141+30]..[669,24141+32])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[669,24141+34]..[672,24289+62])
                              Pexp_apply
                              expression (lib/warnings.ml[671,24249+6]..[671,24249+7])
                                Pexp_ident "^" (lib/warnings.ml[671,24249+6]..[671,24249+7])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[669,24141+34]..[670,24206+42])
                                    Pexp_constant PConst_string(" contains fields that are \nnot visible in the current scope: ",(lib/warnings.ml[669,24141+35]..[670,24206+41]),None)
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[671,24249+8]..[672,24289+62])
                                    Pexp_apply
                                    expression (lib/warnings.ml[671,24249+32]..[671,24249+33])
                                      Pexp_ident "^" (lib/warnings.ml[671,24249+32]..[671,24249+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[671,24249+8]..[671,24249+31])
                                          Pexp_apply
                                          expression (lib/warnings.ml[671,24249+8]..[671,24249+21])
                                            Pexp_ident "String.concat" (lib/warnings.ml[671,24249+8]..[671,24249+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[671,24249+22]..[671,24249+25])
                                                Pexp_constant PConst_string(" ",(lib/warnings.ml[671,24249+23]..[671,24249+24]),None)
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[671,24249+26]..[671,24249+31])
                                                Pexp_ident "slist" (lib/warnings.ml[671,24249+26]..[671,24249+31])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[671,24249+34]..[672,24289+62])
                                          Pexp_constant PConst_string(".\nThey will not be selected if the type becomes unknown.",(lib/warnings.ml[671,24249+35]..[672,24289+61]),None)
                                    ]
                              ]
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[673,24352+4]..[673,24352+46])
                  Ppat_construct "Ambiguous_name" (lib/warnings.ml[673,24352+4]..[673,24352+18])
                  Some
                    []
                    pattern (lib/warnings.ml[673,24352+19]..[673,24352+46])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[673,24352+20]..[673,24352+23])
                          Ppat_construct "::" (lib/warnings.ml[673,24352+21]..[673,24352+23]) ghost
                          Some
                            []
                            pattern (lib/warnings.ml[673,24352+21]..[673,24352+23]) ghost
                              Ppat_tuple
                              [
                                pattern (lib/warnings.ml[673,24352+21]..[673,24352+22])
                                  Ppat_var "s" (lib/warnings.ml[673,24352+21]..[673,24352+22])
                                pattern (lib/warnings.ml[673,24352+22]..[673,24352+23]) ghost
                                  Ppat_construct "[]" (lib/warnings.ml[673,24352+22]..[673,24352+23]) ghost
                                  None
                              ]
                        pattern (lib/warnings.ml[673,24352+25]..[673,24352+27])
                          Ppat_var "tl" (lib/warnings.ml[673,24352+25]..[673,24352+27])
                        pattern (lib/warnings.ml[673,24352+29]..[673,24352+34])
                          Ppat_construct "false" (lib/warnings.ml[673,24352+29]..[673,24352+34])
                          None
                        pattern (lib/warnings.ml[673,24352+36]..[673,24352+45])
                          Ppat_var "expansion" (lib/warnings.ml[673,24352+36]..[673,24352+45])
                      ]
                expression (lib/warnings.ml[674,24402+6]..[676,24543+17])
                  Pexp_apply
                  expression (lib/warnings.ml[674,24402+8]..[674,24402+9])
                    Pexp_ident "^" (lib/warnings.ml[674,24402+8]..[674,24402+9])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[674,24402+6]..[674,24402+7])
                        Pexp_ident "s" (lib/warnings.ml[674,24402+6]..[674,24402+7])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[674,24402+10]..[676,24543+17])
                        Pexp_apply
                        expression (lib/warnings.ml[674,24402+40]..[674,24402+41])
                          Pexp_ident "^" (lib/warnings.ml[674,24402+40]..[674,24402+41])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[674,24402+10]..[674,24402+39])
                              Pexp_constant PConst_string(" belongs to several types: ",(lib/warnings.ml[674,24402+11]..[674,24402+38]),None)
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[674,24402+42]..[676,24543+17])
                              Pexp_apply
                              expression (lib/warnings.ml[674,24402+63]..[674,24402+64])
                                Pexp_ident "^" (lib/warnings.ml[674,24402+63]..[674,24402+64])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[674,24402+42]..[674,24402+62])
                                    Pexp_apply
                                    expression (lib/warnings.ml[674,24402+42]..[674,24402+55])
                                      Pexp_ident "String.concat" (lib/warnings.ml[674,24402+42]..[674,24402+55])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[674,24402+56]..[674,24402+59])
                                          Pexp_constant PConst_string(" ",(lib/warnings.ml[674,24402+57]..[674,24402+58]),None)
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[674,24402+60]..[674,24402+62])
                                          Pexp_ident "tl" (lib/warnings.ml[674,24402+60]..[674,24402+62])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[675,24467+6]..[676,24543+17])
                                    Pexp_apply
                                    expression (lib/warnings.ml[676,24543+6]..[676,24543+7])
                                      Pexp_ident "^" (lib/warnings.ml[676,24543+6]..[676,24543+7])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[675,24467+6]..[675,24467+75])
                                          Pexp_constant PConst_string("\nThe first one was selected. Please disambiguate if this is wrong.",(lib/warnings.ml[675,24467+7]..[675,24467+74]),None)
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[676,24543+8]..[676,24543+17])
                                          Pexp_ident "expansion" (lib/warnings.ml[676,24543+8]..[676,24543+17])
                                    ]
                              ]
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[677,24561+4]..[677,24561+36])
                  Ppat_construct "Ambiguous_name" (lib/warnings.ml[677,24561+4]..[677,24561+18])
                  Some
                    []
                    pattern (lib/warnings.ml[677,24561+19]..[677,24561+36])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[677,24561+20]..[677,24561+21])
                          Ppat_any
                        pattern (lib/warnings.ml[677,24561+23]..[677,24561+24])
                          Ppat_any
                        pattern (lib/warnings.ml[677,24561+26]..[677,24561+31])
                          Ppat_construct "false" (lib/warnings.ml[677,24561+26]..[677,24561+31])
                          None
                        pattern (lib/warnings.ml[677,24561+33]..[677,24561+34])
                          Ppat_any
                      ]
                expression (lib/warnings.ml[677,24561+40]..[677,24561+52])
                  Pexp_assert
                  expression (lib/warnings.ml[677,24561+47]..[677,24561+52])
                    Pexp_construct "false" (lib/warnings.ml[677,24561+47]..[677,24561+52])
                    None
              <case>
                pattern (lib/warnings.ml[678,24614+4]..[678,24614+48])
                  Ppat_construct "Ambiguous_name" (lib/warnings.ml[678,24614+4]..[678,24614+18])
                  Some
                    []
                    pattern (lib/warnings.ml[678,24614+19]..[678,24614+48])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[678,24614+20]..[678,24614+26])
                          Ppat_var "_slist" (lib/warnings.ml[678,24614+20]..[678,24614+26])
                        pattern (lib/warnings.ml[678,24614+28]..[678,24614+30])
                          Ppat_var "tl" (lib/warnings.ml[678,24614+28]..[678,24614+30])
                        pattern (lib/warnings.ml[678,24614+32]..[678,24614+36])
                          Ppat_construct "true" (lib/warnings.ml[678,24614+32]..[678,24614+36])
                          None
                        pattern (lib/warnings.ml[678,24614+38]..[678,24614+47])
                          Ppat_var "expansion" (lib/warnings.ml[678,24614+38]..[678,24614+47])
                      ]
                expression (lib/warnings.ml[679,24666+6]..[682,24826+17])
                  Pexp_apply
                  expression (lib/warnings.ml[679,24666+53]..[679,24666+54])
                    Pexp_ident "^" (lib/warnings.ml[679,24666+53]..[679,24666+54])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[679,24666+6]..[679,24666+52])
                        Pexp_constant PConst_string("these field labels belong to several types: ",(lib/warnings.ml[679,24666+7]..[679,24666+51]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[680,24721+6]..[682,24826+17])
                        Pexp_apply
                        expression (lib/warnings.ml[680,24721+27]..[680,24721+28])
                          Pexp_ident "^" (lib/warnings.ml[680,24721+27]..[680,24721+28])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[680,24721+6]..[680,24721+26])
                              Pexp_apply
                              expression (lib/warnings.ml[680,24721+6]..[680,24721+19])
                                Pexp_ident "String.concat" (lib/warnings.ml[680,24721+6]..[680,24721+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[680,24721+20]..[680,24721+23])
                                    Pexp_constant PConst_string(" ",(lib/warnings.ml[680,24721+21]..[680,24721+22]),None)
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[680,24721+24]..[680,24721+26])
                                    Pexp_ident "tl" (lib/warnings.ml[680,24721+24]..[680,24721+26])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[681,24750+6]..[682,24826+17])
                              Pexp_apply
                              expression (lib/warnings.ml[682,24826+6]..[682,24826+7])
                                Pexp_ident "^" (lib/warnings.ml[682,24826+6]..[682,24826+7])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[681,24750+6]..[681,24750+75])
                                    Pexp_constant PConst_string("\nThe first one was selected. Please disambiguate if this is wrong.",(lib/warnings.ml[681,24750+7]..[681,24750+74]),None)
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[682,24826+8]..[682,24826+17])
                                    Pexp_ident "expansion" (lib/warnings.ml[682,24826+8]..[682,24826+17])
                              ]
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[683,24844+4]..[683,24844+24])
                  Ppat_construct "Disambiguated_name" (lib/warnings.ml[683,24844+4]..[683,24844+22])
                  Some
                    []
                    pattern (lib/warnings.ml[683,24844+23]..[683,24844+24])
                      Ppat_var "s" (lib/warnings.ml[683,24844+23]..[683,24844+24])
                expression (lib/warnings.ml[684,24872+6]..[685,24944+55])
                  Pexp_apply
                  expression (lib/warnings.ml[684,24872+21]..[684,24872+22])
                    Pexp_ident "^" (lib/warnings.ml[684,24872+21]..[684,24872+22])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[684,24872+6]..[684,24872+20])
                        Pexp_constant PConst_string("this use of ",(lib/warnings.ml[684,24872+7]..[684,24872+19]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[684,24872+23]..[685,24944+55])
                        Pexp_apply
                        expression (lib/warnings.ml[684,24872+25]..[684,24872+26])
                          Pexp_ident "^" (lib/warnings.ml[684,24872+25]..[684,24872+26])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[684,24872+23]..[684,24872+24])
                              Pexp_ident "s" (lib/warnings.ml[684,24872+23]..[684,24872+24])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[684,24872+27]..[685,24944+55])
                              Pexp_constant PConst_string(" relies on type-directed disambiguation,\nit will not compile with OCaml 4.00 or earlier.",(lib/warnings.ml[684,24872+28]..[685,24944+54]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[686,25000+4]..[686,25000+23])
                  Ppat_construct "Nonoptional_label" (lib/warnings.ml[686,25000+4]..[686,25000+21])
                  Some
                    []
                    pattern (lib/warnings.ml[686,25000+22]..[686,25000+23])
                      Ppat_var "s" (lib/warnings.ml[686,25000+22]..[686,25000+23])
                expression (lib/warnings.ml[687,25027+6]..[687,25027+44])
                  Pexp_apply
                  expression (lib/warnings.ml[687,25027+19]..[687,25027+20])
                    Pexp_ident "^" (lib/warnings.ml[687,25027+19]..[687,25027+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[687,25027+6]..[687,25027+18])
                        Pexp_constant PConst_string("the label ",(lib/warnings.ml[687,25027+7]..[687,25027+17]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[687,25027+21]..[687,25027+44])
                        Pexp_apply
                        expression (lib/warnings.ml[687,25027+23]..[687,25027+24])
                          Pexp_ident "^" (lib/warnings.ml[687,25027+23]..[687,25027+24])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[687,25027+21]..[687,25027+22])
                              Pexp_ident "s" (lib/warnings.ml[687,25027+21]..[687,25027+22])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[687,25027+25]..[687,25027+44])
                              Pexp_constant PConst_string(" is not optional.",(lib/warnings.ml[687,25027+26]..[687,25027+43]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[688,25072+4]..[688,25072+36])
                  Ppat_construct "Open_shadow_identifier" (lib/warnings.ml[688,25072+4]..[688,25072+26])
                  Some
                    []
                    pattern (lib/warnings.ml[688,25072+27]..[688,25072+36])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[688,25072+28]..[688,25072+32])
                          Ppat_var "kind" (lib/warnings.ml[688,25072+28]..[688,25072+32])
                        pattern (lib/warnings.ml[688,25072+34]..[688,25072+35])
                          Ppat_var "s" (lib/warnings.ml[688,25072+34]..[688,25072+35])
                      ]
                expression (lib/warnings.ml[689,25112+6]..[691,25214+14])
                  Pexp_apply
                  expression (lib/warnings.ml[689,25112+6]..[689,25112+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[689,25112+6]..[689,25112+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[690,25133+8]..[690,25133+80])
                        Pexp_constant PConst_string("this open statement shadows the %s identifier %s (which is later used)",(lib/warnings.ml[690,25133+9]..[690,25133+79]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[691,25214+8]..[691,25214+12])
                        Pexp_ident "kind" (lib/warnings.ml[691,25214+8]..[691,25214+12])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[691,25214+13]..[691,25214+14])
                        Pexp_ident "s" (lib/warnings.ml[691,25214+13]..[691,25214+14])
                  ]
              <case>
                pattern (lib/warnings.ml[692,25229+4]..[692,25229+43])
                  Ppat_construct "Open_shadow_label_constructor" (lib/warnings.ml[692,25229+4]..[692,25229+33])
                  Some
                    []
                    pattern (lib/warnings.ml[692,25229+34]..[692,25229+43])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[692,25229+35]..[692,25229+39])
                          Ppat_var "kind" (lib/warnings.ml[692,25229+35]..[692,25229+39])
                        pattern (lib/warnings.ml[692,25229+41]..[692,25229+42])
                          Ppat_var "s" (lib/warnings.ml[692,25229+41]..[692,25229+42])
                      ]
                expression (lib/warnings.ml[693,25276+6]..[695,25367+14])
                  Pexp_apply
                  expression (lib/warnings.ml[693,25276+6]..[693,25276+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[693,25276+6]..[693,25276+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[694,25297+8]..[694,25297+69])
                        Pexp_constant PConst_string("this open statement shadows the %s %s (which is later used)",(lib/warnings.ml[694,25297+9]..[694,25297+68]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[695,25367+8]..[695,25367+12])
                        Pexp_ident "kind" (lib/warnings.ml[695,25367+8]..[695,25367+12])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[695,25367+13]..[695,25367+14])
                        Pexp_ident "s" (lib/warnings.ml[695,25367+13]..[695,25367+14])
                  ]
              <case>
                pattern (lib/warnings.ml[696,25382+4]..[696,25382+29])
                  Ppat_construct "Bad_env_variable" (lib/warnings.ml[696,25382+4]..[696,25382+20])
                  Some
                    []
                    pattern (lib/warnings.ml[696,25382+21]..[696,25382+29])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[696,25382+22]..[696,25382+25])
                          Ppat_var "var" (lib/warnings.ml[696,25382+22]..[696,25382+25])
                        pattern (lib/warnings.ml[696,25382+27]..[696,25382+28])
                          Ppat_var "s" (lib/warnings.ml[696,25382+27]..[696,25382+28])
                      ]
                expression (lib/warnings.ml[697,25415+6]..[697,25415+65])
                  Pexp_apply
                  expression (lib/warnings.ml[697,25415+6]..[697,25415+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[697,25415+6]..[697,25415+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[697,25415+21]..[697,25415+59])
                        Pexp_constant PConst_string("illegal environment variable %s : %s",(lib/warnings.ml[697,25415+22]..[697,25415+58]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[697,25415+60]..[697,25415+63])
                        Pexp_ident "var" (lib/warnings.ml[697,25415+60]..[697,25415+63])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[697,25415+64]..[697,25415+65])
                        Pexp_ident "s" (lib/warnings.ml[697,25415+64]..[697,25415+65])
                  ]
              <case>
                pattern (lib/warnings.ml[698,25481+4]..[698,25481+28])
                  Ppat_construct "Attribute_payload" (lib/warnings.ml[698,25481+4]..[698,25481+21])
                  Some
                    []
                    pattern (lib/warnings.ml[698,25481+22]..[698,25481+28])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[698,25481+23]..[698,25481+24])
                          Ppat_var "a" (lib/warnings.ml[698,25481+23]..[698,25481+24])
                        pattern (lib/warnings.ml[698,25481+26]..[698,25481+27])
                          Ppat_var "s" (lib/warnings.ml[698,25481+26]..[698,25481+27])
                      ]
                expression (lib/warnings.ml[699,25513+6]..[699,25513+66])
                  Pexp_apply
                  expression (lib/warnings.ml[699,25513+6]..[699,25513+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[699,25513+6]..[699,25513+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[699,25513+21]..[699,25513+62])
                        Pexp_constant PConst_string("illegal payload for attribute '%s'.\n%s",(lib/warnings.ml[699,25513+22]..[699,25513+61]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[699,25513+63]..[699,25513+64])
                        Pexp_ident "a" (lib/warnings.ml[699,25513+63]..[699,25513+64])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[699,25513+65]..[699,25513+66])
                        Pexp_ident "s" (lib/warnings.ml[699,25513+65]..[699,25513+66])
                  ]
              <case>
                pattern (lib/warnings.ml[700,25580+4]..[700,25580+36])
                  Ppat_construct "Eliminated_optional_arguments" (lib/warnings.ml[700,25580+4]..[700,25580+33])
                  Some
                    []
                    pattern (lib/warnings.ml[700,25580+34]..[700,25580+36])
                      Ppat_var "sl" (lib/warnings.ml[700,25580+34]..[700,25580+36])
                expression (lib/warnings.ml[701,25620+6]..[703,25739+31])
                  Pexp_apply
                  expression (lib/warnings.ml[701,25620+6]..[701,25620+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[701,25620+6]..[701,25620+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[701,25620+21]..[701,25620+69])
                        Pexp_constant PConst_string("implicit elimination of optional argument%s %s",(lib/warnings.ml[701,25620+22]..[701,25620+68]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[702,25690+8]..[702,25690+48])
                        Pexp_ifthenelse
                        expression (lib/warnings.ml[702,25690+12]..[702,25690+30])
                          Pexp_apply
                          expression (lib/warnings.ml[702,25690+27]..[702,25690+28])
                            Pexp_ident "=" (lib/warnings.ml[702,25690+27]..[702,25690+28])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[702,25690+12]..[702,25690+26])
                                Pexp_apply
                                expression (lib/warnings.ml[702,25690+12]..[702,25690+23])
                                  Pexp_ident "List.length" (lib/warnings.ml[702,25690+12]..[702,25690+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[702,25690+24]..[702,25690+26])
                                      Pexp_ident "sl" (lib/warnings.ml[702,25690+24]..[702,25690+26])
                                ]
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[702,25690+29]..[702,25690+30])
                                Pexp_constant PConst_int (1,None)
                          ]
                        expression (lib/warnings.ml[702,25690+36]..[702,25690+38])
                          Pexp_constant PConst_string("",(lib/warnings.ml[702,25690+37]..[702,25690+37]),None)
                        Some
                          expression (lib/warnings.ml[702,25690+44]..[702,25690+47])
                            Pexp_constant PConst_string("s",(lib/warnings.ml[702,25690+45]..[702,25690+46]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[703,25739+8]..[703,25739+31])
                        Pexp_apply
                        expression (lib/warnings.ml[703,25739+9]..[703,25739+22])
                          Pexp_ident "String.concat" (lib/warnings.ml[703,25739+9]..[703,25739+22])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[703,25739+23]..[703,25739+27])
                              Pexp_constant PConst_string(", ",(lib/warnings.ml[703,25739+24]..[703,25739+26]),None)
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[703,25739+28]..[703,25739+30])
                              Pexp_ident "sl" (lib/warnings.ml[703,25739+28]..[703,25739+30])
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[704,25771+4]..[704,25771+27])
                  Ppat_construct "No_cmi_file" (lib/warnings.ml[704,25771+4]..[704,25771+15])
                  Some
                    []
                    pattern (lib/warnings.ml[704,25771+15]..[704,25771+27])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[704,25771+16]..[704,25771+20])
                          Ppat_var "name" (lib/warnings.ml[704,25771+16]..[704,25771+20])
                        pattern (lib/warnings.ml[704,25771+22]..[704,25771+26])
                          Ppat_construct "None" (lib/warnings.ml[704,25771+22]..[704,25771+26])
                          None
                      ]
                expression (lib/warnings.ml[705,25802+6]..[705,25802+56])
                  Pexp_apply
                  expression (lib/warnings.ml[705,25802+50]..[705,25802+51])
                    Pexp_ident "^" (lib/warnings.ml[705,25802+50]..[705,25802+51])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[705,25802+6]..[705,25802+49])
                        Pexp_constant PConst_string("no cmi file was found in path for module ",(lib/warnings.ml[705,25802+7]..[705,25802+48]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[705,25802+52]..[705,25802+56])
                        Pexp_ident "name" (lib/warnings.ml[705,25802+52]..[705,25802+56])
                  ]
              <case>
                pattern (lib/warnings.ml[706,25859+4]..[706,25859+31])
                  Ppat_construct "No_cmi_file" (lib/warnings.ml[706,25859+4]..[706,25859+15])
                  Some
                    []
                    pattern (lib/warnings.ml[706,25859+15]..[706,25859+31])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[706,25859+16]..[706,25859+20])
                          Ppat_var "name" (lib/warnings.ml[706,25859+16]..[706,25859+20])
                        pattern (lib/warnings.ml[706,25859+22]..[706,25859+30])
                          Ppat_construct "Some" (lib/warnings.ml[706,25859+22]..[706,25859+26])
                          Some
                            []
                            pattern (lib/warnings.ml[706,25859+27]..[706,25859+30])
                              Ppat_var "msg" (lib/warnings.ml[706,25859+27]..[706,25859+30])
                      ]
                expression (lib/warnings.ml[707,25894+6]..[709,25979+16])
                  Pexp_apply
                  expression (lib/warnings.ml[707,25894+6]..[707,25894+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[707,25894+6]..[707,25894+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[708,25915+8]..[708,25915+63])
                        Pexp_constant PConst_string("no valid cmi file was found in path for module %s. %s",(lib/warnings.ml[708,25915+9]..[708,25915+62]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[709,25979+8]..[709,25979+12])
                        Pexp_ident "name" (lib/warnings.ml[709,25979+8]..[709,25979+12])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[709,25979+13]..[709,25979+16])
                        Pexp_ident "msg" (lib/warnings.ml[709,25979+13]..[709,25979+16])
                  ]
              <case>
                pattern (lib/warnings.ml[710,25996+4]..[710,25996+35])
                  Ppat_construct "Unexpected_docstring" (lib/warnings.ml[710,25996+4]..[710,25996+24])
                  Some
                    []
                    pattern (lib/warnings.ml[710,25996+25]..[710,25996+35])
                      Ppat_var "unattached" (lib/warnings.ml[710,25996+25]..[710,25996+35])
                expression (lib/warnings.ml[711,26035+6]..[712,26105+44])
                  Pexp_ifthenelse
                  expression (lib/warnings.ml[711,26035+9]..[711,26035+19])
                    Pexp_ident "unattached" (lib/warnings.ml[711,26035+9]..[711,26035+19])
                  expression (lib/warnings.ml[711,26035+25]..[711,26035+69])
                    Pexp_constant PConst_string("unattached documentation comment (ignored)",(lib/warnings.ml[711,26035+26]..[711,26035+68]),None)
                  Some
                    expression (lib/warnings.ml[712,26105+11]..[712,26105+44])
                      Pexp_constant PConst_string("ambiguous documentation comment",(lib/warnings.ml[712,26105+12]..[712,26105+43]),None)
              <case>
                pattern (lib/warnings.ml[713,26150+4]..[713,26150+32])
                  Ppat_construct "Wrong_tailcall_expectation" (lib/warnings.ml[713,26150+4]..[713,26150+30])
                  Some
                    []
                    pattern (lib/warnings.ml[713,26150+31]..[713,26150+32])
                      Ppat_var "b" (lib/warnings.ml[713,26150+31]..[713,26150+32])
                expression (lib/warnings.ml[714,26186+6]..[715,26221+50])
                  Pexp_apply
                  expression (lib/warnings.ml[714,26186+6]..[714,26186+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[714,26186+6]..[714,26186+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[714,26186+21]..[714,26186+34])
                        Pexp_constant PConst_string("expected %s",(lib/warnings.ml[714,26186+22]..[714,26186+33]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[715,26221+8]..[715,26221+50])
                        Pexp_ifthenelse
                        expression (lib/warnings.ml[715,26221+12]..[715,26221+13])
                          Pexp_ident "b" (lib/warnings.ml[715,26221+12]..[715,26221+13])
                        expression (lib/warnings.ml[715,26221+19]..[715,26221+29])
                          Pexp_constant PConst_string("tailcall",(lib/warnings.ml[715,26221+20]..[715,26221+28]),None)
                        Some
                          expression (lib/warnings.ml[715,26221+35]..[715,26221+49])
                            Pexp_constant PConst_string("non-tailcall",(lib/warnings.ml[715,26221+36]..[715,26221+48]),None)
                  ]
              <case>
                pattern (lib/warnings.ml[716,26272+4]..[716,26272+27])
                  Ppat_construct "Fragile_literal_pattern" (lib/warnings.ml[716,26272+4]..[716,26272+27])
                  None
                expression (lib/warnings.ml[717,26303+6]..[722,26568+40])
                  Pexp_let Nonrec
                  [
                    <def>
                        attribute "manual.ref"
                          [
                            structure_item (lib/warnings.ml[717,26303+22]..[717,26303+33])
                              Pstr_eval
                              expression (lib/warnings.ml[717,26303+22]..[717,26303+33])
                                Pexp_constant PConst_string("ss:warn52",(lib/warnings.ml[717,26303+23]..[717,26303+32]),None)
                          ]
                      pattern (lib/warnings.ml[717,26303+35]..[717,26303+45])
                        Ppat_var "ref_manual" (lib/warnings.ml[717,26303+35]..[717,26303+45])
                      expression (lib/warnings.ml[717,26303+48]..[717,26303+60])
                        Pexp_construct "::" (lib/warnings.ml[717,26303+50]..[717,26303+60]) ghost
                        Some
                          expression (lib/warnings.ml[717,26303+50]..[717,26303+60]) ghost
                            Pexp_tuple
                            [
                              expression (lib/warnings.ml[717,26303+50]..[717,26303+52])
                                Pexp_constant PConst_int (13,None)
                              expression (lib/warnings.ml[717,26303+54]..[717,26303+60]) ghost
                                Pexp_construct "::" (lib/warnings.ml[717,26303+54]..[717,26303+60]) ghost
                                Some
                                  expression (lib/warnings.ml[717,26303+54]..[717,26303+60]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/warnings.ml[717,26303+54]..[717,26303+55])
                                        Pexp_constant PConst_int (5,None)
                                      expression (lib/warnings.ml[717,26303+57]..[717,26303+60]) ghost
                                        Pexp_construct "::" (lib/warnings.ml[717,26303+57]..[717,26303+60]) ghost
                                        Some
                                          expression (lib/warnings.ml[717,26303+57]..[717,26303+60]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/warnings.ml[717,26303+57]..[717,26303+58])
                                                Pexp_constant PConst_int (3,None)
                                              expression (lib/warnings.ml[717,26303+59]..[717,26303+60]) ghost
                                                Pexp_construct "[]" (lib/warnings.ml[717,26303+59]..[717,26303+60]) ghost
                                                None
                                            ]
                                    ]
                            ]
                  ]
                  expression (lib/warnings.ml[718,26367+6]..[722,26568+40])
                    Pexp_apply
                    expression (lib/warnings.ml[718,26367+6]..[718,26367+21])
                      Pexp_ident "Format.asprintf" (lib/warnings.ml[718,26367+6]..[718,26367+21])
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[719,26389+8]..[721,26520+47])
                          Pexp_constant PConst_string("Code should not depend on the actual values of\nthis constructor's arguments. They are only for information\nand may change in future versions. %a",(lib/warnings.ml[719,26389+9]..[721,26520+46]),None)
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[722,26568+8]..[722,26568+29])
                          Pexp_ident "Misc.print_see_manual" (lib/warnings.ml[722,26568+8]..[722,26568+29])
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[722,26568+30]..[722,26568+40])
                          Pexp_ident "ref_manual" (lib/warnings.ml[722,26568+30]..[722,26568+40])
                    ]
              <case>
                pattern (lib/warnings.ml[723,26609+4]..[723,26609+20])
                  Ppat_construct "Unreachable_case" (lib/warnings.ml[723,26609+4]..[723,26609+20])
                  None
                expression (lib/warnings.ml[724,26633+6]..[725,26675+65])
                  Pexp_constant PConst_string("this match case is unreachable.\nConsider replacing it with a refutation case '<pat> -> .'",(lib/warnings.ml[724,26633+7]..[725,26675+64]),None)
              <case>
                pattern (lib/warnings.ml[726,26741+4]..[726,26741+33])
                  Ppat_construct "Misplaced_attribute" (lib/warnings.ml[726,26741+4]..[726,26741+23])
                  Some
                    []
                    pattern (lib/warnings.ml[726,26741+24]..[726,26741+33])
                      Ppat_var "attr_name" (lib/warnings.ml[726,26741+24]..[726,26741+33])
                expression (lib/warnings.ml[727,26778+6]..[727,26778+79])
                  Pexp_apply
                  expression (lib/warnings.ml[727,26778+6]..[727,26778+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[727,26778+6]..[727,26778+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[727,26778+21]..[727,26778+69])
                        Pexp_constant PConst_string("the %S attribute cannot appear in this context",(lib/warnings.ml[727,26778+22]..[727,26778+68]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[727,26778+70]..[727,26778+79])
                        Pexp_ident "attr_name" (lib/warnings.ml[727,26778+70]..[727,26778+79])
                  ]
              <case>
                pattern (lib/warnings.ml[728,26858+4]..[728,26858+34])
                  Ppat_construct "Duplicated_attribute" (lib/warnings.ml[728,26858+4]..[728,26858+24])
                  Some
                    []
                    pattern (lib/warnings.ml[728,26858+25]..[728,26858+34])
                      Ppat_var "attr_name" (lib/warnings.ml[728,26858+25]..[728,26858+34])
                expression (lib/warnings.ml[729,26896+6]..[731,26990+17])
                  Pexp_apply
                  expression (lib/warnings.ml[729,26896+6]..[729,26896+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[729,26896+6]..[729,26896+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[729,26896+21]..[730,26968+21])
                        Pexp_constant PConst_string("the %S attribute is used more than once on this expression",(lib/warnings.ml[729,26896+22]..[730,26968+20]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[731,26990+8]..[731,26990+17])
                        Pexp_ident "attr_name" (lib/warnings.ml[731,26990+8]..[731,26990+17])
                  ]
              <case>
                pattern (lib/warnings.ml[732,27008+4]..[732,27008+30])
                  Ppat_construct "Inlining_impossible" (lib/warnings.ml[732,27008+4]..[732,27008+23])
                  Some
                    []
                    pattern (lib/warnings.ml[732,27008+24]..[732,27008+30])
                      Ppat_var "reason" (lib/warnings.ml[732,27008+24]..[732,27008+30])
                expression (lib/warnings.ml[733,27042+6]..[733,27042+47])
                  Pexp_apply
                  expression (lib/warnings.ml[733,27042+6]..[733,27042+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[733,27042+6]..[733,27042+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[733,27042+21]..[733,27042+40])
                        Pexp_constant PConst_string("Cannot inline: %s",(lib/warnings.ml[733,27042+22]..[733,27042+39]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[733,27042+41]..[733,27042+47])
                        Pexp_ident "reason" (lib/warnings.ml[733,27042+41]..[733,27042+47])
                  ]
              <case>
                pattern (lib/warnings.ml[734,27090+4]..[734,27090+39])
                  Ppat_construct "Ambiguous_var_in_pattern_guard" (lib/warnings.ml[734,27090+4]..[734,27090+34])
                  Some
                    []
                    pattern (lib/warnings.ml[734,27090+35]..[734,27090+39])
                      Ppat_var "vars" (lib/warnings.ml[734,27090+35]..[734,27090+39])
                expression (lib/warnings.ml[735,27133+6]..[753,27843+57])
                  Pexp_let Nonrec
                  [
                    <def>
                        attribute "manual.ref"
                          [
                            structure_item (lib/warnings.ml[735,27133+22]..[735,27133+33])
                              Pstr_eval
                              expression (lib/warnings.ml[735,27133+22]..[735,27133+33])
                                Pexp_constant PConst_string("ss:warn57",(lib/warnings.ml[735,27133+23]..[735,27133+32]),None)
                          ]
                      pattern (lib/warnings.ml[735,27133+35]..[735,27133+45])
                        Ppat_var "ref_manual" (lib/warnings.ml[735,27133+35]..[735,27133+45])
                      expression (lib/warnings.ml[735,27133+48]..[735,27133+60])
                        Pexp_construct "::" (lib/warnings.ml[735,27133+50]..[735,27133+60]) ghost
                        Some
                          expression (lib/warnings.ml[735,27133+50]..[735,27133+60]) ghost
                            Pexp_tuple
                            [
                              expression (lib/warnings.ml[735,27133+50]..[735,27133+52])
                                Pexp_constant PConst_int (13,None)
                              expression (lib/warnings.ml[735,27133+54]..[735,27133+60]) ghost
                                Pexp_construct "::" (lib/warnings.ml[735,27133+54]..[735,27133+60]) ghost
                                Some
                                  expression (lib/warnings.ml[735,27133+54]..[735,27133+60]) ghost
                                    Pexp_tuple
                                    [
                                      expression (lib/warnings.ml[735,27133+54]..[735,27133+55])
                                        Pexp_constant PConst_int (5,None)
                                      expression (lib/warnings.ml[735,27133+57]..[735,27133+60]) ghost
                                        Pexp_construct "::" (lib/warnings.ml[735,27133+57]..[735,27133+60]) ghost
                                        Some
                                          expression (lib/warnings.ml[735,27133+57]..[735,27133+60]) ghost
                                            Pexp_tuple
                                            [
                                              expression (lib/warnings.ml[735,27133+57]..[735,27133+58])
                                                Pexp_constant PConst_int (4,None)
                                              expression (lib/warnings.ml[735,27133+59]..[735,27133+60]) ghost
                                                Pexp_construct "[]" (lib/warnings.ml[735,27133+59]..[735,27133+60]) ghost
                                                None
                                            ]
                                    ]
                            ]
                  ]
                  expression (lib/warnings.ml[736,27197+6]..[753,27843+57])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[736,27197+10]..[736,27197+14])
                          Ppat_var "vars" (lib/warnings.ml[736,27197+10]..[736,27197+14])
                        expression (lib/warnings.ml[736,27197+17]..[736,27197+46])
                          Pexp_apply
                          expression (lib/warnings.ml[736,27197+17]..[736,27197+26])
                            Pexp_ident "List.sort" (lib/warnings.ml[736,27197+17]..[736,27197+26])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[736,27197+27]..[736,27197+41])
                                Pexp_ident "String.compare" (lib/warnings.ml[736,27197+27]..[736,27197+41])
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[736,27197+42]..[736,27197+46])
                                Pexp_ident "vars" (lib/warnings.ml[736,27197+42]..[736,27197+46])
                          ]
                    ]
                    expression (lib/warnings.ml[737,27247+6]..[753,27843+57])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/warnings.ml[737,27247+10]..[737,27247+26])
                            Ppat_var "vars_explanation" (lib/warnings.ml[737,27247+10]..[737,27247+26])
                          expression (lib/warnings.ml[738,27276+8]..[746,27580+66])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/warnings.ml[738,27276+12]..[738,27276+31])
                                  Ppat_var "in_different_places" (lib/warnings.ml[738,27276+12]..[738,27276+31])
                                expression (lib/warnings.ml[739,27310+10]..[739,27310+68])
                                  Pexp_constant PConst_string("in different places in different or-pattern alternatives",(lib/warnings.ml[739,27310+11]..[739,27310+67]),None)
                            ]
                            expression (lib/warnings.ml[741,27390+8]..[746,27580+66])
                              Pexp_match
                              expression (lib/warnings.ml[741,27390+14]..[741,27390+18])
                                Pexp_ident "vars" (lib/warnings.ml[741,27390+14]..[741,27390+18])
                              [
                                <case>
                                  pattern (lib/warnings.ml[742,27414+10]..[742,27414+12])
                                    Ppat_construct "[]" (lib/warnings.ml[742,27414+10]..[742,27414+12])
                                    None
                                  expression (lib/warnings.ml[742,27414+16]..[742,27414+28])
                                    Pexp_assert
                                    expression (lib/warnings.ml[742,27414+23]..[742,27414+28])
                                      Pexp_construct "false" (lib/warnings.ml[742,27414+23]..[742,27414+28])
                                      None
                                <case>
                                  pattern (lib/warnings.ml[743,27443+10]..[743,27443+13])
                                    Ppat_construct "::" (lib/warnings.ml[743,27443+11]..[743,27443+13]) ghost
                                    Some
                                      []
                                      pattern (lib/warnings.ml[743,27443+11]..[743,27443+13]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lib/warnings.ml[743,27443+11]..[743,27443+12])
                                            Ppat_var "x" (lib/warnings.ml[743,27443+11]..[743,27443+12])
                                          pattern (lib/warnings.ml[743,27443+12]..[743,27443+13]) ghost
                                            Ppat_construct "[]" (lib/warnings.ml[743,27443+12]..[743,27443+13]) ghost
                                            None
                                        ]
                                  expression (lib/warnings.ml[743,27443+17]..[743,27443+68])
                                    Pexp_apply
                                    expression (lib/warnings.ml[743,27443+29]..[743,27443+30])
                                      Pexp_ident "^" (lib/warnings.ml[743,27443+29]..[743,27443+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[743,27443+17]..[743,27443+28])
                                          Pexp_constant PConst_string("variable ",(lib/warnings.ml[743,27443+18]..[743,27443+27]),None)
                                      <arg>
                                      Nolabel
                                        expression (lib/warnings.ml[743,27443+31]..[743,27443+68])
                                          Pexp_apply
                                          expression (lib/warnings.ml[743,27443+33]..[743,27443+34])
                                            Pexp_ident "^" (lib/warnings.ml[743,27443+33]..[743,27443+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[743,27443+31]..[743,27443+32])
                                                Pexp_ident "x" (lib/warnings.ml[743,27443+31]..[743,27443+32])
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[743,27443+35]..[743,27443+68])
                                                Pexp_apply
                                                expression (lib/warnings.ml[743,27443+47]..[743,27443+48])
                                                  Pexp_ident "^" (lib/warnings.ml[743,27443+47]..[743,27443+48])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/warnings.ml[743,27443+35]..[743,27443+46])
                                                      Pexp_constant PConst_string(" appears ",(lib/warnings.ml[743,27443+36]..[743,27443+45]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/warnings.ml[743,27443+49]..[743,27443+68])
                                                      Pexp_ident "in_different_places" (lib/warnings.ml[743,27443+49]..[743,27443+68])
                                                ]
                                          ]
                                    ]
                                <case>
                                  pattern (lib/warnings.ml[744,27512+10]..[744,27512+14])
                                    Ppat_construct "::" (lib/warnings.ml[744,27512+11]..[744,27512+13])
                                    Some
                                      []
                                      pattern (lib/warnings.ml[744,27512+10]..[744,27512+14]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lib/warnings.ml[744,27512+10]..[744,27512+11])
                                            Ppat_any
                                          pattern (lib/warnings.ml[744,27512+13]..[744,27512+14])
                                            Ppat_any
                                        ]
                                  expression (lib/warnings.ml[745,27530+12]..[746,27580+66])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/warnings.ml[745,27530+16]..[745,27530+20])
                                          Ppat_var "vars" (lib/warnings.ml[745,27530+16]..[745,27530+20])
                                        expression (lib/warnings.ml[745,27530+23]..[745,27530+46])
                                          Pexp_apply
                                          expression (lib/warnings.ml[745,27530+23]..[745,27530+36])
                                            Pexp_ident "String.concat" (lib/warnings.ml[745,27530+23]..[745,27530+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[745,27530+37]..[745,27530+41])
                                                Pexp_constant PConst_string(", ",(lib/warnings.ml[745,27530+38]..[745,27530+40]),None)
                                            <arg>
                                            Nolabel
                                              expression (lib/warnings.ml[745,27530+42]..[745,27530+46])
                                                Pexp_ident "vars" (lib/warnings.ml[745,27530+42]..[745,27530+46])
                                          ]
                                    ]
                                    expression (lib/warnings.ml[746,27580+12]..[746,27580+66])
                                      Pexp_apply
                                      expression (lib/warnings.ml[746,27580+25]..[746,27580+26])
                                        Pexp_ident "^" (lib/warnings.ml[746,27580+25]..[746,27580+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[746,27580+12]..[746,27580+24])
                                            Pexp_constant PConst_string("variables ",(lib/warnings.ml[746,27580+13]..[746,27580+23]),None)
                                        <arg>
                                        Nolabel
                                          expression (lib/warnings.ml[746,27580+27]..[746,27580+66])
                                            Pexp_apply
                                            expression (lib/warnings.ml[746,27580+32]..[746,27580+33])
                                              Pexp_ident "^" (lib/warnings.ml[746,27580+32]..[746,27580+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[746,27580+27]..[746,27580+31])
                                                  Pexp_ident "vars" (lib/warnings.ml[746,27580+27]..[746,27580+31])
                                              <arg>
                                              Nolabel
                                                expression (lib/warnings.ml[746,27580+34]..[746,27580+66])
                                                  Pexp_apply
                                                  expression (lib/warnings.ml[746,27580+45]..[746,27580+46])
                                                    Pexp_ident "^" (lib/warnings.ml[746,27580+45]..[746,27580+46])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[746,27580+34]..[746,27580+44])
                                                        Pexp_constant PConst_string(" appear ",(lib/warnings.ml[746,27580+35]..[746,27580+43]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/warnings.ml[746,27580+47]..[746,27580+66])
                                                        Pexp_ident "in_different_places" (lib/warnings.ml[746,27580+47]..[746,27580+66])
                                                  ]
                                            ]
                                      ]
                              ]
                      ]
                      expression (lib/warnings.ml[748,27656+6]..[753,27843+57])
                        Pexp_apply
                        expression (lib/warnings.ml[748,27656+6]..[748,27656+21])
                          Pexp_ident "Format.asprintf" (lib/warnings.ml[748,27656+6]..[748,27656+21])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[749,27678+8]..[752,27830+12])
                              Pexp_constant PConst_string("Ambiguous or-pattern variables under guard;\n%s.\nOnly the first match will be used to evaluate the guard expression.\n%a",(lib/warnings.ml[749,27678+9]..[752,27830+11]),None)
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[753,27843+8]..[753,27843+24])
                              Pexp_ident "vars_explanation" (lib/warnings.ml[753,27843+8]..[753,27843+24])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[753,27843+25]..[753,27843+46])
                              Pexp_ident "Misc.print_see_manual" (lib/warnings.ml[753,27843+25]..[753,27843+46])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[753,27843+47]..[753,27843+57])
                              Pexp_ident "ref_manual" (lib/warnings.ml[753,27843+47]..[753,27843+57])
                        ]
              <case>
                pattern (lib/warnings.ml[754,27901+4]..[754,27901+20])
                  Ppat_construct "No_cmx_file" (lib/warnings.ml[754,27901+4]..[754,27901+15])
                  Some
                    []
                    pattern (lib/warnings.ml[754,27901+16]..[754,27901+20])
                      Ppat_var "name" (lib/warnings.ml[754,27901+16]..[754,27901+20])
                expression (lib/warnings.ml[755,27925+6]..[757,28002+62])
                  Pexp_apply
                  expression (lib/warnings.ml[755,27925+6]..[755,27925+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[755,27925+6]..[755,27925+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[756,27946+8]..[757,28002+57])
                        Pexp_constant PConst_string("no cmx file was found in path for module %s, and its interface was not compiled with -opaque",(lib/warnings.ml[756,27946+9]..[757,28002+56]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[757,28002+58]..[757,28002+62])
                        Pexp_ident "name" (lib/warnings.ml[757,28002+58]..[757,28002+62])
                  ]
              <case>
                pattern (lib/warnings.ml[758,28065+4]..[758,28065+43])
                  Ppat_construct "Flambda_assignment_to_non_mutable_value" (lib/warnings.ml[758,28065+4]..[758,28065+43])
                  None
                expression (lib/warnings.ml[759,28112+6]..[761,28261+28])
                  Pexp_constant PConst_string("A potential assignment to a non-mutable value was detected \nin this source file.  Such assignments may generate incorrect code \nwhen using Flambda.",(lib/warnings.ml[759,28112+7]..[761,28261+27]),None)
              <case>
                pattern (lib/warnings.ml[762,28290+4]..[762,28290+19])
                  Ppat_construct "Unused_module" (lib/warnings.ml[762,28290+4]..[762,28290+17])
                  Some
                    []
                    pattern (lib/warnings.ml[762,28290+18]..[762,28290+19])
                      Ppat_var "s" (lib/warnings.ml[762,28290+18]..[762,28290+19])
                expression (lib/warnings.ml[762,28290+23]..[762,28290+49])
                  Pexp_apply
                  expression (lib/warnings.ml[762,28290+40]..[762,28290+41])
                    Pexp_ident "^" (lib/warnings.ml[762,28290+40]..[762,28290+41])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[762,28290+23]..[762,28290+39])
                        Pexp_constant PConst_string("unused module ",(lib/warnings.ml[762,28290+24]..[762,28290+38]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[762,28290+42]..[762,28290+49])
                        Pexp_apply
                        expression (lib/warnings.ml[762,28290+44]..[762,28290+45])
                          Pexp_ident "^" (lib/warnings.ml[762,28290+44]..[762,28290+45])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[762,28290+42]..[762,28290+43])
                              Pexp_ident "s" (lib/warnings.ml[762,28290+42]..[762,28290+43])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[762,28290+46]..[762,28290+49])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[762,28290+47]..[762,28290+48]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[763,28340+4]..[763,28340+33])
                  Ppat_construct "Unboxable_type_in_prim_decl" (lib/warnings.ml[763,28340+4]..[763,28340+31])
                  Some
                    []
                    pattern (lib/warnings.ml[763,28340+32]..[763,28340+33])
                      Ppat_var "t" (lib/warnings.ml[763,28340+32]..[763,28340+33])
                expression (lib/warnings.ml[764,28377+6]..[772,28920+43])
                  Pexp_apply
                  expression (lib/warnings.ml[764,28377+6]..[764,28377+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[764,28377+6]..[764,28377+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[765,28398+8]..[772,28920+39])
                        Pexp_constant PConst_string("This primitive declaration uses type %s, whose representation\nmay be either boxed or unboxed. Without an annotation to indicate\nwhich representation is intended, the boxed representation has been\nselected by default. This default choice may change in future\nversions of the compiler, breaking the primitive implementation.\nYou should explicitly annotate the declaration of %s\nwith [@@boxed] or [@@unboxed], so that its external interface\nremains stable in the future.",(lib/warnings.ml[765,28398+9]..[772,28920+38]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[772,28920+40]..[772,28920+41])
                        Pexp_ident "t" (lib/warnings.ml[772,28920+40]..[772,28920+41])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[772,28920+42]..[772,28920+43])
                        Pexp_ident "t" (lib/warnings.ml[772,28920+42]..[772,28920+43])
                  ]
              <case>
                pattern (lib/warnings.ml[773,28964+4]..[773,28964+22])
                  Ppat_construct "Constraint_on_gadt" (lib/warnings.ml[773,28964+4]..[773,28964+22])
                  None
                expression (lib/warnings.ml[774,28990+6]..[774,28990+69])
                  Pexp_constant PConst_string("Type constraints do not apply to GADT cases of variant types.",(lib/warnings.ml[774,28990+7]..[774,28990+68]),None)
              <case>
                pattern (lib/warnings.ml[775,29060+4]..[775,29060+33])
                  Ppat_construct "Erroneous_printed_signature" (lib/warnings.ml[775,29060+4]..[775,29060+31])
                  Some
                    []
                    pattern (lib/warnings.ml[775,29060+32]..[775,29060+33])
                      Ppat_var "s" (lib/warnings.ml[775,29060+32]..[775,29060+33])
                expression (lib/warnings.ml[776,29097+6]..[781,29393+54])
                  Pexp_apply
                  expression (lib/warnings.ml[779,29303+5]..[779,29303+6])
                    Pexp_ident "^" (lib/warnings.ml[779,29303+5]..[779,29303+6])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[776,29097+6]..[778,29242+60])
                        Pexp_constant PConst_string("The printed interface differs from the inferred interface.\nThe inferred interface contained items which could not be printed\nproperly due to name collisions between identifiers.",(lib/warnings.ml[776,29097+7]..[778,29242+59]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[779,29303+7]..[781,29393+54])
                        Pexp_apply
                        expression (lib/warnings.ml[780,29312+5]..[780,29312+6])
                          Pexp_ident "^" (lib/warnings.ml[780,29312+5]..[780,29312+6])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[779,29303+7]..[779,29303+8])
                              Pexp_ident "s" (lib/warnings.ml[779,29303+7]..[779,29303+8])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[780,29312+7]..[781,29393+54])
                              Pexp_constant PConst_string("\nBeware that this warning is purely informational and will not catch\nall instances of erroneous printed interface.",(lib/warnings.ml[780,29312+8]..[781,29393+53]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[782,29448+4]..[782,29448+39])
                  Ppat_construct "Unsafe_array_syntax_without_parsing" (lib/warnings.ml[782,29448+4]..[782,29448+39])
                  None
                expression (lib/warnings.ml[783,29491+5]..[783,29491+70])
                  Pexp_constant PConst_string("option -unsafe used with a preprocessor returning a syntax tree",(lib/warnings.ml[783,29491+6]..[783,29491+69]),None)
              <case>
                pattern (lib/warnings.ml[784,29562+4]..[784,29562+24])
                  Ppat_construct "Redefining_unit" (lib/warnings.ml[784,29562+4]..[784,29562+19])
                  Some
                    []
                    pattern (lib/warnings.ml[784,29562+20]..[784,29562+24])
                      Ppat_var "name" (lib/warnings.ml[784,29562+20]..[784,29562+24])
                expression (lib/warnings.ml[785,29590+6]..[788,29724+51])
                  Pexp_apply
                  expression (lib/warnings.ml[785,29590+6]..[785,29590+20])
                    Pexp_ident "Printf.sprintf" (lib/warnings.ml[785,29590+6]..[785,29590+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[786,29611+8]..[788,29724+46])
                        Pexp_constant PConst_string("This type declaration is defining a new '()' constructor\nwhich shadows the existing one.\nHint: Did you mean 'type %s = unit'?",(lib/warnings.ml[786,29611+9]..[788,29724+45]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[788,29724+47]..[788,29724+51])
                        Pexp_ident "name" (lib/warnings.ml[788,29724+47]..[788,29724+51])
                  ]
              <case>
                pattern (lib/warnings.ml[789,29776+4]..[789,29776+30])
                  Ppat_construct "Unused_functor_parameter" (lib/warnings.ml[789,29776+4]..[789,29776+28])
                  Some
                    []
                    pattern (lib/warnings.ml[789,29776+29]..[789,29776+30])
                      Ppat_var "s" (lib/warnings.ml[789,29776+29]..[789,29776+30])
                expression (lib/warnings.ml[789,29776+34]..[789,29776+71])
                  Pexp_apply
                  expression (lib/warnings.ml[789,29776+62]..[789,29776+63])
                    Pexp_ident "^" (lib/warnings.ml[789,29776+62]..[789,29776+63])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[789,29776+34]..[789,29776+61])
                        Pexp_constant PConst_string("unused functor parameter ",(lib/warnings.ml[789,29776+35]..[789,29776+60]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[789,29776+64]..[789,29776+71])
                        Pexp_apply
                        expression (lib/warnings.ml[789,29776+66]..[789,29776+67])
                          Pexp_ident "^" (lib/warnings.ml[789,29776+66]..[789,29776+67])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[789,29776+64]..[789,29776+65])
                              Pexp_ident "s" (lib/warnings.ml[789,29776+64]..[789,29776+65])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[789,29776+68]..[789,29776+71])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[789,29776+69]..[789,29776+70]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[790,29848+4]..[790,29848+42])
                  Ppat_construct "Match_on_mutable_state_prevent_uncurry" (lib/warnings.ml[790,29848+4]..[790,29848+42])
                  None
                expression (lib/warnings.ml[791,29894+4]..[793,30017+43])
                  Pexp_constant PConst_string("This pattern depends on mutable state.\nIt prevents the remaining arguments from being uncurried, which will cause additional closure allocations.",(lib/warnings.ml[791,29894+5]..[793,30017+42]),None)
              <case>
                pattern (lib/warnings.ml[794,30061+4]..[794,30061+28])
                  Ppat_construct "Unused_field" (lib/warnings.ml[794,30061+4]..[794,30061+16])
                  Some
                    []
                    pattern (lib/warnings.ml[794,30061+17]..[794,30061+28])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[794,30061+18]..[794,30061+19])
                          Ppat_var "s" (lib/warnings.ml[794,30061+18]..[794,30061+19])
                        pattern (lib/warnings.ml[794,30061+21]..[794,30061+27])
                          Ppat_construct "Unused" (lib/warnings.ml[794,30061+21]..[794,30061+27])
                          None
                      ]
                expression (lib/warnings.ml[794,30061+32]..[794,30061+64])
                  Pexp_apply
                  expression (lib/warnings.ml[794,30061+55]..[794,30061+56])
                    Pexp_ident "^" (lib/warnings.ml[794,30061+55]..[794,30061+56])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[794,30061+32]..[794,30061+54])
                        Pexp_constant PConst_string("unused record field ",(lib/warnings.ml[794,30061+33]..[794,30061+53]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[794,30061+57]..[794,30061+64])
                        Pexp_apply
                        expression (lib/warnings.ml[794,30061+59]..[794,30061+60])
                          Pexp_ident "^" (lib/warnings.ml[794,30061+59]..[794,30061+60])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[794,30061+57]..[794,30061+58])
                              Pexp_ident "s" (lib/warnings.ml[794,30061+57]..[794,30061+58])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[794,30061+61]..[794,30061+64])
                              Pexp_constant PConst_string(".",(lib/warnings.ml[794,30061+62]..[794,30061+63]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[795,30126+4]..[795,30126+30])
                  Ppat_construct "Unused_field" (lib/warnings.ml[795,30126+4]..[795,30126+16])
                  Some
                    []
                    pattern (lib/warnings.ml[795,30126+17]..[795,30126+30])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[795,30126+18]..[795,30126+19])
                          Ppat_var "s" (lib/warnings.ml[795,30126+18]..[795,30126+19])
                        pattern (lib/warnings.ml[795,30126+21]..[795,30126+29])
                          Ppat_construct "Not_read" (lib/warnings.ml[795,30126+21]..[795,30126+29])
                          None
                      ]
                expression (lib/warnings.ml[796,30160+6]..[798,30214+65])
                  Pexp_apply
                  expression (lib/warnings.ml[796,30160+22]..[796,30160+23])
                    Pexp_ident "^" (lib/warnings.ml[796,30160+22]..[796,30160+23])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[796,30160+6]..[796,30160+21])
                        Pexp_constant PConst_string("record field ",(lib/warnings.ml[796,30160+7]..[796,30160+20]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[796,30160+24]..[798,30214+65])
                        Pexp_apply
                        expression (lib/warnings.ml[796,30160+26]..[796,30160+27])
                          Pexp_ident "^" (lib/warnings.ml[796,30160+26]..[796,30160+27])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[796,30160+24]..[796,30160+25])
                              Pexp_ident "s" (lib/warnings.ml[796,30160+24]..[796,30160+25])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[797,30188+6]..[798,30214+65])
                              Pexp_constant PConst_string(" is never read.\n(However, this field is used to build or mutate values.)",(lib/warnings.ml[797,30188+7]..[798,30214+64]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[799,30280+4]..[799,30280+33])
                  Ppat_construct "Unused_field" (lib/warnings.ml[799,30280+4]..[799,30280+16])
                  Some
                    []
                    pattern (lib/warnings.ml[799,30280+17]..[799,30280+33])
                      Ppat_tuple
                      [
                        pattern (lib/warnings.ml[799,30280+18]..[799,30280+19])
                          Ppat_var "s" (lib/warnings.ml[799,30280+18]..[799,30280+19])
                        pattern (lib/warnings.ml[799,30280+21]..[799,30280+32])
                          Ppat_construct "Not_mutated" (lib/warnings.ml[799,30280+21]..[799,30280+32])
                          None
                      ]
                expression (lib/warnings.ml[800,30317+6]..[801,30353+26])
                  Pexp_apply
                  expression (lib/warnings.ml[800,30317+30]..[800,30317+31])
                    Pexp_ident "^" (lib/warnings.ml[800,30317+30]..[800,30317+31])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[800,30317+6]..[800,30317+29])
                        Pexp_constant PConst_string("mutable record field ",(lib/warnings.ml[800,30317+7]..[800,30317+28]),None)
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[800,30317+32]..[801,30353+26])
                        Pexp_apply
                        expression (lib/warnings.ml[800,30317+34]..[800,30317+35])
                          Pexp_ident "^" (lib/warnings.ml[800,30317+34]..[800,30317+35])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[800,30317+32]..[800,30317+33])
                              Pexp_ident "s" (lib/warnings.ml[800,30317+32]..[800,30317+33])
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[801,30353+6]..[801,30353+26])
                              Pexp_constant PConst_string(" is never mutated.",(lib/warnings.ml[801,30353+7]..[801,30353+25]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[802,30380+4]..[802,30380+15])
                  Ppat_construct "Missing_mli" (lib/warnings.ml[802,30380+4]..[802,30380+15])
                  None
                expression (lib/warnings.ml[803,30399+4]..[803,30399+33])
                  Pexp_constant PConst_string("Cannot find interface file.",(lib/warnings.ml[803,30399+5]..[803,30399+32]),None)
              <case>
                pattern (lib/warnings.ml[804,30433+4]..[804,30433+24])
                  Ppat_construct "Unused_tmc_attribute" (lib/warnings.ml[804,30433+4]..[804,30433+24])
                  None
                expression (lib/warnings.ml[805,30461+6]..[806,30510+45])
                  Pexp_constant PConst_string("This function is marked @tail_mod_cons\nbut is never applied in TMC position.",(lib/warnings.ml[805,30461+7]..[806,30510+44]),None)
              <case>
                pattern (lib/warnings.ml[807,30556+4]..[807,30556+23])
                  Ppat_construct "Tmc_breaks_tailcall" (lib/warnings.ml[807,30556+4]..[807,30556+23])
                  None
                expression (lib/warnings.ml[808,30583+6]..[814,30948+42])
                  Pexp_constant PConst_string("This call\nis in tail-modulo-cons position in a TMC function,\nbut the function called is not itself specialized for TMC,\nso the call will not be transformed into a tail call.\nPlease either mark the called function with the [@tail_mod_cons]\nattribute, or mark this call with the [@tailcall false] attribute\nto make its non-tailness explicit.",(lib/warnings.ml[808,30583+7]..[814,30948+41]),None)
              <case>
                pattern (lib/warnings.ml[815,30991+4]..[815,30991+39])
                  Ppat_construct "Generative_application_expects_unit" (lib/warnings.ml[815,30991+4]..[815,30991+39])
                  None
                expression (lib/warnings.ml[816,31034+6]..[817,31065+70])
                  Pexp_constant PConst_string("A generative functor\nshould be applied to '()'; using '(struct end)' is deprecated.",(lib/warnings.ml[816,31034+7]..[817,31065+69]),None)
            ]
    ]
  structure_item (lib/warnings.ml[820,31140+0]..[820,31140+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[820,31140+4]..[820,31140+11])
          Ppat_var "nerrors" (lib/warnings.ml[820,31140+4]..[820,31140+11])
        expression (lib/warnings.ml[820,31140+14]..[820,31140+19])
          Pexp_apply
          expression (lib/warnings.ml[820,31140+14]..[820,31140+17])
            Pexp_ident "ref" (lib/warnings.ml[820,31140+14]..[820,31140+17])
          [
            <arg>
            Nolabel
              expression (lib/warnings.ml[820,31140+18]..[820,31140+19])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (lib/warnings.ml[822,31161+0]..[827,31283+3])
    Pstr_type Rec
    [
      type_declaration "reporting_information" (lib/warnings.ml[822,31161+5]..[822,31161+26]) (lib/warnings.ml[822,31161+0]..[827,31283+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/warnings.ml[823,31190+4]..[824,31206+3])
                Immutable
                "id" (lib/warnings.ml[823,31190+4]..[823,31190+6])                core_type (lib/warnings.ml[823,31190+9]..[823,31190+15])
                  Ptyp_constr "string" (lib/warnings.ml[823,31190+9]..[823,31190+15])
                  []
              (lib/warnings.ml[824,31206+4]..[825,31227+3])
                Immutable
                "message" (lib/warnings.ml[824,31206+4]..[824,31206+11])                core_type (lib/warnings.ml[824,31206+14]..[824,31206+20])
                  Ptyp_constr "string" (lib/warnings.ml[824,31206+14]..[824,31206+20])
                  []
              (lib/warnings.ml[825,31227+4]..[826,31247+3])
                Immutable
                "is_error" (lib/warnings.ml[825,31227+4]..[825,31227+12])                core_type (lib/warnings.ml[825,31227+15]..[825,31227+19])
                  Ptyp_constr "bool" (lib/warnings.ml[825,31227+15]..[825,31227+19])
                  []
              (lib/warnings.ml[826,31247+4]..[826,31247+35])
                Immutable
                "sub_locs" (lib/warnings.ml[826,31247+4]..[826,31247+12])                core_type (lib/warnings.ml[826,31247+15]..[826,31247+34])
                  Ptyp_constr "list" (lib/warnings.ml[826,31247+30]..[826,31247+34])
                  [
                    core_type (lib/warnings.ml[826,31247+16]..[826,31247+28])
                      Ptyp_tuple
                      [
                        core_type (lib/warnings.ml[826,31247+16]..[826,31247+19])
                          Ptyp_constr "loc" (lib/warnings.ml[826,31247+16]..[826,31247+19])
                          []
                        core_type (lib/warnings.ml[826,31247+22]..[826,31247+28])
                          Ptyp_constr "string" (lib/warnings.ml[826,31247+22]..[826,31247+28])
                          []
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[829,31288+0]..[835,31474+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[829,31288+4]..[829,31288+11])
          Ppat_var "id_name" (lib/warnings.ml[829,31288+4]..[829,31288+11])
        expression (lib/warnings.ml[829,31288+12]..[835,31474+21]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[829,31288+12]..[829,31288+13])
              Nolabel
              None
              pattern (lib/warnings.ml[829,31288+12]..[829,31288+13])
                Ppat_var "w" (lib/warnings.ml[829,31288+12]..[829,31288+13])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[830,31304+2]..[835,31474+21])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[830,31304+6]..[830,31304+7])
                    Ppat_var "n" (lib/warnings.ml[830,31304+6]..[830,31304+7])
                  expression (lib/warnings.ml[830,31304+10]..[830,31304+18])
                    Pexp_apply
                    expression (lib/warnings.ml[830,31304+10]..[830,31304+16])
                      Pexp_ident "number" (lib/warnings.ml[830,31304+10]..[830,31304+16])
                    [
                      <arg>
                      Nolabel
                        expression (lib/warnings.ml[830,31304+17]..[830,31304+18])
                          Pexp_ident "w" (lib/warnings.ml[830,31304+17]..[830,31304+18])
                    ]
              ]
              expression (lib/warnings.ml[831,31326+2]..[835,31474+21])
                Pexp_match
                expression (lib/warnings.ml[831,31326+8]..[831,31326+66])
                  Pexp_apply
                  expression (lib/warnings.ml[831,31326+8]..[831,31326+21])
                    Pexp_ident "List.find_opt" (lib/warnings.ml[831,31326+8]..[831,31326+21])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[831,31326+22]..[831,31326+53])
                        Pexp_function
                        [
                          Pparam_val (lib/warnings.ml[831,31326+27]..[831,31326+38])
                            Nolabel
                            None
                            pattern (lib/warnings.ml[831,31326+27]..[831,31326+38])
                              Ppat_record Open
                              [
                                "number" (lib/warnings.ml[831,31326+28]..[831,31326+34]) ghost
                                  pattern (lib/warnings.ml[831,31326+28]..[831,31326+34])
                                    Ppat_var "number" (lib/warnings.ml[831,31326+28]..[831,31326+34])
                              ]
                        ]
                        None
                        Pfunction_body
                          expression (lib/warnings.ml[831,31326+42]..[831,31326+52])
                            Pexp_apply
                            expression (lib/warnings.ml[831,31326+49]..[831,31326+50])
                              Pexp_ident "=" (lib/warnings.ml[831,31326+49]..[831,31326+50])
                            [
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[831,31326+42]..[831,31326+48])
                                  Pexp_ident "number" (lib/warnings.ml[831,31326+42]..[831,31326+48])
                              <arg>
                              Nolabel
                                expression (lib/warnings.ml[831,31326+51]..[831,31326+52])
                                  Pexp_ident "n" (lib/warnings.ml[831,31326+51]..[831,31326+52])
                            ]
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[831,31326+54]..[831,31326+66])
                        Pexp_ident "descriptions" (lib/warnings.ml[831,31326+54]..[831,31326+66])
                  ]
                [
                  <case>
                    pattern (lib/warnings.ml[832,31398+4]..[832,31398+28])
                      Ppat_construct "Some" (lib/warnings.ml[832,31398+4]..[832,31398+8])
                      Some
                        []
                        pattern (lib/warnings.ml[832,31398+9]..[832,31398+28])
                          Ppat_record Open
                          [
                            "names" (lib/warnings.ml[832,31398+10]..[832,31398+15])
                              pattern (lib/warnings.ml[832,31398+18]..[832,31398+24])
                                Ppat_construct "::" (lib/warnings.ml[832,31398+20]..[832,31398+22])
                                Some
                                  []
                                  pattern (lib/warnings.ml[832,31398+18]..[832,31398+24]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (lib/warnings.ml[832,31398+18]..[832,31398+19])
                                        Ppat_var "s" (lib/warnings.ml[832,31398+18]..[832,31398+19])
                                      pattern (lib/warnings.ml[832,31398+23]..[832,31398+24])
                                        Ppat_any
                                    ]
                          ]
                    expression (lib/warnings.ml[833,31430+6]..[833,31430+34])
                      Pexp_apply
                      expression (lib/warnings.ml[833,31430+6]..[833,31430+20])
                        Pexp_ident "Printf.sprintf" (lib/warnings.ml[833,31430+6]..[833,31430+20])
                      [
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[833,31430+21]..[833,31430+30])
                            Pexp_constant PConst_string("%d [%s]",(lib/warnings.ml[833,31430+22]..[833,31430+29]),None)
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[833,31430+31]..[833,31430+32])
                            Pexp_ident "n" (lib/warnings.ml[833,31430+31]..[833,31430+32])
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[833,31430+33]..[833,31430+34])
                            Pexp_ident "s" (lib/warnings.ml[833,31430+33]..[833,31430+34])
                      ]
                  <case>
                    pattern (lib/warnings.ml[834,31465+4]..[834,31465+5])
                      Ppat_any
                    expression (lib/warnings.ml[835,31474+6]..[835,31474+21])
                      Pexp_apply
                      expression (lib/warnings.ml[835,31474+6]..[835,31474+19])
                        Pexp_ident "string_of_int" (lib/warnings.ml[835,31474+6]..[835,31474+19])
                      [
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[835,31474+20]..[835,31474+21])
                            Pexp_ident "n" (lib/warnings.ml[835,31474+20]..[835,31474+21])
                      ]
                ]
    ]
  structure_item (lib/warnings.ml[837,31497+0]..[847,31734+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[837,31497+4]..[837,31497+10])
          Ppat_var "report" (lib/warnings.ml[837,31497+4]..[837,31497+10])
        expression (lib/warnings.ml[837,31497+11]..[847,31734+8]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[837,31497+11]..[837,31497+12])
              Nolabel
              None
              pattern (lib/warnings.ml[837,31497+11]..[837,31497+12])
                Ppat_var "w" (lib/warnings.ml[837,31497+11]..[837,31497+12])
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[838,31512+2]..[847,31734+8])
              Pexp_match
              expression (lib/warnings.ml[838,31512+8]..[838,31512+19])
                Pexp_apply
                expression (lib/warnings.ml[838,31512+8]..[838,31512+17])
                  Pexp_ident "is_active" (lib/warnings.ml[838,31512+8]..[838,31512+17])
                [
                  <arg>
                  Nolabel
                    expression (lib/warnings.ml[838,31512+18]..[838,31512+19])
                      Pexp_ident "w" (lib/warnings.ml[838,31512+18]..[838,31512+19])
                ]
              [
                <case>
                  pattern (lib/warnings.ml[839,31537+4]..[839,31537+9])
                    Ppat_construct "false" (lib/warnings.ml[839,31537+4]..[839,31537+9])
                    None
                  expression (lib/warnings.ml[839,31537+13]..[839,31537+22])
                    Pexp_variant "Inactive"
                    None
                <case>
                  pattern (lib/warnings.ml[840,31560+4]..[840,31560+8])
                    Ppat_construct "true" (lib/warnings.ml[840,31560+4]..[840,31560+8])
                    None
                  expression (lib/warnings.ml[841,31572+5]..[847,31734+8])
                    Pexp_sequence
                    expression (lib/warnings.ml[841,31572+5]..[841,31572+36])
                      Pexp_ifthenelse
                      expression (lib/warnings.ml[841,31572+8]..[841,31572+18])
                        Pexp_apply
                        expression (lib/warnings.ml[841,31572+8]..[841,31572+16])
                          Pexp_ident "is_error" (lib/warnings.ml[841,31572+8]..[841,31572+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[841,31572+17]..[841,31572+18])
                              Pexp_ident "w" (lib/warnings.ml[841,31572+17]..[841,31572+18])
                        ]
                      expression (lib/warnings.ml[841,31572+24]..[841,31572+36])
                        Pexp_apply
                        expression (lib/warnings.ml[841,31572+24]..[841,31572+28])
                          Pexp_ident "incr" (lib/warnings.ml[841,31572+24]..[841,31572+28])
                        [
                          <arg>
                          Nolabel
                            expression (lib/warnings.ml[841,31572+29]..[841,31572+36])
                              Pexp_ident "nerrors" (lib/warnings.ml[841,31572+29]..[841,31572+36])
                        ]
                      None
                    expression (lib/warnings.ml[842,31610+5]..[847,31734+8])
                      Pexp_variant "Active"
                      Some
                        expression (lib/warnings.ml[843,31623+7]..[847,31734+8])
                          Pexp_record
                          [
                            "id" (lib/warnings.ml[843,31623+9]..[843,31623+11])
                              expression (lib/warnings.ml[843,31623+14]..[843,31623+23])
                                Pexp_apply
                                expression (lib/warnings.ml[843,31623+14]..[843,31623+21])
                                  Pexp_ident "id_name" (lib/warnings.ml[843,31623+14]..[843,31623+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[843,31623+22]..[843,31623+23])
                                      Pexp_ident "w" (lib/warnings.ml[843,31623+22]..[843,31623+23])
                                ]
                            "message" (lib/warnings.ml[844,31648+9]..[844,31648+16])
                              expression (lib/warnings.ml[844,31648+19]..[844,31648+28])
                                Pexp_apply
                                expression (lib/warnings.ml[844,31648+19]..[844,31648+26])
                                  Pexp_ident "message" (lib/warnings.ml[844,31648+19]..[844,31648+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[844,31648+27]..[844,31648+28])
                                      Pexp_ident "w" (lib/warnings.ml[844,31648+27]..[844,31648+28])
                                ]
                            "is_error" (lib/warnings.ml[845,31678+9]..[845,31678+17])
                              expression (lib/warnings.ml[845,31678+20]..[845,31678+30])
                                Pexp_apply
                                expression (lib/warnings.ml[845,31678+20]..[845,31678+28])
                                  Pexp_ident "is_error" (lib/warnings.ml[845,31678+20]..[845,31678+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/warnings.ml[845,31678+29]..[845,31678+30])
                                      Pexp_ident "w" (lib/warnings.ml[845,31678+29]..[845,31678+30])
                                ]
                            "sub_locs" (lib/warnings.ml[846,31710+9]..[846,31710+17])
                              expression (lib/warnings.ml[846,31710+20]..[846,31710+22])
                                Pexp_construct "[]" (lib/warnings.ml[846,31710+20]..[846,31710+22])
                                None
                          ]
                          None
              ]
    ]
  structure_item (lib/warnings.ml[849,31744+0]..[877,32570+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[849,31744+4]..[849,31744+16])
          Ppat_var "report_alert" (lib/warnings.ml[849,31744+4]..[849,31744+16])
        expression (lib/warnings.ml[849,31744+17]..[877,32570+9]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[849,31744+17]..[849,31744+32])
              Nolabel
              None
              pattern (lib/warnings.ml[849,31744+17]..[849,31744+32])
                Ppat_constraint
                pattern (lib/warnings.ml[849,31744+18]..[849,31744+23])
                  Ppat_var "alert" (lib/warnings.ml[849,31744+18]..[849,31744+23])
                core_type (lib/warnings.ml[849,31744+26]..[849,31744+31])
                  Ptyp_constr "alert" (lib/warnings.ml[849,31744+26]..[849,31744+31])
                  []
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[850,31779+2]..[877,32570+9])
              Pexp_match
              expression (lib/warnings.ml[850,31779+8]..[850,31779+29])
                Pexp_apply
                expression (lib/warnings.ml[850,31779+8]..[850,31779+23])
                  Pexp_ident "alert_is_active" (lib/warnings.ml[850,31779+8]..[850,31779+23])
                [
                  <arg>
                  Nolabel
                    expression (lib/warnings.ml[850,31779+24]..[850,31779+29])
                      Pexp_ident "alert" (lib/warnings.ml[850,31779+24]..[850,31779+29])
                ]
              [
                <case>
                  pattern (lib/warnings.ml[851,31814+4]..[851,31814+9])
                    Ppat_construct "false" (lib/warnings.ml[851,31814+4]..[851,31814+9])
                    None
                  expression (lib/warnings.ml[851,31814+13]..[851,31814+22])
                    Pexp_variant "Inactive"
                    None
                <case>
                  pattern (lib/warnings.ml[852,31837+4]..[852,31837+8])
                    Ppat_construct "true" (lib/warnings.ml[852,31837+4]..[852,31837+8])
                    None
                  expression (lib/warnings.ml[853,31849+6]..[877,32570+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[853,31849+10]..[853,31849+18])
                          Ppat_var "is_error" (lib/warnings.ml[853,31849+10]..[853,31849+18])
                        expression (lib/warnings.ml[853,31849+21]..[853,31849+41])
                          Pexp_apply
                          expression (lib/warnings.ml[853,31849+21]..[853,31849+35])
                            Pexp_ident "alert_is_error" (lib/warnings.ml[853,31849+21]..[853,31849+35])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[853,31849+36]..[853,31849+41])
                                Pexp_ident "alert" (lib/warnings.ml[853,31849+36]..[853,31849+41])
                          ]
                    ]
                    expression (lib/warnings.ml[854,31894+6]..[877,32570+9])
                      Pexp_sequence
                      expression (lib/warnings.ml[854,31894+6]..[854,31894+35])
                        Pexp_ifthenelse
                        expression (lib/warnings.ml[854,31894+9]..[854,31894+17])
                          Pexp_ident "is_error" (lib/warnings.ml[854,31894+9]..[854,31894+17])
                        expression (lib/warnings.ml[854,31894+23]..[854,31894+35])
                          Pexp_apply
                          expression (lib/warnings.ml[854,31894+23]..[854,31894+27])
                            Pexp_ident "incr" (lib/warnings.ml[854,31894+23]..[854,31894+27])
                          [
                            <arg>
                            Nolabel
                              expression (lib/warnings.ml[854,31894+28]..[854,31894+35])
                                Pexp_ident "nerrors" (lib/warnings.ml[854,31894+28]..[854,31894+35])
                          ]
                        None
                      expression (lib/warnings.ml[855,31931+6]..[877,32570+9])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/warnings.ml[855,31931+10]..[855,31931+17])
                              Ppat_var "message" (lib/warnings.ml[855,31931+10]..[855,31931+17])
                            expression (lib/warnings.ml[855,31931+20]..[855,31931+52])
                              Pexp_apply
                              expression (lib/warnings.ml[855,31931+20]..[855,31931+38])
                                Pexp_ident "Misc.normalise_eol" (lib/warnings.ml[855,31931+20]..[855,31931+38])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/warnings.ml[855,31931+39]..[855,31931+52])
                                    Pexp_field
                                    expression (lib/warnings.ml[855,31931+39]..[855,31931+44])
                                      Pexp_ident "alert" (lib/warnings.ml[855,31931+39]..[855,31931+44])
                                    "message" (lib/warnings.ml[855,31931+45]..[855,31931+52])
                              ]
                        ]
                        expression (lib/warnings.ml[862,32231+6]..[877,32570+9])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/warnings.ml[862,32231+10]..[862,32231+18])
                                Ppat_var "sub_locs" (lib/warnings.ml[862,32231+10]..[862,32231+18])
                              expression (lib/warnings.ml[863,32252+8]..[869,32438+12])
                                Pexp_ifthenelse
                                expression (lib/warnings.ml[863,32252+11]..[863,32252+61])
                                  Pexp_apply
                                  expression (lib/warnings.ml[863,32252+35]..[863,32252+37])
                                    Pexp_ident "&&" (lib/warnings.ml[863,32252+35]..[863,32252+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[863,32252+11]..[863,32252+34])
                                        Pexp_apply
                                        expression (lib/warnings.ml[863,32252+11]..[863,32252+14])
                                          Pexp_ident "not" (lib/warnings.ml[863,32252+11]..[863,32252+14])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[863,32252+15]..[863,32252+34])
                                              Pexp_field
                                              expression (lib/warnings.ml[863,32252+15]..[863,32252+24])
                                                Pexp_field
                                                expression (lib/warnings.ml[863,32252+15]..[863,32252+20])
                                                  Pexp_ident "alert" (lib/warnings.ml[863,32252+15]..[863,32252+20])
                                                "def" (lib/warnings.ml[863,32252+21]..[863,32252+24])
                                              "loc_ghost" (lib/warnings.ml[863,32252+25]..[863,32252+34])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/warnings.ml[863,32252+38]..[863,32252+61])
                                        Pexp_apply
                                        expression (lib/warnings.ml[863,32252+38]..[863,32252+41])
                                          Pexp_ident "not" (lib/warnings.ml[863,32252+38]..[863,32252+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/warnings.ml[863,32252+42]..[863,32252+61])
                                              Pexp_field
                                              expression (lib/warnings.ml[863,32252+42]..[863,32252+51])
                                                Pexp_field
                                                expression (lib/warnings.ml[863,32252+42]..[863,32252+47])
                                                  Pexp_ident "alert" (lib/warnings.ml[863,32252+42]..[863,32252+47])
                                                "use" (lib/warnings.ml[863,32252+48]..[863,32252+51])
                                              "loc_ghost" (lib/warnings.ml[863,32252+52]..[863,32252+61])
                                        ]
                                  ]
                                expression (lib/warnings.ml[864,32319+10]..[867,32413+11])
                                  Pexp_construct "::" (lib/warnings.ml[865,32331+12]..[867,32413+11]) ghost
                                  Some
                                    expression (lib/warnings.ml[865,32331+12]..[867,32413+11]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lib/warnings.ml[865,32331+12]..[865,32331+35])
                                          Pexp_tuple
                                          [
                                            expression (lib/warnings.ml[865,32331+12]..[865,32331+21])
                                              Pexp_field
                                              expression (lib/warnings.ml[865,32331+12]..[865,32331+17])
                                                Pexp_ident "alert" (lib/warnings.ml[865,32331+12]..[865,32331+17])
                                              "def" (lib/warnings.ml[865,32331+18]..[865,32331+21])
                                            expression (lib/warnings.ml[865,32331+23]..[865,32331+35])
                                              Pexp_constant PConst_string("Definition",(lib/warnings.ml[865,32331+24]..[865,32331+34]),None)
                                          ]
                                        expression (lib/warnings.ml[866,32368+12]..[867,32413+11]) ghost
                                          Pexp_construct "::" (lib/warnings.ml[866,32368+12]..[867,32413+11]) ghost
                                          Some
                                            expression (lib/warnings.ml[866,32368+12]..[867,32413+11]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lib/warnings.ml[866,32368+12]..[866,32368+43])
                                                  Pexp_tuple
                                                  [
                                                    expression (lib/warnings.ml[866,32368+12]..[866,32368+21])
                                                      Pexp_field
                                                      expression (lib/warnings.ml[866,32368+12]..[866,32368+17])
                                                        Pexp_ident "alert" (lib/warnings.ml[866,32368+12]..[866,32368+17])
                                                      "use" (lib/warnings.ml[866,32368+18]..[866,32368+21])
                                                    expression (lib/warnings.ml[866,32368+23]..[866,32368+43])
                                                      Pexp_constant PConst_string("Expected signature",(lib/warnings.ml[866,32368+24]..[866,32368+42]),None)
                                                  ]
                                                expression (lib/warnings.ml[867,32413+10]..[867,32413+11]) ghost
                                                  Pexp_construct "[]" (lib/warnings.ml[867,32413+10]..[867,32413+11]) ghost
                                                  None
                                              ]
                                      ]
                                Some
                                  expression (lib/warnings.ml[869,32438+10]..[869,32438+12])
                                    Pexp_construct "[]" (lib/warnings.ml[869,32438+10]..[869,32438+12])
                                    None
                          ]
                          expression (lib/warnings.ml[871,32460+6]..[877,32570+9])
                            Pexp_variant "Active"
                            Some
                              expression (lib/warnings.ml[872,32474+8]..[877,32570+9])
                                Pexp_record
                                [
                                  "id" (lib/warnings.ml[873,32484+10]..[873,32484+12])
                                    expression (lib/warnings.ml[873,32484+15]..[873,32484+25])
                                      Pexp_field
                                      expression (lib/warnings.ml[873,32484+15]..[873,32484+20])
                                        Pexp_ident "alert" (lib/warnings.ml[873,32484+15]..[873,32484+20])
                                      "kind" (lib/warnings.ml[873,32484+21]..[873,32484+25])
                                  "message" (lib/warnings.ml[874,32511+10]..[874,32511+17]) ghost
                                    expression (lib/warnings.ml[874,32511+10]..[874,32511+17])
                                      Pexp_ident "message" (lib/warnings.ml[874,32511+10]..[874,32511+17])
                                  "is_error" (lib/warnings.ml[875,32530+10]..[875,32530+18]) ghost
                                    expression (lib/warnings.ml[875,32530+10]..[875,32530+18])
                                      Pexp_ident "is_error" (lib/warnings.ml[875,32530+10]..[875,32530+18])
                                  "sub_locs" (lib/warnings.ml[876,32550+10]..[876,32550+18]) ghost
                                    expression (lib/warnings.ml[876,32550+10]..[876,32550+18])
                                      Pexp_ident "sub_locs" (lib/warnings.ml[876,32550+10]..[876,32550+18])
                                ]
                                None
              ]
    ]
  structure_item (lib/warnings.ml[879,32581+0]..[879,32581+16])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (lib/warnings.ml[879,32581+0]..[879,32581+16])
          pext_name = "Errors"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (lib/warnings.ml[881,32599+0]..[882,32620+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[881,32599+4]..[881,32599+15])
          Ppat_var "reset_fatal" (lib/warnings.ml[881,32599+4]..[881,32599+15])
        expression (lib/warnings.ml[881,32599+16]..[882,32620+14]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[881,32599+16]..[881,32599+18])
              Nolabel
              None
              pattern (lib/warnings.ml[881,32599+16]..[881,32599+18])
                Ppat_construct "()" (lib/warnings.ml[881,32599+16]..[881,32599+18])
                None
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[882,32620+2]..[882,32620+14])
              Pexp_apply
              expression (lib/warnings.ml[882,32620+10]..[882,32620+12])
                Pexp_ident ":=" (lib/warnings.ml[882,32620+10]..[882,32620+12])
              [
                <arg>
                Nolabel
                  expression (lib/warnings.ml[882,32620+2]..[882,32620+9])
                    Pexp_ident "nerrors" (lib/warnings.ml[882,32620+2]..[882,32620+9])
                <arg>
                Nolabel
                  expression (lib/warnings.ml[882,32620+13]..[882,32620+14])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
  structure_item (lib/warnings.ml[884,32636+0]..[888,32722+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[884,32636+4]..[884,32636+15])
          Ppat_var "check_fatal" (lib/warnings.ml[884,32636+4]..[884,32636+15])
        expression (lib/warnings.ml[884,32636+16]..[888,32722+5]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[884,32636+16]..[884,32636+18])
              Nolabel
              None
              pattern (lib/warnings.ml[884,32636+16]..[884,32636+18])
                Ppat_construct "()" (lib/warnings.ml[884,32636+16]..[884,32636+18])
                None
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[885,32657+2]..[888,32722+5])
              Pexp_ifthenelse
              expression (lib/warnings.ml[885,32657+5]..[885,32657+17])
                Pexp_apply
                expression (lib/warnings.ml[885,32657+14]..[885,32657+15])
                  Pexp_ident ">" (lib/warnings.ml[885,32657+14]..[885,32657+15])
                [
                  <arg>
                  Nolabel
                    expression (lib/warnings.ml[885,32657+5]..[885,32657+13])
                      Pexp_apply
                      expression (lib/warnings.ml[885,32657+5]..[885,32657+6])
                        Pexp_ident "!" (lib/warnings.ml[885,32657+5]..[885,32657+6])
                      [
                        <arg>
                        Nolabel
                          expression (lib/warnings.ml[885,32657+6]..[885,32657+13])
                            Pexp_ident "nerrors" (lib/warnings.ml[885,32657+6]..[885,32657+13])
                      ]
                  <arg>
                  Nolabel
                    expression (lib/warnings.ml[885,32657+16]..[885,32657+17])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (lib/warnings.ml[885,32657+23]..[888,32722+5])
                Pexp_sequence
                expression (lib/warnings.ml[886,32686+4]..[886,32686+16])
                  Pexp_apply
                  expression (lib/warnings.ml[886,32686+12]..[886,32686+14])
                    Pexp_ident ":=" (lib/warnings.ml[886,32686+12]..[886,32686+14])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[886,32686+4]..[886,32686+11])
                        Pexp_ident "nerrors" (lib/warnings.ml[886,32686+4]..[886,32686+11])
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[886,32686+15]..[886,32686+16])
                        Pexp_constant PConst_int (0,None)
                  ]
                expression (lib/warnings.ml[887,32704+4]..[887,32704+16])
                  Pexp_apply
                  expression (lib/warnings.ml[887,32704+4]..[887,32704+9])
                    Pexp_ident "raise" (lib/warnings.ml[887,32704+4]..[887,32704+9])
                  [
                    <arg>
                    Nolabel
                      expression (lib/warnings.ml[887,32704+10]..[887,32704+16])
                        Pexp_construct "Errors" (lib/warnings.ml[887,32704+10]..[887,32704+16])
                        None
                  ]
              None
    ]
  structure_item (lib/warnings.ml[896,32937+0]..[897,32960+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[896,32937+4]..[896,32937+17])
          Ppat_var "help_warnings" (lib/warnings.ml[896,32937+4]..[896,32937+17])
        expression (lib/warnings.ml[896,32937+18]..[897,32960+8]) ghost
          Pexp_function
          [
            Pparam_val (lib/warnings.ml[896,32937+18]..[896,32937+20])
              Nolabel
              None
              pattern (lib/warnings.ml[896,32937+18]..[896,32937+20])
                Ppat_construct "()" (lib/warnings.ml[896,32937+18]..[896,32937+20])
                None
          ]
          None
          Pfunction_body
            expression (lib/warnings.ml[897,32960+2]..[897,32960+8])
              Pexp_apply
              expression (lib/warnings.ml[897,32960+2]..[897,32960+6])
                Pexp_ident "exit" (lib/warnings.ml[897,32960+2]..[897,32960+6])
              [
                <arg>
                Nolabel
                  expression (lib/warnings.ml[897,32960+7]..[897,32960+8])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
]

type loc =
  {
  loc_start: Lexing.position ;
  loc_end: Lexing.position ;
  loc_ghost: bool }
type field_usage_warning =
  | Unused 
  | Not_read 
  | Not_mutated 
type constructor_usage_warning =
  | Unused 
  | Not_constructed 
  | Only_exported_private 
type t =
  | Comment_start 
  | Comment_not_end 
  | Fragile_match of string 
  | Ignored_partial_application 
  | Labels_omitted of string list 
  | Method_override of string list 
  | Partial_match of string 
  | Missing_record_field_pattern of string 
  | Non_unit_statement 
  | Redundant_case 
  | Redundant_subpat 
  | Instance_variable_override of string list 
  | Illegal_backslash 
  | Implicit_public_methods of string list 
  | Unerasable_optional_argument 
  | Undeclared_virtual_method of string 
  | Not_principal of string 
  | Non_principal_labels of string 
  | Ignored_extra_argument 
  | Nonreturning_statement 
  | Preprocessor of string 
  | Useless_record_with 
  | Bad_module_name of string 
  | All_clauses_guarded 
  | Unused_var of string 
  | Unused_var_strict of string 
  | Wildcard_arg_to_constant_constr 
  | Eol_in_string 
  | Duplicate_definitions of string * string * string * string 
  | Unused_value_declaration of string 
  | Unused_open of string 
  | Unused_type_declaration of string 
  | Unused_for_index of string 
  | Unused_ancestor of string 
  | Unused_constructor of string * constructor_usage_warning 
  | Unused_extension of string * bool * constructor_usage_warning 
  | Unused_rec_flag 
  | Name_out_of_scope of string * string list * bool 
  | Ambiguous_name of string list * string list * bool * string 
  | Disambiguated_name of string 
  | Nonoptional_label of string 
  | Open_shadow_identifier of string * string 
  | Open_shadow_label_constructor of string * string 
  | Bad_env_variable of string * string 
  | Attribute_payload of string * string 
  | Eliminated_optional_arguments of string list 
  | No_cmi_file of string * string option 
  | Unexpected_docstring of bool 
  | Wrong_tailcall_expectation of bool 
  | Fragile_literal_pattern 
  | Misplaced_attribute of string 
  | Duplicated_attribute of string 
  | Inlining_impossible of string 
  | Unreachable_case 
  | Ambiguous_var_in_pattern_guard of string list 
  | No_cmx_file of string 
  | Flambda_assignment_to_non_mutable_value 
  | Unused_module of string 
  | Unboxable_type_in_prim_decl of string 
  | Constraint_on_gadt 
  | Erroneous_printed_signature of string 
  | Unsafe_array_syntax_without_parsing 
  | Redefining_unit of string 
  | Unused_open_bang of string 
  | Unused_functor_parameter of string 
  | Match_on_mutable_state_prevent_uncurry 
  | Unused_field of string * field_usage_warning 
  | Missing_mli 
  | Unused_tmc_attribute 
  | Tmc_breaks_tailcall 
  | Generative_application_expects_unit 
type alert = {
  kind: string ;
  message: string ;
  def: loc ;
  use: loc }
let number =
  function
  | Comment_start -> 1
  | Comment_not_end -> 2
  | Fragile_match _ -> 4
  | Ignored_partial_application -> 5
  | Labels_omitted _ -> 6
  | Method_override _ -> 7
  | Partial_match _ -> 8
  | Missing_record_field_pattern _ -> 9
  | Non_unit_statement -> 10
  | Redundant_case -> 11
  | Redundant_subpat -> 12
  | Instance_variable_override _ -> 13
  | Illegal_backslash -> 14
  | Implicit_public_methods _ -> 15
  | Unerasable_optional_argument -> 16
  | Undeclared_virtual_method _ -> 17
  | Not_principal _ -> 18
  | Non_principal_labels _ -> 19
  | Ignored_extra_argument -> 20
  | Nonreturning_statement -> 21
  | Preprocessor _ -> 22
  | Useless_record_with -> 23
  | Bad_module_name _ -> 24
  | All_clauses_guarded -> 8
  | Unused_var _ -> 26
  | Unused_var_strict _ -> 27
  | Wildcard_arg_to_constant_constr -> 28
  | Eol_in_string -> 29
  | Duplicate_definitions _ -> 30
  | Unused_value_declaration _ -> 32
  | Unused_open _ -> 33
  | Unused_type_declaration _ -> 34
  | Unused_for_index _ -> 35
  | Unused_ancestor _ -> 36
  | Unused_constructor _ -> 37
  | Unused_extension _ -> 38
  | Unused_rec_flag -> 39
  | Name_out_of_scope _ -> 40
  | Ambiguous_name _ -> 41
  | Disambiguated_name _ -> 42
  | Nonoptional_label _ -> 43
  | Open_shadow_identifier _ -> 44
  | Open_shadow_label_constructor _ -> 45
  | Bad_env_variable _ -> 46
  | Attribute_payload _ -> 47
  | Eliminated_optional_arguments _ -> 48
  | No_cmi_file _ -> 49
  | Unexpected_docstring _ -> 50
  | Wrong_tailcall_expectation _ -> 51
  | Fragile_literal_pattern -> 52
  | Misplaced_attribute _ -> 53
  | Duplicated_attribute _ -> 54
  | Inlining_impossible _ -> 55
  | Unreachable_case -> 56
  | Ambiguous_var_in_pattern_guard _ -> 57
  | No_cmx_file _ -> 58
  | Flambda_assignment_to_non_mutable_value -> 59
  | Unused_module _ -> 60
  | Unboxable_type_in_prim_decl _ -> 61
  | Constraint_on_gadt -> 62
  | Erroneous_printed_signature _ -> 63
  | Unsafe_array_syntax_without_parsing -> 64
  | Redefining_unit _ -> 65
  | Unused_open_bang _ -> 66
  | Unused_functor_parameter _ -> 67
  | Match_on_mutable_state_prevent_uncurry -> 68
  | Unused_field _ -> 69
  | Missing_mli -> 70
  | Unused_tmc_attribute -> 71
  | Tmc_breaks_tailcall -> 72
  | Generative_application_expects_unit -> 73
let last_warning_number = 73
type description = {
  number: int ;
  names: string list ;
  description: string }
let descriptions = []
let name_to_number =
  let h = Hashtbl.create last_warning_number in
  List.iter
    (fun { number; names;_} ->
       List.iter (fun name -> Hashtbl.add h name number) names) descriptions;
  (fun s -> Hashtbl.find_opt h s)
let letter =
  function
  | 'a' ->
      let rec loop i = if i = 0 then [] else i :: (loop (i - 1)) in
      loop last_warning_number
  | 'b' -> []
  | 'c' -> [1; 2]
  | 'd' -> [3]
  | 'e' -> [4]
  | 'f' -> [5]
  | 'g' -> []
  | 'h' -> []
  | 'i' -> []
  | 'j' -> []
  | 'k' -> [32; 33; 34; 35; 36; 37; 38; 39]
  | 'l' -> [6]
  | 'm' -> [7]
  | 'n' -> []
  | 'o' -> []
  | 'p' -> [8]
  | 'q' -> []
  | 'r' -> [9]
  | 's' -> [10]
  | 't' -> []
  | 'u' -> [11; 12]
  | 'v' -> [13]
  | 'w' -> []
  | 'x' -> [14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; 30]
  | 'y' -> [26]
  | 'z' -> [27]
  | _ -> assert false
type state =
  {
  active: bool array ;
  error: bool array ;
  alerts: (Misc.Stdlib.String.Set.t * bool) ;
  alert_errors: (Misc.Stdlib.String.Set.t * bool) }
let current =
  ref
    {
      active = (Array.make (last_warning_number + 1) true);
      error = (Array.make (last_warning_number + 1) false);
      alerts = (Misc.Stdlib.String.Set.empty, false);
      alert_errors = (Misc.Stdlib.String.Set.empty, true)
    }
let disabled = ref false
let without_warnings f = Misc.protect_refs [Misc.R (disabled, true)] f
let backup () = !current
let restore x = current := x
let is_active x = (not (!disabled)) && (((!current).active).(number x))
let is_error x = (not (!disabled)) && (((!current).error).(number x))
let alert_is_active { kind;_} =
  (not (!disabled)) &&
    (let (set, pos) = (!current).alerts in
     (Misc.Stdlib.String.Set.mem kind set) = pos)
let alert_is_error { kind;_} =
  (not (!disabled)) &&
    (let (set, pos) = (!current).alert_errors in
     (Misc.Stdlib.String.Set.mem kind set) = pos)
let with_state state f =
  let prev = backup () in
  restore state;
  (try let r = f () in restore prev; r
   with | exn -> (restore prev; raise exn))
let mk_lazy f = let state = backup () in lazy (with_state state f)
let set_alert ~error ~enable s =
  let upd =
    match s with
    | "all" -> (Misc.Stdlib.String.Set.empty, (not enable))
    | s ->
        let (set, pos) =
          if error then (!current).alert_errors else (!current).alerts in
        let f =
          if enable = pos
          then Misc.Stdlib.String.Set.add
          else Misc.Stdlib.String.Set.remove in
        ((f s set), pos) in
  if error
  then current := { (!current) with alert_errors = upd }
  else current := { (!current) with alerts = upd }
let parse_alert_option s =
  let n = String.length s in
  let id_char =
    function
    | 'a'..'z' | 'A'..'Z' | '_' | '\'' | '0'..'9' -> true
    | _ -> false in
  let rec parse_id i =
    if (i < n) && (id_char (s.[i])) then parse_id (i + 1) else i in
  let rec scan i =
    if i = n
    then ()
    else
      if (i + 1) = n
      then raise (Arg.Bad "Ill-formed list of alert settings")
      else
        (match ((s.[i]), (s.[i + 1])) with
         | ('+', '+') -> id (set_alert ~error:true ~enable:true) (i + 2)
         | ('+', _) -> id (set_alert ~error:false ~enable:true) (i + 1)
         | ('-', '-') -> id (set_alert ~error:true ~enable:false) (i + 2)
         | ('-', _) -> id (set_alert ~error:false ~enable:false) (i + 1)
         | ('@', _) ->
             id
               (fun s ->
                  set_alert ~error:true ~enable:true s;
                  set_alert ~error:false ~enable:true s) (i + 1)
         | _ -> raise (Arg.Bad "Ill-formed list of alert settings"))
  and id f i =
    let j = parse_id i in
    if j = i then raise (Arg.Bad "Ill-formed list of alert settings");
    (let id = String.sub s i (j - i) in f id; scan j) in
  scan 0
type modifier =
  | Set [@ocaml.doc " +a "]
  | Clear [@ocaml.doc " -a "]
  | Set_all [@ocaml.doc " @a "]
type token =
  | Letter of char * modifier option 
  | Num of int * int * modifier 
let ghost_loc_in_file name =
  let pos = { Lexing.dummy_pos with pos_fname = name } in
  { loc_start = pos; loc_end = pos; loc_ghost = true }
let letter_alert tokens =
  let print_warning_char ppf c =
    let lowercase = (Char.lowercase_ascii c) = c in
    Format.fprintf ppf "%c%c" (if lowercase then '-' else '+') c in
  let print_modifier ppf =
    function
    | Set_all -> Format.fprintf ppf "@"
    | Clear -> Format.fprintf ppf "-"
    | Set -> Format.fprintf ppf "+" in
  let print_token ppf =
    function
    | Num (a, b, m) ->
        if a = b
        then Format.fprintf ppf "%a%d" print_modifier m a
        else Format.fprintf ppf "%a%d..%d" print_modifier m a b
    | Letter (l, Some m) -> Format.fprintf ppf "%a%c" print_modifier m l
    | Letter (l, None) -> print_warning_char ppf l in
  let consecutive_letters =
    let commit_chunk l =
      function | [] | _::[] -> l | _::_::_ as chunk -> (List.rev chunk) :: l in
    let group_consecutive_letters (l, current) =
      function
      | Letter (x, None) -> (l, (x :: current))
      | _ -> ((commit_chunk l current), []) in
    let (l, on_going) =
      List.fold_left group_consecutive_letters ([], []) tokens in
    commit_chunk l on_going in
  match consecutive_letters with
  | [] -> None
  | example::_ ->
      let nowhere = ghost_loc_in_file "_none_" in
      let spelling_hint ppf =
        let max_seq_len =
          List.fold_left (fun l x -> Int.max l (List.length x)) 0
            consecutive_letters in
        if max_seq_len >= 5
        then
          Format.fprintf ppf
            "@ @[Hint: Did you make a spelling mistake when using a mnemonic name?@]"
        else () in
      let message =
        Format.asprintf
          "@[<v>@[Setting a warning with a sequence of lowercase or uppercase letters,@ like '%a',@ is deprecated.@]@ @[Use the equivalent signed form:@ %t.@]@ @[Hint: Enabling or disabling a warning by its mnemonic name requires a + or - prefix.@]%t@?@]"
          (let open Format in
             pp_print_list ~pp_sep:(fun _ -> ignore) pp_print_char) example
          (fun ppf -> List.iter (print_token ppf) tokens) spelling_hint in
      Some
        {
          kind = "ocaml_deprecated_cli";
          use = nowhere;
          def = nowhere;
          message
        }
let parse_warnings s =
  let error () = raise (Arg.Bad "Ill-formed list of warnings") in
  let rec get_num n i =
    if i >= (String.length s)
    then (i, n)
    else
      (match s.[i] with
       | '0'..'9' ->
           get_num (((10 * n) + (Char.code (s.[i]))) - (Char.code '0'))
             (i + 1)
       | _ -> (i, n)) in
  let get_range i =
    let (i, n1) = get_num 0 i in
    if
      ((i + 2) < (String.length s)) &&
        (((s.[i]) = '.') && ((s.[i + 1]) = '.'))
    then
      let (i, n2) = get_num 0 (i + 2) in
      (if n2 < n1 then error (); (i, n1, n2))
    else (i, n1, n1) in
  let rec loop tokens i =
    if i >= (String.length s)
    then List.rev tokens
    else
      (match s.[i] with
       | 'A'..'Z' | 'a'..'z' ->
           loop ((Letter ((s.[i]), None)) :: tokens) (i + 1)
       | '+' -> loop_letter_num tokens Set (i + 1)
       | '-' -> loop_letter_num tokens Clear (i + 1)
       | '@' -> loop_letter_num tokens Set_all (i + 1)
       | _ -> error ())
  and loop_letter_num tokens modifier i =
    if i >= (String.length s)
    then error ()
    else
      (match s.[i] with
       | '0'..'9' ->
           let (i, n1, n2) = get_range i in
           loop ((Num (n1, n2, modifier)) :: tokens) i
       | 'A'..'Z' | 'a'..'z' ->
           loop ((Letter ((s.[i]), (Some modifier))) :: tokens) (i + 1)
       | _ -> error ()) in
  loop [] 0
let parse_opt error active errflag s =
  let flags = if errflag then error else active in
  let action modifier i =
    match modifier with
    | Set ->
        if i = 3
        then set_alert ~error:errflag ~enable:true "deprecated"
        else flags.(i) <- true
    | Clear ->
        if i = 3
        then set_alert ~error:errflag ~enable:false "deprecated"
        else flags.(i) <- false
    | Set_all ->
        if i = 3
        then
          (set_alert ~error:false ~enable:true "deprecated";
           set_alert ~error:true ~enable:true "deprecated")
        else (active.(i) <- true; error.(i) <- true) in
  let eval =
    function
    | Letter (c, m) ->
        let lc = Char.lowercase_ascii c in
        let modifier =
          match m with | None -> if c = lc then Clear else Set | Some m -> m in
        List.iter (action modifier) (letter lc)
    | Num (n1, n2, modifier) ->
        for n = n1 to Int.min n2 last_warning_number do action modifier n
        done in
  let parse_and_eval s =
    let tokens = parse_warnings s in
    List.iter eval tokens; letter_alert tokens in
  match name_to_number s with
  | Some n -> (action Set n; None)
  | None ->
      if s = ""
      then parse_and_eval s
      else
        (let rest = String.sub s 1 ((String.length s) - 1) in
         match ((s.[0]), (name_to_number rest)) with
         | ('+', Some n) -> (action Set n; None)
         | ('-', Some n) -> (action Clear n; None)
         | ('@', Some n) -> (action Set_all n; None)
         | _ -> parse_and_eval s)
let parse_options errflag s =
  let error = Array.copy (!current).error in
  let active = Array.copy (!current).active in
  let alerts = parse_opt error active errflag s in
  current := { (!current) with error; active }; alerts
let defaults_w = "+a-4-7-9-27-29-30-32..42-44-45-48-50-60-66..70"
let defaults_warn_error = "-a"
let default_disabled_alerts = ["unstable"; "unsynchronized_access"]
let () = ignore @@ (parse_options false defaults_w)
let () = ignore @@ (parse_options true defaults_warn_error)
let () =
  List.iter (set_alert ~error:false ~enable:false) default_disabled_alerts
let message =
  function
  | Comment_start ->
      "this `(*' is the start of a comment.\nHint: Did you forget spaces when writing the infix operator `( * )'?"
  | Comment_not_end -> "this is not the end of a comment."
  | Fragile_match "" -> "this pattern-matching is fragile."
  | Fragile_match s ->
      "this pattern-matching is fragile.\nIt will remain exhaustive when constructors are added to type "
        ^ (s ^ ".")
  | Ignored_partial_application ->
      "this function application is partial,\nmaybe some arguments are missing."
  | Labels_omitted [] -> assert false
  | Labels_omitted (l::[]) ->
      "label " ^ (l ^ " was omitted in the application of this function.")
  | Labels_omitted ls ->
      "labels " ^
        ((String.concat ", " ls) ^
           " were omitted in the application of this function.")
  | Method_override (lab::[]) -> "the method " ^ (lab ^ " is overridden.")
  | Method_override (cname::slist) ->
      String.concat " " ("the following methods are overridden by the class"
        :: cname :: ":\n " :: slist)
  | Method_override [] -> assert false
  | Partial_match "" -> "this pattern-matching is not exhaustive."
  | Partial_match s ->
      "this pattern-matching is not exhaustive.\nHere is an example of a case that is not matched:\n"
        ^ s
  | Missing_record_field_pattern s ->
      "the following labels are not bound in this record pattern:\n" ^
        (s ^
           "\nEither bind these labels explicitly or add '; _' to the pattern.")
  | Non_unit_statement -> "this expression should have type unit."
  | Redundant_case -> "this match case is unused."
  | Redundant_subpat -> "this sub-pattern is unused."
  | Instance_variable_override (lab::[]) ->
      "the instance variable " ^ (lab ^ " is overridden.")
  | Instance_variable_override (cname::slist) ->
      String.concat " "
        ("the following instance variables are overridden by the class" ::
        cname :: ":\n " :: slist)
  | Instance_variable_override [] -> assert false
  | Illegal_backslash ->
      "illegal backslash escape in string.\nHint: Single backslashes \\ are reserved for escape sequences\n(\\n, \\r, ...). Did you check the list of OCaml escape sequences?\nTo get a backslash character, escape it with a second backslash: \\\\."
  | Implicit_public_methods l ->
      "the following private methods were made public implicitly:\n " ^
        ((String.concat " " l) ^ ".")
  | Unerasable_optional_argument ->
      "this optional argument cannot be erased."
  | Undeclared_virtual_method m ->
      "the virtual method " ^ (m ^ " is not declared.")
  | Not_principal s -> s ^ " is not principal."
  | Non_principal_labels s -> s ^ " without principality."
  | Ignored_extra_argument ->
      "this argument will not be used by the function."
  | Nonreturning_statement ->
      "this statement never returns (or has an unsound type.)"
  | Preprocessor s -> s
  | Useless_record_with ->
      "all the fields are explicitly listed in this record:\nthe 'with' clause is useless."
  | Bad_module_name modname ->
      "bad source file name: \"" ^
        (modname ^ "\" is not a valid module name.")
  | All_clauses_guarded ->
      "this pattern-matching is not exhaustive.\nAll clauses in this pattern-matching are guarded."
  | Unused_var v | Unused_var_strict v -> "unused variable " ^ (v ^ ".")
  | Wildcard_arg_to_constant_constr ->
      "wildcard pattern given as argument to a constant constructor"
  | Eol_in_string ->
      "unescaped end-of-line in a string constant\n(non-portable behavior before OCaml 5.2)"
  | Duplicate_definitions (kind, cname, tc1, tc2) ->
      Printf.sprintf "the %s %s is defined in both types %s and %s." kind
        cname tc1 tc2
  | Unused_value_declaration v -> "unused value " ^ (v ^ ".")
  | Unused_open s -> "unused open " ^ (s ^ ".")
  | Unused_open_bang s -> "unused open! " ^ (s ^ ".")
  | Unused_type_declaration s -> "unused type " ^ (s ^ ".")
  | Unused_for_index s -> "unused for-loop index " ^ (s ^ ".")
  | Unused_ancestor s -> "unused ancestor variable " ^ (s ^ ".")
  | Unused_constructor (s, Unused) -> "unused constructor " ^ (s ^ ".")
  | Unused_constructor (s, Not_constructed) ->
      "constructor " ^
        (s ^
           " is never used to build values.\n(However, this constructor appears in patterns.)")
  | Unused_constructor (s, Only_exported_private) ->
      "constructor " ^
        (s ^
           " is never used to build values.\nIts type is exported as a private type.")
  | Unused_extension (s, is_exception, complaint) ->
      let kind =
        if is_exception then "exception" else "extension constructor" in
      let name = kind ^ (" " ^ s) in
      (match complaint with
       | Unused -> "unused " ^ name
       | Not_constructed ->
           name ^
             " is never used to build values.\n(However, this constructor appears in patterns.)"
       | Only_exported_private ->
           name ^
             " is never used to build values.\nIt is exported or rebound as a private extension.")
  | Unused_rec_flag -> "unused rec flag."
  | Name_out_of_scope (ty, nm::[], false) ->
      nm ^
        (" was selected from type " ^
           (ty ^
              ".\nIt is not visible in the current scope, and will not \nbe selected if the type becomes unknown."))
  | Name_out_of_scope (_, _, false) -> assert false
  | Name_out_of_scope (ty, slist, true) ->
      "this record of type " ^
        (ty ^
           (" contains fields that are \nnot visible in the current scope: "
              ^
              ((String.concat " " slist) ^
                 ".\nThey will not be selected if the type becomes unknown.")))
  | Ambiguous_name (s::[], tl, false, expansion) ->
      s ^
        (" belongs to several types: " ^
           ((String.concat " " tl) ^
              ("\nThe first one was selected. Please disambiguate if this is wrong."
                 ^ expansion)))
  | Ambiguous_name (_, _, false, _) -> assert false
  | Ambiguous_name (_slist, tl, true, expansion) ->
      "these field labels belong to several types: " ^
        ((String.concat " " tl) ^
           ("\nThe first one was selected. Please disambiguate if this is wrong."
              ^ expansion))
  | Disambiguated_name s ->
      "this use of " ^
        (s ^
           " relies on type-directed disambiguation,\nit will not compile with OCaml 4.00 or earlier.")
  | Nonoptional_label s -> "the label " ^ (s ^ " is not optional.")
  | Open_shadow_identifier (kind, s) ->
      Printf.sprintf
        "this open statement shadows the %s identifier %s (which is later used)"
        kind s
  | Open_shadow_label_constructor (kind, s) ->
      Printf.sprintf
        "this open statement shadows the %s %s (which is later used)" kind s
  | Bad_env_variable (var, s) ->
      Printf.sprintf "illegal environment variable %s : %s" var s
  | Attribute_payload (a, s) ->
      Printf.sprintf "illegal payload for attribute '%s'.\n%s" a s
  | Eliminated_optional_arguments sl ->
      Printf.sprintf "implicit elimination of optional argument%s %s"
        (if (List.length sl) = 1 then "" else "s") (String.concat ", " sl)
  | No_cmi_file (name, None) ->
      "no cmi file was found in path for module " ^ name
  | No_cmi_file (name, Some msg) ->
      Printf.sprintf "no valid cmi file was found in path for module %s. %s"
        name msg
  | Unexpected_docstring unattached ->
      if unattached
      then "unattached documentation comment (ignored)"
      else "ambiguous documentation comment"
  | Wrong_tailcall_expectation b ->
      Printf.sprintf "expected %s" (if b then "tailcall" else "non-tailcall")
  | Fragile_literal_pattern ->
      let ref_manual = [13; 5; 3][@@manual.ref "ss:warn52"] in
      Format.asprintf
        "Code should not depend on the actual values of\nthis constructor's arguments. They are only for information\nand may change in future versions. %a"
        Misc.print_see_manual ref_manual
  | Unreachable_case ->
      "this match case is unreachable.\nConsider replacing it with a refutation case '<pat> -> .'"
  | Misplaced_attribute attr_name ->
      Printf.sprintf "the %S attribute cannot appear in this context"
        attr_name
  | Duplicated_attribute attr_name ->
      Printf.sprintf
        "the %S attribute is used more than once on this expression"
        attr_name
  | Inlining_impossible reason -> Printf.sprintf "Cannot inline: %s" reason
  | Ambiguous_var_in_pattern_guard vars ->
      let ref_manual = [13; 5; 4][@@manual.ref "ss:warn57"] in
      let vars = List.sort String.compare vars in
      let vars_explanation =
        let in_different_places =
          "in different places in different or-pattern alternatives" in
        match vars with
        | [] -> assert false
        | x::[] -> "variable " ^ (x ^ (" appears " ^ in_different_places))
        | _::_ ->
            let vars = String.concat ", " vars in
            "variables " ^ (vars ^ (" appear " ^ in_different_places)) in
      Format.asprintf
        "Ambiguous or-pattern variables under guard;\n%s.\nOnly the first match will be used to evaluate the guard expression.\n%a"
        vars_explanation Misc.print_see_manual ref_manual
  | No_cmx_file name ->
      Printf.sprintf
        "no cmx file was found in path for module %s, and its interface was not compiled with -opaque"
        name
  | Flambda_assignment_to_non_mutable_value ->
      "A potential assignment to a non-mutable value was detected \nin this source file.  Such assignments may generate incorrect code \nwhen using Flambda."
  | Unused_module s -> "unused module " ^ (s ^ ".")
  | Unboxable_type_in_prim_decl t ->
      Printf.sprintf
        "This primitive declaration uses type %s, whose representation\nmay be either boxed or unboxed. Without an annotation to indicate\nwhich representation is intended, the boxed representation has been\nselected by default. This default choice may change in future\nversions of the compiler, breaking the primitive implementation.\nYou should explicitly annotate the declaration of %s\nwith [@@boxed] or [@@unboxed], so that its external interface\nremains stable in the future."
        t t
  | Constraint_on_gadt ->
      "Type constraints do not apply to GADT cases of variant types."
  | Erroneous_printed_signature s ->
      "The printed interface differs from the inferred interface.\nThe inferred interface contained items which could not be printed\nproperly due to name collisions between identifiers."
        ^
        (s ^
           "\nBeware that this warning is purely informational and will not catch\nall instances of erroneous printed interface.")
  | Unsafe_array_syntax_without_parsing ->
      "option -unsafe used with a preprocessor returning a syntax tree"
  | Redefining_unit name ->
      Printf.sprintf
        "This type declaration is defining a new '()' constructor\nwhich shadows the existing one.\nHint: Did you mean 'type %s = unit'?"
        name
  | Unused_functor_parameter s -> "unused functor parameter " ^ (s ^ ".")
  | Match_on_mutable_state_prevent_uncurry ->
      "This pattern depends on mutable state.\nIt prevents the remaining arguments from being uncurried, which will cause additional closure allocations."
  | Unused_field (s, Unused) -> "unused record field " ^ (s ^ ".")
  | Unused_field (s, Not_read) ->
      "record field " ^
        (s ^
           " is never read.\n(However, this field is used to build or mutate values.)")
  | Unused_field (s, Not_mutated) ->
      "mutable record field " ^ (s ^ " is never mutated.")
  | Missing_mli -> "Cannot find interface file."
  | Unused_tmc_attribute ->
      "This function is marked @tail_mod_cons\nbut is never applied in TMC position."
  | Tmc_breaks_tailcall ->
      "This call\nis in tail-modulo-cons position in a TMC function,\nbut the function called is not itself specialized for TMC,\nso the call will not be transformed into a tail call.\nPlease either mark the called function with the [@tail_mod_cons]\nattribute, or mark this call with the [@tailcall false] attribute\nto make its non-tailness explicit."
  | Generative_application_expects_unit ->
      "A generative functor\nshould be applied to '()'; using '(struct end)' is deprecated."
let nerrors = ref 0
type reporting_information =
  {
  id: string ;
  message: string ;
  is_error: bool ;
  sub_locs: (loc * string) list }
let id_name w =
  let n = number w in
  match List.find_opt (fun { number;_} -> number = n) descriptions with
  | Some { names = s::_;_} -> Printf.sprintf "%d [%s]" n s
  | _ -> string_of_int n
let report w =
  match is_active w with
  | false -> `Inactive
  | true ->
      (if is_error w then incr nerrors;
       `Active
         {
           id = (id_name w);
           message = (message w);
           is_error = (is_error w);
           sub_locs = []
         })
let report_alert (alert : alert) =
  match alert_is_active alert with
  | false -> `Inactive
  | true ->
      let is_error = alert_is_error alert in
      (if is_error then incr nerrors;
       (let message = Misc.normalise_eol alert.message in
        let sub_locs =
          if (not (alert.def).loc_ghost) && (not (alert.use).loc_ghost)
          then
            [((alert.def), "Definition");
            ((alert.use), "Expected signature")]
          else [] in
        `Active { id = (alert.kind); message; is_error; sub_locs }))
exception Errors 
let reset_fatal () = nerrors := 0
let check_fatal () = if (!nerrors) > 0 then (nerrors := 0; raise Errors)
let help_warnings () = exit 0
[
  structure_item (lib/warnings.ml[21,1201+0]..lib/warnings.ml[25,1291+1])
    Tstr_type Rec
    [
      type_declaration loc/288 (lib/warnings.ml[21,1201+0]..lib/warnings.ml[25,1291+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/warnings.ml[22,1214+2]..lib/warnings.ml[22,1214+29])
                Immutable
                loc_start/313                core_type (lib/warnings.ml[22,1214+13]..lib/warnings.ml[22,1214+28])
                  Ttyp_poly
                  core_type (lib/warnings.ml[22,1214+13]..lib/warnings.ml[22,1214+28])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
              (lib/warnings.ml[23,1244+2]..lib/warnings.ml[23,1244+27])
                Immutable
                loc_end/314                core_type (lib/warnings.ml[23,1244+11]..lib/warnings.ml[23,1244+26])
                  Ttyp_poly
                  core_type (lib/warnings.ml[23,1244+11]..lib/warnings.ml[23,1244+26])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
              (lib/warnings.ml[24,1272+2]..lib/warnings.ml[24,1272+18])
                Immutable
                loc_ghost/315                core_type (lib/warnings.ml[24,1272+13]..lib/warnings.ml[24,1272+17])
                  Ttyp_poly
                  core_type (lib/warnings.ml[24,1272+13]..lib/warnings.ml[24,1272+17])
                    Ttyp_constr "bool/5!"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[27,1294+0]..lib/warnings.ml[30,1345+15])
    Tstr_type Rec
    [
      type_declaration field_usage_warning/340 (lib/warnings.ml[27,1294+0]..lib/warnings.ml[30,1345+15])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/warnings.ml[28,1321+2]..lib/warnings.ml[28,1321+10])
                Unused/341
                []
                None
              (lib/warnings.ml[29,1332+2]..lib/warnings.ml[29,1332+12])
                Not_read/342
                []
                None
              (lib/warnings.ml[30,1345+2]..lib/warnings.ml[30,1345+15])
                Not_mutated/343
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[32,1362+0]..lib/warnings.ml[35,1426+25])
    Tstr_type Rec
    [
      type_declaration constructor_usage_warning/344 (lib/warnings.ml[32,1362+0]..lib/warnings.ml[35,1426+25])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/warnings.ml[33,1395+2]..lib/warnings.ml[33,1395+10])
                Unused/345
                []
                None
              (lib/warnings.ml[34,1406+2]..lib/warnings.ml[34,1406+19])
                Not_constructed/346
                []
                None
              (lib/warnings.ml[35,1426+2]..lib/warnings.ml[35,1426+25])
                Only_exported_private/347
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[37,1453+0]..lib/warnings.ml[111,5456+39])
    Tstr_type Rec
    [
      type_declaration t/348 (lib/warnings.ml[37,1453+0]..lib/warnings.ml[111,5456+39])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/warnings.ml[38,1462+2]..lib/warnings.ml[38,1462+17])
                Comment_start/349
                []
                None
              (lib/warnings.ml[39,1515+2]..lib/warnings.ml[39,1515+19])
                Comment_not_end/350
                []
                None
              (lib/warnings.ml[41,1621+2]..lib/warnings.ml[41,1621+27])
                Fragile_match/351
                [
                  core_type (lib/warnings.ml[41,1621+21]..lib/warnings.ml[41,1621+27])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[42,1674+2]..lib/warnings.ml[42,1674+31])
                Ignored_partial_application/352
                []
                None
              (lib/warnings.ml[43,1727+2]..lib/warnings.ml[43,1727+33])
                Labels_omitted/353
                [
                  core_type (lib/warnings.ml[43,1727+22]..lib/warnings.ml[43,1727+33])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/warnings.ml[43,1727+22]..lib/warnings.ml[43,1727+28])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
                None
              (lib/warnings.ml[44,1780+2]..lib/warnings.ml[44,1780+34])
                Method_override/354
                [
                  core_type (lib/warnings.ml[44,1780+23]..lib/warnings.ml[44,1780+34])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/warnings.ml[44,1780+23]..lib/warnings.ml[44,1780+29])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
                None
              (lib/warnings.ml[45,1833+2]..lib/warnings.ml[45,1833+27])
                Partial_match/355
                [
                  core_type (lib/warnings.ml[45,1833+21]..lib/warnings.ml[45,1833+27])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[46,1886+2]..lib/warnings.ml[46,1886+42])
                Missing_record_field_pattern/356
                [
                  core_type (lib/warnings.ml[46,1886+36]..lib/warnings.ml[46,1886+42])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[47,1939+2]..lib/warnings.ml[47,1939+22])
                Non_unit_statement/357
                []
                None
              (lib/warnings.ml[48,1992+2]..lib/warnings.ml[48,1992+18])
                Redundant_case/358
                []
                None
              (lib/warnings.ml[49,2045+2]..lib/warnings.ml[49,2045+20])
                Redundant_subpat/359
                []
                None
              (lib/warnings.ml[50,2098+2]..lib/warnings.ml[50,2098+45])
                Instance_variable_override/360
                [
                  core_type (lib/warnings.ml[50,2098+34]..lib/warnings.ml[50,2098+45])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/warnings.ml[50,2098+34]..lib/warnings.ml[50,2098+40])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
                None
              (lib/warnings.ml[51,2153+2]..lib/warnings.ml[51,2153+21])
                Illegal_backslash/361
                []
                None
              (lib/warnings.ml[52,2206+2]..lib/warnings.ml[52,2206+42])
                Implicit_public_methods/362
                [
                  core_type (lib/warnings.ml[52,2206+31]..lib/warnings.ml[52,2206+42])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/warnings.ml[52,2206+31]..lib/warnings.ml[52,2206+37])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
                None
              (lib/warnings.ml[53,2259+2]..lib/warnings.ml[53,2259+32])
                Unerasable_optional_argument/363
                []
                None
              (lib/warnings.ml[54,2312+2]..lib/warnings.ml[54,2312+39])
                Undeclared_virtual_method/364
                [
                  core_type (lib/warnings.ml[54,2312+33]..lib/warnings.ml[54,2312+39])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[55,2365+2]..lib/warnings.ml[55,2365+27])
                Not_principal/365
                [
                  core_type (lib/warnings.ml[55,2365+21]..lib/warnings.ml[55,2365+27])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[56,2418+2]..lib/warnings.ml[56,2418+34])
                Non_principal_labels/366
                [
                  core_type (lib/warnings.ml[56,2418+28]..lib/warnings.ml[56,2418+34])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[57,2471+2]..lib/warnings.ml[57,2471+26])
                Ignored_extra_argument/367
                []
                None
              (lib/warnings.ml[58,2524+2]..lib/warnings.ml[58,2524+26])
                Nonreturning_statement/368
                []
                None
              (lib/warnings.ml[59,2577+2]..lib/warnings.ml[59,2577+26])
                Preprocessor/369
                [
                  core_type (lib/warnings.ml[59,2577+20]..lib/warnings.ml[59,2577+26])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[60,2630+2]..lib/warnings.ml[60,2630+23])
                Useless_record_with/370
                []
                None
              (lib/warnings.ml[61,2683+2]..lib/warnings.ml[61,2683+29])
                Bad_module_name/371
                [
                  core_type (lib/warnings.ml[61,2683+23]..lib/warnings.ml[61,2683+29])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[62,2736+2]..lib/warnings.ml[62,2736+23])
                All_clauses_guarded/372
                []
                None
              (lib/warnings.ml[63,2803+2]..lib/warnings.ml[63,2803+24])
                Unused_var/373
                [
                  core_type (lib/warnings.ml[63,2803+18]..lib/warnings.ml[63,2803+24])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[64,2856+2]..lib/warnings.ml[64,2856+31])
                Unused_var_strict/374
                [
                  core_type (lib/warnings.ml[64,2856+25]..lib/warnings.ml[64,2856+31])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[65,2909+2]..lib/warnings.ml[65,2909+35])
                Wildcard_arg_to_constant_constr/375
                []
                None
              (lib/warnings.ml[66,2962+2]..lib/warnings.ml[66,2962+17])
                Eol_in_string/376
                []
                None
              (lib/warnings.ml[67,3015+2]..lib/warnings.ml[67,3015+62])
                Duplicate_definitions/377
                [
                  core_type (lib/warnings.ml[67,3015+29]..lib/warnings.ml[67,3015+35])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/warnings.ml[67,3015+38]..lib/warnings.ml[67,3015+44])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/warnings.ml[67,3015+47]..lib/warnings.ml[67,3015+53])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/warnings.ml[67,3015+56]..lib/warnings.ml[67,3015+62])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[70,3187+2]..lib/warnings.ml[70,3187+38])
                Unused_value_declaration/378
                [
                  core_type (lib/warnings.ml[70,3187+32]..lib/warnings.ml[70,3187+38])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[71,3240+2]..lib/warnings.ml[71,3240+25])
                Unused_open/379
                [
                  core_type (lib/warnings.ml[71,3240+19]..lib/warnings.ml[71,3240+25])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[72,3293+2]..lib/warnings.ml[72,3293+37])
                Unused_type_declaration/380
                [
                  core_type (lib/warnings.ml[72,3293+31]..lib/warnings.ml[72,3293+37])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[73,3346+2]..lib/warnings.ml[73,3346+30])
                Unused_for_index/381
                [
                  core_type (lib/warnings.ml[73,3346+24]..lib/warnings.ml[73,3346+30])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[74,3399+2]..lib/warnings.ml[74,3399+29])
                Unused_ancestor/382
                [
                  core_type (lib/warnings.ml[74,3399+23]..lib/warnings.ml[74,3399+29])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[75,3452+2]..lib/warnings.ml[75,3452+60])
                Unused_constructor/383
                [
                  core_type (lib/warnings.ml[75,3452+26]..lib/warnings.ml[75,3452+32])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/warnings.ml[75,3452+35]..lib/warnings.ml[75,3452+60])
                    Ttyp_constr "constructor_usage_warning/344"
                    []
                ]
                None
              (lib/warnings.ml[76,3522+2]..lib/warnings.ml[76,3522+65])
                Unused_extension/384
                [
                  core_type (lib/warnings.ml[76,3522+24]..lib/warnings.ml[76,3522+30])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/warnings.ml[76,3522+33]..lib/warnings.ml[76,3522+37])
                    Ttyp_constr "bool/5!"
                    []
                  core_type (lib/warnings.ml[76,3522+40]..lib/warnings.ml[76,3522+65])
                    Ttyp_constr "constructor_usage_warning/344"
                    []
                ]
                None
              (lib/warnings.ml[77,3597+2]..lib/warnings.ml[77,3597+19])
                Unused_rec_flag/385
                []
                None
              (lib/warnings.ml[78,3650+2]..lib/warnings.ml[78,3650+52])
                Name_out_of_scope/386
                [
                  core_type (lib/warnings.ml[78,3650+25]..lib/warnings.ml[78,3650+31])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/warnings.ml[78,3650+34]..lib/warnings.ml[78,3650+45])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/warnings.ml[78,3650+34]..lib/warnings.ml[78,3650+40])
                        Ttyp_constr "string/15!"
                        []
                    ]
                  core_type (lib/warnings.ml[78,3650+48]..lib/warnings.ml[78,3650+52])
                    Ttyp_constr "bool/5!"
                    []
                ]
                None
              (lib/warnings.ml[79,3712+2]..lib/warnings.ml[79,3712+64])
                Ambiguous_name/387
                [
                  core_type (lib/warnings.ml[79,3712+22]..lib/warnings.ml[79,3712+33])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/warnings.ml[79,3712+22]..lib/warnings.ml[79,3712+28])
                        Ttyp_constr "string/15!"
                        []
                    ]
                  core_type (lib/warnings.ml[79,3712+36]..lib/warnings.ml[79,3712+47])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/warnings.ml[79,3712+36]..lib/warnings.ml[79,3712+42])
                        Ttyp_constr "string/15!"
                        []
                    ]
                  core_type (lib/warnings.ml[79,3712+51]..lib/warnings.ml[79,3712+55])
                    Ttyp_constr "bool/5!"
                    []
                  core_type (lib/warnings.ml[79,3712+58]..lib/warnings.ml[79,3712+64])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[80,3786+2]..lib/warnings.ml[80,3786+32])
                Disambiguated_name/388
                [
                  core_type (lib/warnings.ml[80,3786+26]..lib/warnings.ml[80,3786+32])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[81,3839+2]..lib/warnings.ml[81,3839+31])
                Nonoptional_label/389
                [
                  core_type (lib/warnings.ml[81,3839+25]..lib/warnings.ml[81,3839+31])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[82,3892+2]..lib/warnings.ml[82,3892+45])
                Open_shadow_identifier/390
                [
                  core_type (lib/warnings.ml[82,3892+30]..lib/warnings.ml[82,3892+36])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/warnings.ml[82,3892+39]..lib/warnings.ml[82,3892+45])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[83,3947+2]..lib/warnings.ml[83,3947+52])
                Open_shadow_label_constructor/391
                [
                  core_type (lib/warnings.ml[83,3947+37]..lib/warnings.ml[83,3947+43])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/warnings.ml[83,3947+46]..lib/warnings.ml[83,3947+52])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[84,4009+2]..lib/warnings.ml[84,4009+39])
                Bad_env_variable/392
                [
                  core_type (lib/warnings.ml[84,4009+24]..lib/warnings.ml[84,4009+30])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/warnings.ml[84,4009+33]..lib/warnings.ml[84,4009+39])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[85,4062+2]..lib/warnings.ml[85,4062+40])
                Attribute_payload/393
                [
                  core_type (lib/warnings.ml[85,4062+25]..lib/warnings.ml[85,4062+31])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/warnings.ml[85,4062+34]..lib/warnings.ml[85,4062+40])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[86,4115+2]..lib/warnings.ml[86,4115+48])
                Eliminated_optional_arguments/394
                [
                  core_type (lib/warnings.ml[86,4115+37]..lib/warnings.ml[86,4115+48])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/warnings.ml[86,4115+37]..lib/warnings.ml[86,4115+43])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
                None
              (lib/warnings.ml[87,4173+2]..lib/warnings.ml[87,4173+41])
                No_cmi_file/395
                [
                  core_type (lib/warnings.ml[87,4173+19]..lib/warnings.ml[87,4173+25])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/warnings.ml[87,4173+28]..lib/warnings.ml[87,4173+41])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/warnings.ml[87,4173+28]..lib/warnings.ml[87,4173+34])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
                None
              (lib/warnings.ml[88,4226+2]..lib/warnings.ml[88,4226+32])
                Unexpected_docstring/396
                [
                  core_type (lib/warnings.ml[88,4226+28]..lib/warnings.ml[88,4226+32])
                    Ttyp_constr "bool/5!"
                    []
                ]
                None
              (lib/warnings.ml[89,4279+2]..lib/warnings.ml[89,4279+38])
                Wrong_tailcall_expectation/397
                [
                  core_type (lib/warnings.ml[89,4279+34]..lib/warnings.ml[89,4279+38])
                    Ttyp_constr "bool/5!"
                    []
                ]
                None
              (lib/warnings.ml[90,4332+2]..lib/warnings.ml[90,4332+27])
                Fragile_literal_pattern/398
                []
                None
              (lib/warnings.ml[91,4385+2]..lib/warnings.ml[91,4385+33])
                Misplaced_attribute/399
                [
                  core_type (lib/warnings.ml[91,4385+27]..lib/warnings.ml[91,4385+33])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[92,4438+2]..lib/warnings.ml[92,4438+34])
                Duplicated_attribute/400
                [
                  core_type (lib/warnings.ml[92,4438+28]..lib/warnings.ml[92,4438+34])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[93,4491+2]..lib/warnings.ml[93,4491+33])
                Inlining_impossible/401
                [
                  core_type (lib/warnings.ml[93,4491+27]..lib/warnings.ml[93,4491+33])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[94,4544+2]..lib/warnings.ml[94,4544+20])
                Unreachable_case/402
                []
                None
              (lib/warnings.ml[95,4597+2]..lib/warnings.ml[95,4597+49])
                Ambiguous_var_in_pattern_guard/403
                [
                  core_type (lib/warnings.ml[95,4597+38]..lib/warnings.ml[95,4597+49])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/warnings.ml[95,4597+38]..lib/warnings.ml[95,4597+44])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
                None
              (lib/warnings.ml[96,4656+2]..lib/warnings.ml[96,4656+25])
                No_cmx_file/404
                [
                  core_type (lib/warnings.ml[96,4656+19]..lib/warnings.ml[96,4656+25])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[97,4709+2]..lib/warnings.ml[97,4709+43])
                Flambda_assignment_to_non_mutable_value/405
                []
                None
              (lib/warnings.ml[98,4762+2]..lib/warnings.ml[98,4762+27])
                Unused_module/406
                [
                  core_type (lib/warnings.ml[98,4762+21]..lib/warnings.ml[98,4762+27])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[99,4815+2]..lib/warnings.ml[99,4815+41])
                Unboxable_type_in_prim_decl/407
                [
                  core_type (lib/warnings.ml[99,4815+35]..lib/warnings.ml[99,4815+41])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[100,4868+2]..lib/warnings.ml[100,4868+22])
                Constraint_on_gadt/408
                []
                None
              (lib/warnings.ml[101,4921+2]..lib/warnings.ml[101,4921+41])
                Erroneous_printed_signature/409
                [
                  core_type (lib/warnings.ml[101,4921+35]..lib/warnings.ml[101,4921+41])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[102,4974+2]..lib/warnings.ml[102,4974+39])
                Unsafe_array_syntax_without_parsing/410
                []
                None
              (lib/warnings.ml[103,5027+2]..lib/warnings.ml[103,5027+29])
                Redefining_unit/411
                [
                  core_type (lib/warnings.ml[103,5027+23]..lib/warnings.ml[103,5027+29])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[104,5080+2]..lib/warnings.ml[104,5080+30])
                Unused_open_bang/412
                [
                  core_type (lib/warnings.ml[104,5080+24]..lib/warnings.ml[104,5080+30])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[105,5133+2]..lib/warnings.ml[105,5133+38])
                Unused_functor_parameter/413
                [
                  core_type (lib/warnings.ml[105,5133+32]..lib/warnings.ml[105,5133+38])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/warnings.ml[106,5186+2]..lib/warnings.ml[106,5186+42])
                Match_on_mutable_state_prevent_uncurry/414
                []
                None
              (lib/warnings.ml[107,5239+2]..lib/warnings.ml[107,5239+48])
                Unused_field/415
                [
                  core_type (lib/warnings.ml[107,5239+20]..lib/warnings.ml[107,5239+26])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/warnings.ml[107,5239+29]..lib/warnings.ml[107,5239+48])
                    Ttyp_constr "field_usage_warning/340"
                    []
                ]
                None
              (lib/warnings.ml[108,5297+2]..lib/warnings.ml[108,5297+15])
                Missing_mli/416
                []
                None
              (lib/warnings.ml[109,5350+2]..lib/warnings.ml[109,5350+24])
                Unused_tmc_attribute/417
                []
                None
              (lib/warnings.ml[110,5403+2]..lib/warnings.ml[110,5403+23])
                Tmc_breaks_tailcall/418
                []
                None
              (lib/warnings.ml[111,5456+2]..lib/warnings.ml[111,5456+39])
                Generative_application_expects_unit/419
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[119,5724+0]..lib/warnings.ml[119,5724+60])
    Tstr_type Rec
    [
      type_declaration alert/420 (lib/warnings.ml[119,5724+0]..lib/warnings.ml[119,5724+60])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/warnings.ml[119,5724+14]..lib/warnings.ml[119,5724+26])
                Immutable
                kind/421                core_type (lib/warnings.ml[119,5724+19]..lib/warnings.ml[119,5724+25])
                  Ttyp_poly
                  core_type (lib/warnings.ml[119,5724+19]..lib/warnings.ml[119,5724+25])
                    Ttyp_constr "string/15!"
                    []
              (lib/warnings.ml[119,5724+27]..lib/warnings.ml[119,5724+42])
                Immutable
                message/422                core_type (lib/warnings.ml[119,5724+35]..lib/warnings.ml[119,5724+41])
                  Ttyp_poly
                  core_type (lib/warnings.ml[119,5724+35]..lib/warnings.ml[119,5724+41])
                    Ttyp_constr "string/15!"
                    []
              (lib/warnings.ml[119,5724+43]..lib/warnings.ml[119,5724+51])
                Immutable
                def/423                core_type (lib/warnings.ml[119,5724+47]..lib/warnings.ml[119,5724+50])
                  Ttyp_poly
                  core_type (lib/warnings.ml[119,5724+47]..lib/warnings.ml[119,5724+50])
                    Ttyp_constr "loc/288"
                    []
              (lib/warnings.ml[119,5724+52]..lib/warnings.ml[119,5724+59])
                Immutable
                use/424                core_type (lib/warnings.ml[119,5724+56]..lib/warnings.ml[119,5724+59])
                  Ttyp_poly
                  core_type (lib/warnings.ml[119,5724+56]..lib/warnings.ml[119,5724+59])
                    Ttyp_constr "loc/288"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[121,5786+0]..lib/warnings.ml[192,8046+45])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[121,5786+4]..lib/warnings.ml[121,5786+10])
          Tpat_var "number/425"
        expression (lib/warnings.ml[121,5786+13]..lib/warnings.ml[192,8046+45])
          Texp_function
          []
          Tfunction_cases (lib/warnings.ml[121,5786+13]..lib/warnings.ml[192,8046+45])
            [
              <case>
                pattern (lib/warnings.ml[122,5808+4]..lib/warnings.ml[122,5808+17])
                  Tpat_construct "Comment_start"
                  []
                  None
                expression (lib/warnings.ml[122,5808+21]..lib/warnings.ml[122,5808+22])
                  Texp_constant Const_int 1
              <case>
                pattern (lib/warnings.ml[123,5831+4]..lib/warnings.ml[123,5831+19])
                  Tpat_construct "Comment_not_end"
                  []
                  None
                expression (lib/warnings.ml[123,5831+23]..lib/warnings.ml[123,5831+24])
                  Texp_constant Const_int 2
              <case>
                pattern (lib/warnings.ml[124,5856+4]..lib/warnings.ml[124,5856+19])
                  Tpat_construct "Fragile_match"
                  [
                    pattern (lib/warnings.ml[124,5856+18]..lib/warnings.ml[124,5856+19])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[124,5856+23]..lib/warnings.ml[124,5856+24])
                  Texp_constant Const_int 4
              <case>
                pattern (lib/warnings.ml[125,5881+4]..lib/warnings.ml[125,5881+31])
                  Tpat_construct "Ignored_partial_application"
                  []
                  None
                expression (lib/warnings.ml[125,5881+35]..lib/warnings.ml[125,5881+36])
                  Texp_constant Const_int 5
              <case>
                pattern (lib/warnings.ml[126,5918+4]..lib/warnings.ml[126,5918+20])
                  Tpat_construct "Labels_omitted"
                  [
                    pattern (lib/warnings.ml[126,5918+19]..lib/warnings.ml[126,5918+20])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[126,5918+24]..lib/warnings.ml[126,5918+25])
                  Texp_constant Const_int 6
              <case>
                pattern (lib/warnings.ml[127,5944+4]..lib/warnings.ml[127,5944+21])
                  Tpat_construct "Method_override"
                  [
                    pattern (lib/warnings.ml[127,5944+20]..lib/warnings.ml[127,5944+21])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[127,5944+25]..lib/warnings.ml[127,5944+26])
                  Texp_constant Const_int 7
              <case>
                pattern (lib/warnings.ml[128,5971+4]..lib/warnings.ml[128,5971+19])
                  Tpat_construct "Partial_match"
                  [
                    pattern (lib/warnings.ml[128,5971+18]..lib/warnings.ml[128,5971+19])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[128,5971+23]..lib/warnings.ml[128,5971+24])
                  Texp_constant Const_int 8
              <case>
                pattern (lib/warnings.ml[129,5996+4]..lib/warnings.ml[129,5996+34])
                  Tpat_construct "Missing_record_field_pattern"
                  [
                    pattern (lib/warnings.ml[129,5996+33]..lib/warnings.ml[129,5996+34])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[129,5996+38]..lib/warnings.ml[129,5996+39])
                  Texp_constant Const_int 9
              <case>
                pattern (lib/warnings.ml[130,6036+4]..lib/warnings.ml[130,6036+22])
                  Tpat_construct "Non_unit_statement"
                  []
                  None
                expression (lib/warnings.ml[130,6036+26]..lib/warnings.ml[130,6036+28])
                  Texp_constant Const_int 10
              <case>
                pattern (lib/warnings.ml[131,6065+4]..lib/warnings.ml[131,6065+18])
                  Tpat_construct "Redundant_case"
                  []
                  None
                expression (lib/warnings.ml[131,6065+22]..lib/warnings.ml[131,6065+24])
                  Texp_constant Const_int 11
              <case>
                pattern (lib/warnings.ml[132,6090+4]..lib/warnings.ml[132,6090+20])
                  Tpat_construct "Redundant_subpat"
                  []
                  None
                expression (lib/warnings.ml[132,6090+24]..lib/warnings.ml[132,6090+26])
                  Texp_constant Const_int 12
              <case>
                pattern (lib/warnings.ml[133,6117+4]..lib/warnings.ml[133,6117+32])
                  Tpat_construct "Instance_variable_override"
                  [
                    pattern (lib/warnings.ml[133,6117+31]..lib/warnings.ml[133,6117+32])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[133,6117+36]..lib/warnings.ml[133,6117+38])
                  Texp_constant Const_int 13
              <case>
                pattern (lib/warnings.ml[134,6156+4]..lib/warnings.ml[134,6156+21])
                  Tpat_construct "Illegal_backslash"
                  []
                  None
                expression (lib/warnings.ml[134,6156+25]..lib/warnings.ml[134,6156+27])
                  Texp_constant Const_int 14
              <case>
                pattern (lib/warnings.ml[135,6184+4]..lib/warnings.ml[135,6184+29])
                  Tpat_construct "Implicit_public_methods"
                  [
                    pattern (lib/warnings.ml[135,6184+28]..lib/warnings.ml[135,6184+29])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[135,6184+33]..lib/warnings.ml[135,6184+35])
                  Texp_constant Const_int 15
              <case>
                pattern (lib/warnings.ml[136,6220+4]..lib/warnings.ml[136,6220+32])
                  Tpat_construct "Unerasable_optional_argument"
                  []
                  None
                expression (lib/warnings.ml[136,6220+36]..lib/warnings.ml[136,6220+38])
                  Texp_constant Const_int 16
              <case>
                pattern (lib/warnings.ml[137,6259+4]..lib/warnings.ml[137,6259+31])
                  Tpat_construct "Undeclared_virtual_method"
                  [
                    pattern (lib/warnings.ml[137,6259+30]..lib/warnings.ml[137,6259+31])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[137,6259+35]..lib/warnings.ml[137,6259+37])
                  Texp_constant Const_int 17
              <case>
                pattern (lib/warnings.ml[138,6297+4]..lib/warnings.ml[138,6297+19])
                  Tpat_construct "Not_principal"
                  [
                    pattern (lib/warnings.ml[138,6297+18]..lib/warnings.ml[138,6297+19])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[138,6297+23]..lib/warnings.ml[138,6297+25])
                  Texp_constant Const_int 18
              <case>
                pattern (lib/warnings.ml[139,6323+4]..lib/warnings.ml[139,6323+26])
                  Tpat_construct "Non_principal_labels"
                  [
                    pattern (lib/warnings.ml[139,6323+25]..lib/warnings.ml[139,6323+26])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[139,6323+30]..lib/warnings.ml[139,6323+32])
                  Texp_constant Const_int 19
              <case>
                pattern (lib/warnings.ml[140,6356+4]..lib/warnings.ml[140,6356+26])
                  Tpat_construct "Ignored_extra_argument"
                  []
                  None
                expression (lib/warnings.ml[140,6356+30]..lib/warnings.ml[140,6356+32])
                  Texp_constant Const_int 20
              <case>
                pattern (lib/warnings.ml[141,6389+4]..lib/warnings.ml[141,6389+26])
                  Tpat_construct "Nonreturning_statement"
                  []
                  None
                expression (lib/warnings.ml[141,6389+30]..lib/warnings.ml[141,6389+32])
                  Texp_constant Const_int 21
              <case>
                pattern (lib/warnings.ml[142,6422+4]..lib/warnings.ml[142,6422+18])
                  Tpat_construct "Preprocessor"
                  [
                    pattern (lib/warnings.ml[142,6422+17]..lib/warnings.ml[142,6422+18])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[142,6422+22]..lib/warnings.ml[142,6422+24])
                  Texp_constant Const_int 22
              <case>
                pattern (lib/warnings.ml[143,6447+4]..lib/warnings.ml[143,6447+23])
                  Tpat_construct "Useless_record_with"
                  []
                  None
                expression (lib/warnings.ml[143,6447+27]..lib/warnings.ml[143,6447+29])
                  Texp_constant Const_int 23
              <case>
                pattern (lib/warnings.ml[144,6477+4]..lib/warnings.ml[144,6477+21])
                  Tpat_construct "Bad_module_name"
                  [
                    pattern (lib/warnings.ml[144,6477+20]..lib/warnings.ml[144,6477+21])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[144,6477+25]..lib/warnings.ml[144,6477+27])
                  Texp_constant Const_int 24
              <case>
                pattern (lib/warnings.ml[145,6505+4]..lib/warnings.ml[145,6505+23])
                  Tpat_construct "All_clauses_guarded"
                  []
                  None
                expression (lib/warnings.ml[145,6505+27]..lib/warnings.ml[145,6505+28])
                  Texp_constant Const_int 8
              <case>
                pattern (lib/warnings.ml[146,6554+4]..lib/warnings.ml[146,6554+16])
                  Tpat_construct "Unused_var"
                  [
                    pattern (lib/warnings.ml[146,6554+15]..lib/warnings.ml[146,6554+16])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[146,6554+20]..lib/warnings.ml[146,6554+22])
                  Texp_constant Const_int 26
              <case>
                pattern (lib/warnings.ml[147,6577+4]..lib/warnings.ml[147,6577+23])
                  Tpat_construct "Unused_var_strict"
                  [
                    pattern (lib/warnings.ml[147,6577+22]..lib/warnings.ml[147,6577+23])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[147,6577+27]..lib/warnings.ml[147,6577+29])
                  Texp_constant Const_int 27
              <case>
                pattern (lib/warnings.ml[148,6607+4]..lib/warnings.ml[148,6607+35])
                  Tpat_construct "Wildcard_arg_to_constant_constr"
                  []
                  None
                expression (lib/warnings.ml[148,6607+39]..lib/warnings.ml[148,6607+41])
                  Texp_constant Const_int 28
              <case>
                pattern (lib/warnings.ml[149,6649+4]..lib/warnings.ml[149,6649+17])
                  Tpat_construct "Eol_in_string"
                  []
                  None
                expression (lib/warnings.ml[149,6649+21]..lib/warnings.ml[149,6649+23])
                  Texp_constant Const_int 29
              <case>
                pattern (lib/warnings.ml[150,6673+4]..lib/warnings.ml[150,6673+27])
                  Tpat_construct "Duplicate_definitions"
                  [
                    pattern (lib/warnings.ml[150,6673+26]..lib/warnings.ml[150,6673+27])
                      Tpat_any
                    pattern (lib/warnings.ml[150,6673+26]..lib/warnings.ml[150,6673+27])
                      Tpat_any
                    pattern (lib/warnings.ml[150,6673+26]..lib/warnings.ml[150,6673+27])
                      Tpat_any
                    pattern (lib/warnings.ml[150,6673+26]..lib/warnings.ml[150,6673+27])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[150,6673+31]..lib/warnings.ml[150,6673+33])
                  Texp_constant Const_int 30
              <case>
                pattern (lib/warnings.ml[151,6707+4]..lib/warnings.ml[151,6707+30])
                  Tpat_construct "Unused_value_declaration"
                  [
                    pattern (lib/warnings.ml[151,6707+29]..lib/warnings.ml[151,6707+30])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[151,6707+34]..lib/warnings.ml[151,6707+36])
                  Texp_constant Const_int 32
              <case>
                pattern (lib/warnings.ml[152,6744+4]..lib/warnings.ml[152,6744+17])
                  Tpat_construct "Unused_open"
                  [
                    pattern (lib/warnings.ml[152,6744+16]..lib/warnings.ml[152,6744+17])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[152,6744+21]..lib/warnings.ml[152,6744+23])
                  Texp_constant Const_int 33
              <case>
                pattern (lib/warnings.ml[153,6768+4]..lib/warnings.ml[153,6768+29])
                  Tpat_construct "Unused_type_declaration"
                  [
                    pattern (lib/warnings.ml[153,6768+28]..lib/warnings.ml[153,6768+29])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[153,6768+33]..lib/warnings.ml[153,6768+35])
                  Texp_constant Const_int 34
              <case>
                pattern (lib/warnings.ml[154,6804+4]..lib/warnings.ml[154,6804+22])
                  Tpat_construct "Unused_for_index"
                  [
                    pattern (lib/warnings.ml[154,6804+21]..lib/warnings.ml[154,6804+22])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[154,6804+26]..lib/warnings.ml[154,6804+28])
                  Texp_constant Const_int 35
              <case>
                pattern (lib/warnings.ml[155,6833+4]..lib/warnings.ml[155,6833+21])
                  Tpat_construct "Unused_ancestor"
                  [
                    pattern (lib/warnings.ml[155,6833+20]..lib/warnings.ml[155,6833+21])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[155,6833+25]..lib/warnings.ml[155,6833+27])
                  Texp_constant Const_int 36
              <case>
                pattern (lib/warnings.ml[156,6861+4]..lib/warnings.ml[156,6861+24])
                  Tpat_construct "Unused_constructor"
                  [
                    pattern (lib/warnings.ml[156,6861+23]..lib/warnings.ml[156,6861+24])
                      Tpat_any
                    pattern (lib/warnings.ml[156,6861+23]..lib/warnings.ml[156,6861+24])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[156,6861+28]..lib/warnings.ml[156,6861+30])
                  Texp_constant Const_int 37
              <case>
                pattern (lib/warnings.ml[157,6892+4]..lib/warnings.ml[157,6892+22])
                  Tpat_construct "Unused_extension"
                  [
                    pattern (lib/warnings.ml[157,6892+21]..lib/warnings.ml[157,6892+22])
                      Tpat_any
                    pattern (lib/warnings.ml[157,6892+21]..lib/warnings.ml[157,6892+22])
                      Tpat_any
                    pattern (lib/warnings.ml[157,6892+21]..lib/warnings.ml[157,6892+22])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[157,6892+26]..lib/warnings.ml[157,6892+28])
                  Texp_constant Const_int 38
              <case>
                pattern (lib/warnings.ml[158,6921+4]..lib/warnings.ml[158,6921+19])
                  Tpat_construct "Unused_rec_flag"
                  []
                  None
                expression (lib/warnings.ml[158,6921+23]..lib/warnings.ml[158,6921+25])
                  Texp_constant Const_int 39
              <case>
                pattern (lib/warnings.ml[159,6947+4]..lib/warnings.ml[159,6947+23])
                  Tpat_construct "Name_out_of_scope"
                  [
                    pattern (lib/warnings.ml[159,6947+22]..lib/warnings.ml[159,6947+23])
                      Tpat_any
                    pattern (lib/warnings.ml[159,6947+22]..lib/warnings.ml[159,6947+23])
                      Tpat_any
                    pattern (lib/warnings.ml[159,6947+22]..lib/warnings.ml[159,6947+23])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[159,6947+27]..lib/warnings.ml[159,6947+29])
                  Texp_constant Const_int 40
              <case>
                pattern (lib/warnings.ml[160,6977+4]..lib/warnings.ml[160,6977+20])
                  Tpat_construct "Ambiguous_name"
                  [
                    pattern (lib/warnings.ml[160,6977+19]..lib/warnings.ml[160,6977+20])
                      Tpat_any
                    pattern (lib/warnings.ml[160,6977+19]..lib/warnings.ml[160,6977+20])
                      Tpat_any
                    pattern (lib/warnings.ml[160,6977+19]..lib/warnings.ml[160,6977+20])
                      Tpat_any
                    pattern (lib/warnings.ml[160,6977+19]..lib/warnings.ml[160,6977+20])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[160,6977+24]..lib/warnings.ml[160,6977+26])
                  Texp_constant Const_int 41
              <case>
                pattern (lib/warnings.ml[161,7004+4]..lib/warnings.ml[161,7004+24])
                  Tpat_construct "Disambiguated_name"
                  [
                    pattern (lib/warnings.ml[161,7004+23]..lib/warnings.ml[161,7004+24])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[161,7004+28]..lib/warnings.ml[161,7004+30])
                  Texp_constant Const_int 42
              <case>
                pattern (lib/warnings.ml[162,7035+4]..lib/warnings.ml[162,7035+23])
                  Tpat_construct "Nonoptional_label"
                  [
                    pattern (lib/warnings.ml[162,7035+22]..lib/warnings.ml[162,7035+23])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[162,7035+27]..lib/warnings.ml[162,7035+29])
                  Texp_constant Const_int 43
              <case>
                pattern (lib/warnings.ml[163,7065+4]..lib/warnings.ml[163,7065+28])
                  Tpat_construct "Open_shadow_identifier"
                  [
                    pattern (lib/warnings.ml[163,7065+27]..lib/warnings.ml[163,7065+28])
                      Tpat_any
                    pattern (lib/warnings.ml[163,7065+27]..lib/warnings.ml[163,7065+28])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[163,7065+32]..lib/warnings.ml[163,7065+34])
                  Texp_constant Const_int 44
              <case>
                pattern (lib/warnings.ml[164,7100+4]..lib/warnings.ml[164,7100+35])
                  Tpat_construct "Open_shadow_label_constructor"
                  [
                    pattern (lib/warnings.ml[164,7100+34]..lib/warnings.ml[164,7100+35])
                      Tpat_any
                    pattern (lib/warnings.ml[164,7100+34]..lib/warnings.ml[164,7100+35])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[164,7100+39]..lib/warnings.ml[164,7100+41])
                  Texp_constant Const_int 45
              <case>
                pattern (lib/warnings.ml[165,7142+4]..lib/warnings.ml[165,7142+22])
                  Tpat_construct "Bad_env_variable"
                  [
                    pattern (lib/warnings.ml[165,7142+21]..lib/warnings.ml[165,7142+22])
                      Tpat_any
                    pattern (lib/warnings.ml[165,7142+21]..lib/warnings.ml[165,7142+22])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[165,7142+26]..lib/warnings.ml[165,7142+28])
                  Texp_constant Const_int 46
              <case>
                pattern (lib/warnings.ml[166,7171+4]..lib/warnings.ml[166,7171+23])
                  Tpat_construct "Attribute_payload"
                  [
                    pattern (lib/warnings.ml[166,7171+22]..lib/warnings.ml[166,7171+23])
                      Tpat_any
                    pattern (lib/warnings.ml[166,7171+22]..lib/warnings.ml[166,7171+23])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[166,7171+27]..lib/warnings.ml[166,7171+29])
                  Texp_constant Const_int 47
              <case>
                pattern (lib/warnings.ml[167,7201+4]..lib/warnings.ml[167,7201+35])
                  Tpat_construct "Eliminated_optional_arguments"
                  [
                    pattern (lib/warnings.ml[167,7201+34]..lib/warnings.ml[167,7201+35])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[167,7201+39]..lib/warnings.ml[167,7201+41])
                  Texp_constant Const_int 48
              <case>
                pattern (lib/warnings.ml[168,7243+4]..lib/warnings.ml[168,7243+17])
                  Tpat_construct "No_cmi_file"
                  [
                    pattern (lib/warnings.ml[168,7243+16]..lib/warnings.ml[168,7243+17])
                      Tpat_any
                    pattern (lib/warnings.ml[168,7243+16]..lib/warnings.ml[168,7243+17])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[168,7243+21]..lib/warnings.ml[168,7243+23])
                  Texp_constant Const_int 49
              <case>
                pattern (lib/warnings.ml[169,7267+4]..lib/warnings.ml[169,7267+26])
                  Tpat_construct "Unexpected_docstring"
                  [
                    pattern (lib/warnings.ml[169,7267+25]..lib/warnings.ml[169,7267+26])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[169,7267+30]..lib/warnings.ml[169,7267+32])
                  Texp_constant Const_int 50
              <case>
                pattern (lib/warnings.ml[170,7300+4]..lib/warnings.ml[170,7300+32])
                  Tpat_construct "Wrong_tailcall_expectation"
                  [
                    pattern (lib/warnings.ml[170,7300+31]..lib/warnings.ml[170,7300+32])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[170,7300+36]..lib/warnings.ml[170,7300+38])
                  Texp_constant Const_int 51
              <case>
                pattern (lib/warnings.ml[171,7339+4]..lib/warnings.ml[171,7339+27])
                  Tpat_construct "Fragile_literal_pattern"
                  []
                  None
                expression (lib/warnings.ml[171,7339+31]..lib/warnings.ml[171,7339+33])
                  Texp_constant Const_int 52
              <case>
                pattern (lib/warnings.ml[172,7373+4]..lib/warnings.ml[172,7373+25])
                  Tpat_construct "Misplaced_attribute"
                  [
                    pattern (lib/warnings.ml[172,7373+24]..lib/warnings.ml[172,7373+25])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[172,7373+29]..lib/warnings.ml[172,7373+31])
                  Texp_constant Const_int 53
              <case>
                pattern (lib/warnings.ml[173,7405+4]..lib/warnings.ml[173,7405+26])
                  Tpat_construct "Duplicated_attribute"
                  [
                    pattern (lib/warnings.ml[173,7405+25]..lib/warnings.ml[173,7405+26])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[173,7405+30]..lib/warnings.ml[173,7405+32])
                  Texp_constant Const_int 54
              <case>
                pattern (lib/warnings.ml[174,7438+4]..lib/warnings.ml[174,7438+25])
                  Tpat_construct "Inlining_impossible"
                  [
                    pattern (lib/warnings.ml[174,7438+24]..lib/warnings.ml[174,7438+25])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[174,7438+29]..lib/warnings.ml[174,7438+31])
                  Texp_constant Const_int 55
              <case>
                pattern (lib/warnings.ml[175,7470+4]..lib/warnings.ml[175,7470+20])
                  Tpat_construct "Unreachable_case"
                  []
                  None
                expression (lib/warnings.ml[175,7470+24]..lib/warnings.ml[175,7470+26])
                  Texp_constant Const_int 56
              <case>
                pattern (lib/warnings.ml[176,7497+4]..lib/warnings.ml[176,7497+36])
                  Tpat_construct "Ambiguous_var_in_pattern_guard"
                  [
                    pattern (lib/warnings.ml[176,7497+35]..lib/warnings.ml[176,7497+36])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[176,7497+40]..lib/warnings.ml[176,7497+42])
                  Texp_constant Const_int 57
              <case>
                pattern (lib/warnings.ml[177,7540+4]..lib/warnings.ml[177,7540+17])
                  Tpat_construct "No_cmx_file"
                  [
                    pattern (lib/warnings.ml[177,7540+16]..lib/warnings.ml[177,7540+17])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[177,7540+21]..lib/warnings.ml[177,7540+23])
                  Texp_constant Const_int 58
              <case>
                pattern (lib/warnings.ml[178,7564+4]..lib/warnings.ml[178,7564+43])
                  Tpat_construct "Flambda_assignment_to_non_mutable_value"
                  []
                  None
                expression (lib/warnings.ml[178,7564+47]..lib/warnings.ml[178,7564+49])
                  Texp_constant Const_int 59
              <case>
                pattern (lib/warnings.ml[179,7614+4]..lib/warnings.ml[179,7614+19])
                  Tpat_construct "Unused_module"
                  [
                    pattern (lib/warnings.ml[179,7614+18]..lib/warnings.ml[179,7614+19])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[179,7614+23]..lib/warnings.ml[179,7614+25])
                  Texp_constant Const_int 60
              <case>
                pattern (lib/warnings.ml[180,7640+4]..lib/warnings.ml[180,7640+33])
                  Tpat_construct "Unboxable_type_in_prim_decl"
                  [
                    pattern (lib/warnings.ml[180,7640+32]..lib/warnings.ml[180,7640+33])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[180,7640+37]..lib/warnings.ml[180,7640+39])
                  Texp_constant Const_int 61
              <case>
                pattern (lib/warnings.ml[181,7680+4]..lib/warnings.ml[181,7680+22])
                  Tpat_construct "Constraint_on_gadt"
                  []
                  None
                expression (lib/warnings.ml[181,7680+26]..lib/warnings.ml[181,7680+28])
                  Texp_constant Const_int 62
              <case>
                pattern (lib/warnings.ml[182,7709+4]..lib/warnings.ml[182,7709+33])
                  Tpat_construct "Erroneous_printed_signature"
                  [
                    pattern (lib/warnings.ml[182,7709+32]..lib/warnings.ml[182,7709+33])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[182,7709+37]..lib/warnings.ml[182,7709+39])
                  Texp_constant Const_int 63
              <case>
                pattern (lib/warnings.ml[183,7749+4]..lib/warnings.ml[183,7749+39])
                  Tpat_construct "Unsafe_array_syntax_without_parsing"
                  []
                  None
                expression (lib/warnings.ml[183,7749+43]..lib/warnings.ml[183,7749+45])
                  Texp_constant Const_int 64
              <case>
                pattern (lib/warnings.ml[184,7795+4]..lib/warnings.ml[184,7795+21])
                  Tpat_construct "Redefining_unit"
                  [
                    pattern (lib/warnings.ml[184,7795+20]..lib/warnings.ml[184,7795+21])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[184,7795+25]..lib/warnings.ml[184,7795+27])
                  Texp_constant Const_int 65
              <case>
                pattern (lib/warnings.ml[185,7823+4]..lib/warnings.ml[185,7823+22])
                  Tpat_construct "Unused_open_bang"
                  [
                    pattern (lib/warnings.ml[185,7823+21]..lib/warnings.ml[185,7823+22])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[185,7823+26]..lib/warnings.ml[185,7823+28])
                  Texp_constant Const_int 66
              <case>
                pattern (lib/warnings.ml[186,7852+4]..lib/warnings.ml[186,7852+30])
                  Tpat_construct "Unused_functor_parameter"
                  [
                    pattern (lib/warnings.ml[186,7852+29]..lib/warnings.ml[186,7852+30])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[186,7852+34]..lib/warnings.ml[186,7852+36])
                  Texp_constant Const_int 67
              <case>
                pattern (lib/warnings.ml[187,7889+4]..lib/warnings.ml[187,7889+42])
                  Tpat_construct "Match_on_mutable_state_prevent_uncurry"
                  []
                  None
                expression (lib/warnings.ml[187,7889+46]..lib/warnings.ml[187,7889+48])
                  Texp_constant Const_int 68
              <case>
                pattern (lib/warnings.ml[188,7938+4]..lib/warnings.ml[188,7938+18])
                  Tpat_construct "Unused_field"
                  [
                    pattern (lib/warnings.ml[188,7938+17]..lib/warnings.ml[188,7938+18])
                      Tpat_any
                    pattern (lib/warnings.ml[188,7938+17]..lib/warnings.ml[188,7938+18])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[188,7938+22]..lib/warnings.ml[188,7938+24])
                  Texp_constant Const_int 69
              <case>
                pattern (lib/warnings.ml[189,7963+4]..lib/warnings.ml[189,7963+15])
                  Tpat_construct "Missing_mli"
                  []
                  None
                expression (lib/warnings.ml[189,7963+19]..lib/warnings.ml[189,7963+21])
                  Texp_constant Const_int 70
              <case>
                pattern (lib/warnings.ml[190,7985+4]..lib/warnings.ml[190,7985+24])
                  Tpat_construct "Unused_tmc_attribute"
                  []
                  None
                expression (lib/warnings.ml[190,7985+28]..lib/warnings.ml[190,7985+30])
                  Texp_constant Const_int 71
              <case>
                pattern (lib/warnings.ml[191,8016+4]..lib/warnings.ml[191,8016+23])
                  Tpat_construct "Tmc_breaks_tailcall"
                  []
                  None
                expression (lib/warnings.ml[191,8016+27]..lib/warnings.ml[191,8016+29])
                  Texp_constant Const_int 72
              <case>
                pattern (lib/warnings.ml[192,8046+4]..lib/warnings.ml[192,8046+39])
                  Tpat_construct "Generative_application_expects_unit"
                  []
                  None
                expression (lib/warnings.ml[192,8046+43]..lib/warnings.ml[192,8046+45])
                  Texp_constant Const_int 73
            ]
    ]
  structure_item (lib/warnings.ml[198,8266+0]..lib/warnings.ml[198,8266+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[198,8266+4]..lib/warnings.ml[198,8266+23])
          Tpat_var "last_warning_number/428"
        expression (lib/warnings.ml[198,8266+26]..lib/warnings.ml[198,8266+28])
          Texp_constant Const_int 73
    ]
  structure_item (lib/warnings.ml[200,8296+0]..lib/warnings.ml[210,8772+3])
    Tstr_type Rec
    [
      type_declaration description/429 (lib/warnings.ml[200,8296+0]..lib/warnings.ml[210,8772+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/warnings.ml[201,8315+4]..lib/warnings.ml[201,8315+17])
                Immutable
                number/430                core_type (lib/warnings.ml[201,8315+13]..lib/warnings.ml[201,8315+16])
                  Ttyp_poly
                  core_type (lib/warnings.ml[201,8315+13]..lib/warnings.ml[201,8315+16])
                    Ttyp_constr "int/1!"
                    []
              (lib/warnings.ml[202,8333+4]..lib/warnings.ml[202,8333+24])
                Immutable
                names/431                core_type (lib/warnings.ml[202,8333+12]..lib/warnings.ml[202,8333+23])
                  Ttyp_poly
                  core_type (lib/warnings.ml[202,8333+12]..lib/warnings.ml[202,8333+23])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/warnings.ml[202,8333+12]..lib/warnings.ml[202,8333+18])
                        Ttyp_constr "string/15!"
                        []
                    ]
              (lib/warnings.ml[206,8550+4]..lib/warnings.ml[206,8550+25])
                Immutable
                description/432                core_type (lib/warnings.ml[206,8550+18]..lib/warnings.ml[206,8550+24])
                  Ttyp_poly
                  core_type (lib/warnings.ml[206,8550+18]..lib/warnings.ml[206,8550+24])
                    Ttyp_constr "string/15!"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[214,8860+0]..lib/warnings.ml[216,8882+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[214,8860+4]..lib/warnings.ml[214,8860+16])
          Tpat_var "descriptions/433"
        expression (lib/warnings.ml[214,8860+19]..lib/warnings.ml[216,8882+1])
          Texp_construct "[]"
          []
    ]
  structure_item (lib/warnings.ml[218,8885+0]..lib/warnings.ml[223,9075+31])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[218,8885+4]..lib/warnings.ml[218,8885+18])
          Tpat_var "name_to_number/434"
        expression (lib/warnings.ml[219,8906+2]..lib/warnings.ml[223,9075+31])
          Texp_let Nonrec
          [
            <def>
              pattern (lib/warnings.ml[219,8906+6]..lib/warnings.ml[219,8906+7])
                Tpat_var "h/435"
              expression (lib/warnings.ml[219,8906+10]..lib/warnings.ml[219,8906+44])
                Texp_apply
                expression (lib/warnings.ml[219,8906+10]..lib/warnings.ml[219,8906+24])
                  Texp_ident "Stdlib!.Hashtbl.create"
                [
                  <arg>
                    Optional "random"
                    expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                      Texp_construct "None"
                      []
                  <arg>
                    Nolabel
                    expression (lib/warnings.ml[219,8906+25]..lib/warnings.ml[219,8906+44])
                      Texp_ident "last_warning_number/428"
                ]
          ]
          expression (lib/warnings.ml[220,8954+2]..lib/warnings.ml[223,9075+31])
            Texp_sequence
            expression (lib/warnings.ml[220,8954+2]..lib/warnings.ml[222,9055+18])
              Texp_apply
              expression (lib/warnings.ml[220,8954+2]..lib/warnings.ml[220,8954+11])
                Texp_ident "Stdlib!.List.iter"
              [
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[220,8954+12]..lib/warnings.ml[222,9055+5])
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/warnings.ml[220,8954+17]..lib/warnings.ml[220,8954+35])
                          Tpat_record
                          [
                            "number"
                              pattern (lib/warnings.ml[220,8954+18]..lib/warnings.ml[220,8954+24])
                                Tpat_var "number/582"
                            "names"
                              pattern (lib/warnings.ml[220,8954+26]..lib/warnings.ml[220,8954+31])
                                Tpat_var "names/583"
                          ]
                    ]
                    Tfunction_body
                      expression (lib/warnings.ml[221,8993+6]..lib/warnings.ml[221,8993+61])
                        Texp_apply
                        expression (lib/warnings.ml[221,8993+6]..lib/warnings.ml[221,8993+15])
                          Texp_ident "Stdlib!.List.iter"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[221,8993+16]..lib/warnings.ml[221,8993+55])
                              Texp_function
                              [
                                Nolabel
                                Param_pat
                                  pattern (lib/warnings.ml[221,8993+21]..lib/warnings.ml[221,8993+25])
                                    Tpat_var "name/584"
                              ]
                              Tfunction_body
                                expression (lib/warnings.ml[221,8993+29]..lib/warnings.ml[221,8993+54])
                                  Texp_apply
                                  expression (lib/warnings.ml[221,8993+29]..lib/warnings.ml[221,8993+40])
                                    Texp_ident "Stdlib!.Hashtbl.add"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[221,8993+41]..lib/warnings.ml[221,8993+42])
                                        Texp_ident "h/435"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[221,8993+43]..lib/warnings.ml[221,8993+47])
                                        Texp_ident "name/584"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[221,8993+48]..lib/warnings.ml[221,8993+54])
                                        Texp_ident "number/582"
                                  ]
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[221,8993+56]..lib/warnings.ml[221,8993+61])
                              Texp_ident "names/583"
                        ]
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[222,9055+6]..lib/warnings.ml[222,9055+18])
                    Texp_ident "descriptions/433"
              ]
            expression (lib/warnings.ml[223,9075+2]..lib/warnings.ml[223,9075+31])
              Texp_function
              [
                Nolabel
                Param_pat
                  pattern (lib/warnings.ml[223,9075+6]..lib/warnings.ml[223,9075+7])
                    Tpat_var "s/586"
              ]
              Tfunction_body
                expression (lib/warnings.ml[223,9075+11]..lib/warnings.ml[223,9075+31])
                  Texp_apply
                  expression (lib/warnings.ml[223,9075+11]..lib/warnings.ml[223,9075+27])
                    Texp_ident "Stdlib!.Hashtbl.find_opt"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[223,9075+28]..lib/warnings.ml[223,9075+29])
                        Texp_ident "h/435"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[223,9075+30]..lib/warnings.ml[223,9075+31])
                        Texp_ident "s/586"
                  ]
    ]
  structure_item (lib/warnings.ml[227,9173+0]..lib/warnings.ml[256,9752+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[227,9173+4]..lib/warnings.ml[227,9173+10])
          Tpat_var "letter/587"
        expression (lib/warnings.ml[227,9173+13]..lib/warnings.ml[256,9752+21])
          Texp_function
          []
          Tfunction_cases (lib/warnings.ml[227,9173+13]..lib/warnings.ml[256,9752+21])
            [
              <case>
                pattern (lib/warnings.ml[228,9195+4]..lib/warnings.ml[228,9195+7])
                  Tpat_constant Const_char 61
                expression (lib/warnings.ml[229,9206+5]..lib/warnings.ml[230,9271+29])
                  Texp_let Rec
                  [
                    <def>
                      pattern (lib/warnings.ml[229,9206+13]..lib/warnings.ml[229,9206+17])
                        Tpat_var "loop/589"
                      expression (lib/warnings.ml[229,9206+18]..lib/warnings.ml[229,9206+61]) ghost
                        Texp_function
                        [
                          Nolabel
                          Param_pat
                            pattern (lib/warnings.ml[229,9206+18]..lib/warnings.ml[229,9206+19])
                              Tpat_var "i/590"
                        ]
                        Tfunction_body
                          expression (lib/warnings.ml[229,9206+22]..lib/warnings.ml[229,9206+61])
                            Texp_ifthenelse
                            expression (lib/warnings.ml[229,9206+25]..lib/warnings.ml[229,9206+30])
                              Texp_apply
                              expression (lib/warnings.ml[229,9206+27]..lib/warnings.ml[229,9206+28])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[229,9206+25]..lib/warnings.ml[229,9206+26])
                                    Texp_ident "i/590"
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[229,9206+29]..lib/warnings.ml[229,9206+30])
                                    Texp_constant Const_int 0
                              ]
                            expression (lib/warnings.ml[229,9206+36]..lib/warnings.ml[229,9206+38])
                              Texp_construct "[]"
                              []
                            Some
                              expression (lib/warnings.ml[229,9206+44]..lib/warnings.ml[229,9206+61])
                                Texp_construct "::"
                                [
                                  expression (lib/warnings.ml[229,9206+44]..lib/warnings.ml[229,9206+45])
                                    Texp_ident "i/590"
                                  expression (lib/warnings.ml[229,9206+49]..lib/warnings.ml[229,9206+61])
                                    Texp_apply
                                    expression (lib/warnings.ml[229,9206+49]..lib/warnings.ml[229,9206+53])
                                      Texp_ident "loop/589"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[229,9206+54]..lib/warnings.ml[229,9206+61])
                                          Texp_apply
                                          expression (lib/warnings.ml[229,9206+57]..lib/warnings.ml[229,9206+58])
                                            Texp_ident "Stdlib!.-"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[229,9206+55]..lib/warnings.ml[229,9206+56])
                                                Texp_ident "i/590"
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[229,9206+59]..lib/warnings.ml[229,9206+60])
                                                Texp_constant Const_int 1
                                          ]
                                    ]
                                ]
                  ]
                  expression (lib/warnings.ml[230,9271+5]..lib/warnings.ml[230,9271+29])
                    Texp_apply
                    expression (lib/warnings.ml[230,9271+5]..lib/warnings.ml[230,9271+9])
                      Texp_ident "loop/589"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[230,9271+10]..lib/warnings.ml[230,9271+29])
                          Texp_ident "last_warning_number/428"
                    ]
              <case>
                pattern (lib/warnings.ml[231,9301+4]..lib/warnings.ml[231,9301+7])
                  Tpat_constant Const_char 62
                expression (lib/warnings.ml[231,9301+11]..lib/warnings.ml[231,9301+13])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/warnings.ml[232,9315+4]..lib/warnings.ml[232,9315+7])
                  Tpat_constant Const_char 63
                expression (lib/warnings.ml[232,9315+11]..lib/warnings.ml[232,9315+17])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[232,9315+12]..lib/warnings.ml[232,9315+13])
                      Texp_constant Const_int 1
                    expression (lib/warnings.ml[232,9315+15]..lib/warnings.ml[232,9315+17]) ghost
                      Texp_construct "::"
                      [
                        expression (lib/warnings.ml[232,9315+15]..lib/warnings.ml[232,9315+16])
                          Texp_constant Const_int 2
                        expression (lib/warnings.ml[232,9315+16]..lib/warnings.ml[232,9315+17]) ghost
                          Texp_construct "[]"
                          []
                      ]
                  ]
              <case>
                pattern (lib/warnings.ml[233,9333+4]..lib/warnings.ml[233,9333+7])
                  Tpat_constant Const_char 64
                expression (lib/warnings.ml[233,9333+11]..lib/warnings.ml[233,9333+14])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[233,9333+12]..lib/warnings.ml[233,9333+13])
                      Texp_constant Const_int 3
                    expression (lib/warnings.ml[233,9333+13]..lib/warnings.ml[233,9333+14]) ghost
                      Texp_construct "[]"
                      []
                  ]
              <case>
                pattern (lib/warnings.ml[234,9348+4]..lib/warnings.ml[234,9348+7])
                  Tpat_constant Const_char 65
                expression (lib/warnings.ml[234,9348+11]..lib/warnings.ml[234,9348+14])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[234,9348+12]..lib/warnings.ml[234,9348+13])
                      Texp_constant Const_int 4
                    expression (lib/warnings.ml[234,9348+13]..lib/warnings.ml[234,9348+14]) ghost
                      Texp_construct "[]"
                      []
                  ]
              <case>
                pattern (lib/warnings.ml[235,9363+4]..lib/warnings.ml[235,9363+7])
                  Tpat_constant Const_char 66
                expression (lib/warnings.ml[235,9363+11]..lib/warnings.ml[235,9363+14])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[235,9363+12]..lib/warnings.ml[235,9363+13])
                      Texp_constant Const_int 5
                    expression (lib/warnings.ml[235,9363+13]..lib/warnings.ml[235,9363+14]) ghost
                      Texp_construct "[]"
                      []
                  ]
              <case>
                pattern (lib/warnings.ml[236,9378+4]..lib/warnings.ml[236,9378+7])
                  Tpat_constant Const_char 67
                expression (lib/warnings.ml[236,9378+11]..lib/warnings.ml[236,9378+13])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/warnings.ml[237,9392+4]..lib/warnings.ml[237,9392+7])
                  Tpat_constant Const_char 68
                expression (lib/warnings.ml[237,9392+11]..lib/warnings.ml[237,9392+13])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/warnings.ml[238,9406+4]..lib/warnings.ml[238,9406+7])
                  Tpat_constant Const_char 69
                expression (lib/warnings.ml[238,9406+11]..lib/warnings.ml[238,9406+13])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/warnings.ml[239,9420+4]..lib/warnings.ml[239,9420+7])
                  Tpat_constant Const_char 6a
                expression (lib/warnings.ml[239,9420+11]..lib/warnings.ml[239,9420+13])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/warnings.ml[240,9434+4]..lib/warnings.ml[240,9434+7])
                  Tpat_constant Const_char 6b
                expression (lib/warnings.ml[240,9434+11]..lib/warnings.ml[240,9434+43])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[240,9434+12]..lib/warnings.ml[240,9434+14])
                      Texp_constant Const_int 32
                    expression (lib/warnings.ml[240,9434+16]..lib/warnings.ml[240,9434+43]) ghost
                      Texp_construct "::"
                      [
                        expression (lib/warnings.ml[240,9434+16]..lib/warnings.ml[240,9434+18])
                          Texp_constant Const_int 33
                        expression (lib/warnings.ml[240,9434+20]..lib/warnings.ml[240,9434+43]) ghost
                          Texp_construct "::"
                          [
                            expression (lib/warnings.ml[240,9434+20]..lib/warnings.ml[240,9434+22])
                              Texp_constant Const_int 34
                            expression (lib/warnings.ml[240,9434+24]..lib/warnings.ml[240,9434+43]) ghost
                              Texp_construct "::"
                              [
                                expression (lib/warnings.ml[240,9434+24]..lib/warnings.ml[240,9434+26])
                                  Texp_constant Const_int 35
                                expression (lib/warnings.ml[240,9434+28]..lib/warnings.ml[240,9434+43]) ghost
                                  Texp_construct "::"
                                  [
                                    expression (lib/warnings.ml[240,9434+28]..lib/warnings.ml[240,9434+30])
                                      Texp_constant Const_int 36
                                    expression (lib/warnings.ml[240,9434+32]..lib/warnings.ml[240,9434+43]) ghost
                                      Texp_construct "::"
                                      [
                                        expression (lib/warnings.ml[240,9434+32]..lib/warnings.ml[240,9434+34])
                                          Texp_constant Const_int 37
                                        expression (lib/warnings.ml[240,9434+36]..lib/warnings.ml[240,9434+43]) ghost
                                          Texp_construct "::"
                                          [
                                            expression (lib/warnings.ml[240,9434+36]..lib/warnings.ml[240,9434+38])
                                              Texp_constant Const_int 38
                                            expression (lib/warnings.ml[240,9434+40]..lib/warnings.ml[240,9434+43]) ghost
                                              Texp_construct "::"
                                              [
                                                expression (lib/warnings.ml[240,9434+40]..lib/warnings.ml[240,9434+42])
                                                  Texp_constant Const_int 39
                                                expression (lib/warnings.ml[240,9434+42]..lib/warnings.ml[240,9434+43]) ghost
                                                  Texp_construct "[]"
                                                  []
                                              ]
                                          ]
                                      ]
                                  ]
                              ]
                          ]
                      ]
                  ]
              <case>
                pattern (lib/warnings.ml[241,9478+4]..lib/warnings.ml[241,9478+7])
                  Tpat_constant Const_char 6c
                expression (lib/warnings.ml[241,9478+11]..lib/warnings.ml[241,9478+14])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[241,9478+12]..lib/warnings.ml[241,9478+13])
                      Texp_constant Const_int 6
                    expression (lib/warnings.ml[241,9478+13]..lib/warnings.ml[241,9478+14]) ghost
                      Texp_construct "[]"
                      []
                  ]
              <case>
                pattern (lib/warnings.ml[242,9493+4]..lib/warnings.ml[242,9493+7])
                  Tpat_constant Const_char 6d
                expression (lib/warnings.ml[242,9493+11]..lib/warnings.ml[242,9493+14])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[242,9493+12]..lib/warnings.ml[242,9493+13])
                      Texp_constant Const_int 7
                    expression (lib/warnings.ml[242,9493+13]..lib/warnings.ml[242,9493+14]) ghost
                      Texp_construct "[]"
                      []
                  ]
              <case>
                pattern (lib/warnings.ml[243,9508+4]..lib/warnings.ml[243,9508+7])
                  Tpat_constant Const_char 6e
                expression (lib/warnings.ml[243,9508+11]..lib/warnings.ml[243,9508+13])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/warnings.ml[244,9522+4]..lib/warnings.ml[244,9522+7])
                  Tpat_constant Const_char 6f
                expression (lib/warnings.ml[244,9522+11]..lib/warnings.ml[244,9522+13])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/warnings.ml[245,9536+4]..lib/warnings.ml[245,9536+7])
                  Tpat_constant Const_char 70
                expression (lib/warnings.ml[245,9536+11]..lib/warnings.ml[245,9536+14])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[245,9536+12]..lib/warnings.ml[245,9536+13])
                      Texp_constant Const_int 8
                    expression (lib/warnings.ml[245,9536+13]..lib/warnings.ml[245,9536+14]) ghost
                      Texp_construct "[]"
                      []
                  ]
              <case>
                pattern (lib/warnings.ml[246,9551+4]..lib/warnings.ml[246,9551+7])
                  Tpat_constant Const_char 71
                expression (lib/warnings.ml[246,9551+11]..lib/warnings.ml[246,9551+13])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/warnings.ml[247,9565+4]..lib/warnings.ml[247,9565+7])
                  Tpat_constant Const_char 72
                expression (lib/warnings.ml[247,9565+11]..lib/warnings.ml[247,9565+14])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[247,9565+12]..lib/warnings.ml[247,9565+13])
                      Texp_constant Const_int 9
                    expression (lib/warnings.ml[247,9565+13]..lib/warnings.ml[247,9565+14]) ghost
                      Texp_construct "[]"
                      []
                  ]
              <case>
                pattern (lib/warnings.ml[248,9580+4]..lib/warnings.ml[248,9580+7])
                  Tpat_constant Const_char 73
                expression (lib/warnings.ml[248,9580+11]..lib/warnings.ml[248,9580+15])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[248,9580+12]..lib/warnings.ml[248,9580+14])
                      Texp_constant Const_int 10
                    expression (lib/warnings.ml[248,9580+14]..lib/warnings.ml[248,9580+15]) ghost
                      Texp_construct "[]"
                      []
                  ]
              <case>
                pattern (lib/warnings.ml[249,9596+4]..lib/warnings.ml[249,9596+7])
                  Tpat_constant Const_char 74
                expression (lib/warnings.ml[249,9596+11]..lib/warnings.ml[249,9596+13])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/warnings.ml[250,9610+4]..lib/warnings.ml[250,9610+7])
                  Tpat_constant Const_char 75
                expression (lib/warnings.ml[250,9610+11]..lib/warnings.ml[250,9610+19])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[250,9610+12]..lib/warnings.ml[250,9610+14])
                      Texp_constant Const_int 11
                    expression (lib/warnings.ml[250,9610+16]..lib/warnings.ml[250,9610+19]) ghost
                      Texp_construct "::"
                      [
                        expression (lib/warnings.ml[250,9610+16]..lib/warnings.ml[250,9610+18])
                          Texp_constant Const_int 12
                        expression (lib/warnings.ml[250,9610+18]..lib/warnings.ml[250,9610+19]) ghost
                          Texp_construct "[]"
                          []
                      ]
                  ]
              <case>
                pattern (lib/warnings.ml[251,9630+4]..lib/warnings.ml[251,9630+7])
                  Tpat_constant Const_char 76
                expression (lib/warnings.ml[251,9630+11]..lib/warnings.ml[251,9630+15])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[251,9630+12]..lib/warnings.ml[251,9630+14])
                      Texp_constant Const_int 13
                    expression (lib/warnings.ml[251,9630+14]..lib/warnings.ml[251,9630+15]) ghost
                      Texp_construct "[]"
                      []
                  ]
              <case>
                pattern (lib/warnings.ml[252,9646+4]..lib/warnings.ml[252,9646+7])
                  Tpat_constant Const_char 77
                expression (lib/warnings.ml[252,9646+11]..lib/warnings.ml[252,9646+13])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/warnings.ml[253,9660+4]..lib/warnings.ml[253,9660+7])
                  Tpat_constant Const_char 78
                expression (lib/warnings.ml[253,9660+11]..lib/warnings.ml[253,9660+59])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[253,9660+12]..lib/warnings.ml[253,9660+14])
                      Texp_constant Const_int 14
                    expression (lib/warnings.ml[253,9660+16]..lib/warnings.ml[253,9660+59]) ghost
                      Texp_construct "::"
                      [
                        expression (lib/warnings.ml[253,9660+16]..lib/warnings.ml[253,9660+18])
                          Texp_constant Const_int 15
                        expression (lib/warnings.ml[253,9660+20]..lib/warnings.ml[253,9660+59]) ghost
                          Texp_construct "::"
                          [
                            expression (lib/warnings.ml[253,9660+20]..lib/warnings.ml[253,9660+22])
                              Texp_constant Const_int 16
                            expression (lib/warnings.ml[253,9660+24]..lib/warnings.ml[253,9660+59]) ghost
                              Texp_construct "::"
                              [
                                expression (lib/warnings.ml[253,9660+24]..lib/warnings.ml[253,9660+26])
                                  Texp_constant Const_int 17
                                expression (lib/warnings.ml[253,9660+28]..lib/warnings.ml[253,9660+59]) ghost
                                  Texp_construct "::"
                                  [
                                    expression (lib/warnings.ml[253,9660+28]..lib/warnings.ml[253,9660+30])
                                      Texp_constant Const_int 18
                                    expression (lib/warnings.ml[253,9660+32]..lib/warnings.ml[253,9660+59]) ghost
                                      Texp_construct "::"
                                      [
                                        expression (lib/warnings.ml[253,9660+32]..lib/warnings.ml[253,9660+34])
                                          Texp_constant Const_int 19
                                        expression (lib/warnings.ml[253,9660+36]..lib/warnings.ml[253,9660+59]) ghost
                                          Texp_construct "::"
                                          [
                                            expression (lib/warnings.ml[253,9660+36]..lib/warnings.ml[253,9660+38])
                                              Texp_constant Const_int 20
                                            expression (lib/warnings.ml[253,9660+40]..lib/warnings.ml[253,9660+59]) ghost
                                              Texp_construct "::"
                                              [
                                                expression (lib/warnings.ml[253,9660+40]..lib/warnings.ml[253,9660+42])
                                                  Texp_constant Const_int 21
                                                expression (lib/warnings.ml[253,9660+44]..lib/warnings.ml[253,9660+59]) ghost
                                                  Texp_construct "::"
                                                  [
                                                    expression (lib/warnings.ml[253,9660+44]..lib/warnings.ml[253,9660+46])
                                                      Texp_constant Const_int 22
                                                    expression (lib/warnings.ml[253,9660+48]..lib/warnings.ml[253,9660+59]) ghost
                                                      Texp_construct "::"
                                                      [
                                                        expression (lib/warnings.ml[253,9660+48]..lib/warnings.ml[253,9660+50])
                                                          Texp_constant Const_int 23
                                                        expression (lib/warnings.ml[253,9660+52]..lib/warnings.ml[253,9660+59]) ghost
                                                          Texp_construct "::"
                                                          [
                                                            expression (lib/warnings.ml[253,9660+52]..lib/warnings.ml[253,9660+54])
                                                              Texp_constant Const_int 24
                                                            expression (lib/warnings.ml[253,9660+56]..lib/warnings.ml[253,9660+59]) ghost
                                                              Texp_construct "::"
                                                              [
                                                                expression (lib/warnings.ml[253,9660+56]..lib/warnings.ml[253,9660+58])
                                                                  Texp_constant Const_int 30
                                                                expression (lib/warnings.ml[253,9660+58]..lib/warnings.ml[253,9660+59]) ghost
                                                                  Texp_construct "[]"
                                                                  []
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                  ]
                              ]
                          ]
                      ]
                  ]
              <case>
                pattern (lib/warnings.ml[254,9720+4]..lib/warnings.ml[254,9720+7])
                  Tpat_constant Const_char 79
                expression (lib/warnings.ml[254,9720+11]..lib/warnings.ml[254,9720+15])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[254,9720+12]..lib/warnings.ml[254,9720+14])
                      Texp_constant Const_int 26
                    expression (lib/warnings.ml[254,9720+14]..lib/warnings.ml[254,9720+15]) ghost
                      Texp_construct "[]"
                      []
                  ]
              <case>
                pattern (lib/warnings.ml[255,9736+4]..lib/warnings.ml[255,9736+7])
                  Tpat_constant Const_char 7a
                expression (lib/warnings.ml[255,9736+11]..lib/warnings.ml[255,9736+15])
                  Texp_construct "::"
                  [
                    expression (lib/warnings.ml[255,9736+12]..lib/warnings.ml[255,9736+14])
                      Texp_constant Const_int 27
                    expression (lib/warnings.ml[255,9736+14]..lib/warnings.ml[255,9736+15]) ghost
                      Texp_construct "[]"
                      []
                  ]
              <case>
                pattern (lib/warnings.ml[256,9752+4]..lib/warnings.ml[256,9752+5])
                  Tpat_any
                expression (lib/warnings.ml[256,9752+9]..lib/warnings.ml[256,9752+21])
                  Texp_assert                  expression (lib/warnings.ml[256,9752+16]..lib/warnings.ml[256,9752+21])
                    Texp_construct "false"
                    []
            ]
    ]
  structure_item (lib/warnings.ml[258,9775+0]..lib/warnings.ml[264,9993+3])
    Tstr_type Rec
    [
      type_declaration state/592 (lib/warnings.ml[258,9775+0]..lib/warnings.ml[264,9993+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/warnings.ml[260,9792+4]..lib/warnings.ml[260,9792+23])
                Immutable
                active/593                core_type (lib/warnings.ml[260,9792+12]..lib/warnings.ml[260,9792+22])
                  Ttyp_poly
                  core_type (lib/warnings.ml[260,9792+12]..lib/warnings.ml[260,9792+22])
                    Ttyp_constr "array/8!"
                    [
                      core_type (lib/warnings.ml[260,9792+12]..lib/warnings.ml[260,9792+16])
                        Ttyp_constr "bool/5!"
                        []
                    ]
              (lib/warnings.ml[261,9816+4]..lib/warnings.ml[261,9816+22])
                Immutable
                error/594                core_type (lib/warnings.ml[261,9816+11]..lib/warnings.ml[261,9816+21])
                  Ttyp_poly
                  core_type (lib/warnings.ml[261,9816+11]..lib/warnings.ml[261,9816+21])
                    Ttyp_constr "array/8!"
                    [
                      core_type (lib/warnings.ml[261,9816+11]..lib/warnings.ml[261,9816+15])
                        Ttyp_constr "bool/5!"
                        []
                    ]
              (lib/warnings.ml[262,9839+4]..lib/warnings.ml[262,9839+46])
                Immutable
                alerts/971                core_type (lib/warnings.ml[262,9839+13]..lib/warnings.ml[262,9839+44])
                  Ttyp_poly
                  core_type (lib/warnings.ml[262,9839+13]..lib/warnings.ml[262,9839+44])
                    Ttyp_tuple
                    [
                      core_type (lib/warnings.ml[262,9839+13]..lib/warnings.ml[262,9839+37])
                        Ttyp_constr "Ocaml_ocaml_types!.Misc.Stdlib.String.Set.t"
                        []
                      core_type (lib/warnings.ml[262,9839+40]..lib/warnings.ml[262,9839+44])
                        Ttyp_constr "bool/5!"
                        []
                    ]
              (lib/warnings.ml[263,9913+4]..lib/warnings.ml[263,9913+52])
                Immutable
                alert_errors/972                core_type (lib/warnings.ml[263,9913+19]..lib/warnings.ml[263,9913+50])
                  Ttyp_poly
                  core_type (lib/warnings.ml[263,9913+19]..lib/warnings.ml[263,9913+50])
                    Ttyp_tuple
                    [
                      core_type (lib/warnings.ml[263,9913+19]..lib/warnings.ml[263,9913+43])
                        Ttyp_constr "Ocaml_ocaml_types!.Misc.Stdlib.String.Set.t"
                        []
                      core_type (lib/warnings.ml[263,9913+46]..lib/warnings.ml[263,9913+50])
                        Ttyp_constr "bool/5!"
                        []
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[266,9998+0]..lib/warnings.ml[273,10268+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[266,9998+4]..lib/warnings.ml[266,9998+11])
          Tpat_var "current/1188"
        expression (lib/warnings.ml[267,10012+2]..lib/warnings.ml[273,10268+5])
          Texp_apply
          expression (lib/warnings.ml[267,10012+2]..lib/warnings.ml[267,10012+5])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/warnings.ml[268,10018+4]..lib/warnings.ml[273,10268+5])
                Texp_record
                  fields =
                    [
                      "active"
                        expression (lib/warnings.ml[269,10024+15]..lib/warnings.ml[269,10024+56])
                          Texp_apply
                          expression (lib/warnings.ml[269,10024+15]..lib/warnings.ml[269,10024+25])
                            Texp_ident "Stdlib!.Array.make"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[269,10024+26]..lib/warnings.ml[269,10024+51])
                                Texp_apply
                                expression (lib/warnings.ml[269,10024+47]..lib/warnings.ml[269,10024+48])
                                  Texp_ident "Stdlib!.+"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[269,10024+27]..lib/warnings.ml[269,10024+46])
                                      Texp_ident "last_warning_number/428"
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[269,10024+49]..lib/warnings.ml[269,10024+50])
                                      Texp_constant Const_int 1
                                ]
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[269,10024+52]..lib/warnings.ml[269,10024+56])
                                Texp_construct "true"
                                []
                          ]
                      "error"
                        expression (lib/warnings.ml[270,10082+14]..lib/warnings.ml[270,10082+56])
                          Texp_apply
                          expression (lib/warnings.ml[270,10082+14]..lib/warnings.ml[270,10082+24])
                            Texp_ident "Stdlib!.Array.make"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[270,10082+25]..lib/warnings.ml[270,10082+50])
                                Texp_apply
                                expression (lib/warnings.ml[270,10082+46]..lib/warnings.ml[270,10082+47])
                                  Texp_ident "Stdlib!.+"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[270,10082+26]..lib/warnings.ml[270,10082+45])
                                      Texp_ident "last_warning_number/428"
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[270,10082+48]..lib/warnings.ml[270,10082+49])
                                      Texp_constant Const_int 1
                                ]
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[270,10082+51]..lib/warnings.ml[270,10082+56])
                                Texp_construct "false"
                                []
                          ]
                      "alerts"
                        expression (lib/warnings.ml[271,10140+15]..lib/warnings.ml[271,10140+52])
                          Texp_tuple
                          [
                            expression (lib/warnings.ml[271,10140+16]..lib/warnings.ml[271,10140+44])
                              Texp_ident "Ocaml_ocaml_types!.Misc.Stdlib.String.Set.empty"
                            expression (lib/warnings.ml[271,10140+46]..lib/warnings.ml[271,10140+51])
                              Texp_construct "false"
                              []
                          ]
                      "alert_errors"
                        expression (lib/warnings.ml[272,10194+21]..lib/warnings.ml[272,10194+57])
                          Texp_tuple
                          [
                            expression (lib/warnings.ml[272,10194+22]..lib/warnings.ml[272,10194+50])
                              Texp_ident "Ocaml_ocaml_types!.Misc.Stdlib.String.Set.empty"
                            expression (lib/warnings.ml[272,10194+52]..lib/warnings.ml[272,10194+56])
                              Texp_construct "true"
                              []
                          ]
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
          ]
    ]
  structure_item (lib/warnings.ml[275,10275+0]..lib/warnings.ml[275,10275+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[275,10275+4]..lib/warnings.ml[275,10275+12])
          Tpat_var "disabled/1239"
        expression (lib/warnings.ml[275,10275+15]..lib/warnings.ml[275,10275+24])
          Texp_apply
          expression (lib/warnings.ml[275,10275+15]..lib/warnings.ml[275,10275+18])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/warnings.ml[275,10275+19]..lib/warnings.ml[275,10275+24])
                Texp_construct "false"
                []
          ]
    ]
  structure_item (lib/warnings.ml[277,10301+0]..lib/warnings.ml[278,10326+46])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[277,10301+4]..lib/warnings.ml[277,10301+20])
          Tpat_var "without_warnings/1240"
        expression (lib/warnings.ml[277,10301+21]..lib/warnings.ml[278,10326+46]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[277,10301+21]..lib/warnings.ml[277,10301+22])
                Tpat_var "f/1242"
          ]
          Tfunction_body
            expression (lib/warnings.ml[278,10326+2]..lib/warnings.ml[278,10326+46])
              Texp_apply
              expression (lib/warnings.ml[278,10326+2]..lib/warnings.ml[278,10326+19])
                Texp_ident "Ocaml_ocaml_types!.Misc.protect_refs"
              [
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[278,10326+20]..lib/warnings.ml[278,10326+44])
                    Texp_construct "::"
                    [
                      expression (lib/warnings.ml[278,10326+21]..lib/warnings.ml[278,10326+43])
                        Texp_construct "Misc.R"
                        [
                          expression (lib/warnings.ml[278,10326+28]..lib/warnings.ml[278,10326+36])
                            Texp_ident "disabled/1239"
                          expression (lib/warnings.ml[278,10326+38]..lib/warnings.ml[278,10326+42])
                            Texp_construct "true"
                            []
                        ]
                      expression (lib/warnings.ml[278,10326+43]..lib/warnings.ml[278,10326+44]) ghost
                        Texp_construct "[]"
                        []
                    ]
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[278,10326+45]..lib/warnings.ml[278,10326+46])
                    Texp_ident "f/1242"
              ]
    ]
  structure_item (lib/warnings.ml[280,10374+0]..lib/warnings.ml[280,10374+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[280,10374+4]..lib/warnings.ml[280,10374+10])
          Tpat_var "backup/1243"
        expression (lib/warnings.ml[280,10374+11]..lib/warnings.ml[280,10374+24]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[280,10374+11]..lib/warnings.ml[280,10374+13])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/warnings.ml[280,10374+16]..lib/warnings.ml[280,10374+24])
              Texp_apply
              expression (lib/warnings.ml[280,10374+16]..lib/warnings.ml[280,10374+17])
                Texp_ident "Stdlib!.!"
              [
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[280,10374+17]..lib/warnings.ml[280,10374+24])
                    Texp_ident "current/1188"
              ]
    ]
  structure_item (lib/warnings.ml[282,10400+0]..lib/warnings.ml[282,10400+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[282,10400+4]..lib/warnings.ml[282,10400+11])
          Tpat_var "restore/1246"
        expression (lib/warnings.ml[282,10400+12]..lib/warnings.ml[282,10400+28]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[282,10400+12]..lib/warnings.ml[282,10400+13])
                Tpat_var "x/1248"
          ]
          Tfunction_body
            expression (lib/warnings.ml[282,10400+16]..lib/warnings.ml[282,10400+28])
              Texp_apply
              expression (lib/warnings.ml[282,10400+24]..lib/warnings.ml[282,10400+26])
                Texp_ident "Stdlib!.:="
              [
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[282,10400+16]..lib/warnings.ml[282,10400+23])
                    Texp_ident "current/1188"
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[282,10400+27]..lib/warnings.ml[282,10400+28])
                    Texp_ident "x/1248"
              ]
    ]
  structure_item (lib/warnings.ml[284,10430+0]..lib/warnings.ml[285,10448+47])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[284,10430+4]..lib/warnings.ml[284,10430+13])
          Tpat_var "is_active/1249"
        expression (lib/warnings.ml[284,10430+14]..lib/warnings.ml[285,10448+47]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[284,10430+14]..lib/warnings.ml[284,10430+15])
                Tpat_var "x/1251"
          ]
          Tfunction_body
            expression (lib/warnings.ml[285,10448+2]..lib/warnings.ml[285,10448+47])
              Texp_apply
              expression (lib/warnings.ml[285,10448+16]..lib/warnings.ml[285,10448+18])
                Texp_ident "Stdlib!.&&"
              [
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[285,10448+2]..lib/warnings.ml[285,10448+15])
                    Texp_apply
                    expression (lib/warnings.ml[285,10448+2]..lib/warnings.ml[285,10448+5])
                      Texp_ident "Stdlib!.not"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[285,10448+6]..lib/warnings.ml[285,10448+15])
                          Texp_apply
                          expression (lib/warnings.ml[285,10448+6]..lib/warnings.ml[285,10448+7])
                            Texp_ident "Stdlib!.!"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[285,10448+7]..lib/warnings.ml[285,10448+15])
                                Texp_ident "disabled/1239"
                          ]
                    ]
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[285,10448+19]..lib/warnings.ml[285,10448+47])
                    Texp_apply
                    expression (lib/warnings.ml[285,10448+19]..lib/warnings.ml[285,10448+47]) ghost
                      Texp_ident "Stdlib!.Array.get"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[285,10448+19]..lib/warnings.ml[285,10448+36])
                          Texp_field
                          expression (lib/warnings.ml[285,10448+19]..lib/warnings.ml[285,10448+29])
                            Texp_apply
                            expression (lib/warnings.ml[285,10448+20]..lib/warnings.ml[285,10448+21])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[285,10448+21]..lib/warnings.ml[285,10448+28])
                                  Texp_ident "current/1188"
                            ]
                          "active"
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[285,10448+38]..lib/warnings.ml[285,10448+46])
                          Texp_apply
                          expression (lib/warnings.ml[285,10448+38]..lib/warnings.ml[285,10448+44])
                            Texp_ident "number/425"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[285,10448+45]..lib/warnings.ml[285,10448+46])
                                Texp_ident "x/1251"
                          ]
                    ]
              ]
    ]
  structure_item (lib/warnings.ml[287,10497+0]..lib/warnings.ml[288,10514+46])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[287,10497+4]..lib/warnings.ml[287,10497+12])
          Tpat_var "is_error/1252"
        expression (lib/warnings.ml[287,10497+13]..lib/warnings.ml[288,10514+46]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[287,10497+13]..lib/warnings.ml[287,10497+14])
                Tpat_var "x/1254"
          ]
          Tfunction_body
            expression (lib/warnings.ml[288,10514+2]..lib/warnings.ml[288,10514+46])
              Texp_apply
              expression (lib/warnings.ml[288,10514+16]..lib/warnings.ml[288,10514+18])
                Texp_ident "Stdlib!.&&"
              [
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[288,10514+2]..lib/warnings.ml[288,10514+15])
                    Texp_apply
                    expression (lib/warnings.ml[288,10514+2]..lib/warnings.ml[288,10514+5])
                      Texp_ident "Stdlib!.not"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[288,10514+6]..lib/warnings.ml[288,10514+15])
                          Texp_apply
                          expression (lib/warnings.ml[288,10514+6]..lib/warnings.ml[288,10514+7])
                            Texp_ident "Stdlib!.!"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[288,10514+7]..lib/warnings.ml[288,10514+15])
                                Texp_ident "disabled/1239"
                          ]
                    ]
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[288,10514+19]..lib/warnings.ml[288,10514+46])
                    Texp_apply
                    expression (lib/warnings.ml[288,10514+19]..lib/warnings.ml[288,10514+46]) ghost
                      Texp_ident "Stdlib!.Array.get"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[288,10514+19]..lib/warnings.ml[288,10514+35])
                          Texp_field
                          expression (lib/warnings.ml[288,10514+19]..lib/warnings.ml[288,10514+29])
                            Texp_apply
                            expression (lib/warnings.ml[288,10514+20]..lib/warnings.ml[288,10514+21])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[288,10514+21]..lib/warnings.ml[288,10514+28])
                                  Texp_ident "current/1188"
                            ]
                          "error"
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[288,10514+37]..lib/warnings.ml[288,10514+45])
                          Texp_apply
                          expression (lib/warnings.ml[288,10514+37]..lib/warnings.ml[288,10514+43])
                            Texp_ident "number/425"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[288,10514+44]..lib/warnings.ml[288,10514+45])
                                Texp_ident "x/1254"
                          ]
                    ]
              ]
    ]
  structure_item (lib/warnings.ml[290,10562+0]..lib/warnings.ml[293,10653+43])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[290,10562+4]..lib/warnings.ml[290,10562+19])
          Tpat_var "alert_is_active/1255"
        expression (lib/warnings.ml[290,10562+20]..lib/warnings.ml[293,10653+43]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[290,10562+20]..lib/warnings.ml[290,10562+29])
                Tpat_record
                [
                  "kind"
                    pattern (lib/warnings.ml[290,10562+21]..lib/warnings.ml[290,10562+25])
                      Tpat_var "kind/1257"
                ]
          ]
          Tfunction_body
            expression (lib/warnings.ml[291,10594+2]..lib/warnings.ml[293,10653+43])
              Texp_apply
              expression (lib/warnings.ml[291,10594+16]..lib/warnings.ml[291,10594+18])
                Texp_ident "Stdlib!.&&"
              [
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[291,10594+2]..lib/warnings.ml[291,10594+15])
                    Texp_apply
                    expression (lib/warnings.ml[291,10594+2]..lib/warnings.ml[291,10594+5])
                      Texp_ident "Stdlib!.not"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[291,10594+6]..lib/warnings.ml[291,10594+15])
                          Texp_apply
                          expression (lib/warnings.ml[291,10594+6]..lib/warnings.ml[291,10594+7])
                            Texp_ident "Stdlib!.!"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[291,10594+7]..lib/warnings.ml[291,10594+15])
                                Texp_ident "disabled/1239"
                          ]
                    ]
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[292,10613+2]..lib/warnings.ml[293,10653+43])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[292,10613+6]..lib/warnings.ml[292,10613+16])
                          Tpat_tuple
                          [
                            pattern (lib/warnings.ml[292,10613+7]..lib/warnings.ml[292,10613+10])
                              Tpat_var "set/1258"
                            pattern (lib/warnings.ml[292,10613+12]..lib/warnings.ml[292,10613+15])
                              Tpat_var "pos/1259"
                          ]
                        expression (lib/warnings.ml[292,10613+19]..lib/warnings.ml[292,10613+36])
                          Texp_field
                          expression (lib/warnings.ml[292,10613+19]..lib/warnings.ml[292,10613+29])
                            Texp_apply
                            expression (lib/warnings.ml[292,10613+20]..lib/warnings.ml[292,10613+21])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[292,10613+21]..lib/warnings.ml[292,10613+28])
                                  Texp_ident "current/1188"
                            ]
                          "alerts"
                    ]
                    expression (lib/warnings.ml[293,10653+2]..lib/warnings.ml[293,10653+43])
                      Texp_apply
                      expression (lib/warnings.ml[293,10653+38]..lib/warnings.ml[293,10653+39])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[293,10653+2]..lib/warnings.ml[293,10653+37])
                            Texp_apply
                            expression (lib/warnings.ml[293,10653+2]..lib/warnings.ml[293,10653+28])
                              Texp_ident "Ocaml_ocaml_types!.Misc.Stdlib.String.Set.mem"
                            [
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[293,10653+29]..lib/warnings.ml[293,10653+33])
                                  Texp_ident "kind/1257"
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[293,10653+34]..lib/warnings.ml[293,10653+37])
                                  Texp_ident "set/1258"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[293,10653+40]..lib/warnings.ml[293,10653+43])
                            Texp_ident "pos/1259"
                      ]
              ]
    ]
  structure_item (lib/warnings.ml[295,10698+0]..lib/warnings.ml[298,10794+43])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[295,10698+4]..lib/warnings.ml[295,10698+18])
          Tpat_var "alert_is_error/1330"
        expression (lib/warnings.ml[295,10698+19]..lib/warnings.ml[298,10794+43]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[295,10698+19]..lib/warnings.ml[295,10698+28])
                Tpat_record
                [
                  "kind"
                    pattern (lib/warnings.ml[295,10698+20]..lib/warnings.ml[295,10698+24])
                      Tpat_var "kind/1332"
                ]
          ]
          Tfunction_body
            expression (lib/warnings.ml[296,10729+2]..lib/warnings.ml[298,10794+43])
              Texp_apply
              expression (lib/warnings.ml[296,10729+16]..lib/warnings.ml[296,10729+18])
                Texp_ident "Stdlib!.&&"
              [
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[296,10729+2]..lib/warnings.ml[296,10729+15])
                    Texp_apply
                    expression (lib/warnings.ml[296,10729+2]..lib/warnings.ml[296,10729+5])
                      Texp_ident "Stdlib!.not"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[296,10729+6]..lib/warnings.ml[296,10729+15])
                          Texp_apply
                          expression (lib/warnings.ml[296,10729+6]..lib/warnings.ml[296,10729+7])
                            Texp_ident "Stdlib!.!"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[296,10729+7]..lib/warnings.ml[296,10729+15])
                                Texp_ident "disabled/1239"
                          ]
                    ]
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[297,10748+2]..lib/warnings.ml[298,10794+43])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[297,10748+6]..lib/warnings.ml[297,10748+16])
                          Tpat_tuple
                          [
                            pattern (lib/warnings.ml[297,10748+7]..lib/warnings.ml[297,10748+10])
                              Tpat_var "set/1333"
                            pattern (lib/warnings.ml[297,10748+12]..lib/warnings.ml[297,10748+15])
                              Tpat_var "pos/1334"
                          ]
                        expression (lib/warnings.ml[297,10748+19]..lib/warnings.ml[297,10748+42])
                          Texp_field
                          expression (lib/warnings.ml[297,10748+19]..lib/warnings.ml[297,10748+29])
                            Texp_apply
                            expression (lib/warnings.ml[297,10748+20]..lib/warnings.ml[297,10748+21])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[297,10748+21]..lib/warnings.ml[297,10748+28])
                                  Texp_ident "current/1188"
                            ]
                          "alert_errors"
                    ]
                    expression (lib/warnings.ml[298,10794+2]..lib/warnings.ml[298,10794+43])
                      Texp_apply
                      expression (lib/warnings.ml[298,10794+38]..lib/warnings.ml[298,10794+39])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[298,10794+2]..lib/warnings.ml[298,10794+37])
                            Texp_apply
                            expression (lib/warnings.ml[298,10794+2]..lib/warnings.ml[298,10794+28])
                              Texp_ident "Ocaml_ocaml_types!.Misc.Stdlib.String.Set.mem"
                            [
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[298,10794+29]..lib/warnings.ml[298,10794+33])
                                  Texp_ident "kind/1332"
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[298,10794+34]..lib/warnings.ml[298,10794+37])
                                  Texp_ident "set/1333"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[298,10794+40]..lib/warnings.ml[298,10794+43])
                            Texp_ident "pos/1334"
                      ]
              ]
    ]
  structure_item (lib/warnings.ml[300,10839+0]..lib/warnings.ml[309,10989+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[300,10839+4]..lib/warnings.ml[300,10839+14])
          Tpat_var "with_state/1336"
        expression (lib/warnings.ml[300,10839+15]..lib/warnings.ml[309,10989+13]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[300,10839+15]..lib/warnings.ml[300,10839+20])
                Tpat_var "state/1338"
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[300,10839+21]..lib/warnings.ml[300,10839+22])
                Tpat_var "f/1339"
          ]
          Tfunction_body
            expression (lib/warnings.ml[301,10864+2]..lib/warnings.ml[309,10989+13])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[301,10864+6]..lib/warnings.ml[301,10864+10])
                    Tpat_var "prev/1340"
                  expression (lib/warnings.ml[301,10864+13]..lib/warnings.ml[301,10864+22])
                    Texp_apply
                    expression (lib/warnings.ml[301,10864+13]..lib/warnings.ml[301,10864+19])
                      Texp_ident "backup/1243"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[301,10864+20]..lib/warnings.ml[301,10864+22])
                          Texp_construct "()"
                          []
                    ]
              ]
              expression (lib/warnings.ml[302,10890+2]..lib/warnings.ml[309,10989+13])
                Texp_sequence
                expression (lib/warnings.ml[302,10890+2]..lib/warnings.ml[302,10890+15])
                  Texp_apply
                  expression (lib/warnings.ml[302,10890+2]..lib/warnings.ml[302,10890+9])
                    Texp_ident "restore/1246"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[302,10890+10]..lib/warnings.ml[302,10890+15])
                        Texp_ident "state/1338"
                  ]
                expression (lib/warnings.ml[303,10907+2]..lib/warnings.ml[309,10989+13])
                  Texp_try
                  expression (lib/warnings.ml[304,10913+4]..lib/warnings.ml[306,10951+5])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[304,10913+8]..lib/warnings.ml[304,10913+9])
                          Tpat_var "r/1341"
                        expression (lib/warnings.ml[304,10913+12]..lib/warnings.ml[304,10913+16])
                          Texp_apply
                          expression (lib/warnings.ml[304,10913+12]..lib/warnings.ml[304,10913+13])
                            Texp_ident "f/1339"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[304,10913+14]..lib/warnings.ml[304,10913+16])
                                Texp_construct "()"
                                []
                          ]
                    ]
                    expression (lib/warnings.ml[305,10933+4]..lib/warnings.ml[306,10951+5])
                      Texp_sequence
                      expression (lib/warnings.ml[305,10933+4]..lib/warnings.ml[305,10933+16])
                        Texp_apply
                        expression (lib/warnings.ml[305,10933+4]..lib/warnings.ml[305,10933+11])
                          Texp_ident "restore/1246"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[305,10933+12]..lib/warnings.ml[305,10933+16])
                              Texp_ident "prev/1340"
                        ]
                      expression (lib/warnings.ml[306,10951+4]..lib/warnings.ml[306,10951+5])
                        Texp_ident "r/1341"
                  [
                    <case>
                      pattern (lib/warnings.ml[307,10957+7]..lib/warnings.ml[307,10957+10])
                        Tpat_var "exn/1342"
                      expression (lib/warnings.ml[308,10971+4]..lib/warnings.ml[309,10989+13])
                        Texp_sequence
                        expression (lib/warnings.ml[308,10971+4]..lib/warnings.ml[308,10971+16])
                          Texp_apply
                          expression (lib/warnings.ml[308,10971+4]..lib/warnings.ml[308,10971+11])
                            Texp_ident "restore/1246"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[308,10971+12]..lib/warnings.ml[308,10971+16])
                                Texp_ident "prev/1340"
                          ]
                        expression (lib/warnings.ml[309,10989+4]..lib/warnings.ml[309,10989+13])
                          Texp_apply
                          expression (lib/warnings.ml[309,10989+4]..lib/warnings.ml[309,10989+9])
                            Texp_ident "Stdlib!.raise"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[309,10989+10]..lib/warnings.ml[309,10989+13])
                                Texp_ident "exn/1342"
                          ]
                  ]
    ]
  structure_item (lib/warnings.ml[311,11004+0]..lib/warnings.ml[313,11047+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[311,11004+4]..lib/warnings.ml[311,11004+11])
          Tpat_var "mk_lazy/1343"
        expression (lib/warnings.ml[311,11004+12]..lib/warnings.ml[313,11047+27]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[311,11004+12]..lib/warnings.ml[311,11004+13])
                Tpat_var "f/1345"
          ]
          Tfunction_body
            expression (lib/warnings.ml[312,11020+2]..lib/warnings.ml[313,11047+27])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[312,11020+6]..lib/warnings.ml[312,11020+11])
                    Tpat_var "state/1346"
                  expression (lib/warnings.ml[312,11020+14]..lib/warnings.ml[312,11020+23])
                    Texp_apply
                    expression (lib/warnings.ml[312,11020+14]..lib/warnings.ml[312,11020+20])
                      Texp_ident "backup/1243"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[312,11020+21]..lib/warnings.ml[312,11020+23])
                          Texp_construct "()"
                          []
                    ]
              ]
              expression (lib/warnings.ml[313,11047+2]..lib/warnings.ml[313,11047+27])
                Texp_lazy                expression (lib/warnings.ml[313,11047+7]..lib/warnings.ml[313,11047+27])
                  Texp_apply
                  expression (lib/warnings.ml[313,11047+8]..lib/warnings.ml[313,11047+18])
                    Texp_ident "with_state/1336"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[313,11047+19]..lib/warnings.ml[313,11047+24])
                        Texp_ident "state/1346"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[313,11047+25]..lib/warnings.ml[313,11047+26])
                        Texp_ident "f/1345"
                  ]
    ]
  structure_item (lib/warnings.ml[315,11076+0]..lib/warnings.ml[334,11563+43])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[315,11076+4]..lib/warnings.ml[315,11076+13])
          Tpat_var "set_alert/1347"
        expression (lib/warnings.ml[315,11076+14]..lib/warnings.ml[334,11563+43]) ghost
          Texp_function
          [
            Labelled "error"
            Param_pat
              pattern (lib/warnings.ml[315,11076+15]..lib/warnings.ml[315,11076+20])
                Tpat_var "error/1349"
            Labelled "enable"
            Param_pat
              pattern (lib/warnings.ml[315,11076+22]..lib/warnings.ml[315,11076+28])
                Tpat_var "enable/1350"
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[315,11076+29]..lib/warnings.ml[315,11076+30])
                Tpat_var "s/1351"
          ]
          Tfunction_body
            expression (lib/warnings.ml[316,11109+2]..lib/warnings.ml[334,11563+43])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[316,11109+6]..lib/warnings.ml[316,11109+9])
                    Tpat_var "upd/1352"
                  expression (lib/warnings.ml[317,11121+4]..lib/warnings.ml[329,11462+22])
                    Texp_match
                    expression (lib/warnings.ml[317,11121+10]..lib/warnings.ml[317,11121+11])
                      Texp_ident "s/1351"
                    [
                      <case>
                        pattern (lib/warnings.ml[318,11138+6]..lib/warnings.ml[318,11138+11])
                          Tpat_value
                          pattern (lib/warnings.ml[318,11138+6]..lib/warnings.ml[318,11138+11])
                            Tpat_constant Const_string("all",(lib/warnings.ml[318,11138+7]..lib/warnings.ml[318,11138+10]),None)
                        expression (lib/warnings.ml[319,11153+8]..lib/warnings.ml[319,11153+50])
                          Texp_tuple
                          [
                            expression (lib/warnings.ml[319,11153+9]..lib/warnings.ml[319,11153+37])
                              Texp_ident "Ocaml_ocaml_types!.Misc.Stdlib.String.Set.empty"
                            expression (lib/warnings.ml[319,11153+39]..lib/warnings.ml[319,11153+49])
                              Texp_apply
                              expression (lib/warnings.ml[319,11153+39]..lib/warnings.ml[319,11153+42])
                                Texp_ident "Stdlib!.not"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[319,11153+43]..lib/warnings.ml[319,11153+49])
                                    Texp_ident "enable/1350"
                              ]
                          ]
                      <case>
                        pattern (lib/warnings.ml[320,11204+6]..lib/warnings.ml[320,11204+7])
                          Tpat_value
                          pattern (lib/warnings.ml[320,11204+6]..lib/warnings.ml[320,11204+7])
                            Tpat_var "s/1353"
                        expression (lib/warnings.ml[321,11215+8]..lib/warnings.ml[329,11462+22])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/warnings.ml[321,11215+12]..lib/warnings.ml[321,11215+22])
                                Tpat_tuple
                                [
                                  pattern (lib/warnings.ml[321,11215+13]..lib/warnings.ml[321,11215+16])
                                    Tpat_var "set/1354"
                                  pattern (lib/warnings.ml[321,11215+18]..lib/warnings.ml[321,11215+21])
                                    Tpat_var "pos/1355"
                                ]
                              expression (lib/warnings.ml[322,11240+10]..lib/warnings.ml[322,11240+70])
                                Texp_ifthenelse
                                expression (lib/warnings.ml[322,11240+13]..lib/warnings.ml[322,11240+18])
                                  Texp_ident "error/1349"
                                expression (lib/warnings.ml[322,11240+24]..lib/warnings.ml[322,11240+47])
                                  Texp_field
                                  expression (lib/warnings.ml[322,11240+24]..lib/warnings.ml[322,11240+34])
                                    Texp_apply
                                    expression (lib/warnings.ml[322,11240+25]..lib/warnings.ml[322,11240+26])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[322,11240+26]..lib/warnings.ml[322,11240+33])
                                          Texp_ident "current/1188"
                                    ]
                                  "alert_errors"
                                Some
                                  expression (lib/warnings.ml[322,11240+53]..lib/warnings.ml[322,11240+70])
                                    Texp_field
                                    expression (lib/warnings.ml[322,11240+53]..lib/warnings.ml[322,11240+63])
                                      Texp_apply
                                      expression (lib/warnings.ml[322,11240+54]..lib/warnings.ml[322,11240+55])
                                        Texp_ident "Stdlib!.!"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[322,11240+55]..lib/warnings.ml[322,11240+62])
                                            Texp_ident "current/1188"
                                      ]
                                    "alerts"
                          ]
                          expression (lib/warnings.ml[324,11322+8]..lib/warnings.ml[329,11462+22])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/warnings.ml[324,11322+12]..lib/warnings.ml[324,11322+13])
                                  Tpat_var "f/1356"
                                expression (lib/warnings.ml[325,11338+10]..lib/warnings.ml[327,11406+44])
                                  Texp_ifthenelse
                                  expression (lib/warnings.ml[325,11338+13]..lib/warnings.ml[325,11338+25])
                                    Texp_apply
                                    expression (lib/warnings.ml[325,11338+20]..lib/warnings.ml[325,11338+21])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[325,11338+13]..lib/warnings.ml[325,11338+19])
                                          Texp_ident "enable/1350"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[325,11338+22]..lib/warnings.ml[325,11338+25])
                                          Texp_ident "pos/1355"
                                    ]
                                  expression (lib/warnings.ml[326,11364+15]..lib/warnings.ml[326,11364+41])
                                    Texp_ident "Ocaml_ocaml_types!.Misc.Stdlib.String.Set.add"
                                  Some
                                    expression (lib/warnings.ml[327,11406+15]..lib/warnings.ml[327,11406+44])
                                      Texp_ident "Ocaml_ocaml_types!.Misc.Stdlib.String.Set.remove"
                            ]
                            expression (lib/warnings.ml[329,11462+8]..lib/warnings.ml[329,11462+22])
                              Texp_tuple
                              [
                                expression (lib/warnings.ml[329,11462+9]..lib/warnings.ml[329,11462+16])
                                  Texp_apply
                                  expression (lib/warnings.ml[329,11462+9]..lib/warnings.ml[329,11462+10])
                                    Texp_ident "f/1356"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[329,11462+11]..lib/warnings.ml[329,11462+12])
                                        Texp_ident "s/1353"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[329,11462+13]..lib/warnings.ml[329,11462+16])
                                        Texp_ident "set/1354"
                                  ]
                                expression (lib/warnings.ml[329,11462+18]..lib/warnings.ml[329,11462+21])
                                  Texp_ident "pos/1355"
                              ]
                    ]
              ]
              expression (lib/warnings.ml[331,11490+2]..lib/warnings.ml[334,11563+43])
                Texp_ifthenelse
                expression (lib/warnings.ml[331,11490+5]..lib/warnings.ml[331,11490+10])
                  Texp_ident "error/1349"
                expression (lib/warnings.ml[332,11506+4]..lib/warnings.ml[332,11506+49])
                  Texp_apply
                  expression (lib/warnings.ml[332,11506+12]..lib/warnings.ml[332,11506+14])
                    Texp_ident "Stdlib!.:="
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[332,11506+4]..lib/warnings.ml[332,11506+11])
                        Texp_ident "current/1188"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[332,11506+15]..lib/warnings.ml[332,11506+49])
                        Texp_record
                          fields =
                            [
                              <kept>                              <kept>                              <kept>                              "alert_errors"
                                expression (lib/warnings.ml[332,11506+45]..lib/warnings.ml[332,11506+48])
                                  Texp_ident "upd/1352"
                            ]
                          representation =
                            Record_regular
                          extended_expression =
                            Some
                              expression (lib/warnings.ml[332,11506+16]..lib/warnings.ml[332,11506+26])
                                Texp_apply
                                expression (lib/warnings.ml[332,11506+17]..lib/warnings.ml[332,11506+18])
                                  Texp_ident "Stdlib!.!"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[332,11506+18]..lib/warnings.ml[332,11506+25])
                                      Texp_ident "current/1188"
                                ]
                  ]
                Some
                  expression (lib/warnings.ml[334,11563+4]..lib/warnings.ml[334,11563+43])
                    Texp_apply
                    expression (lib/warnings.ml[334,11563+12]..lib/warnings.ml[334,11563+14])
                      Texp_ident "Stdlib!.:="
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[334,11563+4]..lib/warnings.ml[334,11563+11])
                          Texp_ident "current/1188"
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[334,11563+15]..lib/warnings.ml[334,11563+43])
                          Texp_record
                            fields =
                              [
                                <kept>                                <kept>                                "alerts"
                                  expression (lib/warnings.ml[334,11563+39]..lib/warnings.ml[334,11563+42])
                                    Texp_ident "upd/1352"
                                <kept>                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              Some
                                expression (lib/warnings.ml[334,11563+16]..lib/warnings.ml[334,11563+26])
                                  Texp_apply
                                  expression (lib/warnings.ml[334,11563+17]..lib/warnings.ml[334,11563+18])
                                    Texp_ident "Stdlib!.!"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[334,11563+18]..lib/warnings.ml[334,11563+25])
                                        Texp_ident "current/1188"
                                  ]
                    ]
    ]
  structure_item (lib/warnings.ml[336,11608+0]..lib/warnings.ml[366,12690+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[336,11608+4]..lib/warnings.ml[336,11608+22])
          Tpat_var "parse_alert_option/1357"
        expression (lib/warnings.ml[336,11608+23]..lib/warnings.ml[366,12690+8]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[336,11608+23]..lib/warnings.ml[336,11608+24])
                Tpat_var "s/1359"
          ]
          Tfunction_body
            expression (lib/warnings.ml[337,11635+2]..lib/warnings.ml[366,12690+8])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[337,11635+6]..lib/warnings.ml[337,11635+7])
                    Tpat_var "n/1360"
                  expression (lib/warnings.ml[337,11635+10]..lib/warnings.ml[337,11635+25])
                    Texp_apply
                    expression (lib/warnings.ml[337,11635+10]..lib/warnings.ml[337,11635+23])
                      Texp_ident "Stdlib!.String.length"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[337,11635+24]..lib/warnings.ml[337,11635+25])
                          Texp_ident "s/1359"
                    ]
              ]
              expression (lib/warnings.ml[338,11664+2]..lib/warnings.ml[366,12690+8])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/warnings.ml[338,11664+6]..lib/warnings.ml[338,11664+13])
                      Tpat_var "id_char/1361"
                    expression (lib/warnings.ml[338,11664+16]..lib/warnings.ml[340,11747+16])
                      Texp_function
                      []
                      Tfunction_cases (lib/warnings.ml[338,11664+16]..lib/warnings.ml[340,11747+16])
                        [
                          <case>
                            pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+49])
                              Tpat_or
                              pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+38])
                                Tpat_or
                                pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+31])
                                  Tpat_or
                                  pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+25])
                                    Tpat_or
                                    pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14])
                                      Tpat_or
                                      pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                        Tpat_constant Const_char 61
                                      pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                        Tpat_or
                                        pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                          Tpat_constant Const_char 62
                                        pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                          Tpat_or
                                          pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                            Tpat_constant Const_char 63
                                          pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                            Tpat_or
                                            pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                              Tpat_constant Const_char 64
                                            pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                              Tpat_or
                                              pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                Tpat_constant Const_char 65
                                              pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                Tpat_or
                                                pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                  Tpat_constant Const_char 66
                                                pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                  Tpat_or
                                                  pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                    Tpat_constant Const_char 67
                                                  pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                    Tpat_or
                                                    pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                      Tpat_constant Const_char 68
                                                    pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                      Tpat_or
                                                      pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                        Tpat_constant Const_char 69
                                                      pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                        Tpat_or
                                                        pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                          Tpat_constant Const_char 6a
                                                        pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                          Tpat_or
                                                          pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                            Tpat_constant Const_char 6b
                                                          pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                            Tpat_or
                                                            pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                              Tpat_constant Const_char 6c
                                                            pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                              Tpat_or
                                                              pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                Tpat_constant Const_char 6d
                                                              pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                Tpat_or
                                                                pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                  Tpat_constant Const_char 6e
                                                                pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                  Tpat_or
                                                                  pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                    Tpat_constant Const_char 6f
                                                                  pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                    Tpat_or
                                                                    pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                      Tpat_constant Const_char 70
                                                                    pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                      Tpat_or
                                                                      pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                        Tpat_constant Const_char 71
                                                                      pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                        Tpat_or
                                                                        pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                          Tpat_constant Const_char 72
                                                                        pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                          Tpat_or
                                                                          pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                            Tpat_constant Const_char 73
                                                                          pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                            Tpat_or
                                                                            pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                              Tpat_constant Const_char 74
                                                                            pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                              Tpat_or
                                                                              pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                                Tpat_constant Const_char 75
                                                                              pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                                Tpat_or
                                                                                pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                                  Tpat_constant Const_char 76
                                                                                pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                                  Tpat_or
                                                                                  pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                                    Tpat_constant Const_char 77
                                                                                  pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                                    Tpat_or
                                                                                    pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                                      Tpat_constant Const_char 78
                                                                                    pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                                      Tpat_or
                                                                                      pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                                        Tpat_constant Const_char 79
                                                                                      pattern (lib/warnings.ml[339,11689+6]..lib/warnings.ml[339,11689+14]) ghost
                                                                                        Tpat_constant Const_char 7a
                                    pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25])
                                      Tpat_or
                                      pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                        Tpat_constant Const_char 41
                                      pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                        Tpat_or
                                        pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                          Tpat_constant Const_char 42
                                        pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                          Tpat_or
                                          pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                            Tpat_constant Const_char 43
                                          pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                            Tpat_or
                                            pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                              Tpat_constant Const_char 44
                                            pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                              Tpat_or
                                              pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                Tpat_constant Const_char 45
                                              pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                Tpat_or
                                                pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                  Tpat_constant Const_char 46
                                                pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                  Tpat_or
                                                  pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                    Tpat_constant Const_char 47
                                                  pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                    Tpat_or
                                                    pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                      Tpat_constant Const_char 48
                                                    pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                      Tpat_or
                                                      pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                        Tpat_constant Const_char 49
                                                      pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                        Tpat_or
                                                        pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                          Tpat_constant Const_char 4a
                                                        pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                          Tpat_or
                                                          pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                            Tpat_constant Const_char 4b
                                                          pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                            Tpat_or
                                                            pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                              Tpat_constant Const_char 4c
                                                            pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                              Tpat_or
                                                              pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                Tpat_constant Const_char 4d
                                                              pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                Tpat_or
                                                                pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                  Tpat_constant Const_char 4e
                                                                pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                  Tpat_or
                                                                  pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                    Tpat_constant Const_char 4f
                                                                  pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                    Tpat_or
                                                                    pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                      Tpat_constant Const_char 50
                                                                    pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                      Tpat_or
                                                                      pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                        Tpat_constant Const_char 51
                                                                      pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                        Tpat_or
                                                                        pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                          Tpat_constant Const_char 52
                                                                        pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                          Tpat_or
                                                                          pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                            Tpat_constant Const_char 53
                                                                          pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                            Tpat_or
                                                                            pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                              Tpat_constant Const_char 54
                                                                            pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                              Tpat_or
                                                                              pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                                Tpat_constant Const_char 55
                                                                              pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                                Tpat_or
                                                                                pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                                  Tpat_constant Const_char 56
                                                                                pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                                  Tpat_or
                                                                                  pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                                    Tpat_constant Const_char 57
                                                                                  pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                                    Tpat_or
                                                                                    pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                                      Tpat_constant Const_char 58
                                                                                    pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                                      Tpat_or
                                                                                      pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                                        Tpat_constant Const_char 59
                                                                                      pattern (lib/warnings.ml[339,11689+17]..lib/warnings.ml[339,11689+25]) ghost
                                                                                        Tpat_constant Const_char 5a
                                  pattern (lib/warnings.ml[339,11689+28]..lib/warnings.ml[339,11689+31])
                                    Tpat_constant Const_char 5f
                                pattern (lib/warnings.ml[339,11689+34]..lib/warnings.ml[339,11689+38])
                                  Tpat_constant Const_char 27
                              pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49])
                                Tpat_or
                                pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                  Tpat_constant Const_char 30
                                pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                  Tpat_or
                                  pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                    Tpat_constant Const_char 31
                                  pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                    Tpat_or
                                    pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                      Tpat_constant Const_char 32
                                    pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                      Tpat_or
                                      pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                        Tpat_constant Const_char 33
                                      pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                        Tpat_or
                                        pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                          Tpat_constant Const_char 34
                                        pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                          Tpat_or
                                          pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                            Tpat_constant Const_char 35
                                          pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                            Tpat_or
                                            pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                              Tpat_constant Const_char 36
                                            pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                              Tpat_or
                                              pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                                Tpat_constant Const_char 37
                                              pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                                Tpat_or
                                                pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                                  Tpat_constant Const_char 38
                                                pattern (lib/warnings.ml[339,11689+41]..lib/warnings.ml[339,11689+49]) ghost
                                                  Tpat_constant Const_char 39
                            expression (lib/warnings.ml[339,11689+53]..lib/warnings.ml[339,11689+57])
                              Texp_construct "true"
                              []
                          <case>
                            pattern (lib/warnings.ml[340,11747+6]..lib/warnings.ml[340,11747+7])
                              Tpat_any
                            expression (lib/warnings.ml[340,11747+11]..lib/warnings.ml[340,11747+16])
                              Texp_construct "false"
                              []
                        ]
                ]
                expression (lib/warnings.ml[342,11769+2]..lib/warnings.ml[366,12690+8])
                  Texp_let Rec
                  [
                    <def>
                      pattern (lib/warnings.ml[342,11769+10]..lib/warnings.ml[342,11769+18])
                        Tpat_var "parse_id/1364"
                      expression (lib/warnings.ml[342,11769+19]..lib/warnings.ml[343,11792+58]) ghost
                        Texp_function
                        [
                          Nolabel
                          Param_pat
                            pattern (lib/warnings.ml[342,11769+19]..lib/warnings.ml[342,11769+20])
                              Tpat_var "i/1365"
                        ]
                        Tfunction_body
                          expression (lib/warnings.ml[343,11792+4]..lib/warnings.ml[343,11792+58])
                            Texp_ifthenelse
                            expression (lib/warnings.ml[343,11792+7]..lib/warnings.ml[343,11792+29])
                              Texp_apply
                              expression (lib/warnings.ml[343,11792+13]..lib/warnings.ml[343,11792+15])
                                Texp_ident "Stdlib!.&&"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[343,11792+7]..lib/warnings.ml[343,11792+12])
                                    Texp_apply
                                    expression (lib/warnings.ml[343,11792+9]..lib/warnings.ml[343,11792+10])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[343,11792+7]..lib/warnings.ml[343,11792+8])
                                          Texp_ident "i/1365"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[343,11792+11]..lib/warnings.ml[343,11792+12])
                                          Texp_ident "n/1360"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[343,11792+16]..lib/warnings.ml[343,11792+29])
                                    Texp_apply
                                    expression (lib/warnings.ml[343,11792+16]..lib/warnings.ml[343,11792+23])
                                      Texp_ident "id_char/1361"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[343,11792+24]..lib/warnings.ml[343,11792+29])
                                          Texp_apply
                                          expression (lib/warnings.ml[343,11792+24]..lib/warnings.ml[343,11792+29]) ghost
                                            Texp_ident "Stdlib!.String.get"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[343,11792+24]..lib/warnings.ml[343,11792+25])
                                                Texp_ident "s/1359"
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[343,11792+27]..lib/warnings.ml[343,11792+28])
                                                Texp_ident "i/1365"
                                          ]
                                    ]
                              ]
                            expression (lib/warnings.ml[343,11792+35]..lib/warnings.ml[343,11792+51])
                              Texp_apply
                              expression (lib/warnings.ml[343,11792+35]..lib/warnings.ml[343,11792+43])
                                Texp_ident "parse_id/1364"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[343,11792+44]..lib/warnings.ml[343,11792+51])
                                    Texp_apply
                                    expression (lib/warnings.ml[343,11792+47]..lib/warnings.ml[343,11792+48])
                                      Texp_ident "Stdlib!.+"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[343,11792+45]..lib/warnings.ml[343,11792+46])
                                          Texp_ident "i/1365"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[343,11792+49]..lib/warnings.ml[343,11792+50])
                                          Texp_constant Const_int 1
                                    ]
                              ]
                            Some
                              expression (lib/warnings.ml[343,11792+57]..lib/warnings.ml[343,11792+58])
                                Texp_ident "i/1365"
                  ]
                  expression (lib/warnings.ml[345,11856+2]..lib/warnings.ml[366,12690+8])
                    Texp_let Rec
                    [
                      <def>
                        pattern (lib/warnings.ml[345,11856+10]..lib/warnings.ml[345,11856+14])
                          Tpat_var "scan/1366"
                        expression (lib/warnings.ml[345,11856+15]..lib/warnings.ml[358,12448+64]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/warnings.ml[345,11856+15]..lib/warnings.ml[345,11856+16])
                                Tpat_var "i/1368"
                          ]
                          Tfunction_body
                            expression (lib/warnings.ml[346,11875+4]..lib/warnings.ml[358,12448+64])
                              Texp_ifthenelse
                              expression (lib/warnings.ml[346,11875+7]..lib/warnings.ml[346,11875+12])
                                Texp_apply
                                expression (lib/warnings.ml[346,11875+9]..lib/warnings.ml[346,11875+10])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[346,11875+7]..lib/warnings.ml[346,11875+8])
                                      Texp_ident "i/1368"
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[346,11875+11]..lib/warnings.ml[346,11875+12])
                                      Texp_ident "n/1360"
                                ]
                              expression (lib/warnings.ml[346,11875+18]..lib/warnings.ml[346,11875+20])
                                Texp_construct "()"
                                []
                              Some
                                expression (lib/warnings.ml[347,11896+9]..lib/warnings.ml[358,12448+64])
                                  Texp_ifthenelse
                                  expression (lib/warnings.ml[347,11896+12]..lib/warnings.ml[347,11896+21])
                                    Texp_apply
                                    expression (lib/warnings.ml[347,11896+18]..lib/warnings.ml[347,11896+19])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[347,11896+12]..lib/warnings.ml[347,11896+17])
                                          Texp_apply
                                          expression (lib/warnings.ml[347,11896+14]..lib/warnings.ml[347,11896+15])
                                            Texp_ident "Stdlib!.+"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[347,11896+12]..lib/warnings.ml[347,11896+13])
                                                Texp_ident "i/1368"
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[347,11896+16]..lib/warnings.ml[347,11896+17])
                                                Texp_constant Const_int 1
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[347,11896+20]..lib/warnings.ml[347,11896+21])
                                          Texp_ident "n/1360"
                                    ]
                                  expression (lib/warnings.ml[347,11896+27]..lib/warnings.ml[347,11896+78])
                                    Texp_apply
                                    expression (lib/warnings.ml[347,11896+27]..lib/warnings.ml[347,11896+32])
                                      Texp_ident "Stdlib!.raise"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[347,11896+33]..lib/warnings.ml[347,11896+78])
                                          Texp_construct "Arg.Bad"
                                          [
                                            expression (lib/warnings.ml[347,11896+42]..lib/warnings.ml[347,11896+77])
                                              Texp_constant Const_string("Ill-formed list of alert settings",(lib/warnings.ml[347,11896+43]..lib/warnings.ml[347,11896+76]),None)
                                          ]
                                    ]
                                  Some
                                    expression (lib/warnings.ml[348,11975+9]..lib/warnings.ml[358,12448+64])
                                      Texp_match
                                      expression (lib/warnings.ml[348,11975+15]..lib/warnings.ml[348,11975+29])
                                        Texp_tuple
                                        [
                                          expression (lib/warnings.ml[348,11975+15]..lib/warnings.ml[348,11975+20])
                                            Texp_apply
                                            expression (lib/warnings.ml[348,11975+15]..lib/warnings.ml[348,11975+20]) ghost
                                              Texp_ident "Stdlib!.String.get"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[348,11975+15]..lib/warnings.ml[348,11975+16])
                                                  Texp_ident "s/1359"
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[348,11975+18]..lib/warnings.ml[348,11975+19])
                                                  Texp_ident "i/1368"
                                            ]
                                          expression (lib/warnings.ml[348,11975+22]..lib/warnings.ml[348,11975+29])
                                            Texp_apply
                                            expression (lib/warnings.ml[348,11975+22]..lib/warnings.ml[348,11975+29]) ghost
                                              Texp_ident "Stdlib!.String.get"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[348,11975+22]..lib/warnings.ml[348,11975+23])
                                                  Texp_ident "s/1359"
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[348,11975+25]..lib/warnings.ml[348,11975+28])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[348,11975+26]..lib/warnings.ml[348,11975+27])
                                                    Texp_ident "Stdlib!.+"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[348,11975+25]..lib/warnings.ml[348,11975+26])
                                                        Texp_ident "i/1368"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[348,11975+27]..lib/warnings.ml[348,11975+28])
                                                        Texp_constant Const_int 1
                                                  ]
                                            ]
                                        ]
                                      [
                                        <case>
                                          pattern (lib/warnings.ml[349,12010+8]..lib/warnings.ml[349,12010+16])
                                            Tpat_value
                                            pattern (lib/warnings.ml[349,12010+8]..lib/warnings.ml[349,12010+16])
                                              Tpat_tuple
                                              [
                                                pattern (lib/warnings.ml[349,12010+8]..lib/warnings.ml[349,12010+11])
                                                  Tpat_constant Const_char 2b
                                                pattern (lib/warnings.ml[349,12010+13]..lib/warnings.ml[349,12010+16])
                                                  Tpat_constant Const_char 2b
                                              ]
                                          expression (lib/warnings.ml[349,12010+20]..lib/warnings.ml[349,12010+67])
                                            Texp_apply
                                            expression (lib/warnings.ml[349,12010+20]..lib/warnings.ml[349,12010+22])
                                              Texp_ident "id/1367"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[349,12010+23]..lib/warnings.ml[349,12010+59])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[349,12010+24]..lib/warnings.ml[349,12010+33])
                                                    Texp_ident "set_alert/1347"
                                                  [
                                                    <arg>
                                                      Labelled "error"
                                                      expression (lib/warnings.ml[349,12010+41]..lib/warnings.ml[349,12010+45])
                                                        Texp_construct "true"
                                                        []
                                                    <arg>
                                                      Labelled "enable"
                                                      expression (lib/warnings.ml[349,12010+54]..lib/warnings.ml[349,12010+58])
                                                        Texp_construct "true"
                                                        []
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[349,12010+60]..lib/warnings.ml[349,12010+67])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[349,12010+63]..lib/warnings.ml[349,12010+64])
                                                    Texp_ident "Stdlib!.+"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[349,12010+61]..lib/warnings.ml[349,12010+62])
                                                        Texp_ident "i/1368"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[349,12010+65]..lib/warnings.ml[349,12010+66])
                                                        Texp_constant Const_int 2
                                                  ]
                                            ]
                                        <case>
                                          pattern (lib/warnings.ml[350,12078+8]..lib/warnings.ml[350,12078+14])
                                            Tpat_value
                                            pattern (lib/warnings.ml[350,12078+8]..lib/warnings.ml[350,12078+14])
                                              Tpat_tuple
                                              [
                                                pattern (lib/warnings.ml[350,12078+8]..lib/warnings.ml[350,12078+11])
                                                  Tpat_constant Const_char 2b
                                                pattern (lib/warnings.ml[350,12078+13]..lib/warnings.ml[350,12078+14])
                                                  Tpat_any
                                              ]
                                          expression (lib/warnings.ml[350,12078+18]..lib/warnings.ml[350,12078+66])
                                            Texp_apply
                                            expression (lib/warnings.ml[350,12078+18]..lib/warnings.ml[350,12078+20])
                                              Texp_ident "id/1367"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[350,12078+21]..lib/warnings.ml[350,12078+58])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[350,12078+22]..lib/warnings.ml[350,12078+31])
                                                    Texp_ident "set_alert/1347"
                                                  [
                                                    <arg>
                                                      Labelled "error"
                                                      expression (lib/warnings.ml[350,12078+39]..lib/warnings.ml[350,12078+44])
                                                        Texp_construct "false"
                                                        []
                                                    <arg>
                                                      Labelled "enable"
                                                      expression (lib/warnings.ml[350,12078+53]..lib/warnings.ml[350,12078+57])
                                                        Texp_construct "true"
                                                        []
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[350,12078+59]..lib/warnings.ml[350,12078+66])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[350,12078+62]..lib/warnings.ml[350,12078+63])
                                                    Texp_ident "Stdlib!.+"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[350,12078+60]..lib/warnings.ml[350,12078+61])
                                                        Texp_ident "i/1368"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[350,12078+64]..lib/warnings.ml[350,12078+65])
                                                        Texp_constant Const_int 1
                                                  ]
                                            ]
                                        <case>
                                          pattern (lib/warnings.ml[351,12145+8]..lib/warnings.ml[351,12145+16])
                                            Tpat_value
                                            pattern (lib/warnings.ml[351,12145+8]..lib/warnings.ml[351,12145+16])
                                              Tpat_tuple
                                              [
                                                pattern (lib/warnings.ml[351,12145+8]..lib/warnings.ml[351,12145+11])
                                                  Tpat_constant Const_char 2d
                                                pattern (lib/warnings.ml[351,12145+13]..lib/warnings.ml[351,12145+16])
                                                  Tpat_constant Const_char 2d
                                              ]
                                          expression (lib/warnings.ml[351,12145+20]..lib/warnings.ml[351,12145+68])
                                            Texp_apply
                                            expression (lib/warnings.ml[351,12145+20]..lib/warnings.ml[351,12145+22])
                                              Texp_ident "id/1367"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[351,12145+23]..lib/warnings.ml[351,12145+60])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[351,12145+24]..lib/warnings.ml[351,12145+33])
                                                    Texp_ident "set_alert/1347"
                                                  [
                                                    <arg>
                                                      Labelled "error"
                                                      expression (lib/warnings.ml[351,12145+41]..lib/warnings.ml[351,12145+45])
                                                        Texp_construct "true"
                                                        []
                                                    <arg>
                                                      Labelled "enable"
                                                      expression (lib/warnings.ml[351,12145+54]..lib/warnings.ml[351,12145+59])
                                                        Texp_construct "false"
                                                        []
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[351,12145+61]..lib/warnings.ml[351,12145+68])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[351,12145+64]..lib/warnings.ml[351,12145+65])
                                                    Texp_ident "Stdlib!.+"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[351,12145+62]..lib/warnings.ml[351,12145+63])
                                                        Texp_ident "i/1368"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[351,12145+66]..lib/warnings.ml[351,12145+67])
                                                        Texp_constant Const_int 2
                                                  ]
                                            ]
                                        <case>
                                          pattern (lib/warnings.ml[352,12214+8]..lib/warnings.ml[352,12214+14])
                                            Tpat_value
                                            pattern (lib/warnings.ml[352,12214+8]..lib/warnings.ml[352,12214+14])
                                              Tpat_tuple
                                              [
                                                pattern (lib/warnings.ml[352,12214+8]..lib/warnings.ml[352,12214+11])
                                                  Tpat_constant Const_char 2d
                                                pattern (lib/warnings.ml[352,12214+13]..lib/warnings.ml[352,12214+14])
                                                  Tpat_any
                                              ]
                                          expression (lib/warnings.ml[352,12214+18]..lib/warnings.ml[352,12214+67])
                                            Texp_apply
                                            expression (lib/warnings.ml[352,12214+18]..lib/warnings.ml[352,12214+20])
                                              Texp_ident "id/1367"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[352,12214+21]..lib/warnings.ml[352,12214+59])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[352,12214+22]..lib/warnings.ml[352,12214+31])
                                                    Texp_ident "set_alert/1347"
                                                  [
                                                    <arg>
                                                      Labelled "error"
                                                      expression (lib/warnings.ml[352,12214+39]..lib/warnings.ml[352,12214+44])
                                                        Texp_construct "false"
                                                        []
                                                    <arg>
                                                      Labelled "enable"
                                                      expression (lib/warnings.ml[352,12214+53]..lib/warnings.ml[352,12214+58])
                                                        Texp_construct "false"
                                                        []
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[352,12214+60]..lib/warnings.ml[352,12214+67])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[352,12214+63]..lib/warnings.ml[352,12214+64])
                                                    Texp_ident "Stdlib!.+"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[352,12214+61]..lib/warnings.ml[352,12214+62])
                                                        Texp_ident "i/1368"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[352,12214+65]..lib/warnings.ml[352,12214+66])
                                                        Texp_constant Const_int 1
                                                  ]
                                            ]
                                        <case>
                                          pattern (lib/warnings.ml[353,12282+8]..lib/warnings.ml[353,12282+14])
                                            Tpat_value
                                            pattern (lib/warnings.ml[353,12282+8]..lib/warnings.ml[353,12282+14])
                                              Tpat_tuple
                                              [
                                                pattern (lib/warnings.ml[353,12282+8]..lib/warnings.ml[353,12282+11])
                                                  Tpat_constant Const_char 40
                                                pattern (lib/warnings.ml[353,12282+13]..lib/warnings.ml[353,12282+14])
                                                  Tpat_any
                                              ]
                                          expression (lib/warnings.ml[354,12300+10]..lib/warnings.ml[357,12428+19])
                                            Texp_apply
                                            expression (lib/warnings.ml[354,12300+10]..lib/warnings.ml[354,12300+12])
                                              Texp_ident "id/1367"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[354,12300+13]..lib/warnings.ml[356,12375+52])
                                                  Texp_function
                                                  [
                                                    Nolabel
                                                    Param_pat
                                                      pattern (lib/warnings.ml[354,12300+18]..lib/warnings.ml[354,12300+19])
                                                        Tpat_var "s/1390"
                                                  ]
                                                  Tfunction_body
                                                    expression (lib/warnings.ml[355,12323+14]..lib/warnings.ml[356,12375+51])
                                                      Texp_sequence
                                                      expression (lib/warnings.ml[355,12323+14]..lib/warnings.ml[355,12323+50])
                                                        Texp_apply
                                                        expression (lib/warnings.ml[355,12323+14]..lib/warnings.ml[355,12323+23])
                                                          Texp_ident "set_alert/1347"
                                                        [
                                                          <arg>
                                                            Labelled "error"
                                                            expression (lib/warnings.ml[355,12323+31]..lib/warnings.ml[355,12323+35])
                                                              Texp_construct "true"
                                                              []
                                                          <arg>
                                                            Labelled "enable"
                                                            expression (lib/warnings.ml[355,12323+44]..lib/warnings.ml[355,12323+48])
                                                              Texp_construct "true"
                                                              []
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/warnings.ml[355,12323+49]..lib/warnings.ml[355,12323+50])
                                                              Texp_ident "s/1390"
                                                        ]
                                                      expression (lib/warnings.ml[356,12375+14]..lib/warnings.ml[356,12375+51])
                                                        Texp_apply
                                                        expression (lib/warnings.ml[356,12375+14]..lib/warnings.ml[356,12375+23])
                                                          Texp_ident "set_alert/1347"
                                                        [
                                                          <arg>
                                                            Labelled "error"
                                                            expression (lib/warnings.ml[356,12375+31]..lib/warnings.ml[356,12375+36])
                                                              Texp_construct "false"
                                                              []
                                                          <arg>
                                                            Labelled "enable"
                                                            expression (lib/warnings.ml[356,12375+45]..lib/warnings.ml[356,12375+49])
                                                              Texp_construct "true"
                                                              []
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/warnings.ml[356,12375+50]..lib/warnings.ml[356,12375+51])
                                                              Texp_ident "s/1390"
                                                        ]
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[357,12428+12]..lib/warnings.ml[357,12428+19])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[357,12428+15]..lib/warnings.ml[357,12428+16])
                                                    Texp_ident "Stdlib!.+"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[357,12428+13]..lib/warnings.ml[357,12428+14])
                                                        Texp_ident "i/1368"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[357,12428+17]..lib/warnings.ml[357,12428+18])
                                                        Texp_constant Const_int 1
                                                  ]
                                            ]
                                        <case>
                                          pattern (lib/warnings.ml[358,12448+8]..lib/warnings.ml[358,12448+9])
                                            Tpat_value
                                            pattern (lib/warnings.ml[358,12448+8]..lib/warnings.ml[358,12448+9])
                                              Tpat_any
                                          expression (lib/warnings.ml[358,12448+13]..lib/warnings.ml[358,12448+64])
                                            Texp_apply
                                            expression (lib/warnings.ml[358,12448+13]..lib/warnings.ml[358,12448+18])
                                              Texp_ident "Stdlib!.raise"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[358,12448+19]..lib/warnings.ml[358,12448+64])
                                                  Texp_construct "Arg.Bad"
                                                  [
                                                    expression (lib/warnings.ml[358,12448+28]..lib/warnings.ml[358,12448+63])
                                                      Texp_constant Const_string("Ill-formed list of alert settings",(lib/warnings.ml[358,12448+29]..lib/warnings.ml[358,12448+62]),None)
                                                  ]
                                            ]
                                      ]
                      <def>
                        pattern (lib/warnings.ml[359,12513+6]..lib/warnings.ml[359,12513+8])
                          Tpat_var "id/1367"
                        expression (lib/warnings.ml[359,12513+9]..lib/warnings.ml[364,12674+10]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/warnings.ml[359,12513+9]..lib/warnings.ml[359,12513+10])
                                Tpat_var "f/1391"
                            Nolabel
                            Param_pat
                              pattern (lib/warnings.ml[359,12513+11]..lib/warnings.ml[359,12513+12])
                                Tpat_var "i/1392"
                          ]
                          Tfunction_body
                            expression (lib/warnings.ml[360,12528+4]..lib/warnings.ml[364,12674+10])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/warnings.ml[360,12528+8]..lib/warnings.ml[360,12528+9])
                                    Tpat_var "j/1393"
                                  expression (lib/warnings.ml[360,12528+12]..lib/warnings.ml[360,12528+22])
                                    Texp_apply
                                    expression (lib/warnings.ml[360,12528+12]..lib/warnings.ml[360,12528+20])
                                      Texp_ident "parse_id/1364"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[360,12528+21]..lib/warnings.ml[360,12528+22])
                                          Texp_ident "i/1392"
                                    ]
                              ]
                              expression (lib/warnings.ml[361,12554+4]..lib/warnings.ml[364,12674+10])
                                Texp_sequence
                                expression (lib/warnings.ml[361,12554+4]..lib/warnings.ml[361,12554+69])
                                  Texp_ifthenelse
                                  expression (lib/warnings.ml[361,12554+7]..lib/warnings.ml[361,12554+12])
                                    Texp_apply
                                    expression (lib/warnings.ml[361,12554+9]..lib/warnings.ml[361,12554+10])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[361,12554+7]..lib/warnings.ml[361,12554+8])
                                          Texp_ident "j/1393"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[361,12554+11]..lib/warnings.ml[361,12554+12])
                                          Texp_ident "i/1392"
                                    ]
                                  expression (lib/warnings.ml[361,12554+18]..lib/warnings.ml[361,12554+69])
                                    Texp_apply
                                    expression (lib/warnings.ml[361,12554+18]..lib/warnings.ml[361,12554+23])
                                      Texp_ident "Stdlib!.raise"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[361,12554+24]..lib/warnings.ml[361,12554+69])
                                          Texp_construct "Arg.Bad"
                                          [
                                            expression (lib/warnings.ml[361,12554+33]..lib/warnings.ml[361,12554+68])
                                              Texp_constant Const_string("Ill-formed list of alert settings",(lib/warnings.ml[361,12554+34]..lib/warnings.ml[361,12554+67]),None)
                                          ]
                                    ]
                                  None
                                expression (lib/warnings.ml[362,12625+4]..lib/warnings.ml[364,12674+10])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/warnings.ml[362,12625+8]..lib/warnings.ml[362,12625+10])
                                        Tpat_var "id/1394"
                                      expression (lib/warnings.ml[362,12625+13]..lib/warnings.ml[362,12625+35])
                                        Texp_apply
                                        expression (lib/warnings.ml[362,12625+13]..lib/warnings.ml[362,12625+23])
                                          Texp_ident "Stdlib!.String.sub"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[362,12625+24]..lib/warnings.ml[362,12625+25])
                                              Texp_ident "s/1359"
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[362,12625+26]..lib/warnings.ml[362,12625+27])
                                              Texp_ident "i/1392"
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[362,12625+28]..lib/warnings.ml[362,12625+35])
                                              Texp_apply
                                              expression (lib/warnings.ml[362,12625+31]..lib/warnings.ml[362,12625+32])
                                                Texp_ident "Stdlib!.-"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[362,12625+29]..lib/warnings.ml[362,12625+30])
                                                    Texp_ident "j/1393"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[362,12625+33]..lib/warnings.ml[362,12625+34])
                                                    Texp_ident "i/1392"
                                              ]
                                        ]
                                  ]
                                  expression (lib/warnings.ml[363,12664+4]..lib/warnings.ml[364,12674+10])
                                    Texp_sequence
                                    expression (lib/warnings.ml[363,12664+4]..lib/warnings.ml[363,12664+8])
                                      Texp_apply
                                      expression (lib/warnings.ml[363,12664+4]..lib/warnings.ml[363,12664+5])
                                        Texp_ident "f/1391"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[363,12664+6]..lib/warnings.ml[363,12664+8])
                                            Texp_ident "id/1394"
                                      ]
                                    expression (lib/warnings.ml[364,12674+4]..lib/warnings.ml[364,12674+10])
                                      Texp_apply
                                      expression (lib/warnings.ml[364,12674+4]..lib/warnings.ml[364,12674+8])
                                        Texp_ident "scan/1366"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[364,12674+9]..lib/warnings.ml[364,12674+10])
                                            Texp_ident "j/1393"
                                      ]
                    ]
                    expression (lib/warnings.ml[366,12690+2]..lib/warnings.ml[366,12690+8])
                      Texp_apply
                      expression (lib/warnings.ml[366,12690+2]..lib/warnings.ml[366,12690+6])
                        Texp_ident "scan/1366"
                      [
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[366,12690+7]..lib/warnings.ml[366,12690+8])
                            Texp_constant Const_int 0
                      ]
    ]
  structure_item (lib/warnings.ml[368,12700+0]..lib/warnings.ml[371,12754+11])
    Tstr_type Rec
    [
      type_declaration modifier/1395 (lib/warnings.ml[368,12700+0]..lib/warnings.ml[371,12754+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/warnings.ml[369,12716+2]..lib/warnings.ml[369,12716+7])
                Set/1396
                attribute "ocaml.doc"
                  [
                    structure_item (lib/warnings.ml[369,12716+8]..[369,12716+17])
                      Pstr_eval
                      expression (lib/warnings.ml[369,12716+8]..[369,12716+17])
                        Pexp_constant PConst_string(" +a ",(lib/warnings.ml[369,12716+8]..[369,12716+17]),None)
                  ]
                []
                None
              (lib/warnings.ml[370,12734+2]..lib/warnings.ml[370,12734+9])
                Clear/1397
                attribute "ocaml.doc"
                  [
                    structure_item (lib/warnings.ml[370,12734+10]..[370,12734+19])
                      Pstr_eval
                      expression (lib/warnings.ml[370,12734+10]..[370,12734+19])
                        Pexp_constant PConst_string(" -a ",(lib/warnings.ml[370,12734+10]..[370,12734+19]),None)
                  ]
                []
                None
              (lib/warnings.ml[371,12754+2]..lib/warnings.ml[371,12754+11])
                Set_all/1398
                attribute "ocaml.doc"
                  [
                    structure_item (lib/warnings.ml[371,12754+12]..[371,12754+21])
                      Pstr_eval
                      expression (lib/warnings.ml[371,12754+12]..[371,12754+21])
                        Pexp_constant PConst_string(" @a ",(lib/warnings.ml[371,12754+12]..[371,12754+21]),None)
                  ]
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[373,12777+0]..lib/warnings.ml[375,12827+31])
    Tstr_type Rec
    [
      type_declaration token/1399 (lib/warnings.ml[373,12777+0]..lib/warnings.ml[375,12827+31])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/warnings.ml[374,12790+2]..lib/warnings.ml[374,12790+36])
                Letter/1400
                [
                  core_type (lib/warnings.ml[374,12790+14]..lib/warnings.ml[374,12790+18])
                    Ttyp_constr "char/2!"
                    []
                  core_type (lib/warnings.ml[374,12790+21]..lib/warnings.ml[374,12790+36])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/warnings.ml[374,12790+21]..lib/warnings.ml[374,12790+29])
                        Ttyp_constr "modifier/1395"
                        []
                    ]
                ]
                None
              (lib/warnings.ml[375,12827+2]..lib/warnings.ml[375,12827+31])
                Num/1401
                [
                  core_type (lib/warnings.ml[375,12827+11]..lib/warnings.ml[375,12827+14])
                    Ttyp_constr "int/1!"
                    []
                  core_type (lib/warnings.ml[375,12827+17]..lib/warnings.ml[375,12827+20])
                    Ttyp_constr "int/1!"
                    []
                  core_type (lib/warnings.ml[375,12827+23]..lib/warnings.ml[375,12827+31])
                    Ttyp_constr "modifier/1395"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[377,12860+0]..lib/warnings.ml[379,12947+54])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[377,12860+4]..lib/warnings.ml[377,12860+21])
          Tpat_var "ghost_loc_in_file/1402"
        expression (lib/warnings.ml[377,12860+22]..lib/warnings.ml[379,12947+54]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[377,12860+22]..lib/warnings.ml[377,12860+26])
                Tpat_var "name/1404"
          ]
          Tfunction_body
            expression (lib/warnings.ml[378,12889+2]..lib/warnings.ml[379,12947+54])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[378,12889+6]..lib/warnings.ml[378,12889+9])
                    Tpat_var "pos/1405"
                  expression (lib/warnings.ml[378,12889+12]..lib/warnings.ml[378,12889+54])
                    Texp_record
                      fields =
                        [
                          "pos_fname"
                            expression (lib/warnings.ml[378,12889+48]..lib/warnings.ml[378,12889+52])
                              Texp_ident "name/1404"
                          <kept>                          <kept>                          <kept>                        ]
                      representation =
                        Record_regular
                      extended_expression =
                        Some
                          expression (lib/warnings.ml[378,12889+14]..lib/warnings.ml[378,12889+30])
                            Texp_ident "Stdlib!.Lexing.dummy_pos"
              ]
              expression (lib/warnings.ml[379,12947+2]..lib/warnings.ml[379,12947+54])
                Texp_record
                  fields =
                    [
                      "loc_start"
                        expression (lib/warnings.ml[379,12947+16]..lib/warnings.ml[379,12947+19])
                          Texp_ident "pos/1405"
                      "loc_end"
                        expression (lib/warnings.ml[379,12947+31]..lib/warnings.ml[379,12947+34])
                          Texp_ident "pos/1405"
                      "loc_ghost"
                        expression (lib/warnings.ml[379,12947+48]..lib/warnings.ml[379,12947+52])
                          Texp_construct "true"
                          []
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
    ]
  structure_item (lib/warnings.ml[381,13003+0]..lib/warnings.ml[448,15341+7])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[381,13003+4]..lib/warnings.ml[381,13003+16])
          Tpat_var "letter_alert/1406"
        expression (lib/warnings.ml[381,13003+17]..lib/warnings.ml[448,15341+7]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[381,13003+17]..lib/warnings.ml[381,13003+23])
                Tpat_var "tokens/1408"
          ]
          Tfunction_body
            expression (lib/warnings.ml[382,13029+2]..lib/warnings.ml[448,15341+7])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[382,13029+6]..lib/warnings.ml[382,13029+24])
                    Tpat_var "print_warning_char/1409"
                  expression (lib/warnings.ml[382,13029+25]..lib/warnings.ml[385,13142+40]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/warnings.ml[382,13029+25]..lib/warnings.ml[382,13029+28])
                          Tpat_var "ppf/1411"
                      Nolabel
                      Param_pat
                        pattern (lib/warnings.ml[382,13029+29]..lib/warnings.ml[382,13029+30])
                          Tpat_var "c/1412"
                    ]
                    Tfunction_body
                      expression (lib/warnings.ml[383,13062+4]..lib/warnings.ml[385,13142+40])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/warnings.ml[383,13062+8]..lib/warnings.ml[383,13062+17])
                              Tpat_var "lowercase/1413"
                            expression (lib/warnings.ml[383,13062+20]..lib/warnings.ml[383,13062+46])
                              Texp_apply
                              expression (lib/warnings.ml[383,13062+43]..lib/warnings.ml[383,13062+44])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[383,13062+20]..lib/warnings.ml[383,13062+42])
                                    Texp_apply
                                    expression (lib/warnings.ml[383,13062+20]..lib/warnings.ml[383,13062+40])
                                      Texp_ident "Stdlib!.Char.lowercase_ascii"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[383,13062+41]..lib/warnings.ml[383,13062+42])
                                          Texp_ident "c/1412"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[383,13062+45]..lib/warnings.ml[383,13062+46])
                                    Texp_ident "c/1412"
                              ]
                        ]
                        expression (lib/warnings.ml[384,13112+4]..lib/warnings.ml[385,13142+40])
                          Texp_apply
                          expression (lib/warnings.ml[384,13112+4]..lib/warnings.ml[384,13112+18])
                            Texp_ident "Stdlib!.Format.fprintf"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[384,13112+19]..lib/warnings.ml[384,13112+22])
                                Texp_ident "ppf/1411"
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[384,13112+23]..lib/warnings.ml[384,13112+29])
                                Texp_construct "CamlinternalFormatBasics.Format"
                                [
                                  expression (lib/warnings.ml[384,13112+23]..lib/warnings.ml[384,13112+29]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Char"
                                    [
                                      expression (lib/warnings.ml[384,13112+23]..lib/warnings.ml[384,13112+29]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Char"
                                        [
                                          expression (lib/warnings.ml[384,13112+23]..lib/warnings.ml[384,13112+29]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                    ]
                                  expression (lib/warnings.ml[384,13112+23]..lib/warnings.ml[384,13112+29]) ghost
                                    Texp_constant Const_string("%c%c",(lib/warnings.ml[384,13112+23]..lib/warnings.ml[384,13112+29]) ghost,None)
                                ]
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[385,13142+6]..lib/warnings.ml[385,13142+38])
                                Texp_ifthenelse
                                expression (lib/warnings.ml[385,13142+10]..lib/warnings.ml[385,13142+19])
                                  Texp_ident "lowercase/1413"
                                expression (lib/warnings.ml[385,13142+25]..lib/warnings.ml[385,13142+28])
                                  Texp_constant Const_char 2d
                                Some
                                  expression (lib/warnings.ml[385,13142+34]..lib/warnings.ml[385,13142+37])
                                    Texp_constant Const_char 2b
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[385,13142+39]..lib/warnings.ml[385,13142+40])
                                Texp_ident "c/1412"
                          ]
              ]
              expression (lib/warnings.ml[387,13188+2]..lib/warnings.ml[448,15341+7])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/warnings.ml[387,13188+6]..lib/warnings.ml[387,13188+20])
                      Tpat_var "print_modifier/1764"
                    expression (lib/warnings.ml[387,13188+21]..lib/warnings.ml[390,13302+35]) ghost
                      Texp_function
                      [
                        Nolabel
                        Param_pat
                          pattern (lib/warnings.ml[387,13188+21]..lib/warnings.ml[387,13188+24])
                            Tpat_var "ppf/1766"
                      ]
                      Tfunction_cases (lib/warnings.ml[387,13188+27]..lib/warnings.ml[390,13302+35])
                        [
                          <case>
                            pattern (lib/warnings.ml[388,13224+6]..lib/warnings.ml[388,13224+13])
                              Tpat_construct "Set_all"
                              []
                              None
                            expression (lib/warnings.ml[388,13224+17]..lib/warnings.ml[388,13224+39])
                              Texp_apply
                              expression (lib/warnings.ml[388,13224+17]..lib/warnings.ml[388,13224+31])
                                Texp_ident "Stdlib!.Format.fprintf"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[388,13224+32]..lib/warnings.ml[388,13224+35])
                                    Texp_ident "ppf/1766"
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[388,13224+36]..lib/warnings.ml[388,13224+39])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (lib/warnings.ml[388,13224+36]..lib/warnings.ml[388,13224+39]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Char_literal"
                                        [
                                          expression (lib/warnings.ml[388,13224+36]..lib/warnings.ml[388,13224+39]) ghost
                                            Texp_constant Const_char 40
                                          expression (lib/warnings.ml[388,13224+36]..lib/warnings.ml[388,13224+39]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                      expression (lib/warnings.ml[388,13224+36]..lib/warnings.ml[388,13224+39]) ghost
                                        Texp_constant Const_string("@",(lib/warnings.ml[388,13224+36]..lib/warnings.ml[388,13224+39]) ghost,None)
                                    ]
                              ]
                          <case>
                            pattern (lib/warnings.ml[389,13264+6]..lib/warnings.ml[389,13264+11])
                              Tpat_construct "Clear"
                              []
                              None
                            expression (lib/warnings.ml[389,13264+15]..lib/warnings.ml[389,13264+37])
                              Texp_apply
                              expression (lib/warnings.ml[389,13264+15]..lib/warnings.ml[389,13264+29])
                                Texp_ident "Stdlib!.Format.fprintf"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[389,13264+30]..lib/warnings.ml[389,13264+33])
                                    Texp_ident "ppf/1766"
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[389,13264+34]..lib/warnings.ml[389,13264+37])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (lib/warnings.ml[389,13264+34]..lib/warnings.ml[389,13264+37]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Char_literal"
                                        [
                                          expression (lib/warnings.ml[389,13264+34]..lib/warnings.ml[389,13264+37]) ghost
                                            Texp_constant Const_char 2d
                                          expression (lib/warnings.ml[389,13264+34]..lib/warnings.ml[389,13264+37]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                      expression (lib/warnings.ml[389,13264+34]..lib/warnings.ml[389,13264+37]) ghost
                                        Texp_constant Const_string("-",(lib/warnings.ml[389,13264+34]..lib/warnings.ml[389,13264+37]) ghost,None)
                                    ]
                              ]
                          <case>
                            pattern (lib/warnings.ml[390,13302+6]..lib/warnings.ml[390,13302+9])
                              Tpat_construct "Set"
                              []
                              None
                            expression (lib/warnings.ml[390,13302+13]..lib/warnings.ml[390,13302+35])
                              Texp_apply
                              expression (lib/warnings.ml[390,13302+13]..lib/warnings.ml[390,13302+27])
                                Texp_ident "Stdlib!.Format.fprintf"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[390,13302+28]..lib/warnings.ml[390,13302+31])
                                    Texp_ident "ppf/1766"
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[390,13302+32]..lib/warnings.ml[390,13302+35])
                                    Texp_construct "CamlinternalFormatBasics.Format"
                                    [
                                      expression (lib/warnings.ml[390,13302+32]..lib/warnings.ml[390,13302+35]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Char_literal"
                                        [
                                          expression (lib/warnings.ml[390,13302+32]..lib/warnings.ml[390,13302+35]) ghost
                                            Texp_constant Const_char 2b
                                          expression (lib/warnings.ml[390,13302+32]..lib/warnings.ml[390,13302+35]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                      expression (lib/warnings.ml[390,13302+32]..lib/warnings.ml[390,13302+35]) ghost
                                        Texp_constant Const_string("+",(lib/warnings.ml[390,13302+32]..lib/warnings.ml[390,13302+35]) ghost,None)
                                    ]
                              ]
                        ]
                ]
                expression (lib/warnings.ml[392,13343+2]..lib/warnings.ml[448,15341+7])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/warnings.ml[392,13343+6]..lib/warnings.ml[392,13343+17])
                        Tpat_var "print_token/1768"
                      expression (lib/warnings.ml[392,13343+18]..lib/warnings.ml[398,13611+48]) ghost
                        Texp_function
                        [
                          Nolabel
                          Param_pat
                            pattern (lib/warnings.ml[392,13343+18]..lib/warnings.ml[392,13343+21])
                              Tpat_var "ppf/1770"
                        ]
                        Tfunction_cases (lib/warnings.ml[392,13343+24]..lib/warnings.ml[398,13611+48])
                          [
                            <case>
                              pattern (lib/warnings.ml[393,13376+6]..lib/warnings.ml[393,13376+17])
                                Tpat_construct "Num"
                                [
                                  pattern (lib/warnings.ml[393,13376+11]..lib/warnings.ml[393,13376+12])
                                    Tpat_var "a/1771"
                                  pattern (lib/warnings.ml[393,13376+13]..lib/warnings.ml[393,13376+14])
                                    Tpat_var "b/1772"
                                  pattern (lib/warnings.ml[393,13376+15]..lib/warnings.ml[393,13376+16])
                                    Tpat_var "m/1773"
                                ]
                                None
                              expression (lib/warnings.ml[393,13376+21]..lib/warnings.ml[396,13479+60])
                                Texp_ifthenelse
                                expression (lib/warnings.ml[393,13376+24]..lib/warnings.ml[393,13376+29])
                                  Texp_apply
                                  expression (lib/warnings.ml[393,13376+26]..lib/warnings.ml[393,13376+27])
                                    Texp_ident "Stdlib!.="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[393,13376+24]..lib/warnings.ml[393,13376+25])
                                        Texp_ident "a/1771"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[393,13376+28]..lib/warnings.ml[393,13376+29])
                                        Texp_ident "b/1772"
                                  ]
                                expression (lib/warnings.ml[394,13411+10]..lib/warnings.ml[394,13411+54])
                                  Texp_apply
                                  expression (lib/warnings.ml[394,13411+10]..lib/warnings.ml[394,13411+24])
                                    Texp_ident "Stdlib!.Format.fprintf"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[394,13411+25]..lib/warnings.ml[394,13411+28])
                                        Texp_ident "ppf/1770"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[394,13411+29]..lib/warnings.ml[394,13411+35])
                                        Texp_construct "CamlinternalFormatBasics.Format"
                                        [
                                          expression (lib/warnings.ml[394,13411+29]..lib/warnings.ml[394,13411+35]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Alpha"
                                            [
                                              expression (lib/warnings.ml[394,13411+29]..lib/warnings.ml[394,13411+35]) ghost
                                                Texp_construct "CamlinternalFormatBasics.Int"
                                                [
                                                  expression (lib/warnings.ml[394,13411+29]..lib/warnings.ml[394,13411+35]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Int_d"
                                                    []
                                                  expression (lib/warnings.ml[394,13411+29]..lib/warnings.ml[394,13411+35]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                    []
                                                  expression (lib/warnings.ml[394,13411+29]..lib/warnings.ml[394,13411+35]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_precision"
                                                    []
                                                  expression (lib/warnings.ml[394,13411+29]..lib/warnings.ml[394,13411+35]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                    []
                                                ]
                                            ]
                                          expression (lib/warnings.ml[394,13411+29]..lib/warnings.ml[394,13411+35]) ghost
                                            Texp_constant Const_string("%a%d",(lib/warnings.ml[394,13411+29]..lib/warnings.ml[394,13411+35]) ghost,None)
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[394,13411+36]..lib/warnings.ml[394,13411+50])
                                        Texp_ident "print_modifier/1764"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[394,13411+51]..lib/warnings.ml[394,13411+52])
                                        Texp_ident "m/1773"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[394,13411+53]..lib/warnings.ml[394,13411+54])
                                        Texp_ident "a/1771"
                                  ]
                                Some
                                  expression (lib/warnings.ml[396,13479+10]..lib/warnings.ml[396,13479+60])
                                    Texp_apply
                                    expression (lib/warnings.ml[396,13479+10]..lib/warnings.ml[396,13479+24])
                                      Texp_ident "Stdlib!.Format.fprintf"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[396,13479+25]..lib/warnings.ml[396,13479+28])
                                          Texp_ident "ppf/1770"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39])
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Alpha"
                                              [
                                                expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Int"
                                                  [
                                                    expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Int_d"
                                                      []
                                                    expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.No_padding"
                                                      []
                                                    expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.No_precision"
                                                      []
                                                    expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                      [
                                                        expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                                          Texp_constant Const_string("..",(lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost,None)
                                                        expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Int"
                                                          [
                                                            expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.Int_d"
                                                              []
                                                            expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                              []
                                                            expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.No_precision"
                                                              []
                                                            expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                            expression (lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost
                                              Texp_constant Const_string("%a%d..%d",(lib/warnings.ml[396,13479+29]..lib/warnings.ml[396,13479+39]) ghost,None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[396,13479+40]..lib/warnings.ml[396,13479+54])
                                          Texp_ident "print_modifier/1764"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[396,13479+55]..lib/warnings.ml[396,13479+56])
                                          Texp_ident "m/1773"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[396,13479+57]..lib/warnings.ml[396,13479+58])
                                          Texp_ident "a/1771"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[396,13479+59]..lib/warnings.ml[396,13479+60])
                                          Texp_ident "b/1772"
                                    ]
                            <case>
                              pattern (lib/warnings.ml[397,13540+6]..lib/warnings.ml[397,13540+22])
                                Tpat_construct "Letter"
                                [
                                  pattern (lib/warnings.ml[397,13540+13]..lib/warnings.ml[397,13540+14])
                                    Tpat_var "l/1774"
                                  pattern (lib/warnings.ml[397,13540+15]..lib/warnings.ml[397,13540+21])
                                    Tpat_construct "Some"
                                    [
                                      pattern (lib/warnings.ml[397,13540+20]..lib/warnings.ml[397,13540+21])
                                        Tpat_var "m/1775"
                                    ]
                                    None
                                ]
                                None
                              expression (lib/warnings.ml[397,13540+26]..lib/warnings.ml[397,13540+70])
                                Texp_apply
                                expression (lib/warnings.ml[397,13540+26]..lib/warnings.ml[397,13540+40])
                                  Texp_ident "Stdlib!.Format.fprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[397,13540+41]..lib/warnings.ml[397,13540+44])
                                      Texp_ident "ppf/1770"
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[397,13540+45]..lib/warnings.ml[397,13540+51])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (lib/warnings.ml[397,13540+45]..lib/warnings.ml[397,13540+51]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Alpha"
                                          [
                                            expression (lib/warnings.ml[397,13540+45]..lib/warnings.ml[397,13540+51]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Char"
                                              [
                                                expression (lib/warnings.ml[397,13540+45]..lib/warnings.ml[397,13540+51]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                  []
                                              ]
                                          ]
                                        expression (lib/warnings.ml[397,13540+45]..lib/warnings.ml[397,13540+51]) ghost
                                          Texp_constant Const_string("%a%c",(lib/warnings.ml[397,13540+45]..lib/warnings.ml[397,13540+51]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[397,13540+52]..lib/warnings.ml[397,13540+66])
                                      Texp_ident "print_modifier/1764"
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[397,13540+67]..lib/warnings.ml[397,13540+68])
                                      Texp_ident "m/1775"
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[397,13540+69]..lib/warnings.ml[397,13540+70])
                                      Texp_ident "l/1774"
                                ]
                            <case>
                              pattern (lib/warnings.ml[398,13611+6]..lib/warnings.ml[398,13611+20])
                                Tpat_construct "Letter"
                                [
                                  pattern (lib/warnings.ml[398,13611+13]..lib/warnings.ml[398,13611+14])
                                    Tpat_var "l/1776"
                                  pattern (lib/warnings.ml[398,13611+15]..lib/warnings.ml[398,13611+19])
                                    Tpat_construct "None"
                                    []
                                    None
                                ]
                                None
                              expression (lib/warnings.ml[398,13611+24]..lib/warnings.ml[398,13611+48])
                                Texp_apply
                                expression (lib/warnings.ml[398,13611+24]..lib/warnings.ml[398,13611+42])
                                  Texp_ident "print_warning_char/1409"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[398,13611+43]..lib/warnings.ml[398,13611+46])
                                      Texp_ident "ppf/1770"
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[398,13611+47]..lib/warnings.ml[398,13611+48])
                                      Texp_ident "l/1776"
                                ]
                          ]
                  ]
                  expression (lib/warnings.ml[400,13665+2]..lib/warnings.ml[448,15341+7])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[400,13665+6]..lib/warnings.ml[400,13665+25])
                          Tpat_var "consecutive_letters/1778"
                        expression (lib/warnings.ml[403,13835+4]..lib/warnings.ml[414,14189+27])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/warnings.ml[403,13835+8]..lib/warnings.ml[403,13835+20])
                                Tpat_var "commit_chunk/1779"
                              expression (lib/warnings.ml[403,13835+21]..lib/warnings.ml[405,13893+51]) ghost
                                Texp_function
                                [
                                  Nolabel
                                  Param_pat
                                    pattern (lib/warnings.ml[403,13835+21]..lib/warnings.ml[403,13835+22])
                                      Tpat_var "l/1781"
                                ]
                                Tfunction_cases (lib/warnings.ml[403,13835+25]..lib/warnings.ml[405,13893+51])
                                  [
                                    <case>
                                      pattern (lib/warnings.ml[404,13869+8]..lib/warnings.ml[404,13869+18])
                                        Tpat_or
                                        pattern (lib/warnings.ml[404,13869+8]..lib/warnings.ml[404,13869+10])
                                          Tpat_construct "[]"
                                          []
                                          None
                                        pattern (lib/warnings.ml[404,13869+13]..lib/warnings.ml[404,13869+18])
                                          Tpat_construct "::"
                                          [
                                            pattern (lib/warnings.ml[404,13869+15]..lib/warnings.ml[404,13869+16])
                                              Tpat_any
                                            pattern (lib/warnings.ml[404,13869+17]..lib/warnings.ml[404,13869+18]) ghost
                                              Tpat_construct "[]"
                                              []
                                              None
                                          ]
                                          None
                                      expression (lib/warnings.ml[404,13869+22]..lib/warnings.ml[404,13869+23])
                                        Texp_ident "l/1781"
                                    <case>
                                      pattern (lib/warnings.ml[405,13893+8]..lib/warnings.ml[405,13893+28])
                                        Tpat_alias "chunk/1782"
                                        pattern (lib/warnings.ml[405,13893+8]..lib/warnings.ml[405,13893+19])
                                          Tpat_construct "::"
                                          [
                                            pattern (lib/warnings.ml[405,13893+8]..lib/warnings.ml[405,13893+9])
                                              Tpat_any
                                            pattern (lib/warnings.ml[405,13893+13]..lib/warnings.ml[405,13893+19])
                                              Tpat_construct "::"
                                              [
                                                pattern (lib/warnings.ml[405,13893+13]..lib/warnings.ml[405,13893+14])
                                                  Tpat_any
                                                pattern (lib/warnings.ml[405,13893+18]..lib/warnings.ml[405,13893+19])
                                                  Tpat_any
                                              ]
                                              None
                                          ]
                                          None
                                      expression (lib/warnings.ml[405,13893+32]..lib/warnings.ml[405,13893+51])
                                        Texp_construct "::"
                                        [
                                          expression (lib/warnings.ml[405,13893+32]..lib/warnings.ml[405,13893+46])
                                            Texp_apply
                                            expression (lib/warnings.ml[405,13893+32]..lib/warnings.ml[405,13893+40])
                                              Texp_ident "Stdlib!.List.rev"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[405,13893+41]..lib/warnings.ml[405,13893+46])
                                                  Texp_ident "chunk/1782"
                                            ]
                                          expression (lib/warnings.ml[405,13893+50]..lib/warnings.ml[405,13893+51])
                                            Texp_ident "l/1781"
                                        ]
                                  ]
                          ]
                          expression (lib/warnings.ml[407,13952+4]..lib/warnings.ml[414,14189+27])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/warnings.ml[407,13952+8]..lib/warnings.ml[407,13952+33])
                                  Tpat_var "group_consecutive_letters/1783"
                                expression (lib/warnings.ml[407,13952+34]..lib/warnings.ml[409,14051+39]) ghost
                                  Texp_function
                                  [
                                    Nolabel
                                    Param_pat
                                      pattern (lib/warnings.ml[407,13952+34]..lib/warnings.ml[407,13952+45])
                                        Tpat_tuple
                                        [
                                          pattern (lib/warnings.ml[407,13952+35]..lib/warnings.ml[407,13952+36])
                                            Tpat_var "l/1785"
                                          pattern (lib/warnings.ml[407,13952+37]..lib/warnings.ml[407,13952+44])
                                            Tpat_var "current/1786"
                                        ]
                                  ]
                                  Tfunction_cases (lib/warnings.ml[407,13952+48]..lib/warnings.ml[409,14051+39])
                                    [
                                      <case>
                                        pattern (lib/warnings.ml[408,14009+6]..lib/warnings.ml[408,14009+22])
                                          Tpat_construct "Letter"
                                          [
                                            pattern (lib/warnings.ml[408,14009+14]..lib/warnings.ml[408,14009+15])
                                              Tpat_var "x/1787"
                                            pattern (lib/warnings.ml[408,14009+17]..lib/warnings.ml[408,14009+21])
                                              Tpat_construct "None"
                                              []
                                              None
                                          ]
                                          None
                                        expression (lib/warnings.ml[408,14009+26]..lib/warnings.ml[408,14009+41])
                                          Texp_tuple
                                          [
                                            expression (lib/warnings.ml[408,14009+27]..lib/warnings.ml[408,14009+28])
                                              Texp_ident "l/1785"
                                            expression (lib/warnings.ml[408,14009+30]..lib/warnings.ml[408,14009+40])
                                              Texp_construct "::"
                                              [
                                                expression (lib/warnings.ml[408,14009+30]..lib/warnings.ml[408,14009+31])
                                                  Texp_ident "x/1787"
                                                expression (lib/warnings.ml[408,14009+33]..lib/warnings.ml[408,14009+40])
                                                  Texp_ident "current/1786"
                                              ]
                                          ]
                                      <case>
                                        pattern (lib/warnings.ml[409,14051+6]..lib/warnings.ml[409,14051+7])
                                          Tpat_any
                                        expression (lib/warnings.ml[409,14051+11]..lib/warnings.ml[409,14051+39])
                                          Texp_tuple
                                          [
                                            expression (lib/warnings.ml[409,14051+12]..lib/warnings.ml[409,14051+34])
                                              Texp_apply
                                              expression (lib/warnings.ml[409,14051+12]..lib/warnings.ml[409,14051+24])
                                                Texp_ident "commit_chunk/1779"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[409,14051+25]..lib/warnings.ml[409,14051+26])
                                                    Texp_ident "l/1785"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[409,14051+27]..lib/warnings.ml[409,14051+34])
                                                    Texp_ident "current/1786"
                                              ]
                                            expression (lib/warnings.ml[409,14051+36]..lib/warnings.ml[409,14051+38])
                                              Texp_construct "[]"
                                              []
                                          ]
                                    ]
                            ]
                            expression (lib/warnings.ml[411,14098+4]..lib/warnings.ml[414,14189+27])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/warnings.ml[411,14098+8]..lib/warnings.ml[411,14098+19])
                                    Tpat_tuple
                                    [
                                      pattern (lib/warnings.ml[411,14098+8]..lib/warnings.ml[411,14098+9])
                                        Tpat_var "l/1790"
                                      pattern (lib/warnings.ml[411,14098+11]..lib/warnings.ml[411,14098+19])
                                        Tpat_var "on_going/1791"
                                    ]
                                  expression (lib/warnings.ml[412,14120+6]..lib/warnings.ml[412,14120+61])
                                    Texp_apply
                                    expression (lib/warnings.ml[412,14120+6]..lib/warnings.ml[412,14120+20])
                                      Texp_ident "Stdlib!.List.fold_left"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[412,14120+21]..lib/warnings.ml[412,14120+46])
                                          Texp_ident "group_consecutive_letters/1783"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[412,14120+47]..lib/warnings.ml[412,14120+54])
                                          Texp_tuple
                                          [
                                            expression (lib/warnings.ml[412,14120+48]..lib/warnings.ml[412,14120+50])
                                              Texp_construct "[]"
                                              []
                                            expression (lib/warnings.ml[412,14120+51]..lib/warnings.ml[412,14120+53])
                                              Texp_construct "[]"
                                              []
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[412,14120+55]..lib/warnings.ml[412,14120+61])
                                          Texp_ident "tokens/1408"
                                    ]
                              ]
                              expression (lib/warnings.ml[414,14189+4]..lib/warnings.ml[414,14189+27])
                                Texp_apply
                                expression (lib/warnings.ml[414,14189+4]..lib/warnings.ml[414,14189+16])
                                  Texp_ident "commit_chunk/1779"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[414,14189+17]..lib/warnings.ml[414,14189+18])
                                      Texp_ident "l/1790"
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[414,14189+19]..lib/warnings.ml[414,14189+27])
                                      Texp_ident "on_going/1791"
                                ]
                    ]
                    expression (lib/warnings.ml[416,14222+2]..lib/warnings.ml[448,15341+7])
                      Texp_match
                      expression (lib/warnings.ml[416,14222+8]..lib/warnings.ml[416,14222+27])
                        Texp_ident "consecutive_letters/1778"
                      [
                        <case>
                          pattern (lib/warnings.ml[417,14255+4]..lib/warnings.ml[417,14255+6])
                            Tpat_value
                            pattern (lib/warnings.ml[417,14255+4]..lib/warnings.ml[417,14255+6])
                              Tpat_construct "[]"
                              []
                              None
                          expression (lib/warnings.ml[417,14255+10]..lib/warnings.ml[417,14255+14])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (lib/warnings.ml[418,14270+4]..lib/warnings.ml[418,14270+16])
                            Tpat_value
                            pattern (lib/warnings.ml[418,14270+4]..lib/warnings.ml[418,14270+16])
                              Tpat_construct "::"
                              [
                                pattern (lib/warnings.ml[418,14270+4]..lib/warnings.ml[418,14270+11])
                                  Tpat_var "example/1792"
                                pattern (lib/warnings.ml[418,14270+15]..lib/warnings.ml[418,14270+16])
                                  Tpat_any
                              ]
                              None
                          expression (lib/warnings.ml[419,14291+6]..lib/warnings.ml[448,15341+7])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/warnings.ml[419,14291+10]..lib/warnings.ml[419,14291+17])
                                  Tpat_var "nowhere/1793"
                                expression (lib/warnings.ml[419,14291+20]..lib/warnings.ml[419,14291+46])
                                  Texp_apply
                                  expression (lib/warnings.ml[419,14291+20]..lib/warnings.ml[419,14291+37])
                                    Texp_ident "ghost_loc_in_file/1402"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[419,14291+38]..lib/warnings.ml[419,14291+46])
                                        Texp_constant Const_string("_none_",(lib/warnings.ml[419,14291+39]..lib/warnings.ml[419,14291+45]),None)
                                  ]
                            ]
                            expression (lib/warnings.ml[420,14341+6]..lib/warnings.ml[448,15341+7])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/warnings.ml[420,14341+10]..lib/warnings.ml[420,14341+23])
                                    Tpat_var "spelling_hint/1794"
                                  expression (lib/warnings.ml[420,14341+24]..lib/warnings.ml[430,14682+12]) ghost
                                    Texp_function
                                    [
                                      Nolabel
                                      Param_pat
                                        pattern (lib/warnings.ml[420,14341+24]..lib/warnings.ml[420,14341+27])
                                          Tpat_var "ppf/1796"
                                    ]
                                    Tfunction_body
                                      expression (lib/warnings.ml[421,14371+8]..lib/warnings.ml[430,14682+12])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/warnings.ml[421,14371+12]..lib/warnings.ml[421,14371+23])
                                              Tpat_var "max_seq_len/1797"
                                            expression (lib/warnings.ml[422,14397+10]..lib/warnings.ml[423,14461+33])
                                              Texp_apply
                                              expression (lib/warnings.ml[422,14397+10]..lib/warnings.ml[422,14397+24])
                                                Texp_ident "Stdlib!.List.fold_left"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[422,14397+25]..lib/warnings.ml[422,14397+63])
                                                    Texp_function
                                                    [
                                                      Nolabel
                                                      Param_pat
                                                        pattern (lib/warnings.ml[422,14397+30]..lib/warnings.ml[422,14397+31])
                                                          Tpat_var "l/1798"
                                                      Nolabel
                                                      Param_pat
                                                        pattern (lib/warnings.ml[422,14397+32]..lib/warnings.ml[422,14397+33])
                                                          Tpat_var "x/1799"
                                                    ]
                                                    Tfunction_body
                                                      expression (lib/warnings.ml[422,14397+37]..lib/warnings.ml[422,14397+62])
                                                        Texp_apply
                                                        expression (lib/warnings.ml[422,14397+37]..lib/warnings.ml[422,14397+44])
                                                          Texp_ident "Stdlib!.Int.max"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/warnings.ml[422,14397+45]..lib/warnings.ml[422,14397+46])
                                                              Texp_ident "l/1798"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/warnings.ml[422,14397+47]..lib/warnings.ml[422,14397+62])
                                                              Texp_apply
                                                              expression (lib/warnings.ml[422,14397+48]..lib/warnings.ml[422,14397+59])
                                                                Texp_ident "Stdlib!.List.length"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/warnings.ml[422,14397+60]..lib/warnings.ml[422,14397+61])
                                                                    Texp_ident "x/1799"
                                                              ]
                                                        ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[423,14461+12]..lib/warnings.ml[423,14461+13])
                                                    Texp_constant Const_int 0
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[423,14461+14]..lib/warnings.ml[423,14461+33])
                                                    Texp_ident "consecutive_letters/1778"
                                              ]
                                        ]
                                        expression (lib/warnings.ml[425,14506+8]..lib/warnings.ml[430,14682+12])
                                          Texp_ifthenelse
                                          expression (lib/warnings.ml[425,14506+11]..lib/warnings.ml[425,14506+27])
                                            Texp_apply
                                            expression (lib/warnings.ml[425,14506+23]..lib/warnings.ml[425,14506+25])
                                              Texp_ident "Stdlib!.>="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[425,14506+11]..lib/warnings.ml[425,14506+22])
                                                  Texp_ident "max_seq_len/1797"
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[425,14506+26]..lib/warnings.ml[425,14506+27])
                                                  Texp_constant Const_int 5
                                            ]
                                          expression (lib/warnings.ml[426,14539+10]..lib/warnings.ml[428,14625+43])
                                            Texp_apply
                                            expression (lib/warnings.ml[426,14539+10]..lib/warnings.ml[426,14539+24])
                                              Texp_ident "Stdlib!.Format.fprintf"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[426,14539+25]..lib/warnings.ml[426,14539+28])
                                                  Texp_ident "ppf/1796"
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43])
                                                  Texp_construct "CamlinternalFormatBasics.Format"
                                                  [
                                                    expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                      [
                                                        expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Break"
                                                          [
                                                            expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                              Texp_constant Const_string("@ ",(lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost,None)
                                                            expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                              Texp_constant Const_int 1
                                                            expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                              Texp_constant Const_int 0
                                                          ]
                                                        expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                                          [
                                                            expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.Open_box"
                                                              [
                                                                expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.Format"
                                                                  [
                                                                    expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                      []
                                                                    expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                                      Texp_constant Const_string("",(lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost,None)
                                                                  ]
                                                              ]
                                                            expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                              [
                                                                expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                                  Texp_constant Const_string("Hint: Did you make a spelling mistake when using a mnemonic name?",(lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost,None)
                                                                expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                  [
                                                                    expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.Close_box"
                                                                      []
                                                                    expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                      []
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                    expression (lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost
                                                      Texp_constant Const_string("@ @[Hint: Did you make a spelling mistake when using a mnemonic name?@]",(lib/warnings.ml[427,14568+12]..lib/warnings.ml[428,14625+43]) ghost,None)
                                                  ]
                                            ]
                                          Some
                                            expression (lib/warnings.ml[430,14682+10]..lib/warnings.ml[430,14682+12])
                                              Texp_construct "()"
                                              []
                              ]
                              expression (lib/warnings.ml[432,14704+6]..lib/warnings.ml[448,15341+7])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/warnings.ml[432,14704+10]..lib/warnings.ml[432,14704+17])
                                      Tpat_var "message/1831"
                                    expression (lib/warnings.ml[433,14724+8]..lib/warnings.ml[442,15208+23])
                                      Texp_apply
                                      expression (lib/warnings.ml[433,14724+8]..lib/warnings.ml[433,14724+23])
                                        Texp_ident "Stdlib!.Format.asprintf"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18])
                                            Texp_construct "CamlinternalFormatBasics.Format"
                                            [
                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                                [
                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Open_box"
                                                    [
                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                        [
                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                Texp_constant Const_string("<v>",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                            Texp_constant Const_string("<v>",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                        ]
                                                    ]
                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                                    [
                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Open_box"
                                                        [
                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                            [
                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                Texp_constant Const_string("",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                            ]
                                                        ]
                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                        [
                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                            Texp_constant Const_string("Setting a warning with a sequence of lowercase or uppercase letters,",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                            [
                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.Break"
                                                                [
                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                    Texp_constant Const_string("@ ",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                    Texp_constant Const_int 1
                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                    Texp_constant Const_int 0
                                                                ]
                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                [
                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                    Texp_constant Const_string("like '",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.Alpha"
                                                                    [
                                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                        [
                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                            Texp_constant Const_string("',",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                            [
                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.Break"
                                                                                [
                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                    Texp_constant Const_string("@ ",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                    Texp_constant Const_int 1
                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                    Texp_constant Const_int 0
                                                                                ]
                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                [
                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                    Texp_constant Const_string("is deprecated.",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                    [
                                                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.Close_box"
                                                                                        []
                                                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                        Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                        [
                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.Break"
                                                                                            [
                                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                Texp_constant Const_string("@ ",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                Texp_constant Const_int 1
                                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                Texp_constant Const_int 0
                                                                                            ]
                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                            Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                                                                            [
                                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.Open_box"
                                                                                                [
                                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                    Texp_construct "CamlinternalFormatBasics.Format"
                                                                                                    [
                                                                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                        []
                                                                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                        Texp_constant Const_string("",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                                                                    ]
                                                                                                ]
                                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                [
                                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                    Texp_constant Const_string("Use the equivalent signed form:",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                    Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                    [
                                                                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                        [
                                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                            Texp_constant Const_string("@ ",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                            Texp_constant Const_int 1
                                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                            Texp_constant Const_int 0
                                                                                                        ]
                                                                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                        Texp_construct "CamlinternalFormatBasics.Theta"
                                                                                                        [
                                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                                                            [
                                                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                Texp_constant Const_char 2e
                                                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                [
                                                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.Close_box"
                                                                                                                    []
                                                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                    Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                    [
                                                                                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                        Texp_construct "CamlinternalFormatBasics.Break"
                                                                                                                        [
                                                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                            Texp_constant Const_string("@ ",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                            Texp_constant Const_int 1
                                                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                            Texp_constant Const_int 0
                                                                                                                        ]
                                                                                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                        Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                                                                                                        [
                                                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                            Texp_construct "CamlinternalFormatBasics.Open_box"
                                                                                                                            [
                                                                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                                Texp_construct "CamlinternalFormatBasics.Format"
                                                                                                                                [
                                                                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                                    []
                                                                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                                    Texp_constant Const_string("",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                                                                            [
                                                                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                                Texp_constant Const_string("Hint: Enabling or disabling a warning by its mnemonic name requires a + or - prefix.",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                                                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                                Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                [
                                                                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                                    Texp_construct "CamlinternalFormatBasics.Close_box"
                                                                                                                                    []
                                                                                                                                  expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                                    Texp_construct "CamlinternalFormatBasics.Theta"
                                                                                                                                    [
                                                                                                                                      expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                                        Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                        [
                                                                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                                            Texp_construct "CamlinternalFormatBasics.FFlush"
                                                                                                                                            []
                                                                                                                                          expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                                            Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                                                                                                            [
                                                                                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                                                Texp_construct "CamlinternalFormatBasics.Close_box"
                                                                                                                                                []
                                                                                                                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                                                                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                                                                                []
                                                                                                                                            ]
                                                                                                                                        ]
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                              expression (lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost
                                                Texp_constant Const_string("@[<v>@[Setting a warning with a sequence of lowercase or uppercase letters,@ like '%a',@ is deprecated.@]@ @[Use the equivalent signed form:@ %t.@]@ @[Hint: Enabling or disabling a warning by its mnemonic name requires a + or - prefix.@]%t@?@]",(lib/warnings.ml[434,14748+10]..lib/warnings.ml[439,15050+18]) ghost,None)
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[440,15069+10]..lib/warnings.ml[440,15069+72])
                                            Texp_open Fresh
                                            module_expr (lib/warnings.ml[440,15069+10]..lib/warnings.ml[440,15069+16])
                                              Tmod_ident "Stdlib!.Format"
                                            expression (lib/warnings.ml[440,15069+18]..lib/warnings.ml[440,15069+71])
                                              Texp_apply
                                              expression (lib/warnings.ml[440,15069+18]..lib/warnings.ml[440,15069+31])
                                                Texp_ident "Stdlib!.Format.pp_print_list"
                                              [
                                                <arg>
                                                  Optional "pp_sep"
                                                  expression (lib/warnings.ml[440,15069+40]..lib/warnings.ml[440,15069+57])
                                                    Texp_construct "Some"
                                                    [
                                                      expression (lib/warnings.ml[440,15069+40]..lib/warnings.ml[440,15069+57])
                                                        Texp_function
                                                        [
                                                          Nolabel
                                                          Param_pat
                                                            pattern (lib/warnings.ml[440,15069+45]..lib/warnings.ml[440,15069+46])
                                                              Tpat_any
                                                        ]
                                                        Tfunction_body
                                                          expression (lib/warnings.ml[440,15069+50]..lib/warnings.ml[440,15069+56])
                                                            Texp_ident "Stdlib!.ignore"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[440,15069+58]..lib/warnings.ml[440,15069+71])
                                                    Texp_ident "Stdlib!.Format.pp_print_char"
                                              ]
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[440,15069+73]..lib/warnings.ml[440,15069+80])
                                            Texp_ident "example/1792"
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[441,15150+10]..lib/warnings.ml[441,15150+57])
                                            Texp_function
                                            [
                                              Nolabel
                                              Param_pat
                                                pattern (lib/warnings.ml[441,15150+15]..lib/warnings.ml[441,15150+18])
                                                  Tpat_var "ppf/1833"
                                            ]
                                            Tfunction_body
                                              expression (lib/warnings.ml[441,15150+22]..lib/warnings.ml[441,15150+56])
                                                Texp_apply
                                                expression (lib/warnings.ml[441,15150+22]..lib/warnings.ml[441,15150+31])
                                                  Texp_ident "Stdlib!.List.iter"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/warnings.ml[441,15150+32]..lib/warnings.ml[441,15150+49])
                                                      Texp_apply
                                                      expression (lib/warnings.ml[441,15150+33]..lib/warnings.ml[441,15150+44])
                                                        Texp_ident "print_token/1768"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/warnings.ml[441,15150+45]..lib/warnings.ml[441,15150+48])
                                                            Texp_ident "ppf/1833"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/warnings.ml[441,15150+50]..lib/warnings.ml[441,15150+56])
                                                      Texp_ident "tokens/1408"
                                                ]
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[442,15208+10]..lib/warnings.ml[442,15208+23])
                                            Texp_ident "spelling_hint/1794"
                                      ]
                                ]
                                expression (lib/warnings.ml[444,15241+6]..lib/warnings.ml[448,15341+7])
                                  Texp_construct "Some"
                                  [
                                    expression (lib/warnings.ml[444,15241+11]..lib/warnings.ml[448,15341+7])
                                      Texp_record
                                        fields =
                                          [
                                            "kind"
                                              expression (lib/warnings.ml[445,15254+13]..lib/warnings.ml[445,15254+35])
                                                Texp_constant Const_string("ocaml_deprecated_cli",(lib/warnings.ml[445,15254+14]..lib/warnings.ml[445,15254+34]),None)
                                            "message"
                                              expression (lib/warnings.ml[447,15325+8]..lib/warnings.ml[447,15325+15])
                                                Texp_ident "message/1831"
                                            "def"
                                              expression (lib/warnings.ml[446,15291+25]..lib/warnings.ml[446,15291+32])
                                                Texp_ident "nowhere/1793"
                                            "use"
                                              expression (lib/warnings.ml[446,15291+12]..lib/warnings.ml[446,15291+19])
                                                Texp_ident "nowhere/1793"
                                          ]
                                        representation =
                                          Record_regular
                                        extended_expression =
                                          None
                                  ]
                      ]
    ]
  structure_item (lib/warnings.ml[451,15351+0]..lib/warnings.ml[487,16538+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[451,15351+4]..lib/warnings.ml[451,15351+18])
          Tpat_var "parse_warnings/1834"
        expression (lib/warnings.ml[451,15351+19]..lib/warnings.ml[487,16538+11]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[451,15351+19]..lib/warnings.ml[451,15351+20])
                Tpat_var "s/1836"
          ]
          Tfunction_body
            expression (lib/warnings.ml[452,15374+2]..lib/warnings.ml[487,16538+11])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[452,15374+6]..lib/warnings.ml[452,15374+11])
                    Tpat_var "error/1837"
                  expression (lib/warnings.ml[452,15374+12]..lib/warnings.ml[452,15374+62]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/warnings.ml[452,15374+12]..lib/warnings.ml[452,15374+14])
                          Tpat_construct "()"
                          []
                          None
                    ]
                    Tfunction_body
                      expression (lib/warnings.ml[452,15374+17]..lib/warnings.ml[452,15374+62])
                        Texp_apply
                        expression (lib/warnings.ml[452,15374+17]..lib/warnings.ml[452,15374+22])
                          Texp_ident "Stdlib!.raise"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[452,15374+23]..lib/warnings.ml[452,15374+62])
                              Texp_construct "Arg.Bad"
                              [
                                expression (lib/warnings.ml[452,15374+32]..lib/warnings.ml[452,15374+61])
                                  Texp_constant Const_string("Ill-formed list of warnings",(lib/warnings.ml[452,15374+33]..lib/warnings.ml[452,15374+60]),None)
                              ]
                        ]
              ]
              expression (lib/warnings.ml[453,15440+2]..lib/warnings.ml[487,16538+11])
                Texp_let Rec
                [
                  <def>
                    pattern (lib/warnings.ml[453,15440+10]..lib/warnings.ml[453,15440+17])
                      Tpat_var "get_num/1840"
                    expression (lib/warnings.ml[453,15440+18]..lib/warnings.ml[457,15605+15]) ghost
                      Texp_function
                      [
                        Nolabel
                        Param_pat
                          pattern (lib/warnings.ml[453,15440+18]..lib/warnings.ml[453,15440+19])
                            Tpat_var "n/1841"
                        Nolabel
                        Param_pat
                          pattern (lib/warnings.ml[453,15440+20]..lib/warnings.ml[453,15440+21])
                            Tpat_var "i/1842"
                      ]
                      Tfunction_body
                        expression (lib/warnings.ml[454,15464+4]..lib/warnings.ml[457,15605+15])
                          Texp_ifthenelse
                          expression (lib/warnings.ml[454,15464+7]..lib/warnings.ml[454,15464+27])
                            Texp_apply
                            expression (lib/warnings.ml[454,15464+9]..lib/warnings.ml[454,15464+11])
                              Texp_ident "Stdlib!.>="
                            [
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[454,15464+7]..lib/warnings.ml[454,15464+8])
                                  Texp_ident "i/1842"
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[454,15464+12]..lib/warnings.ml[454,15464+27])
                                  Texp_apply
                                  expression (lib/warnings.ml[454,15464+12]..lib/warnings.ml[454,15464+25])
                                    Texp_ident "Stdlib!.String.length"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[454,15464+26]..lib/warnings.ml[454,15464+27])
                                        Texp_ident "s/1836"
                                  ]
                            ]
                          expression (lib/warnings.ml[454,15464+33]..lib/warnings.ml[454,15464+37])
                            Texp_tuple
                            [
                              expression (lib/warnings.ml[454,15464+33]..lib/warnings.ml[454,15464+34])
                                Texp_ident "i/1842"
                              expression (lib/warnings.ml[454,15464+36]..lib/warnings.ml[454,15464+37])
                                Texp_ident "n/1841"
                            ]
                          Some
                            expression (lib/warnings.ml[455,15502+9]..lib/warnings.ml[457,15605+15])
                              Texp_match
                              expression (lib/warnings.ml[455,15502+15]..lib/warnings.ml[455,15502+20])
                                Texp_apply
                                expression (lib/warnings.ml[455,15502+15]..lib/warnings.ml[455,15502+20]) ghost
                                  Texp_ident "Stdlib!.String.get"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[455,15502+15]..lib/warnings.ml[455,15502+16])
                                      Texp_ident "s/1836"
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[455,15502+18]..lib/warnings.ml[455,15502+19])
                                      Texp_ident "i/1842"
                                ]
                              [
                                <case>
                                  pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14])
                                    Tpat_or
                                    pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                      Tpat_value
                                      pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                        Tpat_constant Const_char 30
                                    pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                      Tpat_or
                                      pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                        Tpat_value
                                        pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                          Tpat_constant Const_char 31
                                      pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                        Tpat_or
                                        pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                          Tpat_value
                                          pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                            Tpat_constant Const_char 32
                                        pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                          Tpat_or
                                          pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                            Tpat_value
                                            pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                              Tpat_constant Const_char 33
                                          pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                            Tpat_or
                                            pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                              Tpat_value
                                              pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                Tpat_constant Const_char 34
                                            pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                              Tpat_or
                                              pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                Tpat_value
                                                pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                  Tpat_constant Const_char 35
                                              pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                Tpat_or
                                                pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                  Tpat_value
                                                  pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                    Tpat_constant Const_char 36
                                                pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                  Tpat_or
                                                  pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                    Tpat_value
                                                    pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                      Tpat_constant Const_char 37
                                                  pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                    Tpat_or
                                                    pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                      Tpat_value
                                                      pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                        Tpat_constant Const_char 38
                                                    pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                      Tpat_value
                                                      pattern (lib/warnings.ml[456,15528+6]..lib/warnings.ml[456,15528+14]) ghost
                                                        Tpat_constant Const_char 39
                                  expression (lib/warnings.ml[456,15528+18]..lib/warnings.ml[456,15528+76])
                                    Texp_apply
                                    expression (lib/warnings.ml[456,15528+18]..lib/warnings.ml[456,15528+25])
                                      Texp_ident "get_num/1840"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[456,15528+26]..lib/warnings.ml[456,15528+68])
                                          Texp_apply
                                          expression (lib/warnings.ml[456,15528+52]..lib/warnings.ml[456,15528+53])
                                            Texp_ident "Stdlib!.-"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[456,15528+27]..lib/warnings.ml[456,15528+51])
                                                Texp_apply
                                                expression (lib/warnings.ml[456,15528+34]..lib/warnings.ml[456,15528+35])
                                                  Texp_ident "Stdlib!.+"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/warnings.ml[456,15528+27]..lib/warnings.ml[456,15528+33])
                                                      Texp_apply
                                                      expression (lib/warnings.ml[456,15528+30]..lib/warnings.ml[456,15528+31])
                                                        Texp_ident "Stdlib!.*"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/warnings.ml[456,15528+27]..lib/warnings.ml[456,15528+29])
                                                            Texp_constant Const_int 10
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/warnings.ml[456,15528+32]..lib/warnings.ml[456,15528+33])
                                                            Texp_ident "n/1841"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/warnings.ml[456,15528+36]..lib/warnings.ml[456,15528+51])
                                                      Texp_apply
                                                      expression (lib/warnings.ml[456,15528+36]..lib/warnings.ml[456,15528+45])
                                                        Texp_ident "Stdlib!.Char.code"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/warnings.ml[456,15528+46]..lib/warnings.ml[456,15528+51])
                                                            Texp_apply
                                                            expression (lib/warnings.ml[456,15528+46]..lib/warnings.ml[456,15528+51]) ghost
                                                              Texp_ident "Stdlib!.String.get"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/warnings.ml[456,15528+46]..lib/warnings.ml[456,15528+47])
                                                                  Texp_ident "s/1836"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/warnings.ml[456,15528+49]..lib/warnings.ml[456,15528+50])
                                                                  Texp_ident "i/1842"
                                                            ]
                                                      ]
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[456,15528+54]..lib/warnings.ml[456,15528+67])
                                                Texp_apply
                                                expression (lib/warnings.ml[456,15528+54]..lib/warnings.ml[456,15528+63])
                                                  Texp_ident "Stdlib!.Char.code"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/warnings.ml[456,15528+64]..lib/warnings.ml[456,15528+67])
                                                      Texp_constant Const_char 30
                                                ]
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[456,15528+69]..lib/warnings.ml[456,15528+76])
                                          Texp_apply
                                          expression (lib/warnings.ml[456,15528+72]..lib/warnings.ml[456,15528+73])
                                            Texp_ident "Stdlib!.+"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[456,15528+70]..lib/warnings.ml[456,15528+71])
                                                Texp_ident "i/1842"
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[456,15528+74]..lib/warnings.ml[456,15528+75])
                                                Texp_constant Const_int 1
                                          ]
                                    ]
                                <case>
                                  pattern (lib/warnings.ml[457,15605+6]..lib/warnings.ml[457,15605+7])
                                    Tpat_value
                                    pattern (lib/warnings.ml[457,15605+6]..lib/warnings.ml[457,15605+7])
                                      Tpat_any
                                  expression (lib/warnings.ml[457,15605+11]..lib/warnings.ml[457,15605+15])
                                    Texp_tuple
                                    [
                                      expression (lib/warnings.ml[457,15605+11]..lib/warnings.ml[457,15605+12])
                                        Texp_ident "i/1842"
                                      expression (lib/warnings.ml[457,15605+14]..lib/warnings.ml[457,15605+15])
                                        Texp_ident "n/1841"
                                    ]
                              ]
                ]
                expression (lib/warnings.ml[459,15626+2]..lib/warnings.ml[487,16538+11])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/warnings.ml[459,15626+6]..lib/warnings.ml[459,15626+15])
                        Tpat_var "get_range/1843"
                      expression (lib/warnings.ml[459,15626+16]..lib/warnings.ml[466,15843+15]) ghost
                        Texp_function
                        [
                          Nolabel
                          Param_pat
                            pattern (lib/warnings.ml[459,15626+16]..lib/warnings.ml[459,15626+17])
                              Tpat_var "i/1845"
                        ]
                        Tfunction_body
                          expression (lib/warnings.ml[460,15646+4]..lib/warnings.ml[466,15843+15])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/warnings.ml[460,15646+8]..lib/warnings.ml[460,15646+13])
                                  Tpat_tuple
                                  [
                                    pattern (lib/warnings.ml[460,15646+8]..lib/warnings.ml[460,15646+9])
                                      Tpat_var "i/1846"
                                    pattern (lib/warnings.ml[460,15646+11]..lib/warnings.ml[460,15646+13])
                                      Tpat_var "n1/1847"
                                  ]
                                expression (lib/warnings.ml[460,15646+16]..lib/warnings.ml[460,15646+27])
                                  Texp_apply
                                  expression (lib/warnings.ml[460,15646+16]..lib/warnings.ml[460,15646+23])
                                    Texp_ident "get_num/1840"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[460,15646+24]..lib/warnings.ml[460,15646+25])
                                        Texp_constant Const_int 0
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[460,15646+26]..lib/warnings.ml[460,15646+27])
                                        Texp_ident "i/1845"
                                  ]
                            ]
                            expression (lib/warnings.ml[461,15677+4]..lib/warnings.ml[466,15843+15])
                              Texp_ifthenelse
                              expression (lib/warnings.ml[461,15677+7]..lib/warnings.ml[461,15677+64])
                                Texp_apply
                                expression (lib/warnings.ml[461,15677+31]..lib/warnings.ml[461,15677+33])
                                  Texp_ident "Stdlib!.&&"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[461,15677+7]..lib/warnings.ml[461,15677+30])
                                      Texp_apply
                                      expression (lib/warnings.ml[461,15677+13]..lib/warnings.ml[461,15677+14])
                                        Texp_ident "Stdlib!.<"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[461,15677+7]..lib/warnings.ml[461,15677+12])
                                            Texp_apply
                                            expression (lib/warnings.ml[461,15677+9]..lib/warnings.ml[461,15677+10])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[461,15677+7]..lib/warnings.ml[461,15677+8])
                                                  Texp_ident "i/1846"
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[461,15677+11]..lib/warnings.ml[461,15677+12])
                                                  Texp_constant Const_int 2
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[461,15677+15]..lib/warnings.ml[461,15677+30])
                                            Texp_apply
                                            expression (lib/warnings.ml[461,15677+15]..lib/warnings.ml[461,15677+28])
                                              Texp_ident "Stdlib!.String.length"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[461,15677+29]..lib/warnings.ml[461,15677+30])
                                                  Texp_ident "s/1836"
                                            ]
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[461,15677+34]..lib/warnings.ml[461,15677+64])
                                      Texp_apply
                                      expression (lib/warnings.ml[461,15677+46]..lib/warnings.ml[461,15677+48])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[461,15677+34]..lib/warnings.ml[461,15677+45])
                                            Texp_apply
                                            expression (lib/warnings.ml[461,15677+40]..lib/warnings.ml[461,15677+41])
                                              Texp_ident "Stdlib!.="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[461,15677+34]..lib/warnings.ml[461,15677+39])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[461,15677+34]..lib/warnings.ml[461,15677+39]) ghost
                                                    Texp_ident "Stdlib!.String.get"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[461,15677+34]..lib/warnings.ml[461,15677+35])
                                                        Texp_ident "s/1836"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[461,15677+37]..lib/warnings.ml[461,15677+38])
                                                        Texp_ident "i/1846"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[461,15677+42]..lib/warnings.ml[461,15677+45])
                                                  Texp_constant Const_char 2e
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[461,15677+49]..lib/warnings.ml[461,15677+64])
                                            Texp_apply
                                            expression (lib/warnings.ml[461,15677+59]..lib/warnings.ml[461,15677+60])
                                              Texp_ident "Stdlib!.="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[461,15677+49]..lib/warnings.ml[461,15677+58])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[461,15677+49]..lib/warnings.ml[461,15677+58]) ghost
                                                    Texp_ident "Stdlib!.String.get"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[461,15677+49]..lib/warnings.ml[461,15677+50])
                                                        Texp_ident "s/1836"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[461,15677+52]..lib/warnings.ml[461,15677+57])
                                                        Texp_apply
                                                        expression (lib/warnings.ml[461,15677+54]..lib/warnings.ml[461,15677+55])
                                                          Texp_ident "Stdlib!.+"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/warnings.ml[461,15677+52]..lib/warnings.ml[461,15677+53])
                                                              Texp_ident "i/1846"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/warnings.ml[461,15677+56]..lib/warnings.ml[461,15677+57])
                                                              Texp_constant Const_int 1
                                                        ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[461,15677+61]..lib/warnings.ml[461,15677+64])
                                                  Texp_constant Const_char 2e
                                            ]
                                      ]
                                ]
                              expression (lib/warnings.ml[462,15747+6]..lib/warnings.ml[464,15818+15])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/warnings.ml[462,15747+10]..lib/warnings.ml[462,15747+15])
                                      Tpat_tuple
                                      [
                                        pattern (lib/warnings.ml[462,15747+10]..lib/warnings.ml[462,15747+11])
                                          Tpat_var "i/1848"
                                        pattern (lib/warnings.ml[462,15747+13]..lib/warnings.ml[462,15747+15])
                                          Tpat_var "n2/1849"
                                      ]
                                    expression (lib/warnings.ml[462,15747+18]..lib/warnings.ml[462,15747+35])
                                      Texp_apply
                                      expression (lib/warnings.ml[462,15747+18]..lib/warnings.ml[462,15747+25])
                                        Texp_ident "get_num/1840"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[462,15747+26]..lib/warnings.ml[462,15747+27])
                                            Texp_constant Const_int 0
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[462,15747+28]..lib/warnings.ml[462,15747+35])
                                            Texp_apply
                                            expression (lib/warnings.ml[462,15747+31]..lib/warnings.ml[462,15747+32])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[462,15747+29]..lib/warnings.ml[462,15747+30])
                                                  Texp_ident "i/1846"
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[462,15747+33]..lib/warnings.ml[462,15747+34])
                                                  Texp_constant Const_int 2
                                            ]
                                      ]
                                ]
                                expression (lib/warnings.ml[463,15786+6]..lib/warnings.ml[464,15818+15])
                                  Texp_sequence
                                  expression (lib/warnings.ml[463,15786+6]..lib/warnings.ml[463,15786+30])
                                    Texp_ifthenelse
                                    expression (lib/warnings.ml[463,15786+9]..lib/warnings.ml[463,15786+16])
                                      Texp_apply
                                      expression (lib/warnings.ml[463,15786+12]..lib/warnings.ml[463,15786+13])
                                        Texp_ident "Stdlib!.<"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[463,15786+9]..lib/warnings.ml[463,15786+11])
                                            Texp_ident "n2/1849"
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[463,15786+14]..lib/warnings.ml[463,15786+16])
                                            Texp_ident "n1/1847"
                                      ]
                                    expression (lib/warnings.ml[463,15786+22]..lib/warnings.ml[463,15786+30])
                                      Texp_apply
                                      expression (lib/warnings.ml[463,15786+22]..lib/warnings.ml[463,15786+27])
                                        Texp_ident "error/1837"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[463,15786+28]..lib/warnings.ml[463,15786+30])
                                            Texp_construct "()"
                                            []
                                      ]
                                    None
                                  expression (lib/warnings.ml[464,15818+6]..lib/warnings.ml[464,15818+15])
                                    Texp_tuple
                                    [
                                      expression (lib/warnings.ml[464,15818+6]..lib/warnings.ml[464,15818+7])
                                        Texp_ident "i/1848"
                                      expression (lib/warnings.ml[464,15818+9]..lib/warnings.ml[464,15818+11])
                                        Texp_ident "n1/1847"
                                      expression (lib/warnings.ml[464,15818+13]..lib/warnings.ml[464,15818+15])
                                        Texp_ident "n2/1849"
                                    ]
                              Some
                                expression (lib/warnings.ml[466,15843+6]..lib/warnings.ml[466,15843+15])
                                  Texp_tuple
                                  [
                                    expression (lib/warnings.ml[466,15843+6]..lib/warnings.ml[466,15843+7])
                                      Texp_ident "i/1846"
                                    expression (lib/warnings.ml[466,15843+9]..lib/warnings.ml[466,15843+11])
                                      Texp_ident "n1/1847"
                                    expression (lib/warnings.ml[466,15843+13]..lib/warnings.ml[466,15843+15])
                                      Texp_ident "n1/1847"
                                  ]
                  ]
                  expression (lib/warnings.ml[468,15864+2]..lib/warnings.ml[487,16538+11])
                    Texp_let Rec
                    [
                      <def>
                        pattern (lib/warnings.ml[468,15864+10]..lib/warnings.ml[468,15864+14])
                          Tpat_var "loop/1850"
                        expression (lib/warnings.ml[468,15864+15]..lib/warnings.ml[476,16190+19]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/warnings.ml[468,15864+15]..lib/warnings.ml[468,15864+21])
                                Tpat_var "tokens/1852"
                            Nolabel
                            Param_pat
                              pattern (lib/warnings.ml[468,15864+22]..lib/warnings.ml[468,15864+23])
                                Tpat_var "i/1853"
                          ]
                          Tfunction_body
                            expression (lib/warnings.ml[469,15890+4]..lib/warnings.ml[476,16190+19])
                              Texp_ifthenelse
                              expression (lib/warnings.ml[469,15890+7]..lib/warnings.ml[469,15890+27])
                                Texp_apply
                                expression (lib/warnings.ml[469,15890+9]..lib/warnings.ml[469,15890+11])
                                  Texp_ident "Stdlib!.>="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[469,15890+7]..lib/warnings.ml[469,15890+8])
                                      Texp_ident "i/1853"
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[469,15890+12]..lib/warnings.ml[469,15890+27])
                                      Texp_apply
                                      expression (lib/warnings.ml[469,15890+12]..lib/warnings.ml[469,15890+25])
                                        Texp_ident "Stdlib!.String.length"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[469,15890+26]..lib/warnings.ml[469,15890+27])
                                            Texp_ident "s/1836"
                                      ]
                                ]
                              expression (lib/warnings.ml[469,15890+33]..lib/warnings.ml[469,15890+48])
                                Texp_apply
                                expression (lib/warnings.ml[469,15890+33]..lib/warnings.ml[469,15890+41])
                                  Texp_ident "Stdlib!.List.rev"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[469,15890+42]..lib/warnings.ml[469,15890+48])
                                      Texp_ident "tokens/1852"
                                ]
                              Some
                                expression (lib/warnings.ml[470,15944+4]..lib/warnings.ml[476,16190+19])
                                  Texp_match
                                  expression (lib/warnings.ml[470,15944+10]..lib/warnings.ml[470,15944+15])
                                    Texp_apply
                                    expression (lib/warnings.ml[470,15944+10]..lib/warnings.ml[470,15944+15]) ghost
                                      Texp_ident "Stdlib!.String.get"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[470,15944+10]..lib/warnings.ml[470,15944+11])
                                          Texp_ident "s/1836"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[470,15944+13]..lib/warnings.ml[470,15944+14])
                                          Texp_ident "i/1853"
                                    ]
                                  [
                                    <case>
                                      pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+29])
                                        Tpat_or
                                        pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16])
                                          Tpat_or
                                          pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                            Tpat_value
                                            pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                              Tpat_constant Const_char 41
                                          pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                            Tpat_or
                                            pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                              Tpat_value
                                              pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                Tpat_constant Const_char 42
                                            pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                              Tpat_or
                                              pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                Tpat_value
                                                pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                  Tpat_constant Const_char 43
                                              pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                Tpat_or
                                                pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                  Tpat_value
                                                  pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                    Tpat_constant Const_char 44
                                                pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                  Tpat_or
                                                  pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                    Tpat_value
                                                    pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                      Tpat_constant Const_char 45
                                                  pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                    Tpat_or
                                                    pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                      Tpat_value
                                                      pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                        Tpat_constant Const_char 46
                                                    pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                      Tpat_or
                                                      pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                        Tpat_value
                                                        pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                          Tpat_constant Const_char 47
                                                      pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                        Tpat_or
                                                        pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                          Tpat_value
                                                          pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                            Tpat_constant Const_char 48
                                                        pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                          Tpat_or
                                                          pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                            Tpat_value
                                                            pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                              Tpat_constant Const_char 49
                                                          pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                            Tpat_or
                                                            pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                              Tpat_value
                                                              pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                Tpat_constant Const_char 4a
                                                            pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                              Tpat_or
                                                              pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                Tpat_value
                                                                pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                  Tpat_constant Const_char 4b
                                                              pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                Tpat_or
                                                                pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                  Tpat_value
                                                                  pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                    Tpat_constant Const_char 4c
                                                                pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                  Tpat_or
                                                                  pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                    Tpat_value
                                                                    pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                      Tpat_constant Const_char 4d
                                                                  pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                    Tpat_or
                                                                    pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                      Tpat_value
                                                                      pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                        Tpat_constant Const_char 4e
                                                                    pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                      Tpat_or
                                                                      pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                        Tpat_value
                                                                        pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                          Tpat_constant Const_char 4f
                                                                      pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                        Tpat_or
                                                                        pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                          Tpat_value
                                                                          pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                            Tpat_constant Const_char 50
                                                                        pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                          Tpat_or
                                                                          pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                            Tpat_value
                                                                            pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                              Tpat_constant Const_char 51
                                                                          pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                            Tpat_or
                                                                            pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                              Tpat_value
                                                                              pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                Tpat_constant Const_char 52
                                                                            pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                              Tpat_or
                                                                              pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                Tpat_value
                                                                                pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                  Tpat_constant Const_char 53
                                                                              pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                Tpat_or
                                                                                pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                  Tpat_value
                                                                                  pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                    Tpat_constant Const_char 54
                                                                                pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                  Tpat_or
                                                                                  pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                    Tpat_value
                                                                                    pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                      Tpat_constant Const_char 55
                                                                                  pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                    Tpat_or
                                                                                    pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                      Tpat_value
                                                                                      pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                        Tpat_constant Const_char 56
                                                                                    pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                      Tpat_or
                                                                                      pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                        Tpat_value
                                                                                        pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                          Tpat_constant Const_char 57
                                                                                      pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                        Tpat_or
                                                                                        pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                          Tpat_value
                                                                                          pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                            Tpat_constant Const_char 58
                                                                                        pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                          Tpat_or
                                                                                          pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                            Tpat_value
                                                                                            pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                              Tpat_constant Const_char 59
                                                                                          pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                            Tpat_value
                                                                                            pattern (lib/warnings.ml[471,15965+6]..lib/warnings.ml[471,15965+16]) ghost
                                                                                              Tpat_constant Const_char 5a
                                        pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29])
                                          Tpat_or
                                          pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                            Tpat_value
                                            pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                              Tpat_constant Const_char 61
                                          pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                            Tpat_or
                                            pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                              Tpat_value
                                              pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                Tpat_constant Const_char 62
                                            pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                              Tpat_or
                                              pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                Tpat_value
                                                pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                  Tpat_constant Const_char 63
                                              pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                Tpat_or
                                                pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                  Tpat_value
                                                  pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                    Tpat_constant Const_char 64
                                                pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                  Tpat_or
                                                  pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                    Tpat_value
                                                    pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                      Tpat_constant Const_char 65
                                                  pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                    Tpat_or
                                                    pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                      Tpat_value
                                                      pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                        Tpat_constant Const_char 66
                                                    pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                      Tpat_or
                                                      pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                        Tpat_value
                                                        pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                          Tpat_constant Const_char 67
                                                      pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                        Tpat_or
                                                        pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                          Tpat_value
                                                          pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                            Tpat_constant Const_char 68
                                                        pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                          Tpat_or
                                                          pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                            Tpat_value
                                                            pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                              Tpat_constant Const_char 69
                                                          pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                            Tpat_or
                                                            pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                              Tpat_value
                                                              pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                Tpat_constant Const_char 6a
                                                            pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                              Tpat_or
                                                              pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                Tpat_value
                                                                pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                  Tpat_constant Const_char 6b
                                                              pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                Tpat_or
                                                                pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                  Tpat_value
                                                                  pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                    Tpat_constant Const_char 6c
                                                                pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                  Tpat_or
                                                                  pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                    Tpat_value
                                                                    pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                      Tpat_constant Const_char 6d
                                                                  pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                    Tpat_or
                                                                    pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                      Tpat_value
                                                                      pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                        Tpat_constant Const_char 6e
                                                                    pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                      Tpat_or
                                                                      pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                        Tpat_value
                                                                        pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                          Tpat_constant Const_char 6f
                                                                      pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                        Tpat_or
                                                                        pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                          Tpat_value
                                                                          pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                            Tpat_constant Const_char 70
                                                                        pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                          Tpat_or
                                                                          pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                            Tpat_value
                                                                            pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                              Tpat_constant Const_char 71
                                                                          pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                            Tpat_or
                                                                            pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                              Tpat_value
                                                                              pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                Tpat_constant Const_char 72
                                                                            pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                              Tpat_or
                                                                              pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                Tpat_value
                                                                                pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                  Tpat_constant Const_char 73
                                                                              pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                Tpat_or
                                                                                pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                  Tpat_value
                                                                                  pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                    Tpat_constant Const_char 74
                                                                                pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                  Tpat_or
                                                                                  pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                    Tpat_value
                                                                                    pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                      Tpat_constant Const_char 75
                                                                                  pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                    Tpat_or
                                                                                    pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                      Tpat_value
                                                                                      pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                        Tpat_constant Const_char 76
                                                                                    pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                      Tpat_or
                                                                                      pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                        Tpat_value
                                                                                        pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                          Tpat_constant Const_char 77
                                                                                      pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                        Tpat_or
                                                                                        pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                          Tpat_value
                                                                                          pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                            Tpat_constant Const_char 78
                                                                                        pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                          Tpat_or
                                                                                          pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                            Tpat_value
                                                                                            pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                              Tpat_constant Const_char 79
                                                                                          pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                            Tpat_value
                                                                                            pattern (lib/warnings.ml[471,15965+19]..lib/warnings.ml[471,15965+29]) ghost
                                                                                              Tpat_constant Const_char 7a
                                      expression (lib/warnings.ml[472,15998+8]..lib/warnings.ml[472,15998+47])
                                        Texp_apply
                                        expression (lib/warnings.ml[472,15998+8]..lib/warnings.ml[472,15998+12])
                                          Texp_ident "loop/1850"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[472,15998+13]..lib/warnings.ml[472,15998+41])
                                              Texp_construct "::"
                                              [
                                                expression (lib/warnings.ml[472,15998+14]..lib/warnings.ml[472,15998+32])
                                                  Texp_construct "Letter"
                                                  [
                                                    expression (lib/warnings.ml[472,15998+21]..lib/warnings.ml[472,15998+26])
                                                      Texp_apply
                                                      expression (lib/warnings.ml[472,15998+21]..lib/warnings.ml[472,15998+26]) ghost
                                                        Texp_ident "Stdlib!.String.get"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/warnings.ml[472,15998+21]..lib/warnings.ml[472,15998+22])
                                                            Texp_ident "s/1836"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/warnings.ml[472,15998+24]..lib/warnings.ml[472,15998+25])
                                                            Texp_ident "i/1853"
                                                      ]
                                                    expression (lib/warnings.ml[472,15998+27]..lib/warnings.ml[472,15998+31])
                                                      Texp_construct "None"
                                                      []
                                                  ]
                                                expression (lib/warnings.ml[472,15998+34]..lib/warnings.ml[472,15998+40])
                                                  Texp_ident "tokens/1852"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[472,15998+42]..lib/warnings.ml[472,15998+47])
                                              Texp_apply
                                              expression (lib/warnings.ml[472,15998+44]..lib/warnings.ml[472,15998+45])
                                                Texp_ident "Stdlib!.+"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[472,15998+43]..lib/warnings.ml[472,15998+44])
                                                    Texp_ident "i/1853"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[472,15998+45]..lib/warnings.ml[472,15998+46])
                                                    Texp_constant Const_int 1
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/warnings.ml[473,16046+6]..lib/warnings.ml[473,16046+9])
                                        Tpat_value
                                        pattern (lib/warnings.ml[473,16046+6]..lib/warnings.ml[473,16046+9])
                                          Tpat_constant Const_char 2b
                                      expression (lib/warnings.ml[473,16046+13]..lib/warnings.ml[473,16046+45])
                                        Texp_apply
                                        expression (lib/warnings.ml[473,16046+13]..lib/warnings.ml[473,16046+28])
                                          Texp_ident "loop_letter_num/1851"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[473,16046+29]..lib/warnings.ml[473,16046+35])
                                              Texp_ident "tokens/1852"
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[473,16046+36]..lib/warnings.ml[473,16046+39])
                                              Texp_construct "Set"
                                              []
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[473,16046+40]..lib/warnings.ml[473,16046+45])
                                              Texp_apply
                                              expression (lib/warnings.ml[473,16046+42]..lib/warnings.ml[473,16046+43])
                                                Texp_ident "Stdlib!.+"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[473,16046+41]..lib/warnings.ml[473,16046+42])
                                                    Texp_ident "i/1853"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[473,16046+43]..lib/warnings.ml[473,16046+44])
                                                    Texp_constant Const_int 1
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/warnings.ml[474,16092+6]..lib/warnings.ml[474,16092+9])
                                        Tpat_value
                                        pattern (lib/warnings.ml[474,16092+6]..lib/warnings.ml[474,16092+9])
                                          Tpat_constant Const_char 2d
                                      expression (lib/warnings.ml[474,16092+13]..lib/warnings.ml[474,16092+47])
                                        Texp_apply
                                        expression (lib/warnings.ml[474,16092+13]..lib/warnings.ml[474,16092+28])
                                          Texp_ident "loop_letter_num/1851"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[474,16092+29]..lib/warnings.ml[474,16092+35])
                                              Texp_ident "tokens/1852"
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[474,16092+36]..lib/warnings.ml[474,16092+41])
                                              Texp_construct "Clear"
                                              []
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[474,16092+42]..lib/warnings.ml[474,16092+47])
                                              Texp_apply
                                              expression (lib/warnings.ml[474,16092+44]..lib/warnings.ml[474,16092+45])
                                                Texp_ident "Stdlib!.+"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[474,16092+43]..lib/warnings.ml[474,16092+44])
                                                    Texp_ident "i/1853"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[474,16092+45]..lib/warnings.ml[474,16092+46])
                                                    Texp_constant Const_int 1
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/warnings.ml[475,16140+6]..lib/warnings.ml[475,16140+9])
                                        Tpat_value
                                        pattern (lib/warnings.ml[475,16140+6]..lib/warnings.ml[475,16140+9])
                                          Tpat_constant Const_char 40
                                      expression (lib/warnings.ml[475,16140+13]..lib/warnings.ml[475,16140+49])
                                        Texp_apply
                                        expression (lib/warnings.ml[475,16140+13]..lib/warnings.ml[475,16140+28])
                                          Texp_ident "loop_letter_num/1851"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[475,16140+29]..lib/warnings.ml[475,16140+35])
                                              Texp_ident "tokens/1852"
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[475,16140+36]..lib/warnings.ml[475,16140+43])
                                              Texp_construct "Set_all"
                                              []
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[475,16140+44]..lib/warnings.ml[475,16140+49])
                                              Texp_apply
                                              expression (lib/warnings.ml[475,16140+46]..lib/warnings.ml[475,16140+47])
                                                Texp_ident "Stdlib!.+"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[475,16140+45]..lib/warnings.ml[475,16140+46])
                                                    Texp_ident "i/1853"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[475,16140+47]..lib/warnings.ml[475,16140+48])
                                                    Texp_constant Const_int 1
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/warnings.ml[476,16190+6]..lib/warnings.ml[476,16190+7])
                                        Tpat_value
                                        pattern (lib/warnings.ml[476,16190+6]..lib/warnings.ml[476,16190+7])
                                          Tpat_any
                                      expression (lib/warnings.ml[476,16190+11]..lib/warnings.ml[476,16190+19])
                                        Texp_apply
                                        expression (lib/warnings.ml[476,16190+11]..lib/warnings.ml[476,16190+16])
                                          Texp_ident "error/1837"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[476,16190+17]..lib/warnings.ml[476,16190+19])
                                              Texp_construct "()"
                                              []
                                        ]
                                  ]
                      <def>
                        pattern (lib/warnings.ml[477,16210+6]..lib/warnings.ml[477,16210+21])
                          Tpat_var "loop_letter_num/1851"
                        expression (lib/warnings.ml[477,16210+22]..lib/warnings.ml[485,16513+19]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/warnings.ml[477,16210+22]..lib/warnings.ml[477,16210+28])
                                Tpat_var "tokens/1854"
                            Nolabel
                            Param_pat
                              pattern (lib/warnings.ml[477,16210+29]..lib/warnings.ml[477,16210+37])
                                Tpat_var "modifier/1855"
                            Nolabel
                            Param_pat
                              pattern (lib/warnings.ml[477,16210+38]..lib/warnings.ml[477,16210+39])
                                Tpat_var "i/1856"
                          ]
                          Tfunction_body
                            expression (lib/warnings.ml[478,16252+4]..lib/warnings.ml[485,16513+19])
                              Texp_ifthenelse
                              expression (lib/warnings.ml[478,16252+7]..lib/warnings.ml[478,16252+27])
                                Texp_apply
                                expression (lib/warnings.ml[478,16252+9]..lib/warnings.ml[478,16252+11])
                                  Texp_ident "Stdlib!.>="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[478,16252+7]..lib/warnings.ml[478,16252+8])
                                      Texp_ident "i/1856"
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[478,16252+12]..lib/warnings.ml[478,16252+27])
                                      Texp_apply
                                      expression (lib/warnings.ml[478,16252+12]..lib/warnings.ml[478,16252+25])
                                        Texp_ident "Stdlib!.String.length"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[478,16252+26]..lib/warnings.ml[478,16252+27])
                                            Texp_ident "s/1836"
                                      ]
                                ]
                              expression (lib/warnings.ml[478,16252+33]..lib/warnings.ml[478,16252+41])
                                Texp_apply
                                expression (lib/warnings.ml[478,16252+33]..lib/warnings.ml[478,16252+38])
                                  Texp_ident "error/1837"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[478,16252+39]..lib/warnings.ml[478,16252+41])
                                      Texp_construct "()"
                                      []
                                ]
                              Some
                                expression (lib/warnings.ml[479,16299+4]..lib/warnings.ml[485,16513+19])
                                  Texp_match
                                  expression (lib/warnings.ml[479,16299+10]..lib/warnings.ml[479,16299+15])
                                    Texp_apply
                                    expression (lib/warnings.ml[479,16299+10]..lib/warnings.ml[479,16299+15]) ghost
                                      Texp_ident "Stdlib!.String.get"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[479,16299+10]..lib/warnings.ml[479,16299+11])
                                          Texp_ident "s/1836"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[479,16299+13]..lib/warnings.ml[479,16299+14])
                                          Texp_ident "i/1856"
                                    ]
                                  [
                                    <case>
                                      pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16])
                                        Tpat_or
                                        pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                          Tpat_value
                                          pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                            Tpat_constant Const_char 30
                                        pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                          Tpat_or
                                          pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                            Tpat_value
                                            pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                              Tpat_constant Const_char 31
                                          pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                            Tpat_or
                                            pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                              Tpat_value
                                              pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                Tpat_constant Const_char 32
                                            pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                              Tpat_or
                                              pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                Tpat_value
                                                pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                  Tpat_constant Const_char 33
                                              pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                Tpat_or
                                                pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                  Tpat_value
                                                  pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                    Tpat_constant Const_char 34
                                                pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                  Tpat_or
                                                  pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                    Tpat_value
                                                    pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                      Tpat_constant Const_char 35
                                                  pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                    Tpat_or
                                                    pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                      Tpat_value
                                                      pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                        Tpat_constant Const_char 36
                                                    pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                      Tpat_or
                                                      pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                        Tpat_value
                                                        pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                          Tpat_constant Const_char 37
                                                      pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                        Tpat_or
                                                        pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                          Tpat_value
                                                          pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                            Tpat_constant Const_char 38
                                                        pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                          Tpat_value
                                                          pattern (lib/warnings.ml[480,16320+6]..lib/warnings.ml[480,16320+16]) ghost
                                                            Tpat_constant Const_char 39
                                      expression (lib/warnings.ml[481,16340+8]..lib/warnings.ml[482,16379+44])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/warnings.ml[481,16340+12]..lib/warnings.ml[481,16340+21])
                                              Tpat_tuple
                                              [
                                                pattern (lib/warnings.ml[481,16340+12]..lib/warnings.ml[481,16340+13])
                                                  Tpat_var "i/1857"
                                                pattern (lib/warnings.ml[481,16340+15]..lib/warnings.ml[481,16340+17])
                                                  Tpat_var "n1/1858"
                                                pattern (lib/warnings.ml[481,16340+19]..lib/warnings.ml[481,16340+21])
                                                  Tpat_var "n2/1859"
                                              ]
                                            expression (lib/warnings.ml[481,16340+24]..lib/warnings.ml[481,16340+35])
                                              Texp_apply
                                              expression (lib/warnings.ml[481,16340+24]..lib/warnings.ml[481,16340+33])
                                                Texp_ident "get_range/1843"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[481,16340+34]..lib/warnings.ml[481,16340+35])
                                                    Texp_ident "i/1856"
                                              ]
                                        ]
                                        expression (lib/warnings.ml[482,16379+8]..lib/warnings.ml[482,16379+44])
                                          Texp_apply
                                          expression (lib/warnings.ml[482,16379+8]..lib/warnings.ml[482,16379+12])
                                            Texp_ident "loop/1850"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[482,16379+13]..lib/warnings.ml[482,16379+42])
                                                Texp_construct "::"
                                                [
                                                  expression (lib/warnings.ml[482,16379+14]..lib/warnings.ml[482,16379+33])
                                                    Texp_construct "Num"
                                                    [
                                                      expression (lib/warnings.ml[482,16379+18]..lib/warnings.ml[482,16379+20])
                                                        Texp_ident "n1/1858"
                                                      expression (lib/warnings.ml[482,16379+21]..lib/warnings.ml[482,16379+23])
                                                        Texp_ident "n2/1859"
                                                      expression (lib/warnings.ml[482,16379+24]..lib/warnings.ml[482,16379+32])
                                                        Texp_ident "modifier/1855"
                                                    ]
                                                  expression (lib/warnings.ml[482,16379+35]..lib/warnings.ml[482,16379+41])
                                                    Texp_ident "tokens/1854"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[482,16379+43]..lib/warnings.ml[482,16379+44])
                                                Texp_ident "i/1857"
                                          ]
                                    <case>
                                      pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+29])
                                        Tpat_or
                                        pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16])
                                          Tpat_or
                                          pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                            Tpat_value
                                            pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                              Tpat_constant Const_char 41
                                          pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                            Tpat_or
                                            pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                              Tpat_value
                                              pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                Tpat_constant Const_char 42
                                            pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                              Tpat_or
                                              pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                Tpat_value
                                                pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                  Tpat_constant Const_char 43
                                              pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                Tpat_or
                                                pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                  Tpat_value
                                                  pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                    Tpat_constant Const_char 44
                                                pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                  Tpat_or
                                                  pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                    Tpat_value
                                                    pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                      Tpat_constant Const_char 45
                                                  pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                    Tpat_or
                                                    pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                      Tpat_value
                                                      pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                        Tpat_constant Const_char 46
                                                    pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                      Tpat_or
                                                      pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                        Tpat_value
                                                        pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                          Tpat_constant Const_char 47
                                                      pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                        Tpat_or
                                                        pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                          Tpat_value
                                                          pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                            Tpat_constant Const_char 48
                                                        pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                          Tpat_or
                                                          pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                            Tpat_value
                                                            pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                              Tpat_constant Const_char 49
                                                          pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                            Tpat_or
                                                            pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                              Tpat_value
                                                              pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                Tpat_constant Const_char 4a
                                                            pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                              Tpat_or
                                                              pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                Tpat_value
                                                                pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                  Tpat_constant Const_char 4b
                                                              pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                Tpat_or
                                                                pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                  Tpat_value
                                                                  pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                    Tpat_constant Const_char 4c
                                                                pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                  Tpat_or
                                                                  pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                    Tpat_value
                                                                    pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                      Tpat_constant Const_char 4d
                                                                  pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                    Tpat_or
                                                                    pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                      Tpat_value
                                                                      pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                        Tpat_constant Const_char 4e
                                                                    pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                      Tpat_or
                                                                      pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                        Tpat_value
                                                                        pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                          Tpat_constant Const_char 4f
                                                                      pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                        Tpat_or
                                                                        pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                          Tpat_value
                                                                          pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                            Tpat_constant Const_char 50
                                                                        pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                          Tpat_or
                                                                          pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                            Tpat_value
                                                                            pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                              Tpat_constant Const_char 51
                                                                          pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                            Tpat_or
                                                                            pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                              Tpat_value
                                                                              pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                Tpat_constant Const_char 52
                                                                            pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                              Tpat_or
                                                                              pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                Tpat_value
                                                                                pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                  Tpat_constant Const_char 53
                                                                              pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                Tpat_or
                                                                                pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                  Tpat_value
                                                                                  pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                    Tpat_constant Const_char 54
                                                                                pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                  Tpat_or
                                                                                  pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                    Tpat_value
                                                                                    pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                      Tpat_constant Const_char 55
                                                                                  pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                    Tpat_or
                                                                                    pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                      Tpat_value
                                                                                      pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                        Tpat_constant Const_char 56
                                                                                    pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                      Tpat_or
                                                                                      pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                        Tpat_value
                                                                                        pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                          Tpat_constant Const_char 57
                                                                                      pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                        Tpat_or
                                                                                        pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                          Tpat_value
                                                                                          pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                            Tpat_constant Const_char 58
                                                                                        pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                          Tpat_or
                                                                                          pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                            Tpat_value
                                                                                            pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                              Tpat_constant Const_char 59
                                                                                          pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                            Tpat_value
                                                                                            pattern (lib/warnings.ml[483,16424+6]..lib/warnings.ml[483,16424+16]) ghost
                                                                                              Tpat_constant Const_char 5a
                                        pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29])
                                          Tpat_or
                                          pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                            Tpat_value
                                            pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                              Tpat_constant Const_char 61
                                          pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                            Tpat_or
                                            pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                              Tpat_value
                                              pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                Tpat_constant Const_char 62
                                            pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                              Tpat_or
                                              pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                Tpat_value
                                                pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                  Tpat_constant Const_char 63
                                              pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                Tpat_or
                                                pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                  Tpat_value
                                                  pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                    Tpat_constant Const_char 64
                                                pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                  Tpat_or
                                                  pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                    Tpat_value
                                                    pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                      Tpat_constant Const_char 65
                                                  pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                    Tpat_or
                                                    pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                      Tpat_value
                                                      pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                        Tpat_constant Const_char 66
                                                    pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                      Tpat_or
                                                      pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                        Tpat_value
                                                        pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                          Tpat_constant Const_char 67
                                                      pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                        Tpat_or
                                                        pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                          Tpat_value
                                                          pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                            Tpat_constant Const_char 68
                                                        pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                          Tpat_or
                                                          pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                            Tpat_value
                                                            pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                              Tpat_constant Const_char 69
                                                          pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                            Tpat_or
                                                            pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                              Tpat_value
                                                              pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                Tpat_constant Const_char 6a
                                                            pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                              Tpat_or
                                                              pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                Tpat_value
                                                                pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                  Tpat_constant Const_char 6b
                                                              pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                Tpat_or
                                                                pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                  Tpat_value
                                                                  pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                    Tpat_constant Const_char 6c
                                                                pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                  Tpat_or
                                                                  pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                    Tpat_value
                                                                    pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                      Tpat_constant Const_char 6d
                                                                  pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                    Tpat_or
                                                                    pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                      Tpat_value
                                                                      pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                        Tpat_constant Const_char 6e
                                                                    pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                      Tpat_or
                                                                      pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                        Tpat_value
                                                                        pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                          Tpat_constant Const_char 6f
                                                                      pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                        Tpat_or
                                                                        pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                          Tpat_value
                                                                          pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                            Tpat_constant Const_char 70
                                                                        pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                          Tpat_or
                                                                          pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                            Tpat_value
                                                                            pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                              Tpat_constant Const_char 71
                                                                          pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                            Tpat_or
                                                                            pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                              Tpat_value
                                                                              pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                Tpat_constant Const_char 72
                                                                            pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                              Tpat_or
                                                                              pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                Tpat_value
                                                                                pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                  Tpat_constant Const_char 73
                                                                              pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                Tpat_or
                                                                                pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                  Tpat_value
                                                                                  pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                    Tpat_constant Const_char 74
                                                                                pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                  Tpat_or
                                                                                  pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                    Tpat_value
                                                                                    pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                      Tpat_constant Const_char 75
                                                                                  pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                    Tpat_or
                                                                                    pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                      Tpat_value
                                                                                      pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                        Tpat_constant Const_char 76
                                                                                    pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                      Tpat_or
                                                                                      pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                        Tpat_value
                                                                                        pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                          Tpat_constant Const_char 77
                                                                                      pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                        Tpat_or
                                                                                        pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                          Tpat_value
                                                                                          pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                            Tpat_constant Const_char 78
                                                                                        pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                          Tpat_or
                                                                                          pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                            Tpat_value
                                                                                            pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                              Tpat_constant Const_char 79
                                                                                          pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                            Tpat_value
                                                                                            pattern (lib/warnings.ml[483,16424+19]..lib/warnings.ml[483,16424+29]) ghost
                                                                                              Tpat_constant Const_char 7a
                                      expression (lib/warnings.ml[484,16457+7]..lib/warnings.ml[484,16457+55])
                                        Texp_apply
                                        expression (lib/warnings.ml[484,16457+7]..lib/warnings.ml[484,16457+11])
                                          Texp_ident "loop/1850"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[484,16457+12]..lib/warnings.ml[484,16457+49])
                                              Texp_construct "::"
                                              [
                                                expression (lib/warnings.ml[484,16457+13]..lib/warnings.ml[484,16457+40])
                                                  Texp_construct "Letter"
                                                  [
                                                    expression (lib/warnings.ml[484,16457+20]..lib/warnings.ml[484,16457+25])
                                                      Texp_apply
                                                      expression (lib/warnings.ml[484,16457+20]..lib/warnings.ml[484,16457+25]) ghost
                                                        Texp_ident "Stdlib!.String.get"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/warnings.ml[484,16457+20]..lib/warnings.ml[484,16457+21])
                                                            Texp_ident "s/1836"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/warnings.ml[484,16457+23]..lib/warnings.ml[484,16457+24])
                                                            Texp_ident "i/1856"
                                                      ]
                                                    expression (lib/warnings.ml[484,16457+26]..lib/warnings.ml[484,16457+39])
                                                      Texp_construct "Some"
                                                      [
                                                        expression (lib/warnings.ml[484,16457+31]..lib/warnings.ml[484,16457+39])
                                                          Texp_ident "modifier/1855"
                                                      ]
                                                  ]
                                                expression (lib/warnings.ml[484,16457+42]..lib/warnings.ml[484,16457+48])
                                                  Texp_ident "tokens/1854"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[484,16457+50]..lib/warnings.ml[484,16457+55])
                                              Texp_apply
                                              expression (lib/warnings.ml[484,16457+52]..lib/warnings.ml[484,16457+53])
                                                Texp_ident "Stdlib!.+"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[484,16457+51]..lib/warnings.ml[484,16457+52])
                                                    Texp_ident "i/1856"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/warnings.ml[484,16457+53]..lib/warnings.ml[484,16457+54])
                                                    Texp_constant Const_int 1
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/warnings.ml[485,16513+6]..lib/warnings.ml[485,16513+7])
                                        Tpat_value
                                        pattern (lib/warnings.ml[485,16513+6]..lib/warnings.ml[485,16513+7])
                                          Tpat_any
                                      expression (lib/warnings.ml[485,16513+11]..lib/warnings.ml[485,16513+19])
                                        Texp_apply
                                        expression (lib/warnings.ml[485,16513+11]..lib/warnings.ml[485,16513+16])
                                          Texp_ident "error/1837"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[485,16513+17]..lib/warnings.ml[485,16513+19])
                                              Texp_construct "()"
                                              []
                                        ]
                                  ]
                    ]
                    expression (lib/warnings.ml[487,16538+2]..lib/warnings.ml[487,16538+11])
                      Texp_apply
                      expression (lib/warnings.ml[487,16538+2]..lib/warnings.ml[487,16538+6])
                        Texp_ident "loop/1850"
                      [
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[487,16538+7]..lib/warnings.ml[487,16538+9])
                            Texp_construct "[]"
                            []
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[487,16538+10]..lib/warnings.ml[487,16538+11])
                            Texp_constant Const_int 0
                      ]
    ]
  structure_item (lib/warnings.ml[489,16551+0]..lib/warnings.ml[535,18087+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[489,16551+4]..lib/warnings.ml[489,16551+13])
          Tpat_var "parse_opt/1860"
        expression (lib/warnings.ml[489,16551+14]..lib/warnings.ml[535,18087+9]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[489,16551+14]..lib/warnings.ml[489,16551+19])
                Tpat_var "error/1862"
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[489,16551+20]..lib/warnings.ml[489,16551+26])
                Tpat_var "active/1863"
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[489,16551+27]..lib/warnings.ml[489,16551+34])
                Tpat_var "errflag/1864"
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[489,16551+35]..lib/warnings.ml[489,16551+36])
                Tpat_var "s/1865"
          ]
          Tfunction_body
            expression (lib/warnings.ml[490,16590+2]..lib/warnings.ml[535,18087+9])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[490,16590+6]..lib/warnings.ml[490,16590+11])
                    Tpat_var "flags/1866"
                  expression (lib/warnings.ml[490,16590+14]..lib/warnings.ml[490,16590+47])
                    Texp_ifthenelse
                    expression (lib/warnings.ml[490,16590+17]..lib/warnings.ml[490,16590+24])
                      Texp_ident "errflag/1864"
                    expression (lib/warnings.ml[490,16590+30]..lib/warnings.ml[490,16590+35])
                      Texp_ident "error/1862"
                    Some
                      expression (lib/warnings.ml[490,16590+41]..lib/warnings.ml[490,16590+47])
                        Texp_ident "active/1863"
              ]
              expression (lib/warnings.ml[491,16641+2]..lib/warnings.ml[535,18087+9])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/warnings.ml[491,16641+6]..lib/warnings.ml[491,16641+12])
                      Tpat_var "action/1867"
                    expression (lib/warnings.ml[491,16641+13]..lib/warnings.ml[506,17177+11]) ghost
                      Texp_function
                      [
                        Nolabel
                        Param_pat
                          pattern (lib/warnings.ml[491,16641+13]..lib/warnings.ml[491,16641+21])
                            Tpat_var "modifier/1869"
                        Nolabel
                        Param_pat
                          pattern (lib/warnings.ml[491,16641+22]..lib/warnings.ml[491,16641+23])
                            Tpat_var "i/1870"
                      ]
                      Tfunction_body
                        expression (lib/warnings.ml[491,16641+26]..lib/warnings.ml[506,17177+11])
                          Texp_match
                          expression (lib/warnings.ml[491,16641+32]..lib/warnings.ml[491,16641+40])
                            Texp_ident "modifier/1869"
                          [
                            <case>
                              pattern (lib/warnings.ml[492,16687+6]..lib/warnings.ml[492,16687+9])
                                Tpat_value
                                pattern (lib/warnings.ml[492,16687+6]..lib/warnings.ml[492,16687+9])
                                  Tpat_construct "Set"
                                  []
                                  None
                              expression (lib/warnings.ml[493,16700+8]..lib/warnings.ml[494,16773+30])
                                Texp_ifthenelse
                                expression (lib/warnings.ml[493,16700+11]..lib/warnings.ml[493,16700+16])
                                  Texp_apply
                                  expression (lib/warnings.ml[493,16700+13]..lib/warnings.ml[493,16700+14])
                                    Texp_ident "Stdlib!.="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[493,16700+11]..lib/warnings.ml[493,16700+12])
                                        Texp_ident "i/1870"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[493,16700+15]..lib/warnings.ml[493,16700+16])
                                        Texp_constant Const_int 3
                                  ]
                                expression (lib/warnings.ml[493,16700+22]..lib/warnings.ml[493,16700+72])
                                  Texp_apply
                                  expression (lib/warnings.ml[493,16700+22]..lib/warnings.ml[493,16700+31])
                                    Texp_ident "set_alert/1347"
                                  [
                                    <arg>
                                      Labelled "error"
                                      expression (lib/warnings.ml[493,16700+39]..lib/warnings.ml[493,16700+46])
                                        Texp_ident "errflag/1864"
                                    <arg>
                                      Labelled "enable"
                                      expression (lib/warnings.ml[493,16700+55]..lib/warnings.ml[493,16700+59])
                                        Texp_construct "true"
                                        []
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[493,16700+60]..lib/warnings.ml[493,16700+72])
                                        Texp_constant Const_string("deprecated",(lib/warnings.ml[493,16700+61]..lib/warnings.ml[493,16700+71]),None)
                                  ]
                                Some
                                  expression (lib/warnings.ml[494,16773+13]..lib/warnings.ml[494,16773+30])
                                    Texp_apply
                                    expression (lib/warnings.ml[494,16773+13]..lib/warnings.ml[494,16773+30]) ghost
                                      Texp_ident "Stdlib!.Array.set"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[494,16773+13]..lib/warnings.ml[494,16773+18])
                                          Texp_ident "flags/1866"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[494,16773+20]..lib/warnings.ml[494,16773+21])
                                          Texp_ident "i/1870"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[494,16773+26]..lib/warnings.ml[494,16773+30])
                                          Texp_construct "true"
                                          []
                                    ]
                            <case>
                              pattern (lib/warnings.ml[495,16804+6]..lib/warnings.ml[495,16804+11])
                                Tpat_value
                                pattern (lib/warnings.ml[495,16804+6]..lib/warnings.ml[495,16804+11])
                                  Tpat_construct "Clear"
                                  []
                                  None
                              expression (lib/warnings.ml[496,16819+8]..lib/warnings.ml[497,16893+31])
                                Texp_ifthenelse
                                expression (lib/warnings.ml[496,16819+11]..lib/warnings.ml[496,16819+16])
                                  Texp_apply
                                  expression (lib/warnings.ml[496,16819+13]..lib/warnings.ml[496,16819+14])
                                    Texp_ident "Stdlib!.="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[496,16819+11]..lib/warnings.ml[496,16819+12])
                                        Texp_ident "i/1870"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[496,16819+15]..lib/warnings.ml[496,16819+16])
                                        Texp_constant Const_int 3
                                  ]
                                expression (lib/warnings.ml[496,16819+22]..lib/warnings.ml[496,16819+73])
                                  Texp_apply
                                  expression (lib/warnings.ml[496,16819+22]..lib/warnings.ml[496,16819+31])
                                    Texp_ident "set_alert/1347"
                                  [
                                    <arg>
                                      Labelled "error"
                                      expression (lib/warnings.ml[496,16819+39]..lib/warnings.ml[496,16819+46])
                                        Texp_ident "errflag/1864"
                                    <arg>
                                      Labelled "enable"
                                      expression (lib/warnings.ml[496,16819+55]..lib/warnings.ml[496,16819+60])
                                        Texp_construct "false"
                                        []
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[496,16819+61]..lib/warnings.ml[496,16819+73])
                                        Texp_constant Const_string("deprecated",(lib/warnings.ml[496,16819+62]..lib/warnings.ml[496,16819+72]),None)
                                  ]
                                Some
                                  expression (lib/warnings.ml[497,16893+13]..lib/warnings.ml[497,16893+31])
                                    Texp_apply
                                    expression (lib/warnings.ml[497,16893+13]..lib/warnings.ml[497,16893+31]) ghost
                                      Texp_ident "Stdlib!.Array.set"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[497,16893+13]..lib/warnings.ml[497,16893+18])
                                          Texp_ident "flags/1866"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[497,16893+20]..lib/warnings.ml[497,16893+21])
                                          Texp_ident "i/1870"
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[497,16893+26]..lib/warnings.ml[497,16893+31])
                                          Texp_construct "false"
                                          []
                                    ]
                            <case>
                              pattern (lib/warnings.ml[498,16925+6]..lib/warnings.ml[498,16925+13])
                                Tpat_value
                                pattern (lib/warnings.ml[498,16925+6]..lib/warnings.ml[498,16925+13])
                                  Tpat_construct "Set_all"
                                  []
                                  None
                              expression (lib/warnings.ml[499,16942+8]..lib/warnings.ml[506,17177+11])
                                Texp_ifthenelse
                                expression (lib/warnings.ml[499,16942+11]..lib/warnings.ml[499,16942+16])
                                  Texp_apply
                                  expression (lib/warnings.ml[499,16942+13]..lib/warnings.ml[499,16942+14])
                                    Texp_ident "Stdlib!.="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[499,16942+11]..lib/warnings.ml[499,16942+12])
                                        Texp_ident "i/1870"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[499,16942+15]..lib/warnings.ml[499,16942+16])
                                        Texp_constant Const_int 3
                                  ]
                                expression (lib/warnings.ml[499,16942+22]..lib/warnings.ml[502,17088+11])
                                  Texp_sequence
                                  expression (lib/warnings.ml[500,16970+10]..lib/warnings.ml[500,16970+58])
                                    Texp_apply
                                    expression (lib/warnings.ml[500,16970+10]..lib/warnings.ml[500,16970+19])
                                      Texp_ident "set_alert/1347"
                                    [
                                      <arg>
                                        Labelled "error"
                                        expression (lib/warnings.ml[500,16970+27]..lib/warnings.ml[500,16970+32])
                                          Texp_construct "false"
                                          []
                                      <arg>
                                        Labelled "enable"
                                        expression (lib/warnings.ml[500,16970+41]..lib/warnings.ml[500,16970+45])
                                          Texp_construct "true"
                                          []
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[500,16970+46]..lib/warnings.ml[500,16970+58])
                                          Texp_constant Const_string("deprecated",(lib/warnings.ml[500,16970+47]..lib/warnings.ml[500,16970+57]),None)
                                    ]
                                  expression (lib/warnings.ml[501,17030+10]..lib/warnings.ml[501,17030+57])
                                    Texp_apply
                                    expression (lib/warnings.ml[501,17030+10]..lib/warnings.ml[501,17030+19])
                                      Texp_ident "set_alert/1347"
                                    [
                                      <arg>
                                        Labelled "error"
                                        expression (lib/warnings.ml[501,17030+27]..lib/warnings.ml[501,17030+31])
                                          Texp_construct "true"
                                          []
                                      <arg>
                                        Labelled "enable"
                                        expression (lib/warnings.ml[501,17030+40]..lib/warnings.ml[501,17030+44])
                                          Texp_construct "true"
                                          []
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[501,17030+45]..lib/warnings.ml[501,17030+57])
                                          Texp_constant Const_string("deprecated",(lib/warnings.ml[501,17030+46]..lib/warnings.ml[501,17030+56]),None)
                                    ]
                                Some
                                  expression (lib/warnings.ml[503,17100+13]..lib/warnings.ml[506,17177+11])
                                    Texp_sequence
                                    expression (lib/warnings.ml[504,17119+10]..lib/warnings.ml[504,17119+28])
                                      Texp_apply
                                      expression (lib/warnings.ml[504,17119+10]..lib/warnings.ml[504,17119+28]) ghost
                                        Texp_ident "Stdlib!.Array.set"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[504,17119+10]..lib/warnings.ml[504,17119+16])
                                            Texp_ident "active/1863"
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[504,17119+18]..lib/warnings.ml[504,17119+19])
                                            Texp_ident "i/1870"
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[504,17119+24]..lib/warnings.ml[504,17119+28])
                                            Texp_construct "true"
                                            []
                                      ]
                                    expression (lib/warnings.ml[505,17149+10]..lib/warnings.ml[505,17149+27])
                                      Texp_apply
                                      expression (lib/warnings.ml[505,17149+10]..lib/warnings.ml[505,17149+27]) ghost
                                        Texp_ident "Stdlib!.Array.set"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[505,17149+10]..lib/warnings.ml[505,17149+15])
                                            Texp_ident "error/1862"
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[505,17149+17]..lib/warnings.ml[505,17149+18])
                                            Texp_ident "i/1870"
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[505,17149+23]..lib/warnings.ml[505,17149+27])
                                            Texp_construct "true"
                                            []
                                      ]
                          ]
                ]
                expression (lib/warnings.ml[508,17194+2]..lib/warnings.ml[535,18087+9])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/warnings.ml[508,17194+6]..lib/warnings.ml[508,17194+10])
                        Tpat_var "eval/1871"
                      expression (lib/warnings.ml[508,17194+13]..lib/warnings.ml[517,17479+78])
                        Texp_function
                        []
                        Tfunction_cases (lib/warnings.ml[508,17194+13]..lib/warnings.ml[517,17479+78])
                          [
                            <case>
                              pattern (lib/warnings.ml[509,17216+6]..lib/warnings.ml[509,17216+18])
                                Tpat_construct "Letter"
                                [
                                  pattern (lib/warnings.ml[509,17216+13]..lib/warnings.ml[509,17216+14])
                                    Tpat_var "c/1873"
                                  pattern (lib/warnings.ml[509,17216+16]..lib/warnings.ml[509,17216+17])
                                    Tpat_var "m/1874"
                                ]
                                None
                              expression (lib/warnings.ml[510,17238+8]..lib/warnings.ml[515,17402+47])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/warnings.ml[510,17238+12]..lib/warnings.ml[510,17238+14])
                                      Tpat_var "lc/1878"
                                    expression (lib/warnings.ml[510,17238+17]..lib/warnings.ml[510,17238+39])
                                      Texp_apply
                                      expression (lib/warnings.ml[510,17238+17]..lib/warnings.ml[510,17238+37])
                                        Texp_ident "Stdlib!.Char.lowercase_ascii"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[510,17238+38]..lib/warnings.ml[510,17238+39])
                                            Texp_ident "c/1873"
                                      ]
                                ]
                                expression (lib/warnings.ml[511,17281+8]..lib/warnings.ml[515,17402+47])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/warnings.ml[511,17281+12]..lib/warnings.ml[511,17281+20])
                                        Tpat_var "modifier/1879"
                                      expression (lib/warnings.ml[511,17281+23]..lib/warnings.ml[513,17367+23])
                                        Texp_match
                                        expression (lib/warnings.ml[511,17281+29]..lib/warnings.ml[511,17281+30])
                                          Texp_ident "m/1874"
                                        [
                                          <case>
                                            pattern (lib/warnings.ml[512,17317+12]..lib/warnings.ml[512,17317+16])
                                              Tpat_value
                                              pattern (lib/warnings.ml[512,17317+12]..lib/warnings.ml[512,17317+16])
                                                Tpat_construct "None"
                                                []
                                                None
                                            expression (lib/warnings.ml[512,17317+20]..lib/warnings.ml[512,17317+49])
                                              Texp_ifthenelse
                                              expression (lib/warnings.ml[512,17317+23]..lib/warnings.ml[512,17317+29])
                                                Texp_apply
                                                expression (lib/warnings.ml[512,17317+25]..lib/warnings.ml[512,17317+26])
                                                  Texp_ident "Stdlib!.="
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/warnings.ml[512,17317+23]..lib/warnings.ml[512,17317+24])
                                                      Texp_ident "c/1873"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/warnings.ml[512,17317+27]..lib/warnings.ml[512,17317+29])
                                                      Texp_ident "lc/1878"
                                                ]
                                              expression (lib/warnings.ml[512,17317+35]..lib/warnings.ml[512,17317+40])
                                                Texp_construct "Clear"
                                                []
                                              Some
                                                expression (lib/warnings.ml[512,17317+46]..lib/warnings.ml[512,17317+49])
                                                  Texp_construct "Set"
                                                  []
                                          <case>
                                            pattern (lib/warnings.ml[513,17367+12]..lib/warnings.ml[513,17367+18])
                                              Tpat_value
                                              pattern (lib/warnings.ml[513,17367+12]..lib/warnings.ml[513,17367+18])
                                                Tpat_construct "Some"
                                                [
                                                  pattern (lib/warnings.ml[513,17367+17]..lib/warnings.ml[513,17367+18])
                                                    Tpat_var "m/1880"
                                                ]
                                                None
                                            expression (lib/warnings.ml[513,17367+22]..lib/warnings.ml[513,17367+23])
                                              Texp_ident "m/1880"
                                        ]
                                  ]
                                  expression (lib/warnings.ml[515,17402+8]..lib/warnings.ml[515,17402+47])
                                    Texp_apply
                                    expression (lib/warnings.ml[515,17402+8]..lib/warnings.ml[515,17402+17])
                                      Texp_ident "Stdlib!.List.iter"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[515,17402+18]..lib/warnings.ml[515,17402+35])
                                          Texp_apply
                                          expression (lib/warnings.ml[515,17402+19]..lib/warnings.ml[515,17402+25])
                                            Texp_ident "action/1867"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[515,17402+26]..lib/warnings.ml[515,17402+34])
                                                Texp_ident "modifier/1879"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[515,17402+36]..lib/warnings.ml[515,17402+47])
                                          Texp_apply
                                          expression (lib/warnings.ml[515,17402+37]..lib/warnings.ml[515,17402+43])
                                            Texp_ident "letter/587"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[515,17402+44]..lib/warnings.ml[515,17402+46])
                                                Texp_ident "lc/1878"
                                          ]
                                    ]
                            <case>
                              pattern (lib/warnings.ml[516,17450+6]..lib/warnings.ml[516,17450+25])
                                Tpat_construct "Num"
                                [
                                  pattern (lib/warnings.ml[516,17450+10]..lib/warnings.ml[516,17450+12])
                                    Tpat_var "n1/1875"
                                  pattern (lib/warnings.ml[516,17450+13]..lib/warnings.ml[516,17450+15])
                                    Tpat_var "n2/1876"
                                  pattern (lib/warnings.ml[516,17450+16]..lib/warnings.ml[516,17450+24])
                                    Tpat_var "modifier/1877"
                                ]
                                None
                              expression (lib/warnings.ml[517,17479+8]..lib/warnings.ml[517,17479+78])
                                Texp_for "n/1881" Up
                                expression (lib/warnings.ml[517,17479+16]..lib/warnings.ml[517,17479+18])
                                  Texp_ident "n1/1875"
                                expression (lib/warnings.ml[517,17479+22]..lib/warnings.ml[517,17479+52])
                                  Texp_apply
                                  expression (lib/warnings.ml[517,17479+22]..lib/warnings.ml[517,17479+29])
                                    Texp_ident "Stdlib!.Int.min"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[517,17479+30]..lib/warnings.ml[517,17479+32])
                                        Texp_ident "n2/1876"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[517,17479+33]..lib/warnings.ml[517,17479+52])
                                        Texp_ident "last_warning_number/428"
                                  ]
                                expression (lib/warnings.ml[517,17479+56]..lib/warnings.ml[517,17479+73])
                                  Texp_apply
                                  expression (lib/warnings.ml[517,17479+56]..lib/warnings.ml[517,17479+62])
                                    Texp_ident "action/1867"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[517,17479+63]..lib/warnings.ml[517,17479+71])
                                        Texp_ident "modifier/1877"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[517,17479+72]..lib/warnings.ml[517,17479+73])
                                        Texp_ident "n/1881"
                                  ]
                          ]
                  ]
                  expression (lib/warnings.ml[519,17563+2]..lib/warnings.ml[535,18087+9])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[519,17563+6]..lib/warnings.ml[519,17563+20])
                          Tpat_var "parse_and_eval/1883"
                        expression (lib/warnings.ml[519,17563+21]..lib/warnings.ml[522,17652+23]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/warnings.ml[519,17563+21]..lib/warnings.ml[519,17563+22])
                                Tpat_var "s/1885"
                          ]
                          Tfunction_body
                            expression (lib/warnings.ml[520,17588+4]..lib/warnings.ml[522,17652+23])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/warnings.ml[520,17588+8]..lib/warnings.ml[520,17588+14])
                                    Tpat_var "tokens/1886"
                                  expression (lib/warnings.ml[520,17588+17]..lib/warnings.ml[520,17588+33])
                                    Texp_apply
                                    expression (lib/warnings.ml[520,17588+17]..lib/warnings.ml[520,17588+31])
                                      Texp_ident "parse_warnings/1834"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[520,17588+32]..lib/warnings.ml[520,17588+33])
                                          Texp_ident "s/1885"
                                    ]
                              ]
                              expression (lib/warnings.ml[521,17625+4]..lib/warnings.ml[522,17652+23])
                                Texp_sequence
                                expression (lib/warnings.ml[521,17625+4]..lib/warnings.ml[521,17625+25])
                                  Texp_apply
                                  expression (lib/warnings.ml[521,17625+4]..lib/warnings.ml[521,17625+13])
                                    Texp_ident "Stdlib!.List.iter"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[521,17625+14]..lib/warnings.ml[521,17625+18])
                                        Texp_ident "eval/1871"
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[521,17625+19]..lib/warnings.ml[521,17625+25])
                                        Texp_ident "tokens/1886"
                                  ]
                                expression (lib/warnings.ml[522,17652+4]..lib/warnings.ml[522,17652+23])
                                  Texp_apply
                                  expression (lib/warnings.ml[522,17652+4]..lib/warnings.ml[522,17652+16])
                                    Texp_ident "letter_alert/1406"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[522,17652+17]..lib/warnings.ml[522,17652+23])
                                        Texp_ident "tokens/1886"
                                  ]
                    ]
                    expression (lib/warnings.ml[524,17681+3]..lib/warnings.ml[535,18087+9])
                      Texp_match
                      expression (lib/warnings.ml[524,17681+9]..lib/warnings.ml[524,17681+25])
                        Texp_apply
                        expression (lib/warnings.ml[524,17681+9]..lib/warnings.ml[524,17681+23])
                          Texp_ident "name_to_number/434"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[524,17681+24]..lib/warnings.ml[524,17681+25])
                              Texp_ident "s/1865"
                        ]
                      [
                        <case>
                          pattern (lib/warnings.ml[525,17712+4]..lib/warnings.ml[525,17712+10])
                            Tpat_value
                            pattern (lib/warnings.ml[525,17712+4]..lib/warnings.ml[525,17712+10])
                              Tpat_construct "Some"
                              [
                                pattern (lib/warnings.ml[525,17712+9]..lib/warnings.ml[525,17712+10])
                                  Tpat_var "n/1887"
                              ]
                              None
                          expression (lib/warnings.ml[525,17712+14]..lib/warnings.ml[525,17712+32])
                            Texp_sequence
                            expression (lib/warnings.ml[525,17712+14]..lib/warnings.ml[525,17712+26])
                              Texp_apply
                              expression (lib/warnings.ml[525,17712+14]..lib/warnings.ml[525,17712+20])
                                Texp_ident "action/1867"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[525,17712+21]..lib/warnings.ml[525,17712+24])
                                    Texp_construct "Set"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[525,17712+25]..lib/warnings.ml[525,17712+26])
                                    Texp_ident "n/1887"
                              ]
                            expression (lib/warnings.ml[525,17712+28]..lib/warnings.ml[525,17712+32])
                              Texp_construct "None"
                              []
                        <case>
                          pattern (lib/warnings.ml[526,17745+4]..lib/warnings.ml[526,17745+8])
                            Tpat_value
                            pattern (lib/warnings.ml[526,17745+4]..lib/warnings.ml[526,17745+8])
                              Tpat_construct "None"
                              []
                              None
                          expression (lib/warnings.ml[527,17757+6]..lib/warnings.ml[535,18087+9])
                            Texp_ifthenelse
                            expression (lib/warnings.ml[527,17757+9]..lib/warnings.ml[527,17757+15])
                              Texp_apply
                              expression (lib/warnings.ml[527,17757+11]..lib/warnings.ml[527,17757+12])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[527,17757+9]..lib/warnings.ml[527,17757+10])
                                    Texp_ident "s/1865"
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[527,17757+13]..lib/warnings.ml[527,17757+15])
                                    Texp_constant Const_string("",(lib/warnings.ml[527,17757+14]..lib/warnings.ml[527,17757+14]),None)
                              ]
                            expression (lib/warnings.ml[527,17757+21]..lib/warnings.ml[527,17757+37])
                              Texp_apply
                              expression (lib/warnings.ml[527,17757+21]..lib/warnings.ml[527,17757+35])
                                Texp_ident "parse_and_eval/1883"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[527,17757+36]..lib/warnings.ml[527,17757+37])
                                    Texp_ident "s/1865"
                              ]
                            Some
                              expression (lib/warnings.ml[528,17795+11]..lib/warnings.ml[535,18087+9])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/warnings.ml[529,17812+12]..lib/warnings.ml[529,17812+16])
                                      Tpat_var "rest/1888"
                                    expression (lib/warnings.ml[529,17812+19]..lib/warnings.ml[529,17812+55])
                                      Texp_apply
                                      expression (lib/warnings.ml[529,17812+19]..lib/warnings.ml[529,17812+29])
                                        Texp_ident "Stdlib!.String.sub"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[529,17812+30]..lib/warnings.ml[529,17812+31])
                                            Texp_ident "s/1865"
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[529,17812+32]..lib/warnings.ml[529,17812+33])
                                            Texp_constant Const_int 1
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[529,17812+34]..lib/warnings.ml[529,17812+55])
                                            Texp_apply
                                            expression (lib/warnings.ml[529,17812+51]..lib/warnings.ml[529,17812+52])
                                              Texp_ident "Stdlib!.-"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[529,17812+35]..lib/warnings.ml[529,17812+50])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[529,17812+35]..lib/warnings.ml[529,17812+48])
                                                    Texp_ident "Stdlib!.String.length"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[529,17812+49]..lib/warnings.ml[529,17812+50])
                                                        Texp_ident "s/1865"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[529,17812+53]..lib/warnings.ml[529,17812+54])
                                                  Texp_constant Const_int 1
                                            ]
                                      ]
                                ]
                                expression (lib/warnings.ml[530,17871+8]..lib/warnings.ml[534,18055+31])
                                  Texp_match
                                  expression (lib/warnings.ml[530,17871+14]..lib/warnings.ml[530,17871+40])
                                    Texp_tuple
                                    [
                                      expression (lib/warnings.ml[530,17871+14]..lib/warnings.ml[530,17871+19])
                                        Texp_apply
                                        expression (lib/warnings.ml[530,17871+14]..lib/warnings.ml[530,17871+19]) ghost
                                          Texp_ident "Stdlib!.String.get"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[530,17871+14]..lib/warnings.ml[530,17871+15])
                                              Texp_ident "s/1865"
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[530,17871+17]..lib/warnings.ml[530,17871+18])
                                              Texp_constant Const_int 0
                                        ]
                                      expression (lib/warnings.ml[530,17871+21]..lib/warnings.ml[530,17871+40])
                                        Texp_apply
                                        expression (lib/warnings.ml[530,17871+21]..lib/warnings.ml[530,17871+35])
                                          Texp_ident "name_to_number/434"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[530,17871+36]..lib/warnings.ml[530,17871+40])
                                              Texp_ident "rest/1888"
                                        ]
                                    ]
                                  [
                                    <case>
                                      pattern (lib/warnings.ml[531,17917+10]..lib/warnings.ml[531,17917+21])
                                        Tpat_value
                                        pattern (lib/warnings.ml[531,17917+10]..lib/warnings.ml[531,17917+21])
                                          Tpat_tuple
                                          [
                                            pattern (lib/warnings.ml[531,17917+10]..lib/warnings.ml[531,17917+13])
                                              Tpat_constant Const_char 2b
                                            pattern (lib/warnings.ml[531,17917+15]..lib/warnings.ml[531,17917+21])
                                              Tpat_construct "Some"
                                              [
                                                pattern (lib/warnings.ml[531,17917+20]..lib/warnings.ml[531,17917+21])
                                                  Tpat_var "n/1889"
                                              ]
                                              None
                                          ]
                                      expression (lib/warnings.ml[531,17917+25]..lib/warnings.ml[531,17917+43])
                                        Texp_sequence
                                        expression (lib/warnings.ml[531,17917+25]..lib/warnings.ml[531,17917+37])
                                          Texp_apply
                                          expression (lib/warnings.ml[531,17917+25]..lib/warnings.ml[531,17917+31])
                                            Texp_ident "action/1867"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[531,17917+32]..lib/warnings.ml[531,17917+35])
                                                Texp_construct "Set"
                                                []
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[531,17917+36]..lib/warnings.ml[531,17917+37])
                                                Texp_ident "n/1889"
                                          ]
                                        expression (lib/warnings.ml[531,17917+39]..lib/warnings.ml[531,17917+43])
                                          Texp_construct "None"
                                          []
                                    <case>
                                      pattern (lib/warnings.ml[532,17961+10]..lib/warnings.ml[532,17961+21])
                                        Tpat_value
                                        pattern (lib/warnings.ml[532,17961+10]..lib/warnings.ml[532,17961+21])
                                          Tpat_tuple
                                          [
                                            pattern (lib/warnings.ml[532,17961+10]..lib/warnings.ml[532,17961+13])
                                              Tpat_constant Const_char 2d
                                            pattern (lib/warnings.ml[532,17961+15]..lib/warnings.ml[532,17961+21])
                                              Tpat_construct "Some"
                                              [
                                                pattern (lib/warnings.ml[532,17961+20]..lib/warnings.ml[532,17961+21])
                                                  Tpat_var "n/1890"
                                              ]
                                              None
                                          ]
                                      expression (lib/warnings.ml[532,17961+25]..lib/warnings.ml[532,17961+45])
                                        Texp_sequence
                                        expression (lib/warnings.ml[532,17961+25]..lib/warnings.ml[532,17961+39])
                                          Texp_apply
                                          expression (lib/warnings.ml[532,17961+25]..lib/warnings.ml[532,17961+31])
                                            Texp_ident "action/1867"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[532,17961+32]..lib/warnings.ml[532,17961+37])
                                                Texp_construct "Clear"
                                                []
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[532,17961+38]..lib/warnings.ml[532,17961+39])
                                                Texp_ident "n/1890"
                                          ]
                                        expression (lib/warnings.ml[532,17961+41]..lib/warnings.ml[532,17961+45])
                                          Texp_construct "None"
                                          []
                                    <case>
                                      pattern (lib/warnings.ml[533,18007+10]..lib/warnings.ml[533,18007+21])
                                        Tpat_value
                                        pattern (lib/warnings.ml[533,18007+10]..lib/warnings.ml[533,18007+21])
                                          Tpat_tuple
                                          [
                                            pattern (lib/warnings.ml[533,18007+10]..lib/warnings.ml[533,18007+13])
                                              Tpat_constant Const_char 40
                                            pattern (lib/warnings.ml[533,18007+15]..lib/warnings.ml[533,18007+21])
                                              Tpat_construct "Some"
                                              [
                                                pattern (lib/warnings.ml[533,18007+20]..lib/warnings.ml[533,18007+21])
                                                  Tpat_var "n/1891"
                                              ]
                                              None
                                          ]
                                      expression (lib/warnings.ml[533,18007+25]..lib/warnings.ml[533,18007+47])
                                        Texp_sequence
                                        expression (lib/warnings.ml[533,18007+25]..lib/warnings.ml[533,18007+41])
                                          Texp_apply
                                          expression (lib/warnings.ml[533,18007+25]..lib/warnings.ml[533,18007+31])
                                            Texp_ident "action/1867"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[533,18007+32]..lib/warnings.ml[533,18007+39])
                                                Texp_construct "Set_all"
                                                []
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[533,18007+40]..lib/warnings.ml[533,18007+41])
                                                Texp_ident "n/1891"
                                          ]
                                        expression (lib/warnings.ml[533,18007+43]..lib/warnings.ml[533,18007+47])
                                          Texp_construct "None"
                                          []
                                    <case>
                                      pattern (lib/warnings.ml[534,18055+10]..lib/warnings.ml[534,18055+11])
                                        Tpat_value
                                        pattern (lib/warnings.ml[534,18055+10]..lib/warnings.ml[534,18055+11])
                                          Tpat_any
                                      expression (lib/warnings.ml[534,18055+15]..lib/warnings.ml[534,18055+31])
                                        Texp_apply
                                        expression (lib/warnings.ml[534,18055+15]..lib/warnings.ml[534,18055+29])
                                          Texp_ident "parse_and_eval/1883"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[534,18055+30]..lib/warnings.ml[534,18055+31])
                                              Texp_ident "s/1865"
                                        ]
                                  ]
                      ]
    ]
  structure_item (lib/warnings.ml[537,18098+0]..lib/warnings.ml[542,18317+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[537,18098+4]..lib/warnings.ml[537,18098+17])
          Tpat_var "parse_options/1892"
        expression (lib/warnings.ml[537,18098+18]..lib/warnings.ml[542,18317+8]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[537,18098+18]..lib/warnings.ml[537,18098+25])
                Tpat_var "errflag/1894"
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[537,18098+26]..lib/warnings.ml[537,18098+27])
                Tpat_var "s/1895"
          ]
          Tfunction_body
            expression (lib/warnings.ml[538,18128+2]..lib/warnings.ml[542,18317+8])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[538,18128+6]..lib/warnings.ml[538,18128+11])
                    Tpat_var "error/1896"
                  expression (lib/warnings.ml[538,18128+14]..lib/warnings.ml[538,18128+41])
                    Texp_apply
                    expression (lib/warnings.ml[538,18128+14]..lib/warnings.ml[538,18128+24])
                      Texp_ident "Stdlib!.Array.copy"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[538,18128+25]..lib/warnings.ml[538,18128+41])
                          Texp_field
                          expression (lib/warnings.ml[538,18128+25]..lib/warnings.ml[538,18128+35])
                            Texp_apply
                            expression (lib/warnings.ml[538,18128+26]..lib/warnings.ml[538,18128+27])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[538,18128+27]..lib/warnings.ml[538,18128+34])
                                  Texp_ident "current/1188"
                            ]
                          "error"
                    ]
              ]
              expression (lib/warnings.ml[539,18173+2]..lib/warnings.ml[542,18317+8])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/warnings.ml[539,18173+6]..lib/warnings.ml[539,18173+12])
                      Tpat_var "active/1897"
                    expression (lib/warnings.ml[539,18173+15]..lib/warnings.ml[539,18173+43])
                      Texp_apply
                      expression (lib/warnings.ml[539,18173+15]..lib/warnings.ml[539,18173+25])
                        Texp_ident "Stdlib!.Array.copy"
                      [
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[539,18173+26]..lib/warnings.ml[539,18173+43])
                            Texp_field
                            expression (lib/warnings.ml[539,18173+26]..lib/warnings.ml[539,18173+36])
                              Texp_apply
                              expression (lib/warnings.ml[539,18173+27]..lib/warnings.ml[539,18173+28])
                                Texp_ident "Stdlib!.!"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[539,18173+28]..lib/warnings.ml[539,18173+35])
                                    Texp_ident "current/1188"
                              ]
                            "active"
                      ]
                ]
                expression (lib/warnings.ml[540,18220+2]..lib/warnings.ml[542,18317+8])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/warnings.ml[540,18220+6]..lib/warnings.ml[540,18220+12])
                        Tpat_var "alerts/1898"
                      expression (lib/warnings.ml[540,18220+15]..lib/warnings.ml[540,18220+47])
                        Texp_apply
                        expression (lib/warnings.ml[540,18220+15]..lib/warnings.ml[540,18220+24])
                          Texp_ident "parse_opt/1860"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[540,18220+25]..lib/warnings.ml[540,18220+30])
                              Texp_ident "error/1896"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[540,18220+31]..lib/warnings.ml[540,18220+37])
                              Texp_ident "active/1897"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[540,18220+38]..lib/warnings.ml[540,18220+45])
                              Texp_ident "errflag/1894"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[540,18220+46]..lib/warnings.ml[540,18220+47])
                              Texp_ident "s/1895"
                        ]
                  ]
                  expression (lib/warnings.ml[541,18271+2]..lib/warnings.ml[542,18317+8])
                    Texp_sequence
                    expression (lib/warnings.ml[541,18271+2]..lib/warnings.ml[541,18271+44])
                      Texp_apply
                      expression (lib/warnings.ml[541,18271+10]..lib/warnings.ml[541,18271+12])
                        Texp_ident "Stdlib!.:="
                      [
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[541,18271+2]..lib/warnings.ml[541,18271+9])
                            Texp_ident "current/1188"
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[541,18271+13]..lib/warnings.ml[541,18271+44])
                            Texp_record
                              fields =
                                [
                                  "active"
                                    expression (lib/warnings.ml[541,18271+37]..lib/warnings.ml[541,18271+43])
                                      Texp_ident "active/1897"
                                  "error"
                                    expression (lib/warnings.ml[541,18271+30]..lib/warnings.ml[541,18271+35])
                                      Texp_ident "error/1896"
                                  <kept>                                  <kept>                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                Some
                                  expression (lib/warnings.ml[541,18271+14]..lib/warnings.ml[541,18271+24])
                                    Texp_apply
                                    expression (lib/warnings.ml[541,18271+15]..lib/warnings.ml[541,18271+16])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[541,18271+16]..lib/warnings.ml[541,18271+23])
                                          Texp_ident "current/1188"
                                    ]
                      ]
                    expression (lib/warnings.ml[542,18317+2]..lib/warnings.ml[542,18317+8])
                      Texp_ident "alerts/1898"
    ]
  structure_item (lib/warnings.ml[545,18398+0]..lib/warnings.ml[545,18398+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[545,18398+4]..lib/warnings.ml[545,18398+14])
          Tpat_var "defaults_w/1899"
        expression (lib/warnings.ml[545,18398+17]..lib/warnings.ml[545,18398+65])
          Texp_constant Const_string("+a-4-7-9-27-29-30-32..42-44-45-48-50-60-66..70",(lib/warnings.ml[545,18398+18]..lib/warnings.ml[545,18398+64]),None)
    ]
  structure_item (lib/warnings.ml[546,18464+0]..lib/warnings.ml[546,18464+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[546,18464+4]..lib/warnings.ml[546,18464+23])
          Tpat_var "defaults_warn_error/1900"
        expression (lib/warnings.ml[546,18464+26]..lib/warnings.ml[546,18464+30])
          Texp_constant Const_string("-a",(lib/warnings.ml[546,18464+27]..lib/warnings.ml[546,18464+29]),None)
    ]
  structure_item (lib/warnings.ml[547,18495+0]..lib/warnings.ml[547,18495+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[547,18495+4]..lib/warnings.ml[547,18495+27])
          Tpat_var "default_disabled_alerts/1901"
        expression (lib/warnings.ml[547,18495+30]..lib/warnings.ml[547,18495+69])
          Texp_construct "::"
          [
            expression (lib/warnings.ml[547,18495+32]..lib/warnings.ml[547,18495+42])
              Texp_constant Const_string("unstable",(lib/warnings.ml[547,18495+33]..lib/warnings.ml[547,18495+41]),None)
            expression (lib/warnings.ml[547,18495+44]..lib/warnings.ml[547,18495+69]) ghost
              Texp_construct "::"
              [
                expression (lib/warnings.ml[547,18495+44]..lib/warnings.ml[547,18495+67])
                  Texp_constant Const_string("unsynchronized_access",(lib/warnings.ml[547,18495+45]..lib/warnings.ml[547,18495+66]),None)
                expression (lib/warnings.ml[547,18495+68]..lib/warnings.ml[547,18495+69]) ghost
                  Texp_construct "[]"
                  []
              ]
          ]
    ]
  structure_item (lib/warnings.ml[549,18566+0]..lib/warnings.ml[549,18566+49])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[549,18566+4]..lib/warnings.ml[549,18566+6])
          Tpat_construct "()"
          []
          None
        expression (lib/warnings.ml[549,18566+9]..lib/warnings.ml[549,18566+49])
          Texp_apply
          expression (lib/warnings.ml[549,18566+9]..lib/warnings.ml[549,18566+15])
            Texp_ident "Stdlib!.ignore"
          [
            <arg>
              Nolabel
              expression (lib/warnings.ml[549,18566+19]..lib/warnings.ml[549,18566+49])
                Texp_apply
                expression (lib/warnings.ml[549,18566+19]..lib/warnings.ml[549,18566+32])
                  Texp_ident "parse_options/1892"
                [
                  <arg>
                    Nolabel
                    expression (lib/warnings.ml[549,18566+33]..lib/warnings.ml[549,18566+38])
                      Texp_construct "false"
                      []
                  <arg>
                    Nolabel
                    expression (lib/warnings.ml[549,18566+39]..lib/warnings.ml[549,18566+49])
                      Texp_ident "defaults_w/1899"
                ]
          ]
    ]
  structure_item (lib/warnings.ml[550,18616+0]..lib/warnings.ml[550,18616+57])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[550,18616+4]..lib/warnings.ml[550,18616+6])
          Tpat_construct "()"
          []
          None
        expression (lib/warnings.ml[550,18616+9]..lib/warnings.ml[550,18616+57])
          Texp_apply
          expression (lib/warnings.ml[550,18616+9]..lib/warnings.ml[550,18616+15])
            Texp_ident "Stdlib!.ignore"
          [
            <arg>
              Nolabel
              expression (lib/warnings.ml[550,18616+19]..lib/warnings.ml[550,18616+57])
                Texp_apply
                expression (lib/warnings.ml[550,18616+19]..lib/warnings.ml[550,18616+32])
                  Texp_ident "parse_options/1892"
                [
                  <arg>
                    Nolabel
                    expression (lib/warnings.ml[550,18616+33]..lib/warnings.ml[550,18616+37])
                      Texp_construct "true"
                      []
                  <arg>
                    Nolabel
                    expression (lib/warnings.ml[550,18616+38]..lib/warnings.ml[550,18616+57])
                      Texp_ident "defaults_warn_error/1900"
                ]
          ]
    ]
  structure_item (lib/warnings.ml[551,18674+0]..lib/warnings.ml[552,18683+74])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[551,18674+4]..lib/warnings.ml[551,18674+6])
          Tpat_construct "()"
          []
          None
        expression (lib/warnings.ml[552,18683+2]..lib/warnings.ml[552,18683+74])
          Texp_apply
          expression (lib/warnings.ml[552,18683+2]..lib/warnings.ml[552,18683+11])
            Texp_ident "Stdlib!.List.iter"
          [
            <arg>
              Nolabel
              expression (lib/warnings.ml[552,18683+12]..lib/warnings.ml[552,18683+50])
                Texp_apply
                expression (lib/warnings.ml[552,18683+13]..lib/warnings.ml[552,18683+22])
                  Texp_ident "set_alert/1347"
                [
                  <arg>
                    Labelled "error"
                    expression (lib/warnings.ml[552,18683+30]..lib/warnings.ml[552,18683+35])
                      Texp_construct "false"
                      []
                  <arg>
                    Labelled "enable"
                    expression (lib/warnings.ml[552,18683+44]..lib/warnings.ml[552,18683+49])
                      Texp_construct "false"
                      []
                ]
            <arg>
              Nolabel
              expression (lib/warnings.ml[552,18683+51]..lib/warnings.ml[552,18683+74])
                Texp_ident "default_disabled_alerts/1901"
          ]
    ]
  structure_item (lib/warnings.ml[554,18759+0]..lib/warnings.ml[817,31065+70])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[554,18759+4]..lib/warnings.ml[554,18759+11])
          Tpat_var "message/1902"
        expression (lib/warnings.ml[554,18759+14]..lib/warnings.ml[817,31065+70])
          Texp_function
          []
          Tfunction_cases (lib/warnings.ml[554,18759+14]..lib/warnings.ml[817,31065+70])
            [
              <case>
                pattern (lib/warnings.ml[555,18782+4]..lib/warnings.ml[555,18782+17])
                  Tpat_construct "Comment_start"
                  []
                  None
                expression (lib/warnings.ml[556,18803+6]..lib/warnings.ml[557,18850+76])
                  Texp_constant Const_string("this `(*' is the start of a comment.\nHint: Did you forget spaces when writing the infix operator `( * )'?",(lib/warnings.ml[556,18803+7]..lib/warnings.ml[557,18850+75]),None)
              <case>
                pattern (lib/warnings.ml[558,18927+4]..lib/warnings.ml[558,18927+19])
                  Tpat_construct "Comment_not_end"
                  []
                  None
                expression (lib/warnings.ml[558,18927+23]..lib/warnings.ml[558,18927+58])
                  Texp_constant Const_string("this is not the end of a comment.",(lib/warnings.ml[558,18927+24]..lib/warnings.ml[558,18927+57]),None)
              <case>
                pattern (lib/warnings.ml[559,18986+4]..lib/warnings.ml[559,18986+20])
                  Tpat_construct "Fragile_match"
                  [
                    pattern (lib/warnings.ml[559,18986+18]..lib/warnings.ml[559,18986+20])
                      Tpat_constant Const_string("",(lib/warnings.ml[559,18986+19]..lib/warnings.ml[559,18986+19]),None)
                  ]
                  None
                expression (lib/warnings.ml[560,19010+6]..lib/warnings.ml[560,19010+41])
                  Texp_constant Const_string("this pattern-matching is fragile.",(lib/warnings.ml[560,19010+7]..lib/warnings.ml[560,19010+40]),None)
              <case>
                pattern (lib/warnings.ml[561,19052+4]..lib/warnings.ml[561,19052+19])
                  Tpat_construct "Fragile_match"
                  [
                    pattern (lib/warnings.ml[561,19052+18]..lib/warnings.ml[561,19052+19])
                      Tpat_var "s/1904"
                  ]
                  None
                expression (lib/warnings.ml[562,19075+6]..lib/warnings.ml[563,19119+80])
                  Texp_apply
                  expression (lib/warnings.ml[563,19119+71]..lib/warnings.ml[563,19119+72])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[562,19075+6]..lib/warnings.ml[563,19119+70])
                        Texp_constant Const_string("this pattern-matching is fragile.\nIt will remain exhaustive when constructors are added to type ",(lib/warnings.ml[562,19075+7]..lib/warnings.ml[563,19119+69]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[563,19119+73]..lib/warnings.ml[563,19119+80])
                        Texp_apply
                        expression (lib/warnings.ml[563,19119+75]..lib/warnings.ml[563,19119+76])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[563,19119+73]..lib/warnings.ml[563,19119+74])
                              Texp_ident "s/1904"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[563,19119+77]..lib/warnings.ml[563,19119+80])
                              Texp_constant Const_string(".",(lib/warnings.ml[563,19119+78]..lib/warnings.ml[563,19119+79]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[564,19200+4]..lib/warnings.ml[564,19200+31])
                  Tpat_construct "Ignored_partial_application"
                  []
                  None
                expression (lib/warnings.ml[565,19235+6]..lib/warnings.ml[566,19283+41])
                  Texp_constant Const_string("this function application is partial,\nmaybe some arguments are missing.",(lib/warnings.ml[565,19235+7]..lib/warnings.ml[566,19283+40]),None)
              <case>
                pattern (lib/warnings.ml[567,19325+4]..lib/warnings.ml[567,19325+21])
                  Tpat_construct "Labels_omitted"
                  [
                    pattern (lib/warnings.ml[567,19325+19]..lib/warnings.ml[567,19325+21])
                      Tpat_construct "[]"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[567,19325+25]..lib/warnings.ml[567,19325+37])
                  Texp_assert                  expression (lib/warnings.ml[567,19325+32]..lib/warnings.ml[567,19325+37])
                    Texp_construct "false"
                    []
              <case>
                pattern (lib/warnings.ml[568,19363+4]..lib/warnings.ml[568,19363+22])
                  Tpat_construct "Labels_omitted"
                  [
                    pattern (lib/warnings.ml[568,19363+19]..lib/warnings.ml[568,19363+22])
                      Tpat_construct "::"
                      [
                        pattern (lib/warnings.ml[568,19363+20]..lib/warnings.ml[568,19363+21])
                          Tpat_var "l/1905"
                        pattern (lib/warnings.ml[568,19363+21]..lib/warnings.ml[568,19363+22]) ghost
                          Tpat_construct "[]"
                          []
                          None
                      ]
                      None
                  ]
                  None
                expression (lib/warnings.ml[569,19389+5]..lib/warnings.ml[569,19389+71])
                  Texp_apply
                  expression (lib/warnings.ml[569,19389+14]..lib/warnings.ml[569,19389+15])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[569,19389+5]..lib/warnings.ml[569,19389+13])
                        Texp_constant Const_string("label ",(lib/warnings.ml[569,19389+6]..lib/warnings.ml[569,19389+12]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[569,19389+16]..lib/warnings.ml[569,19389+71])
                        Texp_apply
                        expression (lib/warnings.ml[569,19389+18]..lib/warnings.ml[569,19389+19])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[569,19389+16]..lib/warnings.ml[569,19389+17])
                              Texp_ident "l/1905"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[569,19389+20]..lib/warnings.ml[569,19389+71])
                              Texp_constant Const_string(" was omitted in the application of this function.",(lib/warnings.ml[569,19389+21]..lib/warnings.ml[569,19389+70]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[570,19461+4]..lib/warnings.ml[570,19461+21])
                  Tpat_construct "Labels_omitted"
                  [
                    pattern (lib/warnings.ml[570,19461+19]..lib/warnings.ml[570,19461+21])
                      Tpat_var "ls/1906"
                  ]
                  None
                expression (lib/warnings.ml[571,19486+5]..lib/warnings.ml[572,19527+59])
                  Texp_apply
                  expression (lib/warnings.ml[571,19486+15]..lib/warnings.ml[571,19486+16])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[571,19486+5]..lib/warnings.ml[571,19486+14])
                        Texp_constant Const_string("labels ",(lib/warnings.ml[571,19486+6]..lib/warnings.ml[571,19486+13]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[571,19486+17]..lib/warnings.ml[572,19527+59])
                        Texp_apply
                        expression (lib/warnings.ml[571,19486+39]..lib/warnings.ml[571,19486+40])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[571,19486+17]..lib/warnings.ml[571,19486+38])
                              Texp_apply
                              expression (lib/warnings.ml[571,19486+17]..lib/warnings.ml[571,19486+30])
                                Texp_ident "Stdlib!.String.concat"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[571,19486+31]..lib/warnings.ml[571,19486+35])
                                    Texp_constant Const_string(", ",(lib/warnings.ml[571,19486+32]..lib/warnings.ml[571,19486+34]),None)
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[571,19486+36]..lib/warnings.ml[571,19486+38])
                                    Texp_ident "ls/1906"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[572,19527+7]..lib/warnings.ml[572,19527+59])
                              Texp_constant Const_string(" were omitted in the application of this function.",(lib/warnings.ml[572,19527+8]..lib/warnings.ml[572,19527+58]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[573,19587+4]..lib/warnings.ml[573,19587+25])
                  Tpat_construct "Method_override"
                  [
                    pattern (lib/warnings.ml[573,19587+20]..lib/warnings.ml[573,19587+25])
                      Tpat_construct "::"
                      [
                        pattern (lib/warnings.ml[573,19587+21]..lib/warnings.ml[573,19587+24])
                          Tpat_var "lab/1907"
                        pattern (lib/warnings.ml[573,19587+24]..lib/warnings.ml[573,19587+25]) ghost
                          Tpat_construct "[]"
                          []
                          None
                      ]
                      None
                  ]
                  None
                expression (lib/warnings.ml[574,19616+6]..lib/warnings.ml[574,19616+45])
                  Texp_apply
                  expression (lib/warnings.ml[574,19616+20]..lib/warnings.ml[574,19616+21])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[574,19616+6]..lib/warnings.ml[574,19616+19])
                        Texp_constant Const_string("the method ",(lib/warnings.ml[574,19616+7]..lib/warnings.ml[574,19616+18]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[574,19616+22]..lib/warnings.ml[574,19616+45])
                        Texp_apply
                        expression (lib/warnings.ml[574,19616+26]..lib/warnings.ml[574,19616+27])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[574,19616+22]..lib/warnings.ml[574,19616+25])
                              Texp_ident "lab/1907"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[574,19616+28]..lib/warnings.ml[574,19616+45])
                              Texp_constant Const_string(" is overridden.",(lib/warnings.ml[574,19616+29]..lib/warnings.ml[574,19616+44]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[575,19662+4]..lib/warnings.ml[575,19662+36])
                  Tpat_construct "Method_override"
                  [
                    pattern (lib/warnings.ml[575,19662+20]..lib/warnings.ml[575,19662+36])
                      Tpat_construct "::"
                      [
                        pattern (lib/warnings.ml[575,19662+21]..lib/warnings.ml[575,19662+26])
                          Tpat_var "cname/1908"
                        pattern (lib/warnings.ml[575,19662+30]..lib/warnings.ml[575,19662+35])
                          Tpat_var "slist/1909"
                      ]
                      None
                  ]
                  None
                expression (lib/warnings.ml[576,19702+6]..lib/warnings.ml[578,19787+38])
                  Texp_apply
                  expression (lib/warnings.ml[576,19702+6]..lib/warnings.ml[576,19702+19])
                    Texp_ident "Stdlib!.String.concat"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[576,19702+20]..lib/warnings.ml[576,19702+23])
                        Texp_constant Const_string(" ",(lib/warnings.ml[576,19702+21]..lib/warnings.ml[576,19702+22]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[577,19726+8]..lib/warnings.ml[578,19787+38])
                        Texp_construct "::"
                        [
                          expression (lib/warnings.ml[577,19726+9]..lib/warnings.ml[577,19726+60])
                            Texp_constant Const_string("the following methods are overridden by the class",(lib/warnings.ml[577,19726+10]..lib/warnings.ml[577,19726+59]),None)
                          expression (lib/warnings.ml[578,19787+12]..lib/warnings.ml[578,19787+37])
                            Texp_construct "::"
                            [
                              expression (lib/warnings.ml[578,19787+12]..lib/warnings.ml[578,19787+17])
                                Texp_ident "cname/1908"
                              expression (lib/warnings.ml[578,19787+22]..lib/warnings.ml[578,19787+37])
                                Texp_construct "::"
                                [
                                  expression (lib/warnings.ml[578,19787+22]..lib/warnings.ml[578,19787+28])
                                    Texp_constant Const_string(":\n ",(lib/warnings.ml[578,19787+23]..lib/warnings.ml[578,19787+27]),None)
                                  expression (lib/warnings.ml[578,19787+32]..lib/warnings.ml[578,19787+37])
                                    Texp_ident "slist/1909"
                                ]
                            ]
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[579,19826+4]..lib/warnings.ml[579,19826+22])
                  Tpat_construct "Method_override"
                  [
                    pattern (lib/warnings.ml[579,19826+20]..lib/warnings.ml[579,19826+22])
                      Tpat_construct "[]"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[579,19826+26]..lib/warnings.ml[579,19826+38])
                  Texp_assert                  expression (lib/warnings.ml[579,19826+33]..lib/warnings.ml[579,19826+38])
                    Texp_construct "false"
                    []
              <case>
                pattern (lib/warnings.ml[580,19865+4]..lib/warnings.ml[580,19865+20])
                  Tpat_construct "Partial_match"
                  [
                    pattern (lib/warnings.ml[580,19865+18]..lib/warnings.ml[580,19865+20])
                      Tpat_constant Const_string("",(lib/warnings.ml[580,19865+19]..lib/warnings.ml[580,19865+19]),None)
                  ]
                  None
                expression (lib/warnings.ml[580,19865+24]..lib/warnings.ml[580,19865+66])
                  Texp_constant Const_string("this pattern-matching is not exhaustive.",(lib/warnings.ml[580,19865+25]..lib/warnings.ml[580,19865+65]),None)
              <case>
                pattern (lib/warnings.ml[581,19932+4]..lib/warnings.ml[581,19932+19])
                  Tpat_construct "Partial_match"
                  [
                    pattern (lib/warnings.ml[581,19932+18]..lib/warnings.ml[581,19932+19])
                      Tpat_var "s/1910"
                  ]
                  None
                expression (lib/warnings.ml[582,19955+6]..lib/warnings.ml[583,20006+63])
                  Texp_apply
                  expression (lib/warnings.ml[583,20006+60]..lib/warnings.ml[583,20006+61])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[582,19955+6]..lib/warnings.ml[583,20006+59])
                        Texp_constant Const_string("this pattern-matching is not exhaustive.\nHere is an example of a case that is not matched:\n",(lib/warnings.ml[582,19955+7]..lib/warnings.ml[583,20006+58]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[583,20006+62]..lib/warnings.ml[583,20006+63])
                        Texp_ident "s/1910"
                  ]
              <case>
                pattern (lib/warnings.ml[584,20070+4]..lib/warnings.ml[584,20070+34])
                  Tpat_construct "Missing_record_field_pattern"
                  [
                    pattern (lib/warnings.ml[584,20070+33]..lib/warnings.ml[584,20070+34])
                      Tpat_var "s/1911"
                  ]
                  None
                expression (lib/warnings.ml[585,20108+6]..lib/warnings.ml[586,20183+74])
                  Texp_apply
                  expression (lib/warnings.ml[585,20108+69]..lib/warnings.ml[585,20108+70])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[585,20108+6]..lib/warnings.ml[585,20108+68])
                        Texp_constant Const_string("the following labels are not bound in this record pattern:\n",(lib/warnings.ml[585,20108+7]..lib/warnings.ml[585,20108+67]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[585,20108+71]..lib/warnings.ml[586,20183+74])
                        Texp_apply
                        expression (lib/warnings.ml[585,20108+73]..lib/warnings.ml[585,20108+74])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[585,20108+71]..lib/warnings.ml[585,20108+72])
                              Texp_ident "s/1911"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[586,20183+6]..lib/warnings.ml[586,20183+74])
                              Texp_constant Const_string("\nEither bind these labels explicitly or add '; _' to the pattern.",(lib/warnings.ml[586,20183+7]..lib/warnings.ml[586,20183+73]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[587,20258+4]..lib/warnings.ml[587,20258+22])
                  Tpat_construct "Non_unit_statement"
                  []
                  None
                expression (lib/warnings.ml[588,20284+6]..lib/warnings.ml[588,20284+46])
                  Texp_constant Const_string("this expression should have type unit.",(lib/warnings.ml[588,20284+7]..lib/warnings.ml[588,20284+45]),None)
              <case>
                pattern (lib/warnings.ml[589,20331+4]..lib/warnings.ml[589,20331+18])
                  Tpat_construct "Redundant_case"
                  []
                  None
                expression (lib/warnings.ml[589,20331+22]..lib/warnings.ml[589,20331+50])
                  Texp_constant Const_string("this match case is unused.",(lib/warnings.ml[589,20331+23]..lib/warnings.ml[589,20331+49]),None)
              <case>
                pattern (lib/warnings.ml[590,20382+4]..lib/warnings.ml[590,20382+20])
                  Tpat_construct "Redundant_subpat"
                  []
                  None
                expression (lib/warnings.ml[590,20382+24]..lib/warnings.ml[590,20382+53])
                  Texp_constant Const_string("this sub-pattern is unused.",(lib/warnings.ml[590,20382+25]..lib/warnings.ml[590,20382+52]),None)
              <case>
                pattern (lib/warnings.ml[591,20436+4]..lib/warnings.ml[591,20436+36])
                  Tpat_construct "Instance_variable_override"
                  [
                    pattern (lib/warnings.ml[591,20436+31]..lib/warnings.ml[591,20436+36])
                      Tpat_construct "::"
                      [
                        pattern (lib/warnings.ml[591,20436+32]..lib/warnings.ml[591,20436+35])
                          Tpat_var "lab/1912"
                        pattern (lib/warnings.ml[591,20436+35]..lib/warnings.ml[591,20436+36]) ghost
                          Tpat_construct "[]"
                          []
                          None
                      ]
                      None
                  ]
                  None
                expression (lib/warnings.ml[592,20476+6]..lib/warnings.ml[592,20476+56])
                  Texp_apply
                  expression (lib/warnings.ml[592,20476+31]..lib/warnings.ml[592,20476+32])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[592,20476+6]..lib/warnings.ml[592,20476+30])
                        Texp_constant Const_string("the instance variable ",(lib/warnings.ml[592,20476+7]..lib/warnings.ml[592,20476+29]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[592,20476+33]..lib/warnings.ml[592,20476+56])
                        Texp_apply
                        expression (lib/warnings.ml[592,20476+37]..lib/warnings.ml[592,20476+38])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[592,20476+33]..lib/warnings.ml[592,20476+36])
                              Texp_ident "lab/1912"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[592,20476+39]..lib/warnings.ml[592,20476+56])
                              Texp_constant Const_string(" is overridden.",(lib/warnings.ml[592,20476+40]..lib/warnings.ml[592,20476+55]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[593,20533+4]..lib/warnings.ml[593,20533+47])
                  Tpat_construct "Instance_variable_override"
                  [
                    pattern (lib/warnings.ml[593,20533+31]..lib/warnings.ml[593,20533+47])
                      Tpat_construct "::"
                      [
                        pattern (lib/warnings.ml[593,20533+32]..lib/warnings.ml[593,20533+37])
                          Tpat_var "cname/1913"
                        pattern (lib/warnings.ml[593,20533+41]..lib/warnings.ml[593,20533+46])
                          Tpat_var "slist/1914"
                      ]
                      None
                  ]
                  None
                expression (lib/warnings.ml[594,20584+6]..lib/warnings.ml[596,20680+38])
                  Texp_apply
                  expression (lib/warnings.ml[594,20584+6]..lib/warnings.ml[594,20584+19])
                    Texp_ident "Stdlib!.String.concat"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[594,20584+20]..lib/warnings.ml[594,20584+23])
                        Texp_constant Const_string(" ",(lib/warnings.ml[594,20584+21]..lib/warnings.ml[594,20584+22]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[595,20608+8]..lib/warnings.ml[596,20680+38])
                        Texp_construct "::"
                        [
                          expression (lib/warnings.ml[595,20608+9]..lib/warnings.ml[595,20608+71])
                            Texp_constant Const_string("the following instance variables are overridden by the class",(lib/warnings.ml[595,20608+10]..lib/warnings.ml[595,20608+70]),None)
                          expression (lib/warnings.ml[596,20680+12]..lib/warnings.ml[596,20680+37])
                            Texp_construct "::"
                            [
                              expression (lib/warnings.ml[596,20680+12]..lib/warnings.ml[596,20680+17])
                                Texp_ident "cname/1913"
                              expression (lib/warnings.ml[596,20680+22]..lib/warnings.ml[596,20680+37])
                                Texp_construct "::"
                                [
                                  expression (lib/warnings.ml[596,20680+22]..lib/warnings.ml[596,20680+28])
                                    Texp_constant Const_string(":\n ",(lib/warnings.ml[596,20680+23]..lib/warnings.ml[596,20680+27]),None)
                                  expression (lib/warnings.ml[596,20680+32]..lib/warnings.ml[596,20680+37])
                                    Texp_ident "slist/1914"
                                ]
                            ]
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[597,20719+4]..lib/warnings.ml[597,20719+33])
                  Tpat_construct "Instance_variable_override"
                  [
                    pattern (lib/warnings.ml[597,20719+31]..lib/warnings.ml[597,20719+33])
                      Tpat_construct "[]"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[597,20719+37]..lib/warnings.ml[597,20719+49])
                  Texp_assert                  expression (lib/warnings.ml[597,20719+44]..lib/warnings.ml[597,20719+49])
                    Texp_construct "false"
                    []
              <case>
                pattern (lib/warnings.ml[598,20769+4]..lib/warnings.ml[598,20769+21])
                  Tpat_construct "Illegal_backslash"
                  []
                  None
                expression (lib/warnings.ml[599,20794+4]..lib/warnings.ml[602,20981+75])
                  Texp_constant Const_string("illegal backslash escape in string.\nHint: Single backslashes \\ are reserved for escape sequences\n(\\n, \\r, ...). Did you check the list of OCaml escape sequences?\nTo get a backslash character, escape it with a second backslash: \\\\.",(lib/warnings.ml[599,20794+5]..lib/warnings.ml[602,20981+74]),None)
              <case>
                pattern (lib/warnings.ml[603,21057+4]..lib/warnings.ml[603,21057+29])
                  Tpat_construct "Implicit_public_methods"
                  [
                    pattern (lib/warnings.ml[603,21057+28]..lib/warnings.ml[603,21057+29])
                      Tpat_var "l/1915"
                  ]
                  None
                expression (lib/warnings.ml[604,21090+6]..lib/warnings.ml[605,21160+33])
                  Texp_apply
                  expression (lib/warnings.ml[605,21160+6]..lib/warnings.ml[605,21160+7])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[604,21090+6]..lib/warnings.ml[604,21090+69])
                        Texp_constant Const_string("the following private methods were made public implicitly:\n ",(lib/warnings.ml[604,21090+7]..lib/warnings.ml[604,21090+68]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[605,21160+8]..lib/warnings.ml[605,21160+33])
                        Texp_apply
                        expression (lib/warnings.ml[605,21160+28]..lib/warnings.ml[605,21160+29])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[605,21160+8]..lib/warnings.ml[605,21160+27])
                              Texp_apply
                              expression (lib/warnings.ml[605,21160+8]..lib/warnings.ml[605,21160+21])
                                Texp_ident "Stdlib!.String.concat"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[605,21160+22]..lib/warnings.ml[605,21160+25])
                                    Texp_constant Const_string(" ",(lib/warnings.ml[605,21160+23]..lib/warnings.ml[605,21160+24]),None)
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[605,21160+26]..lib/warnings.ml[605,21160+27])
                                    Texp_ident "l/1915"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[605,21160+30]..lib/warnings.ml[605,21160+33])
                              Texp_constant Const_string(".",(lib/warnings.ml[605,21160+31]..lib/warnings.ml[605,21160+32]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[606,21194+4]..lib/warnings.ml[606,21194+32])
                  Tpat_construct "Unerasable_optional_argument"
                  []
                  None
                expression (lib/warnings.ml[606,21194+36]..lib/warnings.ml[606,21194+78])
                  Texp_constant Const_string("this optional argument cannot be erased.",(lib/warnings.ml[606,21194+37]..lib/warnings.ml[606,21194+77]),None)
              <case>
                pattern (lib/warnings.ml[607,21273+4]..lib/warnings.ml[607,21273+31])
                  Tpat_construct "Undeclared_virtual_method"
                  [
                    pattern (lib/warnings.ml[607,21273+30]..lib/warnings.ml[607,21273+31])
                      Tpat_var "m/1916"
                  ]
                  None
                expression (lib/warnings.ml[607,21273+35]..lib/warnings.ml[607,21273+78])
                  Texp_apply
                  expression (lib/warnings.ml[607,21273+56]..lib/warnings.ml[607,21273+57])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[607,21273+35]..lib/warnings.ml[607,21273+56])
                        Texp_constant Const_string("the virtual method ",(lib/warnings.ml[607,21273+36]..lib/warnings.ml[607,21273+55]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[607,21273+57]..lib/warnings.ml[607,21273+78])
                        Texp_apply
                        expression (lib/warnings.ml[607,21273+58]..lib/warnings.ml[607,21273+59])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[607,21273+57]..lib/warnings.ml[607,21273+58])
                              Texp_ident "m/1916"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[607,21273+59]..lib/warnings.ml[607,21273+78])
                              Texp_constant Const_string(" is not declared.",(lib/warnings.ml[607,21273+60]..lib/warnings.ml[607,21273+77]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[608,21352+4]..lib/warnings.ml[608,21352+19])
                  Tpat_construct "Not_principal"
                  [
                    pattern (lib/warnings.ml[608,21352+18]..lib/warnings.ml[608,21352+19])
                      Tpat_var "s/1917"
                  ]
                  None
                expression (lib/warnings.ml[608,21352+23]..lib/warnings.ml[608,21352+45])
                  Texp_apply
                  expression (lib/warnings.ml[608,21352+24]..lib/warnings.ml[608,21352+25])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[608,21352+23]..lib/warnings.ml[608,21352+24])
                        Texp_ident "s/1917"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[608,21352+25]..lib/warnings.ml[608,21352+45])
                        Texp_constant Const_string(" is not principal.",(lib/warnings.ml[608,21352+26]..lib/warnings.ml[608,21352+44]),None)
                  ]
              <case>
                pattern (lib/warnings.ml[609,21398+4]..lib/warnings.ml[609,21398+26])
                  Tpat_construct "Non_principal_labels"
                  [
                    pattern (lib/warnings.ml[609,21398+25]..lib/warnings.ml[609,21398+26])
                      Tpat_var "s/1918"
                  ]
                  None
                expression (lib/warnings.ml[609,21398+30]..lib/warnings.ml[609,21398+56])
                  Texp_apply
                  expression (lib/warnings.ml[609,21398+31]..lib/warnings.ml[609,21398+32])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[609,21398+30]..lib/warnings.ml[609,21398+31])
                        Texp_ident "s/1918"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[609,21398+32]..lib/warnings.ml[609,21398+56])
                        Texp_constant Const_string(" without principality.",(lib/warnings.ml[609,21398+33]..lib/warnings.ml[609,21398+55]),None)
                  ]
              <case>
                pattern (lib/warnings.ml[610,21455+4]..lib/warnings.ml[610,21455+26])
                  Tpat_construct "Ignored_extra_argument"
                  []
                  None
                expression (lib/warnings.ml[610,21455+30]..lib/warnings.ml[610,21455+79])
                  Texp_constant Const_string("this argument will not be used by the function.",(lib/warnings.ml[610,21455+31]..lib/warnings.ml[610,21455+78]),None)
              <case>
                pattern (lib/warnings.ml[611,21535+4]..lib/warnings.ml[611,21535+26])
                  Tpat_construct "Nonreturning_statement"
                  []
                  None
                expression (lib/warnings.ml[612,21565+6]..lib/warnings.ml[612,21565+62])
                  Texp_constant Const_string("this statement never returns (or has an unsound type.)",(lib/warnings.ml[612,21565+7]..lib/warnings.ml[612,21565+61]),None)
              <case>
                pattern (lib/warnings.ml[613,21628+4]..lib/warnings.ml[613,21628+18])
                  Tpat_construct "Preprocessor"
                  [
                    pattern (lib/warnings.ml[613,21628+17]..lib/warnings.ml[613,21628+18])
                      Tpat_var "s/1919"
                  ]
                  None
                expression (lib/warnings.ml[613,21628+22]..lib/warnings.ml[613,21628+23])
                  Texp_ident "s/1919"
              <case>
                pattern (lib/warnings.ml[614,21652+4]..lib/warnings.ml[614,21652+23])
                  Tpat_construct "Useless_record_with"
                  []
                  None
                expression (lib/warnings.ml[615,21679+6]..lib/warnings.ml[616,21742+37])
                  Texp_constant Const_string("all the fields are explicitly listed in this record:\nthe 'with' clause is useless.",(lib/warnings.ml[615,21679+7]..lib/warnings.ml[616,21742+36]),None)
              <case>
                pattern (lib/warnings.ml[617,21780+4]..lib/warnings.ml[617,21780+29])
                  Tpat_construct "Bad_module_name"
                  [
                    pattern (lib/warnings.ml[617,21780+20]..lib/warnings.ml[617,21780+29])
                      Tpat_var "modname/1920"
                  ]
                  None
                expression (lib/warnings.ml[618,21813+6]..lib/warnings.ml[618,21813+77])
                  Texp_apply
                  expression (lib/warnings.ml[618,21813+33]..lib/warnings.ml[618,21813+34])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[618,21813+6]..lib/warnings.ml[618,21813+32])
                        Texp_constant Const_string("bad source file name: \"",(lib/warnings.ml[618,21813+7]..lib/warnings.ml[618,21813+31]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[618,21813+35]..lib/warnings.ml[618,21813+77])
                        Texp_apply
                        expression (lib/warnings.ml[618,21813+43]..lib/warnings.ml[618,21813+44])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[618,21813+35]..lib/warnings.ml[618,21813+42])
                              Texp_ident "modname/1920"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[618,21813+45]..lib/warnings.ml[618,21813+77])
                              Texp_constant Const_string("\" is not a valid module name.",(lib/warnings.ml[618,21813+46]..lib/warnings.ml[618,21813+76]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[619,21891+4]..lib/warnings.ml[619,21891+23])
                  Tpat_construct "All_clauses_guarded"
                  []
                  None
                expression (lib/warnings.ml[620,21918+6]..lib/warnings.ml[621,21969+57])
                  Texp_constant Const_string("this pattern-matching is not exhaustive.\nAll clauses in this pattern-matching are guarded.",(lib/warnings.ml[620,21918+7]..lib/warnings.ml[621,21969+56]),None)
              <case>
                pattern (lib/warnings.ml[622,22027+4]..lib/warnings.ml[622,22027+38])
                  Tpat_or
                  pattern (lib/warnings.ml[622,22027+4]..lib/warnings.ml[622,22027+16])
                    Tpat_construct "Unused_var"
                    [
                      pattern (lib/warnings.ml[622,22027+15]..lib/warnings.ml[622,22027+16])
                        Tpat_var "v/1921"
                    ]
                    None
                  pattern (lib/warnings.ml[622,22027+19]..lib/warnings.ml[622,22027+38])
                    Tpat_construct "Unused_var_strict"
                    [
                      pattern (lib/warnings.ml[622,22027+37]..lib/warnings.ml[622,22027+38])
                        Tpat_var "v/1921"
                    ]
                    None
                expression (lib/warnings.ml[622,22027+42]..lib/warnings.ml[622,22027+70])
                  Texp_apply
                  expression (lib/warnings.ml[622,22027+61]..lib/warnings.ml[622,22027+62])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[622,22027+42]..lib/warnings.ml[622,22027+60])
                        Texp_constant Const_string("unused variable ",(lib/warnings.ml[622,22027+43]..lib/warnings.ml[622,22027+59]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[622,22027+63]..lib/warnings.ml[622,22027+70])
                        Texp_apply
                        expression (lib/warnings.ml[622,22027+65]..lib/warnings.ml[622,22027+66])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[622,22027+63]..lib/warnings.ml[622,22027+64])
                              Texp_ident "v/1921"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[622,22027+67]..lib/warnings.ml[622,22027+70])
                              Texp_constant Const_string(".",(lib/warnings.ml[622,22027+68]..lib/warnings.ml[622,22027+69]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[623,22098+4]..lib/warnings.ml[623,22098+35])
                  Tpat_construct "Wildcard_arg_to_constant_constr"
                  []
                  None
                expression (lib/warnings.ml[624,22137+5]..lib/warnings.ml[624,22137+67])
                  Texp_constant Const_string("wildcard pattern given as argument to a constant constructor",(lib/warnings.ml[624,22137+6]..lib/warnings.ml[624,22137+66]),None)
              <case>
                pattern (lib/warnings.ml[625,22205+4]..lib/warnings.ml[625,22205+17])
                  Tpat_construct "Eol_in_string"
                  []
                  None
                expression (lib/warnings.ml[626,22226+5]..lib/warnings.ml[627,22278+47])
                  Texp_constant Const_string("unescaped end-of-line in a string constant\n(non-portable behavior before OCaml 5.2)",(lib/warnings.ml[626,22226+6]..lib/warnings.ml[627,22278+46]),None)
              <case>
                pattern (lib/warnings.ml[628,22326+4]..lib/warnings.ml[628,22326+49])
                  Tpat_construct "Duplicate_definitions"
                  [
                    pattern (lib/warnings.ml[628,22326+27]..lib/warnings.ml[628,22326+31])
                      Tpat_var "kind/1923"
                    pattern (lib/warnings.ml[628,22326+33]..lib/warnings.ml[628,22326+38])
                      Tpat_var "cname/1924"
                    pattern (lib/warnings.ml[628,22326+40]..lib/warnings.ml[628,22326+43])
                      Tpat_var "tc1/1925"
                    pattern (lib/warnings.ml[628,22326+45]..lib/warnings.ml[628,22326+48])
                      Tpat_var "tc2/1926"
                  ]
                  None
                expression (lib/warnings.ml[629,22379+6]..lib/warnings.ml[630,22448+26])
                  Texp_apply
                  expression (lib/warnings.ml[629,22379+6]..lib/warnings.ml[629,22379+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                Texp_constant Const_string("the ",(lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost,None)
                              expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                    [
                                      expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                        Texp_constant Const_char 20
                                      expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                                Texp_constant Const_string(" is defined in both types ",(lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost,None)
                                              expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String"
                                                [
                                                  expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                    []
                                                  expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                                        Texp_constant Const_string(" and ",(lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost,None)
                                                      expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.String"
                                                        [
                                                          expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                            []
                                                          expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                            [
                                                              expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                                                Texp_constant Const_char 2e
                                                              expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                          expression (lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost
                            Texp_constant Const_string("the %s %s is defined in both types %s and %s.",(lib/warnings.ml[629,22379+21]..lib/warnings.ml[629,22379+68]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[630,22448+8]..lib/warnings.ml[630,22448+12])
                        Texp_ident "kind/1923"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[630,22448+13]..lib/warnings.ml[630,22448+18])
                        Texp_ident "cname/1924"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[630,22448+19]..lib/warnings.ml[630,22448+22])
                        Texp_ident "tc1/1925"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[630,22448+23]..lib/warnings.ml[630,22448+26])
                        Texp_ident "tc2/1926"
                  ]
              <case>
                pattern (lib/warnings.ml[631,22475+4]..lib/warnings.ml[631,22475+30])
                  Tpat_construct "Unused_value_declaration"
                  [
                    pattern (lib/warnings.ml[631,22475+29]..lib/warnings.ml[631,22475+30])
                      Tpat_var "v/1927"
                  ]
                  None
                expression (lib/warnings.ml[631,22475+34]..lib/warnings.ml[631,22475+59])
                  Texp_apply
                  expression (lib/warnings.ml[631,22475+50]..lib/warnings.ml[631,22475+51])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[631,22475+34]..lib/warnings.ml[631,22475+49])
                        Texp_constant Const_string("unused value ",(lib/warnings.ml[631,22475+35]..lib/warnings.ml[631,22475+48]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[631,22475+52]..lib/warnings.ml[631,22475+59])
                        Texp_apply
                        expression (lib/warnings.ml[631,22475+54]..lib/warnings.ml[631,22475+55])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[631,22475+52]..lib/warnings.ml[631,22475+53])
                              Texp_ident "v/1927"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[631,22475+56]..lib/warnings.ml[631,22475+59])
                              Texp_constant Const_string(".",(lib/warnings.ml[631,22475+57]..lib/warnings.ml[631,22475+58]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[632,22535+4]..lib/warnings.ml[632,22535+17])
                  Tpat_construct "Unused_open"
                  [
                    pattern (lib/warnings.ml[632,22535+16]..lib/warnings.ml[632,22535+17])
                      Tpat_var "s/1928"
                  ]
                  None
                expression (lib/warnings.ml[632,22535+21]..lib/warnings.ml[632,22535+45])
                  Texp_apply
                  expression (lib/warnings.ml[632,22535+36]..lib/warnings.ml[632,22535+37])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[632,22535+21]..lib/warnings.ml[632,22535+35])
                        Texp_constant Const_string("unused open ",(lib/warnings.ml[632,22535+22]..lib/warnings.ml[632,22535+34]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[632,22535+38]..lib/warnings.ml[632,22535+45])
                        Texp_apply
                        expression (lib/warnings.ml[632,22535+40]..lib/warnings.ml[632,22535+41])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[632,22535+38]..lib/warnings.ml[632,22535+39])
                              Texp_ident "s/1928"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[632,22535+42]..lib/warnings.ml[632,22535+45])
                              Texp_constant Const_string(".",(lib/warnings.ml[632,22535+43]..lib/warnings.ml[632,22535+44]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[633,22581+4]..lib/warnings.ml[633,22581+22])
                  Tpat_construct "Unused_open_bang"
                  [
                    pattern (lib/warnings.ml[633,22581+21]..lib/warnings.ml[633,22581+22])
                      Tpat_var "s/1929"
                  ]
                  None
                expression (lib/warnings.ml[633,22581+26]..lib/warnings.ml[633,22581+51])
                  Texp_apply
                  expression (lib/warnings.ml[633,22581+42]..lib/warnings.ml[633,22581+43])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[633,22581+26]..lib/warnings.ml[633,22581+41])
                        Texp_constant Const_string("unused open! ",(lib/warnings.ml[633,22581+27]..lib/warnings.ml[633,22581+40]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[633,22581+44]..lib/warnings.ml[633,22581+51])
                        Texp_apply
                        expression (lib/warnings.ml[633,22581+46]..lib/warnings.ml[633,22581+47])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[633,22581+44]..lib/warnings.ml[633,22581+45])
                              Texp_ident "s/1929"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[633,22581+48]..lib/warnings.ml[633,22581+51])
                              Texp_constant Const_string(".",(lib/warnings.ml[633,22581+49]..lib/warnings.ml[633,22581+50]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[634,22633+4]..lib/warnings.ml[634,22633+29])
                  Tpat_construct "Unused_type_declaration"
                  [
                    pattern (lib/warnings.ml[634,22633+28]..lib/warnings.ml[634,22633+29])
                      Tpat_var "s/1930"
                  ]
                  None
                expression (lib/warnings.ml[634,22633+33]..lib/warnings.ml[634,22633+57])
                  Texp_apply
                  expression (lib/warnings.ml[634,22633+48]..lib/warnings.ml[634,22633+49])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[634,22633+33]..lib/warnings.ml[634,22633+47])
                        Texp_constant Const_string("unused type ",(lib/warnings.ml[634,22633+34]..lib/warnings.ml[634,22633+46]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[634,22633+50]..lib/warnings.ml[634,22633+57])
                        Texp_apply
                        expression (lib/warnings.ml[634,22633+52]..lib/warnings.ml[634,22633+53])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[634,22633+50]..lib/warnings.ml[634,22633+51])
                              Texp_ident "s/1930"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[634,22633+54]..lib/warnings.ml[634,22633+57])
                              Texp_constant Const_string(".",(lib/warnings.ml[634,22633+55]..lib/warnings.ml[634,22633+56]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[635,22691+4]..lib/warnings.ml[635,22691+22])
                  Tpat_construct "Unused_for_index"
                  [
                    pattern (lib/warnings.ml[635,22691+21]..lib/warnings.ml[635,22691+22])
                      Tpat_var "s/1931"
                  ]
                  None
                expression (lib/warnings.ml[635,22691+26]..lib/warnings.ml[635,22691+60])
                  Texp_apply
                  expression (lib/warnings.ml[635,22691+51]..lib/warnings.ml[635,22691+52])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[635,22691+26]..lib/warnings.ml[635,22691+50])
                        Texp_constant Const_string("unused for-loop index ",(lib/warnings.ml[635,22691+27]..lib/warnings.ml[635,22691+49]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[635,22691+53]..lib/warnings.ml[635,22691+60])
                        Texp_apply
                        expression (lib/warnings.ml[635,22691+55]..lib/warnings.ml[635,22691+56])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[635,22691+53]..lib/warnings.ml[635,22691+54])
                              Texp_ident "s/1931"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[635,22691+57]..lib/warnings.ml[635,22691+60])
                              Texp_constant Const_string(".",(lib/warnings.ml[635,22691+58]..lib/warnings.ml[635,22691+59]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[636,22752+4]..lib/warnings.ml[636,22752+21])
                  Tpat_construct "Unused_ancestor"
                  [
                    pattern (lib/warnings.ml[636,22752+20]..lib/warnings.ml[636,22752+21])
                      Tpat_var "s/1932"
                  ]
                  None
                expression (lib/warnings.ml[636,22752+25]..lib/warnings.ml[636,22752+62])
                  Texp_apply
                  expression (lib/warnings.ml[636,22752+53]..lib/warnings.ml[636,22752+54])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[636,22752+25]..lib/warnings.ml[636,22752+52])
                        Texp_constant Const_string("unused ancestor variable ",(lib/warnings.ml[636,22752+26]..lib/warnings.ml[636,22752+51]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[636,22752+55]..lib/warnings.ml[636,22752+62])
                        Texp_apply
                        expression (lib/warnings.ml[636,22752+57]..lib/warnings.ml[636,22752+58])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[636,22752+55]..lib/warnings.ml[636,22752+56])
                              Texp_ident "s/1932"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[636,22752+59]..lib/warnings.ml[636,22752+62])
                              Texp_constant Const_string(".",(lib/warnings.ml[636,22752+60]..lib/warnings.ml[636,22752+61]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[637,22815+4]..lib/warnings.ml[637,22815+34])
                  Tpat_construct "Unused_constructor"
                  [
                    pattern (lib/warnings.ml[637,22815+24]..lib/warnings.ml[637,22815+25])
                      Tpat_var "s/1933"
                    pattern (lib/warnings.ml[637,22815+27]..lib/warnings.ml[637,22815+33])
                      Tpat_construct "Unused"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[637,22815+38]..lib/warnings.ml[637,22815+69])
                  Texp_apply
                  expression (lib/warnings.ml[637,22815+60]..lib/warnings.ml[637,22815+61])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[637,22815+38]..lib/warnings.ml[637,22815+59])
                        Texp_constant Const_string("unused constructor ",(lib/warnings.ml[637,22815+39]..lib/warnings.ml[637,22815+58]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[637,22815+62]..lib/warnings.ml[637,22815+69])
                        Texp_apply
                        expression (lib/warnings.ml[637,22815+64]..lib/warnings.ml[637,22815+65])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[637,22815+62]..lib/warnings.ml[637,22815+63])
                              Texp_ident "s/1933"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[637,22815+66]..lib/warnings.ml[637,22815+69])
                              Texp_constant Const_string(".",(lib/warnings.ml[637,22815+67]..lib/warnings.ml[637,22815+68]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[638,22885+4]..lib/warnings.ml[638,22885+43])
                  Tpat_construct "Unused_constructor"
                  [
                    pattern (lib/warnings.ml[638,22885+24]..lib/warnings.ml[638,22885+25])
                      Tpat_var "s/1934"
                    pattern (lib/warnings.ml[638,22885+27]..lib/warnings.ml[638,22885+42])
                      Tpat_construct "Not_constructed"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[639,22932+6]..lib/warnings.ml[641,23001+57])
                  Texp_apply
                  expression (lib/warnings.ml[639,22932+21]..lib/warnings.ml[639,22932+22])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[639,22932+6]..lib/warnings.ml[639,22932+20])
                        Texp_constant Const_string("constructor ",(lib/warnings.ml[639,22932+7]..lib/warnings.ml[639,22932+19]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[639,22932+23]..lib/warnings.ml[641,23001+57])
                        Texp_apply
                        expression (lib/warnings.ml[639,22932+25]..lib/warnings.ml[639,22932+26])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[639,22932+23]..lib/warnings.ml[639,22932+24])
                              Texp_ident "s/1934"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[640,22959+6]..lib/warnings.ml[641,23001+57])
                              Texp_constant Const_string(" is never used to build values.\n(However, this constructor appears in patterns.)",(lib/warnings.ml[640,22959+7]..lib/warnings.ml[641,23001+56]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[642,23059+4]..lib/warnings.ml[642,23059+49])
                  Tpat_construct "Unused_constructor"
                  [
                    pattern (lib/warnings.ml[642,23059+24]..lib/warnings.ml[642,23059+25])
                      Tpat_var "s/1935"
                    pattern (lib/warnings.ml[642,23059+27]..lib/warnings.ml[642,23059+48])
                      Tpat_construct "Only_exported_private"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[643,23112+6]..lib/warnings.ml[645,23181+48])
                  Texp_apply
                  expression (lib/warnings.ml[643,23112+21]..lib/warnings.ml[643,23112+22])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[643,23112+6]..lib/warnings.ml[643,23112+20])
                        Texp_constant Const_string("constructor ",(lib/warnings.ml[643,23112+7]..lib/warnings.ml[643,23112+19]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[643,23112+23]..lib/warnings.ml[645,23181+48])
                        Texp_apply
                        expression (lib/warnings.ml[643,23112+25]..lib/warnings.ml[643,23112+26])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[643,23112+23]..lib/warnings.ml[643,23112+24])
                              Texp_ident "s/1935"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[644,23139+6]..lib/warnings.ml[645,23181+48])
                              Texp_constant Const_string(" is never used to build values.\nIts type is exported as a private type.",(lib/warnings.ml[644,23139+7]..lib/warnings.ml[645,23181+47]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[646,23230+4]..lib/warnings.ml[646,23230+49])
                  Tpat_construct "Unused_extension"
                  [
                    pattern (lib/warnings.ml[646,23230+22]..lib/warnings.ml[646,23230+23])
                      Tpat_var "s/1936"
                    pattern (lib/warnings.ml[646,23230+25]..lib/warnings.ml[646,23230+37])
                      Tpat_var "is_exception/1937"
                    pattern (lib/warnings.ml[646,23230+39]..lib/warnings.ml[646,23230+48])
                      Tpat_var "complaint/1938"
                  ]
                  None
                expression (lib/warnings.ml[647,23283+5]..lib/warnings.ml[660,23785+8])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/warnings.ml[647,23283+9]..lib/warnings.ml[647,23283+13])
                        Tpat_var "kind/1991"
                      expression (lib/warnings.ml[648,23299+7]..lib/warnings.ml[648,23299+68])
                        Texp_ifthenelse
                        expression (lib/warnings.ml[648,23299+10]..lib/warnings.ml[648,23299+22])
                          Texp_ident "is_exception/1937"
                        expression (lib/warnings.ml[648,23299+28]..lib/warnings.ml[648,23299+39])
                          Texp_constant Const_string("exception",(lib/warnings.ml[648,23299+29]..lib/warnings.ml[648,23299+38]),None)
                        Some
                          expression (lib/warnings.ml[648,23299+45]..lib/warnings.ml[648,23299+68])
                            Texp_constant Const_string("extension constructor",(lib/warnings.ml[648,23299+46]..lib/warnings.ml[648,23299+67]),None)
                  ]
                  expression (lib/warnings.ml[649,23371+5]..lib/warnings.ml[660,23785+8])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[649,23371+9]..lib/warnings.ml[649,23371+13])
                          Tpat_var "name/1992"
                        expression (lib/warnings.ml[649,23371+16]..lib/warnings.ml[649,23371+30])
                          Texp_apply
                          expression (lib/warnings.ml[649,23371+21]..lib/warnings.ml[649,23371+22])
                            Texp_ident "Stdlib!.^"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[649,23371+16]..lib/warnings.ml[649,23371+20])
                                Texp_ident "kind/1991"
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[649,23371+23]..lib/warnings.ml[649,23371+30])
                                Texp_apply
                                expression (lib/warnings.ml[649,23371+27]..lib/warnings.ml[649,23371+28])
                                  Texp_ident "Stdlib!.^"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[649,23371+23]..lib/warnings.ml[649,23371+26])
                                      Texp_constant Const_string(" ",(lib/warnings.ml[649,23371+24]..lib/warnings.ml[649,23371+25]),None)
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[649,23371+29]..lib/warnings.ml[649,23371+30])
                                      Texp_ident "s/1936"
                                ]
                          ]
                    ]
                    expression (lib/warnings.ml[650,23405+5]..lib/warnings.ml[660,23785+8])
                      Texp_match
                      expression (lib/warnings.ml[650,23405+17]..lib/warnings.ml[650,23405+26])
                        Texp_ident "complaint/1938"
                      [
                        <case>
                          pattern (lib/warnings.ml[651,23437+9]..lib/warnings.ml[651,23437+15])
                            Tpat_value
                            pattern (lib/warnings.ml[651,23437+9]..lib/warnings.ml[651,23437+15])
                              Tpat_construct "Unused"
                              []
                              None
                          expression (lib/warnings.ml[651,23437+19]..lib/warnings.ml[651,23437+35])
                            Texp_apply
                            expression (lib/warnings.ml[651,23437+29]..lib/warnings.ml[651,23437+30])
                              Texp_ident "Stdlib!.^"
                            [
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[651,23437+19]..lib/warnings.ml[651,23437+28])
                                  Texp_constant Const_string("unused ",(lib/warnings.ml[651,23437+20]..lib/warnings.ml[651,23437+27]),None)
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[651,23437+31]..lib/warnings.ml[651,23437+35])
                                  Texp_ident "name/1992"
                            ]
                        <case>
                          pattern (lib/warnings.ml[652,23473+9]..lib/warnings.ml[652,23473+24])
                            Tpat_value
                            pattern (lib/warnings.ml[652,23473+9]..lib/warnings.ml[652,23473+24])
                              Tpat_construct "Not_constructed"
                              []
                              None
                          expression (lib/warnings.ml[653,23501+10]..lib/warnings.ml[655,23564+60])
                            Texp_apply
                            expression (lib/warnings.ml[653,23501+15]..lib/warnings.ml[653,23501+16])
                              Texp_ident "Stdlib!.^"
                            [
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[653,23501+10]..lib/warnings.ml[653,23501+14])
                                  Texp_ident "name/1992"
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[654,23518+10]..lib/warnings.ml[655,23564+60])
                                  Texp_constant Const_string(" is never used to build values.\n(However, this constructor appears in patterns.)",(lib/warnings.ml[654,23518+11]..lib/warnings.ml[655,23564+59]),None)
                            ]
                        <case>
                          pattern (lib/warnings.ml[656,23625+9]..lib/warnings.ml[656,23625+30])
                            Tpat_value
                            pattern (lib/warnings.ml[656,23625+9]..lib/warnings.ml[656,23625+30])
                              Tpat_construct "Only_exported_private"
                              []
                              None
                          expression (lib/warnings.ml[657,23659+10]..lib/warnings.ml[659,23722+62])
                            Texp_apply
                            expression (lib/warnings.ml[657,23659+15]..lib/warnings.ml[657,23659+16])
                              Texp_ident "Stdlib!.^"
                            [
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[657,23659+10]..lib/warnings.ml[657,23659+14])
                                  Texp_ident "name/1992"
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[658,23676+10]..lib/warnings.ml[659,23722+62])
                                  Texp_constant Const_string(" is never used to build values.\nIt is exported or rebound as a private extension.",(lib/warnings.ml[658,23676+11]..lib/warnings.ml[659,23722+61]),None)
                            ]
                      ]
              <case>
                pattern (lib/warnings.ml[661,23794+4]..lib/warnings.ml[661,23794+19])
                  Tpat_construct "Unused_rec_flag"
                  []
                  None
                expression (lib/warnings.ml[662,23817+6]..lib/warnings.ml[662,23817+24])
                  Texp_constant Const_string("unused rec flag.",(lib/warnings.ml[662,23817+7]..lib/warnings.ml[662,23817+23]),None)
              <case>
                pattern (lib/warnings.ml[663,23842+4]..lib/warnings.ml[663,23842+39])
                  Tpat_construct "Name_out_of_scope"
                  [
                    pattern (lib/warnings.ml[663,23842+23]..lib/warnings.ml[663,23842+25])
                      Tpat_var "ty/1939"
                    pattern (lib/warnings.ml[663,23842+27]..lib/warnings.ml[663,23842+31])
                      Tpat_construct "::"
                      [
                        pattern (lib/warnings.ml[663,23842+28]..lib/warnings.ml[663,23842+30])
                          Tpat_var "nm/1940"
                        pattern (lib/warnings.ml[663,23842+30]..lib/warnings.ml[663,23842+31]) ghost
                          Tpat_construct "[]"
                          []
                          None
                      ]
                      None
                    pattern (lib/warnings.ml[663,23842+33]..lib/warnings.ml[663,23842+38])
                      Tpat_construct "false"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[664,23885+6]..lib/warnings.ml[666,23997+48])
                  Texp_apply
                  expression (lib/warnings.ml[664,23885+9]..lib/warnings.ml[664,23885+10])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[664,23885+6]..lib/warnings.ml[664,23885+8])
                        Texp_ident "nm/1940"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[664,23885+11]..lib/warnings.ml[666,23997+48])
                        Texp_apply
                        expression (lib/warnings.ml[664,23885+38]..lib/warnings.ml[664,23885+39])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[664,23885+11]..lib/warnings.ml[664,23885+37])
                              Texp_constant Const_string(" was selected from type ",(lib/warnings.ml[664,23885+12]..lib/warnings.ml[664,23885+36]),None)
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[664,23885+40]..lib/warnings.ml[666,23997+48])
                              Texp_apply
                              expression (lib/warnings.ml[664,23885+43]..lib/warnings.ml[664,23885+44])
                                Texp_ident "Stdlib!.^"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[664,23885+40]..lib/warnings.ml[664,23885+42])
                                    Texp_ident "ty/1939"
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[665,23930+6]..lib/warnings.ml[666,23997+48])
                                    Texp_constant Const_string(".\nIt is not visible in the current scope, and will not \nbe selected if the type becomes unknown.",(lib/warnings.ml[665,23930+7]..lib/warnings.ml[666,23997+47]),None)
                              ]
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[667,24046+4]..lib/warnings.ml[667,24046+35])
                  Tpat_construct "Name_out_of_scope"
                  [
                    pattern (lib/warnings.ml[667,24046+23]..lib/warnings.ml[667,24046+24])
                      Tpat_any
                    pattern (lib/warnings.ml[667,24046+26]..lib/warnings.ml[667,24046+27])
                      Tpat_any
                    pattern (lib/warnings.ml[667,24046+29]..lib/warnings.ml[667,24046+34])
                      Tpat_construct "false"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[667,24046+39]..lib/warnings.ml[667,24046+51])
                  Texp_assert                  expression (lib/warnings.ml[667,24046+46]..lib/warnings.ml[667,24046+51])
                    Texp_construct "false"
                    []
              <case>
                pattern (lib/warnings.ml[668,24098+4]..lib/warnings.ml[668,24098+39])
                  Tpat_construct "Name_out_of_scope"
                  [
                    pattern (lib/warnings.ml[668,24098+23]..lib/warnings.ml[668,24098+25])
                      Tpat_var "ty/1941"
                    pattern (lib/warnings.ml[668,24098+27]..lib/warnings.ml[668,24098+32])
                      Tpat_var "slist/1942"
                    pattern (lib/warnings.ml[668,24098+34]..lib/warnings.ml[668,24098+38])
                      Tpat_construct "true"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[669,24141+6]..lib/warnings.ml[672,24289+62])
                  Texp_apply
                  expression (lib/warnings.ml[669,24141+28]..lib/warnings.ml[669,24141+29])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[669,24141+6]..lib/warnings.ml[669,24141+28])
                        Texp_constant Const_string("this record of type ",(lib/warnings.ml[669,24141+7]..lib/warnings.ml[669,24141+27]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[669,24141+30]..lib/warnings.ml[672,24289+62])
                        Texp_apply
                        expression (lib/warnings.ml[669,24141+33]..lib/warnings.ml[669,24141+34])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[669,24141+30]..lib/warnings.ml[669,24141+32])
                              Texp_ident "ty/1941"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[669,24141+34]..lib/warnings.ml[672,24289+62])
                              Texp_apply
                              expression (lib/warnings.ml[671,24249+6]..lib/warnings.ml[671,24249+7])
                                Texp_ident "Stdlib!.^"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[669,24141+34]..lib/warnings.ml[670,24206+42])
                                    Texp_constant Const_string(" contains fields that are \nnot visible in the current scope: ",(lib/warnings.ml[669,24141+35]..lib/warnings.ml[670,24206+41]),None)
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[671,24249+8]..lib/warnings.ml[672,24289+62])
                                    Texp_apply
                                    expression (lib/warnings.ml[671,24249+32]..lib/warnings.ml[671,24249+33])
                                      Texp_ident "Stdlib!.^"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[671,24249+8]..lib/warnings.ml[671,24249+31])
                                          Texp_apply
                                          expression (lib/warnings.ml[671,24249+8]..lib/warnings.ml[671,24249+21])
                                            Texp_ident "Stdlib!.String.concat"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[671,24249+22]..lib/warnings.ml[671,24249+25])
                                                Texp_constant Const_string(" ",(lib/warnings.ml[671,24249+23]..lib/warnings.ml[671,24249+24]),None)
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[671,24249+26]..lib/warnings.ml[671,24249+31])
                                                Texp_ident "slist/1942"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[671,24249+34]..lib/warnings.ml[672,24289+62])
                                          Texp_constant Const_string(".\nThey will not be selected if the type becomes unknown.",(lib/warnings.ml[671,24249+35]..lib/warnings.ml[672,24289+61]),None)
                                    ]
                              ]
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[673,24352+4]..lib/warnings.ml[673,24352+46])
                  Tpat_construct "Ambiguous_name"
                  [
                    pattern (lib/warnings.ml[673,24352+20]..lib/warnings.ml[673,24352+23])
                      Tpat_construct "::"
                      [
                        pattern (lib/warnings.ml[673,24352+21]..lib/warnings.ml[673,24352+22])
                          Tpat_var "s/1943"
                        pattern (lib/warnings.ml[673,24352+22]..lib/warnings.ml[673,24352+23]) ghost
                          Tpat_construct "[]"
                          []
                          None
                      ]
                      None
                    pattern (lib/warnings.ml[673,24352+25]..lib/warnings.ml[673,24352+27])
                      Tpat_var "tl/1944"
                    pattern (lib/warnings.ml[673,24352+29]..lib/warnings.ml[673,24352+34])
                      Tpat_construct "false"
                      []
                      None
                    pattern (lib/warnings.ml[673,24352+36]..lib/warnings.ml[673,24352+45])
                      Tpat_var "expansion/1945"
                  ]
                  None
                expression (lib/warnings.ml[674,24402+6]..lib/warnings.ml[676,24543+17])
                  Texp_apply
                  expression (lib/warnings.ml[674,24402+8]..lib/warnings.ml[674,24402+9])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[674,24402+6]..lib/warnings.ml[674,24402+7])
                        Texp_ident "s/1943"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[674,24402+10]..lib/warnings.ml[676,24543+17])
                        Texp_apply
                        expression (lib/warnings.ml[674,24402+40]..lib/warnings.ml[674,24402+41])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[674,24402+10]..lib/warnings.ml[674,24402+39])
                              Texp_constant Const_string(" belongs to several types: ",(lib/warnings.ml[674,24402+11]..lib/warnings.ml[674,24402+38]),None)
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[674,24402+42]..lib/warnings.ml[676,24543+17])
                              Texp_apply
                              expression (lib/warnings.ml[674,24402+63]..lib/warnings.ml[674,24402+64])
                                Texp_ident "Stdlib!.^"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[674,24402+42]..lib/warnings.ml[674,24402+62])
                                    Texp_apply
                                    expression (lib/warnings.ml[674,24402+42]..lib/warnings.ml[674,24402+55])
                                      Texp_ident "Stdlib!.String.concat"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[674,24402+56]..lib/warnings.ml[674,24402+59])
                                          Texp_constant Const_string(" ",(lib/warnings.ml[674,24402+57]..lib/warnings.ml[674,24402+58]),None)
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[674,24402+60]..lib/warnings.ml[674,24402+62])
                                          Texp_ident "tl/1944"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[675,24467+6]..lib/warnings.ml[676,24543+17])
                                    Texp_apply
                                    expression (lib/warnings.ml[676,24543+6]..lib/warnings.ml[676,24543+7])
                                      Texp_ident "Stdlib!.^"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[675,24467+6]..lib/warnings.ml[675,24467+75])
                                          Texp_constant Const_string("\nThe first one was selected. Please disambiguate if this is wrong.",(lib/warnings.ml[675,24467+7]..lib/warnings.ml[675,24467+74]),None)
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[676,24543+8]..lib/warnings.ml[676,24543+17])
                                          Texp_ident "expansion/1945"
                                    ]
                              ]
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[677,24561+4]..lib/warnings.ml[677,24561+36])
                  Tpat_construct "Ambiguous_name"
                  [
                    pattern (lib/warnings.ml[677,24561+20]..lib/warnings.ml[677,24561+21])
                      Tpat_any
                    pattern (lib/warnings.ml[677,24561+23]..lib/warnings.ml[677,24561+24])
                      Tpat_any
                    pattern (lib/warnings.ml[677,24561+26]..lib/warnings.ml[677,24561+31])
                      Tpat_construct "false"
                      []
                      None
                    pattern (lib/warnings.ml[677,24561+33]..lib/warnings.ml[677,24561+34])
                      Tpat_any
                  ]
                  None
                expression (lib/warnings.ml[677,24561+40]..lib/warnings.ml[677,24561+52])
                  Texp_assert                  expression (lib/warnings.ml[677,24561+47]..lib/warnings.ml[677,24561+52])
                    Texp_construct "false"
                    []
              <case>
                pattern (lib/warnings.ml[678,24614+4]..lib/warnings.ml[678,24614+48])
                  Tpat_construct "Ambiguous_name"
                  [
                    pattern (lib/warnings.ml[678,24614+20]..lib/warnings.ml[678,24614+26])
                      Tpat_var "_slist/1946"
                    pattern (lib/warnings.ml[678,24614+28]..lib/warnings.ml[678,24614+30])
                      Tpat_var "tl/1947"
                    pattern (lib/warnings.ml[678,24614+32]..lib/warnings.ml[678,24614+36])
                      Tpat_construct "true"
                      []
                      None
                    pattern (lib/warnings.ml[678,24614+38]..lib/warnings.ml[678,24614+47])
                      Tpat_var "expansion/1948"
                  ]
                  None
                expression (lib/warnings.ml[679,24666+6]..lib/warnings.ml[682,24826+17])
                  Texp_apply
                  expression (lib/warnings.ml[679,24666+53]..lib/warnings.ml[679,24666+54])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[679,24666+6]..lib/warnings.ml[679,24666+52])
                        Texp_constant Const_string("these field labels belong to several types: ",(lib/warnings.ml[679,24666+7]..lib/warnings.ml[679,24666+51]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[680,24721+6]..lib/warnings.ml[682,24826+17])
                        Texp_apply
                        expression (lib/warnings.ml[680,24721+27]..lib/warnings.ml[680,24721+28])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[680,24721+6]..lib/warnings.ml[680,24721+26])
                              Texp_apply
                              expression (lib/warnings.ml[680,24721+6]..lib/warnings.ml[680,24721+19])
                                Texp_ident "Stdlib!.String.concat"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[680,24721+20]..lib/warnings.ml[680,24721+23])
                                    Texp_constant Const_string(" ",(lib/warnings.ml[680,24721+21]..lib/warnings.ml[680,24721+22]),None)
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[680,24721+24]..lib/warnings.ml[680,24721+26])
                                    Texp_ident "tl/1947"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[681,24750+6]..lib/warnings.ml[682,24826+17])
                              Texp_apply
                              expression (lib/warnings.ml[682,24826+6]..lib/warnings.ml[682,24826+7])
                                Texp_ident "Stdlib!.^"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[681,24750+6]..lib/warnings.ml[681,24750+75])
                                    Texp_constant Const_string("\nThe first one was selected. Please disambiguate if this is wrong.",(lib/warnings.ml[681,24750+7]..lib/warnings.ml[681,24750+74]),None)
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[682,24826+8]..lib/warnings.ml[682,24826+17])
                                    Texp_ident "expansion/1948"
                              ]
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[683,24844+4]..lib/warnings.ml[683,24844+24])
                  Tpat_construct "Disambiguated_name"
                  [
                    pattern (lib/warnings.ml[683,24844+23]..lib/warnings.ml[683,24844+24])
                      Tpat_var "s/1949"
                  ]
                  None
                expression (lib/warnings.ml[684,24872+6]..lib/warnings.ml[685,24944+55])
                  Texp_apply
                  expression (lib/warnings.ml[684,24872+21]..lib/warnings.ml[684,24872+22])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[684,24872+6]..lib/warnings.ml[684,24872+20])
                        Texp_constant Const_string("this use of ",(lib/warnings.ml[684,24872+7]..lib/warnings.ml[684,24872+19]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[684,24872+23]..lib/warnings.ml[685,24944+55])
                        Texp_apply
                        expression (lib/warnings.ml[684,24872+25]..lib/warnings.ml[684,24872+26])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[684,24872+23]..lib/warnings.ml[684,24872+24])
                              Texp_ident "s/1949"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[684,24872+27]..lib/warnings.ml[685,24944+55])
                              Texp_constant Const_string(" relies on type-directed disambiguation,\nit will not compile with OCaml 4.00 or earlier.",(lib/warnings.ml[684,24872+28]..lib/warnings.ml[685,24944+54]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[686,25000+4]..lib/warnings.ml[686,25000+23])
                  Tpat_construct "Nonoptional_label"
                  [
                    pattern (lib/warnings.ml[686,25000+22]..lib/warnings.ml[686,25000+23])
                      Tpat_var "s/1950"
                  ]
                  None
                expression (lib/warnings.ml[687,25027+6]..lib/warnings.ml[687,25027+44])
                  Texp_apply
                  expression (lib/warnings.ml[687,25027+19]..lib/warnings.ml[687,25027+20])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[687,25027+6]..lib/warnings.ml[687,25027+18])
                        Texp_constant Const_string("the label ",(lib/warnings.ml[687,25027+7]..lib/warnings.ml[687,25027+17]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[687,25027+21]..lib/warnings.ml[687,25027+44])
                        Texp_apply
                        expression (lib/warnings.ml[687,25027+23]..lib/warnings.ml[687,25027+24])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[687,25027+21]..lib/warnings.ml[687,25027+22])
                              Texp_ident "s/1950"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[687,25027+25]..lib/warnings.ml[687,25027+44])
                              Texp_constant Const_string(" is not optional.",(lib/warnings.ml[687,25027+26]..lib/warnings.ml[687,25027+43]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[688,25072+4]..lib/warnings.ml[688,25072+36])
                  Tpat_construct "Open_shadow_identifier"
                  [
                    pattern (lib/warnings.ml[688,25072+28]..lib/warnings.ml[688,25072+32])
                      Tpat_var "kind/1951"
                    pattern (lib/warnings.ml[688,25072+34]..lib/warnings.ml[688,25072+35])
                      Tpat_var "s/1952"
                  ]
                  None
                expression (lib/warnings.ml[689,25112+6]..lib/warnings.ml[691,25214+14])
                  Texp_apply
                  expression (lib/warnings.ml[689,25112+6]..lib/warnings.ml[689,25112+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost
                                Texp_constant Const_string("this open statement shadows the ",(lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost,None)
                              expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost
                                        Texp_constant Const_string(" identifier ",(lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost,None)
                                      expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost
                                                Texp_constant Const_string(" (which is later used)",(lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost,None)
                                              expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost
                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                []
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                          expression (lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost
                            Texp_constant Const_string("this open statement shadows the %s identifier %s (which is later used)",(lib/warnings.ml[690,25133+8]..lib/warnings.ml[690,25133+80]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[691,25214+8]..lib/warnings.ml[691,25214+12])
                        Texp_ident "kind/1951"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[691,25214+13]..lib/warnings.ml[691,25214+14])
                        Texp_ident "s/1952"
                  ]
              <case>
                pattern (lib/warnings.ml[692,25229+4]..lib/warnings.ml[692,25229+43])
                  Tpat_construct "Open_shadow_label_constructor"
                  [
                    pattern (lib/warnings.ml[692,25229+35]..lib/warnings.ml[692,25229+39])
                      Tpat_var "kind/1953"
                    pattern (lib/warnings.ml[692,25229+41]..lib/warnings.ml[692,25229+42])
                      Tpat_var "s/1954"
                  ]
                  None
                expression (lib/warnings.ml[693,25276+6]..lib/warnings.ml[695,25367+14])
                  Texp_apply
                  expression (lib/warnings.ml[693,25276+6]..lib/warnings.ml[693,25276+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost
                                Texp_constant Const_string("this open statement shadows the ",(lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost,None)
                              expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                    [
                                      expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost
                                        Texp_constant Const_char 20
                                      expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost
                                                Texp_constant Const_string(" (which is later used)",(lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost,None)
                                              expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost
                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                []
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                          expression (lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost
                            Texp_constant Const_string("this open statement shadows the %s %s (which is later used)",(lib/warnings.ml[694,25297+8]..lib/warnings.ml[694,25297+69]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[695,25367+8]..lib/warnings.ml[695,25367+12])
                        Texp_ident "kind/1953"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[695,25367+13]..lib/warnings.ml[695,25367+14])
                        Texp_ident "s/1954"
                  ]
              <case>
                pattern (lib/warnings.ml[696,25382+4]..lib/warnings.ml[696,25382+29])
                  Tpat_construct "Bad_env_variable"
                  [
                    pattern (lib/warnings.ml[696,25382+22]..lib/warnings.ml[696,25382+25])
                      Tpat_var "var/1955"
                    pattern (lib/warnings.ml[696,25382+27]..lib/warnings.ml[696,25382+28])
                      Tpat_var "s/1956"
                  ]
                  None
                expression (lib/warnings.ml[697,25415+6]..lib/warnings.ml[697,25415+65])
                  Texp_apply
                  expression (lib/warnings.ml[697,25415+6]..lib/warnings.ml[697,25415+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost
                                Texp_constant Const_string("illegal environment variable ",(lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost,None)
                              expression (lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost
                                        Texp_constant Const_string(" : ",(lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost,None)
                                      expression (lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                    ]
                                ]
                            ]
                          expression (lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost
                            Texp_constant Const_string("illegal environment variable %s : %s",(lib/warnings.ml[697,25415+21]..lib/warnings.ml[697,25415+59]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[697,25415+60]..lib/warnings.ml[697,25415+63])
                        Texp_ident "var/1955"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[697,25415+64]..lib/warnings.ml[697,25415+65])
                        Texp_ident "s/1956"
                  ]
              <case>
                pattern (lib/warnings.ml[698,25481+4]..lib/warnings.ml[698,25481+28])
                  Tpat_construct "Attribute_payload"
                  [
                    pattern (lib/warnings.ml[698,25481+23]..lib/warnings.ml[698,25481+24])
                      Tpat_var "a/1957"
                    pattern (lib/warnings.ml[698,25481+26]..lib/warnings.ml[698,25481+27])
                      Tpat_var "s/1958"
                  ]
                  None
                expression (lib/warnings.ml[699,25513+6]..lib/warnings.ml[699,25513+66])
                  Texp_apply
                  expression (lib/warnings.ml[699,25513+6]..lib/warnings.ml[699,25513+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost
                                Texp_constant Const_string("illegal payload for attribute '",(lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost,None)
                              expression (lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost
                                        Texp_constant Const_string("'.\n",(lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost,None)
                                      expression (lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                    ]
                                ]
                            ]
                          expression (lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost
                            Texp_constant Const_string("illegal payload for attribute '%s'.\n%s",(lib/warnings.ml[699,25513+21]..lib/warnings.ml[699,25513+62]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[699,25513+63]..lib/warnings.ml[699,25513+64])
                        Texp_ident "a/1957"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[699,25513+65]..lib/warnings.ml[699,25513+66])
                        Texp_ident "s/1958"
                  ]
              <case>
                pattern (lib/warnings.ml[700,25580+4]..lib/warnings.ml[700,25580+36])
                  Tpat_construct "Eliminated_optional_arguments"
                  [
                    pattern (lib/warnings.ml[700,25580+34]..lib/warnings.ml[700,25580+36])
                      Tpat_var "sl/1959"
                  ]
                  None
                expression (lib/warnings.ml[701,25620+6]..lib/warnings.ml[703,25739+31])
                  Texp_apply
                  expression (lib/warnings.ml[701,25620+6]..lib/warnings.ml[701,25620+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69]) ghost
                                Texp_constant Const_string("implicit elimination of optional argument",(lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69]) ghost,None)
                              expression (lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                    [
                                      expression (lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69]) ghost
                                        Texp_constant Const_char 20
                                      expression (lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                    ]
                                ]
                            ]
                          expression (lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69]) ghost
                            Texp_constant Const_string("implicit elimination of optional argument%s %s",(lib/warnings.ml[701,25620+21]..lib/warnings.ml[701,25620+69]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[702,25690+8]..lib/warnings.ml[702,25690+48])
                        Texp_ifthenelse
                        expression (lib/warnings.ml[702,25690+12]..lib/warnings.ml[702,25690+30])
                          Texp_apply
                          expression (lib/warnings.ml[702,25690+27]..lib/warnings.ml[702,25690+28])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[702,25690+12]..lib/warnings.ml[702,25690+26])
                                Texp_apply
                                expression (lib/warnings.ml[702,25690+12]..lib/warnings.ml[702,25690+23])
                                  Texp_ident "Stdlib!.List.length"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/warnings.ml[702,25690+24]..lib/warnings.ml[702,25690+26])
                                      Texp_ident "sl/1959"
                                ]
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[702,25690+29]..lib/warnings.ml[702,25690+30])
                                Texp_constant Const_int 1
                          ]
                        expression (lib/warnings.ml[702,25690+36]..lib/warnings.ml[702,25690+38])
                          Texp_constant Const_string("",(lib/warnings.ml[702,25690+37]..lib/warnings.ml[702,25690+37]),None)
                        Some
                          expression (lib/warnings.ml[702,25690+44]..lib/warnings.ml[702,25690+47])
                            Texp_constant Const_string("s",(lib/warnings.ml[702,25690+45]..lib/warnings.ml[702,25690+46]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[703,25739+8]..lib/warnings.ml[703,25739+31])
                        Texp_apply
                        expression (lib/warnings.ml[703,25739+9]..lib/warnings.ml[703,25739+22])
                          Texp_ident "Stdlib!.String.concat"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[703,25739+23]..lib/warnings.ml[703,25739+27])
                              Texp_constant Const_string(", ",(lib/warnings.ml[703,25739+24]..lib/warnings.ml[703,25739+26]),None)
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[703,25739+28]..lib/warnings.ml[703,25739+30])
                              Texp_ident "sl/1959"
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[704,25771+4]..lib/warnings.ml[704,25771+27])
                  Tpat_construct "No_cmi_file"
                  [
                    pattern (lib/warnings.ml[704,25771+16]..lib/warnings.ml[704,25771+20])
                      Tpat_var "name/1960"
                    pattern (lib/warnings.ml[704,25771+22]..lib/warnings.ml[704,25771+26])
                      Tpat_construct "None"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[705,25802+6]..lib/warnings.ml[705,25802+56])
                  Texp_apply
                  expression (lib/warnings.ml[705,25802+50]..lib/warnings.ml[705,25802+51])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[705,25802+6]..lib/warnings.ml[705,25802+49])
                        Texp_constant Const_string("no cmi file was found in path for module ",(lib/warnings.ml[705,25802+7]..lib/warnings.ml[705,25802+48]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[705,25802+52]..lib/warnings.ml[705,25802+56])
                        Texp_ident "name/1960"
                  ]
              <case>
                pattern (lib/warnings.ml[706,25859+4]..lib/warnings.ml[706,25859+31])
                  Tpat_construct "No_cmi_file"
                  [
                    pattern (lib/warnings.ml[706,25859+16]..lib/warnings.ml[706,25859+20])
                      Tpat_var "name/1961"
                    pattern (lib/warnings.ml[706,25859+22]..lib/warnings.ml[706,25859+30])
                      Tpat_construct "Some"
                      [
                        pattern (lib/warnings.ml[706,25859+27]..lib/warnings.ml[706,25859+30])
                          Tpat_var "msg/1962"
                      ]
                      None
                  ]
                  None
                expression (lib/warnings.ml[707,25894+6]..lib/warnings.ml[709,25979+16])
                  Texp_apply
                  expression (lib/warnings.ml[707,25894+6]..lib/warnings.ml[707,25894+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost
                                Texp_constant Const_string("no valid cmi file was found in path for module ",(lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost,None)
                              expression (lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost
                                        Texp_constant Const_string(". ",(lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost,None)
                                      expression (lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost
                                            Texp_construct "CamlinternalFormatBasics.End_of_format"
                                            []
                                        ]
                                    ]
                                ]
                            ]
                          expression (lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost
                            Texp_constant Const_string("no valid cmi file was found in path for module %s. %s",(lib/warnings.ml[708,25915+8]..lib/warnings.ml[708,25915+63]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[709,25979+8]..lib/warnings.ml[709,25979+12])
                        Texp_ident "name/1961"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[709,25979+13]..lib/warnings.ml[709,25979+16])
                        Texp_ident "msg/1962"
                  ]
              <case>
                pattern (lib/warnings.ml[710,25996+4]..lib/warnings.ml[710,25996+35])
                  Tpat_construct "Unexpected_docstring"
                  [
                    pattern (lib/warnings.ml[710,25996+25]..lib/warnings.ml[710,25996+35])
                      Tpat_var "unattached/1963"
                  ]
                  None
                expression (lib/warnings.ml[711,26035+6]..lib/warnings.ml[712,26105+44])
                  Texp_ifthenelse
                  expression (lib/warnings.ml[711,26035+9]..lib/warnings.ml[711,26035+19])
                    Texp_ident "unattached/1963"
                  expression (lib/warnings.ml[711,26035+25]..lib/warnings.ml[711,26035+69])
                    Texp_constant Const_string("unattached documentation comment (ignored)",(lib/warnings.ml[711,26035+26]..lib/warnings.ml[711,26035+68]),None)
                  Some
                    expression (lib/warnings.ml[712,26105+11]..lib/warnings.ml[712,26105+44])
                      Texp_constant Const_string("ambiguous documentation comment",(lib/warnings.ml[712,26105+12]..lib/warnings.ml[712,26105+43]),None)
              <case>
                pattern (lib/warnings.ml[713,26150+4]..lib/warnings.ml[713,26150+32])
                  Tpat_construct "Wrong_tailcall_expectation"
                  [
                    pattern (lib/warnings.ml[713,26150+31]..lib/warnings.ml[713,26150+32])
                      Tpat_var "b/1964"
                  ]
                  None
                expression (lib/warnings.ml[714,26186+6]..lib/warnings.ml[715,26221+50])
                  Texp_apply
                  expression (lib/warnings.ml[714,26186+6]..lib/warnings.ml[714,26186+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[714,26186+21]..lib/warnings.ml[714,26186+34])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[714,26186+21]..lib/warnings.ml[714,26186+34]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[714,26186+21]..lib/warnings.ml[714,26186+34]) ghost
                                Texp_constant Const_string("expected ",(lib/warnings.ml[714,26186+21]..lib/warnings.ml[714,26186+34]) ghost,None)
                              expression (lib/warnings.ml[714,26186+21]..lib/warnings.ml[714,26186+34]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/warnings.ml[714,26186+21]..lib/warnings.ml[714,26186+34]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[714,26186+21]..lib/warnings.ml[714,26186+34]) ghost
                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                    []
                                ]
                            ]
                          expression (lib/warnings.ml[714,26186+21]..lib/warnings.ml[714,26186+34]) ghost
                            Texp_constant Const_string("expected %s",(lib/warnings.ml[714,26186+21]..lib/warnings.ml[714,26186+34]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[715,26221+8]..lib/warnings.ml[715,26221+50])
                        Texp_ifthenelse
                        expression (lib/warnings.ml[715,26221+12]..lib/warnings.ml[715,26221+13])
                          Texp_ident "b/1964"
                        expression (lib/warnings.ml[715,26221+19]..lib/warnings.ml[715,26221+29])
                          Texp_constant Const_string("tailcall",(lib/warnings.ml[715,26221+20]..lib/warnings.ml[715,26221+28]),None)
                        Some
                          expression (lib/warnings.ml[715,26221+35]..lib/warnings.ml[715,26221+49])
                            Texp_constant Const_string("non-tailcall",(lib/warnings.ml[715,26221+36]..lib/warnings.ml[715,26221+48]),None)
                  ]
              <case>
                pattern (lib/warnings.ml[716,26272+4]..lib/warnings.ml[716,26272+27])
                  Tpat_construct "Fragile_literal_pattern"
                  []
                  None
                expression (lib/warnings.ml[717,26303+6]..lib/warnings.ml[722,26568+40])
                  Texp_let Nonrec
                  [
                    <def>
                        attribute "manual.ref"
                          [
                            structure_item (lib/warnings.ml[717,26303+22]..[717,26303+33])
                              Pstr_eval
                              expression (lib/warnings.ml[717,26303+22]..[717,26303+33])
                                Pexp_constant PConst_string("ss:warn52",(lib/warnings.ml[717,26303+23]..[717,26303+32]),None)
                          ]
                      pattern (lib/warnings.ml[717,26303+35]..lib/warnings.ml[717,26303+45])
                        Tpat_var "ref_manual/1993"
                      expression (lib/warnings.ml[717,26303+48]..lib/warnings.ml[717,26303+60])
                        Texp_construct "::"
                        [
                          expression (lib/warnings.ml[717,26303+50]..lib/warnings.ml[717,26303+52])
                            Texp_constant Const_int 13
                          expression (lib/warnings.ml[717,26303+54]..lib/warnings.ml[717,26303+60]) ghost
                            Texp_construct "::"
                            [
                              expression (lib/warnings.ml[717,26303+54]..lib/warnings.ml[717,26303+55])
                                Texp_constant Const_int 5
                              expression (lib/warnings.ml[717,26303+57]..lib/warnings.ml[717,26303+60]) ghost
                                Texp_construct "::"
                                [
                                  expression (lib/warnings.ml[717,26303+57]..lib/warnings.ml[717,26303+58])
                                    Texp_constant Const_int 3
                                  expression (lib/warnings.ml[717,26303+59]..lib/warnings.ml[717,26303+60]) ghost
                                    Texp_construct "[]"
                                    []
                                ]
                            ]
                        ]
                  ]
                  expression (lib/warnings.ml[718,26367+6]..lib/warnings.ml[722,26568+40])
                    Texp_apply
                    expression (lib/warnings.ml[718,26367+6]..lib/warnings.ml[718,26367+21])
                      Texp_ident "Stdlib!.Format.asprintf"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[719,26389+8]..lib/warnings.ml[721,26520+47])
                          Texp_construct "CamlinternalFormatBasics.Format"
                          [
                            expression (lib/warnings.ml[719,26389+8]..lib/warnings.ml[721,26520+47]) ghost
                              Texp_construct "CamlinternalFormatBasics.String_literal"
                              [
                                expression (lib/warnings.ml[719,26389+8]..lib/warnings.ml[721,26520+47]) ghost
                                  Texp_constant Const_string("Code should not depend on the actual values of\nthis constructor's arguments. They are only for information\nand may change in future versions. ",(lib/warnings.ml[719,26389+8]..lib/warnings.ml[721,26520+47]) ghost,None)
                                expression (lib/warnings.ml[719,26389+8]..lib/warnings.ml[721,26520+47]) ghost
                                  Texp_construct "CamlinternalFormatBasics.Alpha"
                                  [
                                    expression (lib/warnings.ml[719,26389+8]..lib/warnings.ml[721,26520+47]) ghost
                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                      []
                                  ]
                              ]
                            expression (lib/warnings.ml[719,26389+8]..lib/warnings.ml[721,26520+47]) ghost
                              Texp_constant Const_string("Code should not depend on the actual values of\nthis constructor's arguments. They are only for information\nand may change in future versions. %a",(lib/warnings.ml[719,26389+8]..lib/warnings.ml[721,26520+47]) ghost,None)
                          ]
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[722,26568+8]..lib/warnings.ml[722,26568+29])
                          Texp_ident "Ocaml_ocaml_types!.Misc.print_see_manual"
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[722,26568+30]..lib/warnings.ml[722,26568+40])
                          Texp_ident "ref_manual/1993"
                    ]
              <case>
                pattern (lib/warnings.ml[723,26609+4]..lib/warnings.ml[723,26609+20])
                  Tpat_construct "Unreachable_case"
                  []
                  None
                expression (lib/warnings.ml[724,26633+6]..lib/warnings.ml[725,26675+65])
                  Texp_constant Const_string("this match case is unreachable.\nConsider replacing it with a refutation case '<pat> -> .'",(lib/warnings.ml[724,26633+7]..lib/warnings.ml[725,26675+64]),None)
              <case>
                pattern (lib/warnings.ml[726,26741+4]..lib/warnings.ml[726,26741+33])
                  Tpat_construct "Misplaced_attribute"
                  [
                    pattern (lib/warnings.ml[726,26741+24]..lib/warnings.ml[726,26741+33])
                      Tpat_var "attr_name/1965"
                  ]
                  None
                expression (lib/warnings.ml[727,26778+6]..lib/warnings.ml[727,26778+79])
                  Texp_apply
                  expression (lib/warnings.ml[727,26778+6]..lib/warnings.ml[727,26778+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[727,26778+21]..lib/warnings.ml[727,26778+69])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[727,26778+21]..lib/warnings.ml[727,26778+69]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[727,26778+21]..lib/warnings.ml[727,26778+69]) ghost
                                Texp_constant Const_string("the ",(lib/warnings.ml[727,26778+21]..lib/warnings.ml[727,26778+69]) ghost,None)
                              expression (lib/warnings.ml[727,26778+21]..lib/warnings.ml[727,26778+69]) ghost
                                Texp_construct "CamlinternalFormatBasics.Caml_string"
                                [
                                  expression (lib/warnings.ml[727,26778+21]..lib/warnings.ml[727,26778+69]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[727,26778+21]..lib/warnings.ml[727,26778+69]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/warnings.ml[727,26778+21]..lib/warnings.ml[727,26778+69]) ghost
                                        Texp_constant Const_string(" attribute cannot appear in this context",(lib/warnings.ml[727,26778+21]..lib/warnings.ml[727,26778+69]) ghost,None)
                                      expression (lib/warnings.ml[727,26778+21]..lib/warnings.ml[727,26778+69]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                ]
                            ]
                          expression (lib/warnings.ml[727,26778+21]..lib/warnings.ml[727,26778+69]) ghost
                            Texp_constant Const_string("the %S attribute cannot appear in this context",(lib/warnings.ml[727,26778+21]..lib/warnings.ml[727,26778+69]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[727,26778+70]..lib/warnings.ml[727,26778+79])
                        Texp_ident "attr_name/1965"
                  ]
              <case>
                pattern (lib/warnings.ml[728,26858+4]..lib/warnings.ml[728,26858+34])
                  Tpat_construct "Duplicated_attribute"
                  [
                    pattern (lib/warnings.ml[728,26858+25]..lib/warnings.ml[728,26858+34])
                      Tpat_var "attr_name/1966"
                  ]
                  None
                expression (lib/warnings.ml[729,26896+6]..lib/warnings.ml[731,26990+17])
                  Texp_apply
                  expression (lib/warnings.ml[729,26896+6]..lib/warnings.ml[729,26896+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[729,26896+21]..lib/warnings.ml[730,26968+21])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[729,26896+21]..lib/warnings.ml[730,26968+21]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[729,26896+21]..lib/warnings.ml[730,26968+21]) ghost
                                Texp_constant Const_string("the ",(lib/warnings.ml[729,26896+21]..lib/warnings.ml[730,26968+21]) ghost,None)
                              expression (lib/warnings.ml[729,26896+21]..lib/warnings.ml[730,26968+21]) ghost
                                Texp_construct "CamlinternalFormatBasics.Caml_string"
                                [
                                  expression (lib/warnings.ml[729,26896+21]..lib/warnings.ml[730,26968+21]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[729,26896+21]..lib/warnings.ml[730,26968+21]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/warnings.ml[729,26896+21]..lib/warnings.ml[730,26968+21]) ghost
                                        Texp_constant Const_string(" attribute is used more than once on this expression",(lib/warnings.ml[729,26896+21]..lib/warnings.ml[730,26968+21]) ghost,None)
                                      expression (lib/warnings.ml[729,26896+21]..lib/warnings.ml[730,26968+21]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                ]
                            ]
                          expression (lib/warnings.ml[729,26896+21]..lib/warnings.ml[730,26968+21]) ghost
                            Texp_constant Const_string("the %S attribute is used more than once on this expression",(lib/warnings.ml[729,26896+21]..lib/warnings.ml[730,26968+21]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[731,26990+8]..lib/warnings.ml[731,26990+17])
                        Texp_ident "attr_name/1966"
                  ]
              <case>
                pattern (lib/warnings.ml[732,27008+4]..lib/warnings.ml[732,27008+30])
                  Tpat_construct "Inlining_impossible"
                  [
                    pattern (lib/warnings.ml[732,27008+24]..lib/warnings.ml[732,27008+30])
                      Tpat_var "reason/1967"
                  ]
                  None
                expression (lib/warnings.ml[733,27042+6]..lib/warnings.ml[733,27042+47])
                  Texp_apply
                  expression (lib/warnings.ml[733,27042+6]..lib/warnings.ml[733,27042+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[733,27042+21]..lib/warnings.ml[733,27042+40])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[733,27042+21]..lib/warnings.ml[733,27042+40]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[733,27042+21]..lib/warnings.ml[733,27042+40]) ghost
                                Texp_constant Const_string("Cannot inline: ",(lib/warnings.ml[733,27042+21]..lib/warnings.ml[733,27042+40]) ghost,None)
                              expression (lib/warnings.ml[733,27042+21]..lib/warnings.ml[733,27042+40]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/warnings.ml[733,27042+21]..lib/warnings.ml[733,27042+40]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[733,27042+21]..lib/warnings.ml[733,27042+40]) ghost
                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                    []
                                ]
                            ]
                          expression (lib/warnings.ml[733,27042+21]..lib/warnings.ml[733,27042+40]) ghost
                            Texp_constant Const_string("Cannot inline: %s",(lib/warnings.ml[733,27042+21]..lib/warnings.ml[733,27042+40]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[733,27042+41]..lib/warnings.ml[733,27042+47])
                        Texp_ident "reason/1967"
                  ]
              <case>
                pattern (lib/warnings.ml[734,27090+4]..lib/warnings.ml[734,27090+39])
                  Tpat_construct "Ambiguous_var_in_pattern_guard"
                  [
                    pattern (lib/warnings.ml[734,27090+35]..lib/warnings.ml[734,27090+39])
                      Tpat_var "vars/1968"
                  ]
                  None
                expression (lib/warnings.ml[735,27133+6]..lib/warnings.ml[753,27843+57])
                  Texp_let Nonrec
                  [
                    <def>
                        attribute "manual.ref"
                          [
                            structure_item (lib/warnings.ml[735,27133+22]..[735,27133+33])
                              Pstr_eval
                              expression (lib/warnings.ml[735,27133+22]..[735,27133+33])
                                Pexp_constant PConst_string("ss:warn57",(lib/warnings.ml[735,27133+23]..[735,27133+32]),None)
                          ]
                      pattern (lib/warnings.ml[735,27133+35]..lib/warnings.ml[735,27133+45])
                        Tpat_var "ref_manual/1994"
                      expression (lib/warnings.ml[735,27133+48]..lib/warnings.ml[735,27133+60])
                        Texp_construct "::"
                        [
                          expression (lib/warnings.ml[735,27133+50]..lib/warnings.ml[735,27133+52])
                            Texp_constant Const_int 13
                          expression (lib/warnings.ml[735,27133+54]..lib/warnings.ml[735,27133+60]) ghost
                            Texp_construct "::"
                            [
                              expression (lib/warnings.ml[735,27133+54]..lib/warnings.ml[735,27133+55])
                                Texp_constant Const_int 5
                              expression (lib/warnings.ml[735,27133+57]..lib/warnings.ml[735,27133+60]) ghost
                                Texp_construct "::"
                                [
                                  expression (lib/warnings.ml[735,27133+57]..lib/warnings.ml[735,27133+58])
                                    Texp_constant Const_int 4
                                  expression (lib/warnings.ml[735,27133+59]..lib/warnings.ml[735,27133+60]) ghost
                                    Texp_construct "[]"
                                    []
                                ]
                            ]
                        ]
                  ]
                  expression (lib/warnings.ml[736,27197+6]..lib/warnings.ml[753,27843+57])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[736,27197+10]..lib/warnings.ml[736,27197+14])
                          Tpat_var "vars/1995"
                        expression (lib/warnings.ml[736,27197+17]..lib/warnings.ml[736,27197+46])
                          Texp_apply
                          expression (lib/warnings.ml[736,27197+17]..lib/warnings.ml[736,27197+26])
                            Texp_ident "Stdlib!.List.sort"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[736,27197+27]..lib/warnings.ml[736,27197+41])
                                Texp_ident "Stdlib!.String.compare"
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[736,27197+42]..lib/warnings.ml[736,27197+46])
                                Texp_ident "vars/1968"
                          ]
                    ]
                    expression (lib/warnings.ml[737,27247+6]..lib/warnings.ml[753,27843+57])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/warnings.ml[737,27247+10]..lib/warnings.ml[737,27247+26])
                            Tpat_var "vars_explanation/1996"
                          expression (lib/warnings.ml[738,27276+8]..lib/warnings.ml[746,27580+66])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/warnings.ml[738,27276+12]..lib/warnings.ml[738,27276+31])
                                  Tpat_var "in_different_places/1997"
                                expression (lib/warnings.ml[739,27310+10]..lib/warnings.ml[739,27310+68])
                                  Texp_constant Const_string("in different places in different or-pattern alternatives",(lib/warnings.ml[739,27310+11]..lib/warnings.ml[739,27310+67]),None)
                            ]
                            expression (lib/warnings.ml[741,27390+8]..lib/warnings.ml[746,27580+66])
                              Texp_match
                              expression (lib/warnings.ml[741,27390+14]..lib/warnings.ml[741,27390+18])
                                Texp_ident "vars/1995"
                              [
                                <case>
                                  pattern (lib/warnings.ml[742,27414+10]..lib/warnings.ml[742,27414+12])
                                    Tpat_value
                                    pattern (lib/warnings.ml[742,27414+10]..lib/warnings.ml[742,27414+12])
                                      Tpat_construct "[]"
                                      []
                                      None
                                  expression (lib/warnings.ml[742,27414+16]..lib/warnings.ml[742,27414+28])
                                    Texp_assert                                    expression (lib/warnings.ml[742,27414+23]..lib/warnings.ml[742,27414+28])
                                      Texp_construct "false"
                                      []
                                <case>
                                  pattern (lib/warnings.ml[743,27443+10]..lib/warnings.ml[743,27443+13])
                                    Tpat_value
                                    pattern (lib/warnings.ml[743,27443+10]..lib/warnings.ml[743,27443+13])
                                      Tpat_construct "::"
                                      [
                                        pattern (lib/warnings.ml[743,27443+11]..lib/warnings.ml[743,27443+12])
                                          Tpat_var "x/1998"
                                        pattern (lib/warnings.ml[743,27443+12]..lib/warnings.ml[743,27443+13]) ghost
                                          Tpat_construct "[]"
                                          []
                                          None
                                      ]
                                      None
                                  expression (lib/warnings.ml[743,27443+17]..lib/warnings.ml[743,27443+68])
                                    Texp_apply
                                    expression (lib/warnings.ml[743,27443+29]..lib/warnings.ml[743,27443+30])
                                      Texp_ident "Stdlib!.^"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[743,27443+17]..lib/warnings.ml[743,27443+28])
                                          Texp_constant Const_string("variable ",(lib/warnings.ml[743,27443+18]..lib/warnings.ml[743,27443+27]),None)
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[743,27443+31]..lib/warnings.ml[743,27443+68])
                                          Texp_apply
                                          expression (lib/warnings.ml[743,27443+33]..lib/warnings.ml[743,27443+34])
                                            Texp_ident "Stdlib!.^"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[743,27443+31]..lib/warnings.ml[743,27443+32])
                                                Texp_ident "x/1998"
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[743,27443+35]..lib/warnings.ml[743,27443+68])
                                                Texp_apply
                                                expression (lib/warnings.ml[743,27443+47]..lib/warnings.ml[743,27443+48])
                                                  Texp_ident "Stdlib!.^"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/warnings.ml[743,27443+35]..lib/warnings.ml[743,27443+46])
                                                      Texp_constant Const_string(" appears ",(lib/warnings.ml[743,27443+36]..lib/warnings.ml[743,27443+45]),None)
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/warnings.ml[743,27443+49]..lib/warnings.ml[743,27443+68])
                                                      Texp_ident "in_different_places/1997"
                                                ]
                                          ]
                                    ]
                                <case>
                                  pattern (lib/warnings.ml[744,27512+10]..lib/warnings.ml[744,27512+14])
                                    Tpat_value
                                    pattern (lib/warnings.ml[744,27512+10]..lib/warnings.ml[744,27512+14])
                                      Tpat_construct "::"
                                      [
                                        pattern (lib/warnings.ml[744,27512+10]..lib/warnings.ml[744,27512+11])
                                          Tpat_any
                                        pattern (lib/warnings.ml[744,27512+13]..lib/warnings.ml[744,27512+14])
                                          Tpat_any
                                      ]
                                      None
                                  expression (lib/warnings.ml[745,27530+12]..lib/warnings.ml[746,27580+66])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/warnings.ml[745,27530+16]..lib/warnings.ml[745,27530+20])
                                          Tpat_var "vars/1999"
                                        expression (lib/warnings.ml[745,27530+23]..lib/warnings.ml[745,27530+46])
                                          Texp_apply
                                          expression (lib/warnings.ml[745,27530+23]..lib/warnings.ml[745,27530+36])
                                            Texp_ident "Stdlib!.String.concat"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[745,27530+37]..lib/warnings.ml[745,27530+41])
                                                Texp_constant Const_string(", ",(lib/warnings.ml[745,27530+38]..lib/warnings.ml[745,27530+40]),None)
                                            <arg>
                                              Nolabel
                                              expression (lib/warnings.ml[745,27530+42]..lib/warnings.ml[745,27530+46])
                                                Texp_ident "vars/1995"
                                          ]
                                    ]
                                    expression (lib/warnings.ml[746,27580+12]..lib/warnings.ml[746,27580+66])
                                      Texp_apply
                                      expression (lib/warnings.ml[746,27580+25]..lib/warnings.ml[746,27580+26])
                                        Texp_ident "Stdlib!.^"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[746,27580+12]..lib/warnings.ml[746,27580+24])
                                            Texp_constant Const_string("variables ",(lib/warnings.ml[746,27580+13]..lib/warnings.ml[746,27580+23]),None)
                                        <arg>
                                          Nolabel
                                          expression (lib/warnings.ml[746,27580+27]..lib/warnings.ml[746,27580+66])
                                            Texp_apply
                                            expression (lib/warnings.ml[746,27580+32]..lib/warnings.ml[746,27580+33])
                                              Texp_ident "Stdlib!.^"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[746,27580+27]..lib/warnings.ml[746,27580+31])
                                                  Texp_ident "vars/1999"
                                              <arg>
                                                Nolabel
                                                expression (lib/warnings.ml[746,27580+34]..lib/warnings.ml[746,27580+66])
                                                  Texp_apply
                                                  expression (lib/warnings.ml[746,27580+45]..lib/warnings.ml[746,27580+46])
                                                    Texp_ident "Stdlib!.^"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[746,27580+34]..lib/warnings.ml[746,27580+44])
                                                        Texp_constant Const_string(" appear ",(lib/warnings.ml[746,27580+35]..lib/warnings.ml[746,27580+43]),None)
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/warnings.ml[746,27580+47]..lib/warnings.ml[746,27580+66])
                                                        Texp_ident "in_different_places/1997"
                                                  ]
                                            ]
                                      ]
                              ]
                      ]
                      expression (lib/warnings.ml[748,27656+6]..lib/warnings.ml[753,27843+57])
                        Texp_apply
                        expression (lib/warnings.ml[748,27656+6]..lib/warnings.ml[748,27656+21])
                          Texp_ident "Stdlib!.Format.asprintf"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12]) ghost
                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                  [
                                    expression (lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12]) ghost
                                      Texp_constant Const_string("Ambiguous or-pattern variables under guard;\n",(lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12]) ghost,None)
                                    expression (lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String"
                                      [
                                        expression (lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12]) ghost
                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                          []
                                        expression (lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String_literal"
                                          [
                                            expression (lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12]) ghost
                                              Texp_constant Const_string(".\nOnly the first match will be used to evaluate the guard expression.\n",(lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12]) ghost,None)
                                            expression (lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Alpha"
                                              [
                                                expression (lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                  []
                                              ]
                                          ]
                                      ]
                                  ]
                                expression (lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12]) ghost
                                  Texp_constant Const_string("Ambiguous or-pattern variables under guard;\n%s.\nOnly the first match will be used to evaluate the guard expression.\n%a",(lib/warnings.ml[749,27678+8]..lib/warnings.ml[752,27830+12]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[753,27843+8]..lib/warnings.ml[753,27843+24])
                              Texp_ident "vars_explanation/1996"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[753,27843+25]..lib/warnings.ml[753,27843+46])
                              Texp_ident "Ocaml_ocaml_types!.Misc.print_see_manual"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[753,27843+47]..lib/warnings.ml[753,27843+57])
                              Texp_ident "ref_manual/1994"
                        ]
              <case>
                pattern (lib/warnings.ml[754,27901+4]..lib/warnings.ml[754,27901+20])
                  Tpat_construct "No_cmx_file"
                  [
                    pattern (lib/warnings.ml[754,27901+16]..lib/warnings.ml[754,27901+20])
                      Tpat_var "name/1969"
                  ]
                  None
                expression (lib/warnings.ml[755,27925+6]..lib/warnings.ml[757,28002+62])
                  Texp_apply
                  expression (lib/warnings.ml[755,27925+6]..lib/warnings.ml[755,27925+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[756,27946+8]..lib/warnings.ml[757,28002+57])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[756,27946+8]..lib/warnings.ml[757,28002+57]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[756,27946+8]..lib/warnings.ml[757,28002+57]) ghost
                                Texp_constant Const_string("no cmx file was found in path for module ",(lib/warnings.ml[756,27946+8]..lib/warnings.ml[757,28002+57]) ghost,None)
                              expression (lib/warnings.ml[756,27946+8]..lib/warnings.ml[757,28002+57]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/warnings.ml[756,27946+8]..lib/warnings.ml[757,28002+57]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[756,27946+8]..lib/warnings.ml[757,28002+57]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/warnings.ml[756,27946+8]..lib/warnings.ml[757,28002+57]) ghost
                                        Texp_constant Const_string(", and its interface was not compiled with -opaque",(lib/warnings.ml[756,27946+8]..lib/warnings.ml[757,28002+57]) ghost,None)
                                      expression (lib/warnings.ml[756,27946+8]..lib/warnings.ml[757,28002+57]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                ]
                            ]
                          expression (lib/warnings.ml[756,27946+8]..lib/warnings.ml[757,28002+57]) ghost
                            Texp_constant Const_string("no cmx file was found in path for module %s, and its interface was not compiled with -opaque",(lib/warnings.ml[756,27946+8]..lib/warnings.ml[757,28002+57]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[757,28002+58]..lib/warnings.ml[757,28002+62])
                        Texp_ident "name/1969"
                  ]
              <case>
                pattern (lib/warnings.ml[758,28065+4]..lib/warnings.ml[758,28065+43])
                  Tpat_construct "Flambda_assignment_to_non_mutable_value"
                  []
                  None
                expression (lib/warnings.ml[759,28112+6]..lib/warnings.ml[761,28261+28])
                  Texp_constant Const_string("A potential assignment to a non-mutable value was detected \nin this source file.  Such assignments may generate incorrect code \nwhen using Flambda.",(lib/warnings.ml[759,28112+7]..lib/warnings.ml[761,28261+27]),None)
              <case>
                pattern (lib/warnings.ml[762,28290+4]..lib/warnings.ml[762,28290+19])
                  Tpat_construct "Unused_module"
                  [
                    pattern (lib/warnings.ml[762,28290+18]..lib/warnings.ml[762,28290+19])
                      Tpat_var "s/1970"
                  ]
                  None
                expression (lib/warnings.ml[762,28290+23]..lib/warnings.ml[762,28290+49])
                  Texp_apply
                  expression (lib/warnings.ml[762,28290+40]..lib/warnings.ml[762,28290+41])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[762,28290+23]..lib/warnings.ml[762,28290+39])
                        Texp_constant Const_string("unused module ",(lib/warnings.ml[762,28290+24]..lib/warnings.ml[762,28290+38]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[762,28290+42]..lib/warnings.ml[762,28290+49])
                        Texp_apply
                        expression (lib/warnings.ml[762,28290+44]..lib/warnings.ml[762,28290+45])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[762,28290+42]..lib/warnings.ml[762,28290+43])
                              Texp_ident "s/1970"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[762,28290+46]..lib/warnings.ml[762,28290+49])
                              Texp_constant Const_string(".",(lib/warnings.ml[762,28290+47]..lib/warnings.ml[762,28290+48]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[763,28340+4]..lib/warnings.ml[763,28340+33])
                  Tpat_construct "Unboxable_type_in_prim_decl"
                  [
                    pattern (lib/warnings.ml[763,28340+32]..lib/warnings.ml[763,28340+33])
                      Tpat_var "t/1971"
                  ]
                  None
                expression (lib/warnings.ml[764,28377+6]..lib/warnings.ml[772,28920+43])
                  Texp_apply
                  expression (lib/warnings.ml[764,28377+6]..lib/warnings.ml[764,28377+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                Texp_constant Const_string("This primitive declaration uses type ",(lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost,None)
                              expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                        Texp_constant Const_string(", whose representation\nmay be either boxed or unboxed. Without an annotation to indicate\nwhich representation is intended, the boxed representation has been\nselected by default. This default choice may change in future\nversions of the compiler, breaking the primitive implementation.\nYou should explicitly annotate the declaration of ",(lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost,None)
                                      expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                            [
                                              expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                                Texp_constant Const_string("\nwith [",(lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost,None)
                                              expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                                Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                [
                                                  expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Escaped_at"
                                                    []
                                                  expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                                        Texp_constant Const_string("boxed] or [",(lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost,None)
                                                      expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                        [
                                                          expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.Escaped_at"
                                                            []
                                                          expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                                                Texp_constant Const_string("unboxed], so that its external interface\nremains stable in the future.",(lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost,None)
                                                              expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                          expression (lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost
                            Texp_constant Const_string("This primitive declaration uses type %s, whose representation\nmay be either boxed or unboxed. Without an annotation to indicate\nwhich representation is intended, the boxed representation has been\nselected by default. This default choice may change in future\nversions of the compiler, breaking the primitive implementation.\nYou should explicitly annotate the declaration of %s\nwith [@@boxed] or [@@unboxed], so that its external interface\nremains stable in the future.",(lib/warnings.ml[765,28398+8]..lib/warnings.ml[772,28920+39]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[772,28920+40]..lib/warnings.ml[772,28920+41])
                        Texp_ident "t/1971"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[772,28920+42]..lib/warnings.ml[772,28920+43])
                        Texp_ident "t/1971"
                  ]
              <case>
                pattern (lib/warnings.ml[773,28964+4]..lib/warnings.ml[773,28964+22])
                  Tpat_construct "Constraint_on_gadt"
                  []
                  None
                expression (lib/warnings.ml[774,28990+6]..lib/warnings.ml[774,28990+69])
                  Texp_constant Const_string("Type constraints do not apply to GADT cases of variant types.",(lib/warnings.ml[774,28990+7]..lib/warnings.ml[774,28990+68]),None)
              <case>
                pattern (lib/warnings.ml[775,29060+4]..lib/warnings.ml[775,29060+33])
                  Tpat_construct "Erroneous_printed_signature"
                  [
                    pattern (lib/warnings.ml[775,29060+32]..lib/warnings.ml[775,29060+33])
                      Tpat_var "s/1972"
                  ]
                  None
                expression (lib/warnings.ml[776,29097+6]..lib/warnings.ml[781,29393+54])
                  Texp_apply
                  expression (lib/warnings.ml[779,29303+5]..lib/warnings.ml[779,29303+6])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[776,29097+6]..lib/warnings.ml[778,29242+60])
                        Texp_constant Const_string("The printed interface differs from the inferred interface.\nThe inferred interface contained items which could not be printed\nproperly due to name collisions between identifiers.",(lib/warnings.ml[776,29097+7]..lib/warnings.ml[778,29242+59]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[779,29303+7]..lib/warnings.ml[781,29393+54])
                        Texp_apply
                        expression (lib/warnings.ml[780,29312+5]..lib/warnings.ml[780,29312+6])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[779,29303+7]..lib/warnings.ml[779,29303+8])
                              Texp_ident "s/1972"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[780,29312+7]..lib/warnings.ml[781,29393+54])
                              Texp_constant Const_string("\nBeware that this warning is purely informational and will not catch\nall instances of erroneous printed interface.",(lib/warnings.ml[780,29312+8]..lib/warnings.ml[781,29393+53]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[782,29448+4]..lib/warnings.ml[782,29448+39])
                  Tpat_construct "Unsafe_array_syntax_without_parsing"
                  []
                  None
                expression (lib/warnings.ml[783,29491+5]..lib/warnings.ml[783,29491+70])
                  Texp_constant Const_string("option -unsafe used with a preprocessor returning a syntax tree",(lib/warnings.ml[783,29491+6]..lib/warnings.ml[783,29491+69]),None)
              <case>
                pattern (lib/warnings.ml[784,29562+4]..lib/warnings.ml[784,29562+24])
                  Tpat_construct "Redefining_unit"
                  [
                    pattern (lib/warnings.ml[784,29562+20]..lib/warnings.ml[784,29562+24])
                      Tpat_var "name/1973"
                  ]
                  None
                expression (lib/warnings.ml[785,29590+6]..lib/warnings.ml[788,29724+51])
                  Texp_apply
                  expression (lib/warnings.ml[785,29590+6]..lib/warnings.ml[785,29590+20])
                    Texp_ident "Stdlib!.Printf.sprintf"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[786,29611+8]..lib/warnings.ml[788,29724+46])
                        Texp_construct "CamlinternalFormatBasics.Format"
                        [
                          expression (lib/warnings.ml[786,29611+8]..lib/warnings.ml[788,29724+46]) ghost
                            Texp_construct "CamlinternalFormatBasics.String_literal"
                            [
                              expression (lib/warnings.ml[786,29611+8]..lib/warnings.ml[788,29724+46]) ghost
                                Texp_constant Const_string("This type declaration is defining a new '()' constructor\nwhich shadows the existing one.\nHint: Did you mean 'type ",(lib/warnings.ml[786,29611+8]..lib/warnings.ml[788,29724+46]) ghost,None)
                              expression (lib/warnings.ml[786,29611+8]..lib/warnings.ml[788,29724+46]) ghost
                                Texp_construct "CamlinternalFormatBasics.String"
                                [
                                  expression (lib/warnings.ml[786,29611+8]..lib/warnings.ml[788,29724+46]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[786,29611+8]..lib/warnings.ml[788,29724+46]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/warnings.ml[786,29611+8]..lib/warnings.ml[788,29724+46]) ghost
                                        Texp_constant Const_string(" = unit'?",(lib/warnings.ml[786,29611+8]..lib/warnings.ml[788,29724+46]) ghost,None)
                                      expression (lib/warnings.ml[786,29611+8]..lib/warnings.ml[788,29724+46]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                ]
                            ]
                          expression (lib/warnings.ml[786,29611+8]..lib/warnings.ml[788,29724+46]) ghost
                            Texp_constant Const_string("This type declaration is defining a new '()' constructor\nwhich shadows the existing one.\nHint: Did you mean 'type %s = unit'?",(lib/warnings.ml[786,29611+8]..lib/warnings.ml[788,29724+46]) ghost,None)
                        ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[788,29724+47]..lib/warnings.ml[788,29724+51])
                        Texp_ident "name/1973"
                  ]
              <case>
                pattern (lib/warnings.ml[789,29776+4]..lib/warnings.ml[789,29776+30])
                  Tpat_construct "Unused_functor_parameter"
                  [
                    pattern (lib/warnings.ml[789,29776+29]..lib/warnings.ml[789,29776+30])
                      Tpat_var "s/1974"
                  ]
                  None
                expression (lib/warnings.ml[789,29776+34]..lib/warnings.ml[789,29776+71])
                  Texp_apply
                  expression (lib/warnings.ml[789,29776+62]..lib/warnings.ml[789,29776+63])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[789,29776+34]..lib/warnings.ml[789,29776+61])
                        Texp_constant Const_string("unused functor parameter ",(lib/warnings.ml[789,29776+35]..lib/warnings.ml[789,29776+60]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[789,29776+64]..lib/warnings.ml[789,29776+71])
                        Texp_apply
                        expression (lib/warnings.ml[789,29776+66]..lib/warnings.ml[789,29776+67])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[789,29776+64]..lib/warnings.ml[789,29776+65])
                              Texp_ident "s/1974"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[789,29776+68]..lib/warnings.ml[789,29776+71])
                              Texp_constant Const_string(".",(lib/warnings.ml[789,29776+69]..lib/warnings.ml[789,29776+70]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[790,29848+4]..lib/warnings.ml[790,29848+42])
                  Tpat_construct "Match_on_mutable_state_prevent_uncurry"
                  []
                  None
                expression (lib/warnings.ml[791,29894+4]..lib/warnings.ml[793,30017+43])
                  Texp_constant Const_string("This pattern depends on mutable state.\nIt prevents the remaining arguments from being uncurried, which will cause additional closure allocations.",(lib/warnings.ml[791,29894+5]..lib/warnings.ml[793,30017+42]),None)
              <case>
                pattern (lib/warnings.ml[794,30061+4]..lib/warnings.ml[794,30061+28])
                  Tpat_construct "Unused_field"
                  [
                    pattern (lib/warnings.ml[794,30061+18]..lib/warnings.ml[794,30061+19])
                      Tpat_var "s/1975"
                    pattern (lib/warnings.ml[794,30061+21]..lib/warnings.ml[794,30061+27])
                      Tpat_construct "Unused"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[794,30061+32]..lib/warnings.ml[794,30061+64])
                  Texp_apply
                  expression (lib/warnings.ml[794,30061+55]..lib/warnings.ml[794,30061+56])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[794,30061+32]..lib/warnings.ml[794,30061+54])
                        Texp_constant Const_string("unused record field ",(lib/warnings.ml[794,30061+33]..lib/warnings.ml[794,30061+53]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[794,30061+57]..lib/warnings.ml[794,30061+64])
                        Texp_apply
                        expression (lib/warnings.ml[794,30061+59]..lib/warnings.ml[794,30061+60])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[794,30061+57]..lib/warnings.ml[794,30061+58])
                              Texp_ident "s/1975"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[794,30061+61]..lib/warnings.ml[794,30061+64])
                              Texp_constant Const_string(".",(lib/warnings.ml[794,30061+62]..lib/warnings.ml[794,30061+63]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[795,30126+4]..lib/warnings.ml[795,30126+30])
                  Tpat_construct "Unused_field"
                  [
                    pattern (lib/warnings.ml[795,30126+18]..lib/warnings.ml[795,30126+19])
                      Tpat_var "s/1976"
                    pattern (lib/warnings.ml[795,30126+21]..lib/warnings.ml[795,30126+29])
                      Tpat_construct "Not_read"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[796,30160+6]..lib/warnings.ml[798,30214+65])
                  Texp_apply
                  expression (lib/warnings.ml[796,30160+22]..lib/warnings.ml[796,30160+23])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[796,30160+6]..lib/warnings.ml[796,30160+21])
                        Texp_constant Const_string("record field ",(lib/warnings.ml[796,30160+7]..lib/warnings.ml[796,30160+20]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[796,30160+24]..lib/warnings.ml[798,30214+65])
                        Texp_apply
                        expression (lib/warnings.ml[796,30160+26]..lib/warnings.ml[796,30160+27])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[796,30160+24]..lib/warnings.ml[796,30160+25])
                              Texp_ident "s/1976"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[797,30188+6]..lib/warnings.ml[798,30214+65])
                              Texp_constant Const_string(" is never read.\n(However, this field is used to build or mutate values.)",(lib/warnings.ml[797,30188+7]..lib/warnings.ml[798,30214+64]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[799,30280+4]..lib/warnings.ml[799,30280+33])
                  Tpat_construct "Unused_field"
                  [
                    pattern (lib/warnings.ml[799,30280+18]..lib/warnings.ml[799,30280+19])
                      Tpat_var "s/1977"
                    pattern (lib/warnings.ml[799,30280+21]..lib/warnings.ml[799,30280+32])
                      Tpat_construct "Not_mutated"
                      []
                      None
                  ]
                  None
                expression (lib/warnings.ml[800,30317+6]..lib/warnings.ml[801,30353+26])
                  Texp_apply
                  expression (lib/warnings.ml[800,30317+30]..lib/warnings.ml[800,30317+31])
                    Texp_ident "Stdlib!.^"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[800,30317+6]..lib/warnings.ml[800,30317+29])
                        Texp_constant Const_string("mutable record field ",(lib/warnings.ml[800,30317+7]..lib/warnings.ml[800,30317+28]),None)
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[800,30317+32]..lib/warnings.ml[801,30353+26])
                        Texp_apply
                        expression (lib/warnings.ml[800,30317+34]..lib/warnings.ml[800,30317+35])
                          Texp_ident "Stdlib!.^"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[800,30317+32]..lib/warnings.ml[800,30317+33])
                              Texp_ident "s/1977"
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[801,30353+6]..lib/warnings.ml[801,30353+26])
                              Texp_constant Const_string(" is never mutated.",(lib/warnings.ml[801,30353+7]..lib/warnings.ml[801,30353+25]),None)
                        ]
                  ]
              <case>
                pattern (lib/warnings.ml[802,30380+4]..lib/warnings.ml[802,30380+15])
                  Tpat_construct "Missing_mli"
                  []
                  None
                expression (lib/warnings.ml[803,30399+4]..lib/warnings.ml[803,30399+33])
                  Texp_constant Const_string("Cannot find interface file.",(lib/warnings.ml[803,30399+5]..lib/warnings.ml[803,30399+32]),None)
              <case>
                pattern (lib/warnings.ml[804,30433+4]..lib/warnings.ml[804,30433+24])
                  Tpat_construct "Unused_tmc_attribute"
                  []
                  None
                expression (lib/warnings.ml[805,30461+6]..lib/warnings.ml[806,30510+45])
                  Texp_constant Const_string("This function is marked @tail_mod_cons\nbut is never applied in TMC position.",(lib/warnings.ml[805,30461+7]..lib/warnings.ml[806,30510+44]),None)
              <case>
                pattern (lib/warnings.ml[807,30556+4]..lib/warnings.ml[807,30556+23])
                  Tpat_construct "Tmc_breaks_tailcall"
                  []
                  None
                expression (lib/warnings.ml[808,30583+6]..lib/warnings.ml[814,30948+42])
                  Texp_constant Const_string("This call\nis in tail-modulo-cons position in a TMC function,\nbut the function called is not itself specialized for TMC,\nso the call will not be transformed into a tail call.\nPlease either mark the called function with the [@tail_mod_cons]\nattribute, or mark this call with the [@tailcall false] attribute\nto make its non-tailness explicit.",(lib/warnings.ml[808,30583+7]..lib/warnings.ml[814,30948+41]),None)
              <case>
                pattern (lib/warnings.ml[815,30991+4]..lib/warnings.ml[815,30991+39])
                  Tpat_construct "Generative_application_expects_unit"
                  []
                  None
                expression (lib/warnings.ml[816,31034+6]..lib/warnings.ml[817,31065+70])
                  Texp_constant Const_string("A generative functor\nshould be applied to '()'; using '(struct end)' is deprecated.",(lib/warnings.ml[816,31034+7]..lib/warnings.ml[817,31065+69]),None)
            ]
    ]
  structure_item (lib/warnings.ml[820,31140+0]..lib/warnings.ml[820,31140+19])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[820,31140+4]..lib/warnings.ml[820,31140+11])
          Tpat_var "nerrors/2001"
        expression (lib/warnings.ml[820,31140+14]..lib/warnings.ml[820,31140+19])
          Texp_apply
          expression (lib/warnings.ml[820,31140+14]..lib/warnings.ml[820,31140+17])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/warnings.ml[820,31140+18]..lib/warnings.ml[820,31140+19])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (lib/warnings.ml[822,31161+0]..lib/warnings.ml[827,31283+3])
    Tstr_type Rec
    [
      type_declaration reporting_information/2002 (lib/warnings.ml[822,31161+0]..lib/warnings.ml[827,31283+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/warnings.ml[823,31190+4]..lib/warnings.ml[824,31206+3])
                Immutable
                id/2003                core_type (lib/warnings.ml[823,31190+9]..lib/warnings.ml[823,31190+15])
                  Ttyp_poly
                  core_type (lib/warnings.ml[823,31190+9]..lib/warnings.ml[823,31190+15])
                    Ttyp_constr "string/15!"
                    []
              (lib/warnings.ml[824,31206+4]..lib/warnings.ml[825,31227+3])
                Immutable
                message/2004                core_type (lib/warnings.ml[824,31206+14]..lib/warnings.ml[824,31206+20])
                  Ttyp_poly
                  core_type (lib/warnings.ml[824,31206+14]..lib/warnings.ml[824,31206+20])
                    Ttyp_constr "string/15!"
                    []
              (lib/warnings.ml[825,31227+4]..lib/warnings.ml[826,31247+3])
                Immutable
                is_error/2005                core_type (lib/warnings.ml[825,31227+15]..lib/warnings.ml[825,31227+19])
                  Ttyp_poly
                  core_type (lib/warnings.ml[825,31227+15]..lib/warnings.ml[825,31227+19])
                    Ttyp_constr "bool/5!"
                    []
              (lib/warnings.ml[826,31247+4]..lib/warnings.ml[826,31247+35])
                Immutable
                sub_locs/2006                core_type (lib/warnings.ml[826,31247+15]..lib/warnings.ml[826,31247+34])
                  Ttyp_poly
                  core_type (lib/warnings.ml[826,31247+15]..lib/warnings.ml[826,31247+34])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/warnings.ml[826,31247+16]..lib/warnings.ml[826,31247+28])
                        Ttyp_tuple
                        [
                          core_type (lib/warnings.ml[826,31247+16]..lib/warnings.ml[826,31247+19])
                            Ttyp_constr "loc/288"
                            []
                          core_type (lib/warnings.ml[826,31247+22]..lib/warnings.ml[826,31247+28])
                            Ttyp_constr "string/15!"
                            []
                        ]
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/warnings.ml[829,31288+0]..lib/warnings.ml[835,31474+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[829,31288+4]..lib/warnings.ml[829,31288+11])
          Tpat_var "id_name/2007"
        expression (lib/warnings.ml[829,31288+12]..lib/warnings.ml[835,31474+21]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[829,31288+12]..lib/warnings.ml[829,31288+13])
                Tpat_var "w/2009"
          ]
          Tfunction_body
            expression (lib/warnings.ml[830,31304+2]..lib/warnings.ml[835,31474+21])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/warnings.ml[830,31304+6]..lib/warnings.ml[830,31304+7])
                    Tpat_var "n/2010"
                  expression (lib/warnings.ml[830,31304+10]..lib/warnings.ml[830,31304+18])
                    Texp_apply
                    expression (lib/warnings.ml[830,31304+10]..lib/warnings.ml[830,31304+16])
                      Texp_ident "number/425"
                    [
                      <arg>
                        Nolabel
                        expression (lib/warnings.ml[830,31304+17]..lib/warnings.ml[830,31304+18])
                          Texp_ident "w/2009"
                    ]
              ]
              expression (lib/warnings.ml[831,31326+2]..lib/warnings.ml[835,31474+21])
                Texp_match
                expression (lib/warnings.ml[831,31326+8]..lib/warnings.ml[831,31326+66])
                  Texp_apply
                  expression (lib/warnings.ml[831,31326+8]..lib/warnings.ml[831,31326+21])
                    Texp_ident "Stdlib!.List.find_opt"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[831,31326+22]..lib/warnings.ml[831,31326+53])
                        Texp_function
                        [
                          Nolabel
                          Param_pat
                            pattern (lib/warnings.ml[831,31326+27]..lib/warnings.ml[831,31326+38])
                              Tpat_record
                              [
                                "number"
                                  pattern (lib/warnings.ml[831,31326+28]..lib/warnings.ml[831,31326+34])
                                    Tpat_var "number/2011"
                              ]
                        ]
                        Tfunction_body
                          expression (lib/warnings.ml[831,31326+42]..lib/warnings.ml[831,31326+52])
                            Texp_apply
                            expression (lib/warnings.ml[831,31326+49]..lib/warnings.ml[831,31326+50])
                              Texp_ident "Stdlib!.="
                            [
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[831,31326+42]..lib/warnings.ml[831,31326+48])
                                  Texp_ident "number/2011"
                              <arg>
                                Nolabel
                                expression (lib/warnings.ml[831,31326+51]..lib/warnings.ml[831,31326+52])
                                  Texp_ident "n/2010"
                            ]
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[831,31326+54]..lib/warnings.ml[831,31326+66])
                        Texp_ident "descriptions/433"
                  ]
                [
                  <case>
                    pattern (lib/warnings.ml[832,31398+4]..lib/warnings.ml[832,31398+28])
                      Tpat_value
                      pattern (lib/warnings.ml[832,31398+4]..lib/warnings.ml[832,31398+28])
                        Tpat_construct "Some"
                        [
                          pattern (lib/warnings.ml[832,31398+9]..lib/warnings.ml[832,31398+28])
                            Tpat_record
                            [
                              "names"
                                pattern (lib/warnings.ml[832,31398+18]..lib/warnings.ml[832,31398+24])
                                  Tpat_construct "::"
                                  [
                                    pattern (lib/warnings.ml[832,31398+18]..lib/warnings.ml[832,31398+19])
                                      Tpat_var "s/2013"
                                    pattern (lib/warnings.ml[832,31398+23]..lib/warnings.ml[832,31398+24])
                                      Tpat_any
                                  ]
                                  None
                            ]
                        ]
                        None
                    expression (lib/warnings.ml[833,31430+6]..lib/warnings.ml[833,31430+34])
                      Texp_apply
                      expression (lib/warnings.ml[833,31430+6]..lib/warnings.ml[833,31430+20])
                        Texp_ident "Stdlib!.Printf.sprintf"
                      [
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30])
                            Texp_construct "CamlinternalFormatBasics.Format"
                            [
                              expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost
                                Texp_construct "CamlinternalFormatBasics.Int"
                                [
                                  expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Int_d"
                                    []
                                  expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                    []
                                  expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost
                                    Texp_construct "CamlinternalFormatBasics.No_precision"
                                    []
                                  expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost
                                        Texp_constant Const_string(" [",(lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost,None)
                                      expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost
                                        Texp_construct "CamlinternalFormatBasics.String"
                                        [
                                          expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost
                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                            []
                                          expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                            [
                                              expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost
                                                Texp_constant Const_char 5d
                                              expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost
                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                []
                                            ]
                                        ]
                                    ]
                                ]
                              expression (lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost
                                Texp_constant Const_string("%d [%s]",(lib/warnings.ml[833,31430+21]..lib/warnings.ml[833,31430+30]) ghost,None)
                            ]
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[833,31430+31]..lib/warnings.ml[833,31430+32])
                            Texp_ident "n/2010"
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[833,31430+33]..lib/warnings.ml[833,31430+34])
                            Texp_ident "s/2013"
                      ]
                  <case>
                    pattern (lib/warnings.ml[834,31465+4]..lib/warnings.ml[834,31465+5])
                      Tpat_value
                      pattern (lib/warnings.ml[834,31465+4]..lib/warnings.ml[834,31465+5])
                        Tpat_any
                    expression (lib/warnings.ml[835,31474+6]..lib/warnings.ml[835,31474+21])
                      Texp_apply
                      expression (lib/warnings.ml[835,31474+6]..lib/warnings.ml[835,31474+19])
                        Texp_ident "Stdlib!.string_of_int"
                      [
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[835,31474+20]..lib/warnings.ml[835,31474+21])
                            Texp_ident "n/2010"
                      ]
                ]
    ]
  structure_item (lib/warnings.ml[837,31497+0]..lib/warnings.ml[847,31734+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[837,31497+4]..lib/warnings.ml[837,31497+10])
          Tpat_var "report/2014"
        expression (lib/warnings.ml[837,31497+11]..lib/warnings.ml[847,31734+8]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[837,31497+11]..lib/warnings.ml[837,31497+12])
                Tpat_var "w/2016"
          ]
          Tfunction_body
            expression (lib/warnings.ml[838,31512+2]..lib/warnings.ml[847,31734+8])
              Texp_match
              expression (lib/warnings.ml[838,31512+8]..lib/warnings.ml[838,31512+19])
                Texp_apply
                expression (lib/warnings.ml[838,31512+8]..lib/warnings.ml[838,31512+17])
                  Texp_ident "is_active/1249"
                [
                  <arg>
                    Nolabel
                    expression (lib/warnings.ml[838,31512+18]..lib/warnings.ml[838,31512+19])
                      Texp_ident "w/2016"
                ]
              [
                <case>
                  pattern (lib/warnings.ml[839,31537+4]..lib/warnings.ml[839,31537+9])
                    Tpat_value
                    pattern (lib/warnings.ml[839,31537+4]..lib/warnings.ml[839,31537+9])
                      Tpat_construct "false"
                      []
                      None
                  expression (lib/warnings.ml[839,31537+13]..lib/warnings.ml[839,31537+22])
                    Texp_variant "Inactive"
                    None
                <case>
                  pattern (lib/warnings.ml[840,31560+4]..lib/warnings.ml[840,31560+8])
                    Tpat_value
                    pattern (lib/warnings.ml[840,31560+4]..lib/warnings.ml[840,31560+8])
                      Tpat_construct "true"
                      []
                      None
                  expression (lib/warnings.ml[841,31572+5]..lib/warnings.ml[847,31734+8])
                    Texp_sequence
                    expression (lib/warnings.ml[841,31572+5]..lib/warnings.ml[841,31572+36])
                      Texp_ifthenelse
                      expression (lib/warnings.ml[841,31572+8]..lib/warnings.ml[841,31572+18])
                        Texp_apply
                        expression (lib/warnings.ml[841,31572+8]..lib/warnings.ml[841,31572+16])
                          Texp_ident "is_error/1252"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[841,31572+17]..lib/warnings.ml[841,31572+18])
                              Texp_ident "w/2016"
                        ]
                      expression (lib/warnings.ml[841,31572+24]..lib/warnings.ml[841,31572+36])
                        Texp_apply
                        expression (lib/warnings.ml[841,31572+24]..lib/warnings.ml[841,31572+28])
                          Texp_ident "Stdlib!.incr"
                        [
                          <arg>
                            Nolabel
                            expression (lib/warnings.ml[841,31572+29]..lib/warnings.ml[841,31572+36])
                              Texp_ident "nerrors/2001"
                        ]
                      None
                    expression (lib/warnings.ml[842,31610+5]..lib/warnings.ml[847,31734+8])
                      Texp_variant "Active"
                      Some
                        expression (lib/warnings.ml[843,31623+7]..lib/warnings.ml[847,31734+8])
                          Texp_record
                            fields =
                              [
                                "id"
                                  expression (lib/warnings.ml[843,31623+14]..lib/warnings.ml[843,31623+23])
                                    Texp_apply
                                    expression (lib/warnings.ml[843,31623+14]..lib/warnings.ml[843,31623+21])
                                      Texp_ident "id_name/2007"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[843,31623+22]..lib/warnings.ml[843,31623+23])
                                          Texp_ident "w/2016"
                                    ]
                                "message"
                                  expression (lib/warnings.ml[844,31648+19]..lib/warnings.ml[844,31648+28])
                                    Texp_apply
                                    expression (lib/warnings.ml[844,31648+19]..lib/warnings.ml[844,31648+26])
                                      Texp_ident "message/1902"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[844,31648+27]..lib/warnings.ml[844,31648+28])
                                          Texp_ident "w/2016"
                                    ]
                                "is_error"
                                  expression (lib/warnings.ml[845,31678+20]..lib/warnings.ml[845,31678+30])
                                    Texp_apply
                                    expression (lib/warnings.ml[845,31678+20]..lib/warnings.ml[845,31678+28])
                                      Texp_ident "is_error/1252"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/warnings.ml[845,31678+29]..lib/warnings.ml[845,31678+30])
                                          Texp_ident "w/2016"
                                    ]
                                "sub_locs"
                                  expression (lib/warnings.ml[846,31710+20]..lib/warnings.ml[846,31710+22])
                                    Texp_construct "[]"
                                    []
                              ]
                            representation =
                              Record_regular
                            extended_expression =
                              None
              ]
    ]
  structure_item (lib/warnings.ml[849,31744+0]..lib/warnings.ml[877,32570+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[849,31744+4]..lib/warnings.ml[849,31744+16])
          Tpat_var "report_alert/2017"
        expression (lib/warnings.ml[849,31744+17]..lib/warnings.ml[877,32570+9]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[849,31744+18]..lib/warnings.ml[849,31744+23])
                extra
                  Tpat_extra_constraint
                  core_type (lib/warnings.ml[849,31744+26]..lib/warnings.ml[849,31744+31])
                    Ttyp_constr "alert/420"
                    []
                Tpat_alias "alert/2019"
                pattern (lib/warnings.ml[849,31744+18]..lib/warnings.ml[849,31744+23])
                  Tpat_any
          ]
          Tfunction_body
            expression (lib/warnings.ml[850,31779+2]..lib/warnings.ml[877,32570+9])
              Texp_match
              expression (lib/warnings.ml[850,31779+8]..lib/warnings.ml[850,31779+29])
                Texp_apply
                expression (lib/warnings.ml[850,31779+8]..lib/warnings.ml[850,31779+23])
                  Texp_ident "alert_is_active/1255"
                [
                  <arg>
                    Nolabel
                    expression (lib/warnings.ml[850,31779+24]..lib/warnings.ml[850,31779+29])
                      Texp_ident "alert/2019"
                ]
              [
                <case>
                  pattern (lib/warnings.ml[851,31814+4]..lib/warnings.ml[851,31814+9])
                    Tpat_value
                    pattern (lib/warnings.ml[851,31814+4]..lib/warnings.ml[851,31814+9])
                      Tpat_construct "false"
                      []
                      None
                  expression (lib/warnings.ml[851,31814+13]..lib/warnings.ml[851,31814+22])
                    Texp_variant "Inactive"
                    None
                <case>
                  pattern (lib/warnings.ml[852,31837+4]..lib/warnings.ml[852,31837+8])
                    Tpat_value
                    pattern (lib/warnings.ml[852,31837+4]..lib/warnings.ml[852,31837+8])
                      Tpat_construct "true"
                      []
                      None
                  expression (lib/warnings.ml[853,31849+6]..lib/warnings.ml[877,32570+9])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/warnings.ml[853,31849+10]..lib/warnings.ml[853,31849+18])
                          Tpat_var "is_error/2020"
                        expression (lib/warnings.ml[853,31849+21]..lib/warnings.ml[853,31849+41])
                          Texp_apply
                          expression (lib/warnings.ml[853,31849+21]..lib/warnings.ml[853,31849+35])
                            Texp_ident "alert_is_error/1330"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[853,31849+36]..lib/warnings.ml[853,31849+41])
                                Texp_ident "alert/2019"
                          ]
                    ]
                    expression (lib/warnings.ml[854,31894+6]..lib/warnings.ml[877,32570+9])
                      Texp_sequence
                      expression (lib/warnings.ml[854,31894+6]..lib/warnings.ml[854,31894+35])
                        Texp_ifthenelse
                        expression (lib/warnings.ml[854,31894+9]..lib/warnings.ml[854,31894+17])
                          Texp_ident "is_error/2020"
                        expression (lib/warnings.ml[854,31894+23]..lib/warnings.ml[854,31894+35])
                          Texp_apply
                          expression (lib/warnings.ml[854,31894+23]..lib/warnings.ml[854,31894+27])
                            Texp_ident "Stdlib!.incr"
                          [
                            <arg>
                              Nolabel
                              expression (lib/warnings.ml[854,31894+28]..lib/warnings.ml[854,31894+35])
                                Texp_ident "nerrors/2001"
                          ]
                        None
                      expression (lib/warnings.ml[855,31931+6]..lib/warnings.ml[877,32570+9])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/warnings.ml[855,31931+10]..lib/warnings.ml[855,31931+17])
                              Tpat_var "message/2021"
                            expression (lib/warnings.ml[855,31931+20]..lib/warnings.ml[855,31931+52])
                              Texp_apply
                              expression (lib/warnings.ml[855,31931+20]..lib/warnings.ml[855,31931+38])
                                Texp_ident "Ocaml_ocaml_types!.Misc.normalise_eol"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/warnings.ml[855,31931+39]..lib/warnings.ml[855,31931+52])
                                    Texp_field
                                    expression (lib/warnings.ml[855,31931+39]..lib/warnings.ml[855,31931+44])
                                      Texp_ident "alert/2019"
                                    "message"
                              ]
                        ]
                        expression (lib/warnings.ml[862,32231+6]..lib/warnings.ml[877,32570+9])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/warnings.ml[862,32231+10]..lib/warnings.ml[862,32231+18])
                                Tpat_var "sub_locs/2022"
                              expression (lib/warnings.ml[863,32252+8]..lib/warnings.ml[869,32438+12])
                                Texp_ifthenelse
                                expression (lib/warnings.ml[863,32252+11]..lib/warnings.ml[863,32252+61])
                                  Texp_apply
                                  expression (lib/warnings.ml[863,32252+35]..lib/warnings.ml[863,32252+37])
                                    Texp_ident "Stdlib!.&&"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[863,32252+11]..lib/warnings.ml[863,32252+34])
                                        Texp_apply
                                        expression (lib/warnings.ml[863,32252+11]..lib/warnings.ml[863,32252+14])
                                          Texp_ident "Stdlib!.not"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[863,32252+15]..lib/warnings.ml[863,32252+34])
                                              Texp_field
                                              expression (lib/warnings.ml[863,32252+15]..lib/warnings.ml[863,32252+24])
                                                Texp_field
                                                expression (lib/warnings.ml[863,32252+15]..lib/warnings.ml[863,32252+20])
                                                  Texp_ident "alert/2019"
                                                "def"
                                              "loc_ghost"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/warnings.ml[863,32252+38]..lib/warnings.ml[863,32252+61])
                                        Texp_apply
                                        expression (lib/warnings.ml[863,32252+38]..lib/warnings.ml[863,32252+41])
                                          Texp_ident "Stdlib!.not"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/warnings.ml[863,32252+42]..lib/warnings.ml[863,32252+61])
                                              Texp_field
                                              expression (lib/warnings.ml[863,32252+42]..lib/warnings.ml[863,32252+51])
                                                Texp_field
                                                expression (lib/warnings.ml[863,32252+42]..lib/warnings.ml[863,32252+47])
                                                  Texp_ident "alert/2019"
                                                "use"
                                              "loc_ghost"
                                        ]
                                  ]
                                expression (lib/warnings.ml[864,32319+10]..lib/warnings.ml[867,32413+11])
                                  Texp_construct "::"
                                  [
                                    expression (lib/warnings.ml[865,32331+12]..lib/warnings.ml[865,32331+35])
                                      Texp_tuple
                                      [
                                        expression (lib/warnings.ml[865,32331+12]..lib/warnings.ml[865,32331+21])
                                          Texp_field
                                          expression (lib/warnings.ml[865,32331+12]..lib/warnings.ml[865,32331+17])
                                            Texp_ident "alert/2019"
                                          "def"
                                        expression (lib/warnings.ml[865,32331+23]..lib/warnings.ml[865,32331+35])
                                          Texp_constant Const_string("Definition",(lib/warnings.ml[865,32331+24]..lib/warnings.ml[865,32331+34]),None)
                                      ]
                                    expression (lib/warnings.ml[866,32368+12]..lib/warnings.ml[867,32413+11]) ghost
                                      Texp_construct "::"
                                      [
                                        expression (lib/warnings.ml[866,32368+12]..lib/warnings.ml[866,32368+43])
                                          Texp_tuple
                                          [
                                            expression (lib/warnings.ml[866,32368+12]..lib/warnings.ml[866,32368+21])
                                              Texp_field
                                              expression (lib/warnings.ml[866,32368+12]..lib/warnings.ml[866,32368+17])
                                                Texp_ident "alert/2019"
                                              "use"
                                            expression (lib/warnings.ml[866,32368+23]..lib/warnings.ml[866,32368+43])
                                              Texp_constant Const_string("Expected signature",(lib/warnings.ml[866,32368+24]..lib/warnings.ml[866,32368+42]),None)
                                          ]
                                        expression (lib/warnings.ml[867,32413+10]..lib/warnings.ml[867,32413+11]) ghost
                                          Texp_construct "[]"
                                          []
                                      ]
                                  ]
                                Some
                                  expression (lib/warnings.ml[869,32438+10]..lib/warnings.ml[869,32438+12])
                                    Texp_construct "[]"
                                    []
                          ]
                          expression (lib/warnings.ml[871,32460+6]..lib/warnings.ml[877,32570+9])
                            Texp_variant "Active"
                            Some
                              expression (lib/warnings.ml[872,32474+8]..lib/warnings.ml[877,32570+9])
                                Texp_record
                                  fields =
                                    [
                                      "id"
                                        expression (lib/warnings.ml[873,32484+15]..lib/warnings.ml[873,32484+25])
                                          Texp_field
                                          expression (lib/warnings.ml[873,32484+15]..lib/warnings.ml[873,32484+20])
                                            Texp_ident "alert/2019"
                                          "kind"
                                      "message"
                                        expression (lib/warnings.ml[874,32511+10]..lib/warnings.ml[874,32511+17])
                                          Texp_ident "message/2021"
                                      "is_error"
                                        expression (lib/warnings.ml[875,32530+10]..lib/warnings.ml[875,32530+18])
                                          Texp_ident "is_error/2020"
                                      "sub_locs"
                                        expression (lib/warnings.ml[876,32550+10]..lib/warnings.ml[876,32550+18])
                                          Texp_ident "sub_locs/2022"
                                    ]
                                  representation =
                                    Record_regular
                                  extended_expression =
                                    None
              ]
    ]
  structure_item (lib/warnings.ml[879,32581+0]..lib/warnings.ml[879,32581+16])
    Tstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (lib/warnings.ml[879,32581+0]..lib/warnings.ml[879,32581+16])
          pext_name = "Errors/2023"
          pext_kind =
            Text_decl
              []
              None
  structure_item (lib/warnings.ml[881,32599+0]..lib/warnings.ml[882,32620+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[881,32599+4]..lib/warnings.ml[881,32599+15])
          Tpat_var "reset_fatal/2024"
        expression (lib/warnings.ml[881,32599+16]..lib/warnings.ml[882,32620+14]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[881,32599+16]..lib/warnings.ml[881,32599+18])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/warnings.ml[882,32620+2]..lib/warnings.ml[882,32620+14])
              Texp_apply
              expression (lib/warnings.ml[882,32620+10]..lib/warnings.ml[882,32620+12])
                Texp_ident "Stdlib!.:="
              [
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[882,32620+2]..lib/warnings.ml[882,32620+9])
                    Texp_ident "nerrors/2001"
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[882,32620+13]..lib/warnings.ml[882,32620+14])
                    Texp_constant Const_int 0
              ]
    ]
  structure_item (lib/warnings.ml[884,32636+0]..lib/warnings.ml[888,32722+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[884,32636+4]..lib/warnings.ml[884,32636+15])
          Tpat_var "check_fatal/2027"
        expression (lib/warnings.ml[884,32636+16]..lib/warnings.ml[888,32722+5]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[884,32636+16]..lib/warnings.ml[884,32636+18])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/warnings.ml[885,32657+2]..lib/warnings.ml[888,32722+5])
              Texp_ifthenelse
              expression (lib/warnings.ml[885,32657+5]..lib/warnings.ml[885,32657+17])
                Texp_apply
                expression (lib/warnings.ml[885,32657+14]..lib/warnings.ml[885,32657+15])
                  Texp_ident "Stdlib!.>"
                [
                  <arg>
                    Nolabel
                    expression (lib/warnings.ml[885,32657+5]..lib/warnings.ml[885,32657+13])
                      Texp_apply
                      expression (lib/warnings.ml[885,32657+5]..lib/warnings.ml[885,32657+6])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (lib/warnings.ml[885,32657+6]..lib/warnings.ml[885,32657+13])
                            Texp_ident "nerrors/2001"
                      ]
                  <arg>
                    Nolabel
                    expression (lib/warnings.ml[885,32657+16]..lib/warnings.ml[885,32657+17])
                      Texp_constant Const_int 0
                ]
              expression (lib/warnings.ml[885,32657+23]..lib/warnings.ml[888,32722+5])
                Texp_sequence
                expression (lib/warnings.ml[886,32686+4]..lib/warnings.ml[886,32686+16])
                  Texp_apply
                  expression (lib/warnings.ml[886,32686+12]..lib/warnings.ml[886,32686+14])
                    Texp_ident "Stdlib!.:="
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[886,32686+4]..lib/warnings.ml[886,32686+11])
                        Texp_ident "nerrors/2001"
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[886,32686+15]..lib/warnings.ml[886,32686+16])
                        Texp_constant Const_int 0
                  ]
                expression (lib/warnings.ml[887,32704+4]..lib/warnings.ml[887,32704+16])
                  Texp_apply
                  expression (lib/warnings.ml[887,32704+4]..lib/warnings.ml[887,32704+9])
                    Texp_ident "Stdlib!.raise"
                  [
                    <arg>
                      Nolabel
                      expression (lib/warnings.ml[887,32704+10]..lib/warnings.ml[887,32704+16])
                        Texp_construct "Errors"
                        []
                  ]
              None
    ]
  structure_item (lib/warnings.ml[896,32937+0]..lib/warnings.ml[897,32960+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/warnings.ml[896,32937+4]..lib/warnings.ml[896,32937+17])
          Tpat_var "help_warnings/2030"
        expression (lib/warnings.ml[896,32937+18]..lib/warnings.ml[897,32960+8]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/warnings.ml[896,32937+18]..lib/warnings.ml[896,32937+20])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/warnings.ml[897,32960+2]..lib/warnings.ml[897,32960+8])
              Texp_apply
              expression (lib/warnings.ml[897,32960+2]..lib/warnings.ml[897,32960+6])
                Texp_ident "Stdlib!.exit"
              [
                <arg>
                  Nolabel
                  expression (lib/warnings.ml[897,32960+7]..lib/warnings.ml[897,32960+8])
                    Texp_constant Const_int 0
              ]
    ]
]

{<Ocaml_ocaml_types__Warnings>
 "Errors"[extension constructor] -> <Ocaml_ocaml_types__Warnings.368>;
 "alert"[type] -> <Ocaml_ocaml_types__Warnings.84>;
 "alert_is_active"[value] -> <Ocaml_ocaml_types__Warnings.124>;
 "alert_is_error"[value] -> <Ocaml_ocaml_types__Warnings.128>;
 "backup"[value] -> <Ocaml_ocaml_types__Warnings.117>;
 "check_fatal"[value] -> <Ocaml_ocaml_types__Warnings.370>;
 "constructor_usage_warning"[type] -> <Ocaml_ocaml_types__Warnings.8>;
 "current"[value] -> <Ocaml_ocaml_types__Warnings.113>;
 "default_disabled_alerts"[value] -> <Ocaml_ocaml_types__Warnings.266>;
 "defaults_w"[value] -> <Ocaml_ocaml_types__Warnings.264>;
 "defaults_warn_error"[value] -> <Ocaml_ocaml_types__Warnings.265>;
 "description"[type] -> <Ocaml_ocaml_types__Warnings.91>;
 "descriptions"[value] -> <Ocaml_ocaml_types__Warnings.95>;
 "disabled"[value] -> <Ocaml_ocaml_types__Warnings.114>;
 "field_usage_warning"[type] -> <Ocaml_ocaml_types__Warnings.4>;
 "ghost_loc_in_file"[value] -> <Ocaml_ocaml_types__Warnings.171>;
 "help_warnings"[value] -> <Ocaml_ocaml_types__Warnings.371>;
 "id_name"[value] -> <Ocaml_ocaml_types__Warnings.356>;
 "is_active"[value] -> <Ocaml_ocaml_types__Warnings.120>;
 "is_error"[value] -> <Ocaml_ocaml_types__Warnings.122>;
 "last_warning_number"[value] -> <Ocaml_ocaml_types__Warnings.90>;
 "letter"[value] -> <Ocaml_ocaml_types__Warnings.102>;
 "letter_alert"[value] -> <Ocaml_ocaml_types__Warnings.174>;
 "loc"[type] -> <Ocaml_ocaml_types__Warnings.0>;
 "message"[value] -> <Ocaml_ocaml_types__Warnings.267>;
 "mk_lazy"[value] -> <Ocaml_ocaml_types__Warnings.138>;
 "modifier"[type] -> <Ocaml_ocaml_types__Warnings.164>;
 "name_to_number"[value] -> <Ocaml_ocaml_types__Warnings.96>;
 "nerrors"[value] -> <Ocaml_ocaml_types__Warnings.350>;
 "number"[value] -> <Ocaml_ocaml_types__Warnings.89>;
 "parse_alert_option"[value] -> <Ocaml_ocaml_types__Warnings.150>;
 "parse_opt"[value] -> <Ocaml_ocaml_types__Warnings.231>;
 "parse_options"[value] -> <Ocaml_ocaml_types__Warnings.258>;
 "parse_warnings"[value] -> <Ocaml_ocaml_types__Warnings.209>;
 "report"[value] -> <Ocaml_ocaml_types__Warnings.361>;
 "report_alert"[value] -> <Ocaml_ocaml_types__Warnings.363>;
 "reporting_information"[type] -> <Ocaml_ocaml_types__Warnings.351>;
 "reset_fatal"[value] -> <Ocaml_ocaml_types__Warnings.369>;
 "restore"[value] -> <Ocaml_ocaml_types__Warnings.118>;
 "set_alert"[value] -> <Ocaml_ocaml_types__Warnings.141>;
 "state"[type] -> <Ocaml_ocaml_types__Warnings.105>;
 "t"[type] -> <Ocaml_ocaml_types__Warnings.12>;
 "token"[type] -> <Ocaml_ocaml_types__Warnings.168>;
 "with_state"[value] -> <Ocaml_ocaml_types__Warnings.132>;
 "without_warnings"[value] -> <Ocaml_ocaml_types__Warnings.115>;
 }

(setglobal Ocaml_ocaml_types__Warnings!
  (let
    (number/425 =
       (function param/427 : int
         (funct-body Ocaml_ocaml_types__Warnings.number lib/warnings.ml(121):5799-8091
           (switch* param/427
            case int 0:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(122):5829-5830
               1)
            case int 1:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(123):5854-5855
               2)
            case int 2:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(125):5916-5917
               5)
            case int 3:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(130):6062-6064
               10)
            case int 4:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(131):6087-6089
               11)
            case int 5:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(132):6114-6116
               12)
            case int 6:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(134):6181-6183
               14)
            case int 7:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(136):6256-6258
               16)
            case int 8:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(140):6386-6388
               20)
            case int 9:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(141):6419-6421
               21)
            case int 10:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(143):6474-6476
               23)
            case int 11:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(145):6532-6533
               8)
            case int 12:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(148):6646-6648
               28)
            case int 13:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(149):6670-6672
               29)
            case int 14:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(158):6944-6946
               39)
            case int 15:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(171):7370-7372
               52)
            case int 16:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(175):7494-7496
               56)
            case int 17:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(178):7611-7613
               59)
            case int 18:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(181):7706-7708
               62)
            case int 19:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(183):7792-7794
               64)
            case int 20:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(187):7935-7937
               68)
            case int 21:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(189):7982-7984
               70)
            case int 22:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(190):8013-8015
               71)
            case int 23:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(191):8043-8045
               72)
            case int 24:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(192):8089-8091
               73)
            case tag 0:
             (let (*match*/3549 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(124):5879-5880
                 4))
            case tag 1:
             (let (*match*/3550 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(126):5942-5943
                 6))
            case tag 2:
             (let (*match*/3551 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(127):5969-5970
                 7))
            case tag 3:
             (let (*match*/3552 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(128):5994-5995
                 8))
            case tag 4:
             (let (*match*/3553 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(129):6034-6035
                 9))
            case tag 5:
             (let (*match*/3554 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(133):6153-6155
                 13))
            case tag 6:
             (let (*match*/3555 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(135):6217-6219
                 15))
            case tag 7:
             (let (*match*/3556 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(137):6294-6296
                 17))
            case tag 8:
             (let (*match*/3557 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(138):6320-6322
                 18))
            case tag 9:
             (let (*match*/3558 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(139):6353-6355
                 19))
            case tag 10:
             (let (*match*/3559 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(142):6444-6446
                 22))
            case tag 11:
             (let (*match*/3560 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(144):6502-6504
                 24))
            case tag 12:
             (let (*match*/3561 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(146):6574-6576
                 26))
            case tag 13:
             (let (*match*/3562 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(147):6604-6606
                 27))
            case tag 14:
             (let
               (*match*/3566 =a (field_imm 3 param/427)
                *match*/3565 =a (field_imm 2 param/427)
                *match*/3564 =a (field_imm 1 param/427)
                *match*/3563 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(150):6704-6706
                 30))
            case tag 15:
             (let (*match*/3567 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(151):6741-6743
                 32))
            case tag 16:
             (let (*match*/3568 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(152):6765-6767
                 33))
            case tag 17:
             (let (*match*/3569 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(153):6801-6803
                 34))
            case tag 18:
             (let (*match*/3570 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(154):6830-6832
                 35))
            case tag 19:
             (let (*match*/3571 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(155):6858-6860
                 36))
            case tag 20:
             (let
               (*match*/3573 =a (field_imm 1 param/427)
                *match*/3572 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(156):6889-6891
                 37))
            case tag 21:
             (let
               (*match*/3576 =a (field_imm 2 param/427)
                *match*/3575 =a (field_imm 1 param/427)
                *match*/3574 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(157):6918-6920
                 38))
            case tag 22:
             (let
               (*match*/3579 =a (field_imm 2 param/427)
                *match*/3578 =a (field_imm 1 param/427)
                *match*/3577 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(159):6974-6976
                 40))
            case tag 23:
             (let
               (*match*/3583 =a (field_imm 3 param/427)
                *match*/3582 =a (field_imm 2 param/427)
                *match*/3581 =a (field_imm 1 param/427)
                *match*/3580 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(160):7001-7003
                 41))
            case tag 24:
             (let (*match*/3584 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(161):7032-7034
                 42))
            case tag 25:
             (let (*match*/3585 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(162):7062-7064
                 43))
            case tag 26:
             (let
               (*match*/3587 =a (field_imm 1 param/427)
                *match*/3586 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(163):7097-7099
                 44))
            case tag 27:
             (let
               (*match*/3589 =a (field_imm 1 param/427)
                *match*/3588 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(164):7139-7141
                 45))
            case tag 28:
             (let
               (*match*/3591 =a (field_imm 1 param/427)
                *match*/3590 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(165):7168-7170
                 46))
            case tag 29:
             (let
               (*match*/3593 =a (field_imm 1 param/427)
                *match*/3592 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(166):7198-7200
                 47))
            case tag 30:
             (let (*match*/3594 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(167):7240-7242
                 48))
            case tag 31:
             (let
               (*match*/3596 =a (field_imm 1 param/427)
                *match*/3595 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(168):7264-7266
                 49))
            case tag 32:
             (let (*match*/3597 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(169):7297-7299
                 50))
            case tag 33:
             (let (*match*/3598 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(170):7336-7338
                 51))
            case tag 34:
             (let (*match*/3599 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(172):7402-7404
                 53))
            case tag 35:
             (let (*match*/3600 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(173):7435-7437
                 54))
            case tag 36:
             (let (*match*/3601 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(174):7467-7469
                 55))
            case tag 37:
             (let (*match*/3602 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(176):7537-7539
                 57))
            case tag 38:
             (let (*match*/3603 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(177):7561-7563
                 58))
            case tag 39:
             (let (*match*/3604 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(179):7637-7639
                 60))
            case tag 40:
             (let (*match*/3605 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(180):7677-7679
                 61))
            case tag 41:
             (let (*match*/3606 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(182):7746-7748
                 63))
            case tag 42:
             (let (*match*/3607 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(184):7820-7822
                 65))
            case tag 43:
             (let (*match*/3608 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(185):7849-7851
                 66))
            case tag 44:
             (let (*match*/3609 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(186):7886-7888
                 67))
            case tag 45:
             (let
               (*match*/3611 =a (field_imm 1 param/427)
                *match*/3610 =a (field_imm 0 param/427))
               (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(188):7960-7962
                 69)))))
     last_warning_number/428 =[int] 73
     descriptions/433 = 0
     name_to_number/434 =
       (let
         (h/435 =
            (after Ocaml_ocaml_types__Warnings.name_to_number lib/warnings.ml(219):8916-8950
              (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0
                last_warning_number/428)))
         (before Ocaml_ocaml_types__Warnings.name_to_number lib/warnings.ml(220):8956-9106
           (seq
             (after Ocaml_ocaml_types__Warnings.name_to_number lib/warnings.ml(220):8956-9073
               (apply (field_imm 17 (global Stdlib__List!))
                 (function param/585 : int
                   (funct-body Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(220):8966-9060
                     (let
                       (*match*/3612 =a (field_imm 2 param/585)
                        names/583 =a (field_imm 1 param/585)
                        number/582 =a (field_int 0 param/585))
                       (before Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(221):8999-9054
                         (after Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(221):8999-9054
                           (apply (field_imm 17 (global Stdlib__List!))
                             (function name/584 : int
                               (funct-body Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(221):9009-9048
                                 (before Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(221):9022-9047
                                   (after Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(221):9022-9047
                                     (apply
                                       (field_imm 4
                                         (global Stdlib__Hashtbl!))
                                       h/435 name/584 number/582)))))
                             names/583))))))
                 descriptions/433))
             (before Ocaml_ocaml_types__Warnings.name_to_number lib/warnings.ml(223):9077-9106
               (function s/586
                 (funct-body Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(223):9077-9106
                   (before Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(223):9086-9106
                     (after Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(223):9086-9106
                       (apply (field_imm 6 (global Stdlib__Hashtbl!)) h/435
                         s/586)))))))))
     letter/587 =
       (function param/591[int]
         (funct-body Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(227):9186-9773
           (catch
             (let (switcher/3613 =a (-97+ param/591))
               (if (isout 25 switcher/3613) (exit 1)
                 (switch* switcher/3613
                  case int 0:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(229):9211-9300
                     (letrec
                       (loop/589
                          (function i/590[int]
                            (funct-body Ocaml_ocaml_types__Warnings.letter.loop lib/warnings.ml(229)<ghost>:9224-9267
                              (before Ocaml_ocaml_types__Warnings.letter.loop lib/warnings.ml(229):9228-9267
                                (if (== i/590 0)
                                  (before Ocaml_ocaml_types__Warnings.letter.loop lib/warnings.ml(229):9242-9244
                                    0)
                                  (before Ocaml_ocaml_types__Warnings.letter.loop lib/warnings.ml(229):9250-9267
                                    (makeblock 0 (int,*) i/590
                                      (after Ocaml_ocaml_types__Warnings.letter.loop lib/warnings.ml(229):9255-9267
                                        (apply loop/589 (- i/590 1))))))))))
                       (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(230):9276-9300
                         (after Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(230):9276-9300
                           (apply loop/589 last_warning_number/428)))))
                  case int 1:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(231):9312-9314
                     0)
                  case int 2:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(232):9326-9332
                     [0: 1 [0: 2 0]])
                  case int 3:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(233):9344-9347
                     [0: 3 0])
                  case int 4:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(234):9359-9362
                     [0: 4 0])
                  case int 5:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(235):9374-9377
                     [0: 5 0])
                  case int 6:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(236):9389-9391
                     0)
                  case int 7:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(237):9403-9405
                     0)
                  case int 8:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(238):9417-9419
                     0)
                  case int 9:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(239):9431-9433
                     0)
                  case int 10:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(240):9445-9477
                     [0:
                      32
                      [0:
                       33 [0: 34 [0: 35 [0: 36 [0: 37 [0: 38 [0: 39 0]]]]]]]])
                  case int 11:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(241):9489-9492
                     [0: 6 0])
                  case int 12:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(242):9504-9507
                     [0: 7 0])
                  case int 13:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(243):9519-9521
                     0)
                  case int 14:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(244):9533-9535
                     0)
                  case int 15:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(245):9547-9550
                     [0: 8 0])
                  case int 16:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(246):9562-9564
                     0)
                  case int 17:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(247):9576-9579
                     [0: 9 0])
                  case int 18:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(248):9591-9595
                     [0: 10 0])
                  case int 19:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(249):9607-9609
                     0)
                  case int 20:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(250):9621-9629
                     [0: 11 [0: 12 0]])
                  case int 21:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(251):9641-9645
                     [0: 13 0])
                  case int 22:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(252):9657-9659
                     0)
                  case int 23:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(253):9671-9719
                     [0:
                      14
                      [0:
                       15
                       [0:
                        16
                        [0:
                         17
                         [0:
                          18
                          [0:
                           19
                           [0: 20 [0: 21 [0: 22 [0: 23 [0: 24 [0: 30 0]]]]]]]]]]]])
                  case int 24:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(254):9731-9735
                     [0: 26 0])
                  case int 25:
                   (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(255):9747-9751
                     [0: 27 0]))))
            with (1)
             (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(256):9761-9773
               (raise
                 (after Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(256):9761-9773
                   (makeblock 0 (global Assert_failure/28!)
                     [0: "lib/warnings.ml" 256 9])))))))
     current/1188 =
       (makemutable 0
         (makeblock 0
           (after Ocaml_ocaml_types__Warnings.current lib/warnings.ml(269):10039-10080
             (caml_make_vect (+ last_warning_number/428 1) 1))
           (after Ocaml_ocaml_types__Warnings.current lib/warnings.ml(270):10096-10138
             (caml_make_vect (+ last_warning_number/428 1) 0))
           (makeblock 0 (*,int)
             (field_imm 16
               (field_imm 63
                 (field_imm 3
                   (field_imm 13 (global Ocaml_ocaml_types__Misc!)))))
             0)
           (makeblock 0 (*,int)
             (field_imm 16
               (field_imm 63
                 (field_imm 3
                   (field_imm 13 (global Ocaml_ocaml_types__Misc!)))))
             1)))
     disabled/1239 = (makemutable 0 (int) 0)
     without_warnings/1240 =
       (function f/1242
         (funct-body Ocaml_ocaml_types__Warnings.without_warnings lib/warnings.ml(277)<ghost>:10322-10372
           (before Ocaml_ocaml_types__Warnings.without_warnings lib/warnings.ml(278):10328-10372
             (after Ocaml_ocaml_types__Warnings.without_warnings lib/warnings.ml(278):10328-10372
               (apply (field_imm 5 (global Ocaml_ocaml_types__Misc!))
                 (makeblock 0 (makeblock 0 (*,int) disabled/1239 1) 0)
                 f/1242)))))
     backup/1243 =
       (function param/1245[int]
         (funct-body Ocaml_ocaml_types__Warnings.backup lib/warnings.ml(280)<ghost>:10385-10398
           (before Ocaml_ocaml_types__Warnings.backup lib/warnings.ml(280):10390-10398
             (field_mut 0 current/1188))))
     restore/1246 =
       (function x/1248 : int
         (funct-body Ocaml_ocaml_types__Warnings.restore lib/warnings.ml(282)<ghost>:10412-10428
           (before Ocaml_ocaml_types__Warnings.restore lib/warnings.ml(282):10416-10428
             (setfield_ptr 0 current/1188 x/1248))))
     is_active/1249 =
       (function x/1251 : int
         (funct-body Ocaml_ocaml_types__Warnings.is_active lib/warnings.ml(284)<ghost>:10444-10495
           (before Ocaml_ocaml_types__Warnings.is_active lib/warnings.ml(285):10450-10495
             (&& (not (field_int 0 disabled/1239))
               (after Ocaml_ocaml_types__Warnings.is_active lib/warnings.ml(285):10467-10495
                 (array.get[int] (field_imm 0 (field_mut 0 current/1188))
                   (after Ocaml_ocaml_types__Warnings.is_active lib/warnings.ml(285):10486-10494
                     (apply number/425 x/1251))))))))
     is_error/1252 =
       (function x/1254 : int
         (funct-body Ocaml_ocaml_types__Warnings.is_error lib/warnings.ml(287)<ghost>:10510-10560
           (before Ocaml_ocaml_types__Warnings.is_error lib/warnings.ml(288):10516-10560
             (&& (not (field_int 0 disabled/1239))
               (after Ocaml_ocaml_types__Warnings.is_error lib/warnings.ml(288):10533-10560
                 (array.get[int] (field_imm 1 (field_mut 0 current/1188))
                   (after Ocaml_ocaml_types__Warnings.is_error lib/warnings.ml(288):10551-10559
                     (apply number/425 x/1254))))))))
     alert_is_active/1255 =
       (function param/1329 : int
         (funct-body Ocaml_ocaml_types__Warnings.alert_is_active lib/warnings.ml(290)<ghost>:10582-10696
           (let
             (*match*/3621 =a (field_imm 3 param/1329)
              *match*/3620 =a (field_imm 2 param/1329)
              *match*/3619 =a (field_imm 1 param/1329)
              kind/1257 =a (field_imm 0 param/1329))
             (before Ocaml_ocaml_types__Warnings.alert_is_active lib/warnings.ml(291):10596-10696
               (&& (not (field_int 0 disabled/1239))
                 (let
                   (*match*/3618 = (field_imm 2 (field_mut 0 current/1188))
                    pos/1259 =a (field_imm 1 *match*/3618)
                    set/1258 =a (field_imm 0 *match*/3618))
                   (before Ocaml_ocaml_types__Warnings.alert_is_active lib/warnings.ml(293):10655-10696
                     (==
                       (after Ocaml_ocaml_types__Warnings.alert_is_active lib/warnings.ml(293):10655-10690
                         (apply
                           (field_imm 18
                             (field_imm 63
                               (field_imm 3
                                 (field_imm 13
                                   (global Ocaml_ocaml_types__Misc!)))))
                           kind/1257 set/1258))
                       pos/1259))))))))
     alert_is_error/1330 =
       (function param/1335 : int
         (funct-body Ocaml_ocaml_types__Warnings.alert_is_error lib/warnings.ml(295)<ghost>:10717-10837
           (let
             (*match*/3628 =a (field_imm 3 param/1335)
              *match*/3627 =a (field_imm 2 param/1335)
              *match*/3626 =a (field_imm 1 param/1335)
              kind/1332 =a (field_imm 0 param/1335))
             (before Ocaml_ocaml_types__Warnings.alert_is_error lib/warnings.ml(296):10731-10837
               (&& (not (field_int 0 disabled/1239))
                 (let
                   (*match*/3625 = (field_imm 3 (field_mut 0 current/1188))
                    pos/1334 =a (field_imm 1 *match*/3625)
                    set/1333 =a (field_imm 0 *match*/3625))
                   (before Ocaml_ocaml_types__Warnings.alert_is_error lib/warnings.ml(298):10796-10837
                     (==
                       (after Ocaml_ocaml_types__Warnings.alert_is_error lib/warnings.ml(298):10796-10831
                         (apply
                           (field_imm 18
                             (field_imm 63
                               (field_imm 3
                                 (field_imm 13
                                   (global Ocaml_ocaml_types__Misc!)))))
                           kind/1332 set/1333))
                       pos/1334))))))))
     with_state/1336 =
       (function state/1338 f/1339
         (funct-body Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(300)<ghost>:10854-11002
           (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(301):10866-11002
             (let
               (prev/1340 =
                  (after Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(301):10877-10886
                    (apply backup/1243 0)))
               (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(302):10892-11002
                 (seq
                   (after Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(302):10892-10905
                     (apply restore/1246 state/1338))
                   (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(303):10909-11002
                     (try
                       (let
                         (r/1341 =
                            (after Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(304):10925-10929
                              (apply f/1339 0)))
                         (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(305):10937-10956
                           (seq
                             (after Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(305):10937-10949
                               (apply restore/1246 prev/1340))
                             (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(306):10955-10956
                               r/1341))))
                      with exn/1342
                       (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(308):10975-11002
                         (seq
                           (after Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(308):10975-10987
                             (apply restore/1246 prev/1340))
                           (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(309):10993-11002
                             (reraise
                               (after Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(309):10993-11002
                                 exn/1342)))))))))))))
     mk_lazy/1343 =
       (function f/1345
         (funct-body Ocaml_ocaml_types__Warnings.mk_lazy lib/warnings.ml(311)<ghost>:11016-11074
           (before Ocaml_ocaml_types__Warnings.mk_lazy lib/warnings.ml(312):11022-11074
             (let
               (state/1346 =
                  (after Ocaml_ocaml_types__Warnings.mk_lazy lib/warnings.ml(312):11034-11043
                    (apply backup/1243 0)))
               (before Ocaml_ocaml_types__Warnings.mk_lazy lib/warnings.ml(313):11049-11074
                 (makemutable 246
                   (function param/3629
                     (after Ocaml_ocaml_types__Warnings.mk_lazy lib/warnings.ml(313):11054-11074
                       (apply with_state/1336 state/1346 f/1345)))))))))
     set_alert/1347 =
       (function error/1349[int] enable/1350[int] s/1351 : int
         (funct-body Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(315)<ghost>:11090-11606
           (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(316):11111-11606
             (let
               (upd/1352 =
                  (catch
                    (stringswitch s/1351
                     case "all":
                      (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(319):11161-11203
                        (makeblock 0 (*,int)
                          (field_imm 16
                            (field_imm 63
                              (field_imm 3
                                (field_imm 13
                                  (global Ocaml_ocaml_types__Misc!)))))
                          (not enable/1350)))
                     default: (exit 13))
                   with (13)
                    (let (s/1353 =a s/1351)
                      (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(321):11223-11484
                        (let
                          (*match*/3638 =
                             (if error/1349
                               (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(322):11264-11287
                                 (field_imm 3 (field_mut 0 current/1188)))
                               (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(322):11293-11310
                                 (field_imm 2 (field_mut 0 current/1188))))
                           pos/1355 =a (field_imm 1 *match*/3638)
                           set/1354 =a (field_imm 0 *match*/3638))
                          (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(324):11330-11484
                            (let
                              (f/1356 =
                                 (if (== enable/1350 pos/1355)
                                   (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(326):11379-11405
                                     (field_imm 3
                                       (field_imm 63
                                         (field_imm 3
                                           (field_imm 13
                                             (global Ocaml_ocaml_types__Misc!))))))
                                   (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(327):11421-11450
                                     (field_imm 19
                                       (field_imm 63
                                         (field_imm 3
                                           (field_imm 13
                                             (global Ocaml_ocaml_types__Misc!))))))))
                              (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(329):11470-11484
                                (makeblock 0 (*,int)
                                  (after Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(329):11471-11478
                                    (apply f/1356 s/1353 set/1354))
                                  pos/1355)))))))))
               (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(331):11492-11606
                 (if error/1349
                   (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(332):11510-11555
                     (setfield_ptr 0 current/1188
                       (let (init/3631 = (field_mut 0 current/1188))
                         (makeblock 0 (field_imm 0 init/3631)
                           (field_imm 1 init/3631) (field_imm 2 init/3631)
                           upd/1352))))
                   (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(334):11567-11606
                     (setfield_ptr 0 current/1188
                       (let (init/3630 = (field_mut 0 current/1188))
                         (makeblock 0 (field_imm 0 init/3630)
                           (field_imm 1 init/3630) upd/1352
                           (field_imm 3 init/3630)))))))))))
     parse_alert_option/1357 =
       (function s/1359 : int
         (funct-body Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(336)<ghost>:11631-12698
           (before Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(337):11637-12698
             (let (n/1360 =[int] (string.length s/1359))
               (before Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(338):11666-12698
                 (let
                   (id_char/1361 =
                      (function param/1363[int] : int
                        (funct-body Ocaml_ocaml_types__Warnings.parse_alert_option.id_char lib/warnings.ml(338):11680-11763
                          (catch
                            (catch
                              (if (>= param/1363 65)
                                (let (switcher/3642 =a (-91+ param/1363))
                                  (if (isout 5 switcher/3642)
                                    (if (>= switcher/3642 32) (exit 18)
                                      (exit 17))
                                    (if (!= switcher/3642 4) (exit 18)
                                      (exit 17))))
                                (if (>= param/1363 48)
                                  (if (>= param/1363 58) (exit 18) (exit 17))
                                  (if (!= param/1363 39) (exit 18) (exit 17))))
                             with (18)
                              (before Ocaml_ocaml_types__Warnings.parse_alert_option.id_char lib/warnings.ml(340):11758-11763
                                0))
                           with (17)
                            (before Ocaml_ocaml_types__Warnings.parse_alert_option.id_char lib/warnings.ml(339):11742-11746
                              1)))))
                   (before Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(342):11771-12698
                     (letrec
                       (parse_id/1364
                          (function i/1365[int] : int
                            (funct-body Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(342)<ghost>:11788-11850
                              (before Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(343):11796-11850
                                (if
                                  (&& (< i/1365 n/1360)
                                    (after Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(343):11808-11821
                                      (apply id_char/1361
                                        (after Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(343):11816-11821
                                          (string.get s/1359 i/1365)))))
                                  (before Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(343):11827-11843
                                    (after Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(343):11827-11843
                                      (apply parse_id/1364 (+ i/1365 1))))
                                  (before Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(343):11849-11850
                                    i/1365))))))
                       (before Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(345):11858-12698
                         (letrec
                           (scan/1366
                              (function i/1368[int] : int
                                (funct-body Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(345)<ghost>:11871-12512
                                  (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(346):11879-12512
                                    (if (== i/1368 n/1360)
                                      (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(346):11893-11895
                                        0)
                                      (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(347):11905-12512
                                        (if (== (+ i/1368 1) n/1360)
                                          (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(347):11923-11974
                                            (raise
                                              (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(347):11923-11974
                                                (makeblock 0
                                                  (field_imm 7
                                                    (global Stdlib__Arg!))
                                                  "Ill-formed list of alert settings"))))
                                          (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(348):11984-12512
                                            (let
                                              (*match*/3639 =
                                                 (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(348):11990-11995
                                                   (string.get s/1359 i/1368))
                                               *match*/3640 =
                                                 (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(348):11997-12004
                                                   (string.get s/1359
                                                     (+ i/1368 1))))
                                              (catch
                                                (if (>= *match*/3639 46)
                                                  (if (!= *match*/3639 64)
                                                    (exit 14)
                                                    (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(354):12310-12447
                                                      (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(354):12310-12447
                                                        (apply id/1367
                                                          (function s/1390
                                                            : int
                                                            (funct-body Ocaml_ocaml_types__Warnings.parse_alert_option.scan.(fun) lib/warnings.ml(354):12313-12427
                                                              (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan.(fun) lib/warnings.ml(355):12337-12426
                                                                (seq
                                                                  (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan.(fun) lib/warnings.ml(355):12337-12373
                                                                    (apply
                                                                    set_alert/1347
                                                                    1 1
                                                                    s/1390))
                                                                  (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan.(fun) lib/warnings.ml(356):12389-12426
                                                                    (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan.(fun) lib/warnings.ml(356):12389-12426
                                                                    (apply
                                                                    set_alert/1347
                                                                    0 1
                                                                    s/1390)))))))
                                                          (+ i/1368 1)))))
                                                  (if (>= *match*/3639 43)
                                                    (let
                                                      (switcher/3641 =a
                                                         (-43+ *match*/3639))
                                                      (switch* switcher/3641
                                                       case int 0:
                                                        (catch
                                                          (if
                                                            (!= *match*/3640
                                                              43)
                                                            (exit 15)
                                                            (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(349):12030-12077
                                                              (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(349):12030-12077
                                                                (apply
                                                                  id/1367
                                                                  (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(349):12033-12069
                                                                    (apply
                                                                    set_alert/1347
                                                                    1 1))
                                                                  (+ i/1368
                                                                    2)))))
                                                         with (15)
                                                          (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(350):12096-12144
                                                            (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(350):12096-12144
                                                              (apply id/1367
                                                                (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(350):12099-12136
                                                                  (apply
                                                                    set_alert/1347
                                                                    0 1))
                                                                (+ i/1368 1)))))
                                                       case int 1: (exit 14)
                                                       case int 2:
                                                        (catch
                                                          (if
                                                            (!= *match*/3640
                                                              45)
                                                            (exit 16)
                                                            (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(351):12165-12213
                                                              (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(351):12165-12213
                                                                (apply
                                                                  id/1367
                                                                  (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(351):12168-12205
                                                                    (apply
                                                                    set_alert/1347
                                                                    1 0))
                                                                  (+ i/1368
                                                                    2)))))
                                                         with (16)
                                                          (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(352):12232-12281
                                                            (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(352):12232-12281
                                                              (apply id/1367
                                                                (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(352):12235-12273
                                                                  (apply
                                                                    set_alert/1347
                                                                    0 0))
                                                                (+ i/1368 1)))))))
                                                    (exit 14)))
                                               with (14)
                                                (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(358):12461-12512
                                                  (raise
                                                    (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(358):12461-12512
                                                      (makeblock 0
                                                        (field_imm 7
                                                          (global Stdlib__Arg!))
                                                        "Ill-formed list of alert settings")))))))))))))
                             id/1367
                               (function f/1391 i/1392[int] : int
                                 (funct-body Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(359)<ghost>:12522-12684
                                   (before Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(360):12532-12684
                                     (let
                                       (j/1393 =[int]
                                          (after Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(360):12540-12550
                                            (apply parse_id/1364 i/1392)))
                                       (before Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(361):12558-12684
                                         (seq
                                           (if (== j/1393 i/1392)
                                             (before Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(361):12572-12623
                                               (raise
                                                 (after Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(361):12572-12623
                                                   (makeblock 0
                                                     (field_imm 7
                                                       (global Stdlib__Arg!))
                                                     "Ill-formed list of alert settings"))))
                                             0)
                                           (before Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(362):12629-12684
                                             (let
                                               (id/1394 =
                                                  (after Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(362):12638-12660
                                                    (apply
                                                      (field_imm 15
                                                        (global Stdlib__String!))
                                                      s/1359 i/1392
                                                      (- j/1393 i/1392))))
                                               (before Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(363):12668-12684
                                                 (seq
                                                   (after Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(363):12668-12672
                                                     (apply f/1391 id/1394))
                                                   (before Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(364):12678-12684
                                                     (after Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(364):12678-12684
                                                       (apply scan/1366
                                                         j/1393))))))))))))))
                           (before Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(366):12692-12698
                             (after Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(366):12692-12698
                               (apply scan/1366 0)))))))))))))
     ghost_loc_in_file/1402 =
       (function name/1404
         (funct-body Ocaml_ocaml_types__Warnings.ghost_loc_in_file lib/warnings.ml(377)<ghost>:12882-13001
           (before Ocaml_ocaml_types__Warnings.ghost_loc_in_file lib/warnings.ml(378):12891-13001
             (let
               (pos/1405 =
                  (let (init/3644 = (field_imm 0 (global Stdlib__Lexing!)))
                    (makeblock 0 (*,int,int,int) name/1404
                      (field_int 1 init/3644) (field_int 2 init/3644)
                      (field_int 3 init/3644))))
               (before Ocaml_ocaml_types__Warnings.ghost_loc_in_file lib/warnings.ml(379):12949-13001
                 (makeblock 0 (*,*,int) pos/1405 pos/1405 1))))))
     letter_alert/1406 =
       (function tokens/1408
         (funct-body Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(381)<ghost>:13020-15348
           (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(382):13031-15348
             (let
               (print_warning_char/1409 =
                  (function ppf/1411 c/1412[int] : int
                    (funct-body Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(382)<ghost>:13054-13182
                      (before Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(383):13066-13182
                        (let
                          (lowercase/1413 =[int]
                             (==
                               (after Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(383):13082-13104
                                 (apply (field_imm 2 (global Stdlib__Char!))
                                   c/1412))
                               c/1412))
                          (before Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(384):13116-13182
                            (after Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(384):13116-13182
                              (apply (field_imm 138 (global Stdlib__Format!))
                                ppf/1411 [0: [0: [0: 0]] "%c%c"]
                                (if lowercase/1413
                                  (before Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(385):13167-13170
                                    '-')
                                  (before Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(385):13176-13179
                                    '+'))
                                c/1412))))))))
               (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(387):13190-15348
                 (let
                   (print_modifier/1764 =
                      (function ppf/1766 param/1767[int] : int
                        (funct-body Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(387)<ghost>:13209-13337
                          (switch* param/1767
                           case int 0:
                            (before Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(390):13315-13337
                              (after Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(390):13315-13337
                                (apply
                                  (field_imm 138 (global Stdlib__Format!))
                                  ppf/1766 [0: [12: '+' 0] "+"])))
                           case int 1:
                            (before Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(389):13279-13301
                              (after Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(389):13279-13301
                                (apply
                                  (field_imm 138 (global Stdlib__Format!))
                                  ppf/1766 [0: [12: '-' 0] "-"])))
                           case int 2:
                            (before Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(388):13241-13263
                              (after Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(388):13241-13263
                                (apply
                                  (field_imm 138 (global Stdlib__Format!))
                                  ppf/1766 [0: [12: '@' 0] "@"])))))))
                   (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(392):13345-15348
                     (let
                       (print_token/1768 =
                          (function ppf/1770 param/1777 : int
                            (funct-body Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(392)<ghost>:13361-13659
                              (switch* param/1777
                               case tag 0:
                                (let
                                  (*match*/3657 =a (field_imm 1 param/1777)
                                   l/1774 =a (field_imm 0 param/1777))
                                  (if *match*/3657
                                    (let
                                      (m/1775 =a (field_imm 0 *match*/3657))
                                      (before Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(397):13566-13610
                                        (after Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(397):13566-13610
                                          (apply
                                            (field_imm 138
                                              (global Stdlib__Format!))
                                            ppf/1770 [0: [15: [0: 0]] "%a%c"]
                                            print_modifier/1764 m/1775
                                            l/1774))))
                                    (let (l/1776 =a l/1774)
                                      (before Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(398):13635-13659
                                        (after Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(398):13635-13659
                                          (apply print_warning_char/1409
                                            ppf/1770 l/1776))))))
                               case tag 1:
                                (let
                                  (m/1773 =a (field_imm 2 param/1777)
                                   b/1772 =a (field_imm 1 param/1777)
                                   a/1771 =a (field_imm 0 param/1777))
                                  (before Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(393):13397-13539
                                    (if (== a/1771 b/1772)
                                      (before Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(394):13421-13465
                                        (after Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(394):13421-13465
                                          (apply
                                            (field_imm 138
                                              (global Stdlib__Format!))
                                            ppf/1770
                                            [0: [15: [4: 0 0 0 0]] "%a%d"]
                                            print_modifier/1764 m/1773
                                            a/1771)))
                                      (before Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(396):13489-13539
                                        (after Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(396):13489-13539
                                          (apply
                                            (field_imm 138
                                              (global Stdlib__Format!))
                                            ppf/1770
                                            [0:
                                             [15:
                                              [4:
                                               0 0 0 [11: ".." [4: 0 0 0 0]]]]
                                             "%a%d..%d"]
                                            print_modifier/1764 m/1773 a/1771
                                            b/1772))))))))))
                       (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(400):13667-15348
                         (let
                           (consecutive_letters/1778 =
                              (let
                                (commit_chunk/1779 =
                                   (function l/1781 chunk/1782
                                     (funct-body Ocaml_ocaml_types__Warnings.letter_alert.commit_chunk lib/warnings.ml(403)<ghost>:13856-13944
                                       (catch
                                         (if chunk/1782
                                           (let
                                             (*match*/3654 =a
                                                (field_imm 1 chunk/1782))
                                             (if *match*/3654
                                               (let
                                                 (*match*/3656 =a
                                                    (field_imm 1
                                                      *match*/3654)
                                                  *match*/3655 =a
                                                    (field_imm 0
                                                      *match*/3654)
                                                  *match*/3653 =a
                                                    (field_imm 0 chunk/1782))
                                                 (before Ocaml_ocaml_types__Warnings.letter_alert.commit_chunk lib/warnings.ml(405):13925-13944
                                                   (makeblock 0
                                                     (after Ocaml_ocaml_types__Warnings.letter_alert.commit_chunk lib/warnings.ml(405):13925-13939
                                                       (apply
                                                         (field_imm 9
                                                           (global Stdlib__List!))
                                                         chunk/1782))
                                                     l/1781)))
                                               (exit 23)))
                                           (exit 23))
                                        with (23)
                                         (before Ocaml_ocaml_types__Warnings.letter_alert.commit_chunk lib/warnings.ml(404):13891-13892
                                           l/1781)))))
                                (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(407):13956-14216
                                  (let
                                    (group_consecutive_letters/1783 =
                                       (function param/1789 param/1788
                                         (funct-body Ocaml_ocaml_types__Warnings.letter_alert.group_consecutive_letters lib/warnings.ml(407)<ghost>:13986-14090
                                           (let
                                             (current/1786 =a
                                                (field_imm 1 param/1789)
                                              l/1785 =a
                                                (field_imm 0 param/1789))
                                             (catch
                                               (switch* param/1788
                                                case tag 0:
                                                 (let
                                                   (*match*/3652 =a
                                                      (field_imm 1
                                                        param/1788))
                                                   (if *match*/3652 (exit 22)
                                                     (let
                                                       (x/1787 =a
                                                          (field_imm 0
                                                            param/1788))
                                                       (before Ocaml_ocaml_types__Warnings.letter_alert.group_consecutive_letters lib/warnings.ml(408):14035-14050
                                                         (makeblock 0 l/1785
                                                           (makeblock 0 (int,*)
                                                             x/1787
                                                             current/1786))))))
                                                case tag 1: (exit 22))
                                              with (22)
                                               (before Ocaml_ocaml_types__Warnings.letter_alert.group_consecutive_letters lib/warnings.ml(409):14062-14090
                                                 (makeblock 0
                                                   (after Ocaml_ocaml_types__Warnings.letter_alert.group_consecutive_letters lib/warnings.ml(409):14063-14085
                                                     (apply commit_chunk/1779
                                                       l/1785 current/1786))
                                                   0)))))))
                                    (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(411):14102-14216
                                      (let
                                        (*match*/3651 =
                                           (after Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(412):14126-14181
                                             (apply
                                               (field_imm 25
                                                 (global Stdlib__List!))
                                               group_consecutive_letters/1783
                                               [0: 0 0] tokens/1408))
                                         on_going/1791 =a
                                           (field_imm 1 *match*/3651)
                                         l/1790 =a (field_imm 0 *match*/3651))
                                        (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(414):14193-14216
                                          (after Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(414):14193-14216
                                            (apply commit_chunk/1779 l/1790
                                              on_going/1791)))))))))
                           (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(416):14224-15348
                             (if consecutive_letters/1778
                               (let
                                 (*match*/3647 =a
                                    (field_imm 1 consecutive_letters/1778)
                                  example/1792 =a
                                    (field_imm 0 consecutive_letters/1778))
                                 (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(419):14297-15348
                                   (let
                                     (nowhere/1793 =
                                        (after Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(419):14311-14337
                                          (apply ghost_loc_in_file/1402
                                            "_none_")))
                                     (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(420):14347-15348
                                       (let
                                         (spelling_hint/1794 =
                                            (function ppf/1796 : int
                                              (funct-body Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(420)<ghost>:14365-14694
                                                (before Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(421):14379-14694
                                                  (let
                                                    (max_seq_len/1797 =[int]
                                                       (after Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(422):14407-14494
                                                         (apply
                                                           (field_imm 25
                                                             (global Stdlib__List!))
                                                           (function
                                                             l/1798[int]
                                                             x/1799 : int
                                                             (funct-body Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint.(fun) lib/warnings.ml(422):14422-14460
                                                               (before Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint.(fun) lib/warnings.ml(422):14434-14459
                                                                 (after Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint.(fun) lib/warnings.ml(422):14434-14459
                                                                   (apply
                                                                    (field_imm 10
                                                                    (global Stdlib__Int!))
                                                                    l/1798
                                                                    (after Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint.(fun) lib/warnings.ml(422):14444-14459
                                                                    (apply
                                                                    (field_imm 0
                                                                    (global Stdlib__List!))
                                                                    x/1799)))))))
                                                           0
                                                           consecutive_letters/1778)))
                                                    (before Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(425):14514-14694
                                                      (if
                                                        (>= max_seq_len/1797
                                                          5)
                                                        (before Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(426):14549-14668
                                                          (after Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(426):14549-14668
                                                            (apply
                                                              (field_imm 138
                                                                (global Stdlib__Format!))
                                                              ppf/1796
                                                              [0:
                                                               [17:
                                                                [0: "@ " 1 0]
                                                                [18:
                                                                 [1:
                                                                  [0: 0 ""]]
                                                                 [11:
                                                                  "Hint: Did you make a spelling mistake when using a mnemonic name?"
                                                                  [17: 0 0]]]]
                                                               "@ @[Hint: Did you make a spelling mistake when using a mnemonic name?@]"])))
                                                        (before Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(430):14692-14694
                                                          0))))))))
                                         (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(432):14710-15348
                                           (let
                                             (message/1831 =
                                                (after Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(433):14732-15231
                                                  (apply
                                                    (field_imm 142
                                                      (global Stdlib__Format!))
                                                    [0:
                                                     [18:
                                                      [1:
                                                       [0:
                                                        [11: "<v>" 0] "<v>"]]
                                                      [18:
                                                       [1: [0: 0 ""]]
                                                       [11:
                                                        "Setting a warning with a sequence of lowercase or uppercase letters,"
                                                        [17:
                                                         [0: "@ " 1 0]
                                                         [11:
                                                          "like '"
                                                          [15:
                                                           [11:
                                                            "',"
                                                            [17:
                                                             [0: "@ " 1 0]
                                                             [11:
                                                              "is deprecated."
                                                              [17:
                                                               0
                                                               [17:
                                                                [0: "@ " 1 0]
                                                                [18:
                                                                 [1:
                                                                  [0: 0 ""]]
                                                                 [11:
                                                                  "Use the equivalent signed form:"
                                                                  [17:
                                                                   [0:
                                                                    "@ " 1 0]
                                                                   [16:
                                                                    [12:
                                                                    '.'
                                                                    [17:
                                                                    0
                                                                    [17:
                                                                    [0:
                                                                    "@ " 1 0]
                                                                    [18:
                                                                    [1:
                                                                    [0: 0 ""]]
                                                                    [11:
                                                                    "Hint: Enabling or disabling a warning by its mnemonic name requires a + or - prefix."
                                                                    [17:
                                                                    0
                                                                    [16:
                                                                    [17:
                                                                    2
                                                                    [17: 0 0]]]]]]]]]]]]]]]]]]]]]]]]
                                                     "@[<v>@[Setting a warning with a sequence of lowercase or uppercase letters,@ like '%a',@ is deprecated.@]@ @[Use the equivalent signed form:@ %t.@]@ @[Hint: Enabling or disabling a warning by its mnemonic name requires a + or - prefix.@]%t@?@]"]
                                                    (after Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(440):15087-15140
                                                      (apply
                                                        (field_imm 131
                                                          (global Stdlib__Format!))
                                                        (makeblock 0
                                                          (function
                                                            param/1832
                                                            (funct-body Ocaml_ocaml_types__Warnings.letter_alert.(fun) lib/warnings.ml(440):15109-15126
                                                              (before Ocaml_ocaml_types__Warnings.letter_alert.(fun) lib/warnings.ml(440):15119-15125
                                                                (function
                                                                  prim/3646
                                                                  stub
                                                                  (ignore
                                                                    prim/3646))))))
                                                        (field_imm 22
                                                          (global Stdlib__Format!))))
                                                    example/1792
                                                    (function ppf/1833 : int
                                                      (funct-body Ocaml_ocaml_types__Warnings.letter_alert.(fun) lib/warnings.ml(441):15160-15207
                                                        (before Ocaml_ocaml_types__Warnings.letter_alert.(fun) lib/warnings.ml(441):15172-15206
                                                          (after Ocaml_ocaml_types__Warnings.letter_alert.(fun) lib/warnings.ml(441):15172-15206
                                                            (apply
                                                              (field_imm 17
                                                                (global Stdlib__List!))
                                                              (after Ocaml_ocaml_types__Warnings.letter_alert.(fun) lib/warnings.ml(441):15182-15199
                                                                (apply
                                                                  print_token/1768
                                                                  ppf/1833))
                                                              tokens/1408)))))
                                                    spelling_hint/1794)))
                                             (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(444):15247-15348
                                               (makeblock 0
                                                 (makeblock 0
                                                   "ocaml_deprecated_cli"
                                                   message/1831 nowhere/1793
                                                   nowhere/1793))))))))))
                               (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(417):14265-14269
                                 0)))))))))))))
     parse_warnings/1834 =
       (function s/1836
         (funct-body Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(451)<ghost>:15370-16549
           (before Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(452):15376-16549
             (let
               (error/1837 =
                  (function param/1839[int]
                    (funct-body Ocaml_ocaml_types__Warnings.parse_warnings.error lib/warnings.ml(452)<ghost>:15386-15436
                      (before Ocaml_ocaml_types__Warnings.parse_warnings.error lib/warnings.ml(452):15391-15436
                        (raise
                          (after Ocaml_ocaml_types__Warnings.parse_warnings.error lib/warnings.ml(452):15391-15436
                            (makeblock 0 (field_imm 7 (global Stdlib__Arg!))
                              "Ill-formed list of warnings")))))))
               (before Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(453):15442-16549
                 (letrec
                   (get_num/1840
                      (function n/1841[int] i/1842[int]
                        (funct-body Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(453)<ghost>:15458-15620
                          (before Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(454):15468-15620
                            (if (>= i/1842 (string.length s/1836))
                              (before Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(454):15497-15501
                                (makeblock 0 (int,int) i/1842 n/1841))
                              (before Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(455):15511-15620
                                (let
                                  (*match*/3677 =
                                     (after Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(455):15517-15522
                                       (string.get s/1836 i/1842)))
                                  (catch
                                    (catch
                                      (let
                                        (switcher/3678 =a (-48+ *match*/3677))
                                        (if (isout 9 switcher/3678) (exit 39)
                                          (exit 38)))
                                     with (39)
                                      (before Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(457):15616-15620
                                        (makeblock 0 (int,int) i/1842 n/1841)))
                                   with (38)
                                    (before Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(456):15546-15604
                                      (after Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(456):15546-15604
                                        (apply get_num/1840
                                          (-
                                            (+ (* 10 n/1841)
                                              (after Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(456):15574-15579
                                                (string.get s/1836 i/1842)))
                                            '0')
                                          (+ i/1842 1))))))))))))
                   (before Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(459):15628-16549
                     (let
                       (get_range/1843 =
                          (function i/1845[int]
                            (funct-body Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(459)<ghost>:15642-15858
                              (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(460):15650-15858
                                (let
                                  (*match*/3676 =
                                     (after Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(460):15662-15673
                                       (apply get_num/1840 0 i/1845))
                                   n1/1847 =a (field_imm 1 *match*/3676)
                                   i/1846 =a (field_imm 0 *match*/3676))
                                  (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(461):15681-15858
                                    (if
                                      (&&
                                        (< (+ i/1846 2)
                                          (string.length s/1836))
                                        (&&
                                          (==
                                            (after Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(461):15711-15716
                                              (string.get s/1836 i/1846))
                                            '.')
                                          (==
                                            (after Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(461):15726-15735
                                              (string.get s/1836
                                                (+ i/1846 1)))
                                            '.')))
                                      (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(462):15753-15833
                                        (let
                                          (*match*/3672 =
                                             (after Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(462):15765-15782
                                               (apply get_num/1840 0
                                                 (+ i/1846 2)))
                                           n2/1849 =a
                                             (field_imm 1 *match*/3672)
                                           i/1848 =a
                                             (field_imm 0 *match*/3672))
                                          (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(463):15792-15833
                                            (seq
                                              (if (< n2/1849 n1/1847)
                                                (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(463):15808-15816
                                                  (after Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(463):15808-15816
                                                    (apply error/1837 0)))
                                                0)
                                              (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(464):15824-15833
                                                (makeblock 0 (int,int,int)
                                                  i/1848 n1/1847 n2/1849))))))
                                      (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(466):15849-15858
                                        (makeblock 0 (int,int,int) i/1846
                                          n1/1847 n1/1847)))))))))
                       (before Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(468):15866-16549
                         (letrec
                           (loop/1850
                              (function tokens/1852 i/1853[int]
                                (funct-body Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(468)<ghost>:15879-16209
                                  (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(469):15894-16209
                                    (if (>= i/1853 (string.length s/1836))
                                      (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(469):15923-15938
                                        (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(469):15923-15938
                                          (apply
                                            (field_imm 9
                                              (global Stdlib__List!))
                                            tokens/1852)))
                                      (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(470):15948-16209
                                        (let
                                          (*match*/3658 =
                                             (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(470):15954-15959
                                               (string.get s/1836 i/1853)))
                                          (catch
                                            (catch
                                              (if (>= *match*/3658 65)
                                                (if (>= *match*/3658 97)
                                                  (if (>= *match*/3658 123)
                                                    (exit 25) (exit 24))
                                                  (if (>= *match*/3658 91)
                                                    (exit 25) (exit 24)))
                                                (if (>= *match*/3658 46)
                                                  (if (>= *match*/3658 64)
                                                    (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(475):16153-16189
                                                      (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(475):16153-16189
                                                        (apply
                                                          loop_letter_num/1851
                                                          tokens/1852 2
                                                          (+ i/1853 1))))
                                                    (exit 25))
                                                  (if (>= *match*/3658 43)
                                                    (let
                                                      (switcher/3659 =a
                                                         (-43+ *match*/3658))
                                                      (switch* switcher/3659
                                                       case int 0:
                                                        (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(473):16059-16091
                                                          (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(473):16059-16091
                                                            (apply
                                                              loop_letter_num/1851
                                                              tokens/1852 0
                                                              (+ i/1853 1))))
                                                       case int 1: (exit 25)
                                                       case int 2:
                                                        (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(474):16105-16139
                                                          (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(474):16105-16139
                                                            (apply
                                                              loop_letter_num/1851
                                                              tokens/1852 1
                                                              (+ i/1853 1))))))
                                                    (exit 25))))
                                             with (25)
                                              (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(476):16201-16209
                                                (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(476):16201-16209
                                                  (apply error/1837 0))))
                                           with (24)
                                            (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(472):16006-16045
                                              (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(472):16006-16045
                                                (apply loop/1850
                                                  (makeblock 0
                                                    (makeblock 0 (int,*)
                                                      (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(472):16019-16024
                                                        (string.get s/1836
                                                          i/1853))
                                                      0)
                                                    tokens/1852)
                                                  (+ i/1853 1)))))))))))
                             loop_letter_num/1851
                               (function tokens/1854 modifier/1855[int]
                                 i/1856[int]
                                 (funct-body Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(477)<ghost>:16232-16532
                                   (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(478):16256-16532
                                     (if (>= i/1856 (string.length s/1836))
                                       (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(478):16285-16293
                                         (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(478):16285-16293
                                           (apply error/1837 0)))
                                       (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(479):16303-16532
                                         (let
                                           (*match*/3665 =
                                              (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(479):16309-16314
                                                (string.get s/1836 i/1856)))
                                           (catch
                                             (catch
                                               (catch
                                                 (let
                                                   (switcher/3666 =a
                                                      (-65+ *match*/3665))
                                                   (if
                                                     (isout 57 switcher/3666)
                                                     (let
                                                       (switcher/3668 =a
                                                          (17+ switcher/3666))
                                                       (if
                                                         (isout 9
                                                           switcher/3668)
                                                         (exit 31) (exit 29)))
                                                     (let
                                                       (switcher/3667 =a
                                                          (-26+
                                                            switcher/3666))
                                                       (if
                                                         (isout 5
                                                           switcher/3667)
                                                         (exit 30) (exit 31)))))
                                                with (31)
                                                 (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(485):16524-16532
                                                   (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(485):16524-16532
                                                     (apply error/1837 0))))
                                              with (29)
                                               (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(481):16348-16423
                                                 (let
                                                   (*match*/3664 =
                                                      (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(481):16364-16375
                                                        (apply get_range/1843
                                                          i/1856))
                                                    n2/1859 =a
                                                      (field_imm 2
                                                        *match*/3664)
                                                    n1/1858 =a
                                                      (field_imm 1
                                                        *match*/3664)
                                                    i/1857 =a
                                                      (field_imm 0
                                                        *match*/3664))
                                                   (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(482):16387-16423
                                                     (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(482):16387-16423
                                                       (apply loop/1850
                                                         (makeblock 0
                                                           (makeblock 1 (int,int,int)
                                                             n1/1858 n2/1859
                                                             modifier/1855)
                                                           tokens/1854)
                                                         i/1857))))))
                                            with (30)
                                             (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(484):16464-16512
                                               (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(484):16464-16512
                                                 (apply loop/1850
                                                   (makeblock 0
                                                     (makeblock 0 (int,*)
                                                       (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(484):16477-16482
                                                         (string.get s/1836
                                                           i/1856))
                                                       (makeblock 0 (int)
                                                         modifier/1855))
                                                     tokens/1854)
                                                   (+ i/1856 1))))))))))))
                           (before Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(487):16540-16549
                             (after Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(487):16540-16549
                               (apply loop/1850 0 0)))))))))))))
     parse_opt/1860 =
       (function error/1862 active/1863 errflag/1864[int] s/1865
         (funct-body Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(489)<ghost>:16565-18096
           (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(490):16592-18096
             (let
               (flags/1866 =
                  (if errflag/1864
                    (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(490):16620-16625
                      error/1862)
                    (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(490):16631-16637
                      active/1863)))
               (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(491):16643-18096
                 (let
                   (action/1867 =
                      (function modifier/1869[int] i/1870[int] : int
                        (funct-body Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(491)<ghost>:16654-17188
                          (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(491):16667-17188
                            (switch* modifier/1869
                             case int 0:
                              (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(493):16708-16803
                                (if (== i/1870 3)
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(493):16722-16772
                                    (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(493):16722-16772
                                      (apply set_alert/1347 errflag/1864 1
                                        "deprecated")))
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(494):16786-16803
                                    (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(494):16786-16803
                                      (array.set[int] flags/1866 i/1870 1)))))
                             case int 1:
                              (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(496):16827-16924
                                (if (== i/1870 3)
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(496):16841-16892
                                    (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(496):16841-16892
                                      (apply set_alert/1347 errflag/1864 0
                                        "deprecated")))
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(497):16906-16924
                                    (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(497):16906-16924
                                      (array.set[int] flags/1866 i/1870 0)))))
                             case int 2:
                              (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(499):16950-17188
                                (if (== i/1870 3)
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(499):16964-17099
                                    (seq
                                      (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(500):16980-17028
                                        (apply set_alert/1347 0 1
                                          "deprecated"))
                                      (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(501):17040-17087
                                        (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(501):17040-17087
                                          (apply set_alert/1347 1 1
                                            "deprecated")))))
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(503):17113-17188
                                    (seq
                                      (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(504):17129-17147
                                        (array.set[int] active/1863 i/1870 1))
                                      (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(505):17159-17176
                                        (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(505):17159-17176
                                          (array.set[int] error/1862 i/1870
                                            1))))))))))))
                   (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(508):17196-18096
                     (let
                       (eval/1871 =
                          (function param/1882 : int
                            (funct-body Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(508):17207-17557
                              (switch* param/1882
                               case tag 0:
                                (let
                                  (m/1874 =a (field_imm 1 param/1882)
                                   c/1873 =a (field_imm 0 param/1882))
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(510):17246-17449
                                    (let
                                      (lc/1878 =[int]
                                         (after Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(510):17255-17277
                                           (apply
                                             (field_imm 2
                                               (global Stdlib__Char!))
                                             c/1873)))
                                      (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(511):17289-17449
                                        (let
                                          (modifier/1879 =[int]
                                             (if m/1874
                                               (let
                                                 (m/1880 =a
                                                    (field_imm 0 m/1874))
                                                 (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(513):17389-17390
                                                   m/1880))
                                               (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(512):17337-17366
                                                 (if (== c/1873 lc/1878)
                                                   (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(512):17352-17357
                                                     1)
                                                   (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(512):17363-17366
                                                     0)))))
                                          (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(515):17410-17449
                                            (after Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(515):17410-17449
                                              (apply
                                                (field_imm 17
                                                  (global Stdlib__List!))
                                                (after Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(515):17420-17437
                                                  (apply action/1867
                                                    modifier/1879))
                                                (after Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(515):17438-17449
                                                  (apply letter/587 lc/1878))))))))))
                               case tag 1:
                                (let
                                  (modifier/1877 =a (field_imm 2 param/1882)
                                   n2/1876 =a (field_imm 1 param/1882)
                                   n1/1875 =a (field_imm 0 param/1882))
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(517):17487-17557
                                    (for n/1881 n1/1875 to
                                      (after Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(517):17501-17531
                                        (apply
                                          (field_imm 9 (global Stdlib__Int!))
                                          n2/1876 last_warning_number/428))
                                      (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(517):17535-17552
                                        (after Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(517):17535-17552
                                          (apply action/1867 modifier/1877
                                            n/1881))))))))))
                       (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(519):17565-18096
                         (let
                           (parse_and_eval/1883 =
                              (function s/1885
                                (funct-body Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(519)<ghost>:17584-17675
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(520):17592-17675
                                    (let
                                      (tokens/1886 =
                                         (after Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(520):17605-17621
                                           (apply parse_warnings/1834 s/1885)))
                                      (before Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(521):17629-17675
                                        (seq
                                          (after Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(521):17629-17650
                                            (apply
                                              (field_imm 17
                                                (global Stdlib__List!))
                                              eval/1871 tokens/1886))
                                          (before Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(522):17656-17675
                                            (after Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(522):17656-17675
                                              (apply letter_alert/1406
                                                tokens/1886))))))))))
                           (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(524):17684-18096
                             (let
                               (*match*/3682 =
                                  (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(524):17690-17706
                                    (apply name_to_number/434 s/1865)))
                               (if *match*/3682
                                 (let (n/1887 =a (field_imm 0 *match*/3682))
                                   (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(525):17726-17744
                                     (seq
                                       (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(525):17726-17738
                                         (apply action/1867 0 n/1887))
                                       (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(525):17740-17744
                                         0))))
                                 (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(527):17763-18096
                                   (if
                                     (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(527):17766-17772
                                       (caml_string_equal s/1865 ""))
                                     (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(527):17778-17794
                                       (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(527):17778-17794
                                         (apply parse_and_eval/1883 s/1865)))
                                     (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(528):17806-18096
                                       (let
                                         (rest/1888 =
                                            (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(529):17831-17867
                                              (apply
                                                (field_imm 15
                                                  (global Stdlib__String!))
                                                s/1865 1
                                                (- (string.length s/1865) 1))))
                                         (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(530):17879-18086
                                           (let
                                             (*match*/3679 =
                                                (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(530):17885-17890
                                                  (string.get s/1865 0))
                                              *match*/3680 =
                                                (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(530):17892-17911
                                                  (apply name_to_number/434
                                                    rest/1888)))
                                             (catch
                                               (if (>= *match*/3679 46)
                                                 (if (!= *match*/3679 64)
                                                   (exit 40)
                                                   (if *match*/3680
                                                     (let
                                                       (n/1891 =a
                                                          (field_imm 0
                                                            *match*/3680))
                                                       (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(533):18032-18054
                                                         (seq
                                                           (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(533):18032-18048
                                                             (apply
                                                               action/1867 2
                                                               n/1891))
                                                           (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(533):18050-18054
                                                             0))))
                                                     (exit 40)))
                                                 (if (>= *match*/3679 43)
                                                   (let
                                                     (switcher/3681 =a
                                                        (-43+ *match*/3679))
                                                     (switch* switcher/3681
                                                      case int 0:
                                                       (if *match*/3680
                                                         (let
                                                           (n/1889 =a
                                                              (field_imm 0
                                                                *match*/3680))
                                                           (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(531):17942-17960
                                                             (seq
                                                               (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(531):17942-17954
                                                                 (apply
                                                                   action/1867
                                                                   0 n/1889))
                                                               (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(531):17956-17960
                                                                 0))))
                                                         (exit 40))
                                                      case int 1: (exit 40)
                                                      case int 2:
                                                       (if *match*/3680
                                                         (let
                                                           (n/1890 =a
                                                              (field_imm 0
                                                                *match*/3680))
                                                           (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(532):17986-18006
                                                             (seq
                                                               (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(532):17986-18000
                                                                 (apply
                                                                   action/1867
                                                                   1 n/1890))
                                                               (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(532):18002-18006
                                                                 0))))
                                                         (exit 40))))
                                                   (exit 40)))
                                              with (40)
                                               (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(534):18070-18086
                                                 (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(534):18070-18086
                                                   (apply parse_and_eval/1883
                                                     s/1865)))))))))))))))))))))))
     parse_options/1892 =
       (function errflag/1894[int] s/1895
         (funct-body Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(537)<ghost>:18116-18325
           (before Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(538):18130-18325
             (let
               (error/1896 =
                  (after Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(538):18142-18169
                    (apply (field_imm 6 (global Stdlib__Array!))
                      (field_imm 1 (field_mut 0 current/1188)))))
               (before Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(539):18175-18325
                 (let
                   (active/1897 =
                      (after Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(539):18188-18216
                        (apply (field_imm 6 (global Stdlib__Array!))
                          (field_imm 0 (field_mut 0 current/1188)))))
                   (before Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(540):18222-18325
                     (let
                       (alerts/1898 =
                          (after Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(540):18235-18267
                            (apply parse_opt/1860 error/1896 active/1897
                              errflag/1894 s/1895)))
                       (before Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(541):18273-18325
                         (seq
                           (setfield_ptr 0 current/1188
                             (let (init/3683 = (field_mut 0 current/1188))
                               (makeblock 0 active/1897 error/1896
                                 (field_imm 2 init/3683)
                                 (field_imm 3 init/3683))))
                           (before Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(542):18319-18325
                             alerts/1898)))))))))))
     defaults_w/1899 = "+a-4-7-9-27-29-30-32..42-44-45-48-50-60-66..70"
     defaults_warn_error/1900 = "-a"
     default_disabled_alerts/1901 =
       [0: "unstable" [0: "unsynchronized_access" 0]]
     *match*/3720 =
       (ignore
         (after Ocaml_ocaml_types__Warnings lib/warnings.ml(549):18585-18615
           (apply parse_options/1892 0 defaults_w/1899)))
     *match*/3718 =
       (ignore
         (after Ocaml_ocaml_types__Warnings lib/warnings.ml(550):18635-18673
           (apply parse_options/1892 1 defaults_warn_error/1900)))
     *match*/3716 =
       (after Ocaml_ocaml_types__Warnings lib/warnings.ml(552):18685-18757
         (apply (field_imm 17 (global Stdlib__List!))
           (after Ocaml_ocaml_types__Warnings lib/warnings.ml(552):18695-18733
             (apply set_alert/1347 0 0))
           default_disabled_alerts/1901))
     message/1902 =
       (function param/2000
         (funct-body Ocaml_ocaml_types__Warnings.message lib/warnings.ml(554):18773-31135
           (catch
             (catch
               (switch* param/2000
                case int 0:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(556):18809-18926
                   "this `(*' is the start of a comment.\nHint: Did you forget spaces when writing the infix operator `( * )'?")
                case int 1:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(558):18950-18985
                   "this is not the end of a comment.")
                case int 2:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(565):19241-19324
                   "this function application is partial,\nmaybe some arguments are missing.")
                case int 3:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(588):20290-20330
                   "this expression should have type unit.")
                case int 4:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(589):20353-20381
                   "this match case is unused.")
                case int 5:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(590):20406-20435
                   "this sub-pattern is unused.")
                case int 6:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(599):20798-21056
                   "illegal backslash escape in string.\nHint: Single backslashes \\ are reserved for escape sequences\n(\\n, \\r, ...). Did you check the list of OCaml escape sequences?\nTo get a backslash character, escape it with a second backslash: \\\\.")
                case int 7:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(606):21230-21272
                   "this optional argument cannot be erased.")
                case int 8:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(610):21485-21534
                   "this argument will not be used by the function.")
                case int 9:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(612):21571-21627
                   "this statement never returns (or has an unsound type.)")
                case int 10:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(615):21685-21779
                   "all the fields are explicitly listed in this record:\nthe 'with' clause is useless.")
                case int 11:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(620):21924-22026
                   "this pattern-matching is not exhaustive.\nAll clauses in this pattern-matching are guarded.")
                case int 12:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(624):22142-22204
                   "wildcard pattern given as argument to a constant constructor")
                case int 13:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(626):22231-22325
                   "unescaped end-of-line in a string constant\n(non-portable behavior before OCaml 5.2)")
                case int 14:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(662):23823-23841
                   "unused rec flag.")
                case int 15:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(717):26309-26608
                   (let (ref_manual/1993 = [0: 13 [0: 5 [0: 3 0]]])
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(718):26373-26608
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(718):26373-26608
                         (apply (field_imm 142 (global Stdlib__Format!))
                           [0:
                            [11:
                             "Code should not depend on the actual values of\nthis constructor's arguments. They are only for information\nand may change in future versions. "
                             [15: 0]]
                            "Code should not depend on the actual values of\nthis constructor's arguments. They are only for information\nand may change in future versions. %a"]
                           (field_imm 68 (global Ocaml_ocaml_types__Misc!))
                           ref_manual/1993)))))
                case int 16:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(724):26639-26740
                   "this match case is unreachable.\nConsider replacing it with a refutation case '<pat> -> .'")
                case int 17:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(759):28118-28289
                   "A potential assignment to a non-mutable value was detected \nin this source file.  Such assignments may generate incorrect code \nwhen using Flambda.")
                case int 18:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(774):28996-29059
                   "Type constraints do not apply to GADT cases of variant types.")
                case int 19:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(783):29496-29561
                   "option -unsafe used with a preprocessor returning a syntax tree")
                case int 20:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(791):29898-30060
                   "This pattern depends on mutable state.\nIt prevents the remaining arguments from being uncurried, which will cause additional closure allocations.")
                case int 21:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(803):30403-30432
                   "Cannot find interface file.")
                case int 22:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(805):30467-30555
                   "This function is marked @tail_mod_cons\nbut is never applied in TMC position.")
                case int 23:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(808):30589-30990
                   "This call\nis in tail-modulo-cons position in a TMC function,\nbut the function called is not itself specialized for TMC,\nso the call will not be transformed into a tail call.\nPlease either mark the called function with the [@tail_mod_cons]\nattribute, or mark this call with the [@tailcall false] attribute\nto make its non-tailness explicit.")
                case int 24:
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(816):31040-31135
                   "A generative functor\nshould be applied to '()'; using '(struct end)' is deprecated.")
                case tag 0:
                 (let (s/1904 =a (field_imm 0 param/2000))
                   (catch
                     (stringswitch s/1904
                      case "":
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(560):19016-19051
                         "this pattern-matching is fragile.")
                      default: (exit 43))
                    with (43)
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(562):19081-19199
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(562):19081-19199
                         (apply (field_imm 27 (global Stdlib!))
                           "this pattern-matching is fragile.\nIt will remain exhaustive when constructors are added to type "
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(563):19192-19199
                             (apply (field_imm 27 (global Stdlib!)) s/1904
                               ".")))))))
                case tag 1:
                 (let (ls/1906 =a (field_imm 0 param/2000))
                   (catch
                     (if ls/1906
                       (let (*match*/3688 =a (field_imm 1 ls/1906))
                         (if *match*/3688 (exit 44)
                           (let (l/1905 =a (field_imm 0 ls/1906))
                             (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(569):19394-19460
                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(569):19394-19460
                                 (apply (field_imm 27 (global Stdlib!))
                                   "label "
                                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(569):19405-19460
                                     (apply (field_imm 27 (global Stdlib!))
                                       l/1905
                                       " was omitted in the application of this function."))))))))
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(567):19350-19362
                         (raise
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(567):19350-19362
                             (makeblock 0 (global Assert_failure/28!)
                               [0: "lib/warnings.ml" 567 25])))))
                    with (44)
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(571):19491-19586
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(571):19491-19586
                         (apply (field_imm 27 (global Stdlib!)) "labels "
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(571):19503-19586
                             (apply (field_imm 27 (global Stdlib!))
                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(571):19503-19524
                                 (apply
                                   (field_imm 6 (global Stdlib__String!))
                                   ", " ls/1906))
                               " were omitted in the application of this function.")))))))
                case tag 2:
                 (let (*match*/3689 =a (field_imm 0 param/2000))
                   (if *match*/3689
                     (let (lab/1907 =a (field_imm 0 *match*/3689))
                       (catch
                         (let (*match*/3690 =a (field_imm 1 *match*/3689))
                           (if *match*/3690 (exit 45)
                             (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(574):19622-19661
                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(574):19622-19661
                                 (apply (field_imm 27 (global Stdlib!))
                                   "the method "
                                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(574):19638-19661
                                     (apply (field_imm 27 (global Stdlib!))
                                       lab/1907 " is overridden.")))))))
                        with (45)
                         (let
                           (cname/1908 =a lab/1907
                            slist/1909 =a (field_imm 1 *match*/3689))
                           (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(576):19708-19825
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(576):19708-19825
                               (apply (field_imm 6 (global Stdlib__String!))
                                 " "
                                 (makeblock 0
                                   "the following methods are overridden by the class"
                                   (makeblock 0 cname/1908
                                     (makeblock 0 ":\n " slist/1909)))))))))
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(579):19852-19864
                       (raise
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(579):19852-19864
                           (makeblock 0 (global Assert_failure/28!)
                             [0: "lib/warnings.ml" 579 26]))))))
                case tag 3:
                 (let (s/1910 =a (field_imm 0 param/2000))
                   (catch
                     (stringswitch s/1910
                      case "":
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(580):19889-19931
                         "this pattern-matching is not exhaustive.")
                      default: (exit 46))
                    with (46)
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(582):19961-20069
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(582):19961-20069
                         (apply (field_imm 27 (global Stdlib!))
                           "this pattern-matching is not exhaustive.\nHere is an example of a case that is not matched:\n"
                           s/1910)))))
                case tag 4:
                 (let (s/1911 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(585):20114-20257
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(585):20114-20257
                       (apply (field_imm 27 (global Stdlib!))
                         "the following labels are not bound in this record pattern:\n"
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(585):20179-20257
                           (apply (field_imm 27 (global Stdlib!)) s/1911
                             "\nEither bind these labels explicitly or add '; _' to the pattern."))))))
                case tag 5:
                 (let (*match*/3691 =a (field_imm 0 param/2000))
                   (if *match*/3691
                     (let (lab/1912 =a (field_imm 0 *match*/3691))
                       (catch
                         (let (*match*/3692 =a (field_imm 1 *match*/3691))
                           (if *match*/3692 (exit 47)
                             (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(592):20482-20532
                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(592):20482-20532
                                 (apply (field_imm 27 (global Stdlib!))
                                   "the instance variable "
                                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(592):20509-20532
                                     (apply (field_imm 27 (global Stdlib!))
                                       lab/1912 " is overridden.")))))))
                        with (47)
                         (let
                           (cname/1913 =a lab/1912
                            slist/1914 =a (field_imm 1 *match*/3691))
                           (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(594):20590-20718
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(594):20590-20718
                               (apply (field_imm 6 (global Stdlib__String!))
                                 " "
                                 (makeblock 0
                                   "the following instance variables are overridden by the class"
                                   (makeblock 0 cname/1913
                                     (makeblock 0 ":\n " slist/1914)))))))))
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(597):20756-20768
                       (raise
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(597):20756-20768
                           (makeblock 0 (global Assert_failure/28!)
                             [0: "lib/warnings.ml" 597 37]))))))
                case tag 6:
                 (let (l/1915 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(604):21096-21193
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(604):21096-21193
                       (apply (field_imm 27 (global Stdlib!))
                         "the following private methods were made public implicitly:\n "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(605):21168-21193
                           (apply (field_imm 27 (global Stdlib!))
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(605):21168-21187
                               (apply (field_imm 6 (global Stdlib__String!))
                                 " " l/1915))
                             "."))))))
                case tag 7:
                 (let (m/1916 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(607):21308-21351
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(607):21308-21351
                       (apply (field_imm 27 (global Stdlib!))
                         "the virtual method "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(607):21330-21351
                           (apply (field_imm 27 (global Stdlib!)) m/1916
                             " is not declared."))))))
                case tag 8:
                 (let (s/1917 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(608):21375-21397
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(608):21375-21397
                       (apply (field_imm 27 (global Stdlib!)) s/1917
                         " is not principal."))))
                case tag 9:
                 (let (s/1918 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(609):21428-21454
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(609):21428-21454
                       (apply (field_imm 27 (global Stdlib!)) s/1918
                         " without principality."))))
                case tag 10:
                 (let (s/1919 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(613):21650-21651
                     s/1919))
                case tag 11:
                 (let (modname/1920 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(618):21819-21890
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(618):21819-21890
                       (apply (field_imm 27 (global Stdlib!))
                         "bad source file name: \""
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(618):21848-21890
                           (apply (field_imm 27 (global Stdlib!))
                             modname/1920 "\" is not a valid module name."))))))
                case tag 12: (exit 50)
                case tag 13: (exit 50)
                case tag 14:
                 (let
                   (tc2/1926 =a (field_imm 3 param/2000)
                    tc1/1925 =a (field_imm 2 param/2000)
                    cname/1924 =a (field_imm 1 param/2000)
                    kind/1923 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(629):22385-22474
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(629):22385-22474
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "the "
                           [2:
                            0
                            [12:
                             ' '
                             [2:
                              0
                              [11:
                               " is defined in both types "
                               [2: 0 [11: " and " [2: 0 [12: '.' 0]]]]]]]]]
                          "the %s %s is defined in both types %s and %s."]
                         kind/1923 cname/1924 tc1/1925 tc2/1926))))
                case tag 15:
                 (let (v/1927 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(631):22509-22534
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(631):22509-22534
                       (apply (field_imm 27 (global Stdlib!)) "unused value "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(631):22527-22534
                           (apply (field_imm 27 (global Stdlib!)) v/1927 "."))))))
                case tag 16:
                 (let (s/1928 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(632):22556-22580
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(632):22556-22580
                       (apply (field_imm 27 (global Stdlib!)) "unused open "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(632):22573-22580
                           (apply (field_imm 27 (global Stdlib!)) s/1928 "."))))))
                case tag 17:
                 (let (s/1930 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(634):22666-22690
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(634):22666-22690
                       (apply (field_imm 27 (global Stdlib!)) "unused type "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(634):22683-22690
                           (apply (field_imm 27 (global Stdlib!)) s/1930 "."))))))
                case tag 18:
                 (let (s/1931 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(635):22717-22751
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(635):22717-22751
                       (apply (field_imm 27 (global Stdlib!))
                         "unused for-loop index "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(635):22744-22751
                           (apply (field_imm 27 (global Stdlib!)) s/1931 "."))))))
                case tag 19:
                 (let (s/1932 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(636):22777-22814
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(636):22777-22814
                       (apply (field_imm 27 (global Stdlib!))
                         "unused ancestor variable "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(636):22807-22814
                           (apply (field_imm 27 (global Stdlib!)) s/1932 "."))))))
                case tag 20:
                 (let
                   (*match*/3693 =a (field_imm 1 param/2000)
                    s/1933 =a (field_imm 0 param/2000))
                   (switch* *match*/3693
                    case int 0:
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(637):22853-22884
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(637):22853-22884
                         (apply (field_imm 27 (global Stdlib!))
                           "unused constructor "
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(637):22877-22884
                             (apply (field_imm 27 (global Stdlib!)) s/1933
                               ".")))))
                    case int 1:
                     (let (s/1934 =a s/1933)
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(639):22938-23058
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(639):22938-23058
                           (apply (field_imm 27 (global Stdlib!))
                             "constructor "
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(639):22955-23058
                               (apply (field_imm 27 (global Stdlib!)) s/1934
                                 " is never used to build values.\n(However, this constructor appears in patterns.)"))))))
                    case int 2:
                     (let (s/1935 =a s/1933)
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(643):23118-23229
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(643):23118-23229
                           (apply (field_imm 27 (global Stdlib!))
                             "constructor "
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(643):23135-23229
                               (apply (field_imm 27 (global Stdlib!)) s/1935
                                 " is never used to build values.\nIts type is exported as a private type."))))))))
                case tag 21:
                 (let
                   (complaint/1938 =a (field_imm 2 param/2000)
                    is_exception/1937 =a (field_imm 1 param/2000)
                    s/1936 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(647):23288-23793
                     (let
                       (kind/1991 =
                          (if is_exception/1937
                            (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(648):23327-23338
                              "exception")
                            (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(648):23344-23367
                              "extension constructor")))
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(649):23376-23793
                         (let
                           (name/1992 =
                              (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(649):23387-23401
                                (apply (field_imm 27 (global Stdlib!))
                                  kind/1991
                                  (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(649):23394-23401
                                    (apply (field_imm 27 (global Stdlib!))
                                      " " s/1936)))))
                           (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(650):23410-23793
                             (switch* complaint/1938
                              case int 0:
                               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(651):23456-23472
                                 (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(651):23456-23472
                                   (apply (field_imm 27 (global Stdlib!))
                                     "unused " name/1992)))
                              case int 1:
                               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(653):23511-23624
                                 (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(653):23511-23624
                                   (apply (field_imm 27 (global Stdlib!))
                                     name/1992
                                     " is never used to build values.\n(However, this constructor appears in patterns.)")))
                              case int 2:
                               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(657):23669-23784
                                 (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(657):23669-23784
                                   (apply (field_imm 27 (global Stdlib!))
                                     name/1992
                                     " is never used to build values.\nIt is exported or rebound as a private extension."))))))))))
                case tag 22:
                 (let
                   (slist/1942 =a (field_imm 1 param/2000)
                    ty/1939 =a (field_imm 0 param/2000))
                   (catch
                     (if slist/1942
                       (let (*match*/3694 =a (field_imm 1 slist/1942))
                         (if *match*/3694 (exit 48)
                           (let (*match*/3695 =a (field_imm 2 param/2000))
                             (if *match*/3695 (exit 48)
                               (let (nm/1940 =a (field_imm 0 slist/1942))
                                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(664):23891-24045
                                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(664):23891-24045
                                     (apply (field_imm 27 (global Stdlib!))
                                       nm/1940
                                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(664):23896-24045
                                         (apply
                                           (field_imm 27 (global Stdlib!))
                                           " was selected from type "
                                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(664):23925-24045
                                             (apply
                                               (field_imm 27
                                                 (global Stdlib!))
                                               ty/1939
                                               ".\nIt is not visible in the current scope, and will not \nbe selected if the type becomes unknown."))))))))))))
                       (exit 48))
                    with (48)
                     (let (*match*/3696 =a (field_imm 2 param/2000))
                       (if *match*/3696
                         (let (ty/1941 =a ty/1939)
                           (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(669):24147-24351
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(669):24147-24351
                               (apply (field_imm 27 (global Stdlib!))
                                 "this record of type "
                                 (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(669):24171-24351
                                   (apply (field_imm 27 (global Stdlib!))
                                     ty/1941
                                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(669):24175-24351
                                       (apply (field_imm 27 (global Stdlib!))
                                         " contains fields that are \nnot visible in the current scope: "
                                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(671):24257-24351
                                           (apply
                                             (field_imm 27 (global Stdlib!))
                                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(671):24257-24280
                                               (apply
                                                 (field_imm 6
                                                   (global Stdlib__String!))
                                                 " " slist/1942))
                                             ".\nThey will not be selected if the type becomes unknown."))))))))))
                         (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(667):24085-24097
                           (raise
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(667):24085-24097
                               (makeblock 0 (global Assert_failure/28!)
                                 [0: "lib/warnings.ml" 667 39]))))))))
                case tag 23:
                 (let (_slist/1946 =a (field_imm 0 param/2000))
                   (catch
                     (if _slist/1946
                       (let (*match*/3697 =a (field_imm 1 _slist/1946))
                         (if *match*/3697 (exit 49)
                           (let (*match*/3698 =a (field_imm 2 param/2000))
                             (if *match*/3698 (exit 49)
                               (let
                                 (expansion/1945 =a (field_imm 3 param/2000)
                                  tl/1944 =a (field_imm 1 param/2000)
                                  s/1943 =a (field_imm 0 _slist/1946))
                                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(674):24408-24560
                                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(674):24408-24560
                                     (apply (field_imm 27 (global Stdlib!))
                                       s/1943
                                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(674):24412-24560
                                         (apply
                                           (field_imm 27 (global Stdlib!))
                                           " belongs to several types: "
                                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(674):24444-24560
                                             (apply
                                               (field_imm 27
                                                 (global Stdlib!))
                                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(674):24444-24464
                                                 (apply
                                                   (field_imm 6
                                                     (global Stdlib__String!))
                                                   " " tl/1944))
                                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(675):24473-24560
                                                 (apply
                                                   (field_imm 27
                                                     (global Stdlib!))
                                                   "\nThe first one was selected. Please disambiguate if this is wrong."
                                                   expansion/1945))))))))))))))
                       (exit 49))
                    with (49)
                     (let
                       (*match*/3699 =a (field_imm 2 param/2000)
                        tl/1947 =a (field_imm 1 param/2000))
                       (if *match*/3699
                         (let (expansion/1948 =a (field_imm 3 param/2000))
                           (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(679):24672-24843
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(679):24672-24843
                               (apply (field_imm 27 (global Stdlib!))
                                 "these field labels belong to several types: "
                                 (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(680):24727-24843
                                   (apply (field_imm 27 (global Stdlib!))
                                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(680):24727-24747
                                       (apply
                                         (field_imm 6
                                           (global Stdlib__String!))
                                         " " tl/1947))
                                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(681):24756-24843
                                       (apply (field_imm 27 (global Stdlib!))
                                         "\nThe first one was selected. Please disambiguate if this is wrong."
                                         expansion/1948))))))))
                         (let (*match*/3700 =a (field_imm 3 param/2000))
                           (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(677):24601-24613
                             (raise
                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(677):24601-24613
                                 (makeblock 0 (global Assert_failure/28!)
                                   [0: "lib/warnings.ml" 677 40])))))))))
                case tag 24:
                 (let (s/1949 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(684):24878-24999
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(684):24878-24999
                       (apply (field_imm 27 (global Stdlib!)) "this use of "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(684):24895-24999
                           (apply (field_imm 27 (global Stdlib!)) s/1949
                             " relies on type-directed disambiguation,\nit will not compile with OCaml 4.00 or earlier."))))))
                case tag 25:
                 (let (s/1950 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(687):25033-25071
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(687):25033-25071
                       (apply (field_imm 27 (global Stdlib!)) "the label "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(687):25048-25071
                           (apply (field_imm 27 (global Stdlib!)) s/1950
                             " is not optional."))))))
                case tag 26:
                 (let
                   (s/1952 =a (field_imm 1 param/2000)
                    kind/1951 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(689):25118-25228
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(689):25118-25228
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "this open statement shadows the "
                           [2:
                            0
                            [11:
                             " identifier "
                             [2: 0 [11: " (which is later used)" 0]]]]]
                          "this open statement shadows the %s identifier %s (which is later used)"]
                         kind/1951 s/1952))))
                case tag 27:
                 (let
                   (s/1954 =a (field_imm 1 param/2000)
                    kind/1953 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(693):25282-25381
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(693):25282-25381
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "this open statement shadows the "
                           [2:
                            0
                            [12: ' ' [2: 0 [11: " (which is later used)" 0]]]]]
                          "this open statement shadows the %s %s (which is later used)"]
                         kind/1953 s/1954))))
                case tag 28:
                 (let
                   (s/1956 =a (field_imm 1 param/2000)
                    var/1955 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(697):25421-25480
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(697):25421-25480
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "illegal environment variable "
                           [2: 0 [11: " : " [2: 0 0]]]]
                          "illegal environment variable %s : %s"]
                         var/1955 s/1956))))
                case tag 29:
                 (let
                   (s/1958 =a (field_imm 1 param/2000)
                    a/1957 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(699):25519-25579
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(699):25519-25579
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "illegal payload for attribute '"
                           [2: 0 [11: "'.\n" [2: 0 0]]]]
                          "illegal payload for attribute '%s'.\n%s"]
                         a/1957 s/1958))))
                case tag 30:
                 (let (sl/1959 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(701):25626-25770
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(701):25626-25770
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "implicit elimination of optional argument"
                           [2: 0 [12: ' ' [2: 0 0]]]]
                          "implicit elimination of optional argument%s %s"]
                         (if
                           (==
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(702):25702-25716
                               (apply (field_imm 0 (global Stdlib__List!))
                                 sl/1959))
                             1)
                           (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(702):25726-25728
                             "")
                           (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(702):25734-25737
                             "s"))
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(703):25747-25770
                           (apply (field_imm 6 (global Stdlib__String!)) ", "
                             sl/1959))))))
                case tag 31:
                 (let
                   (*match*/3701 =a (field_imm 1 param/2000)
                    name/1960 =a (field_imm 0 param/2000))
                   (if *match*/3701
                     (let
                       (name/1961 =a name/1960
                        msg/1962 =a (field_imm 0 *match*/3701))
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(707):25900-25995
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(707):25900-25995
                           (apply (field_imm 3 (global Stdlib__Printf!))
                             [0:
                              [11:
                               "no valid cmi file was found in path for module "
                               [2: 0 [11: ". " [2: 0 0]]]]
                              "no valid cmi file was found in path for module %s. %s"]
                             name/1961 msg/1962))))
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(705):25808-25858
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(705):25808-25858
                         (apply (field_imm 27 (global Stdlib!))
                           "no cmi file was found in path for module "
                           name/1960)))))
                case tag 32:
                 (let (unattached/1963 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(711):26041-26149
                     (if unattached/1963
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(711):26060-26104
                         "unattached documentation comment (ignored)")
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(712):26116-26149
                         "ambiguous documentation comment"))))
                case tag 33:
                 (let (b/1964 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(714):26192-26271
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(714):26192-26271
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0: [11: "expected " [2: 0 0]] "expected %s"]
                         (if b/1964
                           (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(715):26240-26250
                             "tailcall")
                           (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(715):26256-26270
                             "non-tailcall"))))))
                case tag 34:
                 (let (attr_name/1965 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(727):26784-26857
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(727):26784-26857
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "the "
                           [3:
                            0
                            [11:
                             " attribute cannot appear in this context" 0]]]
                          "the %S attribute cannot appear in this context"]
                         attr_name/1965))))
                case tag 35:
                 (let (attr_name/1966 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(729):26902-27007
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(729):26902-27007
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "the "
                           [3:
                            0
                            [11:
                             " attribute is used more than once on this expression"
                             0]]]
                          "the %S attribute is used more than once on this expression"]
                         attr_name/1966))))
                case tag 36:
                 (let (reason/1967 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(733):27048-27089
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(733):27048-27089
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11: "Cannot inline: " [2: 0 0]]
                          "Cannot inline: %s"]
                         reason/1967))))
                case tag 37:
                 (let (vars/1968 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(735):27139-27900
                     (let (ref_manual/1994 = [0: 13 [0: 5 [0: 4 0]]])
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(736):27203-27900
                         (let
                           (vars/1995 =
                              (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(736):27214-27243
                                (apply (field_imm 58 (global Stdlib__List!))
                                  (field_imm 9 (global Stdlib__String!))
                                  vars/1968)))
                           (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(737):27253-27900
                             (let
                               (vars_explanation/1996 =
                                  (let
                                    (in_different_places/1997 =
                                       "in different places in different or-pattern alternatives")
                                    (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(741):27398-27646
                                      (if vars/1995
                                        (let
                                          (x/1998 =a (field_imm 0 vars/1995))
                                          (catch
                                            (let
                                              (*match*/3684 =a
                                                 (field_imm 1 vars/1995))
                                              (if *match*/3684 (exit 41)
                                                (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(743):27460-27511
                                                  (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(743):27460-27511
                                                    (apply
                                                      (field_imm 27
                                                        (global Stdlib!))
                                                      "variable "
                                                      (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(743):27474-27511
                                                        (apply
                                                          (field_imm 27
                                                            (global Stdlib!))
                                                          x/1998
                                                          (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(743):27478-27511
                                                            (apply
                                                              (field_imm 27
                                                                (global Stdlib!))
                                                              " appears "
                                                              in_different_places/1997)))))))))
                                           with (41)
                                            (let
                                              (*match*/3685 =a
                                                 (field_imm 1 vars/1995))
                                              (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(745):27542-27646
                                                (let
                                                  (vars/1999 =
                                                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(745):27553-27576
                                                       (apply
                                                         (field_imm 6
                                                           (global Stdlib__String!))
                                                         ", " vars/1995)))
                                                  (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(746):27592-27646
                                                    (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(746):27592-27646
                                                      (apply
                                                        (field_imm 27
                                                          (global Stdlib!))
                                                        "variables "
                                                        (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(746):27607-27646
                                                          (apply
                                                            (field_imm 27
                                                              (global Stdlib!))
                                                            vars/1999
                                                            (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(746):27614-27646
                                                              (apply
                                                                (field_imm 27
                                                                  (global Stdlib!))
                                                                " appear "
                                                                in_different_places/1997))))))))))))
                                        (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(742):27430-27442
                                          (raise
                                            (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(742):27430-27442
                                              (makeblock 0
                                                (global Assert_failure/28!)
                                                [0: "lib/warnings.ml" 742 16]))))))))
                               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(748):27662-27900
                                 (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(748):27662-27900
                                   (apply
                                     (field_imm 142 (global Stdlib__Format!))
                                     [0:
                                      [11:
                                       "Ambiguous or-pattern variables under guard;\n"
                                       [2:
                                        0
                                        [11:
                                         ".\nOnly the first match will be used to evaluate the guard expression.\n"
                                         [15: 0]]]]
                                      "Ambiguous or-pattern variables under guard;\n%s.\nOnly the first match will be used to evaluate the guard expression.\n%a"]
                                     vars_explanation/1996
                                     (field_imm 68
                                       (global Ocaml_ocaml_types__Misc!))
                                     ref_manual/1994))))))))))
                case tag 38:
                 (let (name/1969 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(755):27931-28064
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(755):27931-28064
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "no cmx file was found in path for module "
                           [2:
                            0
                            [11:
                             ", and its interface was not compiled with -opaque"
                             0]]]
                          "no cmx file was found in path for module %s, and its interface was not compiled with -opaque"]
                         name/1969))))
                case tag 39:
                 (let (s/1970 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(762):28313-28339
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(762):28313-28339
                       (apply (field_imm 27 (global Stdlib!))
                         "unused module "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(762):28332-28339
                           (apply (field_imm 27 (global Stdlib!)) s/1970 "."))))))
                case tag 40:
                 (let (t/1971 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(764):28383-28963
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(764):28383-28963
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "This primitive declaration uses type "
                           [2:
                            0
                            [11:
                             ", whose representation\nmay be either boxed or unboxed. Without an annotation to indicate\nwhich representation is intended, the boxed representation has been\nselected by default. This default choice may change in future\nversions of the compiler, breaking the primitive implementation.\nYou should explicitly annotate the declaration of "
                             [2:
                              0
                              [11:
                               "\nwith ["
                               [17:
                                5
                                [11:
                                 "boxed] or ["
                                 [17:
                                  5
                                  [11:
                                   "unboxed], so that its external interface\nremains stable in the future."
                                   0]]]]]]]]]
                          "This primitive declaration uses type %s, whose representation\nmay be either boxed or unboxed. Without an annotation to indicate\nwhich representation is intended, the boxed representation has been\nselected by default. This default choice may change in future\nversions of the compiler, breaking the primitive implementation.\nYou should explicitly annotate the declaration of %s\nwith [@@boxed] or [@@unboxed], so that its external interface\nremains stable in the future."]
                         t/1971 t/1971))))
                case tag 41:
                 (let (s/1972 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(776):29103-29447
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(776):29103-29447
                       (apply (field_imm 27 (global Stdlib!))
                         "The printed interface differs from the inferred interface.\nThe inferred interface contained items which could not be printed\nproperly due to name collisions between identifiers."
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(779):29310-29447
                           (apply (field_imm 27 (global Stdlib!)) s/1972
                             "\nBeware that this warning is purely informational and will not catch\nall instances of erroneous printed interface."))))))
                case tag 42:
                 (let (name/1973 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(785):29596-29775
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(785):29596-29775
                       (apply (field_imm 3 (global Stdlib__Printf!))
                         [0:
                          [11:
                           "This type declaration is defining a new '()' constructor\nwhich shadows the existing one.\nHint: Did you mean 'type "
                           [2: 0 [11: " = unit'?" 0]]]
                          "This type declaration is defining a new '()' constructor\nwhich shadows the existing one.\nHint: Did you mean 'type %s = unit'?"]
                         name/1973))))
                case tag 43:
                 (let (s/1929 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(633):22607-22632
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(633):22607-22632
                       (apply (field_imm 27 (global Stdlib!)) "unused open! "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(633):22625-22632
                           (apply (field_imm 27 (global Stdlib!)) s/1929 "."))))))
                case tag 44:
                 (let (s/1974 =a (field_imm 0 param/2000))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(789):29810-29847
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(789):29810-29847
                       (apply (field_imm 27 (global Stdlib!))
                         "unused functor parameter "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(789):29840-29847
                           (apply (field_imm 27 (global Stdlib!)) s/1974 "."))))))
                case tag 45:
                 (let
                   (*match*/3702 =a (field_imm 1 param/2000)
                    s/1975 =a (field_imm 0 param/2000))
                   (switch* *match*/3702
                    case int 0:
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(794):30093-30125
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(794):30093-30125
                         (apply (field_imm 27 (global Stdlib!))
                           "unused record field "
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(794):30118-30125
                             (apply (field_imm 27 (global Stdlib!)) s/1975
                               ".")))))
                    case int 1:
                     (let (s/1976 =a s/1975)
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(796):30166-30279
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(796):30166-30279
                           (apply (field_imm 27 (global Stdlib!))
                             "record field "
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(796):30184-30279
                               (apply (field_imm 27 (global Stdlib!)) s/1976
                                 " is never read.\n(However, this field is used to build or mutate values.)"))))))
                    case int 2:
                     (let (s/1977 =a s/1975)
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(800):30323-30379
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(800):30323-30379
                           (apply (field_imm 27 (global Stdlib!))
                             "mutable record field "
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(800):30349-30379
                               (apply (field_imm 27 (global Stdlib!)) s/1977
                                 " is never mutated.")))))))))
              with (50)
               (let (v/3687 =a (field_imm 0 param/2000)) (exit 42 v/3687)))
            with (42 v/1921)
             (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(622):22069-22097
               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(622):22069-22097
                 (apply (field_imm 27 (global Stdlib!)) "unused variable "
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(622):22090-22097
                     (apply (field_imm 27 (global Stdlib!)) v/1921 "."))))))))
     nerrors/2001 = (makemutable 0 (int) 0)
     id_name/2007 =
       (function w/2009
         (funct-body Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(829)<ghost>:31300-31495
           (before Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(830):31306-31495
             (let
               (n/2010 =[int]
                  (after Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(830):31314-31322
                    (apply number/425 w/2009)))
               (before Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(831):31328-31495
                 (let
                   (*match*/3705 =
                      (after Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(831):31334-31392
                        (apply (field_imm 39 (global Stdlib__List!))
                          (function param/2012 : int
                            (funct-body Ocaml_ocaml_types__Warnings.id_name.(fun) lib/warnings.ml(831):31348-31379
                              (let
                                (*match*/3704 =a (field_imm 2 param/2012)
                                 *match*/3703 =a (field_imm 1 param/2012)
                                 number/2011 =a (field_int 0 param/2012))
                                (before Ocaml_ocaml_types__Warnings.id_name.(fun) lib/warnings.ml(831):31368-31378
                                  (== number/2011 n/2010)))))
                          descriptions/433)))
                   (catch
                     (if *match*/3705
                       (let
                         (*match*/3706 =a (field_imm 0 *match*/3705)
                          *match*/3708 =a (field_imm 1 *match*/3706))
                         (if *match*/3708
                           (let
                             (*match*/3710 =a (field_imm 2 *match*/3706)
                              *match*/3709 =a (field_imm 1 *match*/3708)
                              s/2013 =a (field_imm 0 *match*/3708)
                              *match*/3707 =a (field_int 0 *match*/3706))
                             (before Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(833):31436-31464
                               (after Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(833):31436-31464
                                 (apply
                                   (field_imm 3 (global Stdlib__Printf!))
                                   [0:
                                    [4: 0 0 0 [11: " [" [2: 0 [12: ']' 0]]]]
                                    "%d [%s]"]
                                   n/2010 s/2013))))
                           (exit 51)))
                       (exit 51))
                    with (51)
                     (before Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(835):31480-31495
                       (after Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(835):31480-31495
                         (apply (field_imm 32 (global Stdlib!)) n/2010))))))))))
     report/2014 =
       (function w/2016
         (funct-body Ocaml_ocaml_types__Warnings.report lib/warnings.ml(837)<ghost>:31508-31742
           (before Ocaml_ocaml_types__Warnings.report lib/warnings.ml(838):31514-31742
             (let
               (*match*/3712 =
                  (after Ocaml_ocaml_types__Warnings.report lib/warnings.ml(838):31520-31531
                    (apply is_active/1249 w/2016)))
               (if *match*/3712
                 (before Ocaml_ocaml_types__Warnings.report lib/warnings.ml(841):31577-31742
                   (seq
                     (if
                       (after Ocaml_ocaml_types__Warnings.report lib/warnings.ml(841):31580-31590
                         (apply is_error/1252 w/2016))
                       (before Ocaml_ocaml_types__Warnings.report lib/warnings.ml(841):31596-31608
                         (+:=1 nerrors/2001))
                       0)
                     (before Ocaml_ocaml_types__Warnings.report lib/warnings.ml(842):31615-31742
                       (makeblock 0 -891636250
                         (makeblock 0 (*,*,int,*)
                           (after Ocaml_ocaml_types__Warnings.report lib/warnings.ml(843):31637-31646
                             (apply id_name/2007 w/2016))
                           (after Ocaml_ocaml_types__Warnings.report lib/warnings.ml(844):31667-31676
                             (apply message/1902 w/2016))
                           (after Ocaml_ocaml_types__Warnings.report lib/warnings.ml(845):31698-31708
                             (apply is_error/1252 w/2016))
                           0)))))
                 (before Ocaml_ocaml_types__Warnings.report lib/warnings.ml(839):31550-31559
                   -1008610421))))))
     report_alert/2017 =
       (function alert/2019
         (funct-body Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(849)<ghost>:31761-32579
           (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(850):31781-32579
             (let
               (*match*/3714 =
                  (after Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(850):31787-31808
                    (apply alert_is_active/1255 alert/2019)))
               (if *match*/3714
                 (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(853):31855-32579
                   (let
                     (is_error/2020 =[int]
                        (after Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(853):31870-31890
                          (apply alert_is_error/1330 alert/2019)))
                     (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(854):31900-32579
                       (seq
                         (if is_error/2020
                           (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(854):31917-31929
                             (+:=1 nerrors/2001))
                           0)
                         (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(855):31937-32579
                           (let
                             (message/2021 =
                                (after Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(855):31951-31983
                                  (apply
                                    (field_imm 60
                                      (global Ocaml_ocaml_types__Misc!))
                                    (field_imm 1 alert/2019))))
                             (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(862):32237-32579
                               (let
                                 (sub_locs/2022 =
                                    (if
                                      (&&
                                        (not
                                          (field_int 2
                                            (field_imm 2 alert/2019)))
                                        (not
                                          (field_int 2
                                            (field_imm 3 alert/2019))))
                                      (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(864):32329-32424
                                        (makeblock 0
                                          (makeblock 0
                                            (field_imm 2 alert/2019)
                                            "Definition")
                                          (makeblock 0
                                            (makeblock 0
                                              (field_imm 3 alert/2019)
                                              "Expected signature")
                                            0)))
                                      (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(869):32448-32450
                                        0)))
                                 (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(871):32466-32579
                                   (makeblock 0 -891636250
                                     (makeblock 0 (*,*,int,*)
                                       (field_imm 0 alert/2019) message/2021
                                       is_error/2020 sub_locs/2022)))))))))))
                 (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(851):31827-31836
                   -1008610421))))))
     Errors/2023 =
       (makeblock 248 "Ocaml_ocaml_types.Warnings.Errors"
         (caml_fresh_oo_id 0))
     reset_fatal/2024 =
       (function param/2026[int] : int
         (funct-body Ocaml_ocaml_types__Warnings.reset_fatal lib/warnings.ml(881)<ghost>:32615-32634
           (before Ocaml_ocaml_types__Warnings.reset_fatal lib/warnings.ml(882):32622-32634
             (setfield_imm 0 nerrors/2001 0))))
     check_fatal/2027 =
       (function param/2029[int] : int
         (funct-body Ocaml_ocaml_types__Warnings.check_fatal lib/warnings.ml(884)<ghost>:32652-32727
           (before Ocaml_ocaml_types__Warnings.check_fatal lib/warnings.ml(885):32659-32727
             (if (> (field_int 0 nerrors/2001) 0)
               (before Ocaml_ocaml_types__Warnings.check_fatal lib/warnings.ml(885):32680-32727
                 (seq (setfield_imm 0 nerrors/2001 0)
                   (before Ocaml_ocaml_types__Warnings.check_fatal lib/warnings.ml(887):32708-32720
                     (raise
                       (after Ocaml_ocaml_types__Warnings.check_fatal lib/warnings.ml(887):32708-32720
                         Errors/2023)))))
               0))))
     help_warnings/2030 =
       (function param/2032[int]
         (funct-body Ocaml_ocaml_types__Warnings.help_warnings lib/warnings.ml(896)<ghost>:32955-32968
           (before Ocaml_ocaml_types__Warnings.help_warnings lib/warnings.ml(897):32962-32968
             (after Ocaml_ocaml_types__Warnings.help_warnings lib/warnings.ml(897):32962-32968
               (apply (field_imm 98 (global Stdlib!)) 0))))))
    (pseudo <unknown location>
      (makeblock 0 number/425 last_warning_number/428 descriptions/433
        name_to_number/434 letter/587 current/1188 disabled/1239
        without_warnings/1240 backup/1243 restore/1246 is_active/1249
        is_error/1252 alert_is_active/1255 alert_is_error/1330
        with_state/1336 mk_lazy/1343 set_alert/1347 parse_alert_option/1357
        ghost_loc_in_file/1402 letter_alert/1406 parse_warnings/1834
        parse_opt/1860 parse_options/1892 defaults_w/1899
        defaults_warn_error/1900 default_disabled_alerts/1901 message/1902
        nerrors/2001 id_name/2007 report/2014 report_alert/2017 Errors/2023
        reset_fatal/2024 check_fatal/2027 help_warnings/2030))))
(setglobal Ocaml_ocaml_types__Warnings!
  (let
    (number/425 =
       (function param/427 : int
         (funct-body Ocaml_ocaml_types__Warnings.number lib/warnings.ml(121):5799-8091
           (switch* param/427
            case int 0:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(122):5829-5830
               1)
            case int 1:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(123):5854-5855
               2)
            case int 2:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(125):5916-5917
               5)
            case int 3:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(130):6062-6064
               10)
            case int 4:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(131):6087-6089
               11)
            case int 5:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(132):6114-6116
               12)
            case int 6:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(134):6181-6183
               14)
            case int 7:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(136):6256-6258
               16)
            case int 8:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(140):6386-6388
               20)
            case int 9:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(141):6419-6421
               21)
            case int 10:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(143):6474-6476
               23)
            case int 11:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(145):6532-6533
               8)
            case int 12:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(148):6646-6648
               28)
            case int 13:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(149):6670-6672
               29)
            case int 14:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(158):6944-6946
               39)
            case int 15:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(171):7370-7372
               52)
            case int 16:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(175):7494-7496
               56)
            case int 17:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(178):7611-7613
               59)
            case int 18:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(181):7706-7708
               62)
            case int 19:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(183):7792-7794
               64)
            case int 20:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(187):7935-7937
               68)
            case int 21:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(189):7982-7984
               70)
            case int 22:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(190):8013-8015
               71)
            case int 23:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(191):8043-8045
               72)
            case int 24:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(192):8089-8091
               73)
            case tag 0:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(124):5879-5880
               4)
            case tag 1:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(126):5942-5943
               6)
            case tag 2:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(127):5969-5970
               7)
            case tag 3:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(128):5994-5995
               8)
            case tag 4:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(129):6034-6035
               9)
            case tag 5:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(133):6153-6155
               13)
            case tag 6:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(135):6217-6219
               15)
            case tag 7:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(137):6294-6296
               17)
            case tag 8:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(138):6320-6322
               18)
            case tag 9:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(139):6353-6355
               19)
            case tag 10:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(142):6444-6446
               22)
            case tag 11:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(144):6502-6504
               24)
            case tag 12:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(146):6574-6576
               26)
            case tag 13:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(147):6604-6606
               27)
            case tag 14:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(150):6704-6706
               30)
            case tag 15:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(151):6741-6743
               32)
            case tag 16:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(152):6765-6767
               33)
            case tag 17:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(153):6801-6803
               34)
            case tag 18:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(154):6830-6832
               35)
            case tag 19:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(155):6858-6860
               36)
            case tag 20:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(156):6889-6891
               37)
            case tag 21:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(157):6918-6920
               38)
            case tag 22:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(159):6974-6976
               40)
            case tag 23:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(160):7001-7003
               41)
            case tag 24:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(161):7032-7034
               42)
            case tag 25:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(162):7062-7064
               43)
            case tag 26:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(163):7097-7099
               44)
            case tag 27:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(164):7139-7141
               45)
            case tag 28:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(165):7168-7170
               46)
            case tag 29:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(166):7198-7200
               47)
            case tag 30:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(167):7240-7242
               48)
            case tag 31:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(168):7264-7266
               49)
            case tag 32:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(169):7297-7299
               50)
            case tag 33:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(170):7336-7338
               51)
            case tag 34:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(172):7402-7404
               53)
            case tag 35:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(173):7435-7437
               54)
            case tag 36:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(174):7467-7469
               55)
            case tag 37:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(176):7537-7539
               57)
            case tag 38:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(177):7561-7563
               58)
            case tag 39:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(179):7637-7639
               60)
            case tag 40:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(180):7677-7679
               61)
            case tag 41:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(182):7746-7748
               63)
            case tag 42:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(184):7820-7822
               65)
            case tag 43:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(185):7849-7851
               66)
            case tag 44:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(186):7886-7888
               67)
            case tag 45:
             (before Ocaml_ocaml_types__Warnings.number lib/warnings.ml(188):7960-7962
               69))))
     last_warning_number/428 =[int] 73
     descriptions/433 = 0
     name_to_number/434 =
       (let
         (h/435 =
            (after Ocaml_ocaml_types__Warnings.name_to_number lib/warnings.ml(219):8916-8950
              (apply (field_imm 0 (global Stdlib__Hashtbl!)) 0
                last_warning_number/428)))
         (before Ocaml_ocaml_types__Warnings.name_to_number lib/warnings.ml(220):8956-9106
           (seq
             (after Ocaml_ocaml_types__Warnings.name_to_number lib/warnings.ml(220):8956-9073
               (apply (field_imm 17 (global Stdlib__List!))
                 (function param/585 : int
                   (funct-body Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(220):8966-9060
                     (let
                       (names/583 =a (field_imm 1 param/585)
                        number/582 =a (field_int 0 param/585))
                       (before Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(221):8999-9054
                         (after Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(221):8999-9054
                           (apply (field_imm 17 (global Stdlib__List!))
                             (function name/584 : int
                               (funct-body Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(221):9009-9048
                                 (before Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(221):9022-9047
                                   (after Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(221):9022-9047
                                     (apply
                                       (field_imm 4
                                         (global Stdlib__Hashtbl!))
                                       h/435 name/584 number/582)))))
                             names/583))))))
                 descriptions/433))
             (before Ocaml_ocaml_types__Warnings.name_to_number lib/warnings.ml(223):9077-9106
               (function s/586
                 (funct-body Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(223):9077-9106
                   (before Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(223):9086-9106
                     (after Ocaml_ocaml_types__Warnings.name_to_number.(fun) lib/warnings.ml(223):9086-9106
                       (apply (field_imm 6 (global Stdlib__Hashtbl!)) h/435
                         s/586)))))))))
     letter/587 =
       (function param/591[int]
         (funct-body Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(227):9186-9773
           (let (switcher/3613 =a (-97+ param/591))
             (if (isout 25 switcher/3613)
               (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(256):9761-9773
                 (raise
                   (after Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(256):9761-9773
                     (makeblock 0 (global Assert_failure/28!)
                       [0: "lib/warnings.ml" 256 9]))))
               (switch* switcher/3613
                case int 0:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(229):9211-9300
                   (letrec
                     (loop/589
                        (function i/590[int]
                          (funct-body Ocaml_ocaml_types__Warnings.letter.loop lib/warnings.ml(229)<ghost>:9224-9267
                            (before Ocaml_ocaml_types__Warnings.letter.loop lib/warnings.ml(229):9228-9267
                              (if (== i/590 0)
                                (before Ocaml_ocaml_types__Warnings.letter.loop lib/warnings.ml(229):9242-9244
                                  0)
                                (before Ocaml_ocaml_types__Warnings.letter.loop lib/warnings.ml(229):9250-9267
                                  (makeblock 0 (int,*) i/590
                                    (after Ocaml_ocaml_types__Warnings.letter.loop lib/warnings.ml(229):9255-9267
                                      (apply loop/589 (- i/590 1))))))))))
                     (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(230):9276-9300
                       (after Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(230):9276-9300
                         (apply loop/589 last_warning_number/428)))))
                case int 1:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(231):9312-9314
                   0)
                case int 2:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(232):9326-9332
                   [0: 1 [0: 2 0]])
                case int 3:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(233):9344-9347
                   [0: 3 0])
                case int 4:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(234):9359-9362
                   [0: 4 0])
                case int 5:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(235):9374-9377
                   [0: 5 0])
                case int 6:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(236):9389-9391
                   0)
                case int 7:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(237):9403-9405
                   0)
                case int 8:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(238):9417-9419
                   0)
                case int 9:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(239):9431-9433
                   0)
                case int 10:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(240):9445-9477
                   [0:
                    32
                    [0: 33 [0: 34 [0: 35 [0: 36 [0: 37 [0: 38 [0: 39 0]]]]]]]])
                case int 11:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(241):9489-9492
                   [0: 6 0])
                case int 12:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(242):9504-9507
                   [0: 7 0])
                case int 13:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(243):9519-9521
                   0)
                case int 14:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(244):9533-9535
                   0)
                case int 15:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(245):9547-9550
                   [0: 8 0])
                case int 16:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(246):9562-9564
                   0)
                case int 17:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(247):9576-9579
                   [0: 9 0])
                case int 18:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(248):9591-9595
                   [0: 10 0])
                case int 19:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(249):9607-9609
                   0)
                case int 20:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(250):9621-9629
                   [0: 11 [0: 12 0]])
                case int 21:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(251):9641-9645
                   [0: 13 0])
                case int 22:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(252):9657-9659
                   0)
                case int 23:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(253):9671-9719
                   [0:
                    14
                    [0:
                     15
                     [0:
                      16
                      [0:
                       17
                       [0:
                        18
                        [0:
                         19 [0: 20 [0: 21 [0: 22 [0: 23 [0: 24 [0: 30 0]]]]]]]]]]]])
                case int 24:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(254):9731-9735
                   [0: 26 0])
                case int 25:
                 (before Ocaml_ocaml_types__Warnings.letter lib/warnings.ml(255):9747-9751
                   [0: 27 0]))))))
     current/1188 =
       (makemutable 0
         (makeblock 0
           (after Ocaml_ocaml_types__Warnings.current lib/warnings.ml(269):10039-10080
             (caml_make_vect (+ last_warning_number/428 1) 1))
           (after Ocaml_ocaml_types__Warnings.current lib/warnings.ml(270):10096-10138
             (caml_make_vect (+ last_warning_number/428 1) 0))
           (makeblock 0 (*,int)
             (field_imm 16
               (field_imm 63
                 (field_imm 3
                   (field_imm 13 (global Ocaml_ocaml_types__Misc!)))))
             0)
           (makeblock 0 (*,int)
             (field_imm 16
               (field_imm 63
                 (field_imm 3
                   (field_imm 13 (global Ocaml_ocaml_types__Misc!)))))
             1)))
     disabled/1239 = (makemutable 0 (int) 0)
     without_warnings/1240 =
       (function f/1242
         (funct-body Ocaml_ocaml_types__Warnings.without_warnings lib/warnings.ml(277)<ghost>:10322-10372
           (before Ocaml_ocaml_types__Warnings.without_warnings lib/warnings.ml(278):10328-10372
             (after Ocaml_ocaml_types__Warnings.without_warnings lib/warnings.ml(278):10328-10372
               (apply (field_imm 5 (global Ocaml_ocaml_types__Misc!))
                 (makeblock 0 (makeblock 0 (*,int) disabled/1239 1) 0)
                 f/1242)))))
     backup/1243 =
       (function param/1245[int]
         (funct-body Ocaml_ocaml_types__Warnings.backup lib/warnings.ml(280)<ghost>:10385-10398
           (before Ocaml_ocaml_types__Warnings.backup lib/warnings.ml(280):10390-10398
             (field_mut 0 current/1188))))
     restore/1246 =
       (function x/1248 : int
         (funct-body Ocaml_ocaml_types__Warnings.restore lib/warnings.ml(282)<ghost>:10412-10428
           (before Ocaml_ocaml_types__Warnings.restore lib/warnings.ml(282):10416-10428
             (setfield_ptr 0 current/1188 x/1248))))
     is_active/1249 =
       (function x/1251 : int
         (funct-body Ocaml_ocaml_types__Warnings.is_active lib/warnings.ml(284)<ghost>:10444-10495
           (before Ocaml_ocaml_types__Warnings.is_active lib/warnings.ml(285):10450-10495
             (&& (not (field_int 0 disabled/1239))
               (after Ocaml_ocaml_types__Warnings.is_active lib/warnings.ml(285):10467-10495
                 (array.get[int] (field_imm 0 (field_mut 0 current/1188))
                   (after Ocaml_ocaml_types__Warnings.is_active lib/warnings.ml(285):10486-10494
                     (apply number/425 x/1251))))))))
     is_error/1252 =
       (function x/1254 : int
         (funct-body Ocaml_ocaml_types__Warnings.is_error lib/warnings.ml(287)<ghost>:10510-10560
           (before Ocaml_ocaml_types__Warnings.is_error lib/warnings.ml(288):10516-10560
             (&& (not (field_int 0 disabled/1239))
               (after Ocaml_ocaml_types__Warnings.is_error lib/warnings.ml(288):10533-10560
                 (array.get[int] (field_imm 1 (field_mut 0 current/1188))
                   (after Ocaml_ocaml_types__Warnings.is_error lib/warnings.ml(288):10551-10559
                     (apply number/425 x/1254))))))))
     alert_is_active/1255 =
       (function param/1329 : int
         (funct-body Ocaml_ocaml_types__Warnings.alert_is_active lib/warnings.ml(290)<ghost>:10582-10696
           (let (kind/1257 =a (field_imm 0 param/1329))
             (before Ocaml_ocaml_types__Warnings.alert_is_active lib/warnings.ml(291):10596-10696
               (&& (not (field_int 0 disabled/1239))
                 (let
                   (*match*/3618 = (field_imm 2 (field_mut 0 current/1188))
                    pos/1259 =a (field_imm 1 *match*/3618)
                    set/1258 =a (field_imm 0 *match*/3618))
                   (before Ocaml_ocaml_types__Warnings.alert_is_active lib/warnings.ml(293):10655-10696
                     (==
                       (after Ocaml_ocaml_types__Warnings.alert_is_active lib/warnings.ml(293):10655-10690
                         (apply
                           (field_imm 18
                             (field_imm 63
                               (field_imm 3
                                 (field_imm 13
                                   (global Ocaml_ocaml_types__Misc!)))))
                           kind/1257 set/1258))
                       pos/1259))))))))
     alert_is_error/1330 =
       (function param/1335 : int
         (funct-body Ocaml_ocaml_types__Warnings.alert_is_error lib/warnings.ml(295)<ghost>:10717-10837
           (let (kind/1332 =a (field_imm 0 param/1335))
             (before Ocaml_ocaml_types__Warnings.alert_is_error lib/warnings.ml(296):10731-10837
               (&& (not (field_int 0 disabled/1239))
                 (let
                   (*match*/3625 = (field_imm 3 (field_mut 0 current/1188))
                    pos/1334 =a (field_imm 1 *match*/3625)
                    set/1333 =a (field_imm 0 *match*/3625))
                   (before Ocaml_ocaml_types__Warnings.alert_is_error lib/warnings.ml(298):10796-10837
                     (==
                       (after Ocaml_ocaml_types__Warnings.alert_is_error lib/warnings.ml(298):10796-10831
                         (apply
                           (field_imm 18
                             (field_imm 63
                               (field_imm 3
                                 (field_imm 13
                                   (global Ocaml_ocaml_types__Misc!)))))
                           kind/1332 set/1333))
                       pos/1334))))))))
     with_state/1336 =
       (function state/1338 f/1339
         (funct-body Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(300)<ghost>:10854-11002
           (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(301):10866-11002
             (let
               (prev/1340 =
                  (after Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(301):10877-10886
                    (apply backup/1243 0)))
               (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(302):10892-11002
                 (seq
                   (after Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(302):10892-10905
                     (apply restore/1246 state/1338))
                   (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(303):10909-11002
                     (try
                       (let
                         (r/1341 =
                            (after Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(304):10925-10929
                              (apply f/1339 0)))
                         (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(305):10937-10956
                           (seq
                             (after Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(305):10937-10949
                               (apply restore/1246 prev/1340))
                             (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(306):10955-10956
                               r/1341))))
                      with exn/1342
                       (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(308):10975-11002
                         (seq
                           (after Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(308):10975-10987
                             (apply restore/1246 prev/1340))
                           (before Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(309):10993-11002
                             (reraise
                               (after Ocaml_ocaml_types__Warnings.with_state lib/warnings.ml(309):10993-11002
                                 exn/1342)))))))))))))
     mk_lazy/1343 =
       (function f/1345
         (funct-body Ocaml_ocaml_types__Warnings.mk_lazy lib/warnings.ml(311)<ghost>:11016-11074
           (before Ocaml_ocaml_types__Warnings.mk_lazy lib/warnings.ml(312):11022-11074
             (let
               (state/1346 =
                  (after Ocaml_ocaml_types__Warnings.mk_lazy lib/warnings.ml(312):11034-11043
                    (apply backup/1243 0)))
               (before Ocaml_ocaml_types__Warnings.mk_lazy lib/warnings.ml(313):11049-11074
                 (makemutable 246
                   (function param/3629
                     (after Ocaml_ocaml_types__Warnings.mk_lazy lib/warnings.ml(313):11054-11074
                       (apply with_state/1336 state/1346 f/1345)))))))))
     set_alert/1347 =
       (function error/1349[int] enable/1350[int] s/1351 : int
         (funct-body Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(315)<ghost>:11090-11606
           (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(316):11111-11606
             (let
               (upd/1352 =
                  (stringswitch s/1351
                   case "all":
                    (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(319):11161-11203
                      (makeblock 0 (*,int)
                        (field_imm 16
                          (field_imm 63
                            (field_imm 3
                              (field_imm 13
                                (global Ocaml_ocaml_types__Misc!)))))
                        (not enable/1350)))
                   default:
                    (let (s/1353 =a s/1351)
                      (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(321):11223-11484
                        (let
                          (*match*/3638 =
                             (if error/1349
                               (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(322):11264-11287
                                 (field_imm 3 (field_mut 0 current/1188)))
                               (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(322):11293-11310
                                 (field_imm 2 (field_mut 0 current/1188))))
                           pos/1355 =a (field_imm 1 *match*/3638)
                           set/1354 =a (field_imm 0 *match*/3638))
                          (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(324):11330-11484
                            (let
                              (f/1356 =
                                 (if (== enable/1350 pos/1355)
                                   (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(326):11379-11405
                                     (field_imm 3
                                       (field_imm 63
                                         (field_imm 3
                                           (field_imm 13
                                             (global Ocaml_ocaml_types__Misc!))))))
                                   (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(327):11421-11450
                                     (field_imm 19
                                       (field_imm 63
                                         (field_imm 3
                                           (field_imm 13
                                             (global Ocaml_ocaml_types__Misc!))))))))
                              (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(329):11470-11484
                                (makeblock 0 (*,int)
                                  (after Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(329):11471-11478
                                    (apply f/1356 s/1353 set/1354))
                                  pos/1355)))))))))
               (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(331):11492-11606
                 (if error/1349
                   (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(332):11510-11555
                     (setfield_ptr 0 current/1188
                       (let (init/3631 = (field_mut 0 current/1188))
                         (makeblock 0 (field_imm 0 init/3631)
                           (field_imm 1 init/3631) (field_imm 2 init/3631)
                           upd/1352))))
                   (before Ocaml_ocaml_types__Warnings.set_alert lib/warnings.ml(334):11567-11606
                     (setfield_ptr 0 current/1188
                       (let (init/3630 = (field_mut 0 current/1188))
                         (makeblock 0 (field_imm 0 init/3630)
                           (field_imm 1 init/3630) upd/1352
                           (field_imm 3 init/3630)))))))))))
     parse_alert_option/1357 =
       (function s/1359 : int
         (funct-body Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(336)<ghost>:11631-12698
           (before Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(337):11637-12698
             (let (n/1360 =[int] (string.length s/1359))
               (before Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(338):11666-12698
                 (let
                   (id_char/1361 =
                      (function param/1363[int] : int
                        (funct-body Ocaml_ocaml_types__Warnings.parse_alert_option.id_char lib/warnings.ml(338):11680-11763
                          (catch
                            (catch
                              (if (>= param/1363 65)
                                (let (switcher/3642 =a (-91+ param/1363))
                                  (if (isout 5 switcher/3642)
                                    (if (>= switcher/3642 32) (exit 18)
                                      (exit 17))
                                    (if (!= switcher/3642 4) (exit 18)
                                      (exit 17))))
                                (if (>= param/1363 48)
                                  (if (>= param/1363 58) (exit 18) (exit 17))
                                  (if (!= param/1363 39) (exit 18) (exit 17))))
                             with (18)
                              (before Ocaml_ocaml_types__Warnings.parse_alert_option.id_char lib/warnings.ml(340):11758-11763
                                0))
                           with (17)
                            (before Ocaml_ocaml_types__Warnings.parse_alert_option.id_char lib/warnings.ml(339):11742-11746
                              1)))))
                   (before Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(342):11771-12698
                     (letrec
                       (parse_id/1364
                          (function i/1365[int] : int
                            (funct-body Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(342)<ghost>:11788-11850
                              (before Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(343):11796-11850
                                (if
                                  (&& (< i/1365 n/1360)
                                    (after Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(343):11808-11821
                                      (apply id_char/1361
                                        (after Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(343):11816-11821
                                          (string.get s/1359 i/1365)))))
                                  (before Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(343):11827-11843
                                    (after Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(343):11827-11843
                                      (apply parse_id/1364 (+ i/1365 1))))
                                  (before Ocaml_ocaml_types__Warnings.parse_alert_option.parse_id lib/warnings.ml(343):11849-11850
                                    i/1365))))))
                       (before Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(345):11858-12698
                         (letrec
                           (scan/1366
                              (function i/1368[int] : int
                                (funct-body Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(345)<ghost>:11871-12512
                                  (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(346):11879-12512
                                    (if (== i/1368 n/1360)
                                      (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(346):11893-11895
                                        0)
                                      (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(347):11905-12512
                                        (if (== (+ i/1368 1) n/1360)
                                          (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(347):11923-11974
                                            (raise
                                              (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(347):11923-11974
                                                (makeblock 0
                                                  (field_imm 7
                                                    (global Stdlib__Arg!))
                                                  "Ill-formed list of alert settings"))))
                                          (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(348):11984-12512
                                            (let
                                              (*match*/3639 =
                                                 (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(348):11990-11995
                                                   (string.get s/1359 i/1368))
                                               *match*/3640 =
                                                 (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(348):11997-12004
                                                   (string.get s/1359
                                                     (+ i/1368 1))))
                                              (catch
                                                (if (>= *match*/3639 46)
                                                  (if (!= *match*/3639 64)
                                                    (exit 14)
                                                    (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(354):12310-12447
                                                      (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(354):12310-12447
                                                        (apply id/1367
                                                          (function s/1390
                                                            : int
                                                            (funct-body Ocaml_ocaml_types__Warnings.parse_alert_option.scan.(fun) lib/warnings.ml(354):12313-12427
                                                              (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan.(fun) lib/warnings.ml(355):12337-12426
                                                                (seq
                                                                  (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan.(fun) lib/warnings.ml(355):12337-12373
                                                                    (apply
                                                                    set_alert/1347
                                                                    1 1
                                                                    s/1390))
                                                                  (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan.(fun) lib/warnings.ml(356):12389-12426
                                                                    (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan.(fun) lib/warnings.ml(356):12389-12426
                                                                    (apply
                                                                    set_alert/1347
                                                                    0 1
                                                                    s/1390)))))))
                                                          (+ i/1368 1)))))
                                                  (if (>= *match*/3639 43)
                                                    (let
                                                      (switcher/3641 =a
                                                         (-43+ *match*/3639))
                                                      (switch* switcher/3641
                                                       case int 0:
                                                        (if
                                                          (!= *match*/3640
                                                            43)
                                                          (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(350):12096-12144
                                                            (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(350):12096-12144
                                                              (apply id/1367
                                                                (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(350):12099-12136
                                                                  (apply
                                                                    set_alert/1347
                                                                    0 1))
                                                                (+ i/1368 1))))
                                                          (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(349):12030-12077
                                                            (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(349):12030-12077
                                                              (apply id/1367
                                                                (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(349):12033-12069
                                                                  (apply
                                                                    set_alert/1347
                                                                    1 1))
                                                                (+ i/1368 2)))))
                                                       case int 1: (exit 14)
                                                       case int 2:
                                                        (if
                                                          (!= *match*/3640
                                                            45)
                                                          (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(352):12232-12281
                                                            (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(352):12232-12281
                                                              (apply id/1367
                                                                (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(352):12235-12273
                                                                  (apply
                                                                    set_alert/1347
                                                                    0 0))
                                                                (+ i/1368 1))))
                                                          (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(351):12165-12213
                                                            (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(351):12165-12213
                                                              (apply id/1367
                                                                (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(351):12168-12205
                                                                  (apply
                                                                    set_alert/1347
                                                                    1 0))
                                                                (+ i/1368 2)))))))
                                                    (exit 14)))
                                               with (14)
                                                (before Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(358):12461-12512
                                                  (raise
                                                    (after Ocaml_ocaml_types__Warnings.parse_alert_option.scan lib/warnings.ml(358):12461-12512
                                                      (makeblock 0
                                                        (field_imm 7
                                                          (global Stdlib__Arg!))
                                                        "Ill-formed list of alert settings")))))))))))))
                             id/1367
                               (function f/1391 i/1392[int] : int
                                 (funct-body Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(359)<ghost>:12522-12684
                                   (before Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(360):12532-12684
                                     (let
                                       (j/1393 =[int]
                                          (after Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(360):12540-12550
                                            (apply parse_id/1364 i/1392)))
                                       (before Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(361):12558-12684
                                         (seq
                                           (if (== j/1393 i/1392)
                                             (before Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(361):12572-12623
                                               (raise
                                                 (after Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(361):12572-12623
                                                   (makeblock 0
                                                     (field_imm 7
                                                       (global Stdlib__Arg!))
                                                     "Ill-formed list of alert settings"))))
                                             0)
                                           (before Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(362):12629-12684
                                             (let
                                               (id/1394 =
                                                  (after Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(362):12638-12660
                                                    (apply
                                                      (field_imm 15
                                                        (global Stdlib__String!))
                                                      s/1359 i/1392
                                                      (- j/1393 i/1392))))
                                               (before Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(363):12668-12684
                                                 (seq
                                                   (after Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(363):12668-12672
                                                     (apply f/1391 id/1394))
                                                   (before Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(364):12678-12684
                                                     (after Ocaml_ocaml_types__Warnings.parse_alert_option.id lib/warnings.ml(364):12678-12684
                                                       (apply scan/1366
                                                         j/1393))))))))))))))
                           (before Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(366):12692-12698
                             (after Ocaml_ocaml_types__Warnings.parse_alert_option lib/warnings.ml(366):12692-12698
                               (apply scan/1366 0)))))))))))))
     ghost_loc_in_file/1402 =
       (function name/1404
         (funct-body Ocaml_ocaml_types__Warnings.ghost_loc_in_file lib/warnings.ml(377)<ghost>:12882-13001
           (before Ocaml_ocaml_types__Warnings.ghost_loc_in_file lib/warnings.ml(378):12891-13001
             (let
               (pos/1405 =
                  (let (init/3644 = (field_imm 0 (global Stdlib__Lexing!)))
                    (makeblock 0 (*,int,int,int) name/1404
                      (field_int 1 init/3644) (field_int 2 init/3644)
                      (field_int 3 init/3644))))
               (before Ocaml_ocaml_types__Warnings.ghost_loc_in_file lib/warnings.ml(379):12949-13001
                 (makeblock 0 (*,*,int) pos/1405 pos/1405 1))))))
     letter_alert/1406 =
       (function tokens/1408
         (funct-body Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(381)<ghost>:13020-15348
           (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(382):13031-15348
             (let
               (print_warning_char/1409 =
                  (function ppf/1411 c/1412[int] : int
                    (funct-body Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(382)<ghost>:13054-13182
                      (before Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(383):13066-13182
                        (let
                          (lowercase/1413 =[int]
                             (==
                               (after Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(383):13082-13104
                                 (apply (field_imm 2 (global Stdlib__Char!))
                                   c/1412))
                               c/1412))
                          (before Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(384):13116-13182
                            (after Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(384):13116-13182
                              (apply (field_imm 138 (global Stdlib__Format!))
                                ppf/1411 [0: [0: [0: 0]] "%c%c"]
                                (if lowercase/1413
                                  (before Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(385):13167-13170
                                    '-')
                                  (before Ocaml_ocaml_types__Warnings.letter_alert.print_warning_char lib/warnings.ml(385):13176-13179
                                    '+'))
                                c/1412))))))))
               (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(387):13190-15348
                 (let
                   (print_modifier/1764 =
                      (function ppf/1766 param/1767[int] : int
                        (funct-body Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(387)<ghost>:13209-13337
                          (switch* param/1767
                           case int 0:
                            (before Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(390):13315-13337
                              (after Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(390):13315-13337
                                (apply
                                  (field_imm 138 (global Stdlib__Format!))
                                  ppf/1766 [0: [12: '+' 0] "+"])))
                           case int 1:
                            (before Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(389):13279-13301
                              (after Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(389):13279-13301
                                (apply
                                  (field_imm 138 (global Stdlib__Format!))
                                  ppf/1766 [0: [12: '-' 0] "-"])))
                           case int 2:
                            (before Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(388):13241-13263
                              (after Ocaml_ocaml_types__Warnings.letter_alert.print_modifier lib/warnings.ml(388):13241-13263
                                (apply
                                  (field_imm 138 (global Stdlib__Format!))
                                  ppf/1766 [0: [12: '@' 0] "@"])))))))
                   (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(392):13345-15348
                     (let
                       (print_token/1768 =
                          (function ppf/1770 param/1777 : int
                            (funct-body Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(392)<ghost>:13361-13659
                              (switch* param/1777
                               case tag 0:
                                (let
                                  (*match*/3657 =a (field_imm 1 param/1777)
                                   l/1774 =a (field_imm 0 param/1777))
                                  (if *match*/3657
                                    (let
                                      (m/1775 =a (field_imm 0 *match*/3657))
                                      (before Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(397):13566-13610
                                        (after Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(397):13566-13610
                                          (apply
                                            (field_imm 138
                                              (global Stdlib__Format!))
                                            ppf/1770 [0: [15: [0: 0]] "%a%c"]
                                            print_modifier/1764 m/1775
                                            l/1774))))
                                    (let (l/1776 =a l/1774)
                                      (before Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(398):13635-13659
                                        (after Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(398):13635-13659
                                          (apply print_warning_char/1409
                                            ppf/1770 l/1776))))))
                               case tag 1:
                                (let
                                  (m/1773 =a (field_imm 2 param/1777)
                                   b/1772 =a (field_imm 1 param/1777)
                                   a/1771 =a (field_imm 0 param/1777))
                                  (before Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(393):13397-13539
                                    (if (== a/1771 b/1772)
                                      (before Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(394):13421-13465
                                        (after Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(394):13421-13465
                                          (apply
                                            (field_imm 138
                                              (global Stdlib__Format!))
                                            ppf/1770
                                            [0: [15: [4: 0 0 0 0]] "%a%d"]
                                            print_modifier/1764 m/1773
                                            a/1771)))
                                      (before Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(396):13489-13539
                                        (after Ocaml_ocaml_types__Warnings.letter_alert.print_token lib/warnings.ml(396):13489-13539
                                          (apply
                                            (field_imm 138
                                              (global Stdlib__Format!))
                                            ppf/1770
                                            [0:
                                             [15:
                                              [4:
                                               0 0 0 [11: ".." [4: 0 0 0 0]]]]
                                             "%a%d..%d"]
                                            print_modifier/1764 m/1773 a/1771
                                            b/1772))))))))))
                       (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(400):13667-15348
                         (let
                           (consecutive_letters/1778 =
                              (let
                                (commit_chunk/1779 =
                                   (function l/1781 chunk/1782
                                     (funct-body Ocaml_ocaml_types__Warnings.letter_alert.commit_chunk lib/warnings.ml(403)<ghost>:13856-13944
                                       (catch
                                         (if chunk/1782
                                           (let
                                             (*match*/3654 =a
                                                (field_imm 1 chunk/1782))
                                             (if *match*/3654
                                               (before Ocaml_ocaml_types__Warnings.letter_alert.commit_chunk lib/warnings.ml(405):13925-13944
                                                 (makeblock 0
                                                   (after Ocaml_ocaml_types__Warnings.letter_alert.commit_chunk lib/warnings.ml(405):13925-13939
                                                     (apply
                                                       (field_imm 9
                                                         (global Stdlib__List!))
                                                       chunk/1782))
                                                   l/1781))
                                               (exit 23)))
                                           (exit 23))
                                        with (23)
                                         (before Ocaml_ocaml_types__Warnings.letter_alert.commit_chunk lib/warnings.ml(404):13891-13892
                                           l/1781)))))
                                (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(407):13956-14216
                                  (let
                                    (group_consecutive_letters/1783 =
                                       (function param/1789 param/1788
                                         (funct-body Ocaml_ocaml_types__Warnings.letter_alert.group_consecutive_letters lib/warnings.ml(407)<ghost>:13986-14090
                                           (let
                                             (current/1786 =a
                                                (field_imm 1 param/1789)
                                              l/1785 =a
                                                (field_imm 0 param/1789))
                                             (catch
                                               (switch* param/1788
                                                case tag 0:
                                                 (let
                                                   (*match*/3652 =a
                                                      (field_imm 1
                                                        param/1788))
                                                   (if *match*/3652 (exit 22)
                                                     (let
                                                       (x/1787 =a
                                                          (field_imm 0
                                                            param/1788))
                                                       (before Ocaml_ocaml_types__Warnings.letter_alert.group_consecutive_letters lib/warnings.ml(408):14035-14050
                                                         (makeblock 0 l/1785
                                                           (makeblock 0 (int,*)
                                                             x/1787
                                                             current/1786))))))
                                                case tag 1: (exit 22))
                                              with (22)
                                               (before Ocaml_ocaml_types__Warnings.letter_alert.group_consecutive_letters lib/warnings.ml(409):14062-14090
                                                 (makeblock 0
                                                   (after Ocaml_ocaml_types__Warnings.letter_alert.group_consecutive_letters lib/warnings.ml(409):14063-14085
                                                     (apply commit_chunk/1779
                                                       l/1785 current/1786))
                                                   0)))))))
                                    (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(411):14102-14216
                                      (let
                                        (*match*/3651 =
                                           (after Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(412):14126-14181
                                             (apply
                                               (field_imm 25
                                                 (global Stdlib__List!))
                                               group_consecutive_letters/1783
                                               [0: 0 0] tokens/1408))
                                         on_going/1791 =a
                                           (field_imm 1 *match*/3651)
                                         l/1790 =a (field_imm 0 *match*/3651))
                                        (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(414):14193-14216
                                          (after Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(414):14193-14216
                                            (apply commit_chunk/1779 l/1790
                                              on_going/1791)))))))))
                           (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(416):14224-15348
                             (if consecutive_letters/1778
                               (let
                                 (example/1792 =a
                                    (field_imm 0 consecutive_letters/1778))
                                 (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(419):14297-15348
                                   (let
                                     (nowhere/1793 =
                                        (after Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(419):14311-14337
                                          (apply ghost_loc_in_file/1402
                                            "_none_")))
                                     (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(420):14347-15348
                                       (let
                                         (spelling_hint/1794 =
                                            (function ppf/1796 : int
                                              (funct-body Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(420)<ghost>:14365-14694
                                                (before Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(421):14379-14694
                                                  (let
                                                    (max_seq_len/1797 =[int]
                                                       (after Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(422):14407-14494
                                                         (apply
                                                           (field_imm 25
                                                             (global Stdlib__List!))
                                                           (function
                                                             l/1798[int]
                                                             x/1799 : int
                                                             (funct-body Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint.(fun) lib/warnings.ml(422):14422-14460
                                                               (before Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint.(fun) lib/warnings.ml(422):14434-14459
                                                                 (after Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint.(fun) lib/warnings.ml(422):14434-14459
                                                                   (apply
                                                                    (field_imm 10
                                                                    (global Stdlib__Int!))
                                                                    l/1798
                                                                    (after Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint.(fun) lib/warnings.ml(422):14444-14459
                                                                    (apply
                                                                    (field_imm 0
                                                                    (global Stdlib__List!))
                                                                    x/1799)))))))
                                                           0
                                                           consecutive_letters/1778)))
                                                    (before Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(425):14514-14694
                                                      (if
                                                        (>= max_seq_len/1797
                                                          5)
                                                        (before Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(426):14549-14668
                                                          (after Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(426):14549-14668
                                                            (apply
                                                              (field_imm 138
                                                                (global Stdlib__Format!))
                                                              ppf/1796
                                                              [0:
                                                               [17:
                                                                [0: "@ " 1 0]
                                                                [18:
                                                                 [1:
                                                                  [0: 0 ""]]
                                                                 [11:
                                                                  "Hint: Did you make a spelling mistake when using a mnemonic name?"
                                                                  [17: 0 0]]]]
                                                               "@ @[Hint: Did you make a spelling mistake when using a mnemonic name?@]"])))
                                                        (before Ocaml_ocaml_types__Warnings.letter_alert.spelling_hint lib/warnings.ml(430):14692-14694
                                                          0))))))))
                                         (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(432):14710-15348
                                           (let
                                             (message/1831 =
                                                (after Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(433):14732-15231
                                                  (apply
                                                    (field_imm 142
                                                      (global Stdlib__Format!))
                                                    [0:
                                                     [18:
                                                      [1:
                                                       [0:
                                                        [11: "<v>" 0] "<v>"]]
                                                      [18:
                                                       [1: [0: 0 ""]]
                                                       [11:
                                                        "Setting a warning with a sequence of lowercase or uppercase letters,"
                                                        [17:
                                                         [0: "@ " 1 0]
                                                         [11:
                                                          "like '"
                                                          [15:
                                                           [11:
                                                            "',"
                                                            [17:
                                                             [0: "@ " 1 0]
                                                             [11:
                                                              "is deprecated."
                                                              [17:
                                                               0
                                                               [17:
                                                                [0: "@ " 1 0]
                                                                [18:
                                                                 [1:
                                                                  [0: 0 ""]]
                                                                 [11:
                                                                  "Use the equivalent signed form:"
                                                                  [17:
                                                                   [0:
                                                                    "@ " 1 0]
                                                                   [16:
                                                                    [12:
                                                                    '.'
                                                                    [17:
                                                                    0
                                                                    [17:
                                                                    [0:
                                                                    "@ " 1 0]
                                                                    [18:
                                                                    [1:
                                                                    [0: 0 ""]]
                                                                    [11:
                                                                    "Hint: Enabling or disabling a warning by its mnemonic name requires a + or - prefix."
                                                                    [17:
                                                                    0
                                                                    [16:
                                                                    [17:
                                                                    2
                                                                    [17: 0 0]]]]]]]]]]]]]]]]]]]]]]]]
                                                     "@[<v>@[Setting a warning with a sequence of lowercase or uppercase letters,@ like '%a',@ is deprecated.@]@ @[Use the equivalent signed form:@ %t.@]@ @[Hint: Enabling or disabling a warning by its mnemonic name requires a + or - prefix.@]%t@?@]"]
                                                    (after Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(440):15087-15140
                                                      (apply
                                                        (field_imm 131
                                                          (global Stdlib__Format!))
                                                        (makeblock 0
                                                          (function
                                                            param/1832
                                                            (funct-body Ocaml_ocaml_types__Warnings.letter_alert.(fun) lib/warnings.ml(440):15109-15126
                                                              (before Ocaml_ocaml_types__Warnings.letter_alert.(fun) lib/warnings.ml(440):15119-15125
                                                                (function
                                                                  prim/3646
                                                                  stub
                                                                  (ignore
                                                                    prim/3646))))))
                                                        (field_imm 22
                                                          (global Stdlib__Format!))))
                                                    example/1792
                                                    (function ppf/1833 : int
                                                      (funct-body Ocaml_ocaml_types__Warnings.letter_alert.(fun) lib/warnings.ml(441):15160-15207
                                                        (before Ocaml_ocaml_types__Warnings.letter_alert.(fun) lib/warnings.ml(441):15172-15206
                                                          (after Ocaml_ocaml_types__Warnings.letter_alert.(fun) lib/warnings.ml(441):15172-15206
                                                            (apply
                                                              (field_imm 17
                                                                (global Stdlib__List!))
                                                              (after Ocaml_ocaml_types__Warnings.letter_alert.(fun) lib/warnings.ml(441):15182-15199
                                                                (apply
                                                                  print_token/1768
                                                                  ppf/1833))
                                                              tokens/1408)))))
                                                    spelling_hint/1794)))
                                             (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(444):15247-15348
                                               (makeblock 0
                                                 (makeblock 0
                                                   "ocaml_deprecated_cli"
                                                   message/1831 nowhere/1793
                                                   nowhere/1793))))))))))
                               (before Ocaml_ocaml_types__Warnings.letter_alert lib/warnings.ml(417):14265-14269
                                 0)))))))))))))
     parse_warnings/1834 =
       (function s/1836
         (funct-body Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(451)<ghost>:15370-16549
           (before Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(452):15376-16549
             (let
               (error/1837 =
                  (function param/1839[int]
                    (funct-body Ocaml_ocaml_types__Warnings.parse_warnings.error lib/warnings.ml(452)<ghost>:15386-15436
                      (before Ocaml_ocaml_types__Warnings.parse_warnings.error lib/warnings.ml(452):15391-15436
                        (raise
                          (after Ocaml_ocaml_types__Warnings.parse_warnings.error lib/warnings.ml(452):15391-15436
                            (makeblock 0 (field_imm 7 (global Stdlib__Arg!))
                              "Ill-formed list of warnings")))))))
               (before Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(453):15442-16549
                 (letrec
                   (get_num/1840
                      (function n/1841[int] i/1842[int]
                        (funct-body Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(453)<ghost>:15458-15620
                          (before Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(454):15468-15620
                            (if (>= i/1842 (string.length s/1836))
                              (before Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(454):15497-15501
                                (makeblock 0 (int,int) i/1842 n/1841))
                              (before Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(455):15511-15620
                                (let
                                  (*match*/3677 =
                                     (after Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(455):15517-15522
                                       (string.get s/1836 i/1842))
                                   switcher/3678 =a (-48+ *match*/3677))
                                  (if (isout 9 switcher/3678)
                                    (before Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(457):15616-15620
                                      (makeblock 0 (int,int) i/1842 n/1841))
                                    (before Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(456):15546-15604
                                      (after Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(456):15546-15604
                                        (apply get_num/1840
                                          (-
                                            (+ (* 10 n/1841)
                                              (after Ocaml_ocaml_types__Warnings.parse_warnings.get_num lib/warnings.ml(456):15574-15579
                                                (string.get s/1836 i/1842)))
                                            '0')
                                          (+ i/1842 1))))))))))))
                   (before Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(459):15628-16549
                     (let
                       (get_range/1843 =
                          (function i/1845[int]
                            (funct-body Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(459)<ghost>:15642-15858
                              (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(460):15650-15858
                                (let
                                  (*match*/3676 =
                                     (after Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(460):15662-15673
                                       (apply get_num/1840 0 i/1845))
                                   n1/1847 =a (field_imm 1 *match*/3676)
                                   i/1846 =a (field_imm 0 *match*/3676))
                                  (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(461):15681-15858
                                    (if
                                      (&&
                                        (< (+ i/1846 2)
                                          (string.length s/1836))
                                        (&&
                                          (==
                                            (after Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(461):15711-15716
                                              (string.get s/1836 i/1846))
                                            '.')
                                          (==
                                            (after Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(461):15726-15735
                                              (string.get s/1836
                                                (+ i/1846 1)))
                                            '.')))
                                      (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(462):15753-15833
                                        (let
                                          (*match*/3672 =
                                             (after Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(462):15765-15782
                                               (apply get_num/1840 0
                                                 (+ i/1846 2)))
                                           n2/1849 =a
                                             (field_imm 1 *match*/3672)
                                           i/1848 =a
                                             (field_imm 0 *match*/3672))
                                          (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(463):15792-15833
                                            (seq
                                              (if (< n2/1849 n1/1847)
                                                (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(463):15808-15816
                                                  (after Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(463):15808-15816
                                                    (apply error/1837 0)))
                                                0)
                                              (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(464):15824-15833
                                                (makeblock 0 (int,int,int)
                                                  i/1848 n1/1847 n2/1849))))))
                                      (before Ocaml_ocaml_types__Warnings.parse_warnings.get_range lib/warnings.ml(466):15849-15858
                                        (makeblock 0 (int,int,int) i/1846
                                          n1/1847 n1/1847)))))))))
                       (before Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(468):15866-16549
                         (letrec
                           (loop/1850
                              (function tokens/1852 i/1853[int]
                                (funct-body Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(468)<ghost>:15879-16209
                                  (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(469):15894-16209
                                    (if (>= i/1853 (string.length s/1836))
                                      (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(469):15923-15938
                                        (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(469):15923-15938
                                          (apply
                                            (field_imm 9
                                              (global Stdlib__List!))
                                            tokens/1852)))
                                      (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(470):15948-16209
                                        (let
                                          (*match*/3658 =
                                             (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(470):15954-15959
                                               (string.get s/1836 i/1853)))
                                          (catch
                                            (catch
                                              (if (>= *match*/3658 65)
                                                (if (>= *match*/3658 97)
                                                  (if (>= *match*/3658 123)
                                                    (exit 25) (exit 24))
                                                  (if (>= *match*/3658 91)
                                                    (exit 25) (exit 24)))
                                                (if (>= *match*/3658 46)
                                                  (if (>= *match*/3658 64)
                                                    (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(475):16153-16189
                                                      (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(475):16153-16189
                                                        (apply
                                                          loop_letter_num/1851
                                                          tokens/1852 2
                                                          (+ i/1853 1))))
                                                    (exit 25))
                                                  (if (>= *match*/3658 43)
                                                    (let
                                                      (switcher/3659 =a
                                                         (-43+ *match*/3658))
                                                      (switch* switcher/3659
                                                       case int 0:
                                                        (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(473):16059-16091
                                                          (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(473):16059-16091
                                                            (apply
                                                              loop_letter_num/1851
                                                              tokens/1852 0
                                                              (+ i/1853 1))))
                                                       case int 1: (exit 25)
                                                       case int 2:
                                                        (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(474):16105-16139
                                                          (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(474):16105-16139
                                                            (apply
                                                              loop_letter_num/1851
                                                              tokens/1852 1
                                                              (+ i/1853 1))))))
                                                    (exit 25))))
                                             with (25)
                                              (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(476):16201-16209
                                                (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(476):16201-16209
                                                  (apply error/1837 0))))
                                           with (24)
                                            (before Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(472):16006-16045
                                              (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(472):16006-16045
                                                (apply loop/1850
                                                  (makeblock 0
                                                    (makeblock 0 (int,*)
                                                      (after Ocaml_ocaml_types__Warnings.parse_warnings.loop lib/warnings.ml(472):16019-16024
                                                        (string.get s/1836
                                                          i/1853))
                                                      0)
                                                    tokens/1852)
                                                  (+ i/1853 1)))))))))))
                             loop_letter_num/1851
                               (function tokens/1854 modifier/1855[int]
                                 i/1856[int]
                                 (funct-body Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(477)<ghost>:16232-16532
                                   (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(478):16256-16532
                                     (if (>= i/1856 (string.length s/1836))
                                       (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(478):16285-16293
                                         (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(478):16285-16293
                                           (apply error/1837 0)))
                                       (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(479):16303-16532
                                         (let
                                           (*match*/3665 =
                                              (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(479):16309-16314
                                                (string.get s/1836 i/1856)))
                                           (catch
                                             (let
                                               (switcher/3666 =a
                                                  (-65+ *match*/3665))
                                               (if (isout 57 switcher/3666)
                                                 (let
                                                   (switcher/3668 =a
                                                      (17+ switcher/3666))
                                                   (if
                                                     (isout 9 switcher/3668)
                                                     (exit 31)
                                                     (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(481):16348-16423
                                                       (let
                                                         (*match*/3664 =
                                                            (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(481):16364-16375
                                                              (apply
                                                                get_range/1843
                                                                i/1856))
                                                          n2/1859 =a
                                                            (field_imm 2
                                                              *match*/3664)
                                                          n1/1858 =a
                                                            (field_imm 1
                                                              *match*/3664)
                                                          i/1857 =a
                                                            (field_imm 0
                                                              *match*/3664))
                                                         (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(482):16387-16423
                                                           (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(482):16387-16423
                                                             (apply loop/1850
                                                               (makeblock 0
                                                                 (makeblock 1 (int,int,int)
                                                                   n1/1858
                                                                   n2/1859
                                                                   modifier/1855)
                                                                 tokens/1854)
                                                               i/1857)))))))
                                                 (let
                                                   (switcher/3667 =a
                                                      (-26+ switcher/3666))
                                                   (if
                                                     (isout 5 switcher/3667)
                                                     (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(484):16464-16512
                                                       (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(484):16464-16512
                                                         (apply loop/1850
                                                           (makeblock 0
                                                             (makeblock 0 (int,*)
                                                               (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(484):16477-16482
                                                                 (string.get
                                                                   s/1836
                                                                   i/1856))
                                                               (makeblock 0 (int)
                                                                 modifier/1855))
                                                             tokens/1854)
                                                           (+ i/1856 1))))
                                                     (exit 31)))))
                                            with (31)
                                             (before Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(485):16524-16532
                                               (after Ocaml_ocaml_types__Warnings.parse_warnings.loop_letter_num lib/warnings.ml(485):16524-16532
                                                 (apply error/1837 0)))))))))))
                           (before Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(487):16540-16549
                             (after Ocaml_ocaml_types__Warnings.parse_warnings lib/warnings.ml(487):16540-16549
                               (apply loop/1850 0 0)))))))))))))
     parse_opt/1860 =
       (function error/1862 active/1863 errflag/1864[int] s/1865
         (funct-body Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(489)<ghost>:16565-18096
           (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(490):16592-18096
             (let
               (flags/1866 =
                  (if errflag/1864
                    (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(490):16620-16625
                      error/1862)
                    (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(490):16631-16637
                      active/1863)))
               (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(491):16643-18096
                 (let
                   (action/1867 =
                      (function modifier/1869[int] i/1870[int] : int
                        (funct-body Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(491)<ghost>:16654-17188
                          (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(491):16667-17188
                            (switch* modifier/1869
                             case int 0:
                              (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(493):16708-16803
                                (if (== i/1870 3)
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(493):16722-16772
                                    (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(493):16722-16772
                                      (apply set_alert/1347 errflag/1864 1
                                        "deprecated")))
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(494):16786-16803
                                    (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(494):16786-16803
                                      (array.set[int] flags/1866 i/1870 1)))))
                             case int 1:
                              (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(496):16827-16924
                                (if (== i/1870 3)
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(496):16841-16892
                                    (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(496):16841-16892
                                      (apply set_alert/1347 errflag/1864 0
                                        "deprecated")))
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(497):16906-16924
                                    (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(497):16906-16924
                                      (array.set[int] flags/1866 i/1870 0)))))
                             case int 2:
                              (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(499):16950-17188
                                (if (== i/1870 3)
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(499):16964-17099
                                    (seq
                                      (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(500):16980-17028
                                        (apply set_alert/1347 0 1
                                          "deprecated"))
                                      (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(501):17040-17087
                                        (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(501):17040-17087
                                          (apply set_alert/1347 1 1
                                            "deprecated")))))
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(503):17113-17188
                                    (seq
                                      (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(504):17129-17147
                                        (array.set[int] active/1863 i/1870 1))
                                      (before Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(505):17159-17176
                                        (after Ocaml_ocaml_types__Warnings.parse_opt.action lib/warnings.ml(505):17159-17176
                                          (array.set[int] error/1862 i/1870
                                            1))))))))))))
                   (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(508):17196-18096
                     (let
                       (eval/1871 =
                          (function param/1882 : int
                            (funct-body Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(508):17207-17557
                              (switch* param/1882
                               case tag 0:
                                (let
                                  (m/1874 =a (field_imm 1 param/1882)
                                   c/1873 =a (field_imm 0 param/1882))
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(510):17246-17449
                                    (let
                                      (lc/1878 =[int]
                                         (after Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(510):17255-17277
                                           (apply
                                             (field_imm 2
                                               (global Stdlib__Char!))
                                             c/1873)))
                                      (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(511):17289-17449
                                        (let
                                          (modifier/1879 =[int]
                                             (if m/1874
                                               (let
                                                 (m/1880 =a
                                                    (field_imm 0 m/1874))
                                                 (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(513):17389-17390
                                                   m/1880))
                                               (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(512):17337-17366
                                                 (if (== c/1873 lc/1878)
                                                   (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(512):17352-17357
                                                     1)
                                                   (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(512):17363-17366
                                                     0)))))
                                          (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(515):17410-17449
                                            (after Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(515):17410-17449
                                              (apply
                                                (field_imm 17
                                                  (global Stdlib__List!))
                                                (after Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(515):17420-17437
                                                  (apply action/1867
                                                    modifier/1879))
                                                (after Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(515):17438-17449
                                                  (apply letter/587 lc/1878))))))))))
                               case tag 1:
                                (let
                                  (modifier/1877 =a (field_imm 2 param/1882)
                                   n2/1876 =a (field_imm 1 param/1882)
                                   n1/1875 =a (field_imm 0 param/1882))
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(517):17487-17557
                                    (for n/1881 n1/1875 to
                                      (after Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(517):17501-17531
                                        (apply
                                          (field_imm 9 (global Stdlib__Int!))
                                          n2/1876 last_warning_number/428))
                                      (before Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(517):17535-17552
                                        (after Ocaml_ocaml_types__Warnings.parse_opt.eval lib/warnings.ml(517):17535-17552
                                          (apply action/1867 modifier/1877
                                            n/1881))))))))))
                       (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(519):17565-18096
                         (let
                           (parse_and_eval/1883 =
                              (function s/1885
                                (funct-body Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(519)<ghost>:17584-17675
                                  (before Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(520):17592-17675
                                    (let
                                      (tokens/1886 =
                                         (after Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(520):17605-17621
                                           (apply parse_warnings/1834 s/1885)))
                                      (before Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(521):17629-17675
                                        (seq
                                          (after Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(521):17629-17650
                                            (apply
                                              (field_imm 17
                                                (global Stdlib__List!))
                                              eval/1871 tokens/1886))
                                          (before Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(522):17656-17675
                                            (after Ocaml_ocaml_types__Warnings.parse_opt.parse_and_eval lib/warnings.ml(522):17656-17675
                                              (apply letter_alert/1406
                                                tokens/1886))))))))))
                           (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(524):17684-18096
                             (let
                               (*match*/3682 =
                                  (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(524):17690-17706
                                    (apply name_to_number/434 s/1865)))
                               (if *match*/3682
                                 (let (n/1887 =a (field_imm 0 *match*/3682))
                                   (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(525):17726-17744
                                     (seq
                                       (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(525):17726-17738
                                         (apply action/1867 0 n/1887))
                                       (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(525):17740-17744
                                         0))))
                                 (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(527):17763-18096
                                   (if
                                     (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(527):17766-17772
                                       (caml_string_equal s/1865 ""))
                                     (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(527):17778-17794
                                       (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(527):17778-17794
                                         (apply parse_and_eval/1883 s/1865)))
                                     (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(528):17806-18096
                                       (let
                                         (rest/1888 =
                                            (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(529):17831-17867
                                              (apply
                                                (field_imm 15
                                                  (global Stdlib__String!))
                                                s/1865 1
                                                (- (string.length s/1865) 1))))
                                         (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(530):17879-18086
                                           (let
                                             (*match*/3679 =
                                                (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(530):17885-17890
                                                  (string.get s/1865 0))
                                              *match*/3680 =
                                                (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(530):17892-17911
                                                  (apply name_to_number/434
                                                    rest/1888)))
                                             (catch
                                               (if (>= *match*/3679 46)
                                                 (if (!= *match*/3679 64)
                                                   (exit 40)
                                                   (if *match*/3680
                                                     (let
                                                       (n/1891 =a
                                                          (field_imm 0
                                                            *match*/3680))
                                                       (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(533):18032-18054
                                                         (seq
                                                           (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(533):18032-18048
                                                             (apply
                                                               action/1867 2
                                                               n/1891))
                                                           (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(533):18050-18054
                                                             0))))
                                                     (exit 40)))
                                                 (if (>= *match*/3679 43)
                                                   (let
                                                     (switcher/3681 =a
                                                        (-43+ *match*/3679))
                                                     (switch* switcher/3681
                                                      case int 0:
                                                       (if *match*/3680
                                                         (let
                                                           (n/1889 =a
                                                              (field_imm 0
                                                                *match*/3680))
                                                           (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(531):17942-17960
                                                             (seq
                                                               (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(531):17942-17954
                                                                 (apply
                                                                   action/1867
                                                                   0 n/1889))
                                                               (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(531):17956-17960
                                                                 0))))
                                                         (exit 40))
                                                      case int 1: (exit 40)
                                                      case int 2:
                                                       (if *match*/3680
                                                         (let
                                                           (n/1890 =a
                                                              (field_imm 0
                                                                *match*/3680))
                                                           (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(532):17986-18006
                                                             (seq
                                                               (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(532):17986-18000
                                                                 (apply
                                                                   action/1867
                                                                   1 n/1890))
                                                               (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(532):18002-18006
                                                                 0))))
                                                         (exit 40))))
                                                   (exit 40)))
                                              with (40)
                                               (before Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(534):18070-18086
                                                 (after Ocaml_ocaml_types__Warnings.parse_opt lib/warnings.ml(534):18070-18086
                                                   (apply parse_and_eval/1883
                                                     s/1865)))))))))))))))))))))))
     parse_options/1892 =
       (function errflag/1894[int] s/1895
         (funct-body Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(537)<ghost>:18116-18325
           (before Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(538):18130-18325
             (let
               (error/1896 =
                  (after Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(538):18142-18169
                    (apply (field_imm 6 (global Stdlib__Array!))
                      (field_imm 1 (field_mut 0 current/1188)))))
               (before Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(539):18175-18325
                 (let
                   (active/1897 =
                      (after Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(539):18188-18216
                        (apply (field_imm 6 (global Stdlib__Array!))
                          (field_imm 0 (field_mut 0 current/1188)))))
                   (before Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(540):18222-18325
                     (let
                       (alerts/1898 =
                          (after Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(540):18235-18267
                            (apply parse_opt/1860 error/1896 active/1897
                              errflag/1894 s/1895)))
                       (before Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(541):18273-18325
                         (seq
                           (setfield_ptr 0 current/1188
                             (let (init/3683 = (field_mut 0 current/1188))
                               (makeblock 0 active/1897 error/1896
                                 (field_imm 2 init/3683)
                                 (field_imm 3 init/3683))))
                           (before Ocaml_ocaml_types__Warnings.parse_options lib/warnings.ml(542):18319-18325
                             alerts/1898)))))))))))
     defaults_w/1899 = "+a-4-7-9-27-29-30-32..42-44-45-48-50-60-66..70"
     defaults_warn_error/1900 = "-a"
     default_disabled_alerts/1901 =
       [0: "unstable" [0: "unsynchronized_access" 0]]
     *match*/3720 =
       (ignore
         (after Ocaml_ocaml_types__Warnings lib/warnings.ml(549):18585-18615
           (apply parse_options/1892 0 defaults_w/1899)))
     *match*/3718 =
       (ignore
         (after Ocaml_ocaml_types__Warnings lib/warnings.ml(550):18635-18673
           (apply parse_options/1892 1 defaults_warn_error/1900)))
     *match*/3716 =
       (after Ocaml_ocaml_types__Warnings lib/warnings.ml(552):18685-18757
         (apply (field_imm 17 (global Stdlib__List!))
           (after Ocaml_ocaml_types__Warnings lib/warnings.ml(552):18695-18733
             (apply set_alert/1347 0 0))
           default_disabled_alerts/1901))
     message/1902 =
       (function param/2000
         (funct-body Ocaml_ocaml_types__Warnings.message lib/warnings.ml(554):18773-31135
           (catch
             (switch* param/2000
              case int 0:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(556):18809-18926
                 "this `(*' is the start of a comment.\nHint: Did you forget spaces when writing the infix operator `( * )'?")
              case int 1:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(558):18950-18985
                 "this is not the end of a comment.")
              case int 2:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(565):19241-19324
                 "this function application is partial,\nmaybe some arguments are missing.")
              case int 3:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(588):20290-20330
                 "this expression should have type unit.")
              case int 4:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(589):20353-20381
                 "this match case is unused.")
              case int 5:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(590):20406-20435
                 "this sub-pattern is unused.")
              case int 6:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(599):20798-21056
                 "illegal backslash escape in string.\nHint: Single backslashes \\ are reserved for escape sequences\n(\\n, \\r, ...). Did you check the list of OCaml escape sequences?\nTo get a backslash character, escape it with a second backslash: \\\\.")
              case int 7:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(606):21230-21272
                 "this optional argument cannot be erased.")
              case int 8:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(610):21485-21534
                 "this argument will not be used by the function.")
              case int 9:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(612):21571-21627
                 "this statement never returns (or has an unsound type.)")
              case int 10:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(615):21685-21779
                 "all the fields are explicitly listed in this record:\nthe 'with' clause is useless.")
              case int 11:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(620):21924-22026
                 "this pattern-matching is not exhaustive.\nAll clauses in this pattern-matching are guarded.")
              case int 12:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(624):22142-22204
                 "wildcard pattern given as argument to a constant constructor")
              case int 13:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(626):22231-22325
                 "unescaped end-of-line in a string constant\n(non-portable behavior before OCaml 5.2)")
              case int 14:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(662):23823-23841
                 "unused rec flag.")
              case int 15:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(717):26309-26608
                 (let (ref_manual/1993 = [0: 13 [0: 5 [0: 3 0]]])
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(718):26373-26608
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(718):26373-26608
                       (apply (field_imm 142 (global Stdlib__Format!))
                         [0:
                          [11:
                           "Code should not depend on the actual values of\nthis constructor's arguments. They are only for information\nand may change in future versions. "
                           [15: 0]]
                          "Code should not depend on the actual values of\nthis constructor's arguments. They are only for information\nand may change in future versions. %a"]
                         (field_imm 68 (global Ocaml_ocaml_types__Misc!))
                         ref_manual/1993)))))
              case int 16:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(724):26639-26740
                 "this match case is unreachable.\nConsider replacing it with a refutation case '<pat> -> .'")
              case int 17:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(759):28118-28289
                 "A potential assignment to a non-mutable value was detected \nin this source file.  Such assignments may generate incorrect code \nwhen using Flambda.")
              case int 18:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(774):28996-29059
                 "Type constraints do not apply to GADT cases of variant types.")
              case int 19:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(783):29496-29561
                 "option -unsafe used with a preprocessor returning a syntax tree")
              case int 20:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(791):29898-30060
                 "This pattern depends on mutable state.\nIt prevents the remaining arguments from being uncurried, which will cause additional closure allocations.")
              case int 21:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(803):30403-30432
                 "Cannot find interface file.")
              case int 22:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(805):30467-30555
                 "This function is marked @tail_mod_cons\nbut is never applied in TMC position.")
              case int 23:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(808):30589-30990
                 "This call\nis in tail-modulo-cons position in a TMC function,\nbut the function called is not itself specialized for TMC,\nso the call will not be transformed into a tail call.\nPlease either mark the called function with the [@tail_mod_cons]\nattribute, or mark this call with the [@tailcall false] attribute\nto make its non-tailness explicit.")
              case int 24:
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(816):31040-31135
                 "A generative functor\nshould be applied to '()'; using '(struct end)' is deprecated.")
              case tag 0:
               (let (s/1904 =a (field_imm 0 param/2000))
                 (stringswitch s/1904
                  case "":
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(560):19016-19051
                     "this pattern-matching is fragile.")
                  default:
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(562):19081-19199
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(562):19081-19199
                       (apply (field_imm 27 (global Stdlib!))
                         "this pattern-matching is fragile.\nIt will remain exhaustive when constructors are added to type "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(563):19192-19199
                           (apply (field_imm 27 (global Stdlib!)) s/1904 ".")))))))
              case tag 1:
               (let (ls/1906 =a (field_imm 0 param/2000))
                 (if ls/1906
                   (let (*match*/3688 =a (field_imm 1 ls/1906))
                     (if *match*/3688
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(571):19491-19586
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(571):19491-19586
                           (apply (field_imm 27 (global Stdlib!)) "labels "
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(571):19503-19586
                               (apply (field_imm 27 (global Stdlib!))
                                 (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(571):19503-19524
                                   (apply
                                     (field_imm 6 (global Stdlib__String!))
                                     ", " ls/1906))
                                 " were omitted in the application of this function.")))))
                       (let (l/1905 =a (field_imm 0 ls/1906))
                         (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(569):19394-19460
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(569):19394-19460
                             (apply (field_imm 27 (global Stdlib!)) "label "
                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(569):19405-19460
                                 (apply (field_imm 27 (global Stdlib!))
                                   l/1905
                                   " was omitted in the application of this function."))))))))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(567):19350-19362
                     (raise
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(567):19350-19362
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "lib/warnings.ml" 567 25]))))))
              case tag 2:
               (let (*match*/3689 =a (field_imm 0 param/2000))
                 (if *match*/3689
                   (let
                     (lab/1907 =a (field_imm 0 *match*/3689)
                      *match*/3690 =a (field_imm 1 *match*/3689))
                     (if *match*/3690
                       (let
                         (cname/1908 =a lab/1907
                          slist/1909 =a (field_imm 1 *match*/3689))
                         (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(576):19708-19825
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(576):19708-19825
                             (apply (field_imm 6 (global Stdlib__String!))
                               " "
                               (makeblock 0
                                 "the following methods are overridden by the class"
                                 (makeblock 0 cname/1908
                                   (makeblock 0 ":\n " slist/1909)))))))
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(574):19622-19661
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(574):19622-19661
                           (apply (field_imm 27 (global Stdlib!))
                             "the method "
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(574):19638-19661
                               (apply (field_imm 27 (global Stdlib!))
                                 lab/1907 " is overridden.")))))))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(579):19852-19864
                     (raise
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(579):19852-19864
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "lib/warnings.ml" 579 26]))))))
              case tag 3:
               (let (s/1910 =a (field_imm 0 param/2000))
                 (stringswitch s/1910
                  case "":
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(580):19889-19931
                     "this pattern-matching is not exhaustive.")
                  default:
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(582):19961-20069
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(582):19961-20069
                       (apply (field_imm 27 (global Stdlib!))
                         "this pattern-matching is not exhaustive.\nHere is an example of a case that is not matched:\n"
                         s/1910)))))
              case tag 4:
               (let (s/1911 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(585):20114-20257
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(585):20114-20257
                     (apply (field_imm 27 (global Stdlib!))
                       "the following labels are not bound in this record pattern:\n"
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(585):20179-20257
                         (apply (field_imm 27 (global Stdlib!)) s/1911
                           "\nEither bind these labels explicitly or add '; _' to the pattern."))))))
              case tag 5:
               (let (*match*/3691 =a (field_imm 0 param/2000))
                 (if *match*/3691
                   (let
                     (lab/1912 =a (field_imm 0 *match*/3691)
                      *match*/3692 =a (field_imm 1 *match*/3691))
                     (if *match*/3692
                       (let
                         (cname/1913 =a lab/1912
                          slist/1914 =a (field_imm 1 *match*/3691))
                         (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(594):20590-20718
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(594):20590-20718
                             (apply (field_imm 6 (global Stdlib__String!))
                               " "
                               (makeblock 0
                                 "the following instance variables are overridden by the class"
                                 (makeblock 0 cname/1913
                                   (makeblock 0 ":\n " slist/1914)))))))
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(592):20482-20532
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(592):20482-20532
                           (apply (field_imm 27 (global Stdlib!))
                             "the instance variable "
                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(592):20509-20532
                               (apply (field_imm 27 (global Stdlib!))
                                 lab/1912 " is overridden.")))))))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(597):20756-20768
                     (raise
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(597):20756-20768
                         (makeblock 0 (global Assert_failure/28!)
                           [0: "lib/warnings.ml" 597 37]))))))
              case tag 6:
               (let (l/1915 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(604):21096-21193
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(604):21096-21193
                     (apply (field_imm 27 (global Stdlib!))
                       "the following private methods were made public implicitly:\n "
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(605):21168-21193
                         (apply (field_imm 27 (global Stdlib!))
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(605):21168-21187
                             (apply (field_imm 6 (global Stdlib__String!))
                               " " l/1915))
                           "."))))))
              case tag 7:
               (let (m/1916 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(607):21308-21351
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(607):21308-21351
                     (apply (field_imm 27 (global Stdlib!))
                       "the virtual method "
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(607):21330-21351
                         (apply (field_imm 27 (global Stdlib!)) m/1916
                           " is not declared."))))))
              case tag 8:
               (let (s/1917 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(608):21375-21397
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(608):21375-21397
                     (apply (field_imm 27 (global Stdlib!)) s/1917
                       " is not principal."))))
              case tag 9:
               (let (s/1918 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(609):21428-21454
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(609):21428-21454
                     (apply (field_imm 27 (global Stdlib!)) s/1918
                       " without principality."))))
              case tag 10:
               (let (s/1919 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(613):21650-21651
                   s/1919))
              case tag 11:
               (let (modname/1920 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(618):21819-21890
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(618):21819-21890
                     (apply (field_imm 27 (global Stdlib!))
                       "bad source file name: \""
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(618):21848-21890
                         (apply (field_imm 27 (global Stdlib!)) modname/1920
                           "\" is not a valid module name."))))))
              case tag 12: (exit 50)
              case tag 13: (exit 50)
              case tag 14:
               (let
                 (tc2/1926 =a (field_imm 3 param/2000)
                  tc1/1925 =a (field_imm 2 param/2000)
                  cname/1924 =a (field_imm 1 param/2000)
                  kind/1923 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(629):22385-22474
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(629):22385-22474
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "the "
                         [2:
                          0
                          [12:
                           ' '
                           [2:
                            0
                            [11:
                             " is defined in both types "
                             [2: 0 [11: " and " [2: 0 [12: '.' 0]]]]]]]]]
                        "the %s %s is defined in both types %s and %s."]
                       kind/1923 cname/1924 tc1/1925 tc2/1926))))
              case tag 15:
               (let (v/1927 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(631):22509-22534
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(631):22509-22534
                     (apply (field_imm 27 (global Stdlib!)) "unused value "
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(631):22527-22534
                         (apply (field_imm 27 (global Stdlib!)) v/1927 "."))))))
              case tag 16:
               (let (s/1928 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(632):22556-22580
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(632):22556-22580
                     (apply (field_imm 27 (global Stdlib!)) "unused open "
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(632):22573-22580
                         (apply (field_imm 27 (global Stdlib!)) s/1928 "."))))))
              case tag 17:
               (let (s/1930 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(634):22666-22690
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(634):22666-22690
                     (apply (field_imm 27 (global Stdlib!)) "unused type "
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(634):22683-22690
                         (apply (field_imm 27 (global Stdlib!)) s/1930 "."))))))
              case tag 18:
               (let (s/1931 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(635):22717-22751
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(635):22717-22751
                     (apply (field_imm 27 (global Stdlib!))
                       "unused for-loop index "
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(635):22744-22751
                         (apply (field_imm 27 (global Stdlib!)) s/1931 "."))))))
              case tag 19:
               (let (s/1932 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(636):22777-22814
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(636):22777-22814
                     (apply (field_imm 27 (global Stdlib!))
                       "unused ancestor variable "
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(636):22807-22814
                         (apply (field_imm 27 (global Stdlib!)) s/1932 "."))))))
              case tag 20:
               (let
                 (*match*/3693 =a (field_imm 1 param/2000)
                  s/1933 =a (field_imm 0 param/2000))
                 (switch* *match*/3693
                  case int 0:
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(637):22853-22884
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(637):22853-22884
                       (apply (field_imm 27 (global Stdlib!))
                         "unused constructor "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(637):22877-22884
                           (apply (field_imm 27 (global Stdlib!)) s/1933 ".")))))
                  case int 1:
                   (let (s/1934 =a s/1933)
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(639):22938-23058
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(639):22938-23058
                         (apply (field_imm 27 (global Stdlib!))
                           "constructor "
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(639):22955-23058
                             (apply (field_imm 27 (global Stdlib!)) s/1934
                               " is never used to build values.\n(However, this constructor appears in patterns.)"))))))
                  case int 2:
                   (let (s/1935 =a s/1933)
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(643):23118-23229
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(643):23118-23229
                         (apply (field_imm 27 (global Stdlib!))
                           "constructor "
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(643):23135-23229
                             (apply (field_imm 27 (global Stdlib!)) s/1935
                               " is never used to build values.\nIts type is exported as a private type."))))))))
              case tag 21:
               (let
                 (complaint/1938 =a (field_imm 2 param/2000)
                  is_exception/1937 =a (field_imm 1 param/2000)
                  s/1936 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(647):23288-23793
                   (let
                     (kind/1991 =
                        (if is_exception/1937
                          (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(648):23327-23338
                            "exception")
                          (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(648):23344-23367
                            "extension constructor")))
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(649):23376-23793
                       (let
                         (name/1992 =
                            (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(649):23387-23401
                              (apply (field_imm 27 (global Stdlib!))
                                kind/1991
                                (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(649):23394-23401
                                  (apply (field_imm 27 (global Stdlib!)) " "
                                    s/1936)))))
                         (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(650):23410-23793
                           (switch* complaint/1938
                            case int 0:
                             (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(651):23456-23472
                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(651):23456-23472
                                 (apply (field_imm 27 (global Stdlib!))
                                   "unused " name/1992)))
                            case int 1:
                             (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(653):23511-23624
                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(653):23511-23624
                                 (apply (field_imm 27 (global Stdlib!))
                                   name/1992
                                   " is never used to build values.\n(However, this constructor appears in patterns.)")))
                            case int 2:
                             (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(657):23669-23784
                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(657):23669-23784
                                 (apply (field_imm 27 (global Stdlib!))
                                   name/1992
                                   " is never used to build values.\nIt is exported or rebound as a private extension."))))))))))
              case tag 22:
               (let
                 (slist/1942 =a (field_imm 1 param/2000)
                  ty/1939 =a (field_imm 0 param/2000))
                 (catch
                   (if slist/1942
                     (let (*match*/3694 =a (field_imm 1 slist/1942))
                       (if *match*/3694 (exit 48)
                         (let (*match*/3695 =a (field_imm 2 param/2000))
                           (if *match*/3695 (exit 48)
                             (let (nm/1940 =a (field_imm 0 slist/1942))
                               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(664):23891-24045
                                 (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(664):23891-24045
                                   (apply (field_imm 27 (global Stdlib!))
                                     nm/1940
                                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(664):23896-24045
                                       (apply (field_imm 27 (global Stdlib!))
                                         " was selected from type "
                                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(664):23925-24045
                                           (apply
                                             (field_imm 27 (global Stdlib!))
                                             ty/1939
                                             ".\nIt is not visible in the current scope, and will not \nbe selected if the type becomes unknown."))))))))))))
                     (exit 48))
                  with (48)
                   (let (*match*/3696 =a (field_imm 2 param/2000))
                     (if *match*/3696
                       (let (ty/1941 =a ty/1939)
                         (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(669):24147-24351
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(669):24147-24351
                             (apply (field_imm 27 (global Stdlib!))
                               "this record of type "
                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(669):24171-24351
                                 (apply (field_imm 27 (global Stdlib!))
                                   ty/1941
                                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(669):24175-24351
                                     (apply (field_imm 27 (global Stdlib!))
                                       " contains fields that are \nnot visible in the current scope: "
                                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(671):24257-24351
                                         (apply
                                           (field_imm 27 (global Stdlib!))
                                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(671):24257-24280
                                             (apply
                                               (field_imm 6
                                                 (global Stdlib__String!))
                                               " " slist/1942))
                                           ".\nThey will not be selected if the type becomes unknown."))))))))))
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(667):24085-24097
                         (raise
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(667):24085-24097
                             (makeblock 0 (global Assert_failure/28!)
                               [0: "lib/warnings.ml" 667 39]))))))))
              case tag 23:
               (let (_slist/1946 =a (field_imm 0 param/2000))
                 (catch
                   (if _slist/1946
                     (let (*match*/3697 =a (field_imm 1 _slist/1946))
                       (if *match*/3697 (exit 49)
                         (let (*match*/3698 =a (field_imm 2 param/2000))
                           (if *match*/3698 (exit 49)
                             (let
                               (expansion/1945 =a (field_imm 3 param/2000)
                                tl/1944 =a (field_imm 1 param/2000)
                                s/1943 =a (field_imm 0 _slist/1946))
                               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(674):24408-24560
                                 (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(674):24408-24560
                                   (apply (field_imm 27 (global Stdlib!))
                                     s/1943
                                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(674):24412-24560
                                       (apply (field_imm 27 (global Stdlib!))
                                         " belongs to several types: "
                                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(674):24444-24560
                                           (apply
                                             (field_imm 27 (global Stdlib!))
                                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(674):24444-24464
                                               (apply
                                                 (field_imm 6
                                                   (global Stdlib__String!))
                                                 " " tl/1944))
                                             (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(675):24473-24560
                                               (apply
                                                 (field_imm 27
                                                   (global Stdlib!))
                                                 "\nThe first one was selected. Please disambiguate if this is wrong."
                                                 expansion/1945))))))))))))))
                     (exit 49))
                  with (49)
                   (let
                     (*match*/3699 =a (field_imm 2 param/2000)
                      tl/1947 =a (field_imm 1 param/2000))
                     (if *match*/3699
                       (let (expansion/1948 =a (field_imm 3 param/2000))
                         (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(679):24672-24843
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(679):24672-24843
                             (apply (field_imm 27 (global Stdlib!))
                               "these field labels belong to several types: "
                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(680):24727-24843
                                 (apply (field_imm 27 (global Stdlib!))
                                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(680):24727-24747
                                     (apply
                                       (field_imm 6 (global Stdlib__String!))
                                       " " tl/1947))
                                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(681):24756-24843
                                     (apply (field_imm 27 (global Stdlib!))
                                       "\nThe first one was selected. Please disambiguate if this is wrong."
                                       expansion/1948))))))))
                       (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(677):24601-24613
                         (raise
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(677):24601-24613
                             (makeblock 0 (global Assert_failure/28!)
                               [0: "lib/warnings.ml" 677 40]))))))))
              case tag 24:
               (let (s/1949 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(684):24878-24999
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(684):24878-24999
                     (apply (field_imm 27 (global Stdlib!)) "this use of "
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(684):24895-24999
                         (apply (field_imm 27 (global Stdlib!)) s/1949
                           " relies on type-directed disambiguation,\nit will not compile with OCaml 4.00 or earlier."))))))
              case tag 25:
               (let (s/1950 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(687):25033-25071
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(687):25033-25071
                     (apply (field_imm 27 (global Stdlib!)) "the label "
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(687):25048-25071
                         (apply (field_imm 27 (global Stdlib!)) s/1950
                           " is not optional."))))))
              case tag 26:
               (let
                 (s/1952 =a (field_imm 1 param/2000)
                  kind/1951 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(689):25118-25228
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(689):25118-25228
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "this open statement shadows the "
                         [2:
                          0
                          [11:
                           " identifier "
                           [2: 0 [11: " (which is later used)" 0]]]]]
                        "this open statement shadows the %s identifier %s (which is later used)"]
                       kind/1951 s/1952))))
              case tag 27:
               (let
                 (s/1954 =a (field_imm 1 param/2000)
                  kind/1953 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(693):25282-25381
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(693):25282-25381
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "this open statement shadows the "
                         [2:
                          0 [12: ' ' [2: 0 [11: " (which is later used)" 0]]]]]
                        "this open statement shadows the %s %s (which is later used)"]
                       kind/1953 s/1954))))
              case tag 28:
               (let
                 (s/1956 =a (field_imm 1 param/2000)
                  var/1955 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(697):25421-25480
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(697):25421-25480
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "illegal environment variable "
                         [2: 0 [11: " : " [2: 0 0]]]]
                        "illegal environment variable %s : %s"]
                       var/1955 s/1956))))
              case tag 29:
               (let
                 (s/1958 =a (field_imm 1 param/2000)
                  a/1957 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(699):25519-25579
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(699):25519-25579
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "illegal payload for attribute '"
                         [2: 0 [11: "'.\n" [2: 0 0]]]]
                        "illegal payload for attribute '%s'.\n%s"]
                       a/1957 s/1958))))
              case tag 30:
               (let (sl/1959 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(701):25626-25770
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(701):25626-25770
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "implicit elimination of optional argument"
                         [2: 0 [12: ' ' [2: 0 0]]]]
                        "implicit elimination of optional argument%s %s"]
                       (if
                         (==
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(702):25702-25716
                             (apply (field_imm 0 (global Stdlib__List!))
                               sl/1959))
                           1)
                         (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(702):25726-25728
                           "")
                         (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(702):25734-25737
                           "s"))
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(703):25747-25770
                         (apply (field_imm 6 (global Stdlib__String!)) ", "
                           sl/1959))))))
              case tag 31:
               (let
                 (*match*/3701 =a (field_imm 1 param/2000)
                  name/1960 =a (field_imm 0 param/2000))
                 (if *match*/3701
                   (let
                     (name/1961 =a name/1960
                      msg/1962 =a (field_imm 0 *match*/3701))
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(707):25900-25995
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(707):25900-25995
                         (apply (field_imm 3 (global Stdlib__Printf!))
                           [0:
                            [11:
                             "no valid cmi file was found in path for module "
                             [2: 0 [11: ". " [2: 0 0]]]]
                            "no valid cmi file was found in path for module %s. %s"]
                           name/1961 msg/1962))))
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(705):25808-25858
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(705):25808-25858
                       (apply (field_imm 27 (global Stdlib!))
                         "no cmi file was found in path for module "
                         name/1960)))))
              case tag 32:
               (let (unattached/1963 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(711):26041-26149
                   (if unattached/1963
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(711):26060-26104
                       "unattached documentation comment (ignored)")
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(712):26116-26149
                       "ambiguous documentation comment"))))
              case tag 33:
               (let (b/1964 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(714):26192-26271
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(714):26192-26271
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0: [11: "expected " [2: 0 0]] "expected %s"]
                       (if b/1964
                         (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(715):26240-26250
                           "tailcall")
                         (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(715):26256-26270
                           "non-tailcall"))))))
              case tag 34:
               (let (attr_name/1965 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(727):26784-26857
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(727):26784-26857
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "the "
                         [3:
                          0
                          [11: " attribute cannot appear in this context" 0]]]
                        "the %S attribute cannot appear in this context"]
                       attr_name/1965))))
              case tag 35:
               (let (attr_name/1966 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(729):26902-27007
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(729):26902-27007
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "the "
                         [3:
                          0
                          [11:
                           " attribute is used more than once on this expression"
                           0]]]
                        "the %S attribute is used more than once on this expression"]
                       attr_name/1966))))
              case tag 36:
               (let (reason/1967 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(733):27048-27089
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(733):27048-27089
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11: "Cannot inline: " [2: 0 0]] "Cannot inline: %s"]
                       reason/1967))))
              case tag 37:
               (let (vars/1968 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(735):27139-27900
                   (let (ref_manual/1994 = [0: 13 [0: 5 [0: 4 0]]])
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(736):27203-27900
                       (let
                         (vars/1995 =
                            (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(736):27214-27243
                              (apply (field_imm 58 (global Stdlib__List!))
                                (field_imm 9 (global Stdlib__String!))
                                vars/1968)))
                         (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(737):27253-27900
                           (let
                             (vars_explanation/1996 =
                                (let
                                  (in_different_places/1997 =
                                     "in different places in different or-pattern alternatives")
                                  (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(741):27398-27646
                                    (if vars/1995
                                      (let
                                        (x/1998 =a (field_imm 0 vars/1995)
                                         *match*/3684 =a
                                           (field_imm 1 vars/1995))
                                        (if *match*/3684
                                          (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(745):27542-27646
                                            (let
                                              (vars/1999 =
                                                 (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(745):27553-27576
                                                   (apply
                                                     (field_imm 6
                                                       (global Stdlib__String!))
                                                     ", " vars/1995)))
                                              (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(746):27592-27646
                                                (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(746):27592-27646
                                                  (apply
                                                    (field_imm 27
                                                      (global Stdlib!))
                                                    "variables "
                                                    (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(746):27607-27646
                                                      (apply
                                                        (field_imm 27
                                                          (global Stdlib!))
                                                        vars/1999
                                                        (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(746):27614-27646
                                                          (apply
                                                            (field_imm 27
                                                              (global Stdlib!))
                                                            " appear "
                                                            in_different_places/1997)))))))))
                                          (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(743):27460-27511
                                            (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(743):27460-27511
                                              (apply
                                                (field_imm 27
                                                  (global Stdlib!))
                                                "variable "
                                                (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(743):27474-27511
                                                  (apply
                                                    (field_imm 27
                                                      (global Stdlib!))
                                                    x/1998
                                                    (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(743):27478-27511
                                                      (apply
                                                        (field_imm 27
                                                          (global Stdlib!))
                                                        " appears "
                                                        in_different_places/1997)))))))))
                                      (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(742):27430-27442
                                        (raise
                                          (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(742):27430-27442
                                            (makeblock 0
                                              (global Assert_failure/28!)
                                              [0: "lib/warnings.ml" 742 16]))))))))
                             (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(748):27662-27900
                               (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(748):27662-27900
                                 (apply
                                   (field_imm 142 (global Stdlib__Format!))
                                   [0:
                                    [11:
                                     "Ambiguous or-pattern variables under guard;\n"
                                     [2:
                                      0
                                      [11:
                                       ".\nOnly the first match will be used to evaluate the guard expression.\n"
                                       [15: 0]]]]
                                    "Ambiguous or-pattern variables under guard;\n%s.\nOnly the first match will be used to evaluate the guard expression.\n%a"]
                                   vars_explanation/1996
                                   (field_imm 68
                                     (global Ocaml_ocaml_types__Misc!))
                                   ref_manual/1994))))))))))
              case tag 38:
               (let (name/1969 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(755):27931-28064
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(755):27931-28064
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "no cmx file was found in path for module "
                         [2:
                          0
                          [11:
                           ", and its interface was not compiled with -opaque"
                           0]]]
                        "no cmx file was found in path for module %s, and its interface was not compiled with -opaque"]
                       name/1969))))
              case tag 39:
               (let (s/1970 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(762):28313-28339
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(762):28313-28339
                     (apply (field_imm 27 (global Stdlib!)) "unused module "
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(762):28332-28339
                         (apply (field_imm 27 (global Stdlib!)) s/1970 "."))))))
              case tag 40:
               (let (t/1971 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(764):28383-28963
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(764):28383-28963
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "This primitive declaration uses type "
                         [2:
                          0
                          [11:
                           ", whose representation\nmay be either boxed or unboxed. Without an annotation to indicate\nwhich representation is intended, the boxed representation has been\nselected by default. This default choice may change in future\nversions of the compiler, breaking the primitive implementation.\nYou should explicitly annotate the declaration of "
                           [2:
                            0
                            [11:
                             "\nwith ["
                             [17:
                              5
                              [11:
                               "boxed] or ["
                               [17:
                                5
                                [11:
                                 "unboxed], so that its external interface\nremains stable in the future."
                                 0]]]]]]]]]
                        "This primitive declaration uses type %s, whose representation\nmay be either boxed or unboxed. Without an annotation to indicate\nwhich representation is intended, the boxed representation has been\nselected by default. This default choice may change in future\nversions of the compiler, breaking the primitive implementation.\nYou should explicitly annotate the declaration of %s\nwith [@@boxed] or [@@unboxed], so that its external interface\nremains stable in the future."]
                       t/1971 t/1971))))
              case tag 41:
               (let (s/1972 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(776):29103-29447
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(776):29103-29447
                     (apply (field_imm 27 (global Stdlib!))
                       "The printed interface differs from the inferred interface.\nThe inferred interface contained items which could not be printed\nproperly due to name collisions between identifiers."
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(779):29310-29447
                         (apply (field_imm 27 (global Stdlib!)) s/1972
                           "\nBeware that this warning is purely informational and will not catch\nall instances of erroneous printed interface."))))))
              case tag 42:
               (let (name/1973 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(785):29596-29775
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(785):29596-29775
                     (apply (field_imm 3 (global Stdlib__Printf!))
                       [0:
                        [11:
                         "This type declaration is defining a new '()' constructor\nwhich shadows the existing one.\nHint: Did you mean 'type "
                         [2: 0 [11: " = unit'?" 0]]]
                        "This type declaration is defining a new '()' constructor\nwhich shadows the existing one.\nHint: Did you mean 'type %s = unit'?"]
                       name/1973))))
              case tag 43:
               (let (s/1929 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(633):22607-22632
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(633):22607-22632
                     (apply (field_imm 27 (global Stdlib!)) "unused open! "
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(633):22625-22632
                         (apply (field_imm 27 (global Stdlib!)) s/1929 "."))))))
              case tag 44:
               (let (s/1974 =a (field_imm 0 param/2000))
                 (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(789):29810-29847
                   (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(789):29810-29847
                     (apply (field_imm 27 (global Stdlib!))
                       "unused functor parameter "
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(789):29840-29847
                         (apply (field_imm 27 (global Stdlib!)) s/1974 "."))))))
              case tag 45:
               (let
                 (*match*/3702 =a (field_imm 1 param/2000)
                  s/1975 =a (field_imm 0 param/2000))
                 (switch* *match*/3702
                  case int 0:
                   (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(794):30093-30125
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(794):30093-30125
                       (apply (field_imm 27 (global Stdlib!))
                         "unused record field "
                         (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(794):30118-30125
                           (apply (field_imm 27 (global Stdlib!)) s/1975 ".")))))
                  case int 1:
                   (let (s/1976 =a s/1975)
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(796):30166-30279
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(796):30166-30279
                         (apply (field_imm 27 (global Stdlib!))
                           "record field "
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(796):30184-30279
                             (apply (field_imm 27 (global Stdlib!)) s/1976
                               " is never read.\n(However, this field is used to build or mutate values.)"))))))
                  case int 2:
                   (let (s/1977 =a s/1975)
                     (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(800):30323-30379
                       (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(800):30323-30379
                         (apply (field_imm 27 (global Stdlib!))
                           "mutable record field "
                           (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(800):30349-30379
                             (apply (field_imm 27 (global Stdlib!)) s/1977
                               " is never mutated.")))))))))
            with (50)
             (let (v/3687 =a (field_imm 0 param/2000) v/3721 = v/3687)
               (before Ocaml_ocaml_types__Warnings.message lib/warnings.ml(622):22069-22097
                 (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(622):22069-22097
                   (apply (field_imm 27 (global Stdlib!)) "unused variable "
                     (after Ocaml_ocaml_types__Warnings.message lib/warnings.ml(622):22090-22097
                       (apply (field_imm 27 (global Stdlib!)) v/3721 ".")))))))))
     nerrors/2001 = (makemutable 0 (int) 0)
     id_name/2007 =
       (function w/2009
         (funct-body Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(829)<ghost>:31300-31495
           (before Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(830):31306-31495
             (let
               (n/2010 =[int]
                  (after Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(830):31314-31322
                    (apply number/425 w/2009)))
               (before Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(831):31328-31495
                 (let
                   (*match*/3705 =
                      (after Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(831):31334-31392
                        (apply (field_imm 39 (global Stdlib__List!))
                          (function param/2012 : int
                            (funct-body Ocaml_ocaml_types__Warnings.id_name.(fun) lib/warnings.ml(831):31348-31379
                              (let (number/2011 =a (field_int 0 param/2012))
                                (before Ocaml_ocaml_types__Warnings.id_name.(fun) lib/warnings.ml(831):31368-31378
                                  (== number/2011 n/2010)))))
                          descriptions/433)))
                   (catch
                     (if *match*/3705
                       (let
                         (*match*/3706 =a (field_imm 0 *match*/3705)
                          *match*/3708 =a (field_imm 1 *match*/3706))
                         (if *match*/3708
                           (let (s/2013 =a (field_imm 0 *match*/3708))
                             (before Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(833):31436-31464
                               (after Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(833):31436-31464
                                 (apply
                                   (field_imm 3 (global Stdlib__Printf!))
                                   [0:
                                    [4: 0 0 0 [11: " [" [2: 0 [12: ']' 0]]]]
                                    "%d [%s]"]
                                   n/2010 s/2013))))
                           (exit 51)))
                       (exit 51))
                    with (51)
                     (before Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(835):31480-31495
                       (after Ocaml_ocaml_types__Warnings.id_name lib/warnings.ml(835):31480-31495
                         (apply (field_imm 32 (global Stdlib!)) n/2010))))))))))
     report/2014 =
       (function w/2016
         (funct-body Ocaml_ocaml_types__Warnings.report lib/warnings.ml(837)<ghost>:31508-31742
           (before Ocaml_ocaml_types__Warnings.report lib/warnings.ml(838):31514-31742
             (let
               (*match*/3712 =
                  (after Ocaml_ocaml_types__Warnings.report lib/warnings.ml(838):31520-31531
                    (apply is_active/1249 w/2016)))
               (if *match*/3712
                 (before Ocaml_ocaml_types__Warnings.report lib/warnings.ml(841):31577-31742
                   (seq
                     (if
                       (after Ocaml_ocaml_types__Warnings.report lib/warnings.ml(841):31580-31590
                         (apply is_error/1252 w/2016))
                       (before Ocaml_ocaml_types__Warnings.report lib/warnings.ml(841):31596-31608
                         (+:=1 nerrors/2001))
                       0)
                     (before Ocaml_ocaml_types__Warnings.report lib/warnings.ml(842):31615-31742
                       (makeblock 0 -891636250
                         (makeblock 0 (*,*,int,*)
                           (after Ocaml_ocaml_types__Warnings.report lib/warnings.ml(843):31637-31646
                             (apply id_name/2007 w/2016))
                           (after Ocaml_ocaml_types__Warnings.report lib/warnings.ml(844):31667-31676
                             (apply message/1902 w/2016))
                           (after Ocaml_ocaml_types__Warnings.report lib/warnings.ml(845):31698-31708
                             (apply is_error/1252 w/2016))
                           0)))))
                 (before Ocaml_ocaml_types__Warnings.report lib/warnings.ml(839):31550-31559
                   -1008610421))))))
     report_alert/2017 =
       (function alert/2019
         (funct-body Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(849)<ghost>:31761-32579
           (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(850):31781-32579
             (let
               (*match*/3714 =
                  (after Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(850):31787-31808
                    (apply alert_is_active/1255 alert/2019)))
               (if *match*/3714
                 (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(853):31855-32579
                   (let
                     (is_error/2020 =[int]
                        (after Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(853):31870-31890
                          (apply alert_is_error/1330 alert/2019)))
                     (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(854):31900-32579
                       (seq
                         (if is_error/2020
                           (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(854):31917-31929
                             (+:=1 nerrors/2001))
                           0)
                         (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(855):31937-32579
                           (let
                             (message/2021 =
                                (after Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(855):31951-31983
                                  (apply
                                    (field_imm 60
                                      (global Ocaml_ocaml_types__Misc!))
                                    (field_imm 1 alert/2019))))
                             (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(862):32237-32579
                               (let
                                 (sub_locs/2022 =
                                    (if
                                      (&&
                                        (not
                                          (field_int 2
                                            (field_imm 2 alert/2019)))
                                        (not
                                          (field_int 2
                                            (field_imm 3 alert/2019))))
                                      (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(864):32329-32424
                                        (makeblock 0
                                          (makeblock 0
                                            (field_imm 2 alert/2019)
                                            "Definition")
                                          (makeblock 0
                                            (makeblock 0
                                              (field_imm 3 alert/2019)
                                              "Expected signature")
                                            0)))
                                      (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(869):32448-32450
                                        0)))
                                 (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(871):32466-32579
                                   (makeblock 0 -891636250
                                     (makeblock 0 (*,*,int,*)
                                       (field_imm 0 alert/2019) message/2021
                                       is_error/2020 sub_locs/2022)))))))))))
                 (before Ocaml_ocaml_types__Warnings.report_alert lib/warnings.ml(851):31827-31836
                   -1008610421))))))
     Errors/2023 =
       (makeblock 248 "Ocaml_ocaml_types.Warnings.Errors"
         (caml_fresh_oo_id 0))
     reset_fatal/2024 =
       (function param/2026[int] : int
         (funct-body Ocaml_ocaml_types__Warnings.reset_fatal lib/warnings.ml(881)<ghost>:32615-32634
           (before Ocaml_ocaml_types__Warnings.reset_fatal lib/warnings.ml(882):32622-32634
             (setfield_imm 0 nerrors/2001 0))))
     check_fatal/2027 =
       (function param/2029[int] : int
         (funct-body Ocaml_ocaml_types__Warnings.check_fatal lib/warnings.ml(884)<ghost>:32652-32727
           (before Ocaml_ocaml_types__Warnings.check_fatal lib/warnings.ml(885):32659-32727
             (if (> (field_int 0 nerrors/2001) 0)
               (before Ocaml_ocaml_types__Warnings.check_fatal lib/warnings.ml(885):32680-32727
                 (seq (setfield_imm 0 nerrors/2001 0)
                   (before Ocaml_ocaml_types__Warnings.check_fatal lib/warnings.ml(887):32708-32720
                     (raise
                       (after Ocaml_ocaml_types__Warnings.check_fatal lib/warnings.ml(887):32708-32720
                         Errors/2023)))))
               0))))
     help_warnings/2030 =
       (function param/2032[int]
         (funct-body Ocaml_ocaml_types__Warnings.help_warnings lib/warnings.ml(896)<ghost>:32955-32968
           (before Ocaml_ocaml_types__Warnings.help_warnings lib/warnings.ml(897):32962-32968
             (after Ocaml_ocaml_types__Warnings.help_warnings lib/warnings.ml(897):32962-32968
               (apply (field_imm 98 (global Stdlib!)) 0))))))
    (pseudo <unknown location>
      (makeblock 0 number/425 last_warning_number/428 descriptions/433
        name_to_number/434 letter/587 current/1188 disabled/1239
        without_warnings/1240 backup/1243 restore/1246 is_active/1249
        is_error/1252 alert_is_active/1255 alert_is_error/1330
        with_state/1336 mk_lazy/1343 set_alert/1347 parse_alert_option/1357
        ghost_loc_in_file/1402 letter_alert/1406 parse_warnings/1834
        parse_opt/1860 parse_options/1892 defaults_w/1899
        defaults_warn_error/1900 default_disabled_alerts/1901 message/1902
        nerrors/2001 id_name/2007 report/2014 report_alert/2017 Errors/2023
        reset_fatal/2024 check_fatal/2027 help_warnings/2030))))
