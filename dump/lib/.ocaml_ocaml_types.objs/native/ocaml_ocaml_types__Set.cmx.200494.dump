[
  structure_item (lib/set.ml[18,1110+0]..[22,1184+5])
    Pstr_modtype "OrderedType" (lib/set.ml[18,1110+12]..[18,1110+23])
      module_type (lib/set.ml[19,1136+2]..[22,1184+5])
        Pmty_signature
        [
          signature_item (lib/set.ml[20,1142+4]..[20,1142+10])
            Psig_type Rec
            [
              type_declaration "t" (lib/set.ml[20,1142+9]..[20,1142+10]) (lib/set.ml[20,1142+4]..[20,1142+10])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (lib/set.ml[21,1153+4]..[21,1153+30])
            Psig_value
            value_description "compare" (lib/set.ml[21,1153+8]..[21,1153+15]) (lib/set.ml[21,1153+4]..[21,1153+30])
              core_type (lib/set.ml[21,1153+17]..[21,1153+30])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[21,1153+17]..[21,1153+18])
                  Ptyp_constr "t" (lib/set.ml[21,1153+17]..[21,1153+18])
                  []
                core_type (lib/set.ml[21,1153+22]..[21,1153+30])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[21,1153+22]..[21,1153+23])
                    Ptyp_constr "t" (lib/set.ml[21,1153+22]..[21,1153+23])
                    []
                  core_type (lib/set.ml[21,1153+27]..[21,1153+30])
                    Ptyp_constr "int" (lib/set.ml[21,1153+27]..[21,1153+30])
                    []
              []
        ]
  structure_item (lib/set.ml[24,1191+0]..[71,2758+5])
    Pstr_modtype "S" (lib/set.ml[24,1191+12]..[24,1191+13])
      module_type (lib/set.ml[25,1207+2]..[71,2758+5])
        Pmty_signature
        [
          signature_item (lib/set.ml[26,1213+4]..[26,1213+12])
            Psig_type Rec
            [
              type_declaration "elt" (lib/set.ml[26,1213+9]..[26,1213+12]) (lib/set.ml[26,1213+4]..[26,1213+12])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (lib/set.ml[27,1226+4]..[27,1226+10])
            Psig_type Rec
            [
              type_declaration "t" (lib/set.ml[27,1226+9]..[27,1226+10]) (lib/set.ml[27,1226+4]..[27,1226+10])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (lib/set.ml[28,1237+4]..[28,1237+16])
            Psig_value
            value_description "empty" (lib/set.ml[28,1237+8]..[28,1237+13]) (lib/set.ml[28,1237+4]..[28,1237+16])
              core_type (lib/set.ml[28,1237+15]..[28,1237+16])
                Ptyp_constr "t" (lib/set.ml[28,1237+15]..[28,1237+16])
                []
              []
          signature_item (lib/set.ml[29,1254+4]..[29,1254+26])
            Psig_value
            value_description "add" (lib/set.ml[29,1254+8]..[29,1254+11]) (lib/set.ml[29,1254+4]..[29,1254+26])
              core_type (lib/set.ml[29,1254+13]..[29,1254+26])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[29,1254+13]..[29,1254+16])
                  Ptyp_constr "elt" (lib/set.ml[29,1254+13]..[29,1254+16])
                  []
                core_type (lib/set.ml[29,1254+20]..[29,1254+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[29,1254+20]..[29,1254+21])
                    Ptyp_constr "t" (lib/set.ml[29,1254+20]..[29,1254+21])
                    []
                  core_type (lib/set.ml[29,1254+25]..[29,1254+26])
                    Ptyp_constr "t" (lib/set.ml[29,1254+25]..[29,1254+26])
                    []
              []
          signature_item (lib/set.ml[30,1281+4]..[30,1281+27])
            Psig_value
            value_description "singleton" (lib/set.ml[30,1281+8]..[30,1281+17]) (lib/set.ml[30,1281+4]..[30,1281+27])
              core_type (lib/set.ml[30,1281+19]..[30,1281+27])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[30,1281+19]..[30,1281+22])
                  Ptyp_constr "elt" (lib/set.ml[30,1281+19]..[30,1281+22])
                  []
                core_type (lib/set.ml[30,1281+26]..[30,1281+27])
                  Ptyp_constr "t" (lib/set.ml[30,1281+26]..[30,1281+27])
                  []
              []
          signature_item (lib/set.ml[31,1309+4]..[31,1309+29])
            Psig_value
            value_description "remove" (lib/set.ml[31,1309+8]..[31,1309+14]) (lib/set.ml[31,1309+4]..[31,1309+29])
              core_type (lib/set.ml[31,1309+16]..[31,1309+29])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[31,1309+16]..[31,1309+19])
                  Ptyp_constr "elt" (lib/set.ml[31,1309+16]..[31,1309+19])
                  []
                core_type (lib/set.ml[31,1309+23]..[31,1309+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[31,1309+23]..[31,1309+24])
                    Ptyp_constr "t" (lib/set.ml[31,1309+23]..[31,1309+24])
                    []
                  core_type (lib/set.ml[31,1309+28]..[31,1309+29])
                    Ptyp_constr "t" (lib/set.ml[31,1309+28]..[31,1309+29])
                    []
              []
          signature_item (lib/set.ml[32,1339+4]..[32,1339+26])
            Psig_value
            value_description "union" (lib/set.ml[32,1339+8]..[32,1339+13]) (lib/set.ml[32,1339+4]..[32,1339+26])
              core_type (lib/set.ml[32,1339+15]..[32,1339+26])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[32,1339+15]..[32,1339+16])
                  Ptyp_constr "t" (lib/set.ml[32,1339+15]..[32,1339+16])
                  []
                core_type (lib/set.ml[32,1339+20]..[32,1339+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[32,1339+20]..[32,1339+21])
                    Ptyp_constr "t" (lib/set.ml[32,1339+20]..[32,1339+21])
                    []
                  core_type (lib/set.ml[32,1339+25]..[32,1339+26])
                    Ptyp_constr "t" (lib/set.ml[32,1339+25]..[32,1339+26])
                    []
              []
          signature_item (lib/set.ml[33,1366+4]..[33,1366+26])
            Psig_value
            value_description "inter" (lib/set.ml[33,1366+8]..[33,1366+13]) (lib/set.ml[33,1366+4]..[33,1366+26])
              core_type (lib/set.ml[33,1366+15]..[33,1366+26])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[33,1366+15]..[33,1366+16])
                  Ptyp_constr "t" (lib/set.ml[33,1366+15]..[33,1366+16])
                  []
                core_type (lib/set.ml[33,1366+20]..[33,1366+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[33,1366+20]..[33,1366+21])
                    Ptyp_constr "t" (lib/set.ml[33,1366+20]..[33,1366+21])
                    []
                  core_type (lib/set.ml[33,1366+25]..[33,1366+26])
                    Ptyp_constr "t" (lib/set.ml[33,1366+25]..[33,1366+26])
                    []
              []
          signature_item (lib/set.ml[34,1393+4]..[34,1393+32])
            Psig_value
            value_description "disjoint" (lib/set.ml[34,1393+8]..[34,1393+16]) (lib/set.ml[34,1393+4]..[34,1393+32])
              core_type (lib/set.ml[34,1393+18]..[34,1393+32])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[34,1393+18]..[34,1393+19])
                  Ptyp_constr "t" (lib/set.ml[34,1393+18]..[34,1393+19])
                  []
                core_type (lib/set.ml[34,1393+23]..[34,1393+32])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[34,1393+23]..[34,1393+24])
                    Ptyp_constr "t" (lib/set.ml[34,1393+23]..[34,1393+24])
                    []
                  core_type (lib/set.ml[34,1393+28]..[34,1393+32])
                    Ptyp_constr "bool" (lib/set.ml[34,1393+28]..[34,1393+32])
                    []
              []
          signature_item (lib/set.ml[35,1426+4]..[35,1426+25])
            Psig_value
            value_description "diff" (lib/set.ml[35,1426+8]..[35,1426+12]) (lib/set.ml[35,1426+4]..[35,1426+25])
              core_type (lib/set.ml[35,1426+14]..[35,1426+25])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[35,1426+14]..[35,1426+15])
                  Ptyp_constr "t" (lib/set.ml[35,1426+14]..[35,1426+15])
                  []
                core_type (lib/set.ml[35,1426+19]..[35,1426+25])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[35,1426+19]..[35,1426+20])
                    Ptyp_constr "t" (lib/set.ml[35,1426+19]..[35,1426+20])
                    []
                  core_type (lib/set.ml[35,1426+24]..[35,1426+25])
                    Ptyp_constr "t" (lib/set.ml[35,1426+24]..[35,1426+25])
                    []
              []
          signature_item (lib/set.ml[36,1452+4]..[36,1452+26])
            Psig_value
            value_description "cardinal" (lib/set.ml[36,1452+8]..[36,1452+16]) (lib/set.ml[36,1452+4]..[36,1452+26])
              core_type (lib/set.ml[36,1452+18]..[36,1452+26])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[36,1452+18]..[36,1452+19])
                  Ptyp_constr "t" (lib/set.ml[36,1452+18]..[36,1452+19])
                  []
                core_type (lib/set.ml[36,1452+23]..[36,1452+26])
                  Ptyp_constr "int" (lib/set.ml[36,1452+23]..[36,1452+26])
                  []
              []
          signature_item (lib/set.ml[37,1479+4]..[37,1479+31])
            Psig_value
            value_description "elements" (lib/set.ml[37,1479+8]..[37,1479+16]) (lib/set.ml[37,1479+4]..[37,1479+31])
              core_type (lib/set.ml[37,1479+18]..[37,1479+31])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[37,1479+18]..[37,1479+19])
                  Ptyp_constr "t" (lib/set.ml[37,1479+18]..[37,1479+19])
                  []
                core_type (lib/set.ml[37,1479+23]..[37,1479+31])
                  Ptyp_constr "list" (lib/set.ml[37,1479+27]..[37,1479+31])
                  [
                    core_type (lib/set.ml[37,1479+23]..[37,1479+26])
                      Ptyp_constr "elt" (lib/set.ml[37,1479+23]..[37,1479+26])
                      []
                  ]
              []
          signature_item (lib/set.ml[38,1511+4]..[38,1511+25])
            Psig_value
            value_description "min_elt" (lib/set.ml[38,1511+8]..[38,1511+15]) (lib/set.ml[38,1511+4]..[38,1511+25])
              core_type (lib/set.ml[38,1511+17]..[38,1511+25])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[38,1511+17]..[38,1511+18])
                  Ptyp_constr "t" (lib/set.ml[38,1511+17]..[38,1511+18])
                  []
                core_type (lib/set.ml[38,1511+22]..[38,1511+25])
                  Ptyp_constr "elt" (lib/set.ml[38,1511+22]..[38,1511+25])
                  []
              []
          signature_item (lib/set.ml[39,1537+4]..[39,1537+36])
            Psig_value
            value_description "min_elt_opt" (lib/set.ml[39,1537+8]..[39,1537+19]) (lib/set.ml[39,1537+4]..[39,1537+36])
              core_type (lib/set.ml[39,1537+21]..[39,1537+36])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[39,1537+21]..[39,1537+22])
                  Ptyp_constr "t" (lib/set.ml[39,1537+21]..[39,1537+22])
                  []
                core_type (lib/set.ml[39,1537+26]..[39,1537+36])
                  Ptyp_constr "option" (lib/set.ml[39,1537+30]..[39,1537+36])
                  [
                    core_type (lib/set.ml[39,1537+26]..[39,1537+29])
                      Ptyp_constr "elt" (lib/set.ml[39,1537+26]..[39,1537+29])
                      []
                  ]
              []
          signature_item (lib/set.ml[40,1574+4]..[40,1574+25])
            Psig_value
            value_description "max_elt" (lib/set.ml[40,1574+8]..[40,1574+15]) (lib/set.ml[40,1574+4]..[40,1574+25])
              core_type (lib/set.ml[40,1574+17]..[40,1574+25])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[40,1574+17]..[40,1574+18])
                  Ptyp_constr "t" (lib/set.ml[40,1574+17]..[40,1574+18])
                  []
                core_type (lib/set.ml[40,1574+22]..[40,1574+25])
                  Ptyp_constr "elt" (lib/set.ml[40,1574+22]..[40,1574+25])
                  []
              []
          signature_item (lib/set.ml[41,1600+4]..[41,1600+36])
            Psig_value
            value_description "max_elt_opt" (lib/set.ml[41,1600+8]..[41,1600+19]) (lib/set.ml[41,1600+4]..[41,1600+36])
              core_type (lib/set.ml[41,1600+21]..[41,1600+36])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[41,1600+21]..[41,1600+22])
                  Ptyp_constr "t" (lib/set.ml[41,1600+21]..[41,1600+22])
                  []
                core_type (lib/set.ml[41,1600+26]..[41,1600+36])
                  Ptyp_constr "option" (lib/set.ml[41,1600+30]..[41,1600+36])
                  [
                    core_type (lib/set.ml[41,1600+26]..[41,1600+29])
                      Ptyp_constr "elt" (lib/set.ml[41,1600+26]..[41,1600+29])
                      []
                  ]
              []
          signature_item (lib/set.ml[42,1637+4]..[42,1637+24])
            Psig_value
            value_description "choose" (lib/set.ml[42,1637+8]..[42,1637+14]) (lib/set.ml[42,1637+4]..[42,1637+24])
              core_type (lib/set.ml[42,1637+16]..[42,1637+24])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[42,1637+16]..[42,1637+17])
                  Ptyp_constr "t" (lib/set.ml[42,1637+16]..[42,1637+17])
                  []
                core_type (lib/set.ml[42,1637+21]..[42,1637+24])
                  Ptyp_constr "elt" (lib/set.ml[42,1637+21]..[42,1637+24])
                  []
              []
          signature_item (lib/set.ml[43,1662+4]..[43,1662+35])
            Psig_value
            value_description "choose_opt" (lib/set.ml[43,1662+8]..[43,1662+18]) (lib/set.ml[43,1662+4]..[43,1662+35])
              core_type (lib/set.ml[43,1662+20]..[43,1662+35])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[43,1662+20]..[43,1662+21])
                  Ptyp_constr "t" (lib/set.ml[43,1662+20]..[43,1662+21])
                  []
                core_type (lib/set.ml[43,1662+25]..[43,1662+35])
                  Ptyp_constr "option" (lib/set.ml[43,1662+29]..[43,1662+35])
                  [
                    core_type (lib/set.ml[43,1662+25]..[43,1662+28])
                      Ptyp_constr "elt" (lib/set.ml[43,1662+25]..[43,1662+28])
                      []
                  ]
              []
          signature_item (lib/set.ml[44,1698+4]..[44,1698+29])
            Psig_value
            value_description "find" (lib/set.ml[44,1698+8]..[44,1698+12]) (lib/set.ml[44,1698+4]..[44,1698+29])
              core_type (lib/set.ml[44,1698+14]..[44,1698+29])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[44,1698+14]..[44,1698+17])
                  Ptyp_constr "elt" (lib/set.ml[44,1698+14]..[44,1698+17])
                  []
                core_type (lib/set.ml[44,1698+21]..[44,1698+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[44,1698+21]..[44,1698+22])
                    Ptyp_constr "t" (lib/set.ml[44,1698+21]..[44,1698+22])
                    []
                  core_type (lib/set.ml[44,1698+26]..[44,1698+29])
                    Ptyp_constr "elt" (lib/set.ml[44,1698+26]..[44,1698+29])
                    []
              []
          signature_item (lib/set.ml[45,1728+4]..[45,1728+40])
            Psig_value
            value_description "find_opt" (lib/set.ml[45,1728+8]..[45,1728+16]) (lib/set.ml[45,1728+4]..[45,1728+40])
              core_type (lib/set.ml[45,1728+18]..[45,1728+40])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[45,1728+18]..[45,1728+21])
                  Ptyp_constr "elt" (lib/set.ml[45,1728+18]..[45,1728+21])
                  []
                core_type (lib/set.ml[45,1728+25]..[45,1728+40])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[45,1728+25]..[45,1728+26])
                    Ptyp_constr "t" (lib/set.ml[45,1728+25]..[45,1728+26])
                    []
                  core_type (lib/set.ml[45,1728+30]..[45,1728+40])
                    Ptyp_constr "option" (lib/set.ml[45,1728+34]..[45,1728+40])
                    [
                      core_type (lib/set.ml[45,1728+30]..[45,1728+33])
                        Ptyp_constr "elt" (lib/set.ml[45,1728+30]..[45,1728+33])
                        []
                    ]
              []
          signature_item (lib/set.ml[46,1769+4]..[46,1769+45])
            Psig_value
            value_description "find_first" (lib/set.ml[46,1769+8]..[46,1769+18]) (lib/set.ml[46,1769+4]..[46,1769+45])
              core_type (lib/set.ml[46,1769+20]..[46,1769+45])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[46,1769+21]..[46,1769+32])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[46,1769+21]..[46,1769+24])
                    Ptyp_constr "elt" (lib/set.ml[46,1769+21]..[46,1769+24])
                    []
                  core_type (lib/set.ml[46,1769+28]..[46,1769+32])
                    Ptyp_constr "bool" (lib/set.ml[46,1769+28]..[46,1769+32])
                    []
                core_type (lib/set.ml[46,1769+37]..[46,1769+45])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[46,1769+37]..[46,1769+38])
                    Ptyp_constr "t" (lib/set.ml[46,1769+37]..[46,1769+38])
                    []
                  core_type (lib/set.ml[46,1769+42]..[46,1769+45])
                    Ptyp_constr "elt" (lib/set.ml[46,1769+42]..[46,1769+45])
                    []
              []
          signature_item (lib/set.ml[47,1815+4]..[47,1815+56])
            Psig_value
            value_description "find_first_opt" (lib/set.ml[47,1815+8]..[47,1815+22]) (lib/set.ml[47,1815+4]..[47,1815+56])
              core_type (lib/set.ml[47,1815+24]..[47,1815+56])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[47,1815+25]..[47,1815+36])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[47,1815+25]..[47,1815+28])
                    Ptyp_constr "elt" (lib/set.ml[47,1815+25]..[47,1815+28])
                    []
                  core_type (lib/set.ml[47,1815+32]..[47,1815+36])
                    Ptyp_constr "bool" (lib/set.ml[47,1815+32]..[47,1815+36])
                    []
                core_type (lib/set.ml[47,1815+41]..[47,1815+56])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[47,1815+41]..[47,1815+42])
                    Ptyp_constr "t" (lib/set.ml[47,1815+41]..[47,1815+42])
                    []
                  core_type (lib/set.ml[47,1815+46]..[47,1815+56])
                    Ptyp_constr "option" (lib/set.ml[47,1815+50]..[47,1815+56])
                    [
                      core_type (lib/set.ml[47,1815+46]..[47,1815+49])
                        Ptyp_constr "elt" (lib/set.ml[47,1815+46]..[47,1815+49])
                        []
                    ]
              []
          signature_item (lib/set.ml[48,1872+4]..[48,1872+44])
            Psig_value
            value_description "find_last" (lib/set.ml[48,1872+8]..[48,1872+17]) (lib/set.ml[48,1872+4]..[48,1872+44])
              core_type (lib/set.ml[48,1872+19]..[48,1872+44])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[48,1872+20]..[48,1872+31])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[48,1872+20]..[48,1872+23])
                    Ptyp_constr "elt" (lib/set.ml[48,1872+20]..[48,1872+23])
                    []
                  core_type (lib/set.ml[48,1872+27]..[48,1872+31])
                    Ptyp_constr "bool" (lib/set.ml[48,1872+27]..[48,1872+31])
                    []
                core_type (lib/set.ml[48,1872+36]..[48,1872+44])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[48,1872+36]..[48,1872+37])
                    Ptyp_constr "t" (lib/set.ml[48,1872+36]..[48,1872+37])
                    []
                  core_type (lib/set.ml[48,1872+41]..[48,1872+44])
                    Ptyp_constr "elt" (lib/set.ml[48,1872+41]..[48,1872+44])
                    []
              []
          signature_item (lib/set.ml[49,1917+4]..[49,1917+55])
            Psig_value
            value_description "find_last_opt" (lib/set.ml[49,1917+8]..[49,1917+21]) (lib/set.ml[49,1917+4]..[49,1917+55])
              core_type (lib/set.ml[49,1917+23]..[49,1917+55])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[49,1917+24]..[49,1917+35])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[49,1917+24]..[49,1917+27])
                    Ptyp_constr "elt" (lib/set.ml[49,1917+24]..[49,1917+27])
                    []
                  core_type (lib/set.ml[49,1917+31]..[49,1917+35])
                    Ptyp_constr "bool" (lib/set.ml[49,1917+31]..[49,1917+35])
                    []
                core_type (lib/set.ml[49,1917+40]..[49,1917+55])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[49,1917+40]..[49,1917+41])
                    Ptyp_constr "t" (lib/set.ml[49,1917+40]..[49,1917+41])
                    []
                  core_type (lib/set.ml[49,1917+45]..[49,1917+55])
                    Ptyp_constr "option" (lib/set.ml[49,1917+49]..[49,1917+55])
                    [
                      core_type (lib/set.ml[49,1917+45]..[49,1917+48])
                        Ptyp_constr "elt" (lib/set.ml[49,1917+45]..[49,1917+48])
                        []
                    ]
              []
          signature_item (lib/set.ml[50,1973+4]..[50,1973+40])
            Psig_value
            value_description "iter" (lib/set.ml[50,1973+8]..[50,1973+12]) (lib/set.ml[50,1973+4]..[50,1973+40])
              core_type (lib/set.ml[50,1973+14]..[50,1973+40])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[50,1973+15]..[50,1973+26])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[50,1973+15]..[50,1973+18])
                    Ptyp_constr "elt" (lib/set.ml[50,1973+15]..[50,1973+18])
                    []
                  core_type (lib/set.ml[50,1973+22]..[50,1973+26])
                    Ptyp_constr "unit" (lib/set.ml[50,1973+22]..[50,1973+26])
                    []
                core_type (lib/set.ml[50,1973+31]..[50,1973+40])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[50,1973+31]..[50,1973+32])
                    Ptyp_constr "t" (lib/set.ml[50,1973+31]..[50,1973+32])
                    []
                  core_type (lib/set.ml[50,1973+36]..[50,1973+40])
                    Ptyp_constr "unit" (lib/set.ml[50,1973+36]..[50,1973+40])
                    []
              []
          signature_item (lib/set.ml[51,2014+4]..[51,2014+48])
            Psig_value
            value_description "fold" (lib/set.ml[51,2014+8]..[51,2014+12]) (lib/set.ml[51,2014+4]..[51,2014+48])
              core_type (lib/set.ml[51,2014+14]..[51,2014+48])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[51,2014+15]..[51,2014+30])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[51,2014+15]..[51,2014+18])
                    Ptyp_constr "elt" (lib/set.ml[51,2014+15]..[51,2014+18])
                    []
                  core_type (lib/set.ml[51,2014+22]..[51,2014+30])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/set.ml[51,2014+22]..[51,2014+24])
                      Ptyp_var a
                    core_type (lib/set.ml[51,2014+28]..[51,2014+30])
                      Ptyp_var a
                core_type (lib/set.ml[51,2014+35]..[51,2014+48])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[51,2014+35]..[51,2014+36])
                    Ptyp_constr "t" (lib/set.ml[51,2014+35]..[51,2014+36])
                    []
                  core_type (lib/set.ml[51,2014+40]..[51,2014+48])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/set.ml[51,2014+40]..[51,2014+42])
                      Ptyp_var a
                    core_type (lib/set.ml[51,2014+46]..[51,2014+48])
                      Ptyp_var a
              []
          signature_item (lib/set.ml[52,2063+4]..[52,2063+35])
            Psig_value
            value_description "map" (lib/set.ml[52,2063+8]..[52,2063+11]) (lib/set.ml[52,2063+4]..[52,2063+35])
              core_type (lib/set.ml[52,2063+13]..[52,2063+35])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[52,2063+14]..[52,2063+24])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[52,2063+14]..[52,2063+17])
                    Ptyp_constr "elt" (lib/set.ml[52,2063+14]..[52,2063+17])
                    []
                  core_type (lib/set.ml[52,2063+21]..[52,2063+24])
                    Ptyp_constr "elt" (lib/set.ml[52,2063+21]..[52,2063+24])
                    []
                core_type (lib/set.ml[52,2063+29]..[52,2063+35])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[52,2063+29]..[52,2063+30])
                    Ptyp_constr "t" (lib/set.ml[52,2063+29]..[52,2063+30])
                    []
                  core_type (lib/set.ml[52,2063+34]..[52,2063+35])
                    Ptyp_constr "t" (lib/set.ml[52,2063+34]..[52,2063+35])
                    []
              []
          signature_item (lib/set.ml[53,2099+4]..[53,2099+39])
            Psig_value
            value_description "filter" (lib/set.ml[53,2099+8]..[53,2099+14]) (lib/set.ml[53,2099+4]..[53,2099+39])
              core_type (lib/set.ml[53,2099+16]..[53,2099+39])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[53,2099+17]..[53,2099+28])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[53,2099+17]..[53,2099+20])
                    Ptyp_constr "elt" (lib/set.ml[53,2099+17]..[53,2099+20])
                    []
                  core_type (lib/set.ml[53,2099+24]..[53,2099+28])
                    Ptyp_constr "bool" (lib/set.ml[53,2099+24]..[53,2099+28])
                    []
                core_type (lib/set.ml[53,2099+33]..[53,2099+39])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[53,2099+33]..[53,2099+34])
                    Ptyp_constr "t" (lib/set.ml[53,2099+33]..[53,2099+34])
                    []
                  core_type (lib/set.ml[53,2099+38]..[53,2099+39])
                    Ptyp_constr "t" (lib/set.ml[53,2099+38]..[53,2099+39])
                    []
              []
          signature_item (lib/set.ml[54,2139+4]..[54,2139+49])
            Psig_value
            value_description "filter_map" (lib/set.ml[54,2139+8]..[54,2139+18]) (lib/set.ml[54,2139+4]..[54,2139+49])
              core_type (lib/set.ml[54,2139+20]..[54,2139+49])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[54,2139+21]..[54,2139+38])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[54,2139+21]..[54,2139+24])
                    Ptyp_constr "elt" (lib/set.ml[54,2139+21]..[54,2139+24])
                    []
                  core_type (lib/set.ml[54,2139+28]..[54,2139+38])
                    Ptyp_constr "option" (lib/set.ml[54,2139+32]..[54,2139+38])
                    [
                      core_type (lib/set.ml[54,2139+28]..[54,2139+31])
                        Ptyp_constr "elt" (lib/set.ml[54,2139+28]..[54,2139+31])
                        []
                    ]
                core_type (lib/set.ml[54,2139+43]..[54,2139+49])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[54,2139+43]..[54,2139+44])
                    Ptyp_constr "t" (lib/set.ml[54,2139+43]..[54,2139+44])
                    []
                  core_type (lib/set.ml[54,2139+48]..[54,2139+49])
                    Ptyp_constr "t" (lib/set.ml[54,2139+48]..[54,2139+49])
                    []
              []
          signature_item (lib/set.ml[55,2189+4]..[55,2189+46])
            Psig_value
            value_description "partition" (lib/set.ml[55,2189+8]..[55,2189+17]) (lib/set.ml[55,2189+4]..[55,2189+46])
              core_type (lib/set.ml[55,2189+19]..[55,2189+46])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[55,2189+20]..[55,2189+31])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[55,2189+20]..[55,2189+23])
                    Ptyp_constr "elt" (lib/set.ml[55,2189+20]..[55,2189+23])
                    []
                  core_type (lib/set.ml[55,2189+27]..[55,2189+31])
                    Ptyp_constr "bool" (lib/set.ml[55,2189+27]..[55,2189+31])
                    []
                core_type (lib/set.ml[55,2189+36]..[55,2189+46])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[55,2189+36]..[55,2189+37])
                    Ptyp_constr "t" (lib/set.ml[55,2189+36]..[55,2189+37])
                    []
                  core_type (lib/set.ml[55,2189+41]..[55,2189+46])
                    Ptyp_tuple
                    [
                      core_type (lib/set.ml[55,2189+41]..[55,2189+42])
                        Ptyp_constr "t" (lib/set.ml[55,2189+41]..[55,2189+42])
                        []
                      core_type (lib/set.ml[55,2189+45]..[55,2189+46])
                        Ptyp_constr "t" (lib/set.ml[55,2189+45]..[55,2189+46])
                        []
                    ]
              []
          signature_item (lib/set.ml[56,2236+4]..[56,2236+39])
            Psig_value
            value_description "split" (lib/set.ml[56,2236+8]..[56,2236+13]) (lib/set.ml[56,2236+4]..[56,2236+39])
              core_type (lib/set.ml[56,2236+15]..[56,2236+39])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[56,2236+15]..[56,2236+18])
                  Ptyp_constr "elt" (lib/set.ml[56,2236+15]..[56,2236+18])
                  []
                core_type (lib/set.ml[56,2236+22]..[56,2236+39])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[56,2236+22]..[56,2236+23])
                    Ptyp_constr "t" (lib/set.ml[56,2236+22]..[56,2236+23])
                    []
                  core_type (lib/set.ml[56,2236+27]..[56,2236+39])
                    Ptyp_tuple
                    [
                      core_type (lib/set.ml[56,2236+27]..[56,2236+28])
                        Ptyp_constr "t" (lib/set.ml[56,2236+27]..[56,2236+28])
                        []
                      core_type (lib/set.ml[56,2236+31]..[56,2236+35])
                        Ptyp_constr "bool" (lib/set.ml[56,2236+31]..[56,2236+35])
                        []
                      core_type (lib/set.ml[56,2236+38]..[56,2236+39])
                        Ptyp_constr "t" (lib/set.ml[56,2236+38]..[56,2236+39])
                        []
                    ]
              []
          signature_item (lib/set.ml[57,2276+4]..[57,2276+27])
            Psig_value
            value_description "is_empty" (lib/set.ml[57,2276+8]..[57,2276+16]) (lib/set.ml[57,2276+4]..[57,2276+27])
              core_type (lib/set.ml[57,2276+18]..[57,2276+27])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[57,2276+18]..[57,2276+19])
                  Ptyp_constr "t" (lib/set.ml[57,2276+18]..[57,2276+19])
                  []
                core_type (lib/set.ml[57,2276+23]..[57,2276+27])
                  Ptyp_constr "bool" (lib/set.ml[57,2276+23]..[57,2276+27])
                  []
              []
          signature_item (lib/set.ml[58,2304+4]..[58,2304+29])
            Psig_value
            value_description "mem" (lib/set.ml[58,2304+8]..[58,2304+11]) (lib/set.ml[58,2304+4]..[58,2304+29])
              core_type (lib/set.ml[58,2304+13]..[58,2304+29])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[58,2304+13]..[58,2304+16])
                  Ptyp_constr "elt" (lib/set.ml[58,2304+13]..[58,2304+16])
                  []
                core_type (lib/set.ml[58,2304+20]..[58,2304+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[58,2304+20]..[58,2304+21])
                    Ptyp_constr "t" (lib/set.ml[58,2304+20]..[58,2304+21])
                    []
                  core_type (lib/set.ml[58,2304+25]..[58,2304+29])
                    Ptyp_constr "bool" (lib/set.ml[58,2304+25]..[58,2304+29])
                    []
              []
          signature_item (lib/set.ml[59,2334+4]..[59,2334+29])
            Psig_value
            value_description "equal" (lib/set.ml[59,2334+8]..[59,2334+13]) (lib/set.ml[59,2334+4]..[59,2334+29])
              core_type (lib/set.ml[59,2334+15]..[59,2334+29])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[59,2334+15]..[59,2334+16])
                  Ptyp_constr "t" (lib/set.ml[59,2334+15]..[59,2334+16])
                  []
                core_type (lib/set.ml[59,2334+20]..[59,2334+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[59,2334+20]..[59,2334+21])
                    Ptyp_constr "t" (lib/set.ml[59,2334+20]..[59,2334+21])
                    []
                  core_type (lib/set.ml[59,2334+25]..[59,2334+29])
                    Ptyp_constr "bool" (lib/set.ml[59,2334+25]..[59,2334+29])
                    []
              []
          signature_item (lib/set.ml[60,2364+4]..[60,2364+30])
            Psig_value
            value_description "compare" (lib/set.ml[60,2364+8]..[60,2364+15]) (lib/set.ml[60,2364+4]..[60,2364+30])
              core_type (lib/set.ml[60,2364+17]..[60,2364+30])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[60,2364+17]..[60,2364+18])
                  Ptyp_constr "t" (lib/set.ml[60,2364+17]..[60,2364+18])
                  []
                core_type (lib/set.ml[60,2364+22]..[60,2364+30])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[60,2364+22]..[60,2364+23])
                    Ptyp_constr "t" (lib/set.ml[60,2364+22]..[60,2364+23])
                    []
                  core_type (lib/set.ml[60,2364+27]..[60,2364+30])
                    Ptyp_constr "int" (lib/set.ml[60,2364+27]..[60,2364+30])
                    []
              []
          signature_item (lib/set.ml[61,2395+4]..[61,2395+30])
            Psig_value
            value_description "subset" (lib/set.ml[61,2395+8]..[61,2395+14]) (lib/set.ml[61,2395+4]..[61,2395+30])
              core_type (lib/set.ml[61,2395+16]..[61,2395+30])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[61,2395+16]..[61,2395+17])
                  Ptyp_constr "t" (lib/set.ml[61,2395+16]..[61,2395+17])
                  []
                core_type (lib/set.ml[61,2395+21]..[61,2395+30])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[61,2395+21]..[61,2395+22])
                    Ptyp_constr "t" (lib/set.ml[61,2395+21]..[61,2395+22])
                    []
                  core_type (lib/set.ml[61,2395+26]..[61,2395+30])
                    Ptyp_constr "bool" (lib/set.ml[61,2395+26]..[61,2395+30])
                    []
              []
          signature_item (lib/set.ml[62,2426+4]..[62,2426+43])
            Psig_value
            value_description "for_all" (lib/set.ml[62,2426+8]..[62,2426+15]) (lib/set.ml[62,2426+4]..[62,2426+43])
              core_type (lib/set.ml[62,2426+17]..[62,2426+43])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[62,2426+18]..[62,2426+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[62,2426+18]..[62,2426+21])
                    Ptyp_constr "elt" (lib/set.ml[62,2426+18]..[62,2426+21])
                    []
                  core_type (lib/set.ml[62,2426+25]..[62,2426+29])
                    Ptyp_constr "bool" (lib/set.ml[62,2426+25]..[62,2426+29])
                    []
                core_type (lib/set.ml[62,2426+34]..[62,2426+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[62,2426+34]..[62,2426+35])
                    Ptyp_constr "t" (lib/set.ml[62,2426+34]..[62,2426+35])
                    []
                  core_type (lib/set.ml[62,2426+39]..[62,2426+43])
                    Ptyp_constr "bool" (lib/set.ml[62,2426+39]..[62,2426+43])
                    []
              []
          signature_item (lib/set.ml[63,2470+4]..[63,2470+42])
            Psig_value
            value_description "exists" (lib/set.ml[63,2470+8]..[63,2470+14]) (lib/set.ml[63,2470+4]..[63,2470+42])
              core_type (lib/set.ml[63,2470+16]..[63,2470+42])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[63,2470+17]..[63,2470+28])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[63,2470+17]..[63,2470+20])
                    Ptyp_constr "elt" (lib/set.ml[63,2470+17]..[63,2470+20])
                    []
                  core_type (lib/set.ml[63,2470+24]..[63,2470+28])
                    Ptyp_constr "bool" (lib/set.ml[63,2470+24]..[63,2470+28])
                    []
                core_type (lib/set.ml[63,2470+33]..[63,2470+42])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[63,2470+33]..[63,2470+34])
                    Ptyp_constr "t" (lib/set.ml[63,2470+33]..[63,2470+34])
                    []
                  core_type (lib/set.ml[63,2470+38]..[63,2470+42])
                    Ptyp_constr "bool" (lib/set.ml[63,2470+38]..[63,2470+42])
                    []
              []
          signature_item (lib/set.ml[64,2513+4]..[64,2513+31])
            Psig_value
            value_description "to_list" (lib/set.ml[64,2513+8]..[64,2513+15]) (lib/set.ml[64,2513+4]..[64,2513+31])
              core_type (lib/set.ml[64,2513+18]..[64,2513+31])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[64,2513+18]..[64,2513+19])
                  Ptyp_constr "t" (lib/set.ml[64,2513+18]..[64,2513+19])
                  []
                core_type (lib/set.ml[64,2513+23]..[64,2513+31])
                  Ptyp_constr "list" (lib/set.ml[64,2513+27]..[64,2513+31])
                  [
                    core_type (lib/set.ml[64,2513+23]..[64,2513+26])
                      Ptyp_constr "elt" (lib/set.ml[64,2513+23]..[64,2513+26])
                      []
                  ]
              []
          signature_item (lib/set.ml[65,2545+4]..[65,2545+30])
            Psig_value
            value_description "of_list" (lib/set.ml[65,2545+8]..[65,2545+15]) (lib/set.ml[65,2545+4]..[65,2545+30])
              core_type (lib/set.ml[65,2545+17]..[65,2545+30])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[65,2545+17]..[65,2545+25])
                  Ptyp_constr "list" (lib/set.ml[65,2545+21]..[65,2545+25])
                  [
                    core_type (lib/set.ml[65,2545+17]..[65,2545+20])
                      Ptyp_constr "elt" (lib/set.ml[65,2545+17]..[65,2545+20])
                      []
                  ]
                core_type (lib/set.ml[65,2545+29]..[65,2545+30])
                  Ptyp_constr "t" (lib/set.ml[65,2545+29]..[65,2545+30])
                  []
              []
          signature_item (lib/set.ml[66,2576+4]..[66,2576+43])
            Psig_value
            value_description "to_seq_from" (lib/set.ml[66,2576+8]..[66,2576+19]) (lib/set.ml[66,2576+4]..[66,2576+43])
              core_type (lib/set.ml[66,2576+22]..[66,2576+43])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[66,2576+22]..[66,2576+25])
                  Ptyp_constr "elt" (lib/set.ml[66,2576+22]..[66,2576+25])
                  []
                core_type (lib/set.ml[66,2576+29]..[66,2576+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[66,2576+29]..[66,2576+30])
                    Ptyp_constr "t" (lib/set.ml[66,2576+29]..[66,2576+30])
                    []
                  core_type (lib/set.ml[66,2576+34]..[66,2576+43])
                    Ptyp_constr "Seq.t" (lib/set.ml[66,2576+38]..[66,2576+43])
                    [
                      core_type (lib/set.ml[66,2576+34]..[66,2576+37])
                        Ptyp_constr "elt" (lib/set.ml[66,2576+34]..[66,2576+37])
                        []
                    ]
              []
          signature_item (lib/set.ml[67,2620+4]..[67,2620+31])
            Psig_value
            value_description "to_seq" (lib/set.ml[67,2620+8]..[67,2620+14]) (lib/set.ml[67,2620+4]..[67,2620+31])
              core_type (lib/set.ml[67,2620+17]..[67,2620+31])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[67,2620+17]..[67,2620+18])
                  Ptyp_constr "t" (lib/set.ml[67,2620+17]..[67,2620+18])
                  []
                core_type (lib/set.ml[67,2620+22]..[67,2620+31])
                  Ptyp_constr "Seq.t" (lib/set.ml[67,2620+26]..[67,2620+31])
                  [
                    core_type (lib/set.ml[67,2620+22]..[67,2620+25])
                      Ptyp_constr "elt" (lib/set.ml[67,2620+22]..[67,2620+25])
                      []
                  ]
              []
          signature_item (lib/set.ml[68,2652+4]..[68,2652+35])
            Psig_value
            value_description "to_rev_seq" (lib/set.ml[68,2652+8]..[68,2652+18]) (lib/set.ml[68,2652+4]..[68,2652+35])
              core_type (lib/set.ml[68,2652+21]..[68,2652+35])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[68,2652+21]..[68,2652+22])
                  Ptyp_constr "t" (lib/set.ml[68,2652+21]..[68,2652+22])
                  []
                core_type (lib/set.ml[68,2652+26]..[68,2652+35])
                  Ptyp_constr "Seq.t" (lib/set.ml[68,2652+30]..[68,2652+35])
                  [
                    core_type (lib/set.ml[68,2652+26]..[68,2652+29])
                      Ptyp_constr "elt" (lib/set.ml[68,2652+26]..[68,2652+29])
                      []
                  ]
              []
          signature_item (lib/set.ml[69,2688+4]..[69,2688+37])
            Psig_value
            value_description "add_seq" (lib/set.ml[69,2688+8]..[69,2688+15]) (lib/set.ml[69,2688+4]..[69,2688+37])
              core_type (lib/set.ml[69,2688+18]..[69,2688+37])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[69,2688+18]..[69,2688+27])
                  Ptyp_constr "Seq.t" (lib/set.ml[69,2688+22]..[69,2688+27])
                  [
                    core_type (lib/set.ml[69,2688+18]..[69,2688+21])
                      Ptyp_constr "elt" (lib/set.ml[69,2688+18]..[69,2688+21])
                      []
                  ]
                core_type (lib/set.ml[69,2688+31]..[69,2688+37])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/set.ml[69,2688+31]..[69,2688+32])
                    Ptyp_constr "t" (lib/set.ml[69,2688+31]..[69,2688+32])
                    []
                  core_type (lib/set.ml[69,2688+36]..[69,2688+37])
                    Ptyp_constr "t" (lib/set.ml[69,2688+36]..[69,2688+37])
                    []
              []
          signature_item (lib/set.ml[70,2726+4]..[70,2726+31])
            Psig_value
            value_description "of_seq" (lib/set.ml[70,2726+8]..[70,2726+14]) (lib/set.ml[70,2726+4]..[70,2726+31])
              core_type (lib/set.ml[70,2726+17]..[70,2726+31])
                Ptyp_arrow
                Nolabel
                core_type (lib/set.ml[70,2726+17]..[70,2726+26])
                  Ptyp_constr "Seq.t" (lib/set.ml[70,2726+21]..[70,2726+26])
                  [
                    core_type (lib/set.ml[70,2726+17]..[70,2726+20])
                      Ptyp_constr "elt" (lib/set.ml[70,2726+17]..[70,2726+20])
                      []
                  ]
                core_type (lib/set.ml[70,2726+30]..[70,2726+31])
                  Ptyp_constr "t" (lib/set.ml[70,2726+30]..[70,2726+31])
                  []
              []
        ]
  structure_item (lib/set.ml[73,2765+0]..[623,19523+5])
    Pstr_module
    "Make" (lib/set.ml[73,2765+7]..[73,2765+11])
      module_expr (lib/set.ml[73,2765+11]..[623,19523+5])
        Pmod_functor "Ord" (lib/set.ml[73,2765+12]..[73,2765+15])
        module_type (lib/set.ml[73,2765+17]..[73,2765+28])
          Pmty_ident "OrderedType" (lib/set.ml[73,2765+17]..[73,2765+28])
        module_expr (lib/set.ml[74,2797+2]..[623,19523+5])
          Pmod_structure
          [
            structure_item (lib/set.ml[75,2806+4]..[75,2806+20])
              Pstr_type Rec
              [
                type_declaration "elt" (lib/set.ml[75,2806+9]..[75,2806+12]) (lib/set.ml[75,2806+4]..[75,2806+20])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/set.ml[75,2806+15]..[75,2806+20])
                        Ptyp_constr "Ord.t" (lib/set.ml[75,2806+15]..[75,2806+20])
                        []
              ]
            structure_item (lib/set.ml[76,2827+4]..[76,2827+53])
              Pstr_type Rec
              [
                type_declaration "t" (lib/set.ml[76,2827+9]..[76,2827+10]) (lib/set.ml[76,2827+4]..[76,2827+53])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (lib/set.ml[76,2827+13]..[76,2827+18])
                          "Empty" (lib/set.ml[76,2827+13]..[76,2827+18])
                          []
                          None
                        (lib/set.ml[76,2827+19]..[76,2827+53])
                          "Node" (lib/set.ml[76,2827+21]..[76,2827+25])
                          [
                            (lib/set.ml[76,2827+30]..[76,2827+34])
                              Immutable
                              "l" (lib/set.ml[76,2827+30]..[76,2827+31])                              core_type (lib/set.ml[76,2827+32]..[76,2827+33])
                                Ptyp_constr "t" (lib/set.ml[76,2827+32]..[76,2827+33])
                                []
                            (lib/set.ml[76,2827+35]..[76,2827+41])
                              Immutable
                              "v" (lib/set.ml[76,2827+35]..[76,2827+36])                              core_type (lib/set.ml[76,2827+37]..[76,2827+40])
                                Ptyp_constr "elt" (lib/set.ml[76,2827+37]..[76,2827+40])
                                []
                            (lib/set.ml[76,2827+42]..[76,2827+46])
                              Immutable
                              "r" (lib/set.ml[76,2827+42]..[76,2827+43])                              core_type (lib/set.ml[76,2827+44]..[76,2827+45])
                                Ptyp_constr "t" (lib/set.ml[76,2827+44]..[76,2827+45])
                                []
                            (lib/set.ml[76,2827+47]..[76,2827+52])
                              Immutable
                              "h" (lib/set.ml[76,2827+47]..[76,2827+48])                              core_type (lib/set.ml[76,2827+49]..[76,2827+52])
                                Ptyp_constr "int" (lib/set.ml[76,2827+49]..[76,2827+52])
                                []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lib/set.ml[81,2995+4]..[83,3040+21])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[81,2995+8]..[81,2995+14])
                    Ppat_var "height" (lib/set.ml[81,2995+8]..[81,2995+14])
                  expression (lib/set.ml[81,2995+17]..[83,3040+21])
                    Pexp_function
                    []
                    None
                    Pfunction_cases (lib/set.ml[81,2995+17]..[83,3040+21])
                      [
                        <case>
                          pattern (lib/set.ml[82,3021+8]..[82,3021+13])
                            Ppat_construct "Empty" (lib/set.ml[82,3021+8]..[82,3021+13])
                            None
                          expression (lib/set.ml[82,3021+17]..[82,3021+18])
                            Pexp_constant PConst_int (0,None)
                        <case>
                          pattern (lib/set.ml[83,3040+8]..[83,3040+16])
                            Ppat_construct "Node" (lib/set.ml[83,3040+8]..[83,3040+12])
                            Some
                              []
                              pattern (lib/set.ml[83,3040+13]..[83,3040+16])
                                Ppat_record Closed
                                [
                                  "h" (lib/set.ml[83,3040+14]..[83,3040+15]) ghost
                                    pattern (lib/set.ml[83,3040+14]..[83,3040+15])
                                      Ppat_var "h" (lib/set.ml[83,3040+14]..[83,3040+15])
                                ]
                          expression (lib/set.ml[83,3040+20]..[83,3040+21])
                            Pexp_ident "h" (lib/set.ml[83,3040+20]..[83,3040+21])
                      ]
              ]
            structure_item (lib/set.ml[90,3316+4]..[93,3455+60])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[90,3316+8]..[90,3316+14])
                    Ppat_var "create" (lib/set.ml[90,3316+8]..[90,3316+14])
                  expression (lib/set.ml[90,3316+15]..[93,3455+60]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[90,3316+15]..[90,3316+16])
                        Nolabel
                        None
                        pattern (lib/set.ml[90,3316+15]..[90,3316+16])
                          Ppat_var "l" (lib/set.ml[90,3316+15]..[90,3316+16])
                      Pparam_val (lib/set.ml[90,3316+17]..[90,3316+18])
                        Nolabel
                        None
                        pattern (lib/set.ml[90,3316+17]..[90,3316+18])
                          Ppat_var "v" (lib/set.ml[90,3316+17]..[90,3316+18])
                      Pparam_val (lib/set.ml[90,3316+19]..[90,3316+20])
                        Nolabel
                        None
                        pattern (lib/set.ml[90,3316+19]..[90,3316+20])
                          Ppat_var "r" (lib/set.ml[90,3316+19]..[90,3316+20])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[91,3339+6]..[93,3455+60])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/set.ml[91,3339+10]..[91,3339+12])
                              Ppat_var "hl" (lib/set.ml[91,3339+10]..[91,3339+12])
                            expression (lib/set.ml[91,3339+15]..[91,3339+54])
                              Pexp_match
                              expression (lib/set.ml[91,3339+21]..[91,3339+22])
                                Pexp_ident "l" (lib/set.ml[91,3339+21]..[91,3339+22])
                              [
                                <case>
                                  pattern (lib/set.ml[91,3339+28]..[91,3339+33])
                                    Ppat_construct "Empty" (lib/set.ml[91,3339+28]..[91,3339+33])
                                    None
                                  expression (lib/set.ml[91,3339+37]..[91,3339+38])
                                    Pexp_constant PConst_int (0,None)
                                <case>
                                  pattern (lib/set.ml[91,3339+41]..[91,3339+49])
                                    Ppat_construct "Node" (lib/set.ml[91,3339+41]..[91,3339+45])
                                    Some
                                      []
                                      pattern (lib/set.ml[91,3339+46]..[91,3339+49])
                                        Ppat_record Closed
                                        [
                                          "h" (lib/set.ml[91,3339+47]..[91,3339+48]) ghost
                                            pattern (lib/set.ml[91,3339+47]..[91,3339+48])
                                              Ppat_var "h" (lib/set.ml[91,3339+47]..[91,3339+48])
                                        ]
                                  expression (lib/set.ml[91,3339+53]..[91,3339+54])
                                    Pexp_ident "h" (lib/set.ml[91,3339+53]..[91,3339+54])
                              ]
                        ]
                        expression (lib/set.ml[92,3397+6]..[93,3455+60])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/set.ml[92,3397+10]..[92,3397+12])
                                Ppat_var "hr" (lib/set.ml[92,3397+10]..[92,3397+12])
                              expression (lib/set.ml[92,3397+15]..[92,3397+54])
                                Pexp_match
                                expression (lib/set.ml[92,3397+21]..[92,3397+22])
                                  Pexp_ident "r" (lib/set.ml[92,3397+21]..[92,3397+22])
                                [
                                  <case>
                                    pattern (lib/set.ml[92,3397+28]..[92,3397+33])
                                      Ppat_construct "Empty" (lib/set.ml[92,3397+28]..[92,3397+33])
                                      None
                                    expression (lib/set.ml[92,3397+37]..[92,3397+38])
                                      Pexp_constant PConst_int (0,None)
                                  <case>
                                    pattern (lib/set.ml[92,3397+41]..[92,3397+49])
                                      Ppat_construct "Node" (lib/set.ml[92,3397+41]..[92,3397+45])
                                      Some
                                        []
                                        pattern (lib/set.ml[92,3397+46]..[92,3397+49])
                                          Ppat_record Closed
                                          [
                                            "h" (lib/set.ml[92,3397+47]..[92,3397+48]) ghost
                                              pattern (lib/set.ml[92,3397+47]..[92,3397+48])
                                                Ppat_var "h" (lib/set.ml[92,3397+47]..[92,3397+48])
                                          ]
                                    expression (lib/set.ml[92,3397+53]..[92,3397+54])
                                      Pexp_ident "h" (lib/set.ml[92,3397+53]..[92,3397+54])
                                ]
                          ]
                          expression (lib/set.ml[93,3455+6]..[93,3455+60])
                            Pexp_construct "Node" (lib/set.ml[93,3455+6]..[93,3455+10])
                            Some
                              expression (lib/set.ml[93,3455+10]..[93,3455+60])
                                Pexp_record
                                [
                                  "l" (lib/set.ml[93,3455+11]..[93,3455+12]) ghost
                                    expression (lib/set.ml[93,3455+11]..[93,3455+12])
                                      Pexp_ident "l" (lib/set.ml[93,3455+11]..[93,3455+12])
                                  "v" (lib/set.ml[93,3455+14]..[93,3455+15]) ghost
                                    expression (lib/set.ml[93,3455+14]..[93,3455+15])
                                      Pexp_ident "v" (lib/set.ml[93,3455+14]..[93,3455+15])
                                  "r" (lib/set.ml[93,3455+17]..[93,3455+18]) ghost
                                    expression (lib/set.ml[93,3455+17]..[93,3455+18])
                                      Pexp_ident "r" (lib/set.ml[93,3455+17]..[93,3455+18])
                                  "h" (lib/set.ml[93,3455+20]..[93,3455+21])
                                    expression (lib/set.ml[93,3455+22]..[93,3455+59])
                                      Pexp_ifthenelse
                                      expression (lib/set.ml[93,3455+26]..[93,3455+34])
                                        Pexp_apply
                                        expression (lib/set.ml[93,3455+29]..[93,3455+31])
                                          Pexp_ident ">=" (lib/set.ml[93,3455+29]..[93,3455+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[93,3455+26]..[93,3455+28])
                                              Pexp_ident "hl" (lib/set.ml[93,3455+26]..[93,3455+28])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[93,3455+32]..[93,3455+34])
                                              Pexp_ident "hr" (lib/set.ml[93,3455+32]..[93,3455+34])
                                        ]
                                      expression (lib/set.ml[93,3455+40]..[93,3455+46])
                                        Pexp_apply
                                        expression (lib/set.ml[93,3455+43]..[93,3455+44])
                                          Pexp_ident "+" (lib/set.ml[93,3455+43]..[93,3455+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[93,3455+40]..[93,3455+42])
                                              Pexp_ident "hl" (lib/set.ml[93,3455+40]..[93,3455+42])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[93,3455+45]..[93,3455+46])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                      Some
                                        expression (lib/set.ml[93,3455+52]..[93,3455+58])
                                          Pexp_apply
                                          expression (lib/set.ml[93,3455+55]..[93,3455+56])
                                            Pexp_ident "+" (lib/set.ml[93,3455+55]..[93,3455+56])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[93,3455+52]..[93,3455+54])
                                                Pexp_ident "hr" (lib/set.ml[93,3455+52]..[93,3455+54])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[93,3455+57]..[93,3455+58])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                ]
                                None
              ]
            structure_item (lib/set.ml[100,3779+4]..[128,4818+62])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[100,3779+8]..[100,3779+11])
                    Ppat_var "bal" (lib/set.ml[100,3779+8]..[100,3779+11])
                  expression (lib/set.ml[100,3779+12]..[128,4818+62]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[100,3779+12]..[100,3779+13])
                        Nolabel
                        None
                        pattern (lib/set.ml[100,3779+12]..[100,3779+13])
                          Ppat_var "l" (lib/set.ml[100,3779+12]..[100,3779+13])
                      Pparam_val (lib/set.ml[100,3779+14]..[100,3779+15])
                        Nolabel
                        None
                        pattern (lib/set.ml[100,3779+14]..[100,3779+15])
                          Ppat_var "v" (lib/set.ml[100,3779+14]..[100,3779+15])
                      Pparam_val (lib/set.ml[100,3779+16]..[100,3779+17])
                        Nolabel
                        None
                        pattern (lib/set.ml[100,3779+16]..[100,3779+17])
                          Ppat_var "r" (lib/set.ml[100,3779+16]..[100,3779+17])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[101,3799+6]..[128,4818+62])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/set.ml[101,3799+10]..[101,3799+12])
                              Ppat_var "hl" (lib/set.ml[101,3799+10]..[101,3799+12])
                            expression (lib/set.ml[101,3799+15]..[101,3799+54])
                              Pexp_match
                              expression (lib/set.ml[101,3799+21]..[101,3799+22])
                                Pexp_ident "l" (lib/set.ml[101,3799+21]..[101,3799+22])
                              [
                                <case>
                                  pattern (lib/set.ml[101,3799+28]..[101,3799+33])
                                    Ppat_construct "Empty" (lib/set.ml[101,3799+28]..[101,3799+33])
                                    None
                                  expression (lib/set.ml[101,3799+37]..[101,3799+38])
                                    Pexp_constant PConst_int (0,None)
                                <case>
                                  pattern (lib/set.ml[101,3799+41]..[101,3799+49])
                                    Ppat_construct "Node" (lib/set.ml[101,3799+41]..[101,3799+45])
                                    Some
                                      []
                                      pattern (lib/set.ml[101,3799+46]..[101,3799+49])
                                        Ppat_record Closed
                                        [
                                          "h" (lib/set.ml[101,3799+47]..[101,3799+48]) ghost
                                            pattern (lib/set.ml[101,3799+47]..[101,3799+48])
                                              Ppat_var "h" (lib/set.ml[101,3799+47]..[101,3799+48])
                                        ]
                                  expression (lib/set.ml[101,3799+53]..[101,3799+54])
                                    Pexp_ident "h" (lib/set.ml[101,3799+53]..[101,3799+54])
                              ]
                        ]
                        expression (lib/set.ml[102,3857+6]..[128,4818+62])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/set.ml[102,3857+10]..[102,3857+12])
                                Ppat_var "hr" (lib/set.ml[102,3857+10]..[102,3857+12])
                              expression (lib/set.ml[102,3857+15]..[102,3857+54])
                                Pexp_match
                                expression (lib/set.ml[102,3857+21]..[102,3857+22])
                                  Pexp_ident "r" (lib/set.ml[102,3857+21]..[102,3857+22])
                                [
                                  <case>
                                    pattern (lib/set.ml[102,3857+28]..[102,3857+33])
                                      Ppat_construct "Empty" (lib/set.ml[102,3857+28]..[102,3857+33])
                                      None
                                    expression (lib/set.ml[102,3857+37]..[102,3857+38])
                                      Pexp_constant PConst_int (0,None)
                                  <case>
                                    pattern (lib/set.ml[102,3857+41]..[102,3857+49])
                                      Ppat_construct "Node" (lib/set.ml[102,3857+41]..[102,3857+45])
                                      Some
                                        []
                                        pattern (lib/set.ml[102,3857+46]..[102,3857+49])
                                          Ppat_record Closed
                                          [
                                            "h" (lib/set.ml[102,3857+47]..[102,3857+48]) ghost
                                              pattern (lib/set.ml[102,3857+47]..[102,3857+48])
                                                Ppat_var "h" (lib/set.ml[102,3857+47]..[102,3857+48])
                                          ]
                                    expression (lib/set.ml[102,3857+53]..[102,3857+54])
                                      Pexp_ident "h" (lib/set.ml[102,3857+53]..[102,3857+54])
                                ]
                          ]
                          expression (lib/set.ml[103,3915+6]..[128,4818+62])
                            Pexp_ifthenelse
                            expression (lib/set.ml[103,3915+9]..[103,3915+20])
                              Pexp_apply
                              expression (lib/set.ml[103,3915+12]..[103,3915+13])
                                Pexp_ident ">" (lib/set.ml[103,3915+12]..[103,3915+13])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[103,3915+9]..[103,3915+11])
                                    Pexp_ident "hl" (lib/set.ml[103,3915+9]..[103,3915+11])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[103,3915+14]..[103,3915+20])
                                    Pexp_apply
                                    expression (lib/set.ml[103,3915+17]..[103,3915+18])
                                      Pexp_ident "+" (lib/set.ml[103,3915+17]..[103,3915+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[103,3915+14]..[103,3915+16])
                                          Pexp_ident "hr" (lib/set.ml[103,3915+14]..[103,3915+16])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[103,3915+19]..[103,3915+20])
                                          Pexp_constant PConst_int (2,None)
                                    ]
                              ]
                            expression (lib/set.ml[103,3915+26]..[115,4354+9])
                              Pexp_match
                              expression (lib/set.ml[104,3947+14]..[104,3947+15])
                                Pexp_ident "l" (lib/set.ml[104,3947+14]..[104,3947+15])
                              [
                                <case>
                                  pattern (lib/set.ml[105,3968+10]..[105,3968+15])
                                    Ppat_construct "Empty" (lib/set.ml[105,3968+10]..[105,3968+15])
                                    None
                                  expression (lib/set.ml[105,3968+19]..[105,3968+40])
                                    Pexp_apply
                                    expression (lib/set.ml[105,3968+19]..[105,3968+30])
                                      Pexp_ident "invalid_arg" (lib/set.ml[105,3968+19]..[105,3968+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[105,3968+31]..[105,3968+40])
                                          Pexp_constant PConst_string("Set.bal",(lib/set.ml[105,3968+32]..[105,3968+39]),None)
                                    ]
                                <case>
                                  pattern (lib/set.ml[106,4009+10]..[106,4009+32])
                                    Ppat_construct "Node" (lib/set.ml[106,4009+10]..[106,4009+14])
                                    Some
                                      []
                                      pattern (lib/set.ml[106,4009+14]..[106,4009+32])
                                        Ppat_record Closed
                                        [
                                          "l" (lib/set.ml[106,4009+15]..[106,4009+16])
                                            pattern (lib/set.ml[106,4009+17]..[106,4009+19])
                                              Ppat_var "ll" (lib/set.ml[106,4009+17]..[106,4009+19])
                                          "v" (lib/set.ml[106,4009+21]..[106,4009+22])
                                            pattern (lib/set.ml[106,4009+23]..[106,4009+25])
                                              Ppat_var "lv" (lib/set.ml[106,4009+23]..[106,4009+25])
                                          "r" (lib/set.ml[106,4009+27]..[106,4009+28])
                                            pattern (lib/set.ml[106,4009+29]..[106,4009+31])
                                              Ppat_var "lr" (lib/set.ml[106,4009+29]..[106,4009+31])
                                        ]
                                  expression (lib/set.ml[107,4045+12]..[114,4338+15])
                                    Pexp_ifthenelse
                                    expression (lib/set.ml[107,4045+15]..[107,4045+37])
                                      Pexp_apply
                                      expression (lib/set.ml[107,4045+25]..[107,4045+27])
                                        Pexp_ident ">=" (lib/set.ml[107,4045+25]..[107,4045+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[107,4045+15]..[107,4045+24])
                                            Pexp_apply
                                            expression (lib/set.ml[107,4045+15]..[107,4045+21])
                                              Pexp_ident "height" (lib/set.ml[107,4045+15]..[107,4045+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[107,4045+22]..[107,4045+24])
                                                  Pexp_ident "ll" (lib/set.ml[107,4045+22]..[107,4045+24])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[107,4045+28]..[107,4045+37])
                                            Pexp_apply
                                            expression (lib/set.ml[107,4045+28]..[107,4045+34])
                                              Pexp_ident "height" (lib/set.ml[107,4045+28]..[107,4045+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[107,4045+35]..[107,4045+37])
                                                  Pexp_ident "lr" (lib/set.ml[107,4045+35]..[107,4045+37])
                                            ]
                                      ]
                                    expression (lib/set.ml[108,4088+14]..[108,4088+42])
                                      Pexp_apply
                                      expression (lib/set.ml[108,4088+14]..[108,4088+20])
                                        Pexp_ident "create" (lib/set.ml[108,4088+14]..[108,4088+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[108,4088+21]..[108,4088+23])
                                            Pexp_ident "ll" (lib/set.ml[108,4088+21]..[108,4088+23])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[108,4088+24]..[108,4088+26])
                                            Pexp_ident "lv" (lib/set.ml[108,4088+24]..[108,4088+26])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[108,4088+27]..[108,4088+42])
                                            Pexp_apply
                                            expression (lib/set.ml[108,4088+28]..[108,4088+34])
                                              Pexp_ident "create" (lib/set.ml[108,4088+28]..[108,4088+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[108,4088+35]..[108,4088+37])
                                                  Pexp_ident "lr" (lib/set.ml[108,4088+35]..[108,4088+37])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[108,4088+38]..[108,4088+39])
                                                  Pexp_ident "v" (lib/set.ml[108,4088+38]..[108,4088+39])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[108,4088+40]..[108,4088+41])
                                                  Pexp_ident "r" (lib/set.ml[108,4088+40]..[108,4088+41])
                                            ]
                                      ]
                                    Some
                                      expression (lib/set.ml[109,4131+17]..[114,4338+15])
                                        Pexp_match
                                        expression (lib/set.ml[110,4154+20]..[110,4154+22])
                                          Pexp_ident "lr" (lib/set.ml[110,4154+20]..[110,4154+22])
                                        [
                                          <case>
                                            pattern (lib/set.ml[111,4182+16]..[111,4182+21])
                                              Ppat_construct "Empty" (lib/set.ml[111,4182+16]..[111,4182+21])
                                              None
                                            expression (lib/set.ml[111,4182+25]..[111,4182+46])
                                              Pexp_apply
                                              expression (lib/set.ml[111,4182+25]..[111,4182+36])
                                                Pexp_ident "invalid_arg" (lib/set.ml[111,4182+25]..[111,4182+36])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[111,4182+37]..[111,4182+46])
                                                    Pexp_constant PConst_string("Set.bal",(lib/set.ml[111,4182+38]..[111,4182+45]),None)
                                              ]
                                          <case>
                                            pattern (lib/set.ml[112,4229+16]..[112,4229+41])
                                              Ppat_construct "Node" (lib/set.ml[112,4229+16]..[112,4229+20])
                                              Some
                                                []
                                                pattern (lib/set.ml[112,4229+20]..[112,4229+41])
                                                  Ppat_record Closed
                                                  [
                                                    "l" (lib/set.ml[112,4229+21]..[112,4229+22])
                                                      pattern (lib/set.ml[112,4229+23]..[112,4229+26])
                                                        Ppat_var "lrl" (lib/set.ml[112,4229+23]..[112,4229+26])
                                                    "v" (lib/set.ml[112,4229+28]..[112,4229+29])
                                                      pattern (lib/set.ml[112,4229+30]..[112,4229+33])
                                                        Ppat_var "lrv" (lib/set.ml[112,4229+30]..[112,4229+33])
                                                    "r" (lib/set.ml[112,4229+35]..[112,4229+36])
                                                      pattern (lib/set.ml[112,4229+37]..[112,4229+40])
                                                        Ppat_var "lrr" (lib/set.ml[112,4229+37]..[112,4229+40])
                                                  ]
                                            expression (lib/set.ml[113,4273+18]..[113,4273+64])
                                              Pexp_apply
                                              expression (lib/set.ml[113,4273+18]..[113,4273+24])
                                                Pexp_ident "create" (lib/set.ml[113,4273+18]..[113,4273+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[113,4273+25]..[113,4273+43])
                                                    Pexp_apply
                                                    expression (lib/set.ml[113,4273+26]..[113,4273+32])
                                                      Pexp_ident "create" (lib/set.ml[113,4273+26]..[113,4273+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/set.ml[113,4273+33]..[113,4273+35])
                                                          Pexp_ident "ll" (lib/set.ml[113,4273+33]..[113,4273+35])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/set.ml[113,4273+36]..[113,4273+38])
                                                          Pexp_ident "lv" (lib/set.ml[113,4273+36]..[113,4273+38])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/set.ml[113,4273+39]..[113,4273+42])
                                                          Pexp_ident "lrl" (lib/set.ml[113,4273+39]..[113,4273+42])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[113,4273+44]..[113,4273+47])
                                                    Pexp_ident "lrv" (lib/set.ml[113,4273+44]..[113,4273+47])
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[113,4273+48]..[113,4273+64])
                                                    Pexp_apply
                                                    expression (lib/set.ml[113,4273+49]..[113,4273+55])
                                                      Pexp_ident "create" (lib/set.ml[113,4273+49]..[113,4273+55])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/set.ml[113,4273+56]..[113,4273+59])
                                                          Pexp_ident "lrr" (lib/set.ml[113,4273+56]..[113,4273+59])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/set.ml[113,4273+60]..[113,4273+61])
                                                          Pexp_ident "v" (lib/set.ml[113,4273+60]..[113,4273+61])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/set.ml[113,4273+62]..[113,4273+63])
                                                          Pexp_ident "r" (lib/set.ml[113,4273+62]..[113,4273+63])
                                                    ]
                                              ]
                                        ]
                              ]
                            Some
                              expression (lib/set.ml[115,4354+15]..[128,4818+62])
                                Pexp_ifthenelse
                                expression (lib/set.ml[115,4354+18]..[115,4354+29])
                                  Pexp_apply
                                  expression (lib/set.ml[115,4354+21]..[115,4354+22])
                                    Pexp_ident ">" (lib/set.ml[115,4354+21]..[115,4354+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[115,4354+18]..[115,4354+20])
                                        Pexp_ident "hr" (lib/set.ml[115,4354+18]..[115,4354+20])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[115,4354+23]..[115,4354+29])
                                        Pexp_apply
                                        expression (lib/set.ml[115,4354+26]..[115,4354+27])
                                          Pexp_ident "+" (lib/set.ml[115,4354+26]..[115,4354+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[115,4354+23]..[115,4354+25])
                                              Pexp_ident "hl" (lib/set.ml[115,4354+23]..[115,4354+25])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[115,4354+28]..[115,4354+29])
                                              Pexp_constant PConst_int (2,None)
                                        ]
                                  ]
                                expression (lib/set.ml[115,4354+35]..[127,4803+9])
                                  Pexp_match
                                  expression (lib/set.ml[116,4395+14]..[116,4395+15])
                                    Pexp_ident "r" (lib/set.ml[116,4395+14]..[116,4395+15])
                                  [
                                    <case>
                                      pattern (lib/set.ml[117,4416+10]..[117,4416+15])
                                        Ppat_construct "Empty" (lib/set.ml[117,4416+10]..[117,4416+15])
                                        None
                                      expression (lib/set.ml[117,4416+19]..[117,4416+40])
                                        Pexp_apply
                                        expression (lib/set.ml[117,4416+19]..[117,4416+30])
                                          Pexp_ident "invalid_arg" (lib/set.ml[117,4416+19]..[117,4416+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[117,4416+31]..[117,4416+40])
                                              Pexp_constant PConst_string("Set.bal",(lib/set.ml[117,4416+32]..[117,4416+39]),None)
                                        ]
                                    <case>
                                      pattern (lib/set.ml[118,4457+10]..[118,4457+32])
                                        Ppat_construct "Node" (lib/set.ml[118,4457+10]..[118,4457+14])
                                        Some
                                          []
                                          pattern (lib/set.ml[118,4457+14]..[118,4457+32])
                                            Ppat_record Closed
                                            [
                                              "l" (lib/set.ml[118,4457+15]..[118,4457+16])
                                                pattern (lib/set.ml[118,4457+17]..[118,4457+19])
                                                  Ppat_var "rl" (lib/set.ml[118,4457+17]..[118,4457+19])
                                              "v" (lib/set.ml[118,4457+21]..[118,4457+22])
                                                pattern (lib/set.ml[118,4457+23]..[118,4457+25])
                                                  Ppat_var "rv" (lib/set.ml[118,4457+23]..[118,4457+25])
                                              "r" (lib/set.ml[118,4457+27]..[118,4457+28])
                                                pattern (lib/set.ml[118,4457+29]..[118,4457+31])
                                                  Ppat_var "rr" (lib/set.ml[118,4457+29]..[118,4457+31])
                                            ]
                                      expression (lib/set.ml[119,4493+12]..[126,4787+15])
                                        Pexp_ifthenelse
                                        expression (lib/set.ml[119,4493+15]..[119,4493+37])
                                          Pexp_apply
                                          expression (lib/set.ml[119,4493+25]..[119,4493+27])
                                            Pexp_ident ">=" (lib/set.ml[119,4493+25]..[119,4493+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[119,4493+15]..[119,4493+24])
                                                Pexp_apply
                                                expression (lib/set.ml[119,4493+15]..[119,4493+21])
                                                  Pexp_ident "height" (lib/set.ml[119,4493+15]..[119,4493+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[119,4493+22]..[119,4493+24])
                                                      Pexp_ident "rr" (lib/set.ml[119,4493+22]..[119,4493+24])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[119,4493+28]..[119,4493+37])
                                                Pexp_apply
                                                expression (lib/set.ml[119,4493+28]..[119,4493+34])
                                                  Pexp_ident "height" (lib/set.ml[119,4493+28]..[119,4493+34])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[119,4493+35]..[119,4493+37])
                                                      Pexp_ident "rl" (lib/set.ml[119,4493+35]..[119,4493+37])
                                                ]
                                          ]
                                        expression (lib/set.ml[120,4536+14]..[120,4536+42])
                                          Pexp_apply
                                          expression (lib/set.ml[120,4536+14]..[120,4536+20])
                                            Pexp_ident "create" (lib/set.ml[120,4536+14]..[120,4536+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[120,4536+21]..[120,4536+36])
                                                Pexp_apply
                                                expression (lib/set.ml[120,4536+22]..[120,4536+28])
                                                  Pexp_ident "create" (lib/set.ml[120,4536+22]..[120,4536+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[120,4536+29]..[120,4536+30])
                                                      Pexp_ident "l" (lib/set.ml[120,4536+29]..[120,4536+30])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[120,4536+31]..[120,4536+32])
                                                      Pexp_ident "v" (lib/set.ml[120,4536+31]..[120,4536+32])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[120,4536+33]..[120,4536+35])
                                                      Pexp_ident "rl" (lib/set.ml[120,4536+33]..[120,4536+35])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[120,4536+37]..[120,4536+39])
                                                Pexp_ident "rv" (lib/set.ml[120,4536+37]..[120,4536+39])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[120,4536+40]..[120,4536+42])
                                                Pexp_ident "rr" (lib/set.ml[120,4536+40]..[120,4536+42])
                                          ]
                                        Some
                                          expression (lib/set.ml[121,4579+17]..[126,4787+15])
                                            Pexp_match
                                            expression (lib/set.ml[122,4602+20]..[122,4602+22])
                                              Pexp_ident "rl" (lib/set.ml[122,4602+20]..[122,4602+22])
                                            [
                                              <case>
                                                pattern (lib/set.ml[123,4630+16]..[123,4630+21])
                                                  Ppat_construct "Empty" (lib/set.ml[123,4630+16]..[123,4630+21])
                                                  None
                                                expression (lib/set.ml[123,4630+25]..[123,4630+46])
                                                  Pexp_apply
                                                  expression (lib/set.ml[123,4630+25]..[123,4630+36])
                                                    Pexp_ident "invalid_arg" (lib/set.ml[123,4630+25]..[123,4630+36])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/set.ml[123,4630+37]..[123,4630+46])
                                                        Pexp_constant PConst_string("Set.bal",(lib/set.ml[123,4630+38]..[123,4630+45]),None)
                                                  ]
                                              <case>
                                                pattern (lib/set.ml[124,4677+16]..[124,4677+41])
                                                  Ppat_construct "Node" (lib/set.ml[124,4677+16]..[124,4677+20])
                                                  Some
                                                    []
                                                    pattern (lib/set.ml[124,4677+20]..[124,4677+41])
                                                      Ppat_record Closed
                                                      [
                                                        "l" (lib/set.ml[124,4677+21]..[124,4677+22])
                                                          pattern (lib/set.ml[124,4677+23]..[124,4677+26])
                                                            Ppat_var "rll" (lib/set.ml[124,4677+23]..[124,4677+26])
                                                        "v" (lib/set.ml[124,4677+28]..[124,4677+29])
                                                          pattern (lib/set.ml[124,4677+30]..[124,4677+33])
                                                            Ppat_var "rlv" (lib/set.ml[124,4677+30]..[124,4677+33])
                                                        "r" (lib/set.ml[124,4677+35]..[124,4677+36])
                                                          pattern (lib/set.ml[124,4677+37]..[124,4677+40])
                                                            Ppat_var "rlr" (lib/set.ml[124,4677+37]..[124,4677+40])
                                                      ]
                                                expression (lib/set.ml[125,4722+18]..[125,4722+64])
                                                  Pexp_apply
                                                  expression (lib/set.ml[125,4722+18]..[125,4722+24])
                                                    Pexp_ident "create" (lib/set.ml[125,4722+18]..[125,4722+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/set.ml[125,4722+25]..[125,4722+41])
                                                        Pexp_apply
                                                        expression (lib/set.ml[125,4722+26]..[125,4722+32])
                                                          Pexp_ident "create" (lib/set.ml[125,4722+26]..[125,4722+32])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/set.ml[125,4722+33]..[125,4722+34])
                                                              Pexp_ident "l" (lib/set.ml[125,4722+33]..[125,4722+34])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/set.ml[125,4722+35]..[125,4722+36])
                                                              Pexp_ident "v" (lib/set.ml[125,4722+35]..[125,4722+36])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/set.ml[125,4722+37]..[125,4722+40])
                                                              Pexp_ident "rll" (lib/set.ml[125,4722+37]..[125,4722+40])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/set.ml[125,4722+42]..[125,4722+45])
                                                        Pexp_ident "rlv" (lib/set.ml[125,4722+42]..[125,4722+45])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/set.ml[125,4722+46]..[125,4722+64])
                                                        Pexp_apply
                                                        expression (lib/set.ml[125,4722+47]..[125,4722+53])
                                                          Pexp_ident "create" (lib/set.ml[125,4722+47]..[125,4722+53])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/set.ml[125,4722+54]..[125,4722+57])
                                                              Pexp_ident "rlr" (lib/set.ml[125,4722+54]..[125,4722+57])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/set.ml[125,4722+58]..[125,4722+60])
                                                              Pexp_ident "rv" (lib/set.ml[125,4722+58]..[125,4722+60])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/set.ml[125,4722+61]..[125,4722+63])
                                                              Pexp_ident "rr" (lib/set.ml[125,4722+61]..[125,4722+63])
                                                        ]
                                                  ]
                                            ]
                                  ]
                                Some
                                  expression (lib/set.ml[128,4818+8]..[128,4818+62])
                                    Pexp_construct "Node" (lib/set.ml[128,4818+8]..[128,4818+12])
                                    Some
                                      expression (lib/set.ml[128,4818+12]..[128,4818+62])
                                        Pexp_record
                                        [
                                          "l" (lib/set.ml[128,4818+13]..[128,4818+14]) ghost
                                            expression (lib/set.ml[128,4818+13]..[128,4818+14])
                                              Pexp_ident "l" (lib/set.ml[128,4818+13]..[128,4818+14])
                                          "v" (lib/set.ml[128,4818+16]..[128,4818+17]) ghost
                                            expression (lib/set.ml[128,4818+16]..[128,4818+17])
                                              Pexp_ident "v" (lib/set.ml[128,4818+16]..[128,4818+17])
                                          "r" (lib/set.ml[128,4818+19]..[128,4818+20]) ghost
                                            expression (lib/set.ml[128,4818+19]..[128,4818+20])
                                              Pexp_ident "r" (lib/set.ml[128,4818+19]..[128,4818+20])
                                          "h" (lib/set.ml[128,4818+22]..[128,4818+23])
                                            expression (lib/set.ml[128,4818+24]..[128,4818+61])
                                              Pexp_ifthenelse
                                              expression (lib/set.ml[128,4818+28]..[128,4818+36])
                                                Pexp_apply
                                                expression (lib/set.ml[128,4818+31]..[128,4818+33])
                                                  Pexp_ident ">=" (lib/set.ml[128,4818+31]..[128,4818+33])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[128,4818+28]..[128,4818+30])
                                                      Pexp_ident "hl" (lib/set.ml[128,4818+28]..[128,4818+30])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[128,4818+34]..[128,4818+36])
                                                      Pexp_ident "hr" (lib/set.ml[128,4818+34]..[128,4818+36])
                                                ]
                                              expression (lib/set.ml[128,4818+42]..[128,4818+48])
                                                Pexp_apply
                                                expression (lib/set.ml[128,4818+45]..[128,4818+46])
                                                  Pexp_ident "+" (lib/set.ml[128,4818+45]..[128,4818+46])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[128,4818+42]..[128,4818+44])
                                                      Pexp_ident "hl" (lib/set.ml[128,4818+42]..[128,4818+44])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[128,4818+47]..[128,4818+48])
                                                      Pexp_constant PConst_int (1,None)
                                                ]
                                              Some
                                                expression (lib/set.ml[128,4818+54]..[128,4818+60])
                                                  Pexp_apply
                                                  expression (lib/set.ml[128,4818+57]..[128,4818+58])
                                                    Pexp_ident "+" (lib/set.ml[128,4818+57]..[128,4818+58])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/set.ml[128,4818+54]..[128,4818+56])
                                                        Pexp_ident "hr" (lib/set.ml[128,4818+54]..[128,4818+56])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/set.ml[128,4818+59]..[128,4818+60])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                        ]
                                        None
              ]
            structure_item (lib/set.ml[132,4918+4]..[142,5244+45])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[132,4918+12]..[132,4918+15])
                    Ppat_var "add" (lib/set.ml[132,4918+12]..[132,4918+15])
                  expression (lib/set.ml[132,4918+16]..[142,5244+45]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[132,4918+16]..[132,4918+17])
                        Nolabel
                        None
                        pattern (lib/set.ml[132,4918+16]..[132,4918+17])
                          Ppat_var "x" (lib/set.ml[132,4918+16]..[132,4918+17])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[132,4918+20]..[142,5244+45])
                      [
                        <case>
                          pattern (lib/set.ml[133,4947+8]..[133,4947+13])
                            Ppat_construct "Empty" (lib/set.ml[133,4947+8]..[133,4947+13])
                            None
                          expression (lib/set.ml[133,4947+17]..[133,4947+49])
                            Pexp_construct "Node" (lib/set.ml[133,4947+17]..[133,4947+21])
                            Some
                              expression (lib/set.ml[133,4947+21]..[133,4947+49])
                                Pexp_record
                                [
                                  "l" (lib/set.ml[133,4947+22]..[133,4947+23])
                                    expression (lib/set.ml[133,4947+24]..[133,4947+29])
                                      Pexp_construct "Empty" (lib/set.ml[133,4947+24]..[133,4947+29])
                                      None
                                  "v" (lib/set.ml[133,4947+31]..[133,4947+32])
                                    expression (lib/set.ml[133,4947+33]..[133,4947+34])
                                      Pexp_ident "x" (lib/set.ml[133,4947+33]..[133,4947+34])
                                  "r" (lib/set.ml[133,4947+36]..[133,4947+37])
                                    expression (lib/set.ml[133,4947+38]..[133,4947+43])
                                      Pexp_construct "Empty" (lib/set.ml[133,4947+38]..[133,4947+43])
                                      None
                                  "h" (lib/set.ml[133,4947+45]..[133,4947+46])
                                    expression (lib/set.ml[133,4947+47]..[133,4947+48])
                                      Pexp_constant PConst_int (1,None)
                                ]
                                None
                        <case>
                          pattern (lib/set.ml[134,4997+8]..[134,4997+26])
                            Ppat_alias "t" (lib/set.ml[134,4997+25]..[134,4997+26])
                            pattern (lib/set.ml[134,4997+8]..[134,4997+21])
                              Ppat_construct "Node" (lib/set.ml[134,4997+8]..[134,4997+12])
                              Some
                                []
                                pattern (lib/set.ml[134,4997+12]..[134,4997+21])
                                  Ppat_record Closed
                                  [
                                    "l" (lib/set.ml[134,4997+13]..[134,4997+14]) ghost
                                      pattern (lib/set.ml[134,4997+13]..[134,4997+14])
                                        Ppat_var "l" (lib/set.ml[134,4997+13]..[134,4997+14])
                                    "v" (lib/set.ml[134,4997+16]..[134,4997+17]) ghost
                                      pattern (lib/set.ml[134,4997+16]..[134,4997+17])
                                        Ppat_var "v" (lib/set.ml[134,4997+16]..[134,4997+17])
                                    "r" (lib/set.ml[134,4997+19]..[134,4997+20]) ghost
                                      pattern (lib/set.ml[134,4997+19]..[134,4997+20])
                                        Ppat_var "r" (lib/set.ml[134,4997+19]..[134,4997+20])
                                  ]
                          expression (lib/set.ml[135,5027+10]..[142,5244+45])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[135,5027+14]..[135,5027+15])
                                  Ppat_var "c" (lib/set.ml[135,5027+14]..[135,5027+15])
                                expression (lib/set.ml[135,5027+18]..[135,5027+33])
                                  Pexp_apply
                                  expression (lib/set.ml[135,5027+18]..[135,5027+29])
                                    Pexp_ident "Ord.compare" (lib/set.ml[135,5027+18]..[135,5027+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[135,5027+30]..[135,5027+31])
                                        Pexp_ident "x" (lib/set.ml[135,5027+30]..[135,5027+31])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[135,5027+32]..[135,5027+33])
                                        Pexp_ident "v" (lib/set.ml[135,5027+32]..[135,5027+33])
                                  ]
                            ]
                            expression (lib/set.ml[136,5064+10]..[142,5244+45])
                              Pexp_ifthenelse
                              expression (lib/set.ml[136,5064+13]..[136,5064+18])
                                Pexp_apply
                                expression (lib/set.ml[136,5064+15]..[136,5064+16])
                                  Pexp_ident "=" (lib/set.ml[136,5064+15]..[136,5064+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[136,5064+13]..[136,5064+14])
                                      Pexp_ident "c" (lib/set.ml[136,5064+13]..[136,5064+14])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[136,5064+17]..[136,5064+18])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (lib/set.ml[136,5064+24]..[136,5064+25])
                                Pexp_ident "t" (lib/set.ml[136,5064+24]..[136,5064+25])
                              Some
                                expression (lib/set.ml[137,5095+10]..[142,5244+45])
                                  Pexp_ifthenelse
                                  expression (lib/set.ml[137,5095+13]..[137,5095+18])
                                    Pexp_apply
                                    expression (lib/set.ml[137,5095+15]..[137,5095+16])
                                      Pexp_ident "<" (lib/set.ml[137,5095+15]..[137,5095+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[137,5095+13]..[137,5095+14])
                                          Pexp_ident "c" (lib/set.ml[137,5095+13]..[137,5095+14])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[137,5095+17]..[137,5095+18])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                  expression (lib/set.ml[138,5119+12]..[139,5151+45])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/set.ml[138,5119+16]..[138,5119+18])
                                          Ppat_var "ll" (lib/set.ml[138,5119+16]..[138,5119+18])
                                        expression (lib/set.ml[138,5119+21]..[138,5119+28])
                                          Pexp_apply
                                          expression (lib/set.ml[138,5119+21]..[138,5119+24])
                                            Pexp_ident "add" (lib/set.ml[138,5119+21]..[138,5119+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[138,5119+25]..[138,5119+26])
                                                Pexp_ident "x" (lib/set.ml[138,5119+25]..[138,5119+26])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[138,5119+27]..[138,5119+28])
                                                Pexp_ident "l" (lib/set.ml[138,5119+27]..[138,5119+28])
                                          ]
                                    ]
                                    expression (lib/set.ml[139,5151+12]..[139,5151+45])
                                      Pexp_ifthenelse
                                      expression (lib/set.ml[139,5151+15]..[139,5151+22])
                                        Pexp_apply
                                        expression (lib/set.ml[139,5151+17]..[139,5151+19])
                                          Pexp_ident "==" (lib/set.ml[139,5151+17]..[139,5151+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[139,5151+15]..[139,5151+16])
                                              Pexp_ident "l" (lib/set.ml[139,5151+15]..[139,5151+16])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[139,5151+20]..[139,5151+22])
                                              Pexp_ident "ll" (lib/set.ml[139,5151+20]..[139,5151+22])
                                        ]
                                      expression (lib/set.ml[139,5151+28]..[139,5151+29])
                                        Pexp_ident "t" (lib/set.ml[139,5151+28]..[139,5151+29])
                                      Some
                                        expression (lib/set.ml[139,5151+35]..[139,5151+45])
                                          Pexp_apply
                                          expression (lib/set.ml[139,5151+35]..[139,5151+38])
                                            Pexp_ident "bal" (lib/set.ml[139,5151+35]..[139,5151+38])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[139,5151+39]..[139,5151+41])
                                                Pexp_ident "ll" (lib/set.ml[139,5151+39]..[139,5151+41])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[139,5151+42]..[139,5151+43])
                                                Pexp_ident "v" (lib/set.ml[139,5151+42]..[139,5151+43])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[139,5151+44]..[139,5151+45])
                                                Pexp_ident "r" (lib/set.ml[139,5151+44]..[139,5151+45])
                                          ]
                                  Some
                                    expression (lib/set.ml[141,5212+12]..[142,5244+45])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/set.ml[141,5212+16]..[141,5212+18])
                                            Ppat_var "rr" (lib/set.ml[141,5212+16]..[141,5212+18])
                                          expression (lib/set.ml[141,5212+21]..[141,5212+28])
                                            Pexp_apply
                                            expression (lib/set.ml[141,5212+21]..[141,5212+24])
                                              Pexp_ident "add" (lib/set.ml[141,5212+21]..[141,5212+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[141,5212+25]..[141,5212+26])
                                                  Pexp_ident "x" (lib/set.ml[141,5212+25]..[141,5212+26])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[141,5212+27]..[141,5212+28])
                                                  Pexp_ident "r" (lib/set.ml[141,5212+27]..[141,5212+28])
                                            ]
                                      ]
                                      expression (lib/set.ml[142,5244+12]..[142,5244+45])
                                        Pexp_ifthenelse
                                        expression (lib/set.ml[142,5244+15]..[142,5244+22])
                                          Pexp_apply
                                          expression (lib/set.ml[142,5244+17]..[142,5244+19])
                                            Pexp_ident "==" (lib/set.ml[142,5244+17]..[142,5244+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[142,5244+15]..[142,5244+16])
                                                Pexp_ident "r" (lib/set.ml[142,5244+15]..[142,5244+16])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[142,5244+20]..[142,5244+22])
                                                Pexp_ident "rr" (lib/set.ml[142,5244+20]..[142,5244+22])
                                          ]
                                        expression (lib/set.ml[142,5244+28]..[142,5244+29])
                                          Pexp_ident "t" (lib/set.ml[142,5244+28]..[142,5244+29])
                                        Some
                                          expression (lib/set.ml[142,5244+35]..[142,5244+45])
                                            Pexp_apply
                                            expression (lib/set.ml[142,5244+35]..[142,5244+38])
                                              Pexp_ident "bal" (lib/set.ml[142,5244+35]..[142,5244+38])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[142,5244+39]..[142,5244+40])
                                                  Pexp_ident "l" (lib/set.ml[142,5244+39]..[142,5244+40])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[142,5244+41]..[142,5244+42])
                                                  Pexp_ident "v" (lib/set.ml[142,5244+41]..[142,5244+42])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[142,5244+43]..[142,5244+45])
                                                  Pexp_ident "rr" (lib/set.ml[142,5244+43]..[142,5244+45])
                                            ]
                      ]
              ]
            structure_item (lib/set.ml[144,5291+4]..[144,5291+54])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[144,5291+8]..[144,5291+17])
                    Ppat_var "singleton" (lib/set.ml[144,5291+8]..[144,5291+17])
                  expression (lib/set.ml[144,5291+18]..[144,5291+54]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[144,5291+18]..[144,5291+19])
                        Nolabel
                        None
                        pattern (lib/set.ml[144,5291+18]..[144,5291+19])
                          Ppat_var "x" (lib/set.ml[144,5291+18]..[144,5291+19])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[144,5291+22]..[144,5291+54])
                        Pexp_construct "Node" (lib/set.ml[144,5291+22]..[144,5291+26])
                        Some
                          expression (lib/set.ml[144,5291+26]..[144,5291+54])
                            Pexp_record
                            [
                              "l" (lib/set.ml[144,5291+27]..[144,5291+28])
                                expression (lib/set.ml[144,5291+29]..[144,5291+34])
                                  Pexp_construct "Empty" (lib/set.ml[144,5291+29]..[144,5291+34])
                                  None
                              "v" (lib/set.ml[144,5291+36]..[144,5291+37])
                                expression (lib/set.ml[144,5291+38]..[144,5291+39])
                                  Pexp_ident "x" (lib/set.ml[144,5291+38]..[144,5291+39])
                              "r" (lib/set.ml[144,5291+41]..[144,5291+42])
                                expression (lib/set.ml[144,5291+43]..[144,5291+48])
                                  Pexp_construct "Empty" (lib/set.ml[144,5291+43]..[144,5291+48])
                                  None
                              "h" (lib/set.ml[144,5291+50]..[144,5291+51])
                                expression (lib/set.ml[144,5291+52]..[144,5291+53])
                                  Pexp_constant PConst_int (1,None)
                            ]
                            None
              ]
            structure_item (lib/set.ml[153,5677+4]..[156,5773+37])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[153,5677+12]..[153,5677+27])
                    Ppat_var "add_min_element" (lib/set.ml[153,5677+12]..[153,5677+27])
                  expression (lib/set.ml[153,5677+28]..[156,5773+37]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[153,5677+28]..[153,5677+29])
                        Nolabel
                        None
                        pattern (lib/set.ml[153,5677+28]..[153,5677+29])
                          Ppat_var "x" (lib/set.ml[153,5677+28]..[153,5677+29])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[153,5677+32]..[156,5773+37])
                      [
                        <case>
                          pattern (lib/set.ml[154,5718+8]..[154,5718+13])
                            Ppat_construct "Empty" (lib/set.ml[154,5718+8]..[154,5718+13])
                            None
                          expression (lib/set.ml[154,5718+17]..[154,5718+28])
                            Pexp_apply
                            expression (lib/set.ml[154,5718+17]..[154,5718+26])
                              Pexp_ident "singleton" (lib/set.ml[154,5718+17]..[154,5718+26])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[154,5718+27]..[154,5718+28])
                                  Pexp_ident "x" (lib/set.ml[154,5718+27]..[154,5718+28])
                            ]
                        <case>
                          pattern (lib/set.ml[155,5747+8]..[155,5747+22])
                            Ppat_construct "Node" (lib/set.ml[155,5747+8]..[155,5747+12])
                            Some
                              []
                              pattern (lib/set.ml[155,5747+13]..[155,5747+22])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[155,5747+14]..[155,5747+15]) ghost
                                    pattern (lib/set.ml[155,5747+14]..[155,5747+15])
                                      Ppat_var "l" (lib/set.ml[155,5747+14]..[155,5747+15])
                                  "v" (lib/set.ml[155,5747+17]..[155,5747+18]) ghost
                                    pattern (lib/set.ml[155,5747+17]..[155,5747+18])
                                      Ppat_var "v" (lib/set.ml[155,5747+17]..[155,5747+18])
                                  "r" (lib/set.ml[155,5747+20]..[155,5747+21]) ghost
                                    pattern (lib/set.ml[155,5747+20]..[155,5747+21])
                                      Ppat_var "r" (lib/set.ml[155,5747+20]..[155,5747+21])
                                ]
                          expression (lib/set.ml[156,5773+8]..[156,5773+37])
                            Pexp_apply
                            expression (lib/set.ml[156,5773+8]..[156,5773+11])
                              Pexp_ident "bal" (lib/set.ml[156,5773+8]..[156,5773+11])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[156,5773+12]..[156,5773+33])
                                  Pexp_apply
                                  expression (lib/set.ml[156,5773+13]..[156,5773+28])
                                    Pexp_ident "add_min_element" (lib/set.ml[156,5773+13]..[156,5773+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[156,5773+29]..[156,5773+30])
                                        Pexp_ident "x" (lib/set.ml[156,5773+29]..[156,5773+30])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[156,5773+31]..[156,5773+32])
                                        Pexp_ident "l" (lib/set.ml[156,5773+31]..[156,5773+32])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/set.ml[156,5773+34]..[156,5773+35])
                                  Pexp_ident "v" (lib/set.ml[156,5773+34]..[156,5773+35])
                              <arg>
                              Nolabel
                                expression (lib/set.ml[156,5773+36]..[156,5773+37])
                                  Pexp_ident "r" (lib/set.ml[156,5773+36]..[156,5773+37])
                            ]
                      ]
              ]
            structure_item (lib/set.ml[158,5812+4]..[161,5908+37])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[158,5812+12]..[158,5812+27])
                    Ppat_var "add_max_element" (lib/set.ml[158,5812+12]..[158,5812+27])
                  expression (lib/set.ml[158,5812+28]..[161,5908+37]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[158,5812+28]..[158,5812+29])
                        Nolabel
                        None
                        pattern (lib/set.ml[158,5812+28]..[158,5812+29])
                          Ppat_var "x" (lib/set.ml[158,5812+28]..[158,5812+29])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[158,5812+32]..[161,5908+37])
                      [
                        <case>
                          pattern (lib/set.ml[159,5853+8]..[159,5853+13])
                            Ppat_construct "Empty" (lib/set.ml[159,5853+8]..[159,5853+13])
                            None
                          expression (lib/set.ml[159,5853+17]..[159,5853+28])
                            Pexp_apply
                            expression (lib/set.ml[159,5853+17]..[159,5853+26])
                              Pexp_ident "singleton" (lib/set.ml[159,5853+17]..[159,5853+26])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[159,5853+27]..[159,5853+28])
                                  Pexp_ident "x" (lib/set.ml[159,5853+27]..[159,5853+28])
                            ]
                        <case>
                          pattern (lib/set.ml[160,5882+8]..[160,5882+22])
                            Ppat_construct "Node" (lib/set.ml[160,5882+8]..[160,5882+12])
                            Some
                              []
                              pattern (lib/set.ml[160,5882+13]..[160,5882+22])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[160,5882+14]..[160,5882+15]) ghost
                                    pattern (lib/set.ml[160,5882+14]..[160,5882+15])
                                      Ppat_var "l" (lib/set.ml[160,5882+14]..[160,5882+15])
                                  "v" (lib/set.ml[160,5882+17]..[160,5882+18]) ghost
                                    pattern (lib/set.ml[160,5882+17]..[160,5882+18])
                                      Ppat_var "v" (lib/set.ml[160,5882+17]..[160,5882+18])
                                  "r" (lib/set.ml[160,5882+20]..[160,5882+21]) ghost
                                    pattern (lib/set.ml[160,5882+20]..[160,5882+21])
                                      Ppat_var "r" (lib/set.ml[160,5882+20]..[160,5882+21])
                                ]
                          expression (lib/set.ml[161,5908+8]..[161,5908+37])
                            Pexp_apply
                            expression (lib/set.ml[161,5908+8]..[161,5908+11])
                              Pexp_ident "bal" (lib/set.ml[161,5908+8]..[161,5908+11])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[161,5908+12]..[161,5908+13])
                                  Pexp_ident "l" (lib/set.ml[161,5908+12]..[161,5908+13])
                              <arg>
                              Nolabel
                                expression (lib/set.ml[161,5908+14]..[161,5908+15])
                                  Pexp_ident "v" (lib/set.ml[161,5908+14]..[161,5908+15])
                              <arg>
                              Nolabel
                                expression (lib/set.ml[161,5908+16]..[161,5908+37])
                                  Pexp_apply
                                  expression (lib/set.ml[161,5908+17]..[161,5908+32])
                                    Pexp_ident "add_max_element" (lib/set.ml[161,5908+17]..[161,5908+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[161,5908+33]..[161,5908+34])
                                        Pexp_ident "x" (lib/set.ml[161,5908+33]..[161,5908+34])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[161,5908+35]..[161,5908+36])
                                        Pexp_ident "r" (lib/set.ml[161,5908+35]..[161,5908+36])
                                  ]
                            ]
                      ]
              ]
            structure_item (lib/set.ml[166,6053+4]..[173,6376+22])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[166,6053+12]..[166,6053+16])
                    Ppat_var "join" (lib/set.ml[166,6053+12]..[166,6053+16])
                  expression (lib/set.ml[166,6053+17]..[173,6376+22]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[166,6053+17]..[166,6053+18])
                        Nolabel
                        None
                        pattern (lib/set.ml[166,6053+17]..[166,6053+18])
                          Ppat_var "l" (lib/set.ml[166,6053+17]..[166,6053+18])
                      Pparam_val (lib/set.ml[166,6053+19]..[166,6053+20])
                        Nolabel
                        None
                        pattern (lib/set.ml[166,6053+19]..[166,6053+20])
                          Ppat_var "v" (lib/set.ml[166,6053+19]..[166,6053+20])
                      Pparam_val (lib/set.ml[166,6053+21]..[166,6053+22])
                        Nolabel
                        None
                        pattern (lib/set.ml[166,6053+21]..[166,6053+22])
                          Ppat_var "r" (lib/set.ml[166,6053+21]..[166,6053+22])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[167,6078+6]..[173,6376+22])
                        Pexp_match
                        expression (lib/set.ml[167,6078+12]..[167,6078+18])
                          Pexp_tuple
                          [
                            expression (lib/set.ml[167,6078+13]..[167,6078+14])
                              Pexp_ident "l" (lib/set.ml[167,6078+13]..[167,6078+14])
                            expression (lib/set.ml[167,6078+16]..[167,6078+17])
                              Pexp_ident "r" (lib/set.ml[167,6078+16]..[167,6078+17])
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[168,6102+8]..[168,6102+18])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[168,6102+9]..[168,6102+14])
                                  Ppat_construct "Empty" (lib/set.ml[168,6102+9]..[168,6102+14])
                                  None
                                pattern (lib/set.ml[168,6102+16]..[168,6102+17])
                                  Ppat_any
                              ]
                            expression (lib/set.ml[168,6102+22]..[168,6102+41])
                              Pexp_apply
                              expression (lib/set.ml[168,6102+22]..[168,6102+37])
                                Pexp_ident "add_min_element" (lib/set.ml[168,6102+22]..[168,6102+37])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[168,6102+38]..[168,6102+39])
                                    Pexp_ident "v" (lib/set.ml[168,6102+38]..[168,6102+39])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[168,6102+40]..[168,6102+41])
                                    Pexp_ident "r" (lib/set.ml[168,6102+40]..[168,6102+41])
                              ]
                          <case>
                            pattern (lib/set.ml[169,6144+8]..[169,6144+18])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[169,6144+9]..[169,6144+10])
                                  Ppat_any
                                pattern (lib/set.ml[169,6144+12]..[169,6144+17])
                                  Ppat_construct "Empty" (lib/set.ml[169,6144+12]..[169,6144+17])
                                  None
                              ]
                            expression (lib/set.ml[169,6144+22]..[169,6144+41])
                              Pexp_apply
                              expression (lib/set.ml[169,6144+22]..[169,6144+37])
                                Pexp_ident "add_max_element" (lib/set.ml[169,6144+22]..[169,6144+37])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[169,6144+38]..[169,6144+39])
                                    Pexp_ident "v" (lib/set.ml[169,6144+38]..[169,6144+39])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[169,6144+40]..[169,6144+41])
                                    Pexp_ident "l" (lib/set.ml[169,6144+40]..[169,6144+41])
                              ]
                          <case>
                            pattern (lib/set.ml[170,6186+8]..[170,6186+68])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[170,6186+9]..[170,6186+37])
                                  Ppat_construct "Node" (lib/set.ml[170,6186+9]..[170,6186+13])
                                  Some
                                    []
                                    pattern (lib/set.ml[170,6186+13]..[170,6186+37])
                                      Ppat_record Closed
                                      [
                                        "l" (lib/set.ml[170,6186+14]..[170,6186+15])
                                          pattern (lib/set.ml[170,6186+16]..[170,6186+18])
                                            Ppat_var "ll" (lib/set.ml[170,6186+16]..[170,6186+18])
                                        "v" (lib/set.ml[170,6186+20]..[170,6186+21])
                                          pattern (lib/set.ml[170,6186+22]..[170,6186+24])
                                            Ppat_var "lv" (lib/set.ml[170,6186+22]..[170,6186+24])
                                        "r" (lib/set.ml[170,6186+26]..[170,6186+27])
                                          pattern (lib/set.ml[170,6186+28]..[170,6186+30])
                                            Ppat_var "lr" (lib/set.ml[170,6186+28]..[170,6186+30])
                                        "h" (lib/set.ml[170,6186+32]..[170,6186+33])
                                          pattern (lib/set.ml[170,6186+34]..[170,6186+36])
                                            Ppat_var "lh" (lib/set.ml[170,6186+34]..[170,6186+36])
                                      ]
                                pattern (lib/set.ml[170,6186+39]..[170,6186+67])
                                  Ppat_construct "Node" (lib/set.ml[170,6186+39]..[170,6186+43])
                                  Some
                                    []
                                    pattern (lib/set.ml[170,6186+43]..[170,6186+67])
                                      Ppat_record Closed
                                      [
                                        "l" (lib/set.ml[170,6186+44]..[170,6186+45])
                                          pattern (lib/set.ml[170,6186+46]..[170,6186+48])
                                            Ppat_var "rl" (lib/set.ml[170,6186+46]..[170,6186+48])
                                        "v" (lib/set.ml[170,6186+50]..[170,6186+51])
                                          pattern (lib/set.ml[170,6186+52]..[170,6186+54])
                                            Ppat_var "rv" (lib/set.ml[170,6186+52]..[170,6186+54])
                                        "r" (lib/set.ml[170,6186+56]..[170,6186+57])
                                          pattern (lib/set.ml[170,6186+58]..[170,6186+60])
                                            Ppat_var "rr" (lib/set.ml[170,6186+58]..[170,6186+60])
                                        "h" (lib/set.ml[170,6186+62]..[170,6186+63])
                                          pattern (lib/set.ml[170,6186+64]..[170,6186+66])
                                            Ppat_var "rh" (lib/set.ml[170,6186+64]..[170,6186+66])
                                      ]
                              ]
                            expression (lib/set.ml[171,6258+10]..[173,6376+22])
                              Pexp_ifthenelse
                              expression (lib/set.ml[171,6258+13]..[171,6258+24])
                                Pexp_apply
                                expression (lib/set.ml[171,6258+16]..[171,6258+17])
                                  Pexp_ident ">" (lib/set.ml[171,6258+16]..[171,6258+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[171,6258+13]..[171,6258+15])
                                      Pexp_ident "lh" (lib/set.ml[171,6258+13]..[171,6258+15])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[171,6258+18]..[171,6258+24])
                                      Pexp_apply
                                      expression (lib/set.ml[171,6258+21]..[171,6258+22])
                                        Pexp_ident "+" (lib/set.ml[171,6258+21]..[171,6258+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[171,6258+18]..[171,6258+20])
                                            Pexp_ident "rh" (lib/set.ml[171,6258+18]..[171,6258+20])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[171,6258+23]..[171,6258+24])
                                            Pexp_constant PConst_int (2,None)
                                      ]
                                ]
                              expression (lib/set.ml[171,6258+30]..[171,6258+53])
                                Pexp_apply
                                expression (lib/set.ml[171,6258+30]..[171,6258+33])
                                  Pexp_ident "bal" (lib/set.ml[171,6258+30]..[171,6258+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[171,6258+34]..[171,6258+36])
                                      Pexp_ident "ll" (lib/set.ml[171,6258+34]..[171,6258+36])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[171,6258+37]..[171,6258+39])
                                      Pexp_ident "lv" (lib/set.ml[171,6258+37]..[171,6258+39])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[171,6258+40]..[171,6258+53])
                                      Pexp_apply
                                      expression (lib/set.ml[171,6258+41]..[171,6258+45])
                                        Pexp_ident "join" (lib/set.ml[171,6258+41]..[171,6258+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[171,6258+46]..[171,6258+48])
                                            Pexp_ident "lr" (lib/set.ml[171,6258+46]..[171,6258+48])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[171,6258+49]..[171,6258+50])
                                            Pexp_ident "v" (lib/set.ml[171,6258+49]..[171,6258+50])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[171,6258+51]..[171,6258+52])
                                            Pexp_ident "r" (lib/set.ml[171,6258+51]..[171,6258+52])
                                      ]
                                ]
                              Some
                                expression (lib/set.ml[172,6317+10]..[173,6376+22])
                                  Pexp_ifthenelse
                                  expression (lib/set.ml[172,6317+13]..[172,6317+24])
                                    Pexp_apply
                                    expression (lib/set.ml[172,6317+16]..[172,6317+17])
                                      Pexp_ident ">" (lib/set.ml[172,6317+16]..[172,6317+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[172,6317+13]..[172,6317+15])
                                          Pexp_ident "rh" (lib/set.ml[172,6317+13]..[172,6317+15])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[172,6317+18]..[172,6317+24])
                                          Pexp_apply
                                          expression (lib/set.ml[172,6317+21]..[172,6317+22])
                                            Pexp_ident "+" (lib/set.ml[172,6317+21]..[172,6317+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[172,6317+18]..[172,6317+20])
                                                Pexp_ident "lh" (lib/set.ml[172,6317+18]..[172,6317+20])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[172,6317+23]..[172,6317+24])
                                                Pexp_constant PConst_int (2,None)
                                          ]
                                    ]
                                  expression (lib/set.ml[172,6317+30]..[172,6317+53])
                                    Pexp_apply
                                    expression (lib/set.ml[172,6317+30]..[172,6317+33])
                                      Pexp_ident "bal" (lib/set.ml[172,6317+30]..[172,6317+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[172,6317+34]..[172,6317+47])
                                          Pexp_apply
                                          expression (lib/set.ml[172,6317+35]..[172,6317+39])
                                            Pexp_ident "join" (lib/set.ml[172,6317+35]..[172,6317+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[172,6317+40]..[172,6317+41])
                                                Pexp_ident "l" (lib/set.ml[172,6317+40]..[172,6317+41])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[172,6317+42]..[172,6317+43])
                                                Pexp_ident "v" (lib/set.ml[172,6317+42]..[172,6317+43])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[172,6317+44]..[172,6317+46])
                                                Pexp_ident "rl" (lib/set.ml[172,6317+44]..[172,6317+46])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[172,6317+48]..[172,6317+50])
                                          Pexp_ident "rv" (lib/set.ml[172,6317+48]..[172,6317+50])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[172,6317+51]..[172,6317+53])
                                          Pexp_ident "rr" (lib/set.ml[172,6317+51]..[172,6317+53])
                                    ]
                                  Some
                                    expression (lib/set.ml[173,6376+10]..[173,6376+22])
                                      Pexp_apply
                                      expression (lib/set.ml[173,6376+10]..[173,6376+16])
                                        Pexp_ident "create" (lib/set.ml[173,6376+10]..[173,6376+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[173,6376+17]..[173,6376+18])
                                            Pexp_ident "l" (lib/set.ml[173,6376+17]..[173,6376+18])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[173,6376+19]..[173,6376+20])
                                            Pexp_ident "v" (lib/set.ml[173,6376+19]..[173,6376+20])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[173,6376+21]..[173,6376+22])
                                            Pexp_ident "r" (lib/set.ml[173,6376+21]..[173,6376+22])
                                      ]
                        ]
              ]
            structure_item (lib/set.ml[177,6450+4]..[180,6544+28])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[177,6450+12]..[177,6450+19])
                    Ppat_var "min_elt" (lib/set.ml[177,6450+12]..[177,6450+19])
                  expression (lib/set.ml[177,6450+22]..[180,6544+28])
                    Pexp_function
                    []
                    None
                    Pfunction_cases (lib/set.ml[177,6450+22]..[180,6544+28])
                      [
                        <case>
                          pattern (lib/set.ml[178,6481+8]..[178,6481+13])
                            Ppat_construct "Empty" (lib/set.ml[178,6481+8]..[178,6481+13])
                            None
                          expression (lib/set.ml[178,6481+17]..[178,6481+32])
                            Pexp_apply
                            expression (lib/set.ml[178,6481+17]..[178,6481+22])
                              Pexp_ident "raise" (lib/set.ml[178,6481+17]..[178,6481+22])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[178,6481+23]..[178,6481+32])
                                  Pexp_construct "Not_found" (lib/set.ml[178,6481+23]..[178,6481+32])
                                  None
                            ]
                        <case>
                          pattern (lib/set.ml[179,6514+8]..[179,6514+24])
                            Ppat_construct "Node" (lib/set.ml[179,6514+8]..[179,6514+12])
                            Some
                              []
                              pattern (lib/set.ml[179,6514+12]..[179,6514+24])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[179,6514+13]..[179,6514+14])
                                    pattern (lib/set.ml[179,6514+15]..[179,6514+20])
                                      Ppat_construct "Empty" (lib/set.ml[179,6514+15]..[179,6514+20])
                                      None
                                  "v" (lib/set.ml[179,6514+22]..[179,6514+23]) ghost
                                    pattern (lib/set.ml[179,6514+22]..[179,6514+23])
                                      Ppat_var "v" (lib/set.ml[179,6514+22]..[179,6514+23])
                                ]
                          expression (lib/set.ml[179,6514+28]..[179,6514+29])
                            Pexp_ident "v" (lib/set.ml[179,6514+28]..[179,6514+29])
                        <case>
                          pattern (lib/set.ml[180,6544+8]..[180,6544+15])
                            Ppat_construct "Node" (lib/set.ml[180,6544+8]..[180,6544+12])
                            Some
                              []
                              pattern (lib/set.ml[180,6544+12]..[180,6544+15])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[180,6544+13]..[180,6544+14]) ghost
                                    pattern (lib/set.ml[180,6544+13]..[180,6544+14])
                                      Ppat_var "l" (lib/set.ml[180,6544+13]..[180,6544+14])
                                ]
                          expression (lib/set.ml[180,6544+19]..[180,6544+28])
                            Pexp_apply
                            expression (lib/set.ml[180,6544+19]..[180,6544+26])
                              Pexp_ident "min_elt" (lib/set.ml[180,6544+19]..[180,6544+26])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[180,6544+27]..[180,6544+28])
                                  Pexp_ident "l" (lib/set.ml[180,6544+27]..[180,6544+28])
                            ]
                      ]
              ]
            structure_item (lib/set.ml[182,6574+4]..[185,6666+32])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[182,6574+12]..[182,6574+23])
                    Ppat_var "min_elt_opt" (lib/set.ml[182,6574+12]..[182,6574+23])
                  expression (lib/set.ml[182,6574+26]..[185,6666+32])
                    Pexp_function
                    []
                    None
                    Pfunction_cases (lib/set.ml[182,6574+26]..[185,6666+32])
                      [
                        <case>
                          pattern (lib/set.ml[183,6609+8]..[183,6609+13])
                            Ppat_construct "Empty" (lib/set.ml[183,6609+8]..[183,6609+13])
                            None
                          expression (lib/set.ml[183,6609+17]..[183,6609+21])
                            Pexp_construct "None" (lib/set.ml[183,6609+17]..[183,6609+21])
                            None
                        <case>
                          pattern (lib/set.ml[184,6631+8]..[184,6631+24])
                            Ppat_construct "Node" (lib/set.ml[184,6631+8]..[184,6631+12])
                            Some
                              []
                              pattern (lib/set.ml[184,6631+12]..[184,6631+24])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[184,6631+13]..[184,6631+14])
                                    pattern (lib/set.ml[184,6631+15]..[184,6631+20])
                                      Ppat_construct "Empty" (lib/set.ml[184,6631+15]..[184,6631+20])
                                      None
                                  "v" (lib/set.ml[184,6631+22]..[184,6631+23]) ghost
                                    pattern (lib/set.ml[184,6631+22]..[184,6631+23])
                                      Ppat_var "v" (lib/set.ml[184,6631+22]..[184,6631+23])
                                ]
                          expression (lib/set.ml[184,6631+28]..[184,6631+34])
                            Pexp_construct "Some" (lib/set.ml[184,6631+28]..[184,6631+32])
                            Some
                              expression (lib/set.ml[184,6631+33]..[184,6631+34])
                                Pexp_ident "v" (lib/set.ml[184,6631+33]..[184,6631+34])
                        <case>
                          pattern (lib/set.ml[185,6666+8]..[185,6666+15])
                            Ppat_construct "Node" (lib/set.ml[185,6666+8]..[185,6666+12])
                            Some
                              []
                              pattern (lib/set.ml[185,6666+12]..[185,6666+15])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[185,6666+13]..[185,6666+14]) ghost
                                    pattern (lib/set.ml[185,6666+13]..[185,6666+14])
                                      Ppat_var "l" (lib/set.ml[185,6666+13]..[185,6666+14])
                                ]
                          expression (lib/set.ml[185,6666+19]..[185,6666+32])
                            Pexp_apply
                            expression (lib/set.ml[185,6666+19]..[185,6666+30])
                              Pexp_ident "min_elt_opt" (lib/set.ml[185,6666+19]..[185,6666+30])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[185,6666+31]..[185,6666+32])
                                  Pexp_ident "l" (lib/set.ml[185,6666+31]..[185,6666+32])
                            ]
                      ]
              ]
            structure_item (lib/set.ml[187,6700+4]..[190,6794+28])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[187,6700+12]..[187,6700+19])
                    Ppat_var "max_elt" (lib/set.ml[187,6700+12]..[187,6700+19])
                  expression (lib/set.ml[187,6700+22]..[190,6794+28])
                    Pexp_function
                    []
                    None
                    Pfunction_cases (lib/set.ml[187,6700+22]..[190,6794+28])
                      [
                        <case>
                          pattern (lib/set.ml[188,6731+8]..[188,6731+13])
                            Ppat_construct "Empty" (lib/set.ml[188,6731+8]..[188,6731+13])
                            None
                          expression (lib/set.ml[188,6731+17]..[188,6731+32])
                            Pexp_apply
                            expression (lib/set.ml[188,6731+17]..[188,6731+22])
                              Pexp_ident "raise" (lib/set.ml[188,6731+17]..[188,6731+22])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[188,6731+23]..[188,6731+32])
                                  Pexp_construct "Not_found" (lib/set.ml[188,6731+23]..[188,6731+32])
                                  None
                            ]
                        <case>
                          pattern (lib/set.ml[189,6764+8]..[189,6764+24])
                            Ppat_construct "Node" (lib/set.ml[189,6764+8]..[189,6764+12])
                            Some
                              []
                              pattern (lib/set.ml[189,6764+12]..[189,6764+24])
                                Ppat_record Closed
                                [
                                  "v" (lib/set.ml[189,6764+13]..[189,6764+14]) ghost
                                    pattern (lib/set.ml[189,6764+13]..[189,6764+14])
                                      Ppat_var "v" (lib/set.ml[189,6764+13]..[189,6764+14])
                                  "r" (lib/set.ml[189,6764+16]..[189,6764+17])
                                    pattern (lib/set.ml[189,6764+18]..[189,6764+23])
                                      Ppat_construct "Empty" (lib/set.ml[189,6764+18]..[189,6764+23])
                                      None
                                ]
                          expression (lib/set.ml[189,6764+28]..[189,6764+29])
                            Pexp_ident "v" (lib/set.ml[189,6764+28]..[189,6764+29])
                        <case>
                          pattern (lib/set.ml[190,6794+8]..[190,6794+15])
                            Ppat_construct "Node" (lib/set.ml[190,6794+8]..[190,6794+12])
                            Some
                              []
                              pattern (lib/set.ml[190,6794+12]..[190,6794+15])
                                Ppat_record Closed
                                [
                                  "r" (lib/set.ml[190,6794+13]..[190,6794+14]) ghost
                                    pattern (lib/set.ml[190,6794+13]..[190,6794+14])
                                      Ppat_var "r" (lib/set.ml[190,6794+13]..[190,6794+14])
                                ]
                          expression (lib/set.ml[190,6794+19]..[190,6794+28])
                            Pexp_apply
                            expression (lib/set.ml[190,6794+19]..[190,6794+26])
                              Pexp_ident "max_elt" (lib/set.ml[190,6794+19]..[190,6794+26])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[190,6794+27]..[190,6794+28])
                                  Pexp_ident "r" (lib/set.ml[190,6794+27]..[190,6794+28])
                            ]
                      ]
              ]
            structure_item (lib/set.ml[192,6824+4]..[195,6916+32])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[192,6824+12]..[192,6824+23])
                    Ppat_var "max_elt_opt" (lib/set.ml[192,6824+12]..[192,6824+23])
                  expression (lib/set.ml[192,6824+26]..[195,6916+32])
                    Pexp_function
                    []
                    None
                    Pfunction_cases (lib/set.ml[192,6824+26]..[195,6916+32])
                      [
                        <case>
                          pattern (lib/set.ml[193,6859+8]..[193,6859+13])
                            Ppat_construct "Empty" (lib/set.ml[193,6859+8]..[193,6859+13])
                            None
                          expression (lib/set.ml[193,6859+17]..[193,6859+21])
                            Pexp_construct "None" (lib/set.ml[193,6859+17]..[193,6859+21])
                            None
                        <case>
                          pattern (lib/set.ml[194,6881+8]..[194,6881+24])
                            Ppat_construct "Node" (lib/set.ml[194,6881+8]..[194,6881+12])
                            Some
                              []
                              pattern (lib/set.ml[194,6881+12]..[194,6881+24])
                                Ppat_record Closed
                                [
                                  "v" (lib/set.ml[194,6881+13]..[194,6881+14]) ghost
                                    pattern (lib/set.ml[194,6881+13]..[194,6881+14])
                                      Ppat_var "v" (lib/set.ml[194,6881+13]..[194,6881+14])
                                  "r" (lib/set.ml[194,6881+16]..[194,6881+17])
                                    pattern (lib/set.ml[194,6881+18]..[194,6881+23])
                                      Ppat_construct "Empty" (lib/set.ml[194,6881+18]..[194,6881+23])
                                      None
                                ]
                          expression (lib/set.ml[194,6881+28]..[194,6881+34])
                            Pexp_construct "Some" (lib/set.ml[194,6881+28]..[194,6881+32])
                            Some
                              expression (lib/set.ml[194,6881+33]..[194,6881+34])
                                Pexp_ident "v" (lib/set.ml[194,6881+33]..[194,6881+34])
                        <case>
                          pattern (lib/set.ml[195,6916+8]..[195,6916+15])
                            Ppat_construct "Node" (lib/set.ml[195,6916+8]..[195,6916+12])
                            Some
                              []
                              pattern (lib/set.ml[195,6916+12]..[195,6916+15])
                                Ppat_record Closed
                                [
                                  "r" (lib/set.ml[195,6916+13]..[195,6916+14]) ghost
                                    pattern (lib/set.ml[195,6916+13]..[195,6916+14])
                                      Ppat_var "r" (lib/set.ml[195,6916+13]..[195,6916+14])
                                ]
                          expression (lib/set.ml[195,6916+19]..[195,6916+32])
                            Pexp_apply
                            expression (lib/set.ml[195,6916+19]..[195,6916+30])
                              Pexp_ident "max_elt_opt" (lib/set.ml[195,6916+19]..[195,6916+30])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[195,6916+31]..[195,6916+32])
                                  Pexp_ident "r" (lib/set.ml[195,6916+31]..[195,6916+32])
                            ]
                      ]
              ]
            structure_item (lib/set.ml[199,7006+4]..[202,7124+51])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[199,7006+12]..[199,7006+26])
                    Ppat_var "remove_min_elt" (lib/set.ml[199,7006+12]..[199,7006+26])
                  expression (lib/set.ml[199,7006+29]..[202,7124+51])
                    Pexp_function
                    []
                    None
                    Pfunction_cases (lib/set.ml[199,7006+29]..[202,7124+51])
                      [
                        <case>
                          pattern (lib/set.ml[200,7044+8]..[200,7044+13])
                            Ppat_construct "Empty" (lib/set.ml[200,7044+8]..[200,7044+13])
                            None
                          expression (lib/set.ml[200,7044+17]..[200,7044+49])
                            Pexp_apply
                            expression (lib/set.ml[200,7044+17]..[200,7044+28])
                              Pexp_ident "invalid_arg" (lib/set.ml[200,7044+17]..[200,7044+28])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[200,7044+29]..[200,7044+49])
                                  Pexp_constant PConst_string("Set.remove_min_elt",(lib/set.ml[200,7044+30]..[200,7044+48]),None)
                            ]
                        <case>
                          pattern (lib/set.ml[201,7094+8]..[201,7094+24])
                            Ppat_construct "Node" (lib/set.ml[201,7094+8]..[201,7094+12])
                            Some
                              []
                              pattern (lib/set.ml[201,7094+12]..[201,7094+24])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[201,7094+13]..[201,7094+14])
                                    pattern (lib/set.ml[201,7094+15]..[201,7094+20])
                                      Ppat_construct "Empty" (lib/set.ml[201,7094+15]..[201,7094+20])
                                      None
                                  "r" (lib/set.ml[201,7094+22]..[201,7094+23]) ghost
                                    pattern (lib/set.ml[201,7094+22]..[201,7094+23])
                                      Ppat_var "r" (lib/set.ml[201,7094+22]..[201,7094+23])
                                ]
                          expression (lib/set.ml[201,7094+28]..[201,7094+29])
                            Pexp_ident "r" (lib/set.ml[201,7094+28]..[201,7094+29])
                        <case>
                          pattern (lib/set.ml[202,7124+8]..[202,7124+21])
                            Ppat_construct "Node" (lib/set.ml[202,7124+8]..[202,7124+12])
                            Some
                              []
                              pattern (lib/set.ml[202,7124+12]..[202,7124+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[202,7124+13]..[202,7124+14]) ghost
                                    pattern (lib/set.ml[202,7124+13]..[202,7124+14])
                                      Ppat_var "l" (lib/set.ml[202,7124+13]..[202,7124+14])
                                  "v" (lib/set.ml[202,7124+16]..[202,7124+17]) ghost
                                    pattern (lib/set.ml[202,7124+16]..[202,7124+17])
                                      Ppat_var "v" (lib/set.ml[202,7124+16]..[202,7124+17])
                                  "r" (lib/set.ml[202,7124+19]..[202,7124+20]) ghost
                                    pattern (lib/set.ml[202,7124+19]..[202,7124+20])
                                      Ppat_var "r" (lib/set.ml[202,7124+19]..[202,7124+20])
                                ]
                          expression (lib/set.ml[202,7124+25]..[202,7124+51])
                            Pexp_apply
                            expression (lib/set.ml[202,7124+25]..[202,7124+28])
                              Pexp_ident "bal" (lib/set.ml[202,7124+25]..[202,7124+28])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[202,7124+29]..[202,7124+47])
                                  Pexp_apply
                                  expression (lib/set.ml[202,7124+30]..[202,7124+44])
                                    Pexp_ident "remove_min_elt" (lib/set.ml[202,7124+30]..[202,7124+44])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[202,7124+45]..[202,7124+46])
                                        Pexp_ident "l" (lib/set.ml[202,7124+45]..[202,7124+46])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/set.ml[202,7124+48]..[202,7124+49])
                                  Pexp_ident "v" (lib/set.ml[202,7124+48]..[202,7124+49])
                              <arg>
                              Nolabel
                                expression (lib/set.ml[202,7124+50]..[202,7124+51])
                                  Pexp_ident "r" (lib/set.ml[202,7124+50]..[202,7124+51])
                            ]
                      ]
              ]
            structure_item (lib/set.ml[208,7323+4]..[212,7419+57])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[208,7323+8]..[208,7323+13])
                    Ppat_var "merge" (lib/set.ml[208,7323+8]..[208,7323+13])
                  expression (lib/set.ml[208,7323+14]..[212,7419+57]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[208,7323+14]..[208,7323+16])
                        Nolabel
                        None
                        pattern (lib/set.ml[208,7323+14]..[208,7323+16])
                          Ppat_var "t1" (lib/set.ml[208,7323+14]..[208,7323+16])
                      Pparam_val (lib/set.ml[208,7323+17]..[208,7323+19])
                        Nolabel
                        None
                        pattern (lib/set.ml[208,7323+17]..[208,7323+19])
                          Ppat_var "t2" (lib/set.ml[208,7323+17]..[208,7323+19])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[209,7345+6]..[212,7419+57])
                        Pexp_match
                        expression (lib/set.ml[209,7345+12]..[209,7345+20])
                          Pexp_tuple
                          [
                            expression (lib/set.ml[209,7345+13]..[209,7345+15])
                              Pexp_ident "t1" (lib/set.ml[209,7345+13]..[209,7345+15])
                            expression (lib/set.ml[209,7345+17]..[209,7345+19])
                              Pexp_ident "t2" (lib/set.ml[209,7345+17]..[209,7345+19])
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[210,7371+8]..[210,7371+18])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[210,7371+9]..[210,7371+14])
                                  Ppat_construct "Empty" (lib/set.ml[210,7371+9]..[210,7371+14])
                                  None
                                pattern (lib/set.ml[210,7371+16]..[210,7371+17])
                                  Ppat_var "t" (lib/set.ml[210,7371+16]..[210,7371+17])
                              ]
                            expression (lib/set.ml[210,7371+22]..[210,7371+23])
                              Pexp_ident "t" (lib/set.ml[210,7371+22]..[210,7371+23])
                          <case>
                            pattern (lib/set.ml[211,7395+8]..[211,7395+18])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[211,7395+9]..[211,7395+10])
                                  Ppat_var "t" (lib/set.ml[211,7395+9]..[211,7395+10])
                                pattern (lib/set.ml[211,7395+12]..[211,7395+17])
                                  Ppat_construct "Empty" (lib/set.ml[211,7395+12]..[211,7395+17])
                                  None
                              ]
                            expression (lib/set.ml[211,7395+22]..[211,7395+23])
                              Pexp_ident "t" (lib/set.ml[211,7395+22]..[211,7395+23])
                          <case>
                            pattern (lib/set.ml[212,7419+8]..[212,7419+14])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[212,7419+9]..[212,7419+10])
                                  Ppat_any
                                pattern (lib/set.ml[212,7419+12]..[212,7419+13])
                                  Ppat_any
                              ]
                            expression (lib/set.ml[212,7419+18]..[212,7419+57])
                              Pexp_apply
                              expression (lib/set.ml[212,7419+18]..[212,7419+21])
                                Pexp_ident "bal" (lib/set.ml[212,7419+18]..[212,7419+21])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[212,7419+22]..[212,7419+24])
                                    Pexp_ident "t1" (lib/set.ml[212,7419+22]..[212,7419+24])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[212,7419+25]..[212,7419+37])
                                    Pexp_apply
                                    expression (lib/set.ml[212,7419+26]..[212,7419+33])
                                      Pexp_ident "min_elt" (lib/set.ml[212,7419+26]..[212,7419+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[212,7419+34]..[212,7419+36])
                                          Pexp_ident "t2" (lib/set.ml[212,7419+34]..[212,7419+36])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[212,7419+38]..[212,7419+57])
                                    Pexp_apply
                                    expression (lib/set.ml[212,7419+39]..[212,7419+53])
                                      Pexp_ident "remove_min_elt" (lib/set.ml[212,7419+39]..[212,7419+53])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[212,7419+54]..[212,7419+56])
                                          Pexp_ident "t2" (lib/set.ml[212,7419+54]..[212,7419+56])
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[218,7628+4]..[222,7725+58])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[218,7628+8]..[218,7628+14])
                    Ppat_var "concat" (lib/set.ml[218,7628+8]..[218,7628+14])
                  expression (lib/set.ml[218,7628+15]..[222,7725+58]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[218,7628+15]..[218,7628+17])
                        Nolabel
                        None
                        pattern (lib/set.ml[218,7628+15]..[218,7628+17])
                          Ppat_var "t1" (lib/set.ml[218,7628+15]..[218,7628+17])
                      Pparam_val (lib/set.ml[218,7628+18]..[218,7628+20])
                        Nolabel
                        None
                        pattern (lib/set.ml[218,7628+18]..[218,7628+20])
                          Ppat_var "t2" (lib/set.ml[218,7628+18]..[218,7628+20])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[219,7651+6]..[222,7725+58])
                        Pexp_match
                        expression (lib/set.ml[219,7651+12]..[219,7651+20])
                          Pexp_tuple
                          [
                            expression (lib/set.ml[219,7651+13]..[219,7651+15])
                              Pexp_ident "t1" (lib/set.ml[219,7651+13]..[219,7651+15])
                            expression (lib/set.ml[219,7651+17]..[219,7651+19])
                              Pexp_ident "t2" (lib/set.ml[219,7651+17]..[219,7651+19])
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[220,7677+8]..[220,7677+18])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[220,7677+9]..[220,7677+14])
                                  Ppat_construct "Empty" (lib/set.ml[220,7677+9]..[220,7677+14])
                                  None
                                pattern (lib/set.ml[220,7677+16]..[220,7677+17])
                                  Ppat_var "t" (lib/set.ml[220,7677+16]..[220,7677+17])
                              ]
                            expression (lib/set.ml[220,7677+22]..[220,7677+23])
                              Pexp_ident "t" (lib/set.ml[220,7677+22]..[220,7677+23])
                          <case>
                            pattern (lib/set.ml[221,7701+8]..[221,7701+18])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[221,7701+9]..[221,7701+10])
                                  Ppat_var "t" (lib/set.ml[221,7701+9]..[221,7701+10])
                                pattern (lib/set.ml[221,7701+12]..[221,7701+17])
                                  Ppat_construct "Empty" (lib/set.ml[221,7701+12]..[221,7701+17])
                                  None
                              ]
                            expression (lib/set.ml[221,7701+22]..[221,7701+23])
                              Pexp_ident "t" (lib/set.ml[221,7701+22]..[221,7701+23])
                          <case>
                            pattern (lib/set.ml[222,7725+8]..[222,7725+14])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[222,7725+9]..[222,7725+10])
                                  Ppat_any
                                pattern (lib/set.ml[222,7725+12]..[222,7725+13])
                                  Ppat_any
                              ]
                            expression (lib/set.ml[222,7725+18]..[222,7725+58])
                              Pexp_apply
                              expression (lib/set.ml[222,7725+18]..[222,7725+22])
                                Pexp_ident "join" (lib/set.ml[222,7725+18]..[222,7725+22])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[222,7725+23]..[222,7725+25])
                                    Pexp_ident "t1" (lib/set.ml[222,7725+23]..[222,7725+25])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[222,7725+26]..[222,7725+38])
                                    Pexp_apply
                                    expression (lib/set.ml[222,7725+27]..[222,7725+34])
                                      Pexp_ident "min_elt" (lib/set.ml[222,7725+27]..[222,7725+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[222,7725+35]..[222,7725+37])
                                          Pexp_ident "t2" (lib/set.ml[222,7725+35]..[222,7725+37])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[222,7725+39]..[222,7725+58])
                                    Pexp_apply
                                    expression (lib/set.ml[222,7725+40]..[222,7725+54])
                                      Pexp_ident "remove_min_elt" (lib/set.ml[222,7725+40]..[222,7725+54])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[222,7725+55]..[222,7725+57])
                                          Pexp_ident "t2" (lib/set.ml[222,7725+55]..[222,7725+57])
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[230,8082+4]..[239,8375+69])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[230,8082+12]..[230,8082+17])
                    Ppat_var "split" (lib/set.ml[230,8082+12]..[230,8082+17])
                  expression (lib/set.ml[230,8082+18]..[239,8375+69]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[230,8082+18]..[230,8082+19])
                        Nolabel
                        None
                        pattern (lib/set.ml[230,8082+18]..[230,8082+19])
                          Ppat_var "x" (lib/set.ml[230,8082+18]..[230,8082+19])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[230,8082+22]..[239,8375+69])
                      [
                        <case>
                          pattern (lib/set.ml[231,8113+8]..[231,8113+13])
                            Ppat_construct "Empty" (lib/set.ml[231,8113+8]..[231,8113+13])
                            None
                          expression (lib/set.ml[232,8130+10]..[232,8130+31])
                            Pexp_tuple
                            [
                              expression (lib/set.ml[232,8130+11]..[232,8130+16])
                                Pexp_construct "Empty" (lib/set.ml[232,8130+11]..[232,8130+16])
                                None
                              expression (lib/set.ml[232,8130+18]..[232,8130+23])
                                Pexp_construct "false" (lib/set.ml[232,8130+18]..[232,8130+23])
                                None
                              expression (lib/set.ml[232,8130+25]..[232,8130+30])
                                Pexp_construct "Empty" (lib/set.ml[232,8130+25]..[232,8130+30])
                                None
                            ]
                        <case>
                          pattern (lib/set.ml[233,8162+8]..[233,8162+21])
                            Ppat_construct "Node" (lib/set.ml[233,8162+8]..[233,8162+12])
                            Some
                              []
                              pattern (lib/set.ml[233,8162+12]..[233,8162+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[233,8162+13]..[233,8162+14]) ghost
                                    pattern (lib/set.ml[233,8162+13]..[233,8162+14])
                                      Ppat_var "l" (lib/set.ml[233,8162+13]..[233,8162+14])
                                  "v" (lib/set.ml[233,8162+16]..[233,8162+17]) ghost
                                    pattern (lib/set.ml[233,8162+16]..[233,8162+17])
                                      Ppat_var "v" (lib/set.ml[233,8162+16]..[233,8162+17])
                                  "r" (lib/set.ml[233,8162+19]..[233,8162+20]) ghost
                                    pattern (lib/set.ml[233,8162+19]..[233,8162+20])
                                      Ppat_var "r" (lib/set.ml[233,8162+19]..[233,8162+20])
                                ]
                          expression (lib/set.ml[234,8187+10]..[239,8375+69])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[234,8187+14]..[234,8187+15])
                                  Ppat_var "c" (lib/set.ml[234,8187+14]..[234,8187+15])
                                expression (lib/set.ml[234,8187+18]..[234,8187+33])
                                  Pexp_apply
                                  expression (lib/set.ml[234,8187+18]..[234,8187+29])
                                    Pexp_ident "Ord.compare" (lib/set.ml[234,8187+18]..[234,8187+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[234,8187+30]..[234,8187+31])
                                        Pexp_ident "x" (lib/set.ml[234,8187+30]..[234,8187+31])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[234,8187+32]..[234,8187+33])
                                        Pexp_ident "v" (lib/set.ml[234,8187+32]..[234,8187+33])
                                  ]
                            ]
                            expression (lib/set.ml[235,8224+10]..[239,8375+69])
                              Pexp_ifthenelse
                              expression (lib/set.ml[235,8224+13]..[235,8224+18])
                                Pexp_apply
                                expression (lib/set.ml[235,8224+15]..[235,8224+16])
                                  Pexp_ident "=" (lib/set.ml[235,8224+15]..[235,8224+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[235,8224+13]..[235,8224+14])
                                      Pexp_ident "c" (lib/set.ml[235,8224+13]..[235,8224+14])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[235,8224+17]..[235,8224+18])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (lib/set.ml[235,8224+24]..[235,8224+36])
                                Pexp_tuple
                                [
                                  expression (lib/set.ml[235,8224+25]..[235,8224+26])
                                    Pexp_ident "l" (lib/set.ml[235,8224+25]..[235,8224+26])
                                  expression (lib/set.ml[235,8224+28]..[235,8224+32])
                                    Pexp_construct "true" (lib/set.ml[235,8224+28]..[235,8224+32])
                                    None
                                  expression (lib/set.ml[235,8224+34]..[235,8224+35])
                                    Pexp_ident "r" (lib/set.ml[235,8224+34]..[235,8224+35])
                                ]
                              Some
                                expression (lib/set.ml[236,8261+15]..[239,8375+69])
                                  Pexp_ifthenelse
                                  expression (lib/set.ml[236,8261+18]..[236,8261+23])
                                    Pexp_apply
                                    expression (lib/set.ml[236,8261+20]..[236,8261+21])
                                      Pexp_ident "<" (lib/set.ml[236,8261+20]..[236,8261+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[236,8261+18]..[236,8261+19])
                                          Pexp_ident "c" (lib/set.ml[236,8261+18]..[236,8261+19])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[236,8261+22]..[236,8261+23])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                  expression (lib/set.ml[237,8290+12]..[237,8290+69])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/set.ml[237,8290+16]..[237,8290+30])
                                          Ppat_tuple
                                          [
                                            pattern (lib/set.ml[237,8290+17]..[237,8290+19])
                                              Ppat_var "ll" (lib/set.ml[237,8290+17]..[237,8290+19])
                                            pattern (lib/set.ml[237,8290+21]..[237,8290+25])
                                              Ppat_var "pres" (lib/set.ml[237,8290+21]..[237,8290+25])
                                            pattern (lib/set.ml[237,8290+27]..[237,8290+29])
                                              Ppat_var "rl" (lib/set.ml[237,8290+27]..[237,8290+29])
                                          ]
                                        expression (lib/set.ml[237,8290+33]..[237,8290+42])
                                          Pexp_apply
                                          expression (lib/set.ml[237,8290+33]..[237,8290+38])
                                            Pexp_ident "split" (lib/set.ml[237,8290+33]..[237,8290+38])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[237,8290+39]..[237,8290+40])
                                                Pexp_ident "x" (lib/set.ml[237,8290+39]..[237,8290+40])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[237,8290+41]..[237,8290+42])
                                                Pexp_ident "l" (lib/set.ml[237,8290+41]..[237,8290+42])
                                          ]
                                    ]
                                    expression (lib/set.ml[237,8290+46]..[237,8290+69])
                                      Pexp_tuple
                                      [
                                        expression (lib/set.ml[237,8290+47]..[237,8290+49])
                                          Pexp_ident "ll" (lib/set.ml[237,8290+47]..[237,8290+49])
                                        expression (lib/set.ml[237,8290+51]..[237,8290+55])
                                          Pexp_ident "pres" (lib/set.ml[237,8290+51]..[237,8290+55])
                                        expression (lib/set.ml[237,8290+57]..[237,8290+68])
                                          Pexp_apply
                                          expression (lib/set.ml[237,8290+57]..[237,8290+61])
                                            Pexp_ident "join" (lib/set.ml[237,8290+57]..[237,8290+61])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[237,8290+62]..[237,8290+64])
                                                Pexp_ident "rl" (lib/set.ml[237,8290+62]..[237,8290+64])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[237,8290+65]..[237,8290+66])
                                                Pexp_ident "v" (lib/set.ml[237,8290+65]..[237,8290+66])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[237,8290+67]..[237,8290+68])
                                                Pexp_ident "r" (lib/set.ml[237,8290+67]..[237,8290+68])
                                          ]
                                      ]
                                  Some
                                    expression (lib/set.ml[239,8375+12]..[239,8375+69])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/set.ml[239,8375+16]..[239,8375+30])
                                            Ppat_tuple
                                            [
                                              pattern (lib/set.ml[239,8375+17]..[239,8375+19])
                                                Ppat_var "lr" (lib/set.ml[239,8375+17]..[239,8375+19])
                                              pattern (lib/set.ml[239,8375+21]..[239,8375+25])
                                                Ppat_var "pres" (lib/set.ml[239,8375+21]..[239,8375+25])
                                              pattern (lib/set.ml[239,8375+27]..[239,8375+29])
                                                Ppat_var "rr" (lib/set.ml[239,8375+27]..[239,8375+29])
                                            ]
                                          expression (lib/set.ml[239,8375+33]..[239,8375+42])
                                            Pexp_apply
                                            expression (lib/set.ml[239,8375+33]..[239,8375+38])
                                              Pexp_ident "split" (lib/set.ml[239,8375+33]..[239,8375+38])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[239,8375+39]..[239,8375+40])
                                                  Pexp_ident "x" (lib/set.ml[239,8375+39]..[239,8375+40])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[239,8375+41]..[239,8375+42])
                                                  Pexp_ident "r" (lib/set.ml[239,8375+41]..[239,8375+42])
                                            ]
                                      ]
                                      expression (lib/set.ml[239,8375+46]..[239,8375+69])
                                        Pexp_tuple
                                        [
                                          expression (lib/set.ml[239,8375+47]..[239,8375+58])
                                            Pexp_apply
                                            expression (lib/set.ml[239,8375+47]..[239,8375+51])
                                              Pexp_ident "join" (lib/set.ml[239,8375+47]..[239,8375+51])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[239,8375+52]..[239,8375+53])
                                                  Pexp_ident "l" (lib/set.ml[239,8375+52]..[239,8375+53])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[239,8375+54]..[239,8375+55])
                                                  Pexp_ident "v" (lib/set.ml[239,8375+54]..[239,8375+55])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[239,8375+56]..[239,8375+58])
                                                  Pexp_ident "lr" (lib/set.ml[239,8375+56]..[239,8375+58])
                                            ]
                                          expression (lib/set.ml[239,8375+60]..[239,8375+64])
                                            Pexp_ident "pres" (lib/set.ml[239,8375+60]..[239,8375+64])
                                          expression (lib/set.ml[239,8375+66]..[239,8375+68])
                                            Pexp_ident "rr" (lib/set.ml[239,8375+66]..[239,8375+68])
                                        ]
                      ]
              ]
            structure_item (lib/set.ml[243,8494+4]..[243,8494+21])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[243,8494+8]..[243,8494+13])
                    Ppat_var "empty" (lib/set.ml[243,8494+8]..[243,8494+13])
                  expression (lib/set.ml[243,8494+16]..[243,8494+21])
                    Pexp_construct "Empty" (lib/set.ml[243,8494+16]..[243,8494+21])
                    None
              ]
            structure_item (lib/set.ml[245,8517+4]..[245,8517+54])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[245,8517+8]..[245,8517+16])
                    Ppat_var "is_empty" (lib/set.ml[245,8517+8]..[245,8517+16])
                  expression (lib/set.ml[245,8517+19]..[245,8517+54])
                    Pexp_function
                    []
                    None
                    Pfunction_cases (lib/set.ml[245,8517+19]..[245,8517+54])
                      [
                        <case>
                          pattern (lib/set.ml[245,8517+28]..[245,8517+33])
                            Ppat_construct "Empty" (lib/set.ml[245,8517+28]..[245,8517+33])
                            None
                          expression (lib/set.ml[245,8517+37]..[245,8517+41])
                            Pexp_construct "true" (lib/set.ml[245,8517+37]..[245,8517+41])
                            None
                        <case>
                          pattern (lib/set.ml[245,8517+44]..[245,8517+45])
                            Ppat_any
                          expression (lib/set.ml[245,8517+49]..[245,8517+54])
                            Pexp_construct "false" (lib/set.ml[245,8517+49]..[245,8517+54])
                            None
                      ]
              ]
            structure_item (lib/set.ml[247,8573+4]..[251,8687+49])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[247,8573+12]..[247,8573+15])
                    Ppat_var "mem" (lib/set.ml[247,8573+12]..[247,8573+15])
                  expression (lib/set.ml[247,8573+16]..[251,8687+49]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[247,8573+16]..[247,8573+17])
                        Nolabel
                        None
                        pattern (lib/set.ml[247,8573+16]..[247,8573+17])
                          Ppat_var "x" (lib/set.ml[247,8573+16]..[247,8573+17])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[247,8573+20]..[251,8687+49])
                      [
                        <case>
                          pattern (lib/set.ml[248,8602+8]..[248,8602+13])
                            Ppat_construct "Empty" (lib/set.ml[248,8602+8]..[248,8602+13])
                            None
                          expression (lib/set.ml[248,8602+17]..[248,8602+22])
                            Pexp_construct "false" (lib/set.ml[248,8602+17]..[248,8602+22])
                            None
                        <case>
                          pattern (lib/set.ml[249,8625+8]..[249,8625+21])
                            Ppat_construct "Node" (lib/set.ml[249,8625+8]..[249,8625+12])
                            Some
                              []
                              pattern (lib/set.ml[249,8625+12]..[249,8625+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[249,8625+13]..[249,8625+14]) ghost
                                    pattern (lib/set.ml[249,8625+13]..[249,8625+14])
                                      Ppat_var "l" (lib/set.ml[249,8625+13]..[249,8625+14])
                                  "v" (lib/set.ml[249,8625+16]..[249,8625+17]) ghost
                                    pattern (lib/set.ml[249,8625+16]..[249,8625+17])
                                      Ppat_var "v" (lib/set.ml[249,8625+16]..[249,8625+17])
                                  "r" (lib/set.ml[249,8625+19]..[249,8625+20]) ghost
                                    pattern (lib/set.ml[249,8625+19]..[249,8625+20])
                                      Ppat_var "r" (lib/set.ml[249,8625+19]..[249,8625+20])
                                ]
                          expression (lib/set.ml[250,8650+10]..[251,8687+49])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[250,8650+14]..[250,8650+15])
                                  Ppat_var "c" (lib/set.ml[250,8650+14]..[250,8650+15])
                                expression (lib/set.ml[250,8650+18]..[250,8650+33])
                                  Pexp_apply
                                  expression (lib/set.ml[250,8650+18]..[250,8650+29])
                                    Pexp_ident "Ord.compare" (lib/set.ml[250,8650+18]..[250,8650+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[250,8650+30]..[250,8650+31])
                                        Pexp_ident "x" (lib/set.ml[250,8650+30]..[250,8650+31])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[250,8650+32]..[250,8650+33])
                                        Pexp_ident "v" (lib/set.ml[250,8650+32]..[250,8650+33])
                                  ]
                            ]
                            expression (lib/set.ml[251,8687+10]..[251,8687+49])
                              Pexp_apply
                              expression (lib/set.ml[251,8687+16]..[251,8687+18])
                                Pexp_ident "||" (lib/set.ml[251,8687+16]..[251,8687+18])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[251,8687+10]..[251,8687+15])
                                    Pexp_apply
                                    expression (lib/set.ml[251,8687+12]..[251,8687+13])
                                      Pexp_ident "=" (lib/set.ml[251,8687+12]..[251,8687+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[251,8687+10]..[251,8687+11])
                                          Pexp_ident "c" (lib/set.ml[251,8687+10]..[251,8687+11])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[251,8687+14]..[251,8687+15])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[251,8687+19]..[251,8687+49])
                                    Pexp_apply
                                    expression (lib/set.ml[251,8687+19]..[251,8687+22])
                                      Pexp_ident "mem" (lib/set.ml[251,8687+19]..[251,8687+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[251,8687+23]..[251,8687+24])
                                          Pexp_ident "x" (lib/set.ml[251,8687+23]..[251,8687+24])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[251,8687+25]..[251,8687+49])
                                          Pexp_ifthenelse
                                          expression (lib/set.ml[251,8687+29]..[251,8687+34])
                                            Pexp_apply
                                            expression (lib/set.ml[251,8687+31]..[251,8687+32])
                                              Pexp_ident "<" (lib/set.ml[251,8687+31]..[251,8687+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[251,8687+29]..[251,8687+30])
                                                  Pexp_ident "c" (lib/set.ml[251,8687+29]..[251,8687+30])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[251,8687+33]..[251,8687+34])
                                                  Pexp_constant PConst_int (0,None)
                                            ]
                                          expression (lib/set.ml[251,8687+40]..[251,8687+41])
                                            Pexp_ident "l" (lib/set.ml[251,8687+40]..[251,8687+41])
                                          Some
                                            expression (lib/set.ml[251,8687+47]..[251,8687+48])
                                              Pexp_ident "r" (lib/set.ml[251,8687+47]..[251,8687+48])
                                    ]
                              ]
                      ]
              ]
            structure_item (lib/set.ml[253,8738+4]..[266,9122+29])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[253,8738+12]..[253,8738+18])
                    Ppat_var "remove" (lib/set.ml[253,8738+12]..[253,8738+18])
                  expression (lib/set.ml[253,8738+19]..[266,9122+29]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[253,8738+19]..[253,8738+20])
                        Nolabel
                        None
                        pattern (lib/set.ml[253,8738+19]..[253,8738+20])
                          Ppat_var "x" (lib/set.ml[253,8738+19]..[253,8738+20])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[253,8738+23]..[266,9122+29])
                      [
                        <case>
                          pattern (lib/set.ml[254,8770+8]..[254,8770+13])
                            Ppat_construct "Empty" (lib/set.ml[254,8770+8]..[254,8770+13])
                            None
                          expression (lib/set.ml[254,8770+17]..[254,8770+22])
                            Pexp_construct "Empty" (lib/set.ml[254,8770+17]..[254,8770+22])
                            None
                        <case>
                          pattern (lib/set.ml[255,8793+8]..[255,8793+28])
                            Ppat_alias "t" (lib/set.ml[255,8793+26]..[255,8793+27])
                            pattern (lib/set.ml[255,8793+9]..[255,8793+22])
                              Ppat_construct "Node" (lib/set.ml[255,8793+9]..[255,8793+13])
                              Some
                                []
                                pattern (lib/set.ml[255,8793+13]..[255,8793+22])
                                  Ppat_record Closed
                                  [
                                    "l" (lib/set.ml[255,8793+14]..[255,8793+15]) ghost
                                      pattern (lib/set.ml[255,8793+14]..[255,8793+15])
                                        Ppat_var "l" (lib/set.ml[255,8793+14]..[255,8793+15])
                                    "v" (lib/set.ml[255,8793+17]..[255,8793+18]) ghost
                                      pattern (lib/set.ml[255,8793+17]..[255,8793+18])
                                        Ppat_var "v" (lib/set.ml[255,8793+17]..[255,8793+18])
                                    "r" (lib/set.ml[255,8793+20]..[255,8793+21]) ghost
                                      pattern (lib/set.ml[255,8793+20]..[255,8793+21])
                                        Ppat_var "r" (lib/set.ml[255,8793+20]..[255,8793+21])
                                  ]
                          expression (lib/set.ml[256,8825+10]..[266,9122+29])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[256,8825+14]..[256,8825+15])
                                  Ppat_var "c" (lib/set.ml[256,8825+14]..[256,8825+15])
                                expression (lib/set.ml[256,8825+18]..[256,8825+33])
                                  Pexp_apply
                                  expression (lib/set.ml[256,8825+18]..[256,8825+29])
                                    Pexp_ident "Ord.compare" (lib/set.ml[256,8825+18]..[256,8825+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[256,8825+30]..[256,8825+31])
                                        Pexp_ident "x" (lib/set.ml[256,8825+30]..[256,8825+31])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[256,8825+32]..[256,8825+33])
                                        Pexp_ident "v" (lib/set.ml[256,8825+32]..[256,8825+33])
                                  ]
                            ]
                            expression (lib/set.ml[257,8862+10]..[266,9122+29])
                              Pexp_ifthenelse
                              expression (lib/set.ml[257,8862+13]..[257,8862+18])
                                Pexp_apply
                                expression (lib/set.ml[257,8862+15]..[257,8862+16])
                                  Pexp_ident "=" (lib/set.ml[257,8862+15]..[257,8862+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[257,8862+13]..[257,8862+14])
                                      Pexp_ident "c" (lib/set.ml[257,8862+13]..[257,8862+14])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[257,8862+17]..[257,8862+18])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (lib/set.ml[257,8862+24]..[257,8862+33])
                                Pexp_apply
                                expression (lib/set.ml[257,8862+24]..[257,8862+29])
                                  Pexp_ident "merge" (lib/set.ml[257,8862+24]..[257,8862+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[257,8862+30]..[257,8862+31])
                                      Pexp_ident "l" (lib/set.ml[257,8862+30]..[257,8862+31])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[257,8862+32]..[257,8862+33])
                                      Pexp_ident "r" (lib/set.ml[257,8862+32]..[257,8862+33])
                                ]
                              Some
                                expression (lib/set.ml[259,8911+12]..[266,9122+29])
                                  Pexp_ifthenelse
                                  expression (lib/set.ml[259,8911+15]..[259,8911+20])
                                    Pexp_apply
                                    expression (lib/set.ml[259,8911+17]..[259,8911+18])
                                      Pexp_ident "<" (lib/set.ml[259,8911+17]..[259,8911+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[259,8911+15]..[259,8911+16])
                                          Pexp_ident "c" (lib/set.ml[259,8911+15]..[259,8911+16])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[259,8911+19]..[259,8911+20])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                  expression (lib/set.ml[260,8937+14]..[262,9006+29])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/set.ml[260,8937+18]..[260,8937+20])
                                          Ppat_var "ll" (lib/set.ml[260,8937+18]..[260,8937+20])
                                        expression (lib/set.ml[260,8937+23]..[260,8937+33])
                                          Pexp_apply
                                          expression (lib/set.ml[260,8937+23]..[260,8937+29])
                                            Pexp_ident "remove" (lib/set.ml[260,8937+23]..[260,8937+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[260,8937+30]..[260,8937+31])
                                                Pexp_ident "x" (lib/set.ml[260,8937+30]..[260,8937+31])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[260,8937+32]..[260,8937+33])
                                                Pexp_ident "l" (lib/set.ml[260,8937+32]..[260,8937+33])
                                          ]
                                    ]
                                    expression (lib/set.ml[261,8974+14]..[262,9006+29])
                                      Pexp_ifthenelse
                                      expression (lib/set.ml[261,8974+17]..[261,8974+24])
                                        Pexp_apply
                                        expression (lib/set.ml[261,8974+19]..[261,8974+21])
                                          Pexp_ident "==" (lib/set.ml[261,8974+19]..[261,8974+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[261,8974+17]..[261,8974+18])
                                              Pexp_ident "l" (lib/set.ml[261,8974+17]..[261,8974+18])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[261,8974+22]..[261,8974+24])
                                              Pexp_ident "ll" (lib/set.ml[261,8974+22]..[261,8974+24])
                                        ]
                                      expression (lib/set.ml[261,8974+30]..[261,8974+31])
                                        Pexp_ident "t" (lib/set.ml[261,8974+30]..[261,8974+31])
                                      Some
                                        expression (lib/set.ml[262,9006+19]..[262,9006+29])
                                          Pexp_apply
                                          expression (lib/set.ml[262,9006+19]..[262,9006+22])
                                            Pexp_ident "bal" (lib/set.ml[262,9006+19]..[262,9006+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[262,9006+23]..[262,9006+25])
                                                Pexp_ident "ll" (lib/set.ml[262,9006+23]..[262,9006+25])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[262,9006+26]..[262,9006+27])
                                                Pexp_ident "v" (lib/set.ml[262,9006+26]..[262,9006+27])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[262,9006+28]..[262,9006+29])
                                                Pexp_ident "r" (lib/set.ml[262,9006+28]..[262,9006+29])
                                          ]
                                  Some
                                    expression (lib/set.ml[264,9053+14]..[266,9122+29])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/set.ml[264,9053+18]..[264,9053+20])
                                            Ppat_var "rr" (lib/set.ml[264,9053+18]..[264,9053+20])
                                          expression (lib/set.ml[264,9053+23]..[264,9053+33])
                                            Pexp_apply
                                            expression (lib/set.ml[264,9053+23]..[264,9053+29])
                                              Pexp_ident "remove" (lib/set.ml[264,9053+23]..[264,9053+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[264,9053+30]..[264,9053+31])
                                                  Pexp_ident "x" (lib/set.ml[264,9053+30]..[264,9053+31])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[264,9053+32]..[264,9053+33])
                                                  Pexp_ident "r" (lib/set.ml[264,9053+32]..[264,9053+33])
                                            ]
                                      ]
                                      expression (lib/set.ml[265,9090+14]..[266,9122+29])
                                        Pexp_ifthenelse
                                        expression (lib/set.ml[265,9090+17]..[265,9090+24])
                                          Pexp_apply
                                          expression (lib/set.ml[265,9090+19]..[265,9090+21])
                                            Pexp_ident "==" (lib/set.ml[265,9090+19]..[265,9090+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[265,9090+17]..[265,9090+18])
                                                Pexp_ident "r" (lib/set.ml[265,9090+17]..[265,9090+18])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[265,9090+22]..[265,9090+24])
                                                Pexp_ident "rr" (lib/set.ml[265,9090+22]..[265,9090+24])
                                          ]
                                        expression (lib/set.ml[265,9090+30]..[265,9090+31])
                                          Pexp_ident "t" (lib/set.ml[265,9090+30]..[265,9090+31])
                                        Some
                                          expression (lib/set.ml[266,9122+19]..[266,9122+29])
                                            Pexp_apply
                                            expression (lib/set.ml[266,9122+19]..[266,9122+22])
                                              Pexp_ident "bal" (lib/set.ml[266,9122+19]..[266,9122+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[266,9122+23]..[266,9122+24])
                                                  Pexp_ident "l" (lib/set.ml[266,9122+23]..[266,9122+24])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[266,9122+25]..[266,9122+26])
                                                  Pexp_ident "v" (lib/set.ml[266,9122+25]..[266,9122+26])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[266,9122+27]..[266,9122+29])
                                                  Pexp_ident "rr" (lib/set.ml[266,9122+27]..[266,9122+29])
                                            ]
                      ]
              ]
            structure_item (lib/set.ml[268,9153+4]..[282,9677+15])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[268,9153+12]..[268,9153+17])
                    Ppat_var "union" (lib/set.ml[268,9153+12]..[268,9153+17])
                  expression (lib/set.ml[268,9153+18]..[282,9677+15]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[268,9153+18]..[268,9153+20])
                        Nolabel
                        None
                        pattern (lib/set.ml[268,9153+18]..[268,9153+20])
                          Ppat_var "s1" (lib/set.ml[268,9153+18]..[268,9153+20])
                      Pparam_val (lib/set.ml[268,9153+21]..[268,9153+23])
                        Nolabel
                        None
                        pattern (lib/set.ml[268,9153+21]..[268,9153+23])
                          Ppat_var "s2" (lib/set.ml[268,9153+21]..[268,9153+23])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[269,9179+6]..[282,9677+15])
                        Pexp_match
                        expression (lib/set.ml[269,9179+12]..[269,9179+20])
                          Pexp_tuple
                          [
                            expression (lib/set.ml[269,9179+13]..[269,9179+15])
                              Pexp_ident "s1" (lib/set.ml[269,9179+13]..[269,9179+15])
                            expression (lib/set.ml[269,9179+17]..[269,9179+19])
                              Pexp_ident "s2" (lib/set.ml[269,9179+17]..[269,9179+19])
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[270,9205+8]..[270,9205+19])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[270,9205+9]..[270,9205+14])
                                  Ppat_construct "Empty" (lib/set.ml[270,9205+9]..[270,9205+14])
                                  None
                                pattern (lib/set.ml[270,9205+16]..[270,9205+18])
                                  Ppat_var "t2" (lib/set.ml[270,9205+16]..[270,9205+18])
                              ]
                            expression (lib/set.ml[270,9205+23]..[270,9205+25])
                              Pexp_ident "t2" (lib/set.ml[270,9205+23]..[270,9205+25])
                          <case>
                            pattern (lib/set.ml[271,9231+8]..[271,9231+19])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[271,9231+9]..[271,9231+11])
                                  Ppat_var "t1" (lib/set.ml[271,9231+9]..[271,9231+11])
                                pattern (lib/set.ml[271,9231+13]..[271,9231+18])
                                  Ppat_construct "Empty" (lib/set.ml[271,9231+13]..[271,9231+18])
                                  None
                              ]
                            expression (lib/set.ml[271,9231+23]..[271,9231+25])
                              Pexp_ident "t1" (lib/set.ml[271,9231+23]..[271,9231+25])
                          <case>
                            pattern (lib/set.ml[272,9257+8]..[272,9257+68])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[272,9257+9]..[272,9257+37])
                                  Ppat_construct "Node" (lib/set.ml[272,9257+9]..[272,9257+13])
                                  Some
                                    []
                                    pattern (lib/set.ml[272,9257+13]..[272,9257+37])
                                      Ppat_record Closed
                                      [
                                        "l" (lib/set.ml[272,9257+14]..[272,9257+15])
                                          pattern (lib/set.ml[272,9257+16]..[272,9257+18])
                                            Ppat_var "l1" (lib/set.ml[272,9257+16]..[272,9257+18])
                                        "v" (lib/set.ml[272,9257+20]..[272,9257+21])
                                          pattern (lib/set.ml[272,9257+22]..[272,9257+24])
                                            Ppat_var "v1" (lib/set.ml[272,9257+22]..[272,9257+24])
                                        "r" (lib/set.ml[272,9257+26]..[272,9257+27])
                                          pattern (lib/set.ml[272,9257+28]..[272,9257+30])
                                            Ppat_var "r1" (lib/set.ml[272,9257+28]..[272,9257+30])
                                        "h" (lib/set.ml[272,9257+32]..[272,9257+33])
                                          pattern (lib/set.ml[272,9257+34]..[272,9257+36])
                                            Ppat_var "h1" (lib/set.ml[272,9257+34]..[272,9257+36])
                                      ]
                                pattern (lib/set.ml[272,9257+39]..[272,9257+67])
                                  Ppat_construct "Node" (lib/set.ml[272,9257+39]..[272,9257+43])
                                  Some
                                    []
                                    pattern (lib/set.ml[272,9257+43]..[272,9257+67])
                                      Ppat_record Closed
                                      [
                                        "l" (lib/set.ml[272,9257+44]..[272,9257+45])
                                          pattern (lib/set.ml[272,9257+46]..[272,9257+48])
                                            Ppat_var "l2" (lib/set.ml[272,9257+46]..[272,9257+48])
                                        "v" (lib/set.ml[272,9257+50]..[272,9257+51])
                                          pattern (lib/set.ml[272,9257+52]..[272,9257+54])
                                            Ppat_var "v2" (lib/set.ml[272,9257+52]..[272,9257+54])
                                        "r" (lib/set.ml[272,9257+56]..[272,9257+57])
                                          pattern (lib/set.ml[272,9257+58]..[272,9257+60])
                                            Ppat_var "r2" (lib/set.ml[272,9257+58]..[272,9257+60])
                                        "h" (lib/set.ml[272,9257+62]..[272,9257+63])
                                          pattern (lib/set.ml[272,9257+64]..[272,9257+66])
                                            Ppat_var "h2" (lib/set.ml[272,9257+64]..[272,9257+66])
                                      ]
                              ]
                            expression (lib/set.ml[273,9329+10]..[282,9677+15])
                              Pexp_ifthenelse
                              expression (lib/set.ml[273,9329+13]..[273,9329+21])
                                Pexp_apply
                                expression (lib/set.ml[273,9329+16]..[273,9329+18])
                                  Pexp_ident ">=" (lib/set.ml[273,9329+16]..[273,9329+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[273,9329+13]..[273,9329+15])
                                      Pexp_ident "h1" (lib/set.ml[273,9329+13]..[273,9329+15])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[273,9329+19]..[273,9329+21])
                                      Pexp_ident "h2" (lib/set.ml[273,9329+19]..[273,9329+21])
                                ]
                              expression (lib/set.ml[274,9356+12]..[277,9501+15])
                                Pexp_ifthenelse
                                expression (lib/set.ml[274,9356+15]..[274,9356+21])
                                  Pexp_apply
                                  expression (lib/set.ml[274,9356+18]..[274,9356+19])
                                    Pexp_ident "=" (lib/set.ml[274,9356+18]..[274,9356+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[274,9356+15]..[274,9356+17])
                                        Pexp_ident "h2" (lib/set.ml[274,9356+15]..[274,9356+17])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[274,9356+20]..[274,9356+21])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                                expression (lib/set.ml[274,9356+27]..[274,9356+36])
                                  Pexp_apply
                                  expression (lib/set.ml[274,9356+27]..[274,9356+30])
                                    Pexp_ident "add" (lib/set.ml[274,9356+27]..[274,9356+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[274,9356+31]..[274,9356+33])
                                        Pexp_ident "v2" (lib/set.ml[274,9356+31]..[274,9356+33])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[274,9356+34]..[274,9356+36])
                                        Pexp_ident "s1" (lib/set.ml[274,9356+34]..[274,9356+36])
                                  ]
                                Some
                                  expression (lib/set.ml[274,9356+42]..[277,9501+15])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/set.ml[275,9404+18]..[275,9404+29])
                                          Ppat_tuple
                                          [
                                            pattern (lib/set.ml[275,9404+19]..[275,9404+21])
                                              Ppat_var "l2" (lib/set.ml[275,9404+19]..[275,9404+21])
                                            pattern (lib/set.ml[275,9404+23]..[275,9404+24])
                                              Ppat_any
                                            pattern (lib/set.ml[275,9404+26]..[275,9404+28])
                                              Ppat_var "r2" (lib/set.ml[275,9404+26]..[275,9404+28])
                                          ]
                                        expression (lib/set.ml[275,9404+32]..[275,9404+43])
                                          Pexp_apply
                                          expression (lib/set.ml[275,9404+32]..[275,9404+37])
                                            Pexp_ident "split" (lib/set.ml[275,9404+32]..[275,9404+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[275,9404+38]..[275,9404+40])
                                                Pexp_ident "v1" (lib/set.ml[275,9404+38]..[275,9404+40])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[275,9404+41]..[275,9404+43])
                                                Pexp_ident "s2" (lib/set.ml[275,9404+41]..[275,9404+43])
                                          ]
                                    ]
                                    expression (lib/set.ml[276,9451+14]..[276,9451+49])
                                      Pexp_apply
                                      expression (lib/set.ml[276,9451+14]..[276,9451+18])
                                        Pexp_ident "join" (lib/set.ml[276,9451+14]..[276,9451+18])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[276,9451+19]..[276,9451+32])
                                            Pexp_apply
                                            expression (lib/set.ml[276,9451+20]..[276,9451+25])
                                              Pexp_ident "union" (lib/set.ml[276,9451+20]..[276,9451+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[276,9451+26]..[276,9451+28])
                                                  Pexp_ident "l1" (lib/set.ml[276,9451+26]..[276,9451+28])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[276,9451+29]..[276,9451+31])
                                                  Pexp_ident "l2" (lib/set.ml[276,9451+29]..[276,9451+31])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[276,9451+33]..[276,9451+35])
                                            Pexp_ident "v1" (lib/set.ml[276,9451+33]..[276,9451+35])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[276,9451+36]..[276,9451+49])
                                            Pexp_apply
                                            expression (lib/set.ml[276,9451+37]..[276,9451+42])
                                              Pexp_ident "union" (lib/set.ml[276,9451+37]..[276,9451+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[276,9451+43]..[276,9451+45])
                                                  Pexp_ident "r1" (lib/set.ml[276,9451+43]..[276,9451+45])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[276,9451+46]..[276,9451+48])
                                                  Pexp_ident "r2" (lib/set.ml[276,9451+46]..[276,9451+48])
                                            ]
                                      ]
                              Some
                                expression (lib/set.ml[279,9532+12]..[282,9677+15])
                                  Pexp_ifthenelse
                                  expression (lib/set.ml[279,9532+15]..[279,9532+21])
                                    Pexp_apply
                                    expression (lib/set.ml[279,9532+18]..[279,9532+19])
                                      Pexp_ident "=" (lib/set.ml[279,9532+18]..[279,9532+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[279,9532+15]..[279,9532+17])
                                          Pexp_ident "h1" (lib/set.ml[279,9532+15]..[279,9532+17])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[279,9532+20]..[279,9532+21])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                                  expression (lib/set.ml[279,9532+27]..[279,9532+36])
                                    Pexp_apply
                                    expression (lib/set.ml[279,9532+27]..[279,9532+30])
                                      Pexp_ident "add" (lib/set.ml[279,9532+27]..[279,9532+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[279,9532+31]..[279,9532+33])
                                          Pexp_ident "v1" (lib/set.ml[279,9532+31]..[279,9532+33])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[279,9532+34]..[279,9532+36])
                                          Pexp_ident "s2" (lib/set.ml[279,9532+34]..[279,9532+36])
                                    ]
                                  Some
                                    expression (lib/set.ml[279,9532+42]..[282,9677+15])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/set.ml[280,9580+18]..[280,9580+29])
                                            Ppat_tuple
                                            [
                                              pattern (lib/set.ml[280,9580+19]..[280,9580+21])
                                                Ppat_var "l1" (lib/set.ml[280,9580+19]..[280,9580+21])
                                              pattern (lib/set.ml[280,9580+23]..[280,9580+24])
                                                Ppat_any
                                              pattern (lib/set.ml[280,9580+26]..[280,9580+28])
                                                Ppat_var "r1" (lib/set.ml[280,9580+26]..[280,9580+28])
                                            ]
                                          expression (lib/set.ml[280,9580+32]..[280,9580+43])
                                            Pexp_apply
                                            expression (lib/set.ml[280,9580+32]..[280,9580+37])
                                              Pexp_ident "split" (lib/set.ml[280,9580+32]..[280,9580+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[280,9580+38]..[280,9580+40])
                                                  Pexp_ident "v2" (lib/set.ml[280,9580+38]..[280,9580+40])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[280,9580+41]..[280,9580+43])
                                                  Pexp_ident "s1" (lib/set.ml[280,9580+41]..[280,9580+43])
                                            ]
                                      ]
                                      expression (lib/set.ml[281,9627+14]..[281,9627+49])
                                        Pexp_apply
                                        expression (lib/set.ml[281,9627+14]..[281,9627+18])
                                          Pexp_ident "join" (lib/set.ml[281,9627+14]..[281,9627+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[281,9627+19]..[281,9627+32])
                                              Pexp_apply
                                              expression (lib/set.ml[281,9627+20]..[281,9627+25])
                                                Pexp_ident "union" (lib/set.ml[281,9627+20]..[281,9627+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[281,9627+26]..[281,9627+28])
                                                    Pexp_ident "l1" (lib/set.ml[281,9627+26]..[281,9627+28])
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[281,9627+29]..[281,9627+31])
                                                    Pexp_ident "l2" (lib/set.ml[281,9627+29]..[281,9627+31])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[281,9627+33]..[281,9627+35])
                                              Pexp_ident "v2" (lib/set.ml[281,9627+33]..[281,9627+35])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[281,9627+36]..[281,9627+49])
                                              Pexp_apply
                                              expression (lib/set.ml[281,9627+37]..[281,9627+42])
                                                Pexp_ident "union" (lib/set.ml[281,9627+37]..[281,9627+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[281,9627+43]..[281,9627+45])
                                                    Pexp_ident "r1" (lib/set.ml[281,9627+43]..[281,9627+45])
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[281,9627+46]..[281,9627+48])
                                                    Pexp_ident "r2" (lib/set.ml[281,9627+46]..[281,9627+48])
                                              ]
                                        ]
                        ]
              ]
            structure_item (lib/set.ml[284,9694+4]..[293,9985+49])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[284,9694+12]..[284,9694+17])
                    Ppat_var "inter" (lib/set.ml[284,9694+12]..[284,9694+17])
                  expression (lib/set.ml[284,9694+18]..[293,9985+49]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[284,9694+18]..[284,9694+20])
                        Nolabel
                        None
                        pattern (lib/set.ml[284,9694+18]..[284,9694+20])
                          Ppat_var "s1" (lib/set.ml[284,9694+18]..[284,9694+20])
                      Pparam_val (lib/set.ml[284,9694+21]..[284,9694+23])
                        Nolabel
                        None
                        pattern (lib/set.ml[284,9694+21]..[284,9694+23])
                          Ppat_var "s2" (lib/set.ml[284,9694+21]..[284,9694+23])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[285,9720+6]..[293,9985+49])
                        Pexp_match
                        expression (lib/set.ml[285,9720+12]..[285,9720+20])
                          Pexp_tuple
                          [
                            expression (lib/set.ml[285,9720+13]..[285,9720+15])
                              Pexp_ident "s1" (lib/set.ml[285,9720+13]..[285,9720+15])
                            expression (lib/set.ml[285,9720+17]..[285,9720+19])
                              Pexp_ident "s2" (lib/set.ml[285,9720+17]..[285,9720+19])
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[286,9746+8]..[286,9746+18])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[286,9746+9]..[286,9746+14])
                                  Ppat_construct "Empty" (lib/set.ml[286,9746+9]..[286,9746+14])
                                  None
                                pattern (lib/set.ml[286,9746+16]..[286,9746+17])
                                  Ppat_any
                              ]
                            expression (lib/set.ml[286,9746+22]..[286,9746+27])
                              Pexp_construct "Empty" (lib/set.ml[286,9746+22]..[286,9746+27])
                              None
                          <case>
                            pattern (lib/set.ml[287,9774+8]..[287,9774+18])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[287,9774+9]..[287,9774+10])
                                  Ppat_any
                                pattern (lib/set.ml[287,9774+12]..[287,9774+17])
                                  Ppat_construct "Empty" (lib/set.ml[287,9774+12]..[287,9774+17])
                                  None
                              ]
                            expression (lib/set.ml[287,9774+22]..[287,9774+27])
                              Pexp_construct "Empty" (lib/set.ml[287,9774+22]..[287,9774+27])
                              None
                          <case>
                            pattern (lib/set.ml[288,9802+8]..[288,9802+36])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[288,9802+9]..[288,9802+31])
                                  Ppat_construct "Node" (lib/set.ml[288,9802+9]..[288,9802+13])
                                  Some
                                    []
                                    pattern (lib/set.ml[288,9802+13]..[288,9802+31])
                                      Ppat_record Closed
                                      [
                                        "l" (lib/set.ml[288,9802+14]..[288,9802+15])
                                          pattern (lib/set.ml[288,9802+16]..[288,9802+18])
                                            Ppat_var "l1" (lib/set.ml[288,9802+16]..[288,9802+18])
                                        "v" (lib/set.ml[288,9802+20]..[288,9802+21])
                                          pattern (lib/set.ml[288,9802+22]..[288,9802+24])
                                            Ppat_var "v1" (lib/set.ml[288,9802+22]..[288,9802+24])
                                        "r" (lib/set.ml[288,9802+26]..[288,9802+27])
                                          pattern (lib/set.ml[288,9802+28]..[288,9802+30])
                                            Ppat_var "r1" (lib/set.ml[288,9802+28]..[288,9802+30])
                                      ]
                                pattern (lib/set.ml[288,9802+33]..[288,9802+35])
                                  Ppat_var "t2" (lib/set.ml[288,9802+33]..[288,9802+35])
                              ]
                            expression (lib/set.ml[289,9842+10]..[293,9985+49])
                              Pexp_match
                              expression (lib/set.ml[289,9842+16]..[289,9842+27])
                                Pexp_apply
                                expression (lib/set.ml[289,9842+16]..[289,9842+21])
                                  Pexp_ident "split" (lib/set.ml[289,9842+16]..[289,9842+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[289,9842+22]..[289,9842+24])
                                      Pexp_ident "v1" (lib/set.ml[289,9842+22]..[289,9842+24])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[289,9842+25]..[289,9842+27])
                                      Pexp_ident "t2" (lib/set.ml[289,9842+25]..[289,9842+27])
                                ]
                              [
                                <case>
                                  pattern (lib/set.ml[290,9875+12]..[290,9875+27])
                                    Ppat_tuple
                                    [
                                      pattern (lib/set.ml[290,9875+13]..[290,9875+15])
                                        Ppat_var "l2" (lib/set.ml[290,9875+13]..[290,9875+15])
                                      pattern (lib/set.ml[290,9875+17]..[290,9875+22])
                                        Ppat_construct "false" (lib/set.ml[290,9875+17]..[290,9875+22])
                                        None
                                      pattern (lib/set.ml[290,9875+24]..[290,9875+26])
                                        Ppat_var "r2" (lib/set.ml[290,9875+24]..[290,9875+26])
                                    ]
                                  expression (lib/set.ml[291,9906+14]..[291,9906+48])
                                    Pexp_apply
                                    expression (lib/set.ml[291,9906+14]..[291,9906+20])
                                      Pexp_ident "concat" (lib/set.ml[291,9906+14]..[291,9906+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[291,9906+21]..[291,9906+34])
                                          Pexp_apply
                                          expression (lib/set.ml[291,9906+22]..[291,9906+27])
                                            Pexp_ident "inter" (lib/set.ml[291,9906+22]..[291,9906+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[291,9906+28]..[291,9906+30])
                                                Pexp_ident "l1" (lib/set.ml[291,9906+28]..[291,9906+30])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[291,9906+31]..[291,9906+33])
                                                Pexp_ident "l2" (lib/set.ml[291,9906+31]..[291,9906+33])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[291,9906+35]..[291,9906+48])
                                          Pexp_apply
                                          expression (lib/set.ml[291,9906+36]..[291,9906+41])
                                            Pexp_ident "inter" (lib/set.ml[291,9906+36]..[291,9906+41])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[291,9906+42]..[291,9906+44])
                                                Pexp_ident "r1" (lib/set.ml[291,9906+42]..[291,9906+44])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[291,9906+45]..[291,9906+47])
                                                Pexp_ident "r2" (lib/set.ml[291,9906+45]..[291,9906+47])
                                          ]
                                    ]
                                <case>
                                  pattern (lib/set.ml[292,9955+12]..[292,9955+26])
                                    Ppat_tuple
                                    [
                                      pattern (lib/set.ml[292,9955+13]..[292,9955+15])
                                        Ppat_var "l2" (lib/set.ml[292,9955+13]..[292,9955+15])
                                      pattern (lib/set.ml[292,9955+17]..[292,9955+21])
                                        Ppat_construct "true" (lib/set.ml[292,9955+17]..[292,9955+21])
                                        None
                                      pattern (lib/set.ml[292,9955+23]..[292,9955+25])
                                        Ppat_var "r2" (lib/set.ml[292,9955+23]..[292,9955+25])
                                    ]
                                  expression (lib/set.ml[293,9985+14]..[293,9985+49])
                                    Pexp_apply
                                    expression (lib/set.ml[293,9985+14]..[293,9985+18])
                                      Pexp_ident "join" (lib/set.ml[293,9985+14]..[293,9985+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[293,9985+19]..[293,9985+32])
                                          Pexp_apply
                                          expression (lib/set.ml[293,9985+20]..[293,9985+25])
                                            Pexp_ident "inter" (lib/set.ml[293,9985+20]..[293,9985+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[293,9985+26]..[293,9985+28])
                                                Pexp_ident "l1" (lib/set.ml[293,9985+26]..[293,9985+28])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[293,9985+29]..[293,9985+31])
                                                Pexp_ident "l2" (lib/set.ml[293,9985+29]..[293,9985+31])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[293,9985+33]..[293,9985+35])
                                          Pexp_ident "v1" (lib/set.ml[293,9985+33]..[293,9985+35])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[293,9985+36]..[293,9985+49])
                                          Pexp_apply
                                          expression (lib/set.ml[293,9985+37]..[293,9985+42])
                                            Pexp_ident "inter" (lib/set.ml[293,9985+37]..[293,9985+42])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[293,9985+43]..[293,9985+45])
                                                Pexp_ident "r1" (lib/set.ml[293,9985+43]..[293,9985+45])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[293,9985+46]..[293,9985+48])
                                                Pexp_ident "r2" (lib/set.ml[293,9985+46]..[293,9985+48])
                                          ]
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[299,10203+4]..[301,10238+35])
              Pstr_type Rec
              [
                type_declaration "split_bis" (lib/set.ml[299,10203+9]..[299,10203+18]) (lib/set.ml[299,10203+4]..[301,10238+35])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (lib/set.ml[300,10224+6]..[300,10224+13])
                          "Found" (lib/set.ml[300,10224+8]..[300,10224+13])
                          []
                          None
                        (lib/set.ml[301,10238+6]..[301,10238+35])
                          "NotFound" (lib/set.ml[301,10238+8]..[301,10238+16])
                          [
                            core_type (lib/set.ml[301,10238+20]..[301,10238+21])
                              Ptyp_constr "t" (lib/set.ml[301,10238+20]..[301,10238+21])
                              []
                            core_type (lib/set.ml[301,10238+25]..[301,10238+34])
                              Ptyp_arrow
                              Nolabel
                              core_type (lib/set.ml[301,10238+25]..[301,10238+29])
                                Ptyp_constr "unit" (lib/set.ml[301,10238+25]..[301,10238+29])
                                []
                              core_type (lib/set.ml[301,10238+33]..[301,10238+34])
                                Ptyp_constr "t" (lib/set.ml[301,10238+33]..[301,10238+34])
                                []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lib/set.ml[303,10275+4]..[316,10723+61])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[303,10275+12]..[303,10275+21])
                    Ppat_var "split_bis" (lib/set.ml[303,10275+12]..[303,10275+21])
                  expression (lib/set.ml[303,10275+22]..[316,10723+61]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[303,10275+22]..[303,10275+23])
                        Nolabel
                        None
                        pattern (lib/set.ml[303,10275+22]..[303,10275+23])
                          Ppat_var "x" (lib/set.ml[303,10275+22]..[303,10275+23])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[303,10275+26]..[316,10723+61])
                      [
                        <case>
                          pattern (lib/set.ml[304,10310+8]..[304,10310+13])
                            Ppat_construct "Empty" (lib/set.ml[304,10310+8]..[304,10310+13])
                            None
                          expression (lib/set.ml[305,10327+10]..[305,10327+45])
                            Pexp_construct "NotFound" (lib/set.ml[305,10327+10]..[305,10327+18])
                            Some
                              expression (lib/set.ml[305,10327+19]..[305,10327+45])
                                Pexp_tuple
                                [
                                  expression (lib/set.ml[305,10327+20]..[305,10327+25])
                                    Pexp_construct "Empty" (lib/set.ml[305,10327+20]..[305,10327+25])
                                    None
                                  expression (lib/set.ml[305,10327+27]..[305,10327+44])
                                    Pexp_function
                                    [
                                      Pparam_val (lib/set.ml[305,10327+32]..[305,10327+34])
                                        Nolabel
                                        None
                                        pattern (lib/set.ml[305,10327+32]..[305,10327+34])
                                          Ppat_construct "()" (lib/set.ml[305,10327+32]..[305,10327+34])
                                          None
                                    ]
                                    None
                                    Pfunction_body
                                      expression (lib/set.ml[305,10327+38]..[305,10327+43])
                                        Pexp_construct "Empty" (lib/set.ml[305,10327+38]..[305,10327+43])
                                        None
                                ]
                        <case>
                          pattern (lib/set.ml[306,10373+8]..[306,10373+24])
                            Ppat_construct "Node" (lib/set.ml[306,10373+8]..[306,10373+12])
                            Some
                              []
                              pattern (lib/set.ml[306,10373+12]..[306,10373+24])
                                Ppat_record Open
                                [
                                  "l" (lib/set.ml[306,10373+13]..[306,10373+14]) ghost
                                    pattern (lib/set.ml[306,10373+13]..[306,10373+14])
                                      Ppat_var "l" (lib/set.ml[306,10373+13]..[306,10373+14])
                                  "v" (lib/set.ml[306,10373+16]..[306,10373+17]) ghost
                                    pattern (lib/set.ml[306,10373+16]..[306,10373+17])
                                      Ppat_var "v" (lib/set.ml[306,10373+16]..[306,10373+17])
                                  "r" (lib/set.ml[306,10373+19]..[306,10373+20]) ghost
                                    pattern (lib/set.ml[306,10373+19]..[306,10373+20])
                                      Ppat_var "r" (lib/set.ml[306,10373+19]..[306,10373+20])
                                ]
                          expression (lib/set.ml[307,10401+10]..[316,10723+61])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[307,10401+14]..[307,10401+15])
                                  Ppat_var "c" (lib/set.ml[307,10401+14]..[307,10401+15])
                                expression (lib/set.ml[307,10401+18]..[307,10401+33])
                                  Pexp_apply
                                  expression (lib/set.ml[307,10401+18]..[307,10401+29])
                                    Pexp_ident "Ord.compare" (lib/set.ml[307,10401+18]..[307,10401+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[307,10401+30]..[307,10401+31])
                                        Pexp_ident "x" (lib/set.ml[307,10401+30]..[307,10401+31])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[307,10401+32]..[307,10401+33])
                                        Pexp_ident "v" (lib/set.ml[307,10401+32]..[307,10401+33])
                                  ]
                            ]
                            expression (lib/set.ml[308,10438+10]..[316,10723+61])
                              Pexp_ifthenelse
                              expression (lib/set.ml[308,10438+13]..[308,10438+18])
                                Pexp_apply
                                expression (lib/set.ml[308,10438+15]..[308,10438+16])
                                  Pexp_ident "=" (lib/set.ml[308,10438+15]..[308,10438+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[308,10438+13]..[308,10438+14])
                                      Pexp_ident "c" (lib/set.ml[308,10438+13]..[308,10438+14])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[308,10438+17]..[308,10438+18])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (lib/set.ml[308,10438+24]..[308,10438+29])
                                Pexp_construct "Found" (lib/set.ml[308,10438+24]..[308,10438+29])
                                None
                              Some
                                expression (lib/set.ml[309,10468+15]..[316,10723+61])
                                  Pexp_ifthenelse
                                  expression (lib/set.ml[309,10468+18]..[309,10468+23])
                                    Pexp_apply
                                    expression (lib/set.ml[309,10468+20]..[309,10468+21])
                                      Pexp_ident "<" (lib/set.ml[309,10468+20]..[309,10468+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[309,10468+18]..[309,10468+19])
                                          Pexp_ident "c" (lib/set.ml[309,10468+18]..[309,10468+19])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[309,10468+22]..[309,10468+23])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                                  expression (lib/set.ml[310,10497+12]..[312,10563+78])
                                    Pexp_match
                                    expression (lib/set.ml[310,10497+18]..[310,10497+31])
                                      Pexp_apply
                                      expression (lib/set.ml[310,10497+18]..[310,10497+27])
                                        Pexp_ident "split_bis" (lib/set.ml[310,10497+18]..[310,10497+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[310,10497+28]..[310,10497+29])
                                            Pexp_ident "x" (lib/set.ml[310,10497+28]..[310,10497+29])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[310,10497+30]..[310,10497+31])
                                            Pexp_ident "l" (lib/set.ml[310,10497+30]..[310,10497+31])
                                      ]
                                    [
                                      <case>
                                        pattern (lib/set.ml[311,10534+14]..[311,10534+19])
                                          Ppat_construct "Found" (lib/set.ml[311,10534+14]..[311,10534+19])
                                          None
                                        expression (lib/set.ml[311,10534+23]..[311,10534+28])
                                          Pexp_construct "Found" (lib/set.ml[311,10534+23]..[311,10534+28])
                                          None
                                      <case>
                                        pattern (lib/set.ml[312,10563+14]..[312,10563+31])
                                          Ppat_construct "NotFound" (lib/set.ml[312,10563+14]..[312,10563+22])
                                          Some
                                            []
                                            pattern (lib/set.ml[312,10563+23]..[312,10563+31])
                                              Ppat_tuple
                                              [
                                                pattern (lib/set.ml[312,10563+24]..[312,10563+26])
                                                  Ppat_var "ll" (lib/set.ml[312,10563+24]..[312,10563+26])
                                                pattern (lib/set.ml[312,10563+28]..[312,10563+30])
                                                  Ppat_var "rl" (lib/set.ml[312,10563+28]..[312,10563+30])
                                              ]
                                        expression (lib/set.ml[312,10563+35]..[312,10563+78])
                                          Pexp_construct "NotFound" (lib/set.ml[312,10563+35]..[312,10563+43])
                                          Some
                                            expression (lib/set.ml[312,10563+44]..[312,10563+78])
                                              Pexp_tuple
                                              [
                                                expression (lib/set.ml[312,10563+45]..[312,10563+47])
                                                  Pexp_ident "ll" (lib/set.ml[312,10563+45]..[312,10563+47])
                                                expression (lib/set.ml[312,10563+49]..[312,10563+77])
                                                  Pexp_function
                                                  [
                                                    Pparam_val (lib/set.ml[312,10563+54]..[312,10563+56])
                                                      Nolabel
                                                      None
                                                      pattern (lib/set.ml[312,10563+54]..[312,10563+56])
                                                        Ppat_construct "()" (lib/set.ml[312,10563+54]..[312,10563+56])
                                                        None
                                                  ]
                                                  None
                                                  Pfunction_body
                                                    expression (lib/set.ml[312,10563+60]..[312,10563+76])
                                                      Pexp_apply
                                                      expression (lib/set.ml[312,10563+60]..[312,10563+64])
                                                        Pexp_ident "join" (lib/set.ml[312,10563+60]..[312,10563+64])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/set.ml[312,10563+65]..[312,10563+72])
                                                            Pexp_apply
                                                            expression (lib/set.ml[312,10563+66]..[312,10563+68])
                                                              Pexp_ident "rl" (lib/set.ml[312,10563+66]..[312,10563+68])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/set.ml[312,10563+69]..[312,10563+71])
                                                                  Pexp_construct "()" (lib/set.ml[312,10563+69]..[312,10563+71])
                                                                  None
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/set.ml[312,10563+73]..[312,10563+74])
                                                            Pexp_ident "v" (lib/set.ml[312,10563+73]..[312,10563+74])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/set.ml[312,10563+75]..[312,10563+76])
                                                            Pexp_ident "r" (lib/set.ml[312,10563+75]..[312,10563+76])
                                                      ]
                                              ]
                                    ]
                                  Some
                                    expression (lib/set.ml[314,10657+12]..[316,10723+61])
                                      Pexp_match
                                      expression (lib/set.ml[314,10657+18]..[314,10657+31])
                                        Pexp_apply
                                        expression (lib/set.ml[314,10657+18]..[314,10657+27])
                                          Pexp_ident "split_bis" (lib/set.ml[314,10657+18]..[314,10657+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[314,10657+28]..[314,10657+29])
                                              Pexp_ident "x" (lib/set.ml[314,10657+28]..[314,10657+29])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[314,10657+30]..[314,10657+31])
                                              Pexp_ident "r" (lib/set.ml[314,10657+30]..[314,10657+31])
                                        ]
                                      [
                                        <case>
                                          pattern (lib/set.ml[315,10694+14]..[315,10694+19])
                                            Ppat_construct "Found" (lib/set.ml[315,10694+14]..[315,10694+19])
                                            None
                                          expression (lib/set.ml[315,10694+23]..[315,10694+28])
                                            Pexp_construct "Found" (lib/set.ml[315,10694+23]..[315,10694+28])
                                            None
                                        <case>
                                          pattern (lib/set.ml[316,10723+14]..[316,10723+31])
                                            Ppat_construct "NotFound" (lib/set.ml[316,10723+14]..[316,10723+22])
                                            Some
                                              []
                                              pattern (lib/set.ml[316,10723+23]..[316,10723+31])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/set.ml[316,10723+24]..[316,10723+26])
                                                    Ppat_var "lr" (lib/set.ml[316,10723+24]..[316,10723+26])
                                                  pattern (lib/set.ml[316,10723+28]..[316,10723+30])
                                                    Ppat_var "rr" (lib/set.ml[316,10723+28]..[316,10723+30])
                                                ]
                                          expression (lib/set.ml[316,10723+35]..[316,10723+61])
                                            Pexp_construct "NotFound" (lib/set.ml[316,10723+35]..[316,10723+43])
                                            Some
                                              expression (lib/set.ml[316,10723+44]..[316,10723+61])
                                                Pexp_tuple
                                                [
                                                  expression (lib/set.ml[316,10723+45]..[316,10723+56])
                                                    Pexp_apply
                                                    expression (lib/set.ml[316,10723+45]..[316,10723+49])
                                                      Pexp_ident "join" (lib/set.ml[316,10723+45]..[316,10723+49])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/set.ml[316,10723+50]..[316,10723+51])
                                                          Pexp_ident "l" (lib/set.ml[316,10723+50]..[316,10723+51])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/set.ml[316,10723+52]..[316,10723+53])
                                                          Pexp_ident "v" (lib/set.ml[316,10723+52]..[316,10723+53])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/set.ml[316,10723+54]..[316,10723+56])
                                                          Pexp_ident "lr" (lib/set.ml[316,10723+54]..[316,10723+56])
                                                    ]
                                                  expression (lib/set.ml[316,10723+58]..[316,10723+60])
                                                    Pexp_ident "rr" (lib/set.ml[316,10723+58]..[316,10723+60])
                                                ]
                                      ]
                      ]
              ]
            structure_item (lib/set.ml[318,10786+4]..[325,11068+28])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[318,10786+12]..[318,10786+20])
                    Ppat_var "disjoint" (lib/set.ml[318,10786+12]..[318,10786+20])
                  expression (lib/set.ml[318,10786+21]..[325,11068+28]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[318,10786+21]..[318,10786+23])
                        Nolabel
                        None
                        pattern (lib/set.ml[318,10786+21]..[318,10786+23])
                          Ppat_var "s1" (lib/set.ml[318,10786+21]..[318,10786+23])
                      Pparam_val (lib/set.ml[318,10786+24]..[318,10786+26])
                        Nolabel
                        None
                        pattern (lib/set.ml[318,10786+24]..[318,10786+26])
                          Ppat_var "s2" (lib/set.ml[318,10786+24]..[318,10786+26])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[319,10815+6]..[325,11068+28])
                        Pexp_match
                        expression (lib/set.ml[319,10815+12]..[319,10815+20])
                          Pexp_tuple
                          [
                            expression (lib/set.ml[319,10815+13]..[319,10815+15])
                              Pexp_ident "s1" (lib/set.ml[319,10815+13]..[319,10815+15])
                            expression (lib/set.ml[319,10815+17]..[319,10815+19])
                              Pexp_ident "s2" (lib/set.ml[319,10815+17]..[319,10815+19])
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[320,10841+8]..[320,10841+31])
                              Ppat_or
                              pattern (lib/set.ml[320,10841+8]..[320,10841+18])
                                Ppat_tuple
                                [
                                  pattern (lib/set.ml[320,10841+9]..[320,10841+14])
                                    Ppat_construct "Empty" (lib/set.ml[320,10841+9]..[320,10841+14])
                                    None
                                  pattern (lib/set.ml[320,10841+16]..[320,10841+17])
                                    Ppat_any
                                ]
                              pattern (lib/set.ml[320,10841+21]..[320,10841+31])
                                Ppat_tuple
                                [
                                  pattern (lib/set.ml[320,10841+22]..[320,10841+23])
                                    Ppat_any
                                  pattern (lib/set.ml[320,10841+25]..[320,10841+30])
                                    Ppat_construct "Empty" (lib/set.ml[320,10841+25]..[320,10841+30])
                                    None
                                ]
                            expression (lib/set.ml[320,10841+35]..[320,10841+39])
                              Pexp_construct "true" (lib/set.ml[320,10841+35]..[320,10841+39])
                              None
                          <case>
                            pattern (lib/set.ml[321,10881+8]..[321,10881+36])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[321,10881+9]..[321,10881+31])
                                  Ppat_construct "Node" (lib/set.ml[321,10881+9]..[321,10881+13])
                                  Some
                                    []
                                    pattern (lib/set.ml[321,10881+13]..[321,10881+31])
                                      Ppat_record Closed
                                      [
                                        "l" (lib/set.ml[321,10881+14]..[321,10881+15])
                                          pattern (lib/set.ml[321,10881+16]..[321,10881+18])
                                            Ppat_var "l1" (lib/set.ml[321,10881+16]..[321,10881+18])
                                        "v" (lib/set.ml[321,10881+20]..[321,10881+21])
                                          pattern (lib/set.ml[321,10881+22]..[321,10881+24])
                                            Ppat_var "v1" (lib/set.ml[321,10881+22]..[321,10881+24])
                                        "r" (lib/set.ml[321,10881+26]..[321,10881+27])
                                          pattern (lib/set.ml[321,10881+28]..[321,10881+30])
                                            Ppat_var "r1" (lib/set.ml[321,10881+28]..[321,10881+30])
                                      ]
                                pattern (lib/set.ml[321,10881+33]..[321,10881+35])
                                  Ppat_var "t2" (lib/set.ml[321,10881+33]..[321,10881+35])
                              ]
                            expression (lib/set.ml[322,10921+10]..[325,11068+28])
                              Pexp_ifthenelse
                              expression (lib/set.ml[322,10921+13]..[322,10921+21])
                                Pexp_apply
                                expression (lib/set.ml[322,10921+16]..[322,10921+18])
                                  Pexp_ident "==" (lib/set.ml[322,10921+16]..[322,10921+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[322,10921+13]..[322,10921+15])
                                      Pexp_ident "s1" (lib/set.ml[322,10921+13]..[322,10921+15])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[322,10921+19]..[322,10921+21])
                                      Pexp_ident "s2" (lib/set.ml[322,10921+19]..[322,10921+21])
                                ]
                              expression (lib/set.ml[322,10921+27]..[322,10921+32])
                                Pexp_construct "false" (lib/set.ml[322,10921+27]..[322,10921+32])
                                None
                              Some
                                expression (lib/set.ml[323,10954+15]..[325,11068+28])
                                  Pexp_match
                                  expression (lib/set.ml[323,10954+21]..[323,10954+36])
                                    Pexp_apply
                                    expression (lib/set.ml[323,10954+21]..[323,10954+30])
                                      Pexp_ident "split_bis" (lib/set.ml[323,10954+21]..[323,10954+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[323,10954+31]..[323,10954+33])
                                          Pexp_ident "v1" (lib/set.ml[323,10954+31]..[323,10954+33])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[323,10954+34]..[323,10954+36])
                                          Pexp_ident "t2" (lib/set.ml[323,10954+34]..[323,10954+36])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/set.ml[324,10996+14]..[324,10996+30])
                                        Ppat_construct "NotFound" (lib/set.ml[324,10996+14]..[324,10996+22])
                                        Some
                                          []
                                          pattern (lib/set.ml[324,10996+22]..[324,10996+30])
                                            Ppat_tuple
                                            [
                                              pattern (lib/set.ml[324,10996+23]..[324,10996+25])
                                                Ppat_var "l2" (lib/set.ml[324,10996+23]..[324,10996+25])
                                              pattern (lib/set.ml[324,10996+27]..[324,10996+29])
                                                Ppat_var "r2" (lib/set.ml[324,10996+27]..[324,10996+29])
                                            ]
                                      expression (lib/set.ml[324,10996+34]..[324,10996+71])
                                        Pexp_apply
                                        expression (lib/set.ml[324,10996+49]..[324,10996+51])
                                          Pexp_ident "&&" (lib/set.ml[324,10996+49]..[324,10996+51])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[324,10996+34]..[324,10996+48])
                                              Pexp_apply
                                              expression (lib/set.ml[324,10996+34]..[324,10996+42])
                                                Pexp_ident "disjoint" (lib/set.ml[324,10996+34]..[324,10996+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[324,10996+43]..[324,10996+45])
                                                    Pexp_ident "l1" (lib/set.ml[324,10996+43]..[324,10996+45])
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[324,10996+46]..[324,10996+48])
                                                    Pexp_ident "l2" (lib/set.ml[324,10996+46]..[324,10996+48])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[324,10996+52]..[324,10996+71])
                                              Pexp_apply
                                              expression (lib/set.ml[324,10996+52]..[324,10996+60])
                                                Pexp_ident "disjoint" (lib/set.ml[324,10996+52]..[324,10996+60])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[324,10996+61]..[324,10996+63])
                                                    Pexp_ident "r1" (lib/set.ml[324,10996+61]..[324,10996+63])
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[324,10996+64]..[324,10996+71])
                                                    Pexp_apply
                                                    expression (lib/set.ml[324,10996+65]..[324,10996+67])
                                                      Pexp_ident "r2" (lib/set.ml[324,10996+65]..[324,10996+67])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/set.ml[324,10996+68]..[324,10996+70])
                                                          Pexp_construct "()" (lib/set.ml[324,10996+68]..[324,10996+70])
                                                          None
                                                    ]
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/set.ml[325,11068+14]..[325,11068+19])
                                        Ppat_construct "Found" (lib/set.ml[325,11068+14]..[325,11068+19])
                                        None
                                      expression (lib/set.ml[325,11068+23]..[325,11068+28])
                                        Pexp_construct "false" (lib/set.ml[325,11068+23]..[325,11068+28])
                                        None
                                  ]
                        ]
              ]
            structure_item (lib/set.ml[327,11098+4]..[336,11385+46])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[327,11098+12]..[327,11098+16])
                    Ppat_var "diff" (lib/set.ml[327,11098+12]..[327,11098+16])
                  expression (lib/set.ml[327,11098+17]..[336,11385+46]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[327,11098+17]..[327,11098+19])
                        Nolabel
                        None
                        pattern (lib/set.ml[327,11098+17]..[327,11098+19])
                          Ppat_var "s1" (lib/set.ml[327,11098+17]..[327,11098+19])
                      Pparam_val (lib/set.ml[327,11098+20]..[327,11098+22])
                        Nolabel
                        None
                        pattern (lib/set.ml[327,11098+20]..[327,11098+22])
                          Ppat_var "s2" (lib/set.ml[327,11098+20]..[327,11098+22])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[328,11123+6]..[336,11385+46])
                        Pexp_match
                        expression (lib/set.ml[328,11123+12]..[328,11123+20])
                          Pexp_tuple
                          [
                            expression (lib/set.ml[328,11123+13]..[328,11123+15])
                              Pexp_ident "s1" (lib/set.ml[328,11123+13]..[328,11123+15])
                            expression (lib/set.ml[328,11123+17]..[328,11123+19])
                              Pexp_ident "s2" (lib/set.ml[328,11123+17]..[328,11123+19])
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[329,11149+8]..[329,11149+18])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[329,11149+9]..[329,11149+14])
                                  Ppat_construct "Empty" (lib/set.ml[329,11149+9]..[329,11149+14])
                                  None
                                pattern (lib/set.ml[329,11149+16]..[329,11149+17])
                                  Ppat_any
                              ]
                            expression (lib/set.ml[329,11149+22]..[329,11149+27])
                              Pexp_construct "Empty" (lib/set.ml[329,11149+22]..[329,11149+27])
                              None
                          <case>
                            pattern (lib/set.ml[330,11177+8]..[330,11177+19])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[330,11177+9]..[330,11177+11])
                                  Ppat_var "t1" (lib/set.ml[330,11177+9]..[330,11177+11])
                                pattern (lib/set.ml[330,11177+13]..[330,11177+18])
                                  Ppat_construct "Empty" (lib/set.ml[330,11177+13]..[330,11177+18])
                                  None
                              ]
                            expression (lib/set.ml[330,11177+23]..[330,11177+25])
                              Pexp_ident "t1" (lib/set.ml[330,11177+23]..[330,11177+25])
                          <case>
                            pattern (lib/set.ml[331,11203+8]..[331,11203+36])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[331,11203+9]..[331,11203+31])
                                  Ppat_construct "Node" (lib/set.ml[331,11203+9]..[331,11203+13])
                                  Some
                                    []
                                    pattern (lib/set.ml[331,11203+13]..[331,11203+31])
                                      Ppat_record Closed
                                      [
                                        "l" (lib/set.ml[331,11203+14]..[331,11203+15])
                                          pattern (lib/set.ml[331,11203+16]..[331,11203+18])
                                            Ppat_var "l1" (lib/set.ml[331,11203+16]..[331,11203+18])
                                        "v" (lib/set.ml[331,11203+20]..[331,11203+21])
                                          pattern (lib/set.ml[331,11203+22]..[331,11203+24])
                                            Ppat_var "v1" (lib/set.ml[331,11203+22]..[331,11203+24])
                                        "r" (lib/set.ml[331,11203+26]..[331,11203+27])
                                          pattern (lib/set.ml[331,11203+28]..[331,11203+30])
                                            Ppat_var "r1" (lib/set.ml[331,11203+28]..[331,11203+30])
                                      ]
                                pattern (lib/set.ml[331,11203+33]..[331,11203+35])
                                  Ppat_var "t2" (lib/set.ml[331,11203+33]..[331,11203+35])
                              ]
                            expression (lib/set.ml[332,11243+10]..[336,11385+46])
                              Pexp_match
                              expression (lib/set.ml[332,11243+16]..[332,11243+27])
                                Pexp_apply
                                expression (lib/set.ml[332,11243+16]..[332,11243+21])
                                  Pexp_ident "split" (lib/set.ml[332,11243+16]..[332,11243+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[332,11243+22]..[332,11243+24])
                                      Pexp_ident "v1" (lib/set.ml[332,11243+22]..[332,11243+24])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[332,11243+25]..[332,11243+27])
                                      Pexp_ident "t2" (lib/set.ml[332,11243+25]..[332,11243+27])
                                ]
                              [
                                <case>
                                  pattern (lib/set.ml[333,11276+12]..[333,11276+27])
                                    Ppat_tuple
                                    [
                                      pattern (lib/set.ml[333,11276+13]..[333,11276+15])
                                        Ppat_var "l2" (lib/set.ml[333,11276+13]..[333,11276+15])
                                      pattern (lib/set.ml[333,11276+17]..[333,11276+22])
                                        Ppat_construct "false" (lib/set.ml[333,11276+17]..[333,11276+22])
                                        None
                                      pattern (lib/set.ml[333,11276+24]..[333,11276+26])
                                        Ppat_var "r2" (lib/set.ml[333,11276+24]..[333,11276+26])
                                    ]
                                  expression (lib/set.ml[334,11307+14]..[334,11307+47])
                                    Pexp_apply
                                    expression (lib/set.ml[334,11307+14]..[334,11307+18])
                                      Pexp_ident "join" (lib/set.ml[334,11307+14]..[334,11307+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[334,11307+19]..[334,11307+31])
                                          Pexp_apply
                                          expression (lib/set.ml[334,11307+20]..[334,11307+24])
                                            Pexp_ident "diff" (lib/set.ml[334,11307+20]..[334,11307+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[334,11307+25]..[334,11307+27])
                                                Pexp_ident "l1" (lib/set.ml[334,11307+25]..[334,11307+27])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[334,11307+28]..[334,11307+30])
                                                Pexp_ident "l2" (lib/set.ml[334,11307+28]..[334,11307+30])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[334,11307+32]..[334,11307+34])
                                          Pexp_ident "v1" (lib/set.ml[334,11307+32]..[334,11307+34])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[334,11307+35]..[334,11307+47])
                                          Pexp_apply
                                          expression (lib/set.ml[334,11307+36]..[334,11307+40])
                                            Pexp_ident "diff" (lib/set.ml[334,11307+36]..[334,11307+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[334,11307+41]..[334,11307+43])
                                                Pexp_ident "r1" (lib/set.ml[334,11307+41]..[334,11307+43])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[334,11307+44]..[334,11307+46])
                                                Pexp_ident "r2" (lib/set.ml[334,11307+44]..[334,11307+46])
                                          ]
                                    ]
                                <case>
                                  pattern (lib/set.ml[335,11355+12]..[335,11355+26])
                                    Ppat_tuple
                                    [
                                      pattern (lib/set.ml[335,11355+13]..[335,11355+15])
                                        Ppat_var "l2" (lib/set.ml[335,11355+13]..[335,11355+15])
                                      pattern (lib/set.ml[335,11355+17]..[335,11355+21])
                                        Ppat_construct "true" (lib/set.ml[335,11355+17]..[335,11355+21])
                                        None
                                      pattern (lib/set.ml[335,11355+23]..[335,11355+25])
                                        Ppat_var "r2" (lib/set.ml[335,11355+23]..[335,11355+25])
                                    ]
                                  expression (lib/set.ml[336,11385+14]..[336,11385+46])
                                    Pexp_apply
                                    expression (lib/set.ml[336,11385+14]..[336,11385+20])
                                      Pexp_ident "concat" (lib/set.ml[336,11385+14]..[336,11385+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[336,11385+21]..[336,11385+33])
                                          Pexp_apply
                                          expression (lib/set.ml[336,11385+22]..[336,11385+26])
                                            Pexp_ident "diff" (lib/set.ml[336,11385+22]..[336,11385+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[336,11385+27]..[336,11385+29])
                                                Pexp_ident "l1" (lib/set.ml[336,11385+27]..[336,11385+29])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[336,11385+30]..[336,11385+32])
                                                Pexp_ident "l2" (lib/set.ml[336,11385+30]..[336,11385+32])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[336,11385+34]..[336,11385+46])
                                          Pexp_apply
                                          expression (lib/set.ml[336,11385+35]..[336,11385+39])
                                            Pexp_ident "diff" (lib/set.ml[336,11385+35]..[336,11385+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[336,11385+40]..[336,11385+42])
                                                Pexp_ident "r1" (lib/set.ml[336,11385+40]..[336,11385+42])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[336,11385+43]..[336,11385+45])
                                                Pexp_ident "r2" (lib/set.ml[336,11385+43]..[336,11385+45])
                                          ]
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[338,11433+4]..[338,11433+58])
              Pstr_type Rec
              [
                type_declaration "enumeration" (lib/set.ml[338,11433+9]..[338,11433+20]) (lib/set.ml[338,11433+4]..[338,11433+58])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (lib/set.ml[338,11433+23]..[338,11433+26])
                          "End" (lib/set.ml[338,11433+23]..[338,11433+26])
                          []
                          None
                        (lib/set.ml[338,11433+27]..[338,11433+58])
                          "More" (lib/set.ml[338,11433+29]..[338,11433+33])
                          [
                            core_type (lib/set.ml[338,11433+37]..[338,11433+40])
                              Ptyp_constr "elt" (lib/set.ml[338,11433+37]..[338,11433+40])
                              []
                            core_type (lib/set.ml[338,11433+43]..[338,11433+44])
                              Ptyp_constr "t" (lib/set.ml[338,11433+43]..[338,11433+44])
                              []
                            core_type (lib/set.ml[338,11433+47]..[338,11433+58])
                              Ptyp_constr "enumeration" (lib/set.ml[338,11433+47]..[338,11433+58])
                              []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lib/set.ml[340,11493+4]..[343,11559+52])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[340,11493+12]..[340,11493+21])
                    Ppat_var "cons_enum" (lib/set.ml[340,11493+12]..[340,11493+21])
                  expression (lib/set.ml[340,11493+22]..[343,11559+52]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[340,11493+22]..[340,11493+23])
                        Nolabel
                        None
                        pattern (lib/set.ml[340,11493+22]..[340,11493+23])
                          Ppat_var "s" (lib/set.ml[340,11493+22]..[340,11493+23])
                      Pparam_val (lib/set.ml[340,11493+24]..[340,11493+25])
                        Nolabel
                        None
                        pattern (lib/set.ml[340,11493+24]..[340,11493+25])
                          Ppat_var "e" (lib/set.ml[340,11493+24]..[340,11493+25])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[341,11521+6]..[343,11559+52])
                        Pexp_match
                        expression (lib/set.ml[341,11521+12]..[341,11521+13])
                          Pexp_ident "s" (lib/set.ml[341,11521+12]..[341,11521+13])
                        [
                          <case>
                            pattern (lib/set.ml[342,11540+8]..[342,11540+13])
                              Ppat_construct "Empty" (lib/set.ml[342,11540+8]..[342,11540+13])
                              None
                            expression (lib/set.ml[342,11540+17]..[342,11540+18])
                              Pexp_ident "e" (lib/set.ml[342,11540+17]..[342,11540+18])
                          <case>
                            pattern (lib/set.ml[343,11559+8]..[343,11559+21])
                              Ppat_construct "Node" (lib/set.ml[343,11559+8]..[343,11559+12])
                              Some
                                []
                                pattern (lib/set.ml[343,11559+12]..[343,11559+21])
                                  Ppat_record Closed
                                  [
                                    "l" (lib/set.ml[343,11559+13]..[343,11559+14]) ghost
                                      pattern (lib/set.ml[343,11559+13]..[343,11559+14])
                                        Ppat_var "l" (lib/set.ml[343,11559+13]..[343,11559+14])
                                    "v" (lib/set.ml[343,11559+16]..[343,11559+17]) ghost
                                      pattern (lib/set.ml[343,11559+16]..[343,11559+17])
                                        Ppat_var "v" (lib/set.ml[343,11559+16]..[343,11559+17])
                                    "r" (lib/set.ml[343,11559+19]..[343,11559+20]) ghost
                                      pattern (lib/set.ml[343,11559+19]..[343,11559+20])
                                        Ppat_var "r" (lib/set.ml[343,11559+19]..[343,11559+20])
                                  ]
                            expression (lib/set.ml[343,11559+25]..[343,11559+52])
                              Pexp_apply
                              expression (lib/set.ml[343,11559+25]..[343,11559+34])
                                Pexp_ident "cons_enum" (lib/set.ml[343,11559+25]..[343,11559+34])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[343,11559+35]..[343,11559+36])
                                    Pexp_ident "l" (lib/set.ml[343,11559+35]..[343,11559+36])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[343,11559+37]..[343,11559+52])
                                    Pexp_construct "More" (lib/set.ml[343,11559+38]..[343,11559+42])
                                    Some
                                      expression (lib/set.ml[343,11559+42]..[343,11559+51])
                                        Pexp_tuple
                                        [
                                          expression (lib/set.ml[343,11559+43]..[343,11559+44])
                                            Pexp_ident "v" (lib/set.ml[343,11559+43]..[343,11559+44])
                                          expression (lib/set.ml[343,11559+46]..[343,11559+47])
                                            Pexp_ident "r" (lib/set.ml[343,11559+46]..[343,11559+47])
                                          expression (lib/set.ml[343,11559+49]..[343,11559+50])
                                            Pexp_ident "e" (lib/set.ml[343,11559+49]..[343,11559+50])
                                        ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[345,11613+4]..[354,11867+62])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[345,11613+12]..[345,11613+23])
                    Ppat_var "compare_aux" (lib/set.ml[345,11613+12]..[345,11613+23])
                  expression (lib/set.ml[345,11613+24]..[354,11867+62]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[345,11613+24]..[345,11613+26])
                        Nolabel
                        None
                        pattern (lib/set.ml[345,11613+24]..[345,11613+26])
                          Ppat_var "e1" (lib/set.ml[345,11613+24]..[345,11613+26])
                      Pparam_val (lib/set.ml[345,11613+27]..[345,11613+29])
                        Nolabel
                        None
                        pattern (lib/set.ml[345,11613+27]..[345,11613+29])
                          Ppat_var "e2" (lib/set.ml[345,11613+27]..[345,11613+29])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[346,11645+8]..[354,11867+62])
                        Pexp_match
                        expression (lib/set.ml[346,11645+14]..[346,11645+22])
                          Pexp_tuple
                          [
                            expression (lib/set.ml[346,11645+15]..[346,11645+17])
                              Pexp_ident "e1" (lib/set.ml[346,11645+15]..[346,11645+17])
                            expression (lib/set.ml[346,11645+19]..[346,11645+21])
                              Pexp_ident "e2" (lib/set.ml[346,11645+19]..[346,11645+21])
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[347,11673+8]..[347,11673+18])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[347,11673+9]..[347,11673+12])
                                  Ppat_construct "End" (lib/set.ml[347,11673+9]..[347,11673+12])
                                  None
                                pattern (lib/set.ml[347,11673+14]..[347,11673+17])
                                  Ppat_construct "End" (lib/set.ml[347,11673+14]..[347,11673+17])
                                  None
                              ]
                            expression (lib/set.ml[347,11673+22]..[347,11673+23])
                              Pexp_constant PConst_int (0,None)
                          <case>
                            pattern (lib/set.ml[348,11697+8]..[348,11697+16])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[348,11697+9]..[348,11697+12])
                                  Ppat_construct "End" (lib/set.ml[348,11697+9]..[348,11697+12])
                                  None
                                pattern (lib/set.ml[348,11697+14]..[348,11697+15])
                                  Ppat_any
                              ]
                            expression (lib/set.ml[348,11697+21]..[348,11697+23])
                              Pexp_constant PConst_int (-1,None)
                          <case>
                            pattern (lib/set.ml[349,11721+8]..[349,11721+16])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[349,11721+9]..[349,11721+10])
                                  Ppat_any
                                pattern (lib/set.ml[349,11721+12]..[349,11721+15])
                                  Ppat_construct "End" (lib/set.ml[349,11721+12]..[349,11721+15])
                                  None
                              ]
                            expression (lib/set.ml[349,11721+20]..[349,11721+21])
                              Pexp_constant PConst_int (1,None)
                          <case>
                            pattern (lib/set.ml[350,11743+8]..[350,11743+44])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[350,11743+9]..[350,11743+25])
                                  Ppat_construct "More" (lib/set.ml[350,11743+9]..[350,11743+13])
                                  Some
                                    []
                                    pattern (lib/set.ml[350,11743+13]..[350,11743+25])
                                      Ppat_tuple
                                      [
                                        pattern (lib/set.ml[350,11743+14]..[350,11743+16])
                                          Ppat_var "v1" (lib/set.ml[350,11743+14]..[350,11743+16])
                                        pattern (lib/set.ml[350,11743+18]..[350,11743+20])
                                          Ppat_var "r1" (lib/set.ml[350,11743+18]..[350,11743+20])
                                        pattern (lib/set.ml[350,11743+22]..[350,11743+24])
                                          Ppat_var "e1" (lib/set.ml[350,11743+22]..[350,11743+24])
                                      ]
                                pattern (lib/set.ml[350,11743+27]..[350,11743+43])
                                  Ppat_construct "More" (lib/set.ml[350,11743+27]..[350,11743+31])
                                  Some
                                    []
                                    pattern (lib/set.ml[350,11743+31]..[350,11743+43])
                                      Ppat_tuple
                                      [
                                        pattern (lib/set.ml[350,11743+32]..[350,11743+34])
                                          Ppat_var "v2" (lib/set.ml[350,11743+32]..[350,11743+34])
                                        pattern (lib/set.ml[350,11743+36]..[350,11743+38])
                                          Ppat_var "r2" (lib/set.ml[350,11743+36]..[350,11743+38])
                                        pattern (lib/set.ml[350,11743+40]..[350,11743+42])
                                          Ppat_var "e2" (lib/set.ml[350,11743+40]..[350,11743+42])
                                      ]
                              ]
                            expression (lib/set.ml[351,11791+10]..[354,11867+62])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/set.ml[351,11791+14]..[351,11791+15])
                                    Ppat_var "c" (lib/set.ml[351,11791+14]..[351,11791+15])
                                  expression (lib/set.ml[351,11791+18]..[351,11791+35])
                                    Pexp_apply
                                    expression (lib/set.ml[351,11791+18]..[351,11791+29])
                                      Pexp_ident "Ord.compare" (lib/set.ml[351,11791+18]..[351,11791+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[351,11791+30]..[351,11791+32])
                                          Pexp_ident "v1" (lib/set.ml[351,11791+30]..[351,11791+32])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[351,11791+33]..[351,11791+35])
                                          Pexp_ident "v2" (lib/set.ml[351,11791+33]..[351,11791+35])
                                    ]
                              ]
                              expression (lib/set.ml[352,11830+10]..[354,11867+62])
                                Pexp_ifthenelse
                                expression (lib/set.ml[352,11830+13]..[352,11830+19])
                                  Pexp_apply
                                  expression (lib/set.ml[352,11830+15]..[352,11830+17])
                                    Pexp_ident "<>" (lib/set.ml[352,11830+15]..[352,11830+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[352,11830+13]..[352,11830+14])
                                        Pexp_ident "c" (lib/set.ml[352,11830+13]..[352,11830+14])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[352,11830+18]..[352,11830+19])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                expression (lib/set.ml[353,11850+15]..[353,11850+16])
                                  Pexp_ident "c" (lib/set.ml[353,11850+15]..[353,11850+16])
                                Some
                                  expression (lib/set.ml[354,11867+15]..[354,11867+62])
                                    Pexp_apply
                                    expression (lib/set.ml[354,11867+15]..[354,11867+26])
                                      Pexp_ident "compare_aux" (lib/set.ml[354,11867+15]..[354,11867+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[354,11867+27]..[354,11867+44])
                                          Pexp_apply
                                          expression (lib/set.ml[354,11867+28]..[354,11867+37])
                                            Pexp_ident "cons_enum" (lib/set.ml[354,11867+28]..[354,11867+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[354,11867+38]..[354,11867+40])
                                                Pexp_ident "r1" (lib/set.ml[354,11867+38]..[354,11867+40])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[354,11867+41]..[354,11867+43])
                                                Pexp_ident "e1" (lib/set.ml[354,11867+41]..[354,11867+43])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[354,11867+45]..[354,11867+62])
                                          Pexp_apply
                                          expression (lib/set.ml[354,11867+46]..[354,11867+55])
                                            Pexp_ident "cons_enum" (lib/set.ml[354,11867+46]..[354,11867+55])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[354,11867+56]..[354,11867+58])
                                                Pexp_ident "r2" (lib/set.ml[354,11867+56]..[354,11867+58])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[354,11867+59]..[354,11867+61])
                                                Pexp_ident "e2" (lib/set.ml[354,11867+59]..[354,11867+61])
                                          ]
                                    ]
                        ]
              ]
            structure_item (lib/set.ml[356,11931+4]..[357,11955+55])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[356,11931+8]..[356,11931+15])
                    Ppat_var "compare" (lib/set.ml[356,11931+8]..[356,11931+15])
                  expression (lib/set.ml[356,11931+16]..[357,11955+55]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[356,11931+16]..[356,11931+18])
                        Nolabel
                        None
                        pattern (lib/set.ml[356,11931+16]..[356,11931+18])
                          Ppat_var "s1" (lib/set.ml[356,11931+16]..[356,11931+18])
                      Pparam_val (lib/set.ml[356,11931+19]..[356,11931+21])
                        Nolabel
                        None
                        pattern (lib/set.ml[356,11931+19]..[356,11931+21])
                          Ppat_var "s2" (lib/set.ml[356,11931+19]..[356,11931+21])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[357,11955+6]..[357,11955+55])
                        Pexp_apply
                        expression (lib/set.ml[357,11955+6]..[357,11955+17])
                          Pexp_ident "compare_aux" (lib/set.ml[357,11955+6]..[357,11955+17])
                        [
                          <arg>
                          Nolabel
                            expression (lib/set.ml[357,11955+18]..[357,11955+36])
                              Pexp_apply
                              expression (lib/set.ml[357,11955+19]..[357,11955+28])
                                Pexp_ident "cons_enum" (lib/set.ml[357,11955+19]..[357,11955+28])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[357,11955+29]..[357,11955+31])
                                    Pexp_ident "s1" (lib/set.ml[357,11955+29]..[357,11955+31])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[357,11955+32]..[357,11955+35])
                                    Pexp_construct "End" (lib/set.ml[357,11955+32]..[357,11955+35])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (lib/set.ml[357,11955+37]..[357,11955+55])
                              Pexp_apply
                              expression (lib/set.ml[357,11955+38]..[357,11955+47])
                                Pexp_ident "cons_enum" (lib/set.ml[357,11955+38]..[357,11955+47])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[357,11955+48]..[357,11955+50])
                                    Pexp_ident "s2" (lib/set.ml[357,11955+48]..[357,11955+50])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[357,11955+51]..[357,11955+54])
                                    Pexp_construct "End" (lib/set.ml[357,11955+51]..[357,11955+54])
                                    None
                              ]
                        ]
              ]
            structure_item (lib/set.ml[359,12012+4]..[360,12034+23])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[359,12012+8]..[359,12012+13])
                    Ppat_var "equal" (lib/set.ml[359,12012+8]..[359,12012+13])
                  expression (lib/set.ml[359,12012+14]..[360,12034+23]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[359,12012+14]..[359,12012+16])
                        Nolabel
                        None
                        pattern (lib/set.ml[359,12012+14]..[359,12012+16])
                          Ppat_var "s1" (lib/set.ml[359,12012+14]..[359,12012+16])
                      Pparam_val (lib/set.ml[359,12012+17]..[359,12012+19])
                        Nolabel
                        None
                        pattern (lib/set.ml[359,12012+17]..[359,12012+19])
                          Ppat_var "s2" (lib/set.ml[359,12012+17]..[359,12012+19])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[360,12034+6]..[360,12034+23])
                        Pexp_apply
                        expression (lib/set.ml[360,12034+20]..[360,12034+21])
                          Pexp_ident "=" (lib/set.ml[360,12034+20]..[360,12034+21])
                        [
                          <arg>
                          Nolabel
                            expression (lib/set.ml[360,12034+6]..[360,12034+19])
                              Pexp_apply
                              expression (lib/set.ml[360,12034+6]..[360,12034+13])
                                Pexp_ident "compare" (lib/set.ml[360,12034+6]..[360,12034+13])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[360,12034+14]..[360,12034+16])
                                    Pexp_ident "s1" (lib/set.ml[360,12034+14]..[360,12034+16])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[360,12034+17]..[360,12034+19])
                                    Pexp_ident "s2" (lib/set.ml[360,12034+17]..[360,12034+19])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/set.ml[360,12034+22]..[360,12034+23])
                              Pexp_constant PConst_int (0,None)
                        ]
              ]
            structure_item (lib/set.ml[362,12059+4]..[375,12471+71])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[362,12059+12]..[362,12059+18])
                    Ppat_var "subset" (lib/set.ml[362,12059+12]..[362,12059+18])
                  expression (lib/set.ml[362,12059+19]..[375,12471+71]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[362,12059+19]..[362,12059+21])
                        Nolabel
                        None
                        pattern (lib/set.ml[362,12059+19]..[362,12059+21])
                          Ppat_var "s1" (lib/set.ml[362,12059+19]..[362,12059+21])
                      Pparam_val (lib/set.ml[362,12059+22]..[362,12059+24])
                        Nolabel
                        None
                        pattern (lib/set.ml[362,12059+22]..[362,12059+24])
                          Ppat_var "s2" (lib/set.ml[362,12059+22]..[362,12059+24])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[363,12086+6]..[375,12471+71])
                        Pexp_match
                        expression (lib/set.ml[363,12086+12]..[363,12086+20])
                          Pexp_tuple
                          [
                            expression (lib/set.ml[363,12086+13]..[363,12086+15])
                              Pexp_ident "s1" (lib/set.ml[363,12086+13]..[363,12086+15])
                            expression (lib/set.ml[363,12086+17]..[363,12086+19])
                              Pexp_ident "s2" (lib/set.ml[363,12086+17]..[363,12086+19])
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[364,12112+8]..[364,12112+16])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[364,12112+8]..[364,12112+13])
                                  Ppat_construct "Empty" (lib/set.ml[364,12112+8]..[364,12112+13])
                                  None
                                pattern (lib/set.ml[364,12112+15]..[364,12112+16])
                                  Ppat_any
                              ]
                            expression (lib/set.ml[365,12132+10]..[365,12132+14])
                              Pexp_construct "true" (lib/set.ml[365,12132+10]..[365,12132+14])
                              None
                          <case>
                            pattern (lib/set.ml[366,12147+8]..[366,12147+16])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[366,12147+8]..[366,12147+9])
                                  Ppat_any
                                pattern (lib/set.ml[366,12147+11]..[366,12147+16])
                                  Ppat_construct "Empty" (lib/set.ml[366,12147+11]..[366,12147+16])
                                  None
                              ]
                            expression (lib/set.ml[367,12167+10]..[367,12167+15])
                              Pexp_construct "false" (lib/set.ml[367,12167+10]..[367,12167+15])
                              None
                          <case>
                            pattern (lib/set.ml[368,12183+8]..[368,12183+64])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[368,12183+8]..[368,12183+31])
                                  Ppat_construct "Node" (lib/set.ml[368,12183+8]..[368,12183+12])
                                  Some
                                    []
                                    pattern (lib/set.ml[368,12183+13]..[368,12183+31])
                                      Ppat_record Closed
                                      [
                                        "l" (lib/set.ml[368,12183+14]..[368,12183+15])
                                          pattern (lib/set.ml[368,12183+16]..[368,12183+18])
                                            Ppat_var "l1" (lib/set.ml[368,12183+16]..[368,12183+18])
                                        "v" (lib/set.ml[368,12183+20]..[368,12183+21])
                                          pattern (lib/set.ml[368,12183+22]..[368,12183+24])
                                            Ppat_var "v1" (lib/set.ml[368,12183+22]..[368,12183+24])
                                        "r" (lib/set.ml[368,12183+26]..[368,12183+27])
                                          pattern (lib/set.ml[368,12183+28]..[368,12183+30])
                                            Ppat_var "r1" (lib/set.ml[368,12183+28]..[368,12183+30])
                                      ]
                                pattern (lib/set.ml[368,12183+33]..[368,12183+64])
                                  Ppat_alias "t2" (lib/set.ml[368,12183+61]..[368,12183+63])
                                  pattern (lib/set.ml[368,12183+34]..[368,12183+57])
                                    Ppat_construct "Node" (lib/set.ml[368,12183+34]..[368,12183+38])
                                    Some
                                      []
                                      pattern (lib/set.ml[368,12183+39]..[368,12183+57])
                                        Ppat_record Closed
                                        [
                                          "l" (lib/set.ml[368,12183+40]..[368,12183+41])
                                            pattern (lib/set.ml[368,12183+42]..[368,12183+44])
                                              Ppat_var "l2" (lib/set.ml[368,12183+42]..[368,12183+44])
                                          "v" (lib/set.ml[368,12183+46]..[368,12183+47])
                                            pattern (lib/set.ml[368,12183+48]..[368,12183+50])
                                              Ppat_var "v2" (lib/set.ml[368,12183+48]..[368,12183+50])
                                          "r" (lib/set.ml[368,12183+52]..[368,12183+53])
                                            pattern (lib/set.ml[368,12183+54]..[368,12183+56])
                                              Ppat_var "r2" (lib/set.ml[368,12183+54]..[368,12183+56])
                                        ]
                              ]
                            expression (lib/set.ml[369,12251+10]..[375,12471+71])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/set.ml[369,12251+14]..[369,12251+15])
                                    Ppat_var "c" (lib/set.ml[369,12251+14]..[369,12251+15])
                                  expression (lib/set.ml[369,12251+18]..[369,12251+35])
                                    Pexp_apply
                                    expression (lib/set.ml[369,12251+18]..[369,12251+29])
                                      Pexp_ident "Ord.compare" (lib/set.ml[369,12251+18]..[369,12251+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[369,12251+30]..[369,12251+32])
                                          Pexp_ident "v1" (lib/set.ml[369,12251+30]..[369,12251+32])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[369,12251+33]..[369,12251+35])
                                          Pexp_ident "v2" (lib/set.ml[369,12251+33]..[369,12251+35])
                                    ]
                              ]
                              expression (lib/set.ml[370,12290+10]..[375,12471+71])
                                Pexp_ifthenelse
                                expression (lib/set.ml[370,12290+13]..[370,12290+18])
                                  Pexp_apply
                                  expression (lib/set.ml[370,12290+15]..[370,12290+16])
                                    Pexp_ident "=" (lib/set.ml[370,12290+15]..[370,12290+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[370,12290+13]..[370,12290+14])
                                        Pexp_ident "c" (lib/set.ml[370,12290+13]..[370,12290+14])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[370,12290+17]..[370,12290+18])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                expression (lib/set.ml[371,12314+12]..[371,12314+40])
                                  Pexp_apply
                                  expression (lib/set.ml[371,12314+25]..[371,12314+27])
                                    Pexp_ident "&&" (lib/set.ml[371,12314+25]..[371,12314+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[371,12314+12]..[371,12314+24])
                                        Pexp_apply
                                        expression (lib/set.ml[371,12314+12]..[371,12314+18])
                                          Pexp_ident "subset" (lib/set.ml[371,12314+12]..[371,12314+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[371,12314+19]..[371,12314+21])
                                              Pexp_ident "l1" (lib/set.ml[371,12314+19]..[371,12314+21])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[371,12314+22]..[371,12314+24])
                                              Pexp_ident "l2" (lib/set.ml[371,12314+22]..[371,12314+24])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[371,12314+28]..[371,12314+40])
                                        Pexp_apply
                                        expression (lib/set.ml[371,12314+28]..[371,12314+34])
                                          Pexp_ident "subset" (lib/set.ml[371,12314+28]..[371,12314+34])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[371,12314+35]..[371,12314+37])
                                              Pexp_ident "r1" (lib/set.ml[371,12314+35]..[371,12314+37])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[371,12314+38]..[371,12314+40])
                                              Pexp_ident "r2" (lib/set.ml[371,12314+38]..[371,12314+40])
                                        ]
                                  ]
                                Some
                                  expression (lib/set.ml[372,12355+15]..[375,12471+71])
                                    Pexp_ifthenelse
                                    expression (lib/set.ml[372,12355+18]..[372,12355+23])
                                      Pexp_apply
                                      expression (lib/set.ml[372,12355+20]..[372,12355+21])
                                        Pexp_ident "<" (lib/set.ml[372,12355+20]..[372,12355+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[372,12355+18]..[372,12355+19])
                                            Pexp_ident "c" (lib/set.ml[372,12355+18]..[372,12355+19])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[372,12355+22]..[372,12355+23])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                    expression (lib/set.ml[373,12384+12]..[373,12384+71])
                                      Pexp_apply
                                      expression (lib/set.ml[373,12384+56]..[373,12384+58])
                                        Pexp_ident "&&" (lib/set.ml[373,12384+56]..[373,12384+58])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[373,12384+12]..[373,12384+55])
                                            Pexp_apply
                                            expression (lib/set.ml[373,12384+12]..[373,12384+18])
                                              Pexp_ident "subset" (lib/set.ml[373,12384+12]..[373,12384+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[373,12384+19]..[373,12384+52])
                                                  Pexp_construct "Node" (lib/set.ml[373,12384+20]..[373,12384+24])
                                                  Some
                                                    expression (lib/set.ml[373,12384+25]..[373,12384+51])
                                                      Pexp_record
                                                      [
                                                        "l" (lib/set.ml[373,12384+26]..[373,12384+27])
                                                          expression (lib/set.ml[373,12384+28]..[373,12384+30])
                                                            Pexp_ident "l1" (lib/set.ml[373,12384+28]..[373,12384+30])
                                                        "v" (lib/set.ml[373,12384+32]..[373,12384+33])
                                                          expression (lib/set.ml[373,12384+34]..[373,12384+36])
                                                            Pexp_ident "v1" (lib/set.ml[373,12384+34]..[373,12384+36])
                                                        "r" (lib/set.ml[373,12384+38]..[373,12384+39])
                                                          expression (lib/set.ml[373,12384+40]..[373,12384+45])
                                                            Pexp_construct "Empty" (lib/set.ml[373,12384+40]..[373,12384+45])
                                                            None
                                                        "h" (lib/set.ml[373,12384+47]..[373,12384+48])
                                                          expression (lib/set.ml[373,12384+49]..[373,12384+50])
                                                            Pexp_constant PConst_int (0,None)
                                                      ]
                                                      None
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[373,12384+53]..[373,12384+55])
                                                  Pexp_ident "l2" (lib/set.ml[373,12384+53]..[373,12384+55])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[373,12384+59]..[373,12384+71])
                                            Pexp_apply
                                            expression (lib/set.ml[373,12384+59]..[373,12384+65])
                                              Pexp_ident "subset" (lib/set.ml[373,12384+59]..[373,12384+65])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[373,12384+66]..[373,12384+68])
                                                  Pexp_ident "r1" (lib/set.ml[373,12384+66]..[373,12384+68])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[373,12384+69]..[373,12384+71])
                                                  Pexp_ident "t2" (lib/set.ml[373,12384+69]..[373,12384+71])
                                            ]
                                      ]
                                    Some
                                      expression (lib/set.ml[375,12471+12]..[375,12471+71])
                                        Pexp_apply
                                        expression (lib/set.ml[375,12471+56]..[375,12471+58])
                                          Pexp_ident "&&" (lib/set.ml[375,12471+56]..[375,12471+58])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[375,12471+12]..[375,12471+55])
                                              Pexp_apply
                                              expression (lib/set.ml[375,12471+12]..[375,12471+18])
                                                Pexp_ident "subset" (lib/set.ml[375,12471+12]..[375,12471+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[375,12471+19]..[375,12471+52])
                                                    Pexp_construct "Node" (lib/set.ml[375,12471+20]..[375,12471+24])
                                                    Some
                                                      expression (lib/set.ml[375,12471+25]..[375,12471+51])
                                                        Pexp_record
                                                        [
                                                          "l" (lib/set.ml[375,12471+26]..[375,12471+27])
                                                            expression (lib/set.ml[375,12471+28]..[375,12471+33])
                                                              Pexp_construct "Empty" (lib/set.ml[375,12471+28]..[375,12471+33])
                                                              None
                                                          "v" (lib/set.ml[375,12471+35]..[375,12471+36])
                                                            expression (lib/set.ml[375,12471+37]..[375,12471+39])
                                                              Pexp_ident "v1" (lib/set.ml[375,12471+37]..[375,12471+39])
                                                          "r" (lib/set.ml[375,12471+41]..[375,12471+42])
                                                            expression (lib/set.ml[375,12471+43]..[375,12471+45])
                                                              Pexp_ident "r1" (lib/set.ml[375,12471+43]..[375,12471+45])
                                                          "h" (lib/set.ml[375,12471+47]..[375,12471+48])
                                                            expression (lib/set.ml[375,12471+49]..[375,12471+50])
                                                              Pexp_constant PConst_int (0,None)
                                                        ]
                                                        None
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[375,12471+53]..[375,12471+55])
                                                    Pexp_ident "r2" (lib/set.ml[375,12471+53]..[375,12471+55])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[375,12471+59]..[375,12471+71])
                                              Pexp_apply
                                              expression (lib/set.ml[375,12471+59]..[375,12471+65])
                                                Pexp_ident "subset" (lib/set.ml[375,12471+59]..[375,12471+65])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[375,12471+66]..[375,12471+68])
                                                    Pexp_ident "l1" (lib/set.ml[375,12471+66]..[375,12471+68])
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[375,12471+69]..[375,12471+71])
                                                    Pexp_ident "t2" (lib/set.ml[375,12471+69]..[375,12471+71])
                                              ]
                                        ]
                        ]
              ]
            structure_item (lib/set.ml[377,12544+4]..[379,12594+48])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[377,12544+12]..[377,12544+16])
                    Ppat_var "iter" (lib/set.ml[377,12544+12]..[377,12544+16])
                  expression (lib/set.ml[377,12544+17]..[379,12594+48]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[377,12544+17]..[377,12544+18])
                        Nolabel
                        None
                        pattern (lib/set.ml[377,12544+17]..[377,12544+18])
                          Ppat_var "f" (lib/set.ml[377,12544+17]..[377,12544+18])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[377,12544+21]..[379,12594+48])
                      [
                        <case>
                          pattern (lib/set.ml[378,12574+8]..[378,12574+13])
                            Ppat_construct "Empty" (lib/set.ml[378,12574+8]..[378,12574+13])
                            None
                          expression (lib/set.ml[378,12574+17]..[378,12574+19])
                            Pexp_construct "()" (lib/set.ml[378,12574+17]..[378,12574+19])
                            None
                        <case>
                          pattern (lib/set.ml[379,12594+8]..[379,12594+21])
                            Ppat_construct "Node" (lib/set.ml[379,12594+8]..[379,12594+12])
                            Some
                              []
                              pattern (lib/set.ml[379,12594+12]..[379,12594+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[379,12594+13]..[379,12594+14]) ghost
                                    pattern (lib/set.ml[379,12594+13]..[379,12594+14])
                                      Ppat_var "l" (lib/set.ml[379,12594+13]..[379,12594+14])
                                  "v" (lib/set.ml[379,12594+16]..[379,12594+17]) ghost
                                    pattern (lib/set.ml[379,12594+16]..[379,12594+17])
                                      Ppat_var "v" (lib/set.ml[379,12594+16]..[379,12594+17])
                                  "r" (lib/set.ml[379,12594+19]..[379,12594+20]) ghost
                                    pattern (lib/set.ml[379,12594+19]..[379,12594+20])
                                      Ppat_var "r" (lib/set.ml[379,12594+19]..[379,12594+20])
                                ]
                          expression (lib/set.ml[379,12594+25]..[379,12594+48])
                            Pexp_sequence
                            expression (lib/set.ml[379,12594+25]..[379,12594+33])
                              Pexp_apply
                              expression (lib/set.ml[379,12594+25]..[379,12594+29])
                                Pexp_ident "iter" (lib/set.ml[379,12594+25]..[379,12594+29])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[379,12594+30]..[379,12594+31])
                                    Pexp_ident "f" (lib/set.ml[379,12594+30]..[379,12594+31])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[379,12594+32]..[379,12594+33])
                                    Pexp_ident "l" (lib/set.ml[379,12594+32]..[379,12594+33])
                              ]
                            expression (lib/set.ml[379,12594+35]..[379,12594+48])
                              Pexp_sequence
                              expression (lib/set.ml[379,12594+35]..[379,12594+38])
                                Pexp_apply
                                expression (lib/set.ml[379,12594+35]..[379,12594+36])
                                  Pexp_ident "f" (lib/set.ml[379,12594+35]..[379,12594+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[379,12594+37]..[379,12594+38])
                                      Pexp_ident "v" (lib/set.ml[379,12594+37]..[379,12594+38])
                                ]
                              expression (lib/set.ml[379,12594+40]..[379,12594+48])
                                Pexp_apply
                                expression (lib/set.ml[379,12594+40]..[379,12594+44])
                                  Pexp_ident "iter" (lib/set.ml[379,12594+40]..[379,12594+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[379,12594+45]..[379,12594+46])
                                      Pexp_ident "f" (lib/set.ml[379,12594+45]..[379,12594+46])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[379,12594+47]..[379,12594+48])
                                      Pexp_ident "r" (lib/set.ml[379,12594+47]..[379,12594+48])
                                ]
                      ]
              ]
            structure_item (lib/set.ml[381,12644+4]..[384,12713+55])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[381,12644+12]..[381,12644+16])
                    Ppat_var "fold" (lib/set.ml[381,12644+12]..[381,12644+16])
                  expression (lib/set.ml[381,12644+17]..[384,12713+55]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[381,12644+17]..[381,12644+18])
                        Nolabel
                        None
                        pattern (lib/set.ml[381,12644+17]..[381,12644+18])
                          Ppat_var "f" (lib/set.ml[381,12644+17]..[381,12644+18])
                      Pparam_val (lib/set.ml[381,12644+19]..[381,12644+20])
                        Nolabel
                        None
                        pattern (lib/set.ml[381,12644+19]..[381,12644+20])
                          Ppat_var "s" (lib/set.ml[381,12644+19]..[381,12644+20])
                      Pparam_val (lib/set.ml[381,12644+21]..[381,12644+25])
                        Nolabel
                        None
                        pattern (lib/set.ml[381,12644+21]..[381,12644+25])
                          Ppat_var "accu" (lib/set.ml[381,12644+21]..[381,12644+25])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[382,12672+6]..[384,12713+55])
                        Pexp_match
                        expression (lib/set.ml[382,12672+12]..[382,12672+13])
                          Pexp_ident "s" (lib/set.ml[382,12672+12]..[382,12672+13])
                        [
                          <case>
                            pattern (lib/set.ml[383,12691+8]..[383,12691+13])
                              Ppat_construct "Empty" (lib/set.ml[383,12691+8]..[383,12691+13])
                              None
                            expression (lib/set.ml[383,12691+17]..[383,12691+21])
                              Pexp_ident "accu" (lib/set.ml[383,12691+17]..[383,12691+21])
                          <case>
                            pattern (lib/set.ml[384,12713+8]..[384,12713+21])
                              Ppat_construct "Node" (lib/set.ml[384,12713+8]..[384,12713+12])
                              Some
                                []
                                pattern (lib/set.ml[384,12713+12]..[384,12713+21])
                                  Ppat_record Closed
                                  [
                                    "l" (lib/set.ml[384,12713+13]..[384,12713+14]) ghost
                                      pattern (lib/set.ml[384,12713+13]..[384,12713+14])
                                        Ppat_var "l" (lib/set.ml[384,12713+13]..[384,12713+14])
                                    "v" (lib/set.ml[384,12713+16]..[384,12713+17]) ghost
                                      pattern (lib/set.ml[384,12713+16]..[384,12713+17])
                                        Ppat_var "v" (lib/set.ml[384,12713+16]..[384,12713+17])
                                    "r" (lib/set.ml[384,12713+19]..[384,12713+20]) ghost
                                      pattern (lib/set.ml[384,12713+19]..[384,12713+20])
                                        Ppat_var "r" (lib/set.ml[384,12713+19]..[384,12713+20])
                                  ]
                            expression (lib/set.ml[384,12713+25]..[384,12713+55])
                              Pexp_apply
                              expression (lib/set.ml[384,12713+25]..[384,12713+29])
                                Pexp_ident "fold" (lib/set.ml[384,12713+25]..[384,12713+29])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[384,12713+30]..[384,12713+31])
                                    Pexp_ident "f" (lib/set.ml[384,12713+30]..[384,12713+31])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[384,12713+32]..[384,12713+33])
                                    Pexp_ident "r" (lib/set.ml[384,12713+32]..[384,12713+33])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[384,12713+34]..[384,12713+55])
                                    Pexp_apply
                                    expression (lib/set.ml[384,12713+35]..[384,12713+36])
                                      Pexp_ident "f" (lib/set.ml[384,12713+35]..[384,12713+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[384,12713+37]..[384,12713+38])
                                          Pexp_ident "v" (lib/set.ml[384,12713+37]..[384,12713+38])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[384,12713+39]..[384,12713+54])
                                          Pexp_apply
                                          expression (lib/set.ml[384,12713+40]..[384,12713+44])
                                            Pexp_ident "fold" (lib/set.ml[384,12713+40]..[384,12713+44])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[384,12713+45]..[384,12713+46])
                                                Pexp_ident "f" (lib/set.ml[384,12713+45]..[384,12713+46])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[384,12713+47]..[384,12713+48])
                                                Pexp_ident "l" (lib/set.ml[384,12713+47]..[384,12713+48])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[384,12713+49]..[384,12713+53])
                                                Pexp_ident "accu" (lib/set.ml[384,12713+49]..[384,12713+53])
                                          ]
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[386,12770+4]..[388,12825+58])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[386,12770+12]..[386,12770+19])
                    Ppat_var "for_all" (lib/set.ml[386,12770+12]..[386,12770+19])
                  expression (lib/set.ml[386,12770+20]..[388,12825+58]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[386,12770+20]..[386,12770+21])
                        Nolabel
                        None
                        pattern (lib/set.ml[386,12770+20]..[386,12770+21])
                          Ppat_var "p" (lib/set.ml[386,12770+20]..[386,12770+21])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[386,12770+24]..[388,12825+58])
                      [
                        <case>
                          pattern (lib/set.ml[387,12803+8]..[387,12803+13])
                            Ppat_construct "Empty" (lib/set.ml[387,12803+8]..[387,12803+13])
                            None
                          expression (lib/set.ml[387,12803+17]..[387,12803+21])
                            Pexp_construct "true" (lib/set.ml[387,12803+17]..[387,12803+21])
                            None
                        <case>
                          pattern (lib/set.ml[388,12825+8]..[388,12825+21])
                            Ppat_construct "Node" (lib/set.ml[388,12825+8]..[388,12825+12])
                            Some
                              []
                              pattern (lib/set.ml[388,12825+12]..[388,12825+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[388,12825+13]..[388,12825+14]) ghost
                                    pattern (lib/set.ml[388,12825+13]..[388,12825+14])
                                      Ppat_var "l" (lib/set.ml[388,12825+13]..[388,12825+14])
                                  "v" (lib/set.ml[388,12825+16]..[388,12825+17]) ghost
                                    pattern (lib/set.ml[388,12825+16]..[388,12825+17])
                                      Ppat_var "v" (lib/set.ml[388,12825+16]..[388,12825+17])
                                  "r" (lib/set.ml[388,12825+19]..[388,12825+20]) ghost
                                    pattern (lib/set.ml[388,12825+19]..[388,12825+20])
                                      Ppat_var "r" (lib/set.ml[388,12825+19]..[388,12825+20])
                                ]
                          expression (lib/set.ml[388,12825+25]..[388,12825+58])
                            Pexp_apply
                            expression (lib/set.ml[388,12825+29]..[388,12825+31])
                              Pexp_ident "&&" (lib/set.ml[388,12825+29]..[388,12825+31])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[388,12825+25]..[388,12825+28])
                                  Pexp_apply
                                  expression (lib/set.ml[388,12825+25]..[388,12825+26])
                                    Pexp_ident "p" (lib/set.ml[388,12825+25]..[388,12825+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[388,12825+27]..[388,12825+28])
                                        Pexp_ident "v" (lib/set.ml[388,12825+27]..[388,12825+28])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/set.ml[388,12825+32]..[388,12825+58])
                                  Pexp_apply
                                  expression (lib/set.ml[388,12825+44]..[388,12825+46])
                                    Pexp_ident "&&" (lib/set.ml[388,12825+44]..[388,12825+46])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[388,12825+32]..[388,12825+43])
                                        Pexp_apply
                                        expression (lib/set.ml[388,12825+32]..[388,12825+39])
                                          Pexp_ident "for_all" (lib/set.ml[388,12825+32]..[388,12825+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[388,12825+40]..[388,12825+41])
                                              Pexp_ident "p" (lib/set.ml[388,12825+40]..[388,12825+41])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[388,12825+42]..[388,12825+43])
                                              Pexp_ident "l" (lib/set.ml[388,12825+42]..[388,12825+43])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[388,12825+47]..[388,12825+58])
                                        Pexp_apply
                                        expression (lib/set.ml[388,12825+47]..[388,12825+54])
                                          Pexp_ident "for_all" (lib/set.ml[388,12825+47]..[388,12825+54])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[388,12825+55]..[388,12825+56])
                                              Pexp_ident "p" (lib/set.ml[388,12825+55]..[388,12825+56])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[388,12825+57]..[388,12825+58])
                                              Pexp_ident "r" (lib/set.ml[388,12825+57]..[388,12825+58])
                                        ]
                                  ]
                            ]
                      ]
              ]
            structure_item (lib/set.ml[390,12885+4]..[392,12940+56])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[390,12885+12]..[390,12885+18])
                    Ppat_var "exists" (lib/set.ml[390,12885+12]..[390,12885+18])
                  expression (lib/set.ml[390,12885+19]..[392,12940+56]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[390,12885+19]..[390,12885+20])
                        Nolabel
                        None
                        pattern (lib/set.ml[390,12885+19]..[390,12885+20])
                          Ppat_var "p" (lib/set.ml[390,12885+19]..[390,12885+20])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[390,12885+23]..[392,12940+56])
                      [
                        <case>
                          pattern (lib/set.ml[391,12917+8]..[391,12917+13])
                            Ppat_construct "Empty" (lib/set.ml[391,12917+8]..[391,12917+13])
                            None
                          expression (lib/set.ml[391,12917+17]..[391,12917+22])
                            Pexp_construct "false" (lib/set.ml[391,12917+17]..[391,12917+22])
                            None
                        <case>
                          pattern (lib/set.ml[392,12940+8]..[392,12940+21])
                            Ppat_construct "Node" (lib/set.ml[392,12940+8]..[392,12940+12])
                            Some
                              []
                              pattern (lib/set.ml[392,12940+12]..[392,12940+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[392,12940+13]..[392,12940+14]) ghost
                                    pattern (lib/set.ml[392,12940+13]..[392,12940+14])
                                      Ppat_var "l" (lib/set.ml[392,12940+13]..[392,12940+14])
                                  "v" (lib/set.ml[392,12940+16]..[392,12940+17]) ghost
                                    pattern (lib/set.ml[392,12940+16]..[392,12940+17])
                                      Ppat_var "v" (lib/set.ml[392,12940+16]..[392,12940+17])
                                  "r" (lib/set.ml[392,12940+19]..[392,12940+20]) ghost
                                    pattern (lib/set.ml[392,12940+19]..[392,12940+20])
                                      Ppat_var "r" (lib/set.ml[392,12940+19]..[392,12940+20])
                                ]
                          expression (lib/set.ml[392,12940+25]..[392,12940+56])
                            Pexp_apply
                            expression (lib/set.ml[392,12940+29]..[392,12940+31])
                              Pexp_ident "||" (lib/set.ml[392,12940+29]..[392,12940+31])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[392,12940+25]..[392,12940+28])
                                  Pexp_apply
                                  expression (lib/set.ml[392,12940+25]..[392,12940+26])
                                    Pexp_ident "p" (lib/set.ml[392,12940+25]..[392,12940+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[392,12940+27]..[392,12940+28])
                                        Pexp_ident "v" (lib/set.ml[392,12940+27]..[392,12940+28])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/set.ml[392,12940+32]..[392,12940+56])
                                  Pexp_apply
                                  expression (lib/set.ml[392,12940+43]..[392,12940+45])
                                    Pexp_ident "||" (lib/set.ml[392,12940+43]..[392,12940+45])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[392,12940+32]..[392,12940+42])
                                        Pexp_apply
                                        expression (lib/set.ml[392,12940+32]..[392,12940+38])
                                          Pexp_ident "exists" (lib/set.ml[392,12940+32]..[392,12940+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[392,12940+39]..[392,12940+40])
                                              Pexp_ident "p" (lib/set.ml[392,12940+39]..[392,12940+40])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[392,12940+41]..[392,12940+42])
                                              Pexp_ident "l" (lib/set.ml[392,12940+41]..[392,12940+42])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[392,12940+46]..[392,12940+56])
                                        Pexp_apply
                                        expression (lib/set.ml[392,12940+46]..[392,12940+52])
                                          Pexp_ident "exists" (lib/set.ml[392,12940+46]..[392,12940+52])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[392,12940+53]..[392,12940+54])
                                              Pexp_ident "p" (lib/set.ml[392,12940+53]..[392,12940+54])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[392,12940+55]..[392,12940+56])
                                              Pexp_ident "r" (lib/set.ml[392,12940+55]..[392,12940+56])
                                        ]
                                  ]
                            ]
                      ]
              ]
            structure_item (lib/set.ml[394,12998+4]..[403,13314+27])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[394,12998+12]..[394,12998+18])
                    Ppat_var "filter" (lib/set.ml[394,12998+12]..[394,12998+18])
                  expression (lib/set.ml[394,12998+19]..[403,13314+27]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[394,12998+19]..[394,12998+20])
                        Nolabel
                        None
                        pattern (lib/set.ml[394,12998+19]..[394,12998+20])
                          Ppat_var "p" (lib/set.ml[394,12998+19]..[394,12998+20])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[394,12998+23]..[403,13314+27])
                      [
                        <case>
                          pattern (lib/set.ml[395,13030+8]..[395,13030+13])
                            Ppat_construct "Empty" (lib/set.ml[395,13030+8]..[395,13030+13])
                            None
                          expression (lib/set.ml[395,13030+17]..[395,13030+22])
                            Pexp_construct "Empty" (lib/set.ml[395,13030+17]..[395,13030+22])
                            None
                        <case>
                          pattern (lib/set.ml[396,13053+8]..[396,13053+28])
                            Ppat_alias "t" (lib/set.ml[396,13053+27]..[396,13053+28])
                            pattern (lib/set.ml[396,13053+8]..[396,13053+23])
                              Ppat_construct "Node" (lib/set.ml[396,13053+9]..[396,13053+13])
                              Some
                                []
                                pattern (lib/set.ml[396,13053+13]..[396,13053+22])
                                  Ppat_record Closed
                                  [
                                    "l" (lib/set.ml[396,13053+14]..[396,13053+15]) ghost
                                      pattern (lib/set.ml[396,13053+14]..[396,13053+15])
                                        Ppat_var "l" (lib/set.ml[396,13053+14]..[396,13053+15])
                                    "v" (lib/set.ml[396,13053+17]..[396,13053+18]) ghost
                                      pattern (lib/set.ml[396,13053+17]..[396,13053+18])
                                        Ppat_var "v" (lib/set.ml[396,13053+17]..[396,13053+18])
                                    "r" (lib/set.ml[396,13053+20]..[396,13053+21]) ghost
                                      pattern (lib/set.ml[396,13053+20]..[396,13053+21])
                                        Ppat_var "r" (lib/set.ml[396,13053+20]..[396,13053+21])
                                  ]
                          expression (lib/set.ml[398,13146+10]..[403,13314+27])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[398,13146+14]..[398,13146+16])
                                  Ppat_var "l'" (lib/set.ml[398,13146+14]..[398,13146+16])
                                expression (lib/set.ml[398,13146+19]..[398,13146+29])
                                  Pexp_apply
                                  expression (lib/set.ml[398,13146+19]..[398,13146+25])
                                    Pexp_ident "filter" (lib/set.ml[398,13146+19]..[398,13146+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[398,13146+26]..[398,13146+27])
                                        Pexp_ident "p" (lib/set.ml[398,13146+26]..[398,13146+27])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[398,13146+28]..[398,13146+29])
                                        Pexp_ident "l" (lib/set.ml[398,13146+28]..[398,13146+29])
                                  ]
                            ]
                            expression (lib/set.ml[399,13179+10]..[403,13314+27])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/set.ml[399,13179+14]..[399,13179+16])
                                    Ppat_var "pv" (lib/set.ml[399,13179+14]..[399,13179+16])
                                  expression (lib/set.ml[399,13179+19]..[399,13179+22])
                                    Pexp_apply
                                    expression (lib/set.ml[399,13179+19]..[399,13179+20])
                                      Pexp_ident "p" (lib/set.ml[399,13179+19]..[399,13179+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[399,13179+21]..[399,13179+22])
                                          Pexp_ident "v" (lib/set.ml[399,13179+21]..[399,13179+22])
                                    ]
                              ]
                              expression (lib/set.ml[400,13205+10]..[403,13314+27])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/set.ml[400,13205+14]..[400,13205+16])
                                      Ppat_var "r'" (lib/set.ml[400,13205+14]..[400,13205+16])
                                    expression (lib/set.ml[400,13205+19]..[400,13205+29])
                                      Pexp_apply
                                      expression (lib/set.ml[400,13205+19]..[400,13205+25])
                                        Pexp_ident "filter" (lib/set.ml[400,13205+19]..[400,13205+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[400,13205+26]..[400,13205+27])
                                            Pexp_ident "p" (lib/set.ml[400,13205+26]..[400,13205+27])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[400,13205+28]..[400,13205+29])
                                            Pexp_ident "r" (lib/set.ml[400,13205+28]..[400,13205+29])
                                      ]
                                ]
                                expression (lib/set.ml[401,13238+10]..[403,13314+27])
                                  Pexp_ifthenelse
                                  expression (lib/set.ml[401,13238+13]..[401,13238+15])
                                    Pexp_ident "pv" (lib/set.ml[401,13238+13]..[401,13238+15])
                                  expression (lib/set.ml[402,13259+12]..[402,13259+54])
                                    Pexp_ifthenelse
                                    expression (lib/set.ml[402,13259+15]..[402,13259+29])
                                      Pexp_apply
                                      expression (lib/set.ml[402,13259+21]..[402,13259+23])
                                        Pexp_ident "&&" (lib/set.ml[402,13259+21]..[402,13259+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[402,13259+15]..[402,13259+20])
                                            Pexp_apply
                                            expression (lib/set.ml[402,13259+16]..[402,13259+18])
                                              Pexp_ident "==" (lib/set.ml[402,13259+16]..[402,13259+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[402,13259+15]..[402,13259+16])
                                                  Pexp_ident "l" (lib/set.ml[402,13259+15]..[402,13259+16])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[402,13259+18]..[402,13259+20])
                                                  Pexp_ident "l'" (lib/set.ml[402,13259+18]..[402,13259+20])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[402,13259+24]..[402,13259+29])
                                            Pexp_apply
                                            expression (lib/set.ml[402,13259+25]..[402,13259+27])
                                              Pexp_ident "==" (lib/set.ml[402,13259+25]..[402,13259+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[402,13259+24]..[402,13259+25])
                                                  Pexp_ident "r" (lib/set.ml[402,13259+24]..[402,13259+25])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[402,13259+27]..[402,13259+29])
                                                  Pexp_ident "r'" (lib/set.ml[402,13259+27]..[402,13259+29])
                                            ]
                                      ]
                                    expression (lib/set.ml[402,13259+35]..[402,13259+36])
                                      Pexp_ident "t" (lib/set.ml[402,13259+35]..[402,13259+36])
                                    Some
                                      expression (lib/set.ml[402,13259+42]..[402,13259+54])
                                        Pexp_apply
                                        expression (lib/set.ml[402,13259+42]..[402,13259+46])
                                          Pexp_ident "join" (lib/set.ml[402,13259+42]..[402,13259+46])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[402,13259+47]..[402,13259+49])
                                              Pexp_ident "l'" (lib/set.ml[402,13259+47]..[402,13259+49])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[402,13259+50]..[402,13259+51])
                                              Pexp_ident "v" (lib/set.ml[402,13259+50]..[402,13259+51])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[402,13259+52]..[402,13259+54])
                                              Pexp_ident "r'" (lib/set.ml[402,13259+52]..[402,13259+54])
                                        ]
                                  Some
                                    expression (lib/set.ml[403,13314+15]..[403,13314+27])
                                      Pexp_apply
                                      expression (lib/set.ml[403,13314+15]..[403,13314+21])
                                        Pexp_ident "concat" (lib/set.ml[403,13314+15]..[403,13314+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[403,13314+22]..[403,13314+24])
                                            Pexp_ident "l'" (lib/set.ml[403,13314+22]..[403,13314+24])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[403,13314+25]..[403,13314+27])
                                            Pexp_ident "r'" (lib/set.ml[403,13314+25]..[403,13314+27])
                                      ]
                      ]
              ]
            structure_item (lib/set.ml[405,13343+4]..[414,13666+43])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[405,13343+12]..[405,13343+21])
                    Ppat_var "partition" (lib/set.ml[405,13343+12]..[405,13343+21])
                  expression (lib/set.ml[405,13343+22]..[414,13666+43]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[405,13343+22]..[405,13343+23])
                        Nolabel
                        None
                        pattern (lib/set.ml[405,13343+22]..[405,13343+23])
                          Ppat_var "p" (lib/set.ml[405,13343+22]..[405,13343+23])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[405,13343+26]..[414,13666+43])
                      [
                        <case>
                          pattern (lib/set.ml[406,13378+8]..[406,13378+13])
                            Ppat_construct "Empty" (lib/set.ml[406,13378+8]..[406,13378+13])
                            None
                          expression (lib/set.ml[406,13378+17]..[406,13378+31])
                            Pexp_tuple
                            [
                              expression (lib/set.ml[406,13378+18]..[406,13378+23])
                                Pexp_construct "Empty" (lib/set.ml[406,13378+18]..[406,13378+23])
                                None
                              expression (lib/set.ml[406,13378+25]..[406,13378+30])
                                Pexp_construct "Empty" (lib/set.ml[406,13378+25]..[406,13378+30])
                                None
                            ]
                        <case>
                          pattern (lib/set.ml[407,13410+8]..[407,13410+21])
                            Ppat_construct "Node" (lib/set.ml[407,13410+8]..[407,13410+12])
                            Some
                              []
                              pattern (lib/set.ml[407,13410+12]..[407,13410+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[407,13410+13]..[407,13410+14]) ghost
                                    pattern (lib/set.ml[407,13410+13]..[407,13410+14])
                                      Ppat_var "l" (lib/set.ml[407,13410+13]..[407,13410+14])
                                  "v" (lib/set.ml[407,13410+16]..[407,13410+17]) ghost
                                    pattern (lib/set.ml[407,13410+16]..[407,13410+17])
                                      Ppat_var "v" (lib/set.ml[407,13410+16]..[407,13410+17])
                                  "r" (lib/set.ml[407,13410+19]..[407,13410+20]) ghost
                                    pattern (lib/set.ml[407,13410+19]..[407,13410+20])
                                      Ppat_var "r" (lib/set.ml[407,13410+19]..[407,13410+20])
                                ]
                          expression (lib/set.ml[409,13496+10]..[414,13666+43])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[409,13496+14]..[409,13496+22])
                                  Ppat_tuple
                                  [
                                    pattern (lib/set.ml[409,13496+15]..[409,13496+17])
                                      Ppat_var "lt" (lib/set.ml[409,13496+15]..[409,13496+17])
                                    pattern (lib/set.ml[409,13496+19]..[409,13496+21])
                                      Ppat_var "lf" (lib/set.ml[409,13496+19]..[409,13496+21])
                                  ]
                                expression (lib/set.ml[409,13496+25]..[409,13496+38])
                                  Pexp_apply
                                  expression (lib/set.ml[409,13496+25]..[409,13496+34])
                                    Pexp_ident "partition" (lib/set.ml[409,13496+25]..[409,13496+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[409,13496+35]..[409,13496+36])
                                        Pexp_ident "p" (lib/set.ml[409,13496+35]..[409,13496+36])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[409,13496+37]..[409,13496+38])
                                        Pexp_ident "l" (lib/set.ml[409,13496+37]..[409,13496+38])
                                  ]
                            ]
                            expression (lib/set.ml[410,13538+10]..[414,13666+43])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/set.ml[410,13538+14]..[410,13538+16])
                                    Ppat_var "pv" (lib/set.ml[410,13538+14]..[410,13538+16])
                                  expression (lib/set.ml[410,13538+19]..[410,13538+22])
                                    Pexp_apply
                                    expression (lib/set.ml[410,13538+19]..[410,13538+20])
                                      Pexp_ident "p" (lib/set.ml[410,13538+19]..[410,13538+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[410,13538+21]..[410,13538+22])
                                          Pexp_ident "v" (lib/set.ml[410,13538+21]..[410,13538+22])
                                    ]
                              ]
                              expression (lib/set.ml[411,13564+10]..[414,13666+43])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/set.ml[411,13564+14]..[411,13564+22])
                                      Ppat_tuple
                                      [
                                        pattern (lib/set.ml[411,13564+15]..[411,13564+17])
                                          Ppat_var "rt" (lib/set.ml[411,13564+15]..[411,13564+17])
                                        pattern (lib/set.ml[411,13564+19]..[411,13564+21])
                                          Ppat_var "rf" (lib/set.ml[411,13564+19]..[411,13564+21])
                                      ]
                                    expression (lib/set.ml[411,13564+25]..[411,13564+38])
                                      Pexp_apply
                                      expression (lib/set.ml[411,13564+25]..[411,13564+34])
                                        Pexp_ident "partition" (lib/set.ml[411,13564+25]..[411,13564+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[411,13564+35]..[411,13564+36])
                                            Pexp_ident "p" (lib/set.ml[411,13564+35]..[411,13564+36])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[411,13564+37]..[411,13564+38])
                                            Pexp_ident "r" (lib/set.ml[411,13564+37]..[411,13564+38])
                                      ]
                                ]
                                expression (lib/set.ml[412,13606+10]..[414,13666+43])
                                  Pexp_ifthenelse
                                  expression (lib/set.ml[412,13606+13]..[412,13606+15])
                                    Pexp_ident "pv" (lib/set.ml[412,13606+13]..[412,13606+15])
                                  expression (lib/set.ml[413,13622+15]..[413,13622+43])
                                    Pexp_tuple
                                    [
                                      expression (lib/set.ml[413,13622+16]..[413,13622+28])
                                        Pexp_apply
                                        expression (lib/set.ml[413,13622+16]..[413,13622+20])
                                          Pexp_ident "join" (lib/set.ml[413,13622+16]..[413,13622+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[413,13622+21]..[413,13622+23])
                                              Pexp_ident "lt" (lib/set.ml[413,13622+21]..[413,13622+23])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[413,13622+24]..[413,13622+25])
                                              Pexp_ident "v" (lib/set.ml[413,13622+24]..[413,13622+25])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[413,13622+26]..[413,13622+28])
                                              Pexp_ident "rt" (lib/set.ml[413,13622+26]..[413,13622+28])
                                        ]
                                      expression (lib/set.ml[413,13622+30]..[413,13622+42])
                                        Pexp_apply
                                        expression (lib/set.ml[413,13622+30]..[413,13622+36])
                                          Pexp_ident "concat" (lib/set.ml[413,13622+30]..[413,13622+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[413,13622+37]..[413,13622+39])
                                              Pexp_ident "lf" (lib/set.ml[413,13622+37]..[413,13622+39])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[413,13622+40]..[413,13622+42])
                                              Pexp_ident "rf" (lib/set.ml[413,13622+40]..[413,13622+42])
                                        ]
                                    ]
                                  Some
                                    expression (lib/set.ml[414,13666+15]..[414,13666+43])
                                      Pexp_tuple
                                      [
                                        expression (lib/set.ml[414,13666+16]..[414,13666+28])
                                          Pexp_apply
                                          expression (lib/set.ml[414,13666+16]..[414,13666+22])
                                            Pexp_ident "concat" (lib/set.ml[414,13666+16]..[414,13666+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[414,13666+23]..[414,13666+25])
                                                Pexp_ident "lt" (lib/set.ml[414,13666+23]..[414,13666+25])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[414,13666+26]..[414,13666+28])
                                                Pexp_ident "rt" (lib/set.ml[414,13666+26]..[414,13666+28])
                                          ]
                                        expression (lib/set.ml[414,13666+30]..[414,13666+42])
                                          Pexp_apply
                                          expression (lib/set.ml[414,13666+30]..[414,13666+34])
                                            Pexp_ident "join" (lib/set.ml[414,13666+30]..[414,13666+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[414,13666+35]..[414,13666+37])
                                                Pexp_ident "lf" (lib/set.ml[414,13666+35]..[414,13666+37])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[414,13666+38]..[414,13666+39])
                                                Pexp_ident "v" (lib/set.ml[414,13666+38]..[414,13666+39])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[414,13666+40]..[414,13666+42])
                                                Pexp_ident "rf" (lib/set.ml[414,13666+40]..[414,13666+42])
                                          ]
                                      ]
                      ]
              ]
            structure_item (lib/set.ml[416,13711+4]..[418,13762+49])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[416,13711+12]..[416,13711+20])
                    Ppat_var "cardinal" (lib/set.ml[416,13711+12]..[416,13711+20])
                  expression (lib/set.ml[416,13711+23]..[418,13762+49])
                    Pexp_function
                    []
                    None
                    Pfunction_cases (lib/set.ml[416,13711+23]..[418,13762+49])
                      [
                        <case>
                          pattern (lib/set.ml[417,13743+8]..[417,13743+13])
                            Ppat_construct "Empty" (lib/set.ml[417,13743+8]..[417,13743+13])
                            None
                          expression (lib/set.ml[417,13743+17]..[417,13743+18])
                            Pexp_constant PConst_int (0,None)
                        <case>
                          pattern (lib/set.ml[418,13762+8]..[418,13762+18])
                            Ppat_construct "Node" (lib/set.ml[418,13762+8]..[418,13762+12])
                            Some
                              []
                              pattern (lib/set.ml[418,13762+12]..[418,13762+18])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[418,13762+13]..[418,13762+14]) ghost
                                    pattern (lib/set.ml[418,13762+13]..[418,13762+14])
                                      Ppat_var "l" (lib/set.ml[418,13762+13]..[418,13762+14])
                                  "r" (lib/set.ml[418,13762+16]..[418,13762+17]) ghost
                                    pattern (lib/set.ml[418,13762+16]..[418,13762+17])
                                      Ppat_var "r" (lib/set.ml[418,13762+16]..[418,13762+17])
                                ]
                          expression (lib/set.ml[418,13762+22]..[418,13762+49])
                            Pexp_apply
                            expression (lib/set.ml[418,13762+37]..[418,13762+38])
                              Pexp_ident "+" (lib/set.ml[418,13762+37]..[418,13762+38])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[418,13762+22]..[418,13762+36])
                                  Pexp_apply
                                  expression (lib/set.ml[418,13762+33]..[418,13762+34])
                                    Pexp_ident "+" (lib/set.ml[418,13762+33]..[418,13762+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[418,13762+22]..[418,13762+32])
                                        Pexp_apply
                                        expression (lib/set.ml[418,13762+22]..[418,13762+30])
                                          Pexp_ident "cardinal" (lib/set.ml[418,13762+22]..[418,13762+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[418,13762+31]..[418,13762+32])
                                              Pexp_ident "l" (lib/set.ml[418,13762+31]..[418,13762+32])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[418,13762+35]..[418,13762+36])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/set.ml[418,13762+39]..[418,13762+49])
                                  Pexp_apply
                                  expression (lib/set.ml[418,13762+39]..[418,13762+47])
                                    Pexp_ident "cardinal" (lib/set.ml[418,13762+39]..[418,13762+47])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[418,13762+48]..[418,13762+49])
                                        Pexp_ident "r" (lib/set.ml[418,13762+48]..[418,13762+49])
                                  ]
                            ]
                      ]
              ]
            structure_item (lib/set.ml[420,13813+4]..[422,13876+66])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[420,13813+12]..[420,13813+24])
                    Ppat_var "elements_aux" (lib/set.ml[420,13813+12]..[420,13813+24])
                  expression (lib/set.ml[420,13813+25]..[422,13876+66]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[420,13813+25]..[420,13813+29])
                        Nolabel
                        None
                        pattern (lib/set.ml[420,13813+25]..[420,13813+29])
                          Ppat_var "accu" (lib/set.ml[420,13813+25]..[420,13813+29])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[420,13813+32]..[422,13876+66])
                      [
                        <case>
                          pattern (lib/set.ml[421,13854+8]..[421,13854+13])
                            Ppat_construct "Empty" (lib/set.ml[421,13854+8]..[421,13854+13])
                            None
                          expression (lib/set.ml[421,13854+17]..[421,13854+21])
                            Pexp_ident "accu" (lib/set.ml[421,13854+17]..[421,13854+21])
                        <case>
                          pattern (lib/set.ml[422,13876+8]..[422,13876+21])
                            Ppat_construct "Node" (lib/set.ml[422,13876+8]..[422,13876+12])
                            Some
                              []
                              pattern (lib/set.ml[422,13876+12]..[422,13876+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[422,13876+13]..[422,13876+14]) ghost
                                    pattern (lib/set.ml[422,13876+13]..[422,13876+14])
                                      Ppat_var "l" (lib/set.ml[422,13876+13]..[422,13876+14])
                                  "v" (lib/set.ml[422,13876+16]..[422,13876+17]) ghost
                                    pattern (lib/set.ml[422,13876+16]..[422,13876+17])
                                      Ppat_var "v" (lib/set.ml[422,13876+16]..[422,13876+17])
                                  "r" (lib/set.ml[422,13876+19]..[422,13876+20]) ghost
                                    pattern (lib/set.ml[422,13876+19]..[422,13876+20])
                                      Ppat_var "r" (lib/set.ml[422,13876+19]..[422,13876+20])
                                ]
                          expression (lib/set.ml[422,13876+25]..[422,13876+66])
                            Pexp_apply
                            expression (lib/set.ml[422,13876+25]..[422,13876+37])
                              Pexp_ident "elements_aux" (lib/set.ml[422,13876+25]..[422,13876+37])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[422,13876+38]..[422,13876+64])
                                  Pexp_construct "::" (lib/set.ml[422,13876+41]..[422,13876+43])
                                  Some
                                    expression (lib/set.ml[422,13876+39]..[422,13876+63]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lib/set.ml[422,13876+39]..[422,13876+40])
                                          Pexp_ident "v" (lib/set.ml[422,13876+39]..[422,13876+40])
                                        expression (lib/set.ml[422,13876+44]..[422,13876+63])
                                          Pexp_apply
                                          expression (lib/set.ml[422,13876+44]..[422,13876+56])
                                            Pexp_ident "elements_aux" (lib/set.ml[422,13876+44]..[422,13876+56])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[422,13876+57]..[422,13876+61])
                                                Pexp_ident "accu" (lib/set.ml[422,13876+57]..[422,13876+61])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[422,13876+62]..[422,13876+63])
                                                Pexp_ident "r" (lib/set.ml[422,13876+62]..[422,13876+63])
                                          ]
                                      ]
                              <arg>
                              Nolabel
                                expression (lib/set.ml[422,13876+65]..[422,13876+66])
                                  Pexp_ident "l" (lib/set.ml[422,13876+65]..[422,13876+66])
                            ]
                      ]
              ]
            structure_item (lib/set.ml[424,13944+4]..[425,13965+23])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[424,13944+8]..[424,13944+16])
                    Ppat_var "elements" (lib/set.ml[424,13944+8]..[424,13944+16])
                  expression (lib/set.ml[424,13944+17]..[425,13965+23]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[424,13944+17]..[424,13944+18])
                        Nolabel
                        None
                        pattern (lib/set.ml[424,13944+17]..[424,13944+18])
                          Ppat_var "s" (lib/set.ml[424,13944+17]..[424,13944+18])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[425,13965+6]..[425,13965+23])
                        Pexp_apply
                        expression (lib/set.ml[425,13965+6]..[425,13965+18])
                          Pexp_ident "elements_aux" (lib/set.ml[425,13965+6]..[425,13965+18])
                        [
                          <arg>
                          Nolabel
                            expression (lib/set.ml[425,13965+19]..[425,13965+21])
                              Pexp_construct "[]" (lib/set.ml[425,13965+19]..[425,13965+21])
                              None
                          <arg>
                          Nolabel
                            expression (lib/set.ml[425,13965+22]..[425,13965+23])
                              Pexp_ident "s" (lib/set.ml[425,13965+22]..[425,13965+23])
                        ]
              ]
            structure_item (lib/set.ml[427,13990+4]..[427,13990+24])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[427,13990+8]..[427,13990+14])
                    Ppat_var "choose" (lib/set.ml[427,13990+8]..[427,13990+14])
                  expression (lib/set.ml[427,13990+17]..[427,13990+24])
                    Pexp_ident "min_elt" (lib/set.ml[427,13990+17]..[427,13990+24])
              ]
            structure_item (lib/set.ml[429,14016+4]..[429,14016+32])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[429,14016+8]..[429,14016+18])
                    Ppat_var "choose_opt" (lib/set.ml[429,14016+8]..[429,14016+18])
                  expression (lib/set.ml[429,14016+21]..[429,14016+32])
                    Pexp_ident "min_elt_opt" (lib/set.ml[429,14016+21]..[429,14016+32])
              ]
            structure_item (lib/set.ml[431,14050+4]..[436,14201+46])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[431,14050+12]..[431,14050+16])
                    Ppat_var "find" (lib/set.ml[431,14050+12]..[431,14050+16])
                  expression (lib/set.ml[431,14050+17]..[436,14201+46]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[431,14050+17]..[431,14050+18])
                        Nolabel
                        None
                        pattern (lib/set.ml[431,14050+17]..[431,14050+18])
                          Ppat_var "x" (lib/set.ml[431,14050+17]..[431,14050+18])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[431,14050+21]..[436,14201+46])
                      [
                        <case>
                          pattern (lib/set.ml[432,14080+8]..[432,14080+13])
                            Ppat_construct "Empty" (lib/set.ml[432,14080+8]..[432,14080+13])
                            None
                          expression (lib/set.ml[432,14080+17]..[432,14080+32])
                            Pexp_apply
                            expression (lib/set.ml[432,14080+17]..[432,14080+22])
                              Pexp_ident "raise" (lib/set.ml[432,14080+17]..[432,14080+22])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[432,14080+23]..[432,14080+32])
                                  Pexp_construct "Not_found" (lib/set.ml[432,14080+23]..[432,14080+32])
                                  None
                            ]
                        <case>
                          pattern (lib/set.ml[433,14113+8]..[433,14113+21])
                            Ppat_construct "Node" (lib/set.ml[433,14113+8]..[433,14113+12])
                            Some
                              []
                              pattern (lib/set.ml[433,14113+12]..[433,14113+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[433,14113+13]..[433,14113+14]) ghost
                                    pattern (lib/set.ml[433,14113+13]..[433,14113+14])
                                      Ppat_var "l" (lib/set.ml[433,14113+13]..[433,14113+14])
                                  "v" (lib/set.ml[433,14113+16]..[433,14113+17]) ghost
                                    pattern (lib/set.ml[433,14113+16]..[433,14113+17])
                                      Ppat_var "v" (lib/set.ml[433,14113+16]..[433,14113+17])
                                  "r" (lib/set.ml[433,14113+19]..[433,14113+20]) ghost
                                    pattern (lib/set.ml[433,14113+19]..[433,14113+20])
                                      Ppat_var "r" (lib/set.ml[433,14113+19]..[433,14113+20])
                                ]
                          expression (lib/set.ml[434,14138+10]..[436,14201+46])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[434,14138+14]..[434,14138+15])
                                  Ppat_var "c" (lib/set.ml[434,14138+14]..[434,14138+15])
                                expression (lib/set.ml[434,14138+18]..[434,14138+33])
                                  Pexp_apply
                                  expression (lib/set.ml[434,14138+18]..[434,14138+29])
                                    Pexp_ident "Ord.compare" (lib/set.ml[434,14138+18]..[434,14138+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[434,14138+30]..[434,14138+31])
                                        Pexp_ident "x" (lib/set.ml[434,14138+30]..[434,14138+31])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[434,14138+32]..[434,14138+33])
                                        Pexp_ident "v" (lib/set.ml[434,14138+32]..[434,14138+33])
                                  ]
                            ]
                            expression (lib/set.ml[435,14175+10]..[436,14201+46])
                              Pexp_ifthenelse
                              expression (lib/set.ml[435,14175+13]..[435,14175+18])
                                Pexp_apply
                                expression (lib/set.ml[435,14175+15]..[435,14175+16])
                                  Pexp_ident "=" (lib/set.ml[435,14175+15]..[435,14175+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[435,14175+13]..[435,14175+14])
                                      Pexp_ident "c" (lib/set.ml[435,14175+13]..[435,14175+14])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[435,14175+17]..[435,14175+18])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (lib/set.ml[435,14175+24]..[435,14175+25])
                                Pexp_ident "v" (lib/set.ml[435,14175+24]..[435,14175+25])
                              Some
                                expression (lib/set.ml[436,14201+15]..[436,14201+46])
                                  Pexp_apply
                                  expression (lib/set.ml[436,14201+15]..[436,14201+19])
                                    Pexp_ident "find" (lib/set.ml[436,14201+15]..[436,14201+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[436,14201+20]..[436,14201+21])
                                        Pexp_ident "x" (lib/set.ml[436,14201+20]..[436,14201+21])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[436,14201+22]..[436,14201+46])
                                        Pexp_ifthenelse
                                        expression (lib/set.ml[436,14201+26]..[436,14201+31])
                                          Pexp_apply
                                          expression (lib/set.ml[436,14201+28]..[436,14201+29])
                                            Pexp_ident "<" (lib/set.ml[436,14201+28]..[436,14201+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[436,14201+26]..[436,14201+27])
                                                Pexp_ident "c" (lib/set.ml[436,14201+26]..[436,14201+27])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[436,14201+30]..[436,14201+31])
                                                Pexp_constant PConst_int (0,None)
                                          ]
                                        expression (lib/set.ml[436,14201+37]..[436,14201+38])
                                          Pexp_ident "l" (lib/set.ml[436,14201+37]..[436,14201+38])
                                        Some
                                          expression (lib/set.ml[436,14201+44]..[436,14201+45])
                                            Pexp_ident "r" (lib/set.ml[436,14201+44]..[436,14201+45])
                                  ]
                      ]
              ]
            structure_item (lib/set.ml[438,14249+4]..[445,14417+33])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[438,14249+12]..[438,14249+26])
                    Ppat_var "find_first_aux" (lib/set.ml[438,14249+12]..[438,14249+26])
                  expression (lib/set.ml[438,14249+27]..[445,14417+33]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[438,14249+27]..[438,14249+29])
                        Nolabel
                        None
                        pattern (lib/set.ml[438,14249+27]..[438,14249+29])
                          Ppat_var "v0" (lib/set.ml[438,14249+27]..[438,14249+29])
                      Pparam_val (lib/set.ml[438,14249+30]..[438,14249+31])
                        Nolabel
                        None
                        pattern (lib/set.ml[438,14249+30]..[438,14249+31])
                          Ppat_var "f" (lib/set.ml[438,14249+30]..[438,14249+31])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[438,14249+34]..[445,14417+33])
                      [
                        <case>
                          pattern (lib/set.ml[439,14292+8]..[439,14292+13])
                            Ppat_construct "Empty" (lib/set.ml[439,14292+8]..[439,14292+13])
                            None
                          expression (lib/set.ml[440,14309+10]..[440,14309+12])
                            Pexp_ident "v0" (lib/set.ml[440,14309+10]..[440,14309+12])
                        <case>
                          pattern (lib/set.ml[441,14322+8]..[441,14322+21])
                            Ppat_construct "Node" (lib/set.ml[441,14322+8]..[441,14322+12])
                            Some
                              []
                              pattern (lib/set.ml[441,14322+12]..[441,14322+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[441,14322+13]..[441,14322+14]) ghost
                                    pattern (lib/set.ml[441,14322+13]..[441,14322+14])
                                      Ppat_var "l" (lib/set.ml[441,14322+13]..[441,14322+14])
                                  "v" (lib/set.ml[441,14322+16]..[441,14322+17]) ghost
                                    pattern (lib/set.ml[441,14322+16]..[441,14322+17])
                                      Ppat_var "v" (lib/set.ml[441,14322+16]..[441,14322+17])
                                  "r" (lib/set.ml[441,14322+19]..[441,14322+20]) ghost
                                    pattern (lib/set.ml[441,14322+19]..[441,14322+20])
                                      Ppat_var "r" (lib/set.ml[441,14322+19]..[441,14322+20])
                                ]
                          expression (lib/set.ml[442,14347+10]..[445,14417+33])
                            Pexp_ifthenelse
                            expression (lib/set.ml[442,14347+13]..[442,14347+16])
                              Pexp_apply
                              expression (lib/set.ml[442,14347+13]..[442,14347+14])
                                Pexp_ident "f" (lib/set.ml[442,14347+13]..[442,14347+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[442,14347+15]..[442,14347+16])
                                    Pexp_ident "v" (lib/set.ml[442,14347+15]..[442,14347+16])
                              ]
                            expression (lib/set.ml[443,14369+12]..[443,14369+32])
                              Pexp_apply
                              expression (lib/set.ml[443,14369+12]..[443,14369+26])
                                Pexp_ident "find_first_aux" (lib/set.ml[443,14369+12]..[443,14369+26])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[443,14369+27]..[443,14369+28])
                                    Pexp_ident "v" (lib/set.ml[443,14369+27]..[443,14369+28])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[443,14369+29]..[443,14369+30])
                                    Pexp_ident "f" (lib/set.ml[443,14369+29]..[443,14369+30])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[443,14369+31]..[443,14369+32])
                                    Pexp_ident "l" (lib/set.ml[443,14369+31]..[443,14369+32])
                              ]
                            Some
                              expression (lib/set.ml[445,14417+12]..[445,14417+33])
                                Pexp_apply
                                expression (lib/set.ml[445,14417+12]..[445,14417+26])
                                  Pexp_ident "find_first_aux" (lib/set.ml[445,14417+12]..[445,14417+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[445,14417+27]..[445,14417+29])
                                      Pexp_ident "v0" (lib/set.ml[445,14417+27]..[445,14417+29])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[445,14417+30]..[445,14417+31])
                                      Pexp_ident "f" (lib/set.ml[445,14417+30]..[445,14417+31])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[445,14417+32]..[445,14417+33])
                                      Pexp_ident "r" (lib/set.ml[445,14417+32]..[445,14417+33])
                                ]
                      ]
              ]
            structure_item (lib/set.ml[447,14452+4]..[454,14626+26])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[447,14452+12]..[447,14452+22])
                    Ppat_var "find_first" (lib/set.ml[447,14452+12]..[447,14452+22])
                  expression (lib/set.ml[447,14452+23]..[454,14626+26]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[447,14452+23]..[447,14452+24])
                        Nolabel
                        None
                        pattern (lib/set.ml[447,14452+23]..[447,14452+24])
                          Ppat_var "f" (lib/set.ml[447,14452+23]..[447,14452+24])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[447,14452+27]..[454,14626+26])
                      [
                        <case>
                          pattern (lib/set.ml[448,14488+8]..[448,14488+13])
                            Ppat_construct "Empty" (lib/set.ml[448,14488+8]..[448,14488+13])
                            None
                          expression (lib/set.ml[449,14505+10]..[449,14505+25])
                            Pexp_apply
                            expression (lib/set.ml[449,14505+10]..[449,14505+15])
                              Pexp_ident "raise" (lib/set.ml[449,14505+10]..[449,14505+15])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[449,14505+16]..[449,14505+25])
                                  Pexp_construct "Not_found" (lib/set.ml[449,14505+16]..[449,14505+25])
                                  None
                            ]
                        <case>
                          pattern (lib/set.ml[450,14531+8]..[450,14531+21])
                            Ppat_construct "Node" (lib/set.ml[450,14531+8]..[450,14531+12])
                            Some
                              []
                              pattern (lib/set.ml[450,14531+12]..[450,14531+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[450,14531+13]..[450,14531+14]) ghost
                                    pattern (lib/set.ml[450,14531+13]..[450,14531+14])
                                      Ppat_var "l" (lib/set.ml[450,14531+13]..[450,14531+14])
                                  "v" (lib/set.ml[450,14531+16]..[450,14531+17]) ghost
                                    pattern (lib/set.ml[450,14531+16]..[450,14531+17])
                                      Ppat_var "v" (lib/set.ml[450,14531+16]..[450,14531+17])
                                  "r" (lib/set.ml[450,14531+19]..[450,14531+20]) ghost
                                    pattern (lib/set.ml[450,14531+19]..[450,14531+20])
                                      Ppat_var "r" (lib/set.ml[450,14531+19]..[450,14531+20])
                                ]
                          expression (lib/set.ml[451,14556+10]..[454,14626+26])
                            Pexp_ifthenelse
                            expression (lib/set.ml[451,14556+13]..[451,14556+16])
                              Pexp_apply
                              expression (lib/set.ml[451,14556+13]..[451,14556+14])
                                Pexp_ident "f" (lib/set.ml[451,14556+13]..[451,14556+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[451,14556+15]..[451,14556+16])
                                    Pexp_ident "v" (lib/set.ml[451,14556+15]..[451,14556+16])
                              ]
                            expression (lib/set.ml[452,14578+12]..[452,14578+32])
                              Pexp_apply
                              expression (lib/set.ml[452,14578+12]..[452,14578+26])
                                Pexp_ident "find_first_aux" (lib/set.ml[452,14578+12]..[452,14578+26])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[452,14578+27]..[452,14578+28])
                                    Pexp_ident "v" (lib/set.ml[452,14578+27]..[452,14578+28])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[452,14578+29]..[452,14578+30])
                                    Pexp_ident "f" (lib/set.ml[452,14578+29]..[452,14578+30])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[452,14578+31]..[452,14578+32])
                                    Pexp_ident "l" (lib/set.ml[452,14578+31]..[452,14578+32])
                              ]
                            Some
                              expression (lib/set.ml[454,14626+12]..[454,14626+26])
                                Pexp_apply
                                expression (lib/set.ml[454,14626+12]..[454,14626+22])
                                  Pexp_ident "find_first" (lib/set.ml[454,14626+12]..[454,14626+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[454,14626+23]..[454,14626+24])
                                      Pexp_ident "f" (lib/set.ml[454,14626+23]..[454,14626+24])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[454,14626+25]..[454,14626+26])
                                      Pexp_ident "r" (lib/set.ml[454,14626+25]..[454,14626+26])
                                ]
                      ]
              ]
            structure_item (lib/set.ml[456,14654+4]..[463,14835+37])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[456,14654+12]..[456,14654+30])
                    Ppat_var "find_first_opt_aux" (lib/set.ml[456,14654+12]..[456,14654+30])
                  expression (lib/set.ml[456,14654+31]..[463,14835+37]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[456,14654+31]..[456,14654+33])
                        Nolabel
                        None
                        pattern (lib/set.ml[456,14654+31]..[456,14654+33])
                          Ppat_var "v0" (lib/set.ml[456,14654+31]..[456,14654+33])
                      Pparam_val (lib/set.ml[456,14654+34]..[456,14654+35])
                        Nolabel
                        None
                        pattern (lib/set.ml[456,14654+34]..[456,14654+35])
                          Ppat_var "f" (lib/set.ml[456,14654+34]..[456,14654+35])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[456,14654+38]..[463,14835+37])
                      [
                        <case>
                          pattern (lib/set.ml[457,14701+8]..[457,14701+13])
                            Ppat_construct "Empty" (lib/set.ml[457,14701+8]..[457,14701+13])
                            None
                          expression (lib/set.ml[458,14718+10]..[458,14718+17])
                            Pexp_construct "Some" (lib/set.ml[458,14718+10]..[458,14718+14])
                            Some
                              expression (lib/set.ml[458,14718+15]..[458,14718+17])
                                Pexp_ident "v0" (lib/set.ml[458,14718+15]..[458,14718+17])
                        <case>
                          pattern (lib/set.ml[459,14736+8]..[459,14736+21])
                            Ppat_construct "Node" (lib/set.ml[459,14736+8]..[459,14736+12])
                            Some
                              []
                              pattern (lib/set.ml[459,14736+12]..[459,14736+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[459,14736+13]..[459,14736+14]) ghost
                                    pattern (lib/set.ml[459,14736+13]..[459,14736+14])
                                      Ppat_var "l" (lib/set.ml[459,14736+13]..[459,14736+14])
                                  "v" (lib/set.ml[459,14736+16]..[459,14736+17]) ghost
                                    pattern (lib/set.ml[459,14736+16]..[459,14736+17])
                                      Ppat_var "v" (lib/set.ml[459,14736+16]..[459,14736+17])
                                  "r" (lib/set.ml[459,14736+19]..[459,14736+20]) ghost
                                    pattern (lib/set.ml[459,14736+19]..[459,14736+20])
                                      Ppat_var "r" (lib/set.ml[459,14736+19]..[459,14736+20])
                                ]
                          expression (lib/set.ml[460,14761+10]..[463,14835+37])
                            Pexp_ifthenelse
                            expression (lib/set.ml[460,14761+13]..[460,14761+16])
                              Pexp_apply
                              expression (lib/set.ml[460,14761+13]..[460,14761+14])
                                Pexp_ident "f" (lib/set.ml[460,14761+13]..[460,14761+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[460,14761+15]..[460,14761+16])
                                    Pexp_ident "v" (lib/set.ml[460,14761+15]..[460,14761+16])
                              ]
                            expression (lib/set.ml[461,14783+12]..[461,14783+36])
                              Pexp_apply
                              expression (lib/set.ml[461,14783+12]..[461,14783+30])
                                Pexp_ident "find_first_opt_aux" (lib/set.ml[461,14783+12]..[461,14783+30])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[461,14783+31]..[461,14783+32])
                                    Pexp_ident "v" (lib/set.ml[461,14783+31]..[461,14783+32])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[461,14783+33]..[461,14783+34])
                                    Pexp_ident "f" (lib/set.ml[461,14783+33]..[461,14783+34])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[461,14783+35]..[461,14783+36])
                                    Pexp_ident "l" (lib/set.ml[461,14783+35]..[461,14783+36])
                              ]
                            Some
                              expression (lib/set.ml[463,14835+12]..[463,14835+37])
                                Pexp_apply
                                expression (lib/set.ml[463,14835+12]..[463,14835+30])
                                  Pexp_ident "find_first_opt_aux" (lib/set.ml[463,14835+12]..[463,14835+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[463,14835+31]..[463,14835+33])
                                      Pexp_ident "v0" (lib/set.ml[463,14835+31]..[463,14835+33])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[463,14835+34]..[463,14835+35])
                                      Pexp_ident "f" (lib/set.ml[463,14835+34]..[463,14835+35])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[463,14835+36]..[463,14835+37])
                                      Pexp_ident "r" (lib/set.ml[463,14835+36]..[463,14835+37])
                                ]
                      ]
              ]
            structure_item (lib/set.ml[465,14874+4]..[472,15045+30])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[465,14874+12]..[465,14874+26])
                    Ppat_var "find_first_opt" (lib/set.ml[465,14874+12]..[465,14874+26])
                  expression (lib/set.ml[465,14874+27]..[472,15045+30]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[465,14874+27]..[465,14874+28])
                        Nolabel
                        None
                        pattern (lib/set.ml[465,14874+27]..[465,14874+28])
                          Ppat_var "f" (lib/set.ml[465,14874+27]..[465,14874+28])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[465,14874+31]..[472,15045+30])
                      [
                        <case>
                          pattern (lib/set.ml[466,14914+8]..[466,14914+13])
                            Ppat_construct "Empty" (lib/set.ml[466,14914+8]..[466,14914+13])
                            None
                          expression (lib/set.ml[467,14931+10]..[467,14931+14])
                            Pexp_construct "None" (lib/set.ml[467,14931+10]..[467,14931+14])
                            None
                        <case>
                          pattern (lib/set.ml[468,14946+8]..[468,14946+21])
                            Ppat_construct "Node" (lib/set.ml[468,14946+8]..[468,14946+12])
                            Some
                              []
                              pattern (lib/set.ml[468,14946+12]..[468,14946+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[468,14946+13]..[468,14946+14]) ghost
                                    pattern (lib/set.ml[468,14946+13]..[468,14946+14])
                                      Ppat_var "l" (lib/set.ml[468,14946+13]..[468,14946+14])
                                  "v" (lib/set.ml[468,14946+16]..[468,14946+17]) ghost
                                    pattern (lib/set.ml[468,14946+16]..[468,14946+17])
                                      Ppat_var "v" (lib/set.ml[468,14946+16]..[468,14946+17])
                                  "r" (lib/set.ml[468,14946+19]..[468,14946+20]) ghost
                                    pattern (lib/set.ml[468,14946+19]..[468,14946+20])
                                      Ppat_var "r" (lib/set.ml[468,14946+19]..[468,14946+20])
                                ]
                          expression (lib/set.ml[469,14971+10]..[472,15045+30])
                            Pexp_ifthenelse
                            expression (lib/set.ml[469,14971+13]..[469,14971+16])
                              Pexp_apply
                              expression (lib/set.ml[469,14971+13]..[469,14971+14])
                                Pexp_ident "f" (lib/set.ml[469,14971+13]..[469,14971+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[469,14971+15]..[469,14971+16])
                                    Pexp_ident "v" (lib/set.ml[469,14971+15]..[469,14971+16])
                              ]
                            expression (lib/set.ml[470,14993+12]..[470,14993+36])
                              Pexp_apply
                              expression (lib/set.ml[470,14993+12]..[470,14993+30])
                                Pexp_ident "find_first_opt_aux" (lib/set.ml[470,14993+12]..[470,14993+30])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[470,14993+31]..[470,14993+32])
                                    Pexp_ident "v" (lib/set.ml[470,14993+31]..[470,14993+32])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[470,14993+33]..[470,14993+34])
                                    Pexp_ident "f" (lib/set.ml[470,14993+33]..[470,14993+34])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[470,14993+35]..[470,14993+36])
                                    Pexp_ident "l" (lib/set.ml[470,14993+35]..[470,14993+36])
                              ]
                            Some
                              expression (lib/set.ml[472,15045+12]..[472,15045+30])
                                Pexp_apply
                                expression (lib/set.ml[472,15045+12]..[472,15045+26])
                                  Pexp_ident "find_first_opt" (lib/set.ml[472,15045+12]..[472,15045+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[472,15045+27]..[472,15045+28])
                                      Pexp_ident "f" (lib/set.ml[472,15045+27]..[472,15045+28])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[472,15045+29]..[472,15045+30])
                                      Pexp_ident "r" (lib/set.ml[472,15045+29]..[472,15045+30])
                                ]
                      ]
              ]
            structure_item (lib/set.ml[474,15077+4]..[481,15243+32])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[474,15077+12]..[474,15077+25])
                    Ppat_var "find_last_aux" (lib/set.ml[474,15077+12]..[474,15077+25])
                  expression (lib/set.ml[474,15077+26]..[481,15243+32]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[474,15077+26]..[474,15077+28])
                        Nolabel
                        None
                        pattern (lib/set.ml[474,15077+26]..[474,15077+28])
                          Ppat_var "v0" (lib/set.ml[474,15077+26]..[474,15077+28])
                      Pparam_val (lib/set.ml[474,15077+29]..[474,15077+30])
                        Nolabel
                        None
                        pattern (lib/set.ml[474,15077+29]..[474,15077+30])
                          Ppat_var "f" (lib/set.ml[474,15077+29]..[474,15077+30])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[474,15077+33]..[481,15243+32])
                      [
                        <case>
                          pattern (lib/set.ml[475,15119+8]..[475,15119+13])
                            Ppat_construct "Empty" (lib/set.ml[475,15119+8]..[475,15119+13])
                            None
                          expression (lib/set.ml[476,15136+10]..[476,15136+12])
                            Pexp_ident "v0" (lib/set.ml[476,15136+10]..[476,15136+12])
                        <case>
                          pattern (lib/set.ml[477,15149+8]..[477,15149+21])
                            Ppat_construct "Node" (lib/set.ml[477,15149+8]..[477,15149+12])
                            Some
                              []
                              pattern (lib/set.ml[477,15149+12]..[477,15149+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[477,15149+13]..[477,15149+14]) ghost
                                    pattern (lib/set.ml[477,15149+13]..[477,15149+14])
                                      Ppat_var "l" (lib/set.ml[477,15149+13]..[477,15149+14])
                                  "v" (lib/set.ml[477,15149+16]..[477,15149+17]) ghost
                                    pattern (lib/set.ml[477,15149+16]..[477,15149+17])
                                      Ppat_var "v" (lib/set.ml[477,15149+16]..[477,15149+17])
                                  "r" (lib/set.ml[477,15149+19]..[477,15149+20]) ghost
                                    pattern (lib/set.ml[477,15149+19]..[477,15149+20])
                                      Ppat_var "r" (lib/set.ml[477,15149+19]..[477,15149+20])
                                ]
                          expression (lib/set.ml[478,15174+10]..[481,15243+32])
                            Pexp_ifthenelse
                            expression (lib/set.ml[478,15174+13]..[478,15174+16])
                              Pexp_apply
                              expression (lib/set.ml[478,15174+13]..[478,15174+14])
                                Pexp_ident "f" (lib/set.ml[478,15174+13]..[478,15174+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[478,15174+15]..[478,15174+16])
                                    Pexp_ident "v" (lib/set.ml[478,15174+15]..[478,15174+16])
                              ]
                            expression (lib/set.ml[479,15196+12]..[479,15196+31])
                              Pexp_apply
                              expression (lib/set.ml[479,15196+12]..[479,15196+25])
                                Pexp_ident "find_last_aux" (lib/set.ml[479,15196+12]..[479,15196+25])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[479,15196+26]..[479,15196+27])
                                    Pexp_ident "v" (lib/set.ml[479,15196+26]..[479,15196+27])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[479,15196+28]..[479,15196+29])
                                    Pexp_ident "f" (lib/set.ml[479,15196+28]..[479,15196+29])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[479,15196+30]..[479,15196+31])
                                    Pexp_ident "r" (lib/set.ml[479,15196+30]..[479,15196+31])
                              ]
                            Some
                              expression (lib/set.ml[481,15243+12]..[481,15243+32])
                                Pexp_apply
                                expression (lib/set.ml[481,15243+12]..[481,15243+25])
                                  Pexp_ident "find_last_aux" (lib/set.ml[481,15243+12]..[481,15243+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[481,15243+26]..[481,15243+28])
                                      Pexp_ident "v0" (lib/set.ml[481,15243+26]..[481,15243+28])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[481,15243+29]..[481,15243+30])
                                      Pexp_ident "f" (lib/set.ml[481,15243+29]..[481,15243+30])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[481,15243+31]..[481,15243+32])
                                      Pexp_ident "l" (lib/set.ml[481,15243+31]..[481,15243+32])
                                ]
                      ]
              ]
            structure_item (lib/set.ml[483,15277+4]..[490,15449+25])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[483,15277+12]..[483,15277+21])
                    Ppat_var "find_last" (lib/set.ml[483,15277+12]..[483,15277+21])
                  expression (lib/set.ml[483,15277+22]..[490,15449+25]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[483,15277+22]..[483,15277+23])
                        Nolabel
                        None
                        pattern (lib/set.ml[483,15277+22]..[483,15277+23])
                          Ppat_var "f" (lib/set.ml[483,15277+22]..[483,15277+23])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[483,15277+26]..[490,15449+25])
                      [
                        <case>
                          pattern (lib/set.ml[484,15312+8]..[484,15312+13])
                            Ppat_construct "Empty" (lib/set.ml[484,15312+8]..[484,15312+13])
                            None
                          expression (lib/set.ml[485,15329+10]..[485,15329+25])
                            Pexp_apply
                            expression (lib/set.ml[485,15329+10]..[485,15329+15])
                              Pexp_ident "raise" (lib/set.ml[485,15329+10]..[485,15329+15])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[485,15329+16]..[485,15329+25])
                                  Pexp_construct "Not_found" (lib/set.ml[485,15329+16]..[485,15329+25])
                                  None
                            ]
                        <case>
                          pattern (lib/set.ml[486,15355+8]..[486,15355+21])
                            Ppat_construct "Node" (lib/set.ml[486,15355+8]..[486,15355+12])
                            Some
                              []
                              pattern (lib/set.ml[486,15355+12]..[486,15355+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[486,15355+13]..[486,15355+14]) ghost
                                    pattern (lib/set.ml[486,15355+13]..[486,15355+14])
                                      Ppat_var "l" (lib/set.ml[486,15355+13]..[486,15355+14])
                                  "v" (lib/set.ml[486,15355+16]..[486,15355+17]) ghost
                                    pattern (lib/set.ml[486,15355+16]..[486,15355+17])
                                      Ppat_var "v" (lib/set.ml[486,15355+16]..[486,15355+17])
                                  "r" (lib/set.ml[486,15355+19]..[486,15355+20]) ghost
                                    pattern (lib/set.ml[486,15355+19]..[486,15355+20])
                                      Ppat_var "r" (lib/set.ml[486,15355+19]..[486,15355+20])
                                ]
                          expression (lib/set.ml[487,15380+10]..[490,15449+25])
                            Pexp_ifthenelse
                            expression (lib/set.ml[487,15380+13]..[487,15380+16])
                              Pexp_apply
                              expression (lib/set.ml[487,15380+13]..[487,15380+14])
                                Pexp_ident "f" (lib/set.ml[487,15380+13]..[487,15380+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[487,15380+15]..[487,15380+16])
                                    Pexp_ident "v" (lib/set.ml[487,15380+15]..[487,15380+16])
                              ]
                            expression (lib/set.ml[488,15402+12]..[488,15402+31])
                              Pexp_apply
                              expression (lib/set.ml[488,15402+12]..[488,15402+25])
                                Pexp_ident "find_last_aux" (lib/set.ml[488,15402+12]..[488,15402+25])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[488,15402+26]..[488,15402+27])
                                    Pexp_ident "v" (lib/set.ml[488,15402+26]..[488,15402+27])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[488,15402+28]..[488,15402+29])
                                    Pexp_ident "f" (lib/set.ml[488,15402+28]..[488,15402+29])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[488,15402+30]..[488,15402+31])
                                    Pexp_ident "r" (lib/set.ml[488,15402+30]..[488,15402+31])
                              ]
                            Some
                              expression (lib/set.ml[490,15449+12]..[490,15449+25])
                                Pexp_apply
                                expression (lib/set.ml[490,15449+12]..[490,15449+21])
                                  Pexp_ident "find_last" (lib/set.ml[490,15449+12]..[490,15449+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[490,15449+22]..[490,15449+23])
                                      Pexp_ident "f" (lib/set.ml[490,15449+22]..[490,15449+23])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[490,15449+24]..[490,15449+25])
                                      Pexp_ident "l" (lib/set.ml[490,15449+24]..[490,15449+25])
                                ]
                      ]
              ]
            structure_item (lib/set.ml[492,15476+4]..[499,15655+36])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[492,15476+12]..[492,15476+29])
                    Ppat_var "find_last_opt_aux" (lib/set.ml[492,15476+12]..[492,15476+29])
                  expression (lib/set.ml[492,15476+30]..[499,15655+36]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[492,15476+30]..[492,15476+32])
                        Nolabel
                        None
                        pattern (lib/set.ml[492,15476+30]..[492,15476+32])
                          Ppat_var "v0" (lib/set.ml[492,15476+30]..[492,15476+32])
                      Pparam_val (lib/set.ml[492,15476+33]..[492,15476+34])
                        Nolabel
                        None
                        pattern (lib/set.ml[492,15476+33]..[492,15476+34])
                          Ppat_var "f" (lib/set.ml[492,15476+33]..[492,15476+34])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[492,15476+37]..[499,15655+36])
                      [
                        <case>
                          pattern (lib/set.ml[493,15522+8]..[493,15522+13])
                            Ppat_construct "Empty" (lib/set.ml[493,15522+8]..[493,15522+13])
                            None
                          expression (lib/set.ml[494,15539+10]..[494,15539+17])
                            Pexp_construct "Some" (lib/set.ml[494,15539+10]..[494,15539+14])
                            Some
                              expression (lib/set.ml[494,15539+15]..[494,15539+17])
                                Pexp_ident "v0" (lib/set.ml[494,15539+15]..[494,15539+17])
                        <case>
                          pattern (lib/set.ml[495,15557+8]..[495,15557+21])
                            Ppat_construct "Node" (lib/set.ml[495,15557+8]..[495,15557+12])
                            Some
                              []
                              pattern (lib/set.ml[495,15557+12]..[495,15557+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[495,15557+13]..[495,15557+14]) ghost
                                    pattern (lib/set.ml[495,15557+13]..[495,15557+14])
                                      Ppat_var "l" (lib/set.ml[495,15557+13]..[495,15557+14])
                                  "v" (lib/set.ml[495,15557+16]..[495,15557+17]) ghost
                                    pattern (lib/set.ml[495,15557+16]..[495,15557+17])
                                      Ppat_var "v" (lib/set.ml[495,15557+16]..[495,15557+17])
                                  "r" (lib/set.ml[495,15557+19]..[495,15557+20]) ghost
                                    pattern (lib/set.ml[495,15557+19]..[495,15557+20])
                                      Ppat_var "r" (lib/set.ml[495,15557+19]..[495,15557+20])
                                ]
                          expression (lib/set.ml[496,15582+10]..[499,15655+36])
                            Pexp_ifthenelse
                            expression (lib/set.ml[496,15582+13]..[496,15582+16])
                              Pexp_apply
                              expression (lib/set.ml[496,15582+13]..[496,15582+14])
                                Pexp_ident "f" (lib/set.ml[496,15582+13]..[496,15582+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[496,15582+15]..[496,15582+16])
                                    Pexp_ident "v" (lib/set.ml[496,15582+15]..[496,15582+16])
                              ]
                            expression (lib/set.ml[497,15604+12]..[497,15604+35])
                              Pexp_apply
                              expression (lib/set.ml[497,15604+12]..[497,15604+29])
                                Pexp_ident "find_last_opt_aux" (lib/set.ml[497,15604+12]..[497,15604+29])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[497,15604+30]..[497,15604+31])
                                    Pexp_ident "v" (lib/set.ml[497,15604+30]..[497,15604+31])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[497,15604+32]..[497,15604+33])
                                    Pexp_ident "f" (lib/set.ml[497,15604+32]..[497,15604+33])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[497,15604+34]..[497,15604+35])
                                    Pexp_ident "r" (lib/set.ml[497,15604+34]..[497,15604+35])
                              ]
                            Some
                              expression (lib/set.ml[499,15655+12]..[499,15655+36])
                                Pexp_apply
                                expression (lib/set.ml[499,15655+12]..[499,15655+29])
                                  Pexp_ident "find_last_opt_aux" (lib/set.ml[499,15655+12]..[499,15655+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[499,15655+30]..[499,15655+32])
                                      Pexp_ident "v0" (lib/set.ml[499,15655+30]..[499,15655+32])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[499,15655+33]..[499,15655+34])
                                      Pexp_ident "f" (lib/set.ml[499,15655+33]..[499,15655+34])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[499,15655+35]..[499,15655+36])
                                      Pexp_ident "l" (lib/set.ml[499,15655+35]..[499,15655+36])
                                ]
                      ]
              ]
            structure_item (lib/set.ml[501,15693+4]..[508,15862+29])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[501,15693+12]..[501,15693+25])
                    Ppat_var "find_last_opt" (lib/set.ml[501,15693+12]..[501,15693+25])
                  expression (lib/set.ml[501,15693+26]..[508,15862+29]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[501,15693+26]..[501,15693+27])
                        Nolabel
                        None
                        pattern (lib/set.ml[501,15693+26]..[501,15693+27])
                          Ppat_var "f" (lib/set.ml[501,15693+26]..[501,15693+27])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[501,15693+30]..[508,15862+29])
                      [
                        <case>
                          pattern (lib/set.ml[502,15732+8]..[502,15732+13])
                            Ppat_construct "Empty" (lib/set.ml[502,15732+8]..[502,15732+13])
                            None
                          expression (lib/set.ml[503,15749+10]..[503,15749+14])
                            Pexp_construct "None" (lib/set.ml[503,15749+10]..[503,15749+14])
                            None
                        <case>
                          pattern (lib/set.ml[504,15764+8]..[504,15764+21])
                            Ppat_construct "Node" (lib/set.ml[504,15764+8]..[504,15764+12])
                            Some
                              []
                              pattern (lib/set.ml[504,15764+12]..[504,15764+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[504,15764+13]..[504,15764+14]) ghost
                                    pattern (lib/set.ml[504,15764+13]..[504,15764+14])
                                      Ppat_var "l" (lib/set.ml[504,15764+13]..[504,15764+14])
                                  "v" (lib/set.ml[504,15764+16]..[504,15764+17]) ghost
                                    pattern (lib/set.ml[504,15764+16]..[504,15764+17])
                                      Ppat_var "v" (lib/set.ml[504,15764+16]..[504,15764+17])
                                  "r" (lib/set.ml[504,15764+19]..[504,15764+20]) ghost
                                    pattern (lib/set.ml[504,15764+19]..[504,15764+20])
                                      Ppat_var "r" (lib/set.ml[504,15764+19]..[504,15764+20])
                                ]
                          expression (lib/set.ml[505,15789+10]..[508,15862+29])
                            Pexp_ifthenelse
                            expression (lib/set.ml[505,15789+13]..[505,15789+16])
                              Pexp_apply
                              expression (lib/set.ml[505,15789+13]..[505,15789+14])
                                Pexp_ident "f" (lib/set.ml[505,15789+13]..[505,15789+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[505,15789+15]..[505,15789+16])
                                    Pexp_ident "v" (lib/set.ml[505,15789+15]..[505,15789+16])
                              ]
                            expression (lib/set.ml[506,15811+12]..[506,15811+35])
                              Pexp_apply
                              expression (lib/set.ml[506,15811+12]..[506,15811+29])
                                Pexp_ident "find_last_opt_aux" (lib/set.ml[506,15811+12]..[506,15811+29])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[506,15811+30]..[506,15811+31])
                                    Pexp_ident "v" (lib/set.ml[506,15811+30]..[506,15811+31])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[506,15811+32]..[506,15811+33])
                                    Pexp_ident "f" (lib/set.ml[506,15811+32]..[506,15811+33])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[506,15811+34]..[506,15811+35])
                                    Pexp_ident "r" (lib/set.ml[506,15811+34]..[506,15811+35])
                              ]
                            Some
                              expression (lib/set.ml[508,15862+12]..[508,15862+29])
                                Pexp_apply
                                expression (lib/set.ml[508,15862+12]..[508,15862+25])
                                  Pexp_ident "find_last_opt" (lib/set.ml[508,15862+12]..[508,15862+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[508,15862+26]..[508,15862+27])
                                      Pexp_ident "f" (lib/set.ml[508,15862+26]..[508,15862+27])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[508,15862+28]..[508,15862+29])
                                      Pexp_ident "l" (lib/set.ml[508,15862+28]..[508,15862+29])
                                ]
                      ]
              ]
            structure_item (lib/set.ml[510,15893+4]..[515,16042+50])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[510,15893+12]..[510,15893+20])
                    Ppat_var "find_opt" (lib/set.ml[510,15893+12]..[510,15893+20])
                  expression (lib/set.ml[510,15893+21]..[515,16042+50]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[510,15893+21]..[510,15893+22])
                        Nolabel
                        None
                        pattern (lib/set.ml[510,15893+21]..[510,15893+22])
                          Ppat_var "x" (lib/set.ml[510,15893+21]..[510,15893+22])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[510,15893+25]..[515,16042+50])
                      [
                        <case>
                          pattern (lib/set.ml[511,15927+8]..[511,15927+13])
                            Ppat_construct "Empty" (lib/set.ml[511,15927+8]..[511,15927+13])
                            None
                          expression (lib/set.ml[511,15927+17]..[511,15927+21])
                            Pexp_construct "None" (lib/set.ml[511,15927+17]..[511,15927+21])
                            None
                        <case>
                          pattern (lib/set.ml[512,15949+8]..[512,15949+21])
                            Ppat_construct "Node" (lib/set.ml[512,15949+8]..[512,15949+12])
                            Some
                              []
                              pattern (lib/set.ml[512,15949+12]..[512,15949+21])
                                Ppat_record Closed
                                [
                                  "l" (lib/set.ml[512,15949+13]..[512,15949+14]) ghost
                                    pattern (lib/set.ml[512,15949+13]..[512,15949+14])
                                      Ppat_var "l" (lib/set.ml[512,15949+13]..[512,15949+14])
                                  "v" (lib/set.ml[512,15949+16]..[512,15949+17]) ghost
                                    pattern (lib/set.ml[512,15949+16]..[512,15949+17])
                                      Ppat_var "v" (lib/set.ml[512,15949+16]..[512,15949+17])
                                  "r" (lib/set.ml[512,15949+19]..[512,15949+20]) ghost
                                    pattern (lib/set.ml[512,15949+19]..[512,15949+20])
                                      Ppat_var "r" (lib/set.ml[512,15949+19]..[512,15949+20])
                                ]
                          expression (lib/set.ml[513,15974+10]..[515,16042+50])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[513,15974+14]..[513,15974+15])
                                  Ppat_var "c" (lib/set.ml[513,15974+14]..[513,15974+15])
                                expression (lib/set.ml[513,15974+18]..[513,15974+33])
                                  Pexp_apply
                                  expression (lib/set.ml[513,15974+18]..[513,15974+29])
                                    Pexp_ident "Ord.compare" (lib/set.ml[513,15974+18]..[513,15974+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[513,15974+30]..[513,15974+31])
                                        Pexp_ident "x" (lib/set.ml[513,15974+30]..[513,15974+31])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[513,15974+32]..[513,15974+33])
                                        Pexp_ident "v" (lib/set.ml[513,15974+32]..[513,15974+33])
                                  ]
                            ]
                            expression (lib/set.ml[514,16011+10]..[515,16042+50])
                              Pexp_ifthenelse
                              expression (lib/set.ml[514,16011+13]..[514,16011+18])
                                Pexp_apply
                                expression (lib/set.ml[514,16011+15]..[514,16011+16])
                                  Pexp_ident "=" (lib/set.ml[514,16011+15]..[514,16011+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[514,16011+13]..[514,16011+14])
                                      Pexp_ident "c" (lib/set.ml[514,16011+13]..[514,16011+14])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[514,16011+17]..[514,16011+18])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (lib/set.ml[514,16011+24]..[514,16011+30])
                                Pexp_construct "Some" (lib/set.ml[514,16011+24]..[514,16011+28])
                                Some
                                  expression (lib/set.ml[514,16011+29]..[514,16011+30])
                                    Pexp_ident "v" (lib/set.ml[514,16011+29]..[514,16011+30])
                              Some
                                expression (lib/set.ml[515,16042+15]..[515,16042+50])
                                  Pexp_apply
                                  expression (lib/set.ml[515,16042+15]..[515,16042+23])
                                    Pexp_ident "find_opt" (lib/set.ml[515,16042+15]..[515,16042+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[515,16042+24]..[515,16042+25])
                                        Pexp_ident "x" (lib/set.ml[515,16042+24]..[515,16042+25])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[515,16042+26]..[515,16042+50])
                                        Pexp_ifthenelse
                                        expression (lib/set.ml[515,16042+30]..[515,16042+35])
                                          Pexp_apply
                                          expression (lib/set.ml[515,16042+32]..[515,16042+33])
                                            Pexp_ident "<" (lib/set.ml[515,16042+32]..[515,16042+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[515,16042+30]..[515,16042+31])
                                                Pexp_ident "c" (lib/set.ml[515,16042+30]..[515,16042+31])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[515,16042+34]..[515,16042+35])
                                                Pexp_constant PConst_int (0,None)
                                          ]
                                        expression (lib/set.ml[515,16042+41]..[515,16042+42])
                                          Pexp_ident "l" (lib/set.ml[515,16042+41]..[515,16042+42])
                                        Some
                                          expression (lib/set.ml[515,16042+48]..[515,16042+49])
                                            Pexp_ident "r" (lib/set.ml[515,16042+48]..[515,16042+49])
                                  ]
                      ]
              ]
            structure_item (lib/set.ml[517,16094+4]..[524,16452+28])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[517,16094+8]..[517,16094+16])
                    Ppat_var "try_join" (lib/set.ml[517,16094+8]..[517,16094+16])
                  expression (lib/set.ml[517,16094+17]..[524,16452+28]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[517,16094+17]..[517,16094+18])
                        Nolabel
                        None
                        pattern (lib/set.ml[517,16094+17]..[517,16094+18])
                          Ppat_var "l" (lib/set.ml[517,16094+17]..[517,16094+18])
                      Pparam_val (lib/set.ml[517,16094+19]..[517,16094+20])
                        Nolabel
                        None
                        pattern (lib/set.ml[517,16094+19]..[517,16094+20])
                          Ppat_var "v" (lib/set.ml[517,16094+19]..[517,16094+20])
                      Pparam_val (lib/set.ml[517,16094+21]..[517,16094+22])
                        Nolabel
                        None
                        pattern (lib/set.ml[517,16094+21]..[517,16094+22])
                          Ppat_var "r" (lib/set.ml[517,16094+21]..[517,16094+22])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[521,16322+6]..[524,16452+28])
                        Pexp_ifthenelse
                        expression (lib/set.ml[521,16322+9]..[522,16376+53])
                          Pexp_apply
                          expression (lib/set.ml[522,16376+6]..[522,16376+8])
                            Pexp_ident "&&" (lib/set.ml[522,16376+6]..[522,16376+8])
                          [
                            <arg>
                            Nolabel
                              expression (lib/set.ml[521,16322+9]..[521,16322+53])
                                Pexp_apply
                                expression (lib/set.ml[521,16322+20]..[521,16322+22])
                                  Pexp_ident "||" (lib/set.ml[521,16322+20]..[521,16322+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[521,16322+10]..[521,16322+19])
                                      Pexp_apply
                                      expression (lib/set.ml[521,16322+12]..[521,16322+13])
                                        Pexp_ident "=" (lib/set.ml[521,16322+12]..[521,16322+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[521,16322+10]..[521,16322+11])
                                            Pexp_ident "l" (lib/set.ml[521,16322+10]..[521,16322+11])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[521,16322+14]..[521,16322+19])
                                            Pexp_construct "Empty" (lib/set.ml[521,16322+14]..[521,16322+19])
                                            None
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[521,16322+23]..[521,16322+52])
                                      Pexp_apply
                                      expression (lib/set.ml[521,16322+49]..[521,16322+50])
                                        Pexp_ident "<" (lib/set.ml[521,16322+49]..[521,16322+50])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[521,16322+23]..[521,16322+48])
                                            Pexp_apply
                                            expression (lib/set.ml[521,16322+23]..[521,16322+34])
                                              Pexp_ident "Ord.compare" (lib/set.ml[521,16322+23]..[521,16322+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[521,16322+35]..[521,16322+46])
                                                  Pexp_apply
                                                  expression (lib/set.ml[521,16322+36]..[521,16322+43])
                                                    Pexp_ident "max_elt" (lib/set.ml[521,16322+36]..[521,16322+43])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/set.ml[521,16322+44]..[521,16322+45])
                                                        Pexp_ident "l" (lib/set.ml[521,16322+44]..[521,16322+45])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[521,16322+47]..[521,16322+48])
                                                  Pexp_ident "v" (lib/set.ml[521,16322+47]..[521,16322+48])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[521,16322+51]..[521,16322+52])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (lib/set.ml[522,16376+9]..[522,16376+53])
                                Pexp_apply
                                expression (lib/set.ml[522,16376+20]..[522,16376+22])
                                  Pexp_ident "||" (lib/set.ml[522,16376+20]..[522,16376+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[522,16376+10]..[522,16376+19])
                                      Pexp_apply
                                      expression (lib/set.ml[522,16376+12]..[522,16376+13])
                                        Pexp_ident "=" (lib/set.ml[522,16376+12]..[522,16376+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[522,16376+10]..[522,16376+11])
                                            Pexp_ident "r" (lib/set.ml[522,16376+10]..[522,16376+11])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[522,16376+14]..[522,16376+19])
                                            Pexp_construct "Empty" (lib/set.ml[522,16376+14]..[522,16376+19])
                                            None
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[522,16376+23]..[522,16376+52])
                                      Pexp_apply
                                      expression (lib/set.ml[522,16376+49]..[522,16376+50])
                                        Pexp_ident "<" (lib/set.ml[522,16376+49]..[522,16376+50])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[522,16376+23]..[522,16376+48])
                                            Pexp_apply
                                            expression (lib/set.ml[522,16376+23]..[522,16376+34])
                                              Pexp_ident "Ord.compare" (lib/set.ml[522,16376+23]..[522,16376+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[522,16376+35]..[522,16376+36])
                                                  Pexp_ident "v" (lib/set.ml[522,16376+35]..[522,16376+36])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[522,16376+37]..[522,16376+48])
                                                  Pexp_apply
                                                  expression (lib/set.ml[522,16376+38]..[522,16376+45])
                                                    Pexp_ident "min_elt" (lib/set.ml[522,16376+38]..[522,16376+45])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/set.ml[522,16376+46]..[522,16376+47])
                                                        Pexp_ident "r" (lib/set.ml[522,16376+46]..[522,16376+47])
                                                  ]
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[522,16376+51]..[522,16376+52])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                ]
                          ]
                        expression (lib/set.ml[523,16430+11]..[523,16430+21])
                          Pexp_apply
                          expression (lib/set.ml[523,16430+11]..[523,16430+15])
                            Pexp_ident "join" (lib/set.ml[523,16430+11]..[523,16430+15])
                          [
                            <arg>
                            Nolabel
                              expression (lib/set.ml[523,16430+16]..[523,16430+17])
                                Pexp_ident "l" (lib/set.ml[523,16430+16]..[523,16430+17])
                            <arg>
                            Nolabel
                              expression (lib/set.ml[523,16430+18]..[523,16430+19])
                                Pexp_ident "v" (lib/set.ml[523,16430+18]..[523,16430+19])
                            <arg>
                            Nolabel
                              expression (lib/set.ml[523,16430+20]..[523,16430+21])
                                Pexp_ident "r" (lib/set.ml[523,16430+20]..[523,16430+21])
                          ]
                        Some
                          expression (lib/set.ml[524,16452+11]..[524,16452+28])
                            Pexp_apply
                            expression (lib/set.ml[524,16452+11]..[524,16452+16])
                              Pexp_ident "union" (lib/set.ml[524,16452+11]..[524,16452+16])
                            [
                              <arg>
                              Nolabel
                                expression (lib/set.ml[524,16452+17]..[524,16452+18])
                                  Pexp_ident "l" (lib/set.ml[524,16452+17]..[524,16452+18])
                              <arg>
                              Nolabel
                                expression (lib/set.ml[524,16452+19]..[524,16452+28])
                                  Pexp_apply
                                  expression (lib/set.ml[524,16452+20]..[524,16452+23])
                                    Pexp_ident "add" (lib/set.ml[524,16452+20]..[524,16452+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[524,16452+24]..[524,16452+25])
                                        Pexp_ident "v" (lib/set.ml[524,16452+24]..[524,16452+25])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[524,16452+26]..[524,16452+27])
                                        Pexp_ident "r" (lib/set.ml[524,16452+26]..[524,16452+27])
                                  ]
                            ]
              ]
            structure_item (lib/set.ml[526,16482+4]..[534,16750+31])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[526,16482+12]..[526,16482+15])
                    Ppat_var "map" (lib/set.ml[526,16482+12]..[526,16482+15])
                  expression (lib/set.ml[526,16482+16]..[534,16750+31]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[526,16482+16]..[526,16482+17])
                        Nolabel
                        None
                        pattern (lib/set.ml[526,16482+16]..[526,16482+17])
                          Ppat_var "f" (lib/set.ml[526,16482+16]..[526,16482+17])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[526,16482+20]..[534,16750+31])
                      [
                        <case>
                          pattern (lib/set.ml[527,16511+8]..[527,16511+13])
                            Ppat_construct "Empty" (lib/set.ml[527,16511+8]..[527,16511+13])
                            None
                          expression (lib/set.ml[527,16511+17]..[527,16511+22])
                            Pexp_construct "Empty" (lib/set.ml[527,16511+17]..[527,16511+22])
                            None
                        <case>
                          pattern (lib/set.ml[528,16534+8]..[528,16534+26])
                            Ppat_alias "t" (lib/set.ml[528,16534+25]..[528,16534+26])
                            pattern (lib/set.ml[528,16534+8]..[528,16534+21])
                              Ppat_construct "Node" (lib/set.ml[528,16534+8]..[528,16534+12])
                              Some
                                []
                                pattern (lib/set.ml[528,16534+12]..[528,16534+21])
                                  Ppat_record Closed
                                  [
                                    "l" (lib/set.ml[528,16534+13]..[528,16534+14]) ghost
                                      pattern (lib/set.ml[528,16534+13]..[528,16534+14])
                                        Ppat_var "l" (lib/set.ml[528,16534+13]..[528,16534+14])
                                    "v" (lib/set.ml[528,16534+16]..[528,16534+17]) ghost
                                      pattern (lib/set.ml[528,16534+16]..[528,16534+17])
                                        Ppat_var "v" (lib/set.ml[528,16534+16]..[528,16534+17])
                                    "r" (lib/set.ml[528,16534+19]..[528,16534+20]) ghost
                                      pattern (lib/set.ml[528,16534+19]..[528,16534+20])
                                        Ppat_var "r" (lib/set.ml[528,16534+19]..[528,16534+20])
                                  ]
                          expression (lib/set.ml[530,16618+9]..[534,16750+31])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[530,16618+13]..[530,16618+15])
                                  Ppat_var "l'" (lib/set.ml[530,16618+13]..[530,16618+15])
                                expression (lib/set.ml[530,16618+18]..[530,16618+25])
                                  Pexp_apply
                                  expression (lib/set.ml[530,16618+18]..[530,16618+21])
                                    Pexp_ident "map" (lib/set.ml[530,16618+18]..[530,16618+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[530,16618+22]..[530,16618+23])
                                        Pexp_ident "f" (lib/set.ml[530,16618+22]..[530,16618+23])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[530,16618+24]..[530,16618+25])
                                        Pexp_ident "l" (lib/set.ml[530,16618+24]..[530,16618+25])
                                  ]
                            ]
                            expression (lib/set.ml[531,16647+9]..[534,16750+31])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/set.ml[531,16647+13]..[531,16647+15])
                                    Ppat_var "v'" (lib/set.ml[531,16647+13]..[531,16647+15])
                                  expression (lib/set.ml[531,16647+18]..[531,16647+21])
                                    Pexp_apply
                                    expression (lib/set.ml[531,16647+18]..[531,16647+19])
                                      Pexp_ident "f" (lib/set.ml[531,16647+18]..[531,16647+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[531,16647+20]..[531,16647+21])
                                          Pexp_ident "v" (lib/set.ml[531,16647+20]..[531,16647+21])
                                    ]
                              ]
                              expression (lib/set.ml[532,16672+9]..[534,16750+31])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/set.ml[532,16672+13]..[532,16672+15])
                                      Ppat_var "r'" (lib/set.ml[532,16672+13]..[532,16672+15])
                                    expression (lib/set.ml[532,16672+18]..[532,16672+25])
                                      Pexp_apply
                                      expression (lib/set.ml[532,16672+18]..[532,16672+21])
                                        Pexp_ident "map" (lib/set.ml[532,16672+18]..[532,16672+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[532,16672+22]..[532,16672+23])
                                            Pexp_ident "f" (lib/set.ml[532,16672+22]..[532,16672+23])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[532,16672+24]..[532,16672+25])
                                            Pexp_ident "r" (lib/set.ml[532,16672+24]..[532,16672+25])
                                      ]
                                ]
                                expression (lib/set.ml[533,16701+9]..[534,16750+31])
                                  Pexp_ifthenelse
                                  expression (lib/set.ml[533,16701+12]..[533,16701+41])
                                    Pexp_apply
                                    expression (lib/set.ml[533,16701+20]..[533,16701+22])
                                      Pexp_ident "&&" (lib/set.ml[533,16701+20]..[533,16701+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[533,16701+12]..[533,16701+19])
                                          Pexp_apply
                                          expression (lib/set.ml[533,16701+14]..[533,16701+16])
                                            Pexp_ident "==" (lib/set.ml[533,16701+14]..[533,16701+16])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[533,16701+12]..[533,16701+13])
                                                Pexp_ident "l" (lib/set.ml[533,16701+12]..[533,16701+13])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[533,16701+17]..[533,16701+19])
                                                Pexp_ident "l'" (lib/set.ml[533,16701+17]..[533,16701+19])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[533,16701+23]..[533,16701+41])
                                          Pexp_apply
                                          expression (lib/set.ml[533,16701+31]..[533,16701+33])
                                            Pexp_ident "&&" (lib/set.ml[533,16701+31]..[533,16701+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[533,16701+23]..[533,16701+30])
                                                Pexp_apply
                                                expression (lib/set.ml[533,16701+25]..[533,16701+27])
                                                  Pexp_ident "==" (lib/set.ml[533,16701+25]..[533,16701+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[533,16701+23]..[533,16701+24])
                                                      Pexp_ident "v" (lib/set.ml[533,16701+23]..[533,16701+24])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[533,16701+28]..[533,16701+30])
                                                      Pexp_ident "v'" (lib/set.ml[533,16701+28]..[533,16701+30])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[533,16701+34]..[533,16701+41])
                                                Pexp_apply
                                                expression (lib/set.ml[533,16701+36]..[533,16701+38])
                                                  Pexp_ident "==" (lib/set.ml[533,16701+36]..[533,16701+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[533,16701+34]..[533,16701+35])
                                                      Pexp_ident "r" (lib/set.ml[533,16701+34]..[533,16701+35])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[533,16701+39]..[533,16701+41])
                                                      Pexp_ident "r'" (lib/set.ml[533,16701+39]..[533,16701+41])
                                                ]
                                          ]
                                    ]
                                  expression (lib/set.ml[533,16701+47]..[533,16701+48])
                                    Pexp_ident "t" (lib/set.ml[533,16701+47]..[533,16701+48])
                                  Some
                                    expression (lib/set.ml[534,16750+14]..[534,16750+31])
                                      Pexp_apply
                                      expression (lib/set.ml[534,16750+14]..[534,16750+22])
                                        Pexp_ident "try_join" (lib/set.ml[534,16750+14]..[534,16750+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[534,16750+23]..[534,16750+25])
                                            Pexp_ident "l'" (lib/set.ml[534,16750+23]..[534,16750+25])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[534,16750+26]..[534,16750+28])
                                            Pexp_ident "v'" (lib/set.ml[534,16750+26]..[534,16750+28])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[534,16750+29]..[534,16750+31])
                                            Pexp_ident "r'" (lib/set.ml[534,16750+29]..[534,16750+31])
                                      ]
                      ]
              ]
            structure_item (lib/set.ml[536,16783+4]..[540,16884+62])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[536,16783+8]..[536,16783+18])
                    Ppat_var "try_concat" (lib/set.ml[536,16783+8]..[536,16783+18])
                  expression (lib/set.ml[536,16783+19]..[540,16884+62]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[536,16783+19]..[536,16783+21])
                        Nolabel
                        None
                        pattern (lib/set.ml[536,16783+19]..[536,16783+21])
                          Ppat_var "t1" (lib/set.ml[536,16783+19]..[536,16783+21])
                      Pparam_val (lib/set.ml[536,16783+22]..[536,16783+24])
                        Nolabel
                        None
                        pattern (lib/set.ml[536,16783+22]..[536,16783+24])
                          Ppat_var "t2" (lib/set.ml[536,16783+22]..[536,16783+24])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[537,16810+6]..[540,16884+62])
                        Pexp_match
                        expression (lib/set.ml[537,16810+12]..[537,16810+20])
                          Pexp_tuple
                          [
                            expression (lib/set.ml[537,16810+13]..[537,16810+15])
                              Pexp_ident "t1" (lib/set.ml[537,16810+13]..[537,16810+15])
                            expression (lib/set.ml[537,16810+17]..[537,16810+19])
                              Pexp_ident "t2" (lib/set.ml[537,16810+17]..[537,16810+19])
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[538,16836+8]..[538,16836+18])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[538,16836+9]..[538,16836+14])
                                  Ppat_construct "Empty" (lib/set.ml[538,16836+9]..[538,16836+14])
                                  None
                                pattern (lib/set.ml[538,16836+16]..[538,16836+17])
                                  Ppat_var "t" (lib/set.ml[538,16836+16]..[538,16836+17])
                              ]
                            expression (lib/set.ml[538,16836+22]..[538,16836+23])
                              Pexp_ident "t" (lib/set.ml[538,16836+22]..[538,16836+23])
                          <case>
                            pattern (lib/set.ml[539,16860+8]..[539,16860+18])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[539,16860+9]..[539,16860+10])
                                  Ppat_var "t" (lib/set.ml[539,16860+9]..[539,16860+10])
                                pattern (lib/set.ml[539,16860+12]..[539,16860+17])
                                  Ppat_construct "Empty" (lib/set.ml[539,16860+12]..[539,16860+17])
                                  None
                              ]
                            expression (lib/set.ml[539,16860+22]..[539,16860+23])
                              Pexp_ident "t" (lib/set.ml[539,16860+22]..[539,16860+23])
                          <case>
                            pattern (lib/set.ml[540,16884+8]..[540,16884+14])
                              Ppat_tuple
                              [
                                pattern (lib/set.ml[540,16884+9]..[540,16884+10])
                                  Ppat_any
                                pattern (lib/set.ml[540,16884+12]..[540,16884+13])
                                  Ppat_any
                              ]
                            expression (lib/set.ml[540,16884+18]..[540,16884+62])
                              Pexp_apply
                              expression (lib/set.ml[540,16884+18]..[540,16884+26])
                                Pexp_ident "try_join" (lib/set.ml[540,16884+18]..[540,16884+26])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[540,16884+27]..[540,16884+29])
                                    Pexp_ident "t1" (lib/set.ml[540,16884+27]..[540,16884+29])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[540,16884+30]..[540,16884+42])
                                    Pexp_apply
                                    expression (lib/set.ml[540,16884+31]..[540,16884+38])
                                      Pexp_ident "min_elt" (lib/set.ml[540,16884+31]..[540,16884+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[540,16884+39]..[540,16884+41])
                                          Pexp_ident "t2" (lib/set.ml[540,16884+39]..[540,16884+41])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[540,16884+43]..[540,16884+62])
                                    Pexp_apply
                                    expression (lib/set.ml[540,16884+44]..[540,16884+58])
                                      Pexp_ident "remove_min_elt" (lib/set.ml[540,16884+44]..[540,16884+58])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[540,16884+59]..[540,16884+61])
                                          Pexp_ident "t2" (lib/set.ml[540,16884+59]..[540,16884+61])
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[542,16948+4]..[555,17384+12])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[542,16948+12]..[542,16948+22])
                    Ppat_var "filter_map" (lib/set.ml[542,16948+12]..[542,16948+22])
                  expression (lib/set.ml[542,16948+23]..[555,17384+12]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[542,16948+23]..[542,16948+24])
                        Nolabel
                        None
                        pattern (lib/set.ml[542,16948+23]..[542,16948+24])
                          Ppat_var "f" (lib/set.ml[542,16948+23]..[542,16948+24])
                    ]
                    None
                    Pfunction_cases (lib/set.ml[542,16948+27]..[555,17384+12])
                      [
                        <case>
                          pattern (lib/set.ml[543,16984+8]..[543,16984+13])
                            Ppat_construct "Empty" (lib/set.ml[543,16984+8]..[543,16984+13])
                            None
                          expression (lib/set.ml[543,16984+17]..[543,16984+22])
                            Pexp_construct "Empty" (lib/set.ml[543,16984+17]..[543,16984+22])
                            None
                        <case>
                          pattern (lib/set.ml[544,17007+8]..[544,17007+26])
                            Ppat_alias "t" (lib/set.ml[544,17007+25]..[544,17007+26])
                            pattern (lib/set.ml[544,17007+8]..[544,17007+21])
                              Ppat_construct "Node" (lib/set.ml[544,17007+8]..[544,17007+12])
                              Some
                                []
                                pattern (lib/set.ml[544,17007+12]..[544,17007+21])
                                  Ppat_record Closed
                                  [
                                    "l" (lib/set.ml[544,17007+13]..[544,17007+14]) ghost
                                      pattern (lib/set.ml[544,17007+13]..[544,17007+14])
                                        Ppat_var "l" (lib/set.ml[544,17007+13]..[544,17007+14])
                                    "v" (lib/set.ml[544,17007+16]..[544,17007+17]) ghost
                                      pattern (lib/set.ml[544,17007+16]..[544,17007+17])
                                        Ppat_var "v" (lib/set.ml[544,17007+16]..[544,17007+17])
                                    "r" (lib/set.ml[544,17007+19]..[544,17007+20]) ghost
                                      pattern (lib/set.ml[544,17007+19]..[544,17007+20])
                                        Ppat_var "r" (lib/set.ml[544,17007+19]..[544,17007+20])
                                  ]
                          expression (lib/set.ml[546,17091+9]..[555,17384+12])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[546,17091+13]..[546,17091+15])
                                  Ppat_var "l'" (lib/set.ml[546,17091+13]..[546,17091+15])
                                expression (lib/set.ml[546,17091+18]..[546,17091+32])
                                  Pexp_apply
                                  expression (lib/set.ml[546,17091+18]..[546,17091+28])
                                    Pexp_ident "filter_map" (lib/set.ml[546,17091+18]..[546,17091+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[546,17091+29]..[546,17091+30])
                                        Pexp_ident "f" (lib/set.ml[546,17091+29]..[546,17091+30])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[546,17091+31]..[546,17091+32])
                                        Pexp_ident "l" (lib/set.ml[546,17091+31]..[546,17091+32])
                                  ]
                            ]
                            expression (lib/set.ml[547,17127+9]..[555,17384+12])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/set.ml[547,17127+13]..[547,17127+15])
                                    Ppat_var "v'" (lib/set.ml[547,17127+13]..[547,17127+15])
                                  expression (lib/set.ml[547,17127+18]..[547,17127+21])
                                    Pexp_apply
                                    expression (lib/set.ml[547,17127+18]..[547,17127+19])
                                      Pexp_ident "f" (lib/set.ml[547,17127+18]..[547,17127+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[547,17127+20]..[547,17127+21])
                                          Pexp_ident "v" (lib/set.ml[547,17127+20]..[547,17127+21])
                                    ]
                              ]
                              expression (lib/set.ml[548,17152+9]..[555,17384+12])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/set.ml[548,17152+13]..[548,17152+15])
                                      Ppat_var "r'" (lib/set.ml[548,17152+13]..[548,17152+15])
                                    expression (lib/set.ml[548,17152+18]..[548,17152+32])
                                      Pexp_apply
                                      expression (lib/set.ml[548,17152+18]..[548,17152+28])
                                        Pexp_ident "filter_map" (lib/set.ml[548,17152+18]..[548,17152+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[548,17152+29]..[548,17152+30])
                                            Pexp_ident "f" (lib/set.ml[548,17152+29]..[548,17152+30])
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[548,17152+31]..[548,17152+32])
                                            Pexp_ident "r" (lib/set.ml[548,17152+31]..[548,17152+32])
                                      ]
                                ]
                                expression (lib/set.ml[549,17188+9]..[555,17384+12])
                                  Pexp_match
                                  expression (lib/set.ml[549,17188+21]..[549,17188+23])
                                    Pexp_ident "v'" (lib/set.ml[549,17188+21]..[549,17188+23])
                                  [
                                    <case>
                                      pattern (lib/set.ml[550,17217+13]..[550,17217+20])
                                        Ppat_construct "Some" (lib/set.ml[550,17217+13]..[550,17217+17])
                                        Some
                                          []
                                          pattern (lib/set.ml[550,17217+18]..[550,17217+20])
                                            Ppat_var "v'" (lib/set.ml[550,17217+18]..[550,17217+20])
                                      expression (lib/set.ml[551,17241+14]..[552,17295+36])
                                        Pexp_ifthenelse
                                        expression (lib/set.ml[551,17241+17]..[551,17241+46])
                                          Pexp_apply
                                          expression (lib/set.ml[551,17241+25]..[551,17241+27])
                                            Pexp_ident "&&" (lib/set.ml[551,17241+25]..[551,17241+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[551,17241+17]..[551,17241+24])
                                                Pexp_apply
                                                expression (lib/set.ml[551,17241+19]..[551,17241+21])
                                                  Pexp_ident "==" (lib/set.ml[551,17241+19]..[551,17241+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[551,17241+17]..[551,17241+18])
                                                      Pexp_ident "l" (lib/set.ml[551,17241+17]..[551,17241+18])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[551,17241+22]..[551,17241+24])
                                                      Pexp_ident "l'" (lib/set.ml[551,17241+22]..[551,17241+24])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[551,17241+28]..[551,17241+46])
                                                Pexp_apply
                                                expression (lib/set.ml[551,17241+36]..[551,17241+38])
                                                  Pexp_ident "&&" (lib/set.ml[551,17241+36]..[551,17241+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[551,17241+28]..[551,17241+35])
                                                      Pexp_apply
                                                      expression (lib/set.ml[551,17241+30]..[551,17241+32])
                                                        Pexp_ident "==" (lib/set.ml[551,17241+30]..[551,17241+32])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/set.ml[551,17241+28]..[551,17241+29])
                                                            Pexp_ident "v" (lib/set.ml[551,17241+28]..[551,17241+29])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/set.ml[551,17241+33]..[551,17241+35])
                                                            Pexp_ident "v'" (lib/set.ml[551,17241+33]..[551,17241+35])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[551,17241+39]..[551,17241+46])
                                                      Pexp_apply
                                                      expression (lib/set.ml[551,17241+41]..[551,17241+43])
                                                        Pexp_ident "==" (lib/set.ml[551,17241+41]..[551,17241+43])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/set.ml[551,17241+39]..[551,17241+40])
                                                            Pexp_ident "r" (lib/set.ml[551,17241+39]..[551,17241+40])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/set.ml[551,17241+44]..[551,17241+46])
                                                            Pexp_ident "r'" (lib/set.ml[551,17241+44]..[551,17241+46])
                                                      ]
                                                ]
                                          ]
                                        expression (lib/set.ml[551,17241+52]..[551,17241+53])
                                          Pexp_ident "t" (lib/set.ml[551,17241+52]..[551,17241+53])
                                        Some
                                          expression (lib/set.ml[552,17295+19]..[552,17295+36])
                                            Pexp_apply
                                            expression (lib/set.ml[552,17295+19]..[552,17295+27])
                                              Pexp_ident "try_join" (lib/set.ml[552,17295+19]..[552,17295+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[552,17295+28]..[552,17295+30])
                                                  Pexp_ident "l'" (lib/set.ml[552,17295+28]..[552,17295+30])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[552,17295+31]..[552,17295+33])
                                                  Pexp_ident "v'" (lib/set.ml[552,17295+31]..[552,17295+33])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[552,17295+34]..[552,17295+36])
                                                  Pexp_ident "r'" (lib/set.ml[552,17295+34]..[552,17295+36])
                                            ]
                                    <case>
                                      pattern (lib/set.ml[553,17332+13]..[553,17332+17])
                                        Ppat_construct "None" (lib/set.ml[553,17332+13]..[553,17332+17])
                                        None
                                      expression (lib/set.ml[554,17353+14]..[554,17353+30])
                                        Pexp_apply
                                        expression (lib/set.ml[554,17353+14]..[554,17353+24])
                                          Pexp_ident "try_concat" (lib/set.ml[554,17353+14]..[554,17353+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[554,17353+25]..[554,17353+27])
                                              Pexp_ident "l'" (lib/set.ml[554,17353+25]..[554,17353+27])
                                          <arg>
                                          Nolabel
                                            expression (lib/set.ml[554,17353+28]..[554,17353+30])
                                              Pexp_ident "r'" (lib/set.ml[554,17353+28]..[554,17353+30])
                                        ]
                                  ]
                      ]
              ]
            structure_item (lib/set.ml[557,17398+4]..[576,18082+33])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[557,17398+8]..[557,17398+22])
                    Ppat_var "of_sorted_list" (lib/set.ml[557,17398+8]..[557,17398+22])
                  expression (lib/set.ml[557,17398+23]..[576,18082+33]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[557,17398+23]..[557,17398+24])
                        Nolabel
                        None
                        pattern (lib/set.ml[557,17398+23]..[557,17398+24])
                          Ppat_var "l" (lib/set.ml[557,17398+23]..[557,17398+24])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[558,17425+6]..[576,18082+33])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (lib/set.ml[558,17425+14]..[558,17425+17])
                              Ppat_var "sub" (lib/set.ml[558,17425+14]..[558,17425+17])
                            expression (lib/set.ml[558,17425+18]..[574,18036+36]) ghost
                              Pexp_function
                              [
                                Pparam_val (lib/set.ml[558,17425+18]..[558,17425+19])
                                  Nolabel
                                  None
                                  pattern (lib/set.ml[558,17425+18]..[558,17425+19])
                                    Ppat_var "n" (lib/set.ml[558,17425+18]..[558,17425+19])
                                Pparam_val (lib/set.ml[558,17425+20]..[558,17425+21])
                                  Nolabel
                                  None
                                  pattern (lib/set.ml[558,17425+20]..[558,17425+21])
                                    Ppat_var "l" (lib/set.ml[558,17425+20]..[558,17425+21])
                              ]
                              None
                              Pfunction_body
                                expression (lib/set.ml[559,17449+8]..[574,18036+36])
                                  Pexp_match
                                  expression (lib/set.ml[559,17449+14]..[559,17449+18])
                                    Pexp_tuple
                                    [
                                      expression (lib/set.ml[559,17449+14]..[559,17449+15])
                                        Pexp_ident "n" (lib/set.ml[559,17449+14]..[559,17449+15])
                                      expression (lib/set.ml[559,17449+17]..[559,17449+18])
                                        Pexp_ident "l" (lib/set.ml[559,17449+17]..[559,17449+18])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/set.ml[560,17473+10]..[560,17473+14])
                                        Ppat_tuple
                                        [
                                          pattern (lib/set.ml[560,17473+10]..[560,17473+11])
                                            Ppat_constant PConst_int (0,None)
                                          pattern (lib/set.ml[560,17473+13]..[560,17473+14])
                                            Ppat_var "l" (lib/set.ml[560,17473+13]..[560,17473+14])
                                        ]
                                      expression (lib/set.ml[560,17473+18]..[560,17473+26])
                                        Pexp_tuple
                                        [
                                          expression (lib/set.ml[560,17473+18]..[560,17473+23])
                                            Pexp_construct "Empty" (lib/set.ml[560,17473+18]..[560,17473+23])
                                            None
                                          expression (lib/set.ml[560,17473+25]..[560,17473+26])
                                            Pexp_ident "l" (lib/set.ml[560,17473+25]..[560,17473+26])
                                        ]
                                    <case>
                                      pattern (lib/set.ml[561,17500+10]..[561,17500+20])
                                        Ppat_tuple
                                        [
                                          pattern (lib/set.ml[561,17500+10]..[561,17500+11])
                                            Ppat_constant PConst_int (1,None)
                                          pattern (lib/set.ml[561,17500+13]..[561,17500+20])
                                            Ppat_construct "::" (lib/set.ml[561,17500+16]..[561,17500+18])
                                            Some
                                              []
                                              pattern (lib/set.ml[561,17500+13]..[561,17500+20]) ghost
                                                Ppat_tuple
                                                [
                                                  pattern (lib/set.ml[561,17500+13]..[561,17500+15])
                                                    Ppat_var "x0" (lib/set.ml[561,17500+13]..[561,17500+15])
                                                  pattern (lib/set.ml[561,17500+19]..[561,17500+20])
                                                    Ppat_var "l" (lib/set.ml[561,17500+19]..[561,17500+20])
                                                ]
                                        ]
                                      expression (lib/set.ml[561,17500+24]..[561,17500+61])
                                        Pexp_tuple
                                        [
                                          expression (lib/set.ml[561,17500+24]..[561,17500+58])
                                            Pexp_construct "Node" (lib/set.ml[561,17500+24]..[561,17500+28])
                                            Some
                                              expression (lib/set.ml[561,17500+29]..[561,17500+58])
                                                Pexp_record
                                                [
                                                  "l" (lib/set.ml[561,17500+30]..[561,17500+31])
                                                    expression (lib/set.ml[561,17500+32]..[561,17500+37])
                                                      Pexp_construct "Empty" (lib/set.ml[561,17500+32]..[561,17500+37])
                                                      None
                                                  "v" (lib/set.ml[561,17500+39]..[561,17500+40])
                                                    expression (lib/set.ml[561,17500+41]..[561,17500+43])
                                                      Pexp_ident "x0" (lib/set.ml[561,17500+41]..[561,17500+43])
                                                  "r" (lib/set.ml[561,17500+45]..[561,17500+46])
                                                    expression (lib/set.ml[561,17500+47]..[561,17500+52])
                                                      Pexp_construct "Empty" (lib/set.ml[561,17500+47]..[561,17500+52])
                                                      None
                                                  "h" (lib/set.ml[561,17500+54]..[561,17500+55])
                                                    expression (lib/set.ml[561,17500+56]..[561,17500+57])
                                                      Pexp_constant PConst_int (1,None)
                                                ]
                                                None
                                          expression (lib/set.ml[561,17500+60]..[561,17500+61])
                                            Pexp_ident "l" (lib/set.ml[561,17500+60]..[561,17500+61])
                                        ]
                                    <case>
                                      pattern (lib/set.ml[562,17562+10]..[562,17562+26])
                                        Ppat_tuple
                                        [
                                          pattern (lib/set.ml[562,17562+10]..[562,17562+11])
                                            Ppat_constant PConst_int (2,None)
                                          pattern (lib/set.ml[562,17562+13]..[562,17562+26])
                                            Ppat_construct "::" (lib/set.ml[562,17562+16]..[562,17562+18])
                                            Some
                                              []
                                              pattern (lib/set.ml[562,17562+13]..[562,17562+26]) ghost
                                                Ppat_tuple
                                                [
                                                  pattern (lib/set.ml[562,17562+13]..[562,17562+15])
                                                    Ppat_var "x0" (lib/set.ml[562,17562+13]..[562,17562+15])
                                                  pattern (lib/set.ml[562,17562+19]..[562,17562+26])
                                                    Ppat_construct "::" (lib/set.ml[562,17562+22]..[562,17562+24])
                                                    Some
                                                      []
                                                      pattern (lib/set.ml[562,17562+19]..[562,17562+26]) ghost
                                                        Ppat_tuple
                                                        [
                                                          pattern (lib/set.ml[562,17562+19]..[562,17562+21])
                                                            Ppat_var "x1" (lib/set.ml[562,17562+19]..[562,17562+21])
                                                          pattern (lib/set.ml[562,17562+25]..[562,17562+26])
                                                            Ppat_var "l" (lib/set.ml[562,17562+25]..[562,17562+26])
                                                        ]
                                                ]
                                        ]
                                      expression (lib/set.ml[563,17592+12]..[563,17592+76])
                                        Pexp_tuple
                                        [
                                          expression (lib/set.ml[563,17592+12]..[563,17592+73])
                                            Pexp_construct "Node" (lib/set.ml[563,17592+12]..[563,17592+16])
                                            Some
                                              expression (lib/set.ml[563,17592+16]..[563,17592+73])
                                                Pexp_record
                                                [
                                                  "l" (lib/set.ml[563,17592+17]..[563,17592+18])
                                                    expression (lib/set.ml[563,17592+19]..[563,17592+52])
                                                      Pexp_construct "Node" (lib/set.ml[563,17592+19]..[563,17592+23])
                                                      Some
                                                        expression (lib/set.ml[563,17592+23]..[563,17592+52])
                                                          Pexp_record
                                                          [
                                                            "l" (lib/set.ml[563,17592+24]..[563,17592+25])
                                                              expression (lib/set.ml[563,17592+26]..[563,17592+31])
                                                                Pexp_construct "Empty" (lib/set.ml[563,17592+26]..[563,17592+31])
                                                                None
                                                            "v" (lib/set.ml[563,17592+33]..[563,17592+34])
                                                              expression (lib/set.ml[563,17592+35]..[563,17592+37])
                                                                Pexp_ident "x0" (lib/set.ml[563,17592+35]..[563,17592+37])
                                                            "r" (lib/set.ml[563,17592+39]..[563,17592+40])
                                                              expression (lib/set.ml[563,17592+41]..[563,17592+46])
                                                                Pexp_construct "Empty" (lib/set.ml[563,17592+41]..[563,17592+46])
                                                                None
                                                            "h" (lib/set.ml[563,17592+48]..[563,17592+49])
                                                              expression (lib/set.ml[563,17592+50]..[563,17592+51])
                                                                Pexp_constant PConst_int (1,None)
                                                          ]
                                                          None
                                                  "v" (lib/set.ml[563,17592+54]..[563,17592+55])
                                                    expression (lib/set.ml[563,17592+56]..[563,17592+58])
                                                      Pexp_ident "x1" (lib/set.ml[563,17592+56]..[563,17592+58])
                                                  "r" (lib/set.ml[563,17592+60]..[563,17592+61])
                                                    expression (lib/set.ml[563,17592+62]..[563,17592+67])
                                                      Pexp_construct "Empty" (lib/set.ml[563,17592+62]..[563,17592+67])
                                                      None
                                                  "h" (lib/set.ml[563,17592+69]..[563,17592+70])
                                                    expression (lib/set.ml[563,17592+71]..[563,17592+72])
                                                      Pexp_constant PConst_int (2,None)
                                                ]
                                                None
                                          expression (lib/set.ml[563,17592+75]..[563,17592+76])
                                            Pexp_ident "l" (lib/set.ml[563,17592+75]..[563,17592+76])
                                        ]
                                    <case>
                                      pattern (lib/set.ml[564,17669+10]..[564,17669+32])
                                        Ppat_tuple
                                        [
                                          pattern (lib/set.ml[564,17669+10]..[564,17669+11])
                                            Ppat_constant PConst_int (3,None)
                                          pattern (lib/set.ml[564,17669+13]..[564,17669+32])
                                            Ppat_construct "::" (lib/set.ml[564,17669+16]..[564,17669+18])
                                            Some
                                              []
                                              pattern (lib/set.ml[564,17669+13]..[564,17669+32]) ghost
                                                Ppat_tuple
                                                [
                                                  pattern (lib/set.ml[564,17669+13]..[564,17669+15])
                                                    Ppat_var "x0" (lib/set.ml[564,17669+13]..[564,17669+15])
                                                  pattern (lib/set.ml[564,17669+19]..[564,17669+32])
                                                    Ppat_construct "::" (lib/set.ml[564,17669+22]..[564,17669+24])
                                                    Some
                                                      []
                                                      pattern (lib/set.ml[564,17669+19]..[564,17669+32]) ghost
                                                        Ppat_tuple
                                                        [
                                                          pattern (lib/set.ml[564,17669+19]..[564,17669+21])
                                                            Ppat_var "x1" (lib/set.ml[564,17669+19]..[564,17669+21])
                                                          pattern (lib/set.ml[564,17669+25]..[564,17669+32])
                                                            Ppat_construct "::" (lib/set.ml[564,17669+28]..[564,17669+30])
                                                            Some
                                                              []
                                                              pattern (lib/set.ml[564,17669+25]..[564,17669+32]) ghost
                                                                Ppat_tuple
                                                                [
                                                                  pattern (lib/set.ml[564,17669+25]..[564,17669+27])
                                                                    Ppat_var "x2" (lib/set.ml[564,17669+25]..[564,17669+27])
                                                                  pattern (lib/set.ml[564,17669+31]..[564,17669+32])
                                                                    Ppat_var "l" (lib/set.ml[564,17669+31]..[564,17669+32])
                                                                ]
                                                        ]
                                                ]
                                        ]
                                      expression (lib/set.ml[565,17705+12]..[566,17765+61])
                                        Pexp_tuple
                                        [
                                          expression (lib/set.ml[565,17705+12]..[566,17765+58])
                                            Pexp_construct "Node" (lib/set.ml[565,17705+12]..[565,17705+16])
                                            Some
                                              expression (lib/set.ml[565,17705+16]..[566,17765+58])
                                                Pexp_record
                                                [
                                                  "l" (lib/set.ml[565,17705+17]..[565,17705+18])
                                                    expression (lib/set.ml[565,17705+19]..[565,17705+52])
                                                      Pexp_construct "Node" (lib/set.ml[565,17705+19]..[565,17705+23])
                                                      Some
                                                        expression (lib/set.ml[565,17705+23]..[565,17705+52])
                                                          Pexp_record
                                                          [
                                                            "l" (lib/set.ml[565,17705+24]..[565,17705+25])
                                                              expression (lib/set.ml[565,17705+26]..[565,17705+31])
                                                                Pexp_construct "Empty" (lib/set.ml[565,17705+26]..[565,17705+31])
                                                                None
                                                            "v" (lib/set.ml[565,17705+33]..[565,17705+34])
                                                              expression (lib/set.ml[565,17705+35]..[565,17705+37])
                                                                Pexp_ident "x0" (lib/set.ml[565,17705+35]..[565,17705+37])
                                                            "r" (lib/set.ml[565,17705+39]..[565,17705+40])
                                                              expression (lib/set.ml[565,17705+41]..[565,17705+46])
                                                                Pexp_construct "Empty" (lib/set.ml[565,17705+41]..[565,17705+46])
                                                                None
                                                            "h" (lib/set.ml[565,17705+48]..[565,17705+49])
                                                              expression (lib/set.ml[565,17705+50]..[565,17705+51])
                                                                Pexp_constant PConst_int (1,None)
                                                          ]
                                                          None
                                                  "v" (lib/set.ml[565,17705+54]..[565,17705+55])
                                                    expression (lib/set.ml[565,17705+56]..[565,17705+58])
                                                      Pexp_ident "x1" (lib/set.ml[565,17705+56]..[565,17705+58])
                                                  "r" (lib/set.ml[566,17765+17]..[566,17765+18])
                                                    expression (lib/set.ml[566,17765+19]..[566,17765+52])
                                                      Pexp_construct "Node" (lib/set.ml[566,17765+19]..[566,17765+23])
                                                      Some
                                                        expression (lib/set.ml[566,17765+23]..[566,17765+52])
                                                          Pexp_record
                                                          [
                                                            "l" (lib/set.ml[566,17765+24]..[566,17765+25])
                                                              expression (lib/set.ml[566,17765+26]..[566,17765+31])
                                                                Pexp_construct "Empty" (lib/set.ml[566,17765+26]..[566,17765+31])
                                                                None
                                                            "v" (lib/set.ml[566,17765+33]..[566,17765+34])
                                                              expression (lib/set.ml[566,17765+35]..[566,17765+37])
                                                                Pexp_ident "x2" (lib/set.ml[566,17765+35]..[566,17765+37])
                                                            "r" (lib/set.ml[566,17765+39]..[566,17765+40])
                                                              expression (lib/set.ml[566,17765+41]..[566,17765+46])
                                                                Pexp_construct "Empty" (lib/set.ml[566,17765+41]..[566,17765+46])
                                                                None
                                                            "h" (lib/set.ml[566,17765+48]..[566,17765+49])
                                                              expression (lib/set.ml[566,17765+50]..[566,17765+51])
                                                                Pexp_constant PConst_int (1,None)
                                                          ]
                                                          None
                                                  "h" (lib/set.ml[566,17765+54]..[566,17765+55])
                                                    expression (lib/set.ml[566,17765+56]..[566,17765+57])
                                                      Pexp_constant PConst_int (2,None)
                                                ]
                                                None
                                          expression (lib/set.ml[566,17765+60]..[566,17765+61])
                                            Pexp_ident "l" (lib/set.ml[566,17765+60]..[566,17765+61])
                                        ]
                                    <case>
                                      pattern (lib/set.ml[567,17827+10]..[567,17827+14])
                                        Ppat_tuple
                                        [
                                          pattern (lib/set.ml[567,17827+10]..[567,17827+11])
                                            Ppat_var "n" (lib/set.ml[567,17827+10]..[567,17827+11])
                                          pattern (lib/set.ml[567,17827+13]..[567,17827+14])
                                            Ppat_var "l" (lib/set.ml[567,17827+13]..[567,17827+14])
                                        ]
                                      expression (lib/set.ml[568,17845+10]..[574,18036+36])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/set.ml[568,17845+14]..[568,17845+16])
                                              Ppat_var "nl" (lib/set.ml[568,17845+14]..[568,17845+16])
                                            expression (lib/set.ml[568,17845+19]..[568,17845+24])
                                              Pexp_apply
                                              expression (lib/set.ml[568,17845+21]..[568,17845+22])
                                                Pexp_ident "/" (lib/set.ml[568,17845+21]..[568,17845+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[568,17845+19]..[568,17845+20])
                                                    Pexp_ident "n" (lib/set.ml[568,17845+19]..[568,17845+20])
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[568,17845+23]..[568,17845+24])
                                                    Pexp_constant PConst_int (2,None)
                                              ]
                                        ]
                                        expression (lib/set.ml[569,17873+10]..[574,18036+36])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/set.ml[569,17873+14]..[569,17873+21])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/set.ml[569,17873+14]..[569,17873+18])
                                                    Ppat_var "left" (lib/set.ml[569,17873+14]..[569,17873+18])
                                                  pattern (lib/set.ml[569,17873+20]..[569,17873+21])
                                                    Ppat_var "l" (lib/set.ml[569,17873+20]..[569,17873+21])
                                                ]
                                              expression (lib/set.ml[569,17873+24]..[569,17873+32])
                                                Pexp_apply
                                                expression (lib/set.ml[569,17873+24]..[569,17873+27])
                                                  Pexp_ident "sub" (lib/set.ml[569,17873+24]..[569,17873+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[569,17873+28]..[569,17873+30])
                                                      Pexp_ident "nl" (lib/set.ml[569,17873+28]..[569,17873+30])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[569,17873+31]..[569,17873+32])
                                                      Pexp_ident "l" (lib/set.ml[569,17873+31]..[569,17873+32])
                                                ]
                                          ]
                                          expression (lib/set.ml[570,17909+10]..[574,18036+36])
                                            Pexp_match
                                            expression (lib/set.ml[570,17909+16]..[570,17909+17])
                                              Pexp_ident "l" (lib/set.ml[570,17909+16]..[570,17909+17])
                                            [
                                              <case>
                                                pattern (lib/set.ml[571,17932+12]..[571,17932+14])
                                                  Ppat_construct "[]" (lib/set.ml[571,17932+12]..[571,17932+14])
                                                  None
                                                expression (lib/set.ml[571,17932+18]..[571,17932+30])
                                                  Pexp_assert
                                                  expression (lib/set.ml[571,17932+25]..[571,17932+30])
                                                    Pexp_construct "false" (lib/set.ml[571,17932+25]..[571,17932+30])
                                                    None
                                              <case>
                                                pattern (lib/set.ml[572,17963+12]..[572,17963+20])
                                                  Ppat_construct "::" (lib/set.ml[572,17963+16]..[572,17963+18])
                                                  Some
                                                    []
                                                    pattern (lib/set.ml[572,17963+12]..[572,17963+20]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (lib/set.ml[572,17963+12]..[572,17963+15])
                                                          Ppat_var "mid" (lib/set.ml[572,17963+12]..[572,17963+15])
                                                        pattern (lib/set.ml[572,17963+19]..[572,17963+20])
                                                          Ppat_var "l" (lib/set.ml[572,17963+19]..[572,17963+20])
                                                      ]
                                                expression (lib/set.ml[573,17987+12]..[574,18036+36])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/set.ml[573,17987+16]..[573,17987+24])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lib/set.ml[573,17987+16]..[573,17987+21])
                                                            Ppat_var "right" (lib/set.ml[573,17987+16]..[573,17987+21])
                                                          pattern (lib/set.ml[573,17987+23]..[573,17987+24])
                                                            Ppat_var "l" (lib/set.ml[573,17987+23]..[573,17987+24])
                                                        ]
                                                      expression (lib/set.ml[573,17987+27]..[573,17987+45])
                                                        Pexp_apply
                                                        expression (lib/set.ml[573,17987+27]..[573,17987+30])
                                                          Pexp_ident "sub" (lib/set.ml[573,17987+27]..[573,17987+30])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/set.ml[573,17987+31]..[573,17987+43])
                                                              Pexp_apply
                                                              expression (lib/set.ml[573,17987+39]..[573,17987+40])
                                                                Pexp_ident "-" (lib/set.ml[573,17987+39]..[573,17987+40])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/set.ml[573,17987+32]..[573,17987+38])
                                                                    Pexp_apply
                                                                    expression (lib/set.ml[573,17987+34]..[573,17987+35])
                                                                      Pexp_ident "-" (lib/set.ml[573,17987+34]..[573,17987+35])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lib/set.ml[573,17987+32]..[573,17987+33])
  Pexp_ident "n" (lib/set.ml[573,17987+32]..[573,17987+33])
                                                                      <arg>
                                                                      Nolabel
expression (lib/set.ml[573,17987+36]..[573,17987+38])
  Pexp_ident "nl" (lib/set.ml[573,17987+36]..[573,17987+38])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/set.ml[573,17987+41]..[573,17987+42])
                                                                    Pexp_constant PConst_int (1,None)
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/set.ml[573,17987+44]..[573,17987+45])
                                                              Pexp_ident "l" (lib/set.ml[573,17987+44]..[573,17987+45])
                                                        ]
                                                  ]
                                                  expression (lib/set.ml[574,18036+12]..[574,18036+36])
                                                    Pexp_tuple
                                                    [
                                                      expression (lib/set.ml[574,18036+12]..[574,18036+33])
                                                        Pexp_apply
                                                        expression (lib/set.ml[574,18036+12]..[574,18036+18])
                                                          Pexp_ident "create" (lib/set.ml[574,18036+12]..[574,18036+18])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/set.ml[574,18036+19]..[574,18036+23])
                                                              Pexp_ident "left" (lib/set.ml[574,18036+19]..[574,18036+23])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/set.ml[574,18036+24]..[574,18036+27])
                                                              Pexp_ident "mid" (lib/set.ml[574,18036+24]..[574,18036+27])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/set.ml[574,18036+28]..[574,18036+33])
                                                              Pexp_ident "right" (lib/set.ml[574,18036+28]..[574,18036+33])
                                                        ]
                                                      expression (lib/set.ml[574,18036+35]..[574,18036+36])
                                                        Pexp_ident "l" (lib/set.ml[574,18036+35]..[574,18036+36])
                                                    ]
                                            ]
                                  ]
                        ]
                        expression (lib/set.ml[576,18082+6]..[576,18082+33])
                          Pexp_apply
                          expression (lib/set.ml[576,18082+6]..[576,18082+9])
                            Pexp_ident "fst" (lib/set.ml[576,18082+6]..[576,18082+9])
                          [
                            <arg>
                            Nolabel
                              expression (lib/set.ml[576,18082+10]..[576,18082+33])
                                Pexp_apply
                                expression (lib/set.ml[576,18082+11]..[576,18082+14])
                                  Pexp_ident "sub" (lib/set.ml[576,18082+11]..[576,18082+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[576,18082+15]..[576,18082+30])
                                      Pexp_apply
                                      expression (lib/set.ml[576,18082+16]..[576,18082+27])
                                        Pexp_ident "List.length" (lib/set.ml[576,18082+16]..[576,18082+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[576,18082+28]..[576,18082+29])
                                            Pexp_ident "l" (lib/set.ml[576,18082+28]..[576,18082+29])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[576,18082+31]..[576,18082+32])
                                      Pexp_ident "l" (lib/set.ml[576,18082+31]..[576,18082+32])
                                ]
                          ]
              ]
            structure_item (lib/set.ml[578,18117+4]..[578,18117+26])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[578,18117+8]..[578,18117+15])
                    Ppat_var "to_list" (lib/set.ml[578,18117+8]..[578,18117+15])
                  expression (lib/set.ml[578,18117+18]..[578,18117+26])
                    Pexp_ident "elements" (lib/set.ml[578,18117+18]..[578,18117+26])
              ]
            structure_item (lib/set.ml[580,18145+4]..[588,18479+58])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[580,18145+8]..[580,18145+15])
                    Ppat_var "of_list" (lib/set.ml[580,18145+8]..[580,18145+15])
                  expression (lib/set.ml[580,18145+16]..[588,18479+58]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[580,18145+16]..[580,18145+17])
                        Nolabel
                        None
                        pattern (lib/set.ml[580,18145+16]..[580,18145+17])
                          Ppat_var "l" (lib/set.ml[580,18145+16]..[580,18145+17])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[581,18165+6]..[588,18479+58])
                        Pexp_match
                        expression (lib/set.ml[581,18165+12]..[581,18165+13])
                          Pexp_ident "l" (lib/set.ml[581,18165+12]..[581,18165+13])
                        [
                          <case>
                            pattern (lib/set.ml[582,18184+8]..[582,18184+10])
                              Ppat_construct "[]" (lib/set.ml[582,18184+8]..[582,18184+10])
                              None
                            expression (lib/set.ml[582,18184+14]..[582,18184+19])
                              Pexp_ident "empty" (lib/set.ml[582,18184+14]..[582,18184+19])
                          <case>
                            pattern (lib/set.ml[583,18204+8]..[583,18204+12])
                              Ppat_construct "::" (lib/set.ml[583,18204+9]..[583,18204+12]) ghost
                              Some
                                []
                                pattern (lib/set.ml[583,18204+9]..[583,18204+12]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (lib/set.ml[583,18204+9]..[583,18204+11])
                                      Ppat_var "x0" (lib/set.ml[583,18204+9]..[583,18204+11])
                                    pattern (lib/set.ml[583,18204+11]..[583,18204+12]) ghost
                                      Ppat_construct "[]" (lib/set.ml[583,18204+11]..[583,18204+12]) ghost
                                      None
                                  ]
                            expression (lib/set.ml[583,18204+16]..[583,18204+28])
                              Pexp_apply
                              expression (lib/set.ml[583,18204+16]..[583,18204+25])
                                Pexp_ident "singleton" (lib/set.ml[583,18204+16]..[583,18204+25])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[583,18204+26]..[583,18204+28])
                                    Pexp_ident "x0" (lib/set.ml[583,18204+26]..[583,18204+28])
                              ]
                          <case>
                            pattern (lib/set.ml[584,18233+8]..[584,18233+16])
                              Ppat_construct "::" (lib/set.ml[584,18233+9]..[584,18233+16]) ghost
                              Some
                                []
                                pattern (lib/set.ml[584,18233+9]..[584,18233+16]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (lib/set.ml[584,18233+9]..[584,18233+11])
                                      Ppat_var "x0" (lib/set.ml[584,18233+9]..[584,18233+11])
                                    pattern (lib/set.ml[584,18233+13]..[584,18233+16]) ghost
                                      Ppat_construct "::" (lib/set.ml[584,18233+13]..[584,18233+16]) ghost
                                      Some
                                        []
                                        pattern (lib/set.ml[584,18233+13]..[584,18233+16]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lib/set.ml[584,18233+13]..[584,18233+15])
                                              Ppat_var "x1" (lib/set.ml[584,18233+13]..[584,18233+15])
                                            pattern (lib/set.ml[584,18233+15]..[584,18233+16]) ghost
                                              Ppat_construct "[]" (lib/set.ml[584,18233+15]..[584,18233+16]) ghost
                                              None
                                          ]
                                  ]
                            expression (lib/set.ml[584,18233+20]..[584,18233+41])
                              Pexp_apply
                              expression (lib/set.ml[584,18233+20]..[584,18233+23])
                                Pexp_ident "add" (lib/set.ml[584,18233+20]..[584,18233+23])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[584,18233+24]..[584,18233+26])
                                    Pexp_ident "x1" (lib/set.ml[584,18233+24]..[584,18233+26])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[584,18233+27]..[584,18233+41])
                                    Pexp_apply
                                    expression (lib/set.ml[584,18233+28]..[584,18233+37])
                                      Pexp_ident "singleton" (lib/set.ml[584,18233+28]..[584,18233+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[584,18233+38]..[584,18233+40])
                                          Pexp_ident "x0" (lib/set.ml[584,18233+38]..[584,18233+40])
                                    ]
                              ]
                          <case>
                            pattern (lib/set.ml[585,18275+8]..[585,18275+20])
                              Ppat_construct "::" (lib/set.ml[585,18275+9]..[585,18275+20]) ghost
                              Some
                                []
                                pattern (lib/set.ml[585,18275+9]..[585,18275+20]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (lib/set.ml[585,18275+9]..[585,18275+11])
                                      Ppat_var "x0" (lib/set.ml[585,18275+9]..[585,18275+11])
                                    pattern (lib/set.ml[585,18275+13]..[585,18275+20]) ghost
                                      Ppat_construct "::" (lib/set.ml[585,18275+13]..[585,18275+20]) ghost
                                      Some
                                        []
                                        pattern (lib/set.ml[585,18275+13]..[585,18275+20]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lib/set.ml[585,18275+13]..[585,18275+15])
                                              Ppat_var "x1" (lib/set.ml[585,18275+13]..[585,18275+15])
                                            pattern (lib/set.ml[585,18275+17]..[585,18275+20]) ghost
                                              Ppat_construct "::" (lib/set.ml[585,18275+17]..[585,18275+20]) ghost
                                              Some
                                                []
                                                pattern (lib/set.ml[585,18275+17]..[585,18275+20]) ghost
                                                  Ppat_tuple
                                                  [
                                                    pattern (lib/set.ml[585,18275+17]..[585,18275+19])
                                                      Ppat_var "x2" (lib/set.ml[585,18275+17]..[585,18275+19])
                                                    pattern (lib/set.ml[585,18275+19]..[585,18275+20]) ghost
                                                      Ppat_construct "[]" (lib/set.ml[585,18275+19]..[585,18275+20]) ghost
                                                      None
                                                  ]
                                          ]
                                  ]
                            expression (lib/set.ml[585,18275+24]..[585,18275+54])
                              Pexp_apply
                              expression (lib/set.ml[585,18275+24]..[585,18275+27])
                                Pexp_ident "add" (lib/set.ml[585,18275+24]..[585,18275+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[585,18275+28]..[585,18275+30])
                                    Pexp_ident "x2" (lib/set.ml[585,18275+28]..[585,18275+30])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[585,18275+31]..[585,18275+54])
                                    Pexp_apply
                                    expression (lib/set.ml[585,18275+32]..[585,18275+35])
                                      Pexp_ident "add" (lib/set.ml[585,18275+32]..[585,18275+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[585,18275+36]..[585,18275+38])
                                          Pexp_ident "x1" (lib/set.ml[585,18275+36]..[585,18275+38])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[585,18275+39]..[585,18275+53])
                                          Pexp_apply
                                          expression (lib/set.ml[585,18275+40]..[585,18275+49])
                                            Pexp_ident "singleton" (lib/set.ml[585,18275+40]..[585,18275+49])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[585,18275+50]..[585,18275+52])
                                                Pexp_ident "x0" (lib/set.ml[585,18275+50]..[585,18275+52])
                                          ]
                                    ]
                              ]
                          <case>
                            pattern (lib/set.ml[586,18330+8]..[586,18330+24])
                              Ppat_construct "::" (lib/set.ml[586,18330+9]..[586,18330+24]) ghost
                              Some
                                []
                                pattern (lib/set.ml[586,18330+9]..[586,18330+24]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (lib/set.ml[586,18330+9]..[586,18330+11])
                                      Ppat_var "x0" (lib/set.ml[586,18330+9]..[586,18330+11])
                                    pattern (lib/set.ml[586,18330+13]..[586,18330+24]) ghost
                                      Ppat_construct "::" (lib/set.ml[586,18330+13]..[586,18330+24]) ghost
                                      Some
                                        []
                                        pattern (lib/set.ml[586,18330+13]..[586,18330+24]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lib/set.ml[586,18330+13]..[586,18330+15])
                                              Ppat_var "x1" (lib/set.ml[586,18330+13]..[586,18330+15])
                                            pattern (lib/set.ml[586,18330+17]..[586,18330+24]) ghost
                                              Ppat_construct "::" (lib/set.ml[586,18330+17]..[586,18330+24]) ghost
                                              Some
                                                []
                                                pattern (lib/set.ml[586,18330+17]..[586,18330+24]) ghost
                                                  Ppat_tuple
                                                  [
                                                    pattern (lib/set.ml[586,18330+17]..[586,18330+19])
                                                      Ppat_var "x2" (lib/set.ml[586,18330+17]..[586,18330+19])
                                                    pattern (lib/set.ml[586,18330+21]..[586,18330+24]) ghost
                                                      Ppat_construct "::" (lib/set.ml[586,18330+21]..[586,18330+24]) ghost
                                                      Some
                                                        []
                                                        pattern (lib/set.ml[586,18330+21]..[586,18330+24]) ghost
                                                          Ppat_tuple
                                                          [
                                                            pattern (lib/set.ml[586,18330+21]..[586,18330+23])
                                                              Ppat_var "x3" (lib/set.ml[586,18330+21]..[586,18330+23])
                                                            pattern (lib/set.ml[586,18330+23]..[586,18330+24]) ghost
                                                              Ppat_construct "[]" (lib/set.ml[586,18330+23]..[586,18330+24]) ghost
                                                              None
                                                          ]
                                                  ]
                                          ]
                                  ]
                            expression (lib/set.ml[586,18330+28]..[586,18330+67])
                              Pexp_apply
                              expression (lib/set.ml[586,18330+28]..[586,18330+31])
                                Pexp_ident "add" (lib/set.ml[586,18330+28]..[586,18330+31])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[586,18330+32]..[586,18330+34])
                                    Pexp_ident "x3" (lib/set.ml[586,18330+32]..[586,18330+34])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[586,18330+35]..[586,18330+67])
                                    Pexp_apply
                                    expression (lib/set.ml[586,18330+36]..[586,18330+39])
                                      Pexp_ident "add" (lib/set.ml[586,18330+36]..[586,18330+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[586,18330+40]..[586,18330+42])
                                          Pexp_ident "x2" (lib/set.ml[586,18330+40]..[586,18330+42])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[586,18330+43]..[586,18330+66])
                                          Pexp_apply
                                          expression (lib/set.ml[586,18330+44]..[586,18330+47])
                                            Pexp_ident "add" (lib/set.ml[586,18330+44]..[586,18330+47])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[586,18330+48]..[586,18330+50])
                                                Pexp_ident "x1" (lib/set.ml[586,18330+48]..[586,18330+50])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[586,18330+51]..[586,18330+65])
                                                Pexp_apply
                                                expression (lib/set.ml[586,18330+52]..[586,18330+61])
                                                  Pexp_ident "singleton" (lib/set.ml[586,18330+52]..[586,18330+61])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[586,18330+62]..[586,18330+64])
                                                      Pexp_ident "x0" (lib/set.ml[586,18330+62]..[586,18330+64])
                                                ]
                                          ]
                                    ]
                              ]
                          <case>
                            pattern (lib/set.ml[587,18398+8]..[587,18398+28])
                              Ppat_construct "::" (lib/set.ml[587,18398+9]..[587,18398+28]) ghost
                              Some
                                []
                                pattern (lib/set.ml[587,18398+9]..[587,18398+28]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (lib/set.ml[587,18398+9]..[587,18398+11])
                                      Ppat_var "x0" (lib/set.ml[587,18398+9]..[587,18398+11])
                                    pattern (lib/set.ml[587,18398+13]..[587,18398+28]) ghost
                                      Ppat_construct "::" (lib/set.ml[587,18398+13]..[587,18398+28]) ghost
                                      Some
                                        []
                                        pattern (lib/set.ml[587,18398+13]..[587,18398+28]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lib/set.ml[587,18398+13]..[587,18398+15])
                                              Ppat_var "x1" (lib/set.ml[587,18398+13]..[587,18398+15])
                                            pattern (lib/set.ml[587,18398+17]..[587,18398+28]) ghost
                                              Ppat_construct "::" (lib/set.ml[587,18398+17]..[587,18398+28]) ghost
                                              Some
                                                []
                                                pattern (lib/set.ml[587,18398+17]..[587,18398+28]) ghost
                                                  Ppat_tuple
                                                  [
                                                    pattern (lib/set.ml[587,18398+17]..[587,18398+19])
                                                      Ppat_var "x2" (lib/set.ml[587,18398+17]..[587,18398+19])
                                                    pattern (lib/set.ml[587,18398+21]..[587,18398+28]) ghost
                                                      Ppat_construct "::" (lib/set.ml[587,18398+21]..[587,18398+28]) ghost
                                                      Some
                                                        []
                                                        pattern (lib/set.ml[587,18398+21]..[587,18398+28]) ghost
                                                          Ppat_tuple
                                                          [
                                                            pattern (lib/set.ml[587,18398+21]..[587,18398+23])
                                                              Ppat_var "x3" (lib/set.ml[587,18398+21]..[587,18398+23])
                                                            pattern (lib/set.ml[587,18398+25]..[587,18398+28]) ghost
                                                              Ppat_construct "::" (lib/set.ml[587,18398+25]..[587,18398+28]) ghost
                                                              Some
                                                                []
                                                                pattern (lib/set.ml[587,18398+25]..[587,18398+28]) ghost
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (lib/set.ml[587,18398+25]..[587,18398+27])
                                                                      Ppat_var "x4" (lib/set.ml[587,18398+25]..[587,18398+27])
                                                                    pattern (lib/set.ml[587,18398+27]..[587,18398+28]) ghost
                                                                      Ppat_construct "[]" (lib/set.ml[587,18398+27]..[587,18398+28]) ghost
                                                                      None
                                                                  ]
                                                          ]
                                                  ]
                                          ]
                                  ]
                            expression (lib/set.ml[587,18398+32]..[587,18398+80])
                              Pexp_apply
                              expression (lib/set.ml[587,18398+32]..[587,18398+35])
                                Pexp_ident "add" (lib/set.ml[587,18398+32]..[587,18398+35])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[587,18398+36]..[587,18398+38])
                                    Pexp_ident "x4" (lib/set.ml[587,18398+36]..[587,18398+38])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[587,18398+39]..[587,18398+80])
                                    Pexp_apply
                                    expression (lib/set.ml[587,18398+40]..[587,18398+43])
                                      Pexp_ident "add" (lib/set.ml[587,18398+40]..[587,18398+43])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[587,18398+44]..[587,18398+46])
                                          Pexp_ident "x3" (lib/set.ml[587,18398+44]..[587,18398+46])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[587,18398+47]..[587,18398+79])
                                          Pexp_apply
                                          expression (lib/set.ml[587,18398+48]..[587,18398+51])
                                            Pexp_ident "add" (lib/set.ml[587,18398+48]..[587,18398+51])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[587,18398+52]..[587,18398+54])
                                                Pexp_ident "x2" (lib/set.ml[587,18398+52]..[587,18398+54])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[587,18398+55]..[587,18398+78])
                                                Pexp_apply
                                                expression (lib/set.ml[587,18398+56]..[587,18398+59])
                                                  Pexp_ident "add" (lib/set.ml[587,18398+56]..[587,18398+59])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[587,18398+60]..[587,18398+62])
                                                      Pexp_ident "x1" (lib/set.ml[587,18398+60]..[587,18398+62])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[587,18398+63]..[587,18398+77])
                                                      Pexp_apply
                                                      expression (lib/set.ml[587,18398+64]..[587,18398+73])
                                                        Pexp_ident "singleton" (lib/set.ml[587,18398+64]..[587,18398+73])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/set.ml[587,18398+74]..[587,18398+76])
                                                            Pexp_ident "x0" (lib/set.ml[587,18398+74]..[587,18398+76])
                                                      ]
                                                ]
                                          ]
                                    ]
                              ]
                          <case>
                            pattern (lib/set.ml[588,18479+8]..[588,18479+9])
                              Ppat_any
                            expression (lib/set.ml[588,18479+13]..[588,18479+58])
                              Pexp_apply
                              expression (lib/set.ml[588,18479+13]..[588,18479+27])
                                Pexp_ident "of_sorted_list" (lib/set.ml[588,18479+13]..[588,18479+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[588,18479+28]..[588,18479+58])
                                    Pexp_apply
                                    expression (lib/set.ml[588,18479+29]..[588,18479+43])
                                      Pexp_ident "List.sort_uniq" (lib/set.ml[588,18479+29]..[588,18479+43])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[588,18479+44]..[588,18479+55])
                                          Pexp_ident "Ord.compare" (lib/set.ml[588,18479+44]..[588,18479+55])
                                      <arg>
                                      Nolabel
                                        expression (lib/set.ml[588,18479+56]..[588,18479+57])
                                          Pexp_ident "l" (lib/set.ml[588,18479+56]..[588,18479+57])
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[590,18539+4]..[591,18561+44])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[590,18539+8]..[590,18539+15])
                    Ppat_var "add_seq" (lib/set.ml[590,18539+8]..[590,18539+15])
                  expression (lib/set.ml[590,18539+16]..[591,18561+44]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[590,18539+16]..[590,18539+17])
                        Nolabel
                        None
                        pattern (lib/set.ml[590,18539+16]..[590,18539+17])
                          Ppat_var "i" (lib/set.ml[590,18539+16]..[590,18539+17])
                      Pparam_val (lib/set.ml[590,18539+18]..[590,18539+19])
                        Nolabel
                        None
                        pattern (lib/set.ml[590,18539+18]..[590,18539+19])
                          Ppat_var "m" (lib/set.ml[590,18539+18]..[590,18539+19])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[591,18561+6]..[591,18561+44])
                        Pexp_apply
                        expression (lib/set.ml[591,18561+6]..[591,18561+19])
                          Pexp_ident "Seq.fold_left" (lib/set.ml[591,18561+6]..[591,18561+19])
                        [
                          <arg>
                          Nolabel
                            expression (lib/set.ml[591,18561+20]..[591,18561+40])
                              Pexp_function
                              [
                                Pparam_val (lib/set.ml[591,18561+25]..[591,18561+26])
                                  Nolabel
                                  None
                                  pattern (lib/set.ml[591,18561+25]..[591,18561+26])
                                    Ppat_var "s" (lib/set.ml[591,18561+25]..[591,18561+26])
                                Pparam_val (lib/set.ml[591,18561+27]..[591,18561+28])
                                  Nolabel
                                  None
                                  pattern (lib/set.ml[591,18561+27]..[591,18561+28])
                                    Ppat_var "x" (lib/set.ml[591,18561+27]..[591,18561+28])
                              ]
                              None
                              Pfunction_body
                                expression (lib/set.ml[591,18561+32]..[591,18561+39])
                                  Pexp_apply
                                  expression (lib/set.ml[591,18561+32]..[591,18561+35])
                                    Pexp_ident "add" (lib/set.ml[591,18561+32]..[591,18561+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[591,18561+36]..[591,18561+37])
                                        Pexp_ident "x" (lib/set.ml[591,18561+36]..[591,18561+37])
                                    <arg>
                                    Nolabel
                                      expression (lib/set.ml[591,18561+38]..[591,18561+39])
                                        Pexp_ident "s" (lib/set.ml[591,18561+38]..[591,18561+39])
                                  ]
                          <arg>
                          Nolabel
                            expression (lib/set.ml[591,18561+41]..[591,18561+42])
                              Pexp_ident "m" (lib/set.ml[591,18561+41]..[591,18561+42])
                          <arg>
                          Nolabel
                            expression (lib/set.ml[591,18561+43]..[591,18561+44])
                              Pexp_ident "i" (lib/set.ml[591,18561+43]..[591,18561+44])
                        ]
              ]
            structure_item (lib/set.ml[593,18607+4]..[593,18607+34])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[593,18607+8]..[593,18607+14])
                    Ppat_var "of_seq" (lib/set.ml[593,18607+8]..[593,18607+14])
                  expression (lib/set.ml[593,18607+15]..[593,18607+34]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[593,18607+15]..[593,18607+16])
                        Nolabel
                        None
                        pattern (lib/set.ml[593,18607+15]..[593,18607+16])
                          Ppat_var "i" (lib/set.ml[593,18607+15]..[593,18607+16])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[593,18607+19]..[593,18607+34])
                        Pexp_apply
                        expression (lib/set.ml[593,18607+19]..[593,18607+26])
                          Pexp_ident "add_seq" (lib/set.ml[593,18607+19]..[593,18607+26])
                        [
                          <arg>
                          Nolabel
                            expression (lib/set.ml[593,18607+27]..[593,18607+28])
                              Pexp_ident "i" (lib/set.ml[593,18607+27]..[593,18607+28])
                          <arg>
                          Nolabel
                            expression (lib/set.ml[593,18607+29]..[593,18607+34])
                              Pexp_ident "empty" (lib/set.ml[593,18607+29]..[593,18607+34])
                        ]
              ]
            structure_item (lib/set.ml[595,18643+4]..[597,18711+74])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[595,18643+12]..[595,18643+24])
                    Ppat_var "seq_of_enum_" (lib/set.ml[595,18643+12]..[595,18643+24])
                  expression (lib/set.ml[595,18643+25]..[597,18711+74]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[595,18643+25]..[595,18643+26])
                        Nolabel
                        None
                        pattern (lib/set.ml[595,18643+25]..[595,18643+26])
                          Ppat_var "c" (lib/set.ml[595,18643+25]..[595,18643+26])
                      Pparam_val (lib/set.ml[595,18643+27]..[595,18643+29])
                        Nolabel
                        None
                        pattern (lib/set.ml[595,18643+27]..[595,18643+29])
                          Ppat_construct "()" (lib/set.ml[595,18643+27]..[595,18643+29])
                          None
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[595,18643+32]..[597,18711+74])
                        Pexp_match
                        expression (lib/set.ml[595,18643+38]..[595,18643+39])
                          Pexp_ident "c" (lib/set.ml[595,18643+38]..[595,18643+39])
                        [
                          <case>
                            pattern (lib/set.ml[596,18688+8]..[596,18688+11])
                              Ppat_construct "End" (lib/set.ml[596,18688+8]..[596,18688+11])
                              None
                            expression (lib/set.ml[596,18688+15]..[596,18688+22])
                              Pexp_construct "Seq.Nil" (lib/set.ml[596,18688+15]..[596,18688+22])
                              None
                          <case>
                            pattern (lib/set.ml[597,18711+8]..[597,18711+25])
                              Ppat_construct "More" (lib/set.ml[597,18711+8]..[597,18711+12])
                              Some
                                []
                                pattern (lib/set.ml[597,18711+13]..[597,18711+25])
                                  Ppat_tuple
                                  [
                                    pattern (lib/set.ml[597,18711+14]..[597,18711+15])
                                      Ppat_var "x" (lib/set.ml[597,18711+14]..[597,18711+15])
                                    pattern (lib/set.ml[597,18711+17]..[597,18711+18])
                                      Ppat_var "t" (lib/set.ml[597,18711+17]..[597,18711+18])
                                    pattern (lib/set.ml[597,18711+20]..[597,18711+24])
                                      Ppat_var "rest" (lib/set.ml[597,18711+20]..[597,18711+24])
                                  ]
                            expression (lib/set.ml[597,18711+29]..[597,18711+74])
                              Pexp_construct "Seq.Cons" (lib/set.ml[597,18711+29]..[597,18711+37])
                              Some
                                expression (lib/set.ml[597,18711+38]..[597,18711+74])
                                  Pexp_tuple
                                  [
                                    expression (lib/set.ml[597,18711+39]..[597,18711+40])
                                      Pexp_ident "x" (lib/set.ml[597,18711+39]..[597,18711+40])
                                    expression (lib/set.ml[597,18711+42]..[597,18711+73])
                                      Pexp_apply
                                      expression (lib/set.ml[597,18711+42]..[597,18711+54])
                                        Pexp_ident "seq_of_enum_" (lib/set.ml[597,18711+42]..[597,18711+54])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[597,18711+55]..[597,18711+73])
                                            Pexp_apply
                                            expression (lib/set.ml[597,18711+56]..[597,18711+65])
                                              Pexp_ident "cons_enum" (lib/set.ml[597,18711+56]..[597,18711+65])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[597,18711+66]..[597,18711+67])
                                                  Pexp_ident "t" (lib/set.ml[597,18711+66]..[597,18711+67])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[597,18711+68]..[597,18711+72])
                                                  Pexp_ident "rest" (lib/set.ml[597,18711+68]..[597,18711+72])
                                            ]
                                      ]
                                  ]
                        ]
              ]
            structure_item (lib/set.ml[599,18787+4]..[599,18787+49])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[599,18787+8]..[599,18787+14])
                    Ppat_var "to_seq" (lib/set.ml[599,18787+8]..[599,18787+14])
                  expression (lib/set.ml[599,18787+15]..[599,18787+49]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[599,18787+15]..[599,18787+16])
                        Nolabel
                        None
                        pattern (lib/set.ml[599,18787+15]..[599,18787+16])
                          Ppat_var "c" (lib/set.ml[599,18787+15]..[599,18787+16])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[599,18787+19]..[599,18787+49])
                        Pexp_apply
                        expression (lib/set.ml[599,18787+19]..[599,18787+31])
                          Pexp_ident "seq_of_enum_" (lib/set.ml[599,18787+19]..[599,18787+31])
                        [
                          <arg>
                          Nolabel
                            expression (lib/set.ml[599,18787+32]..[599,18787+49])
                              Pexp_apply
                              expression (lib/set.ml[599,18787+33]..[599,18787+42])
                                Pexp_ident "cons_enum" (lib/set.ml[599,18787+33]..[599,18787+42])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[599,18787+43]..[599,18787+44])
                                    Pexp_ident "c" (lib/set.ml[599,18787+43]..[599,18787+44])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[599,18787+45]..[599,18787+48])
                                    Pexp_construct "End" (lib/set.ml[599,18787+45]..[599,18787+48])
                                    None
                              ]
                        ]
              ]
            structure_item (lib/set.ml[601,18838+4]..[604,18904+52])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[601,18838+12]..[601,18838+21])
                    Ppat_var "snoc_enum" (lib/set.ml[601,18838+12]..[601,18838+21])
                  expression (lib/set.ml[601,18838+22]..[604,18904+52]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[601,18838+22]..[601,18838+23])
                        Nolabel
                        None
                        pattern (lib/set.ml[601,18838+22]..[601,18838+23])
                          Ppat_var "s" (lib/set.ml[601,18838+22]..[601,18838+23])
                      Pparam_val (lib/set.ml[601,18838+24]..[601,18838+25])
                        Nolabel
                        None
                        pattern (lib/set.ml[601,18838+24]..[601,18838+25])
                          Ppat_var "e" (lib/set.ml[601,18838+24]..[601,18838+25])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[602,18866+6]..[604,18904+52])
                        Pexp_match
                        expression (lib/set.ml[602,18866+12]..[602,18866+13])
                          Pexp_ident "s" (lib/set.ml[602,18866+12]..[602,18866+13])
                        [
                          <case>
                            pattern (lib/set.ml[603,18885+8]..[603,18885+13])
                              Ppat_construct "Empty" (lib/set.ml[603,18885+8]..[603,18885+13])
                              None
                            expression (lib/set.ml[603,18885+17]..[603,18885+18])
                              Pexp_ident "e" (lib/set.ml[603,18885+17]..[603,18885+18])
                          <case>
                            pattern (lib/set.ml[604,18904+8]..[604,18904+21])
                              Ppat_construct "Node" (lib/set.ml[604,18904+8]..[604,18904+12])
                              Some
                                []
                                pattern (lib/set.ml[604,18904+12]..[604,18904+21])
                                  Ppat_record Closed
                                  [
                                    "l" (lib/set.ml[604,18904+13]..[604,18904+14]) ghost
                                      pattern (lib/set.ml[604,18904+13]..[604,18904+14])
                                        Ppat_var "l" (lib/set.ml[604,18904+13]..[604,18904+14])
                                    "v" (lib/set.ml[604,18904+16]..[604,18904+17]) ghost
                                      pattern (lib/set.ml[604,18904+16]..[604,18904+17])
                                        Ppat_var "v" (lib/set.ml[604,18904+16]..[604,18904+17])
                                    "r" (lib/set.ml[604,18904+19]..[604,18904+20]) ghost
                                      pattern (lib/set.ml[604,18904+19]..[604,18904+20])
                                        Ppat_var "r" (lib/set.ml[604,18904+19]..[604,18904+20])
                                  ]
                            expression (lib/set.ml[604,18904+25]..[604,18904+52])
                              Pexp_apply
                              expression (lib/set.ml[604,18904+25]..[604,18904+34])
                                Pexp_ident "snoc_enum" (lib/set.ml[604,18904+25]..[604,18904+34])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[604,18904+35]..[604,18904+36])
                                    Pexp_ident "r" (lib/set.ml[604,18904+35]..[604,18904+36])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[604,18904+37]..[604,18904+52])
                                    Pexp_construct "More" (lib/set.ml[604,18904+38]..[604,18904+42])
                                    Some
                                      expression (lib/set.ml[604,18904+42]..[604,18904+51])
                                        Pexp_tuple
                                        [
                                          expression (lib/set.ml[604,18904+43]..[604,18904+44])
                                            Pexp_ident "v" (lib/set.ml[604,18904+43]..[604,18904+44])
                                          expression (lib/set.ml[604,18904+46]..[604,18904+47])
                                            Pexp_ident "l" (lib/set.ml[604,18904+46]..[604,18904+47])
                                          expression (lib/set.ml[604,18904+49]..[604,18904+50])
                                            Pexp_ident "e" (lib/set.ml[604,18904+49]..[604,18904+50])
                                        ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[606,18958+4]..[608,19030+78])
              Pstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[606,18958+12]..[606,18958+28])
                    Ppat_var "rev_seq_of_enum_" (lib/set.ml[606,18958+12]..[606,18958+28])
                  expression (lib/set.ml[606,18958+29]..[608,19030+78]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[606,18958+29]..[606,18958+30])
                        Nolabel
                        None
                        pattern (lib/set.ml[606,18958+29]..[606,18958+30])
                          Ppat_var "c" (lib/set.ml[606,18958+29]..[606,18958+30])
                      Pparam_val (lib/set.ml[606,18958+31]..[606,18958+33])
                        Nolabel
                        None
                        pattern (lib/set.ml[606,18958+31]..[606,18958+33])
                          Ppat_construct "()" (lib/set.ml[606,18958+31]..[606,18958+33])
                          None
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[606,18958+36]..[608,19030+78])
                        Pexp_match
                        expression (lib/set.ml[606,18958+42]..[606,18958+43])
                          Pexp_ident "c" (lib/set.ml[606,18958+42]..[606,18958+43])
                        [
                          <case>
                            pattern (lib/set.ml[607,19007+8]..[607,19007+11])
                              Ppat_construct "End" (lib/set.ml[607,19007+8]..[607,19007+11])
                              None
                            expression (lib/set.ml[607,19007+15]..[607,19007+22])
                              Pexp_construct "Seq.Nil" (lib/set.ml[607,19007+15]..[607,19007+22])
                              None
                          <case>
                            pattern (lib/set.ml[608,19030+8]..[608,19030+25])
                              Ppat_construct "More" (lib/set.ml[608,19030+8]..[608,19030+12])
                              Some
                                []
                                pattern (lib/set.ml[608,19030+13]..[608,19030+25])
                                  Ppat_tuple
                                  [
                                    pattern (lib/set.ml[608,19030+14]..[608,19030+15])
                                      Ppat_var "x" (lib/set.ml[608,19030+14]..[608,19030+15])
                                    pattern (lib/set.ml[608,19030+17]..[608,19030+18])
                                      Ppat_var "t" (lib/set.ml[608,19030+17]..[608,19030+18])
                                    pattern (lib/set.ml[608,19030+20]..[608,19030+24])
                                      Ppat_var "rest" (lib/set.ml[608,19030+20]..[608,19030+24])
                                  ]
                            expression (lib/set.ml[608,19030+29]..[608,19030+78])
                              Pexp_construct "Seq.Cons" (lib/set.ml[608,19030+29]..[608,19030+37])
                              Some
                                expression (lib/set.ml[608,19030+38]..[608,19030+78])
                                  Pexp_tuple
                                  [
                                    expression (lib/set.ml[608,19030+39]..[608,19030+40])
                                      Pexp_ident "x" (lib/set.ml[608,19030+39]..[608,19030+40])
                                    expression (lib/set.ml[608,19030+42]..[608,19030+77])
                                      Pexp_apply
                                      expression (lib/set.ml[608,19030+42]..[608,19030+58])
                                        Pexp_ident "rev_seq_of_enum_" (lib/set.ml[608,19030+42]..[608,19030+58])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/set.ml[608,19030+59]..[608,19030+77])
                                            Pexp_apply
                                            expression (lib/set.ml[608,19030+60]..[608,19030+69])
                                              Pexp_ident "snoc_enum" (lib/set.ml[608,19030+60]..[608,19030+69])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[608,19030+70]..[608,19030+71])
                                                  Pexp_ident "t" (lib/set.ml[608,19030+70]..[608,19030+71])
                                              <arg>
                                              Nolabel
                                                expression (lib/set.ml[608,19030+72]..[608,19030+76])
                                                  Pexp_ident "rest" (lib/set.ml[608,19030+72]..[608,19030+76])
                                            ]
                                      ]
                                  ]
                        ]
              ]
            structure_item (lib/set.ml[610,19110+4]..[610,19110+57])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[610,19110+8]..[610,19110+18])
                    Ppat_var "to_rev_seq" (lib/set.ml[610,19110+8]..[610,19110+18])
                  expression (lib/set.ml[610,19110+19]..[610,19110+57]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[610,19110+19]..[610,19110+20])
                        Nolabel
                        None
                        pattern (lib/set.ml[610,19110+19]..[610,19110+20])
                          Ppat_var "c" (lib/set.ml[610,19110+19]..[610,19110+20])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[610,19110+23]..[610,19110+57])
                        Pexp_apply
                        expression (lib/set.ml[610,19110+23]..[610,19110+39])
                          Pexp_ident "rev_seq_of_enum_" (lib/set.ml[610,19110+23]..[610,19110+39])
                        [
                          <arg>
                          Nolabel
                            expression (lib/set.ml[610,19110+40]..[610,19110+57])
                              Pexp_apply
                              expression (lib/set.ml[610,19110+41]..[610,19110+50])
                                Pexp_ident "snoc_enum" (lib/set.ml[610,19110+41]..[610,19110+50])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[610,19110+51]..[610,19110+52])
                                    Pexp_ident "c" (lib/set.ml[610,19110+51]..[610,19110+52])
                                <arg>
                                Nolabel
                                  expression (lib/set.ml[610,19110+53]..[610,19110+56])
                                    Pexp_construct "End" (lib/set.ml[610,19110+53]..[610,19110+56])
                                    None
                              ]
                        ]
              ]
            structure_item (lib/set.ml[612,19169+4]..[622,19488+34])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[612,19169+8]..[612,19169+19])
                    Ppat_var "to_seq_from" (lib/set.ml[612,19169+8]..[612,19169+19])
                  expression (lib/set.ml[612,19169+20]..[622,19488+34]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/set.ml[612,19169+20]..[612,19169+23])
                        Nolabel
                        None
                        pattern (lib/set.ml[612,19169+20]..[612,19169+23])
                          Ppat_var "low" (lib/set.ml[612,19169+20]..[612,19169+23])
                      Pparam_val (lib/set.ml[612,19169+24]..[612,19169+25])
                        Nolabel
                        None
                        pattern (lib/set.ml[612,19169+24]..[612,19169+25])
                          Ppat_var "s" (lib/set.ml[612,19169+24]..[612,19169+25])
                    ]
                    None
                    Pfunction_body
                      expression (lib/set.ml[613,19197+6]..[622,19488+34])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (lib/set.ml[613,19197+14]..[613,19197+17])
                              Ppat_var "aux" (lib/set.ml[613,19197+14]..[613,19197+17])
                            expression (lib/set.ml[613,19197+18]..[620,19463+15]) ghost
                              Pexp_function
                              [
                                Pparam_val (lib/set.ml[613,19197+18]..[613,19197+21])
                                  Nolabel
                                  None
                                  pattern (lib/set.ml[613,19197+18]..[613,19197+21])
                                    Ppat_var "low" (lib/set.ml[613,19197+18]..[613,19197+21])
                                Pparam_val (lib/set.ml[613,19197+22]..[613,19197+23])
                                  Nolabel
                                  None
                                  pattern (lib/set.ml[613,19197+22]..[613,19197+23])
                                    Ppat_var "s" (lib/set.ml[613,19197+22]..[613,19197+23])
                                Pparam_val (lib/set.ml[613,19197+24]..[613,19197+25])
                                  Nolabel
                                  None
                                  pattern (lib/set.ml[613,19197+24]..[613,19197+25])
                                    Ppat_var "c" (lib/set.ml[613,19197+24]..[613,19197+25])
                              ]
                              None
                              Pfunction_body
                                expression (lib/set.ml[613,19197+28]..[620,19463+15])
                                  Pexp_match
                                  expression (lib/set.ml[613,19197+34]..[613,19197+35])
                                    Pexp_ident "s" (lib/set.ml[613,19197+34]..[613,19197+35])
                                  [
                                    <case>
                                      pattern (lib/set.ml[614,19238+10]..[614,19238+15])
                                        Ppat_construct "Empty" (lib/set.ml[614,19238+10]..[614,19238+15])
                                        None
                                      expression (lib/set.ml[614,19238+19]..[614,19238+20])
                                        Pexp_ident "c" (lib/set.ml[614,19238+19]..[614,19238+20])
                                    <case>
                                      pattern (lib/set.ml[615,19259+10]..[615,19259+27])
                                        Ppat_construct "Node" (lib/set.ml[615,19259+10]..[615,19259+14])
                                        Some
                                          []
                                          pattern (lib/set.ml[615,19259+15]..[615,19259+27])
                                            Ppat_record Open
                                            [
                                              "l" (lib/set.ml[615,19259+16]..[615,19259+17]) ghost
                                                pattern (lib/set.ml[615,19259+16]..[615,19259+17])
                                                  Ppat_var "l" (lib/set.ml[615,19259+16]..[615,19259+17])
                                              "r" (lib/set.ml[615,19259+19]..[615,19259+20]) ghost
                                                pattern (lib/set.ml[615,19259+19]..[615,19259+20])
                                                  Ppat_var "r" (lib/set.ml[615,19259+19]..[615,19259+20])
                                              "v" (lib/set.ml[615,19259+22]..[615,19259+23]) ghost
                                                pattern (lib/set.ml[615,19259+22]..[615,19259+23])
                                                  Ppat_var "v" (lib/set.ml[615,19259+22]..[615,19259+23])
                                            ]
                                      expression (lib/set.ml[616,19290+12]..[620,19463+15])
                                        Pexp_match
                                        expression (lib/set.ml[616,19290+24]..[616,19290+41])
                                          Pexp_apply
                                          expression (lib/set.ml[616,19290+24]..[616,19290+35])
                                            Pexp_ident "Ord.compare" (lib/set.ml[616,19290+24]..[616,19290+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[616,19290+36]..[616,19290+37])
                                                Pexp_ident "v" (lib/set.ml[616,19290+36]..[616,19290+37])
                                            <arg>
                                            Nolabel
                                              expression (lib/set.ml[616,19290+38]..[616,19290+41])
                                                Pexp_ident "low" (lib/set.ml[616,19290+38]..[616,19290+41])
                                          ]
                                        [
                                          <case>
                                            pattern (lib/set.ml[617,19337+16]..[617,19337+17])
                                              Ppat_constant PConst_int (0,None)
                                            expression (lib/set.ml[617,19337+21]..[617,19337+35])
                                              Pexp_construct "More" (lib/set.ml[617,19337+21]..[617,19337+25])
                                              Some
                                                expression (lib/set.ml[617,19337+26]..[617,19337+35])
                                                  Pexp_tuple
                                                  [
                                                    expression (lib/set.ml[617,19337+27]..[617,19337+28])
                                                      Pexp_ident "v" (lib/set.ml[617,19337+27]..[617,19337+28])
                                                    expression (lib/set.ml[617,19337+30]..[617,19337+31])
                                                      Pexp_ident "r" (lib/set.ml[617,19337+30]..[617,19337+31])
                                                    expression (lib/set.ml[617,19337+33]..[617,19337+34])
                                                      Pexp_ident "c" (lib/set.ml[617,19337+33]..[617,19337+34])
                                                  ]
                                          <case>
                                            pattern (lib/set.ml[618,19373+16]..[618,19373+17])
                                              Ppat_var "n" (lib/set.ml[618,19373+16]..[618,19373+17])
                                            <when>
                                              expression (lib/set.ml[618,19373+23]..[618,19373+26])
                                                Pexp_apply
                                                expression (lib/set.ml[618,19373+24]..[618,19373+25])
                                                  Pexp_ident "<" (lib/set.ml[618,19373+24]..[618,19373+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[618,19373+23]..[618,19373+24])
                                                      Pexp_ident "n" (lib/set.ml[618,19373+23]..[618,19373+24])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/set.ml[618,19373+25]..[618,19373+26])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                            expression (lib/set.ml[618,19373+30]..[618,19373+41])
                                              Pexp_apply
                                              expression (lib/set.ml[618,19373+30]..[618,19373+33])
                                                Pexp_ident "aux" (lib/set.ml[618,19373+30]..[618,19373+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[618,19373+34]..[618,19373+37])
                                                    Pexp_ident "low" (lib/set.ml[618,19373+34]..[618,19373+37])
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[618,19373+38]..[618,19373+39])
                                                    Pexp_ident "r" (lib/set.ml[618,19373+38]..[618,19373+39])
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[618,19373+40]..[618,19373+41])
                                                    Pexp_ident "c" (lib/set.ml[618,19373+40]..[618,19373+41])
                                              ]
                                          <case>
                                            pattern (lib/set.ml[619,19415+16]..[619,19415+17])
                                              Ppat_any
                                            expression (lib/set.ml[619,19415+21]..[619,19415+47])
                                              Pexp_apply
                                              expression (lib/set.ml[619,19415+21]..[619,19415+24])
                                                Pexp_ident "aux" (lib/set.ml[619,19415+21]..[619,19415+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[619,19415+25]..[619,19415+28])
                                                    Pexp_ident "low" (lib/set.ml[619,19415+25]..[619,19415+28])
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[619,19415+29]..[619,19415+30])
                                                    Pexp_ident "l" (lib/set.ml[619,19415+29]..[619,19415+30])
                                                <arg>
                                                Nolabel
                                                  expression (lib/set.ml[619,19415+31]..[619,19415+47])
                                                    Pexp_construct "More" (lib/set.ml[619,19415+32]..[619,19415+36])
                                                    Some
                                                      expression (lib/set.ml[619,19415+37]..[619,19415+46])
                                                        Pexp_tuple
                                                        [
                                                          expression (lib/set.ml[619,19415+38]..[619,19415+39])
                                                            Pexp_ident "v" (lib/set.ml[619,19415+38]..[619,19415+39])
                                                          expression (lib/set.ml[619,19415+41]..[619,19415+42])
                                                            Pexp_ident "r" (lib/set.ml[619,19415+41]..[619,19415+42])
                                                          expression (lib/set.ml[619,19415+44]..[619,19415+45])
                                                            Pexp_ident "c" (lib/set.ml[619,19415+44]..[619,19415+45])
                                                        ]
                                              ]
                                        ]
                                  ]
                        ]
                        expression (lib/set.ml[622,19488+6]..[622,19488+34])
                          Pexp_apply
                          expression (lib/set.ml[622,19488+6]..[622,19488+18])
                            Pexp_ident "seq_of_enum_" (lib/set.ml[622,19488+6]..[622,19488+18])
                          [
                            <arg>
                            Nolabel
                              expression (lib/set.ml[622,19488+19]..[622,19488+34])
                                Pexp_apply
                                expression (lib/set.ml[622,19488+20]..[622,19488+23])
                                  Pexp_ident "aux" (lib/set.ml[622,19488+20]..[622,19488+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[622,19488+24]..[622,19488+27])
                                      Pexp_ident "low" (lib/set.ml[622,19488+24]..[622,19488+27])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[622,19488+28]..[622,19488+29])
                                      Pexp_ident "s" (lib/set.ml[622,19488+28]..[622,19488+29])
                                  <arg>
                                  Nolabel
                                    expression (lib/set.ml[622,19488+30]..[622,19488+33])
                                      Pexp_construct "End" (lib/set.ml[622,19488+30]..[622,19488+33])
                                      None
                                ]
                          ]
              ]
          ]
]

module type OrderedType  = sig type t val compare : t -> t -> int end
module type S  =
  sig
    type elt
    type t
    val empty : t
    val add : elt -> t -> t
    val singleton : elt -> t
    val remove : elt -> t -> t
    val union : t -> t -> t
    val inter : t -> t -> t
    val disjoint : t -> t -> bool
    val diff : t -> t -> t
    val cardinal : t -> int
    val elements : t -> elt list
    val min_elt : t -> elt
    val min_elt_opt : t -> elt option
    val max_elt : t -> elt
    val max_elt_opt : t -> elt option
    val choose : t -> elt
    val choose_opt : t -> elt option
    val find : elt -> t -> elt
    val find_opt : elt -> t -> elt option
    val find_first : (elt -> bool) -> t -> elt
    val find_first_opt : (elt -> bool) -> t -> elt option
    val find_last : (elt -> bool) -> t -> elt
    val find_last_opt : (elt -> bool) -> t -> elt option
    val iter : (elt -> unit) -> t -> unit
    val fold : (elt -> 'a -> 'a) -> t -> 'a -> 'a
    val map : (elt -> elt) -> t -> t
    val filter : (elt -> bool) -> t -> t
    val filter_map : (elt -> elt option) -> t -> t
    val partition : (elt -> bool) -> t -> (t * t)
    val split : elt -> t -> (t * bool * t)
    val is_empty : t -> bool
    val mem : elt -> t -> bool
    val equal : t -> t -> bool
    val compare : t -> t -> int
    val subset : t -> t -> bool
    val for_all : (elt -> bool) -> t -> bool
    val exists : (elt -> bool) -> t -> bool
    val to_list : t -> elt list
    val of_list : elt list -> t
    val to_seq_from : elt -> t -> elt Seq.t
    val to_seq : t -> elt Seq.t
    val to_rev_seq : t -> elt Seq.t
    val add_seq : elt Seq.t -> t -> t
    val of_seq : elt Seq.t -> t
  end
module Make(Ord:OrderedType) =
  struct
    type elt = Ord.t
    type t =
      | Empty 
      | Node of {
      l: t ;
      v: elt ;
      r: t ;
      h: int } 
    let height = function | Empty -> 0 | Node { h } -> h
    let create l v r =
      let hl = match l with | Empty -> 0 | Node { h } -> h in
      let hr = match r with | Empty -> 0 | Node { h } -> h in
      Node { l; v; r; h = (if hl >= hr then hl + 1 else hr + 1) }
    let bal l v r =
      let hl = match l with | Empty -> 0 | Node { h } -> h in
      let hr = match r with | Empty -> 0 | Node { h } -> h in
      if hl > (hr + 2)
      then
        match l with
        | Empty -> invalid_arg "Set.bal"
        | Node { l = ll; v = lv; r = lr } ->
            (if (height ll) >= (height lr)
             then create ll lv (create lr v r)
             else
               (match lr with
                | Empty -> invalid_arg "Set.bal"
                | Node { l = lrl; v = lrv; r = lrr } ->
                    create (create ll lv lrl) lrv (create lrr v r)))
      else
        if hr > (hl + 2)
        then
          (match r with
           | Empty -> invalid_arg "Set.bal"
           | Node { l = rl; v = rv; r = rr } ->
               if (height rr) >= (height rl)
               then create (create l v rl) rv rr
               else
                 (match rl with
                  | Empty -> invalid_arg "Set.bal"
                  | Node { l = rll; v = rlv; r = rlr } ->
                      create (create l v rll) rlv (create rlr rv rr)))
        else Node { l; v; r; h = (if hl >= hr then hl + 1 else hr + 1) }
    let rec add x =
      function
      | Empty -> Node { l = Empty; v = x; r = Empty; h = 1 }
      | Node { l; v; r } as t ->
          let c = Ord.compare x v in
          if c = 0
          then t
          else
            if c < 0
            then (let ll = add x l in if l == ll then t else bal ll v r)
            else (let rr = add x r in if r == rr then t else bal l v rr)
    let singleton x = Node { l = Empty; v = x; r = Empty; h = 1 }
    let rec add_min_element x =
      function
      | Empty -> singleton x
      | Node { l; v; r } -> bal (add_min_element x l) v r
    let rec add_max_element x =
      function
      | Empty -> singleton x
      | Node { l; v; r } -> bal l v (add_max_element x r)
    let rec join l v r =
      match (l, r) with
      | (Empty, _) -> add_min_element v r
      | (_, Empty) -> add_max_element v l
      | (Node { l = ll; v = lv; r = lr; h = lh }, Node
         { l = rl; v = rv; r = rr; h = rh }) ->
          if lh > (rh + 2)
          then bal ll lv (join lr v r)
          else
            if rh > (lh + 2) then bal (join l v rl) rv rr else create l v r
    let rec min_elt =
      function
      | Empty -> raise Not_found
      | Node { l = Empty; v } -> v
      | Node { l } -> min_elt l
    let rec min_elt_opt =
      function
      | Empty -> None
      | Node { l = Empty; v } -> Some v
      | Node { l } -> min_elt_opt l
    let rec max_elt =
      function
      | Empty -> raise Not_found
      | Node { v; r = Empty } -> v
      | Node { r } -> max_elt r
    let rec max_elt_opt =
      function
      | Empty -> None
      | Node { v; r = Empty } -> Some v
      | Node { r } -> max_elt_opt r
    let rec remove_min_elt =
      function
      | Empty -> invalid_arg "Set.remove_min_elt"
      | Node { l = Empty; r } -> r
      | Node { l; v; r } -> bal (remove_min_elt l) v r
    let merge t1 t2 =
      match (t1, t2) with
      | (Empty, t) -> t
      | (t, Empty) -> t
      | (_, _) -> bal t1 (min_elt t2) (remove_min_elt t2)
    let concat t1 t2 =
      match (t1, t2) with
      | (Empty, t) -> t
      | (t, Empty) -> t
      | (_, _) -> join t1 (min_elt t2) (remove_min_elt t2)
    let rec split x =
      function
      | Empty -> (Empty, false, Empty)
      | Node { l; v; r } ->
          let c = Ord.compare x v in
          if c = 0
          then (l, true, r)
          else
            if c < 0
            then
              (let (ll, pres, rl) = split x l in (ll, pres, (join rl v r)))
            else
              (let (lr, pres, rr) = split x r in ((join l v lr), pres, rr))
    let empty = Empty
    let is_empty = function | Empty -> true | _ -> false
    let rec mem x =
      function
      | Empty -> false
      | Node { l; v; r } ->
          let c = Ord.compare x v in
          (c = 0) || (mem x (if c < 0 then l else r))
    let rec remove x =
      function
      | Empty -> Empty
      | Node { l; v; r } as t ->
          let c = Ord.compare x v in
          if c = 0
          then merge l r
          else
            if c < 0
            then (let ll = remove x l in if l == ll then t else bal ll v r)
            else (let rr = remove x r in if r == rr then t else bal l v rr)
    let rec union s1 s2 =
      match (s1, s2) with
      | (Empty, t2) -> t2
      | (t1, Empty) -> t1
      | (Node { l = l1; v = v1; r = r1; h = h1 }, Node
         { l = l2; v = v2; r = r2; h = h2 }) ->
          if h1 >= h2
          then
            (if h2 = 1
             then add v2 s1
             else
               (let (l2, _, r2) = split v1 s2 in
                join (union l1 l2) v1 (union r1 r2)))
          else
            if h1 = 1
            then add v1 s2
            else
              (let (l1, _, r1) = split v2 s1 in
               join (union l1 l2) v2 (union r1 r2))
    let rec inter s1 s2 =
      match (s1, s2) with
      | (Empty, _) -> Empty
      | (_, Empty) -> Empty
      | (Node { l = l1; v = v1; r = r1 }, t2) ->
          (match split v1 t2 with
           | (l2, false, r2) -> concat (inter l1 l2) (inter r1 r2)
           | (l2, true, r2) -> join (inter l1 l2) v1 (inter r1 r2))
    type split_bis =
      | Found 
      | NotFound of t * (unit -> t) 
    let rec split_bis x =
      function
      | Empty -> NotFound (Empty, ((fun () -> Empty)))
      | Node { l; v; r;_} ->
          let c = Ord.compare x v in
          if c = 0
          then Found
          else
            if c < 0
            then
              (match split_bis x l with
               | Found -> Found
               | NotFound (ll, rl) ->
                   NotFound (ll, ((fun () -> join (rl ()) v r))))
            else
              (match split_bis x r with
               | Found -> Found
               | NotFound (lr, rr) -> NotFound ((join l v lr), rr))
    let rec disjoint s1 s2 =
      match (s1, s2) with
      | (Empty, _) | (_, Empty) -> true
      | (Node { l = l1; v = v1; r = r1 }, t2) ->
          if s1 == s2
          then false
          else
            (match split_bis v1 t2 with
             | NotFound (l2, r2) -> (disjoint l1 l2) && (disjoint r1 (r2 ()))
             | Found -> false)
    let rec diff s1 s2 =
      match (s1, s2) with
      | (Empty, _) -> Empty
      | (t1, Empty) -> t1
      | (Node { l = l1; v = v1; r = r1 }, t2) ->
          (match split v1 t2 with
           | (l2, false, r2) -> join (diff l1 l2) v1 (diff r1 r2)
           | (l2, true, r2) -> concat (diff l1 l2) (diff r1 r2))
    type enumeration =
      | End 
      | More of elt * t * enumeration 
    let rec cons_enum s e =
      match s with
      | Empty -> e
      | Node { l; v; r } -> cons_enum l (More (v, r, e))
    let rec compare_aux e1 e2 =
      match (e1, e2) with
      | (End, End) -> 0
      | (End, _) -> (-1)
      | (_, End) -> 1
      | (More (v1, r1, e1), More (v2, r2, e2)) ->
          let c = Ord.compare v1 v2 in
          if c <> 0
          then c
          else compare_aux (cons_enum r1 e1) (cons_enum r2 e2)
    let compare s1 s2 = compare_aux (cons_enum s1 End) (cons_enum s2 End)
    let equal s1 s2 = (compare s1 s2) = 0
    let rec subset s1 s2 =
      match (s1, s2) with
      | (Empty, _) -> true
      | (_, Empty) -> false
      | (Node { l = l1; v = v1; r = r1 },
         (Node { l = l2; v = v2; r = r2 } as t2)) ->
          let c = Ord.compare v1 v2 in
          if c = 0
          then (subset l1 l2) && (subset r1 r2)
          else
            if c < 0
            then
              (subset (Node { l = l1; v = v1; r = Empty; h = 0 }) l2) &&
                (subset r1 t2)
            else
              (subset (Node { l = Empty; v = v1; r = r1; h = 0 }) r2) &&
                (subset l1 t2)
    let rec iter f =
      function | Empty -> () | Node { l; v; r } -> (iter f l; f v; iter f r)
    let rec fold f s accu =
      match s with
      | Empty -> accu
      | Node { l; v; r } -> fold f r (f v (fold f l accu))
    let rec for_all p =
      function
      | Empty -> true
      | Node { l; v; r } -> (p v) && ((for_all p l) && (for_all p r))
    let rec exists p =
      function
      | Empty -> false
      | Node { l; v; r } -> (p v) || ((exists p l) || (exists p r))
    let rec filter p =
      function
      | Empty -> Empty
      | Node { l; v; r } as t ->
          let l' = filter p l in
          let pv = p v in
          let r' = filter p r in
          if pv
          then (if (l == l') && (r == r') then t else join l' v r')
          else concat l' r'
    let rec partition p =
      function
      | Empty -> (Empty, Empty)
      | Node { l; v; r } ->
          let (lt, lf) = partition p l in
          let pv = p v in
          let (rt, rf) = partition p r in
          if pv
          then ((join lt v rt), (concat lf rf))
          else ((concat lt rt), (join lf v rf))
    let rec cardinal =
      function
      | Empty -> 0
      | Node { l; r } -> ((cardinal l) + 1) + (cardinal r)
    let rec elements_aux accu =
      function
      | Empty -> accu
      | Node { l; v; r } -> elements_aux (v :: (elements_aux accu r)) l
    let elements s = elements_aux [] s
    let choose = min_elt
    let choose_opt = min_elt_opt
    let rec find x =
      function
      | Empty -> raise Not_found
      | Node { l; v; r } ->
          let c = Ord.compare x v in
          if c = 0 then v else find x (if c < 0 then l else r)
    let rec find_first_aux v0 f =
      function
      | Empty -> v0
      | Node { l; v; r } ->
          if f v then find_first_aux v f l else find_first_aux v0 f r
    let rec find_first f =
      function
      | Empty -> raise Not_found
      | Node { l; v; r } ->
          if f v then find_first_aux v f l else find_first f r
    let rec find_first_opt_aux v0 f =
      function
      | Empty -> Some v0
      | Node { l; v; r } ->
          if f v then find_first_opt_aux v f l else find_first_opt_aux v0 f r
    let rec find_first_opt f =
      function
      | Empty -> None
      | Node { l; v; r } ->
          if f v then find_first_opt_aux v f l else find_first_opt f r
    let rec find_last_aux v0 f =
      function
      | Empty -> v0
      | Node { l; v; r } ->
          if f v then find_last_aux v f r else find_last_aux v0 f l
    let rec find_last f =
      function
      | Empty -> raise Not_found
      | Node { l; v; r } ->
          if f v then find_last_aux v f r else find_last f l
    let rec find_last_opt_aux v0 f =
      function
      | Empty -> Some v0
      | Node { l; v; r } ->
          if f v then find_last_opt_aux v f r else find_last_opt_aux v0 f l
    let rec find_last_opt f =
      function
      | Empty -> None
      | Node { l; v; r } ->
          if f v then find_last_opt_aux v f r else find_last_opt f l
    let rec find_opt x =
      function
      | Empty -> None
      | Node { l; v; r } ->
          let c = Ord.compare x v in
          if c = 0 then Some v else find_opt x (if c < 0 then l else r)
    let try_join l v r =
      if
        ((l = Empty) || ((Ord.compare (max_elt l) v) < 0)) &&
          ((r = Empty) || ((Ord.compare v (min_elt r)) < 0))
      then join l v r
      else union l (add v r)
    let rec map f =
      function
      | Empty -> Empty
      | Node { l; v; r } as t ->
          let l' = map f l in
          let v' = f v in
          let r' = map f r in
          if (l == l') && ((v == v') && (r == r'))
          then t
          else try_join l' v' r'
    let try_concat t1 t2 =
      match (t1, t2) with
      | (Empty, t) -> t
      | (t, Empty) -> t
      | (_, _) -> try_join t1 (min_elt t2) (remove_min_elt t2)
    let rec filter_map f =
      function
      | Empty -> Empty
      | Node { l; v; r } as t ->
          let l' = filter_map f l in
          let v' = f v in
          let r' = filter_map f r in
          (match v' with
           | Some v' ->
               if (l == l') && ((v == v') && (r == r'))
               then t
               else try_join l' v' r'
           | None -> try_concat l' r')
    let of_sorted_list l =
      let rec sub n l =
        match (n, l) with
        | (0, l) -> (Empty, l)
        | (1, x0::l) -> ((Node { l = Empty; v = x0; r = Empty; h = 1 }), l)
        | (2, x0::x1::l) ->
            ((Node
                {
                  l = (Node { l = Empty; v = x0; r = Empty; h = 1 });
                  v = x1;
                  r = Empty;
                  h = 2
                }), l)
        | (3, x0::x1::x2::l) ->
            ((Node
                {
                  l = (Node { l = Empty; v = x0; r = Empty; h = 1 });
                  v = x1;
                  r = (Node { l = Empty; v = x2; r = Empty; h = 1 });
                  h = 2
                }), l)
        | (n, l) ->
            let nl = n / 2 in
            let (left, l) = sub nl l in
            (match l with
             | [] -> assert false
             | mid::l ->
                 let (right, l) = sub ((n - nl) - 1) l in
                 ((create left mid right), l)) in
      fst (sub (List.length l) l)
    let to_list = elements
    let of_list l =
      match l with
      | [] -> empty
      | x0::[] -> singleton x0
      | x0::x1::[] -> add x1 (singleton x0)
      | x0::x1::x2::[] -> add x2 (add x1 (singleton x0))
      | x0::x1::x2::x3::[] -> add x3 (add x2 (add x1 (singleton x0)))
      | x0::x1::x2::x3::x4::[] ->
          add x4 (add x3 (add x2 (add x1 (singleton x0))))
      | _ -> of_sorted_list (List.sort_uniq Ord.compare l)
    let add_seq i m = Seq.fold_left (fun s x -> add x s) m i
    let of_seq i = add_seq i empty
    let rec seq_of_enum_ c () =
      match c with
      | End -> Seq.Nil
      | More (x, t, rest) -> Seq.Cons (x, (seq_of_enum_ (cons_enum t rest)))
    let to_seq c = seq_of_enum_ (cons_enum c End)
    let rec snoc_enum s e =
      match s with
      | Empty -> e
      | Node { l; v; r } -> snoc_enum r (More (v, l, e))
    let rec rev_seq_of_enum_ c () =
      match c with
      | End -> Seq.Nil
      | More (x, t, rest) ->
          Seq.Cons (x, (rev_seq_of_enum_ (snoc_enum t rest)))
    let to_rev_seq c = rev_seq_of_enum_ (snoc_enum c End)
    let to_seq_from low s =
      let rec aux low s c =
        match s with
        | Empty -> c
        | Node { l; r; v;_} ->
            (match Ord.compare v low with
             | 0 -> More (v, r, c)
             | n when n < 0 -> aux low r c
             | _ -> aux low l (More (v, r, c))) in
      seq_of_enum_ (aux low s End)
  end
[
  structure_item (lib/set.ml[18,1110+0]..lib/set.ml[22,1184+5])
    Tstr_modtype "OrderedType/297"
      module_type (lib/set.ml[19,1136+2]..lib/set.ml[22,1184+5])
        Tmty_signature
        [
          signature_item (lib/set.ml[20,1142+4]..lib/set.ml[20,1142+10])
            Tsig_type Rec
            [
              type_declaration t/295 (lib/set.ml[20,1142+4]..lib/set.ml[20,1142+10])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (lib/set.ml[21,1153+4]..lib/set.ml[21,1153+30])
            Tsig_value
            value_description compare/296 (lib/set.ml[21,1153+4]..lib/set.ml[21,1153+30])
              core_type (lib/set.ml[21,1153+17]..lib/set.ml[21,1153+30])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[21,1153+17]..lib/set.ml[21,1153+18])
                  Ttyp_constr "t/295"
                  []
                core_type (lib/set.ml[21,1153+22]..lib/set.ml[21,1153+30])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[21,1153+22]..lib/set.ml[21,1153+23])
                    Ttyp_constr "t/295"
                    []
                  core_type (lib/set.ml[21,1153+27]..lib/set.ml[21,1153+30])
                    Ttyp_constr "int/1!"
                    []
              []
        ]
  structure_item (lib/set.ml[24,1191+0]..lib/set.ml[71,2758+5])
    Tstr_modtype "S/404"
      module_type (lib/set.ml[25,1207+2]..lib/set.ml[71,2758+5])
        Tmty_signature
        [
          signature_item (lib/set.ml[26,1213+4]..lib/set.ml[26,1213+12])
            Tsig_type Rec
            [
              type_declaration elt/298 (lib/set.ml[26,1213+4]..lib/set.ml[26,1213+12])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (lib/set.ml[27,1226+4]..lib/set.ml[27,1226+10])
            Tsig_type Rec
            [
              type_declaration t/299 (lib/set.ml[27,1226+4]..lib/set.ml[27,1226+10])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          signature_item (lib/set.ml[28,1237+4]..lib/set.ml[28,1237+16])
            Tsig_value
            value_description empty/300 (lib/set.ml[28,1237+4]..lib/set.ml[28,1237+16])
              core_type (lib/set.ml[28,1237+15]..lib/set.ml[28,1237+16])
                Ttyp_constr "t/299"
                []
              []
          signature_item (lib/set.ml[29,1254+4]..lib/set.ml[29,1254+26])
            Tsig_value
            value_description add/301 (lib/set.ml[29,1254+4]..lib/set.ml[29,1254+26])
              core_type (lib/set.ml[29,1254+13]..lib/set.ml[29,1254+26])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[29,1254+13]..lib/set.ml[29,1254+16])
                  Ttyp_constr "elt/298"
                  []
                core_type (lib/set.ml[29,1254+20]..lib/set.ml[29,1254+26])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[29,1254+20]..lib/set.ml[29,1254+21])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[29,1254+25]..lib/set.ml[29,1254+26])
                    Ttyp_constr "t/299"
                    []
              []
          signature_item (lib/set.ml[30,1281+4]..lib/set.ml[30,1281+27])
            Tsig_value
            value_description singleton/302 (lib/set.ml[30,1281+4]..lib/set.ml[30,1281+27])
              core_type (lib/set.ml[30,1281+19]..lib/set.ml[30,1281+27])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[30,1281+19]..lib/set.ml[30,1281+22])
                  Ttyp_constr "elt/298"
                  []
                core_type (lib/set.ml[30,1281+26]..lib/set.ml[30,1281+27])
                  Ttyp_constr "t/299"
                  []
              []
          signature_item (lib/set.ml[31,1309+4]..lib/set.ml[31,1309+29])
            Tsig_value
            value_description remove/303 (lib/set.ml[31,1309+4]..lib/set.ml[31,1309+29])
              core_type (lib/set.ml[31,1309+16]..lib/set.ml[31,1309+29])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[31,1309+16]..lib/set.ml[31,1309+19])
                  Ttyp_constr "elt/298"
                  []
                core_type (lib/set.ml[31,1309+23]..lib/set.ml[31,1309+29])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[31,1309+23]..lib/set.ml[31,1309+24])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[31,1309+28]..lib/set.ml[31,1309+29])
                    Ttyp_constr "t/299"
                    []
              []
          signature_item (lib/set.ml[32,1339+4]..lib/set.ml[32,1339+26])
            Tsig_value
            value_description union/304 (lib/set.ml[32,1339+4]..lib/set.ml[32,1339+26])
              core_type (lib/set.ml[32,1339+15]..lib/set.ml[32,1339+26])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[32,1339+15]..lib/set.ml[32,1339+16])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[32,1339+20]..lib/set.ml[32,1339+26])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[32,1339+20]..lib/set.ml[32,1339+21])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[32,1339+25]..lib/set.ml[32,1339+26])
                    Ttyp_constr "t/299"
                    []
              []
          signature_item (lib/set.ml[33,1366+4]..lib/set.ml[33,1366+26])
            Tsig_value
            value_description inter/305 (lib/set.ml[33,1366+4]..lib/set.ml[33,1366+26])
              core_type (lib/set.ml[33,1366+15]..lib/set.ml[33,1366+26])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[33,1366+15]..lib/set.ml[33,1366+16])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[33,1366+20]..lib/set.ml[33,1366+26])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[33,1366+20]..lib/set.ml[33,1366+21])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[33,1366+25]..lib/set.ml[33,1366+26])
                    Ttyp_constr "t/299"
                    []
              []
          signature_item (lib/set.ml[34,1393+4]..lib/set.ml[34,1393+32])
            Tsig_value
            value_description disjoint/306 (lib/set.ml[34,1393+4]..lib/set.ml[34,1393+32])
              core_type (lib/set.ml[34,1393+18]..lib/set.ml[34,1393+32])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[34,1393+18]..lib/set.ml[34,1393+19])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[34,1393+23]..lib/set.ml[34,1393+32])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[34,1393+23]..lib/set.ml[34,1393+24])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[34,1393+28]..lib/set.ml[34,1393+32])
                    Ttyp_constr "bool/5!"
                    []
              []
          signature_item (lib/set.ml[35,1426+4]..lib/set.ml[35,1426+25])
            Tsig_value
            value_description diff/307 (lib/set.ml[35,1426+4]..lib/set.ml[35,1426+25])
              core_type (lib/set.ml[35,1426+14]..lib/set.ml[35,1426+25])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[35,1426+14]..lib/set.ml[35,1426+15])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[35,1426+19]..lib/set.ml[35,1426+25])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[35,1426+19]..lib/set.ml[35,1426+20])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[35,1426+24]..lib/set.ml[35,1426+25])
                    Ttyp_constr "t/299"
                    []
              []
          signature_item (lib/set.ml[36,1452+4]..lib/set.ml[36,1452+26])
            Tsig_value
            value_description cardinal/308 (lib/set.ml[36,1452+4]..lib/set.ml[36,1452+26])
              core_type (lib/set.ml[36,1452+18]..lib/set.ml[36,1452+26])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[36,1452+18]..lib/set.ml[36,1452+19])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[36,1452+23]..lib/set.ml[36,1452+26])
                  Ttyp_constr "int/1!"
                  []
              []
          signature_item (lib/set.ml[37,1479+4]..lib/set.ml[37,1479+31])
            Tsig_value
            value_description elements/309 (lib/set.ml[37,1479+4]..lib/set.ml[37,1479+31])
              core_type (lib/set.ml[37,1479+18]..lib/set.ml[37,1479+31])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[37,1479+18]..lib/set.ml[37,1479+19])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[37,1479+23]..lib/set.ml[37,1479+31])
                  Ttyp_constr "list/9!"
                  [
                    core_type (lib/set.ml[37,1479+23]..lib/set.ml[37,1479+26])
                      Ttyp_constr "elt/298"
                      []
                  ]
              []
          signature_item (lib/set.ml[38,1511+4]..lib/set.ml[38,1511+25])
            Tsig_value
            value_description min_elt/310 (lib/set.ml[38,1511+4]..lib/set.ml[38,1511+25])
              core_type (lib/set.ml[38,1511+17]..lib/set.ml[38,1511+25])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[38,1511+17]..lib/set.ml[38,1511+18])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[38,1511+22]..lib/set.ml[38,1511+25])
                  Ttyp_constr "elt/298"
                  []
              []
          signature_item (lib/set.ml[39,1537+4]..lib/set.ml[39,1537+36])
            Tsig_value
            value_description min_elt_opt/311 (lib/set.ml[39,1537+4]..lib/set.ml[39,1537+36])
              core_type (lib/set.ml[39,1537+21]..lib/set.ml[39,1537+36])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[39,1537+21]..lib/set.ml[39,1537+22])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[39,1537+26]..lib/set.ml[39,1537+36])
                  Ttyp_constr "option/10!"
                  [
                    core_type (lib/set.ml[39,1537+26]..lib/set.ml[39,1537+29])
                      Ttyp_constr "elt/298"
                      []
                  ]
              []
          signature_item (lib/set.ml[40,1574+4]..lib/set.ml[40,1574+25])
            Tsig_value
            value_description max_elt/312 (lib/set.ml[40,1574+4]..lib/set.ml[40,1574+25])
              core_type (lib/set.ml[40,1574+17]..lib/set.ml[40,1574+25])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[40,1574+17]..lib/set.ml[40,1574+18])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[40,1574+22]..lib/set.ml[40,1574+25])
                  Ttyp_constr "elt/298"
                  []
              []
          signature_item (lib/set.ml[41,1600+4]..lib/set.ml[41,1600+36])
            Tsig_value
            value_description max_elt_opt/313 (lib/set.ml[41,1600+4]..lib/set.ml[41,1600+36])
              core_type (lib/set.ml[41,1600+21]..lib/set.ml[41,1600+36])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[41,1600+21]..lib/set.ml[41,1600+22])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[41,1600+26]..lib/set.ml[41,1600+36])
                  Ttyp_constr "option/10!"
                  [
                    core_type (lib/set.ml[41,1600+26]..lib/set.ml[41,1600+29])
                      Ttyp_constr "elt/298"
                      []
                  ]
              []
          signature_item (lib/set.ml[42,1637+4]..lib/set.ml[42,1637+24])
            Tsig_value
            value_description choose/314 (lib/set.ml[42,1637+4]..lib/set.ml[42,1637+24])
              core_type (lib/set.ml[42,1637+16]..lib/set.ml[42,1637+24])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[42,1637+16]..lib/set.ml[42,1637+17])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[42,1637+21]..lib/set.ml[42,1637+24])
                  Ttyp_constr "elt/298"
                  []
              []
          signature_item (lib/set.ml[43,1662+4]..lib/set.ml[43,1662+35])
            Tsig_value
            value_description choose_opt/315 (lib/set.ml[43,1662+4]..lib/set.ml[43,1662+35])
              core_type (lib/set.ml[43,1662+20]..lib/set.ml[43,1662+35])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[43,1662+20]..lib/set.ml[43,1662+21])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[43,1662+25]..lib/set.ml[43,1662+35])
                  Ttyp_constr "option/10!"
                  [
                    core_type (lib/set.ml[43,1662+25]..lib/set.ml[43,1662+28])
                      Ttyp_constr "elt/298"
                      []
                  ]
              []
          signature_item (lib/set.ml[44,1698+4]..lib/set.ml[44,1698+29])
            Tsig_value
            value_description find/316 (lib/set.ml[44,1698+4]..lib/set.ml[44,1698+29])
              core_type (lib/set.ml[44,1698+14]..lib/set.ml[44,1698+29])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[44,1698+14]..lib/set.ml[44,1698+17])
                  Ttyp_constr "elt/298"
                  []
                core_type (lib/set.ml[44,1698+21]..lib/set.ml[44,1698+29])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[44,1698+21]..lib/set.ml[44,1698+22])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[44,1698+26]..lib/set.ml[44,1698+29])
                    Ttyp_constr "elt/298"
                    []
              []
          signature_item (lib/set.ml[45,1728+4]..lib/set.ml[45,1728+40])
            Tsig_value
            value_description find_opt/317 (lib/set.ml[45,1728+4]..lib/set.ml[45,1728+40])
              core_type (lib/set.ml[45,1728+18]..lib/set.ml[45,1728+40])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[45,1728+18]..lib/set.ml[45,1728+21])
                  Ttyp_constr "elt/298"
                  []
                core_type (lib/set.ml[45,1728+25]..lib/set.ml[45,1728+40])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[45,1728+25]..lib/set.ml[45,1728+26])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[45,1728+30]..lib/set.ml[45,1728+40])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/set.ml[45,1728+30]..lib/set.ml[45,1728+33])
                        Ttyp_constr "elt/298"
                        []
                    ]
              []
          signature_item (lib/set.ml[46,1769+4]..lib/set.ml[46,1769+45])
            Tsig_value
            value_description find_first/318 (lib/set.ml[46,1769+4]..lib/set.ml[46,1769+45])
              core_type (lib/set.ml[46,1769+20]..lib/set.ml[46,1769+45])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[46,1769+21]..lib/set.ml[46,1769+32])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[46,1769+21]..lib/set.ml[46,1769+24])
                    Ttyp_constr "elt/298"
                    []
                  core_type (lib/set.ml[46,1769+28]..lib/set.ml[46,1769+32])
                    Ttyp_constr "bool/5!"
                    []
                core_type (lib/set.ml[46,1769+37]..lib/set.ml[46,1769+45])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[46,1769+37]..lib/set.ml[46,1769+38])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[46,1769+42]..lib/set.ml[46,1769+45])
                    Ttyp_constr "elt/298"
                    []
              []
          signature_item (lib/set.ml[47,1815+4]..lib/set.ml[47,1815+56])
            Tsig_value
            value_description find_first_opt/319 (lib/set.ml[47,1815+4]..lib/set.ml[47,1815+56])
              core_type (lib/set.ml[47,1815+24]..lib/set.ml[47,1815+56])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[47,1815+25]..lib/set.ml[47,1815+36])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[47,1815+25]..lib/set.ml[47,1815+28])
                    Ttyp_constr "elt/298"
                    []
                  core_type (lib/set.ml[47,1815+32]..lib/set.ml[47,1815+36])
                    Ttyp_constr "bool/5!"
                    []
                core_type (lib/set.ml[47,1815+41]..lib/set.ml[47,1815+56])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[47,1815+41]..lib/set.ml[47,1815+42])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[47,1815+46]..lib/set.ml[47,1815+56])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/set.ml[47,1815+46]..lib/set.ml[47,1815+49])
                        Ttyp_constr "elt/298"
                        []
                    ]
              []
          signature_item (lib/set.ml[48,1872+4]..lib/set.ml[48,1872+44])
            Tsig_value
            value_description find_last/320 (lib/set.ml[48,1872+4]..lib/set.ml[48,1872+44])
              core_type (lib/set.ml[48,1872+19]..lib/set.ml[48,1872+44])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[48,1872+20]..lib/set.ml[48,1872+31])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[48,1872+20]..lib/set.ml[48,1872+23])
                    Ttyp_constr "elt/298"
                    []
                  core_type (lib/set.ml[48,1872+27]..lib/set.ml[48,1872+31])
                    Ttyp_constr "bool/5!"
                    []
                core_type (lib/set.ml[48,1872+36]..lib/set.ml[48,1872+44])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[48,1872+36]..lib/set.ml[48,1872+37])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[48,1872+41]..lib/set.ml[48,1872+44])
                    Ttyp_constr "elt/298"
                    []
              []
          signature_item (lib/set.ml[49,1917+4]..lib/set.ml[49,1917+55])
            Tsig_value
            value_description find_last_opt/321 (lib/set.ml[49,1917+4]..lib/set.ml[49,1917+55])
              core_type (lib/set.ml[49,1917+23]..lib/set.ml[49,1917+55])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[49,1917+24]..lib/set.ml[49,1917+35])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[49,1917+24]..lib/set.ml[49,1917+27])
                    Ttyp_constr "elt/298"
                    []
                  core_type (lib/set.ml[49,1917+31]..lib/set.ml[49,1917+35])
                    Ttyp_constr "bool/5!"
                    []
                core_type (lib/set.ml[49,1917+40]..lib/set.ml[49,1917+55])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[49,1917+40]..lib/set.ml[49,1917+41])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[49,1917+45]..lib/set.ml[49,1917+55])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/set.ml[49,1917+45]..lib/set.ml[49,1917+48])
                        Ttyp_constr "elt/298"
                        []
                    ]
              []
          signature_item (lib/set.ml[50,1973+4]..lib/set.ml[50,1973+40])
            Tsig_value
            value_description iter/322 (lib/set.ml[50,1973+4]..lib/set.ml[50,1973+40])
              core_type (lib/set.ml[50,1973+14]..lib/set.ml[50,1973+40])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[50,1973+15]..lib/set.ml[50,1973+26])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[50,1973+15]..lib/set.ml[50,1973+18])
                    Ttyp_constr "elt/298"
                    []
                  core_type (lib/set.ml[50,1973+22]..lib/set.ml[50,1973+26])
                    Ttyp_constr "unit/6!"
                    []
                core_type (lib/set.ml[50,1973+31]..lib/set.ml[50,1973+40])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[50,1973+31]..lib/set.ml[50,1973+32])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[50,1973+36]..lib/set.ml[50,1973+40])
                    Ttyp_constr "unit/6!"
                    []
              []
          signature_item (lib/set.ml[51,2014+4]..lib/set.ml[51,2014+48])
            Tsig_value
            value_description fold/323 (lib/set.ml[51,2014+4]..lib/set.ml[51,2014+48])
              core_type (lib/set.ml[51,2014+14]..lib/set.ml[51,2014+48])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[51,2014+15]..lib/set.ml[51,2014+30])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[51,2014+15]..lib/set.ml[51,2014+18])
                    Ttyp_constr "elt/298"
                    []
                  core_type (lib/set.ml[51,2014+22]..lib/set.ml[51,2014+30])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/set.ml[51,2014+22]..lib/set.ml[51,2014+24])
                      Ttyp_var a
                    core_type (lib/set.ml[51,2014+28]..lib/set.ml[51,2014+30])
                      Ttyp_var a
                core_type (lib/set.ml[51,2014+35]..lib/set.ml[51,2014+48])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[51,2014+35]..lib/set.ml[51,2014+36])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[51,2014+40]..lib/set.ml[51,2014+48])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/set.ml[51,2014+40]..lib/set.ml[51,2014+42])
                      Ttyp_var a
                    core_type (lib/set.ml[51,2014+46]..lib/set.ml[51,2014+48])
                      Ttyp_var a
              []
          signature_item (lib/set.ml[52,2063+4]..lib/set.ml[52,2063+35])
            Tsig_value
            value_description map/324 (lib/set.ml[52,2063+4]..lib/set.ml[52,2063+35])
              core_type (lib/set.ml[52,2063+13]..lib/set.ml[52,2063+35])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[52,2063+14]..lib/set.ml[52,2063+24])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[52,2063+14]..lib/set.ml[52,2063+17])
                    Ttyp_constr "elt/298"
                    []
                  core_type (lib/set.ml[52,2063+21]..lib/set.ml[52,2063+24])
                    Ttyp_constr "elt/298"
                    []
                core_type (lib/set.ml[52,2063+29]..lib/set.ml[52,2063+35])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[52,2063+29]..lib/set.ml[52,2063+30])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[52,2063+34]..lib/set.ml[52,2063+35])
                    Ttyp_constr "t/299"
                    []
              []
          signature_item (lib/set.ml[53,2099+4]..lib/set.ml[53,2099+39])
            Tsig_value
            value_description filter/325 (lib/set.ml[53,2099+4]..lib/set.ml[53,2099+39])
              core_type (lib/set.ml[53,2099+16]..lib/set.ml[53,2099+39])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[53,2099+17]..lib/set.ml[53,2099+28])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[53,2099+17]..lib/set.ml[53,2099+20])
                    Ttyp_constr "elt/298"
                    []
                  core_type (lib/set.ml[53,2099+24]..lib/set.ml[53,2099+28])
                    Ttyp_constr "bool/5!"
                    []
                core_type (lib/set.ml[53,2099+33]..lib/set.ml[53,2099+39])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[53,2099+33]..lib/set.ml[53,2099+34])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[53,2099+38]..lib/set.ml[53,2099+39])
                    Ttyp_constr "t/299"
                    []
              []
          signature_item (lib/set.ml[54,2139+4]..lib/set.ml[54,2139+49])
            Tsig_value
            value_description filter_map/326 (lib/set.ml[54,2139+4]..lib/set.ml[54,2139+49])
              core_type (lib/set.ml[54,2139+20]..lib/set.ml[54,2139+49])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[54,2139+21]..lib/set.ml[54,2139+38])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[54,2139+21]..lib/set.ml[54,2139+24])
                    Ttyp_constr "elt/298"
                    []
                  core_type (lib/set.ml[54,2139+28]..lib/set.ml[54,2139+38])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/set.ml[54,2139+28]..lib/set.ml[54,2139+31])
                        Ttyp_constr "elt/298"
                        []
                    ]
                core_type (lib/set.ml[54,2139+43]..lib/set.ml[54,2139+49])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[54,2139+43]..lib/set.ml[54,2139+44])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[54,2139+48]..lib/set.ml[54,2139+49])
                    Ttyp_constr "t/299"
                    []
              []
          signature_item (lib/set.ml[55,2189+4]..lib/set.ml[55,2189+46])
            Tsig_value
            value_description partition/327 (lib/set.ml[55,2189+4]..lib/set.ml[55,2189+46])
              core_type (lib/set.ml[55,2189+19]..lib/set.ml[55,2189+46])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[55,2189+20]..lib/set.ml[55,2189+31])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[55,2189+20]..lib/set.ml[55,2189+23])
                    Ttyp_constr "elt/298"
                    []
                  core_type (lib/set.ml[55,2189+27]..lib/set.ml[55,2189+31])
                    Ttyp_constr "bool/5!"
                    []
                core_type (lib/set.ml[55,2189+36]..lib/set.ml[55,2189+46])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[55,2189+36]..lib/set.ml[55,2189+37])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[55,2189+41]..lib/set.ml[55,2189+46])
                    Ttyp_tuple
                    [
                      core_type (lib/set.ml[55,2189+41]..lib/set.ml[55,2189+42])
                        Ttyp_constr "t/299"
                        []
                      core_type (lib/set.ml[55,2189+45]..lib/set.ml[55,2189+46])
                        Ttyp_constr "t/299"
                        []
                    ]
              []
          signature_item (lib/set.ml[56,2236+4]..lib/set.ml[56,2236+39])
            Tsig_value
            value_description split/328 (lib/set.ml[56,2236+4]..lib/set.ml[56,2236+39])
              core_type (lib/set.ml[56,2236+15]..lib/set.ml[56,2236+39])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[56,2236+15]..lib/set.ml[56,2236+18])
                  Ttyp_constr "elt/298"
                  []
                core_type (lib/set.ml[56,2236+22]..lib/set.ml[56,2236+39])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[56,2236+22]..lib/set.ml[56,2236+23])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[56,2236+27]..lib/set.ml[56,2236+39])
                    Ttyp_tuple
                    [
                      core_type (lib/set.ml[56,2236+27]..lib/set.ml[56,2236+28])
                        Ttyp_constr "t/299"
                        []
                      core_type (lib/set.ml[56,2236+31]..lib/set.ml[56,2236+35])
                        Ttyp_constr "bool/5!"
                        []
                      core_type (lib/set.ml[56,2236+38]..lib/set.ml[56,2236+39])
                        Ttyp_constr "t/299"
                        []
                    ]
              []
          signature_item (lib/set.ml[57,2276+4]..lib/set.ml[57,2276+27])
            Tsig_value
            value_description is_empty/329 (lib/set.ml[57,2276+4]..lib/set.ml[57,2276+27])
              core_type (lib/set.ml[57,2276+18]..lib/set.ml[57,2276+27])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[57,2276+18]..lib/set.ml[57,2276+19])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[57,2276+23]..lib/set.ml[57,2276+27])
                  Ttyp_constr "bool/5!"
                  []
              []
          signature_item (lib/set.ml[58,2304+4]..lib/set.ml[58,2304+29])
            Tsig_value
            value_description mem/330 (lib/set.ml[58,2304+4]..lib/set.ml[58,2304+29])
              core_type (lib/set.ml[58,2304+13]..lib/set.ml[58,2304+29])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[58,2304+13]..lib/set.ml[58,2304+16])
                  Ttyp_constr "elt/298"
                  []
                core_type (lib/set.ml[58,2304+20]..lib/set.ml[58,2304+29])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[58,2304+20]..lib/set.ml[58,2304+21])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[58,2304+25]..lib/set.ml[58,2304+29])
                    Ttyp_constr "bool/5!"
                    []
              []
          signature_item (lib/set.ml[59,2334+4]..lib/set.ml[59,2334+29])
            Tsig_value
            value_description equal/331 (lib/set.ml[59,2334+4]..lib/set.ml[59,2334+29])
              core_type (lib/set.ml[59,2334+15]..lib/set.ml[59,2334+29])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[59,2334+15]..lib/set.ml[59,2334+16])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[59,2334+20]..lib/set.ml[59,2334+29])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[59,2334+20]..lib/set.ml[59,2334+21])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[59,2334+25]..lib/set.ml[59,2334+29])
                    Ttyp_constr "bool/5!"
                    []
              []
          signature_item (lib/set.ml[60,2364+4]..lib/set.ml[60,2364+30])
            Tsig_value
            value_description compare/332 (lib/set.ml[60,2364+4]..lib/set.ml[60,2364+30])
              core_type (lib/set.ml[60,2364+17]..lib/set.ml[60,2364+30])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[60,2364+17]..lib/set.ml[60,2364+18])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[60,2364+22]..lib/set.ml[60,2364+30])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[60,2364+22]..lib/set.ml[60,2364+23])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[60,2364+27]..lib/set.ml[60,2364+30])
                    Ttyp_constr "int/1!"
                    []
              []
          signature_item (lib/set.ml[61,2395+4]..lib/set.ml[61,2395+30])
            Tsig_value
            value_description subset/333 (lib/set.ml[61,2395+4]..lib/set.ml[61,2395+30])
              core_type (lib/set.ml[61,2395+16]..lib/set.ml[61,2395+30])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[61,2395+16]..lib/set.ml[61,2395+17])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[61,2395+21]..lib/set.ml[61,2395+30])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[61,2395+21]..lib/set.ml[61,2395+22])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[61,2395+26]..lib/set.ml[61,2395+30])
                    Ttyp_constr "bool/5!"
                    []
              []
          signature_item (lib/set.ml[62,2426+4]..lib/set.ml[62,2426+43])
            Tsig_value
            value_description for_all/334 (lib/set.ml[62,2426+4]..lib/set.ml[62,2426+43])
              core_type (lib/set.ml[62,2426+17]..lib/set.ml[62,2426+43])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[62,2426+18]..lib/set.ml[62,2426+29])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[62,2426+18]..lib/set.ml[62,2426+21])
                    Ttyp_constr "elt/298"
                    []
                  core_type (lib/set.ml[62,2426+25]..lib/set.ml[62,2426+29])
                    Ttyp_constr "bool/5!"
                    []
                core_type (lib/set.ml[62,2426+34]..lib/set.ml[62,2426+43])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[62,2426+34]..lib/set.ml[62,2426+35])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[62,2426+39]..lib/set.ml[62,2426+43])
                    Ttyp_constr "bool/5!"
                    []
              []
          signature_item (lib/set.ml[63,2470+4]..lib/set.ml[63,2470+42])
            Tsig_value
            value_description exists/335 (lib/set.ml[63,2470+4]..lib/set.ml[63,2470+42])
              core_type (lib/set.ml[63,2470+16]..lib/set.ml[63,2470+42])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[63,2470+17]..lib/set.ml[63,2470+28])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[63,2470+17]..lib/set.ml[63,2470+20])
                    Ttyp_constr "elt/298"
                    []
                  core_type (lib/set.ml[63,2470+24]..lib/set.ml[63,2470+28])
                    Ttyp_constr "bool/5!"
                    []
                core_type (lib/set.ml[63,2470+33]..lib/set.ml[63,2470+42])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[63,2470+33]..lib/set.ml[63,2470+34])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[63,2470+38]..lib/set.ml[63,2470+42])
                    Ttyp_constr "bool/5!"
                    []
              []
          signature_item (lib/set.ml[64,2513+4]..lib/set.ml[64,2513+31])
            Tsig_value
            value_description to_list/336 (lib/set.ml[64,2513+4]..lib/set.ml[64,2513+31])
              core_type (lib/set.ml[64,2513+18]..lib/set.ml[64,2513+31])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[64,2513+18]..lib/set.ml[64,2513+19])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[64,2513+23]..lib/set.ml[64,2513+31])
                  Ttyp_constr "list/9!"
                  [
                    core_type (lib/set.ml[64,2513+23]..lib/set.ml[64,2513+26])
                      Ttyp_constr "elt/298"
                      []
                  ]
              []
          signature_item (lib/set.ml[65,2545+4]..lib/set.ml[65,2545+30])
            Tsig_value
            value_description of_list/337 (lib/set.ml[65,2545+4]..lib/set.ml[65,2545+30])
              core_type (lib/set.ml[65,2545+17]..lib/set.ml[65,2545+30])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[65,2545+17]..lib/set.ml[65,2545+25])
                  Ttyp_constr "list/9!"
                  [
                    core_type (lib/set.ml[65,2545+17]..lib/set.ml[65,2545+20])
                      Ttyp_constr "elt/298"
                      []
                  ]
                core_type (lib/set.ml[65,2545+29]..lib/set.ml[65,2545+30])
                  Ttyp_constr "t/299"
                  []
              []
          signature_item (lib/set.ml[66,2576+4]..lib/set.ml[66,2576+43])
            Tsig_value
            value_description to_seq_from/399 (lib/set.ml[66,2576+4]..lib/set.ml[66,2576+43])
              core_type (lib/set.ml[66,2576+22]..lib/set.ml[66,2576+43])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[66,2576+22]..lib/set.ml[66,2576+25])
                  Ttyp_constr "elt/298"
                  []
                core_type (lib/set.ml[66,2576+29]..lib/set.ml[66,2576+43])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[66,2576+29]..lib/set.ml[66,2576+30])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[66,2576+34]..lib/set.ml[66,2576+43])
                    Ttyp_constr "Stdlib!.Seq.t"
                    [
                      core_type (lib/set.ml[66,2576+34]..lib/set.ml[66,2576+37])
                        Ttyp_constr "elt/298"
                        []
                    ]
              []
          signature_item (lib/set.ml[67,2620+4]..lib/set.ml[67,2620+31])
            Tsig_value
            value_description to_seq/400 (lib/set.ml[67,2620+4]..lib/set.ml[67,2620+31])
              core_type (lib/set.ml[67,2620+17]..lib/set.ml[67,2620+31])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[67,2620+17]..lib/set.ml[67,2620+18])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[67,2620+22]..lib/set.ml[67,2620+31])
                  Ttyp_constr "Stdlib!.Seq.t"
                  [
                    core_type (lib/set.ml[67,2620+22]..lib/set.ml[67,2620+25])
                      Ttyp_constr "elt/298"
                      []
                  ]
              []
          signature_item (lib/set.ml[68,2652+4]..lib/set.ml[68,2652+35])
            Tsig_value
            value_description to_rev_seq/401 (lib/set.ml[68,2652+4]..lib/set.ml[68,2652+35])
              core_type (lib/set.ml[68,2652+21]..lib/set.ml[68,2652+35])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[68,2652+21]..lib/set.ml[68,2652+22])
                  Ttyp_constr "t/299"
                  []
                core_type (lib/set.ml[68,2652+26]..lib/set.ml[68,2652+35])
                  Ttyp_constr "Stdlib!.Seq.t"
                  [
                    core_type (lib/set.ml[68,2652+26]..lib/set.ml[68,2652+29])
                      Ttyp_constr "elt/298"
                      []
                  ]
              []
          signature_item (lib/set.ml[69,2688+4]..lib/set.ml[69,2688+37])
            Tsig_value
            value_description add_seq/402 (lib/set.ml[69,2688+4]..lib/set.ml[69,2688+37])
              core_type (lib/set.ml[69,2688+18]..lib/set.ml[69,2688+37])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[69,2688+18]..lib/set.ml[69,2688+27])
                  Ttyp_constr "Stdlib!.Seq.t"
                  [
                    core_type (lib/set.ml[69,2688+18]..lib/set.ml[69,2688+21])
                      Ttyp_constr "elt/298"
                      []
                  ]
                core_type (lib/set.ml[69,2688+31]..lib/set.ml[69,2688+37])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/set.ml[69,2688+31]..lib/set.ml[69,2688+32])
                    Ttyp_constr "t/299"
                    []
                  core_type (lib/set.ml[69,2688+36]..lib/set.ml[69,2688+37])
                    Ttyp_constr "t/299"
                    []
              []
          signature_item (lib/set.ml[70,2726+4]..lib/set.ml[70,2726+31])
            Tsig_value
            value_description of_seq/403 (lib/set.ml[70,2726+4]..lib/set.ml[70,2726+31])
              core_type (lib/set.ml[70,2726+17]..lib/set.ml[70,2726+31])
                Ttyp_arrow
                Nolabel
                core_type (lib/set.ml[70,2726+17]..lib/set.ml[70,2726+26])
                  Ttyp_constr "Stdlib!.Seq.t"
                  [
                    core_type (lib/set.ml[70,2726+17]..lib/set.ml[70,2726+20])
                      Ttyp_constr "elt/298"
                      []
                  ]
                core_type (lib/set.ml[70,2726+30]..lib/set.ml[70,2726+31])
                  Ttyp_constr "t/299"
                  []
              []
        ]
  structure_item (lib/set.ml[73,2765+0]..lib/set.ml[623,19523+5])
    Tstr_module
    Make/1025
      module_expr (lib/set.ml[73,2765+11]..lib/set.ml[623,19523+5])
        Tmod_functor "Ord/405"
        module_type (lib/set.ml[73,2765+17]..lib/set.ml[73,2765+28])
          Tmty_ident "OrderedType/297"
        module_expr (lib/set.ml[74,2797+2]..lib/set.ml[623,19523+5])
          Tmod_structure
          [
            structure_item (lib/set.ml[75,2806+4]..lib/set.ml[75,2806+20])
              Tstr_type Rec
              [
                type_declaration elt/406 (lib/set.ml[75,2806+4]..lib/set.ml[75,2806+20])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/set.ml[75,2806+15]..lib/set.ml[75,2806+20])
                        Ttyp_constr "Ord/405.t"
                        []
              ]
            structure_item (lib/set.ml[76,2827+4]..lib/set.ml[76,2827+53])
              Tstr_type Rec
              [
                type_declaration t/407 (lib/set.ml[76,2827+4]..lib/set.ml[76,2827+53])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_variant
                      [
                        (lib/set.ml[76,2827+13]..lib/set.ml[76,2827+18])
                          Empty/408
                          []
                          None
                        (lib/set.ml[76,2827+19]..lib/set.ml[76,2827+53])
                          Node/409
                          [
                            (lib/set.ml[76,2827+30]..lib/set.ml[76,2827+34])
                              Immutable
                              l/410                              core_type (lib/set.ml[76,2827+32]..lib/set.ml[76,2827+33])
                                Ttyp_poly
                                core_type (lib/set.ml[76,2827+32]..lib/set.ml[76,2827+33])
                                  Ttyp_constr "t/407"
                                  []
                            (lib/set.ml[76,2827+35]..lib/set.ml[76,2827+41])
                              Immutable
                              v/411                              core_type (lib/set.ml[76,2827+37]..lib/set.ml[76,2827+40])
                                Ttyp_poly
                                core_type (lib/set.ml[76,2827+37]..lib/set.ml[76,2827+40])
                                  Ttyp_constr "elt/406"
                                  []
                            (lib/set.ml[76,2827+42]..lib/set.ml[76,2827+46])
                              Immutable
                              r/412                              core_type (lib/set.ml[76,2827+44]..lib/set.ml[76,2827+45])
                                Ttyp_poly
                                core_type (lib/set.ml[76,2827+44]..lib/set.ml[76,2827+45])
                                  Ttyp_constr "t/407"
                                  []
                            (lib/set.ml[76,2827+47]..lib/set.ml[76,2827+52])
                              Immutable
                              h/413                              core_type (lib/set.ml[76,2827+49]..lib/set.ml[76,2827+52])
                                Ttyp_poly
                                core_type (lib/set.ml[76,2827+49]..lib/set.ml[76,2827+52])
                                  Ttyp_constr "int/1!"
                                  []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lib/set.ml[81,2995+4]..lib/set.ml[83,3040+21])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[81,2995+8]..lib/set.ml[81,2995+14])
                    Tpat_var "height/414"
                  expression (lib/set.ml[81,2995+17]..lib/set.ml[83,3040+21])
                    Texp_function
                    []
                    Tfunction_cases (lib/set.ml[81,2995+17]..lib/set.ml[83,3040+21])
                      [
                        <case>
                          pattern (lib/set.ml[82,3021+8]..lib/set.ml[82,3021+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[82,3021+17]..lib/set.ml[82,3021+18])
                            Texp_constant Const_int 0
                        <case>
                          pattern (lib/set.ml[83,3040+8]..lib/set.ml[83,3040+16])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[83,3040+13]..lib/set.ml[83,3040+16])
                                Tpat_record
                                [
                                  "h"
                                    pattern (lib/set.ml[83,3040+14]..lib/set.ml[83,3040+15])
                                      Tpat_var "h/416"
                                ]
                            ]
                            None
                          expression (lib/set.ml[83,3040+20]..lib/set.ml[83,3040+21])
                            Texp_ident "h/416"
                      ]
              ]
            structure_item (lib/set.ml[90,3316+4]..lib/set.ml[93,3455+60])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[90,3316+8]..lib/set.ml[90,3316+14])
                    Tpat_var "create/418"
                  expression (lib/set.ml[90,3316+15]..lib/set.ml[93,3455+60]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[90,3316+15]..lib/set.ml[90,3316+16])
                          Tpat_var "l/420"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[90,3316+17]..lib/set.ml[90,3316+18])
                          Tpat_var "v/421"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[90,3316+19]..lib/set.ml[90,3316+20])
                          Tpat_var "r/422"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[91,3339+6]..lib/set.ml[93,3455+60])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/set.ml[91,3339+10]..lib/set.ml[91,3339+12])
                              Tpat_var "hl/423"
                            expression (lib/set.ml[91,3339+15]..lib/set.ml[91,3339+54])
                              Texp_match
                              expression (lib/set.ml[91,3339+21]..lib/set.ml[91,3339+22])
                                Texp_ident "l/420"
                              [
                                <case>
                                  pattern (lib/set.ml[91,3339+28]..lib/set.ml[91,3339+33])
                                    Tpat_value
                                    pattern (lib/set.ml[91,3339+28]..lib/set.ml[91,3339+33])
                                      Tpat_construct "Empty"
                                      []
                                      None
                                  expression (lib/set.ml[91,3339+37]..lib/set.ml[91,3339+38])
                                    Texp_constant Const_int 0
                                <case>
                                  pattern (lib/set.ml[91,3339+41]..lib/set.ml[91,3339+49])
                                    Tpat_value
                                    pattern (lib/set.ml[91,3339+41]..lib/set.ml[91,3339+49])
                                      Tpat_construct "Node"
                                      [
                                        pattern (lib/set.ml[91,3339+46]..lib/set.ml[91,3339+49])
                                          Tpat_record
                                          [
                                            "h"
                                              pattern (lib/set.ml[91,3339+47]..lib/set.ml[91,3339+48])
                                                Tpat_var "h/424"
                                          ]
                                      ]
                                      None
                                  expression (lib/set.ml[91,3339+53]..lib/set.ml[91,3339+54])
                                    Texp_ident "h/424"
                              ]
                        ]
                        expression (lib/set.ml[92,3397+6]..lib/set.ml[93,3455+60])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/set.ml[92,3397+10]..lib/set.ml[92,3397+12])
                                Tpat_var "hr/425"
                              expression (lib/set.ml[92,3397+15]..lib/set.ml[92,3397+54])
                                Texp_match
                                expression (lib/set.ml[92,3397+21]..lib/set.ml[92,3397+22])
                                  Texp_ident "r/422"
                                [
                                  <case>
                                    pattern (lib/set.ml[92,3397+28]..lib/set.ml[92,3397+33])
                                      Tpat_value
                                      pattern (lib/set.ml[92,3397+28]..lib/set.ml[92,3397+33])
                                        Tpat_construct "Empty"
                                        []
                                        None
                                    expression (lib/set.ml[92,3397+37]..lib/set.ml[92,3397+38])
                                      Texp_constant Const_int 0
                                  <case>
                                    pattern (lib/set.ml[92,3397+41]..lib/set.ml[92,3397+49])
                                      Tpat_value
                                      pattern (lib/set.ml[92,3397+41]..lib/set.ml[92,3397+49])
                                        Tpat_construct "Node"
                                        [
                                          pattern (lib/set.ml[92,3397+46]..lib/set.ml[92,3397+49])
                                            Tpat_record
                                            [
                                              "h"
                                                pattern (lib/set.ml[92,3397+47]..lib/set.ml[92,3397+48])
                                                  Tpat_var "h/426"
                                            ]
                                        ]
                                        None
                                    expression (lib/set.ml[92,3397+53]..lib/set.ml[92,3397+54])
                                      Texp_ident "h/426"
                                ]
                          ]
                          expression (lib/set.ml[93,3455+6]..lib/set.ml[93,3455+60])
                            Texp_construct "Node"
                            [
                              expression (lib/set.ml[93,3455+10]..lib/set.ml[93,3455+60])
                                Texp_record
                                  fields =
                                    [
                                      "l"
                                        expression (lib/set.ml[93,3455+11]..lib/set.ml[93,3455+12])
                                          Texp_ident "l/420"
                                      "v"
                                        expression (lib/set.ml[93,3455+14]..lib/set.ml[93,3455+15])
                                          Texp_ident "v/421"
                                      "r"
                                        expression (lib/set.ml[93,3455+17]..lib/set.ml[93,3455+18])
                                          Texp_ident "r/422"
                                      "h"
                                        expression (lib/set.ml[93,3455+22]..lib/set.ml[93,3455+59])
                                          Texp_ifthenelse
                                          expression (lib/set.ml[93,3455+26]..lib/set.ml[93,3455+34])
                                            Texp_apply
                                            expression (lib/set.ml[93,3455+29]..lib/set.ml[93,3455+31])
                                              Texp_ident "Stdlib!.>="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[93,3455+26]..lib/set.ml[93,3455+28])
                                                  Texp_ident "hl/423"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[93,3455+32]..lib/set.ml[93,3455+34])
                                                  Texp_ident "hr/425"
                                            ]
                                          expression (lib/set.ml[93,3455+40]..lib/set.ml[93,3455+46])
                                            Texp_apply
                                            expression (lib/set.ml[93,3455+43]..lib/set.ml[93,3455+44])
                                              Texp_ident "Stdlib!.+"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[93,3455+40]..lib/set.ml[93,3455+42])
                                                  Texp_ident "hl/423"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[93,3455+45]..lib/set.ml[93,3455+46])
                                                  Texp_constant Const_int 1
                                            ]
                                          Some
                                            expression (lib/set.ml[93,3455+52]..lib/set.ml[93,3455+58])
                                              Texp_apply
                                              expression (lib/set.ml[93,3455+55]..lib/set.ml[93,3455+56])
                                                Texp_ident "Stdlib!.+"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[93,3455+52]..lib/set.ml[93,3455+54])
                                                    Texp_ident "hr/425"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[93,3455+57]..lib/set.ml[93,3455+58])
                                                    Texp_constant Const_int 1
                                              ]
                                    ]
                                  representation =
Record_inlined 0
                                  extended_expression =
                                    None
                            ]
              ]
            structure_item (lib/set.ml[100,3779+4]..lib/set.ml[128,4818+62])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[100,3779+8]..lib/set.ml[100,3779+11])
                    Tpat_var "bal/427"
                  expression (lib/set.ml[100,3779+12]..lib/set.ml[128,4818+62]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[100,3779+12]..lib/set.ml[100,3779+13])
                          Tpat_var "l/429"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[100,3779+14]..lib/set.ml[100,3779+15])
                          Tpat_var "v/430"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[100,3779+16]..lib/set.ml[100,3779+17])
                          Tpat_var "r/431"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[101,3799+6]..lib/set.ml[128,4818+62])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/set.ml[101,3799+10]..lib/set.ml[101,3799+12])
                              Tpat_var "hl/432"
                            expression (lib/set.ml[101,3799+15]..lib/set.ml[101,3799+54])
                              Texp_match
                              expression (lib/set.ml[101,3799+21]..lib/set.ml[101,3799+22])
                                Texp_ident "l/429"
                              [
                                <case>
                                  pattern (lib/set.ml[101,3799+28]..lib/set.ml[101,3799+33])
                                    Tpat_value
                                    pattern (lib/set.ml[101,3799+28]..lib/set.ml[101,3799+33])
                                      Tpat_construct "Empty"
                                      []
                                      None
                                  expression (lib/set.ml[101,3799+37]..lib/set.ml[101,3799+38])
                                    Texp_constant Const_int 0
                                <case>
                                  pattern (lib/set.ml[101,3799+41]..lib/set.ml[101,3799+49])
                                    Tpat_value
                                    pattern (lib/set.ml[101,3799+41]..lib/set.ml[101,3799+49])
                                      Tpat_construct "Node"
                                      [
                                        pattern (lib/set.ml[101,3799+46]..lib/set.ml[101,3799+49])
                                          Tpat_record
                                          [
                                            "h"
                                              pattern (lib/set.ml[101,3799+47]..lib/set.ml[101,3799+48])
                                                Tpat_var "h/433"
                                          ]
                                      ]
                                      None
                                  expression (lib/set.ml[101,3799+53]..lib/set.ml[101,3799+54])
                                    Texp_ident "h/433"
                              ]
                        ]
                        expression (lib/set.ml[102,3857+6]..lib/set.ml[128,4818+62])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/set.ml[102,3857+10]..lib/set.ml[102,3857+12])
                                Tpat_var "hr/434"
                              expression (lib/set.ml[102,3857+15]..lib/set.ml[102,3857+54])
                                Texp_match
                                expression (lib/set.ml[102,3857+21]..lib/set.ml[102,3857+22])
                                  Texp_ident "r/431"
                                [
                                  <case>
                                    pattern (lib/set.ml[102,3857+28]..lib/set.ml[102,3857+33])
                                      Tpat_value
                                      pattern (lib/set.ml[102,3857+28]..lib/set.ml[102,3857+33])
                                        Tpat_construct "Empty"
                                        []
                                        None
                                    expression (lib/set.ml[102,3857+37]..lib/set.ml[102,3857+38])
                                      Texp_constant Const_int 0
                                  <case>
                                    pattern (lib/set.ml[102,3857+41]..lib/set.ml[102,3857+49])
                                      Tpat_value
                                      pattern (lib/set.ml[102,3857+41]..lib/set.ml[102,3857+49])
                                        Tpat_construct "Node"
                                        [
                                          pattern (lib/set.ml[102,3857+46]..lib/set.ml[102,3857+49])
                                            Tpat_record
                                            [
                                              "h"
                                                pattern (lib/set.ml[102,3857+47]..lib/set.ml[102,3857+48])
                                                  Tpat_var "h/435"
                                            ]
                                        ]
                                        None
                                    expression (lib/set.ml[102,3857+53]..lib/set.ml[102,3857+54])
                                      Texp_ident "h/435"
                                ]
                          ]
                          expression (lib/set.ml[103,3915+6]..lib/set.ml[128,4818+62])
                            Texp_ifthenelse
                            expression (lib/set.ml[103,3915+9]..lib/set.ml[103,3915+20])
                              Texp_apply
                              expression (lib/set.ml[103,3915+12]..lib/set.ml[103,3915+13])
                                Texp_ident "Stdlib!.>"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[103,3915+9]..lib/set.ml[103,3915+11])
                                    Texp_ident "hl/432"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[103,3915+14]..lib/set.ml[103,3915+20])
                                    Texp_apply
                                    expression (lib/set.ml[103,3915+17]..lib/set.ml[103,3915+18])
                                      Texp_ident "Stdlib!.+"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[103,3915+14]..lib/set.ml[103,3915+16])
                                          Texp_ident "hr/434"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[103,3915+19]..lib/set.ml[103,3915+20])
                                          Texp_constant Const_int 2
                                    ]
                              ]
                            expression (lib/set.ml[103,3915+26]..lib/set.ml[115,4354+9])
                              Texp_match
                              expression (lib/set.ml[104,3947+14]..lib/set.ml[104,3947+15])
                                Texp_ident "l/429"
                              [
                                <case>
                                  pattern (lib/set.ml[105,3968+10]..lib/set.ml[105,3968+15])
                                    Tpat_value
                                    pattern (lib/set.ml[105,3968+10]..lib/set.ml[105,3968+15])
                                      Tpat_construct "Empty"
                                      []
                                      None
                                  expression (lib/set.ml[105,3968+19]..lib/set.ml[105,3968+40])
                                    Texp_apply
                                    expression (lib/set.ml[105,3968+19]..lib/set.ml[105,3968+30])
                                      Texp_ident "Stdlib!.invalid_arg"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[105,3968+31]..lib/set.ml[105,3968+40])
                                          Texp_constant Const_string("Set.bal",(lib/set.ml[105,3968+32]..lib/set.ml[105,3968+39]),None)
                                    ]
                                <case>
                                  pattern (lib/set.ml[106,4009+10]..lib/set.ml[106,4009+32])
                                    Tpat_value
                                    pattern (lib/set.ml[106,4009+10]..lib/set.ml[106,4009+32])
                                      Tpat_construct "Node"
                                      [
                                        pattern (lib/set.ml[106,4009+14]..lib/set.ml[106,4009+32])
                                          Tpat_record
                                          [
                                            "l"
                                              pattern (lib/set.ml[106,4009+17]..lib/set.ml[106,4009+19])
                                                Tpat_var "ll/436"
                                            "v"
                                              pattern (lib/set.ml[106,4009+23]..lib/set.ml[106,4009+25])
                                                Tpat_var "lv/437"
                                            "r"
                                              pattern (lib/set.ml[106,4009+29]..lib/set.ml[106,4009+31])
                                                Tpat_var "lr/438"
                                          ]
                                      ]
                                      None
                                  expression (lib/set.ml[107,4045+12]..lib/set.ml[114,4338+15])
                                    Texp_ifthenelse
                                    expression (lib/set.ml[107,4045+15]..lib/set.ml[107,4045+37])
                                      Texp_apply
                                      expression (lib/set.ml[107,4045+25]..lib/set.ml[107,4045+27])
                                        Texp_ident "Stdlib!.>="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[107,4045+15]..lib/set.ml[107,4045+24])
                                            Texp_apply
                                            expression (lib/set.ml[107,4045+15]..lib/set.ml[107,4045+21])
                                              Texp_ident "height/414"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[107,4045+22]..lib/set.ml[107,4045+24])
                                                  Texp_ident "ll/436"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[107,4045+28]..lib/set.ml[107,4045+37])
                                            Texp_apply
                                            expression (lib/set.ml[107,4045+28]..lib/set.ml[107,4045+34])
                                              Texp_ident "height/414"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[107,4045+35]..lib/set.ml[107,4045+37])
                                                  Texp_ident "lr/438"
                                            ]
                                      ]
                                    expression (lib/set.ml[108,4088+14]..lib/set.ml[108,4088+42])
                                      Texp_apply
                                      expression (lib/set.ml[108,4088+14]..lib/set.ml[108,4088+20])
                                        Texp_ident "create/418"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[108,4088+21]..lib/set.ml[108,4088+23])
                                            Texp_ident "ll/436"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[108,4088+24]..lib/set.ml[108,4088+26])
                                            Texp_ident "lv/437"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[108,4088+27]..lib/set.ml[108,4088+42])
                                            Texp_apply
                                            expression (lib/set.ml[108,4088+28]..lib/set.ml[108,4088+34])
                                              Texp_ident "create/418"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[108,4088+35]..lib/set.ml[108,4088+37])
                                                  Texp_ident "lr/438"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[108,4088+38]..lib/set.ml[108,4088+39])
                                                  Texp_ident "v/430"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[108,4088+40]..lib/set.ml[108,4088+41])
                                                  Texp_ident "r/431"
                                            ]
                                      ]
                                    Some
                                      expression (lib/set.ml[109,4131+17]..lib/set.ml[114,4338+15])
                                        Texp_match
                                        expression (lib/set.ml[110,4154+20]..lib/set.ml[110,4154+22])
                                          Texp_ident "lr/438"
                                        [
                                          <case>
                                            pattern (lib/set.ml[111,4182+16]..lib/set.ml[111,4182+21])
                                              Tpat_value
                                              pattern (lib/set.ml[111,4182+16]..lib/set.ml[111,4182+21])
                                                Tpat_construct "Empty"
                                                []
                                                None
                                            expression (lib/set.ml[111,4182+25]..lib/set.ml[111,4182+46])
                                              Texp_apply
                                              expression (lib/set.ml[111,4182+25]..lib/set.ml[111,4182+36])
                                                Texp_ident "Stdlib!.invalid_arg"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[111,4182+37]..lib/set.ml[111,4182+46])
                                                    Texp_constant Const_string("Set.bal",(lib/set.ml[111,4182+38]..lib/set.ml[111,4182+45]),None)
                                              ]
                                          <case>
                                            pattern (lib/set.ml[112,4229+16]..lib/set.ml[112,4229+41])
                                              Tpat_value
                                              pattern (lib/set.ml[112,4229+16]..lib/set.ml[112,4229+41])
                                                Tpat_construct "Node"
                                                [
                                                  pattern (lib/set.ml[112,4229+20]..lib/set.ml[112,4229+41])
                                                    Tpat_record
                                                    [
                                                      "l"
                                                        pattern (lib/set.ml[112,4229+23]..lib/set.ml[112,4229+26])
                                                          Tpat_var "lrl/439"
                                                      "v"
                                                        pattern (lib/set.ml[112,4229+30]..lib/set.ml[112,4229+33])
                                                          Tpat_var "lrv/440"
                                                      "r"
                                                        pattern (lib/set.ml[112,4229+37]..lib/set.ml[112,4229+40])
                                                          Tpat_var "lrr/441"
                                                    ]
                                                ]
                                                None
                                            expression (lib/set.ml[113,4273+18]..lib/set.ml[113,4273+64])
                                              Texp_apply
                                              expression (lib/set.ml[113,4273+18]..lib/set.ml[113,4273+24])
                                                Texp_ident "create/418"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[113,4273+25]..lib/set.ml[113,4273+43])
                                                    Texp_apply
                                                    expression (lib/set.ml[113,4273+26]..lib/set.ml[113,4273+32])
                                                      Texp_ident "create/418"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/set.ml[113,4273+33]..lib/set.ml[113,4273+35])
                                                          Texp_ident "ll/436"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/set.ml[113,4273+36]..lib/set.ml[113,4273+38])
                                                          Texp_ident "lv/437"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/set.ml[113,4273+39]..lib/set.ml[113,4273+42])
                                                          Texp_ident "lrl/439"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[113,4273+44]..lib/set.ml[113,4273+47])
                                                    Texp_ident "lrv/440"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[113,4273+48]..lib/set.ml[113,4273+64])
                                                    Texp_apply
                                                    expression (lib/set.ml[113,4273+49]..lib/set.ml[113,4273+55])
                                                      Texp_ident "create/418"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/set.ml[113,4273+56]..lib/set.ml[113,4273+59])
                                                          Texp_ident "lrr/441"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/set.ml[113,4273+60]..lib/set.ml[113,4273+61])
                                                          Texp_ident "v/430"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/set.ml[113,4273+62]..lib/set.ml[113,4273+63])
                                                          Texp_ident "r/431"
                                                    ]
                                              ]
                                        ]
                              ]
                            Some
                              expression (lib/set.ml[115,4354+15]..lib/set.ml[128,4818+62])
                                Texp_ifthenelse
                                expression (lib/set.ml[115,4354+18]..lib/set.ml[115,4354+29])
                                  Texp_apply
                                  expression (lib/set.ml[115,4354+21]..lib/set.ml[115,4354+22])
                                    Texp_ident "Stdlib!.>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[115,4354+18]..lib/set.ml[115,4354+20])
                                        Texp_ident "hr/434"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[115,4354+23]..lib/set.ml[115,4354+29])
                                        Texp_apply
                                        expression (lib/set.ml[115,4354+26]..lib/set.ml[115,4354+27])
                                          Texp_ident "Stdlib!.+"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[115,4354+23]..lib/set.ml[115,4354+25])
                                              Texp_ident "hl/432"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[115,4354+28]..lib/set.ml[115,4354+29])
                                              Texp_constant Const_int 2
                                        ]
                                  ]
                                expression (lib/set.ml[115,4354+35]..lib/set.ml[127,4803+9])
                                  Texp_match
                                  expression (lib/set.ml[116,4395+14]..lib/set.ml[116,4395+15])
                                    Texp_ident "r/431"
                                  [
                                    <case>
                                      pattern (lib/set.ml[117,4416+10]..lib/set.ml[117,4416+15])
                                        Tpat_value
                                        pattern (lib/set.ml[117,4416+10]..lib/set.ml[117,4416+15])
                                          Tpat_construct "Empty"
                                          []
                                          None
                                      expression (lib/set.ml[117,4416+19]..lib/set.ml[117,4416+40])
                                        Texp_apply
                                        expression (lib/set.ml[117,4416+19]..lib/set.ml[117,4416+30])
                                          Texp_ident "Stdlib!.invalid_arg"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[117,4416+31]..lib/set.ml[117,4416+40])
                                              Texp_constant Const_string("Set.bal",(lib/set.ml[117,4416+32]..lib/set.ml[117,4416+39]),None)
                                        ]
                                    <case>
                                      pattern (lib/set.ml[118,4457+10]..lib/set.ml[118,4457+32])
                                        Tpat_value
                                        pattern (lib/set.ml[118,4457+10]..lib/set.ml[118,4457+32])
                                          Tpat_construct "Node"
                                          [
                                            pattern (lib/set.ml[118,4457+14]..lib/set.ml[118,4457+32])
                                              Tpat_record
                                              [
                                                "l"
                                                  pattern (lib/set.ml[118,4457+17]..lib/set.ml[118,4457+19])
                                                    Tpat_var "rl/442"
                                                "v"
                                                  pattern (lib/set.ml[118,4457+23]..lib/set.ml[118,4457+25])
                                                    Tpat_var "rv/443"
                                                "r"
                                                  pattern (lib/set.ml[118,4457+29]..lib/set.ml[118,4457+31])
                                                    Tpat_var "rr/444"
                                              ]
                                          ]
                                          None
                                      expression (lib/set.ml[119,4493+12]..lib/set.ml[126,4787+15])
                                        Texp_ifthenelse
                                        expression (lib/set.ml[119,4493+15]..lib/set.ml[119,4493+37])
                                          Texp_apply
                                          expression (lib/set.ml[119,4493+25]..lib/set.ml[119,4493+27])
                                            Texp_ident "Stdlib!.>="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[119,4493+15]..lib/set.ml[119,4493+24])
                                                Texp_apply
                                                expression (lib/set.ml[119,4493+15]..lib/set.ml[119,4493+21])
                                                  Texp_ident "height/414"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[119,4493+22]..lib/set.ml[119,4493+24])
                                                      Texp_ident "rr/444"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[119,4493+28]..lib/set.ml[119,4493+37])
                                                Texp_apply
                                                expression (lib/set.ml[119,4493+28]..lib/set.ml[119,4493+34])
                                                  Texp_ident "height/414"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[119,4493+35]..lib/set.ml[119,4493+37])
                                                      Texp_ident "rl/442"
                                                ]
                                          ]
                                        expression (lib/set.ml[120,4536+14]..lib/set.ml[120,4536+42])
                                          Texp_apply
                                          expression (lib/set.ml[120,4536+14]..lib/set.ml[120,4536+20])
                                            Texp_ident "create/418"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[120,4536+21]..lib/set.ml[120,4536+36])
                                                Texp_apply
                                                expression (lib/set.ml[120,4536+22]..lib/set.ml[120,4536+28])
                                                  Texp_ident "create/418"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[120,4536+29]..lib/set.ml[120,4536+30])
                                                      Texp_ident "l/429"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[120,4536+31]..lib/set.ml[120,4536+32])
                                                      Texp_ident "v/430"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[120,4536+33]..lib/set.ml[120,4536+35])
                                                      Texp_ident "rl/442"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[120,4536+37]..lib/set.ml[120,4536+39])
                                                Texp_ident "rv/443"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[120,4536+40]..lib/set.ml[120,4536+42])
                                                Texp_ident "rr/444"
                                          ]
                                        Some
                                          expression (lib/set.ml[121,4579+17]..lib/set.ml[126,4787+15])
                                            Texp_match
                                            expression (lib/set.ml[122,4602+20]..lib/set.ml[122,4602+22])
                                              Texp_ident "rl/442"
                                            [
                                              <case>
                                                pattern (lib/set.ml[123,4630+16]..lib/set.ml[123,4630+21])
                                                  Tpat_value
                                                  pattern (lib/set.ml[123,4630+16]..lib/set.ml[123,4630+21])
                                                    Tpat_construct "Empty"
                                                    []
                                                    None
                                                expression (lib/set.ml[123,4630+25]..lib/set.ml[123,4630+46])
                                                  Texp_apply
                                                  expression (lib/set.ml[123,4630+25]..lib/set.ml[123,4630+36])
                                                    Texp_ident "Stdlib!.invalid_arg"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/set.ml[123,4630+37]..lib/set.ml[123,4630+46])
                                                        Texp_constant Const_string("Set.bal",(lib/set.ml[123,4630+38]..lib/set.ml[123,4630+45]),None)
                                                  ]
                                              <case>
                                                pattern (lib/set.ml[124,4677+16]..lib/set.ml[124,4677+41])
                                                  Tpat_value
                                                  pattern (lib/set.ml[124,4677+16]..lib/set.ml[124,4677+41])
                                                    Tpat_construct "Node"
                                                    [
                                                      pattern (lib/set.ml[124,4677+20]..lib/set.ml[124,4677+41])
                                                        Tpat_record
                                                        [
                                                          "l"
                                                            pattern (lib/set.ml[124,4677+23]..lib/set.ml[124,4677+26])
                                                              Tpat_var "rll/445"
                                                          "v"
                                                            pattern (lib/set.ml[124,4677+30]..lib/set.ml[124,4677+33])
                                                              Tpat_var "rlv/446"
                                                          "r"
                                                            pattern (lib/set.ml[124,4677+37]..lib/set.ml[124,4677+40])
                                                              Tpat_var "rlr/447"
                                                        ]
                                                    ]
                                                    None
                                                expression (lib/set.ml[125,4722+18]..lib/set.ml[125,4722+64])
                                                  Texp_apply
                                                  expression (lib/set.ml[125,4722+18]..lib/set.ml[125,4722+24])
                                                    Texp_ident "create/418"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/set.ml[125,4722+25]..lib/set.ml[125,4722+41])
                                                        Texp_apply
                                                        expression (lib/set.ml[125,4722+26]..lib/set.ml[125,4722+32])
                                                          Texp_ident "create/418"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/set.ml[125,4722+33]..lib/set.ml[125,4722+34])
                                                              Texp_ident "l/429"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/set.ml[125,4722+35]..lib/set.ml[125,4722+36])
                                                              Texp_ident "v/430"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/set.ml[125,4722+37]..lib/set.ml[125,4722+40])
                                                              Texp_ident "rll/445"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/set.ml[125,4722+42]..lib/set.ml[125,4722+45])
                                                        Texp_ident "rlv/446"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/set.ml[125,4722+46]..lib/set.ml[125,4722+64])
                                                        Texp_apply
                                                        expression (lib/set.ml[125,4722+47]..lib/set.ml[125,4722+53])
                                                          Texp_ident "create/418"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/set.ml[125,4722+54]..lib/set.ml[125,4722+57])
                                                              Texp_ident "rlr/447"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/set.ml[125,4722+58]..lib/set.ml[125,4722+60])
                                                              Texp_ident "rv/443"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/set.ml[125,4722+61]..lib/set.ml[125,4722+63])
                                                              Texp_ident "rr/444"
                                                        ]
                                                  ]
                                            ]
                                  ]
                                Some
                                  expression (lib/set.ml[128,4818+8]..lib/set.ml[128,4818+62])
                                    Texp_construct "Node"
                                    [
                                      expression (lib/set.ml[128,4818+12]..lib/set.ml[128,4818+62])
                                        Texp_record
                                          fields =
                                            [
                                              "l"
                                                expression (lib/set.ml[128,4818+13]..lib/set.ml[128,4818+14])
                                                  Texp_ident "l/429"
                                              "v"
                                                expression (lib/set.ml[128,4818+16]..lib/set.ml[128,4818+17])
                                                  Texp_ident "v/430"
                                              "r"
                                                expression (lib/set.ml[128,4818+19]..lib/set.ml[128,4818+20])
                                                  Texp_ident "r/431"
                                              "h"
                                                expression (lib/set.ml[128,4818+24]..lib/set.ml[128,4818+61])
                                                  Texp_ifthenelse
                                                  expression (lib/set.ml[128,4818+28]..lib/set.ml[128,4818+36])
                                                    Texp_apply
                                                    expression (lib/set.ml[128,4818+31]..lib/set.ml[128,4818+33])
                                                      Texp_ident "Stdlib!.>="
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/set.ml[128,4818+28]..lib/set.ml[128,4818+30])
                                                          Texp_ident "hl/432"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/set.ml[128,4818+34]..lib/set.ml[128,4818+36])
                                                          Texp_ident "hr/434"
                                                    ]
                                                  expression (lib/set.ml[128,4818+42]..lib/set.ml[128,4818+48])
                                                    Texp_apply
                                                    expression (lib/set.ml[128,4818+45]..lib/set.ml[128,4818+46])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/set.ml[128,4818+42]..lib/set.ml[128,4818+44])
                                                          Texp_ident "hl/432"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/set.ml[128,4818+47]..lib/set.ml[128,4818+48])
                                                          Texp_constant Const_int 1
                                                    ]
                                                  Some
                                                    expression (lib/set.ml[128,4818+54]..lib/set.ml[128,4818+60])
                                                      Texp_apply
                                                      expression (lib/set.ml[128,4818+57]..lib/set.ml[128,4818+58])
                                                        Texp_ident "Stdlib!.+"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/set.ml[128,4818+54]..lib/set.ml[128,4818+56])
                                                            Texp_ident "hr/434"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/set.ml[128,4818+59]..lib/set.ml[128,4818+60])
                                                            Texp_constant Const_int 1
                                                      ]
                                            ]
                                          representation =
Record_inlined 0
                                          extended_expression =
                                            None
                                    ]
              ]
            structure_item (lib/set.ml[132,4918+4]..lib/set.ml[142,5244+45])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[132,4918+12]..lib/set.ml[132,4918+15])
                    Tpat_var "add/448"
                  expression (lib/set.ml[132,4918+16]..lib/set.ml[142,5244+45]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[132,4918+16]..lib/set.ml[132,4918+17])
                          Tpat_var "x/449"
                    ]
                    Tfunction_cases (lib/set.ml[132,4918+20]..lib/set.ml[142,5244+45])
                      [
                        <case>
                          pattern (lib/set.ml[133,4947+8]..lib/set.ml[133,4947+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[133,4947+17]..lib/set.ml[133,4947+49])
                            Texp_construct "Node"
                            [
                              expression (lib/set.ml[133,4947+21]..lib/set.ml[133,4947+49])
                                Texp_record
                                  fields =
                                    [
                                      "l"
                                        expression (lib/set.ml[133,4947+24]..lib/set.ml[133,4947+29])
                                          Texp_construct "Empty"
                                          []
                                      "v"
                                        expression (lib/set.ml[133,4947+33]..lib/set.ml[133,4947+34])
                                          Texp_ident "x/449"
                                      "r"
                                        expression (lib/set.ml[133,4947+38]..lib/set.ml[133,4947+43])
                                          Texp_construct "Empty"
                                          []
                                      "h"
                                        expression (lib/set.ml[133,4947+47]..lib/set.ml[133,4947+48])
                                          Texp_constant Const_int 1
                                    ]
                                  representation =
Record_inlined 0
                                  extended_expression =
                                    None
                            ]
                        <case>
                          pattern (lib/set.ml[134,4997+8]..lib/set.ml[134,4997+26])
                            Tpat_alias "t/453"
                            pattern (lib/set.ml[134,4997+8]..lib/set.ml[134,4997+21])
                              Tpat_construct "Node"
                              [
                                pattern (lib/set.ml[134,4997+12]..lib/set.ml[134,4997+21])
                                  Tpat_record
                                  [
                                    "l"
                                      pattern (lib/set.ml[134,4997+13]..lib/set.ml[134,4997+14])
                                        Tpat_var "l/450"
                                    "v"
                                      pattern (lib/set.ml[134,4997+16]..lib/set.ml[134,4997+17])
                                        Tpat_var "v/451"
                                    "r"
                                      pattern (lib/set.ml[134,4997+19]..lib/set.ml[134,4997+20])
                                        Tpat_var "r/452"
                                  ]
                              ]
                              None
                          expression (lib/set.ml[135,5027+10]..lib/set.ml[142,5244+45])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[135,5027+14]..lib/set.ml[135,5027+15])
                                  Tpat_var "c/454"
                                expression (lib/set.ml[135,5027+18]..lib/set.ml[135,5027+33])
                                  Texp_apply
                                  expression (lib/set.ml[135,5027+18]..lib/set.ml[135,5027+29])
                                    Texp_ident "Ord/405.compare"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[135,5027+30]..lib/set.ml[135,5027+31])
                                        Texp_ident "x/449"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[135,5027+32]..lib/set.ml[135,5027+33])
                                        Texp_ident "v/451"
                                  ]
                            ]
                            expression (lib/set.ml[136,5064+10]..lib/set.ml[142,5244+45])
                              Texp_ifthenelse
                              expression (lib/set.ml[136,5064+13]..lib/set.ml[136,5064+18])
                                Texp_apply
                                expression (lib/set.ml[136,5064+15]..lib/set.ml[136,5064+16])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[136,5064+13]..lib/set.ml[136,5064+14])
                                      Texp_ident "c/454"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[136,5064+17]..lib/set.ml[136,5064+18])
                                      Texp_constant Const_int 0
                                ]
                              expression (lib/set.ml[136,5064+24]..lib/set.ml[136,5064+25])
                                Texp_ident "t/453"
                              Some
                                expression (lib/set.ml[137,5095+10]..lib/set.ml[142,5244+45])
                                  Texp_ifthenelse
                                  expression (lib/set.ml[137,5095+13]..lib/set.ml[137,5095+18])
                                    Texp_apply
                                    expression (lib/set.ml[137,5095+15]..lib/set.ml[137,5095+16])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[137,5095+13]..lib/set.ml[137,5095+14])
                                          Texp_ident "c/454"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[137,5095+17]..lib/set.ml[137,5095+18])
                                          Texp_constant Const_int 0
                                    ]
                                  expression (lib/set.ml[138,5119+12]..lib/set.ml[139,5151+45])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/set.ml[138,5119+16]..lib/set.ml[138,5119+18])
                                          Tpat_var "ll/455"
                                        expression (lib/set.ml[138,5119+21]..lib/set.ml[138,5119+28])
                                          Texp_apply
                                          expression (lib/set.ml[138,5119+21]..lib/set.ml[138,5119+24])
                                            Texp_ident "add/448"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[138,5119+25]..lib/set.ml[138,5119+26])
                                                Texp_ident "x/449"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[138,5119+27]..lib/set.ml[138,5119+28])
                                                Texp_ident "l/450"
                                          ]
                                    ]
                                    expression (lib/set.ml[139,5151+12]..lib/set.ml[139,5151+45])
                                      Texp_ifthenelse
                                      expression (lib/set.ml[139,5151+15]..lib/set.ml[139,5151+22])
                                        Texp_apply
                                        expression (lib/set.ml[139,5151+17]..lib/set.ml[139,5151+19])
                                          Texp_ident "Stdlib!.=="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[139,5151+15]..lib/set.ml[139,5151+16])
                                              Texp_ident "l/450"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[139,5151+20]..lib/set.ml[139,5151+22])
                                              Texp_ident "ll/455"
                                        ]
                                      expression (lib/set.ml[139,5151+28]..lib/set.ml[139,5151+29])
                                        Texp_ident "t/453"
                                      Some
                                        expression (lib/set.ml[139,5151+35]..lib/set.ml[139,5151+45])
                                          Texp_apply
                                          expression (lib/set.ml[139,5151+35]..lib/set.ml[139,5151+38])
                                            Texp_ident "bal/427"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[139,5151+39]..lib/set.ml[139,5151+41])
                                                Texp_ident "ll/455"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[139,5151+42]..lib/set.ml[139,5151+43])
                                                Texp_ident "v/451"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[139,5151+44]..lib/set.ml[139,5151+45])
                                                Texp_ident "r/452"
                                          ]
                                  Some
                                    expression (lib/set.ml[141,5212+12]..lib/set.ml[142,5244+45])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/set.ml[141,5212+16]..lib/set.ml[141,5212+18])
                                            Tpat_var "rr/456"
                                          expression (lib/set.ml[141,5212+21]..lib/set.ml[141,5212+28])
                                            Texp_apply
                                            expression (lib/set.ml[141,5212+21]..lib/set.ml[141,5212+24])
                                              Texp_ident "add/448"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[141,5212+25]..lib/set.ml[141,5212+26])
                                                  Texp_ident "x/449"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[141,5212+27]..lib/set.ml[141,5212+28])
                                                  Texp_ident "r/452"
                                            ]
                                      ]
                                      expression (lib/set.ml[142,5244+12]..lib/set.ml[142,5244+45])
                                        Texp_ifthenelse
                                        expression (lib/set.ml[142,5244+15]..lib/set.ml[142,5244+22])
                                          Texp_apply
                                          expression (lib/set.ml[142,5244+17]..lib/set.ml[142,5244+19])
                                            Texp_ident "Stdlib!.=="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[142,5244+15]..lib/set.ml[142,5244+16])
                                                Texp_ident "r/452"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[142,5244+20]..lib/set.ml[142,5244+22])
                                                Texp_ident "rr/456"
                                          ]
                                        expression (lib/set.ml[142,5244+28]..lib/set.ml[142,5244+29])
                                          Texp_ident "t/453"
                                        Some
                                          expression (lib/set.ml[142,5244+35]..lib/set.ml[142,5244+45])
                                            Texp_apply
                                            expression (lib/set.ml[142,5244+35]..lib/set.ml[142,5244+38])
                                              Texp_ident "bal/427"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[142,5244+39]..lib/set.ml[142,5244+40])
                                                  Texp_ident "l/450"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[142,5244+41]..lib/set.ml[142,5244+42])
                                                  Texp_ident "v/451"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[142,5244+43]..lib/set.ml[142,5244+45])
                                                  Texp_ident "rr/456"
                                            ]
                      ]
              ]
            structure_item (lib/set.ml[144,5291+4]..lib/set.ml[144,5291+54])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[144,5291+8]..lib/set.ml[144,5291+17])
                    Tpat_var "singleton/457"
                  expression (lib/set.ml[144,5291+18]..lib/set.ml[144,5291+54]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[144,5291+18]..lib/set.ml[144,5291+19])
                          Tpat_var "x/459"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[144,5291+22]..lib/set.ml[144,5291+54])
                        Texp_construct "Node"
                        [
                          expression (lib/set.ml[144,5291+26]..lib/set.ml[144,5291+54])
                            Texp_record
                              fields =
                                [
                                  "l"
                                    expression (lib/set.ml[144,5291+29]..lib/set.ml[144,5291+34])
                                      Texp_construct "Empty"
                                      []
                                  "v"
                                    expression (lib/set.ml[144,5291+38]..lib/set.ml[144,5291+39])
                                      Texp_ident "x/459"
                                  "r"
                                    expression (lib/set.ml[144,5291+43]..lib/set.ml[144,5291+48])
                                      Texp_construct "Empty"
                                      []
                                  "h"
                                    expression (lib/set.ml[144,5291+52]..lib/set.ml[144,5291+53])
                                      Texp_constant Const_int 1
                                ]
                              representation =
Record_inlined 0
                              extended_expression =
                                None
                        ]
              ]
            structure_item (lib/set.ml[153,5677+4]..lib/set.ml[156,5773+37])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[153,5677+12]..lib/set.ml[153,5677+27])
                    Tpat_var "add_min_element/460"
                  expression (lib/set.ml[153,5677+28]..lib/set.ml[156,5773+37]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[153,5677+28]..lib/set.ml[153,5677+29])
                          Tpat_var "x/461"
                    ]
                    Tfunction_cases (lib/set.ml[153,5677+32]..lib/set.ml[156,5773+37])
                      [
                        <case>
                          pattern (lib/set.ml[154,5718+8]..lib/set.ml[154,5718+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[154,5718+17]..lib/set.ml[154,5718+28])
                            Texp_apply
                            expression (lib/set.ml[154,5718+17]..lib/set.ml[154,5718+26])
                              Texp_ident "singleton/457"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[154,5718+27]..lib/set.ml[154,5718+28])
                                  Texp_ident "x/461"
                            ]
                        <case>
                          pattern (lib/set.ml[155,5747+8]..lib/set.ml[155,5747+22])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[155,5747+13]..lib/set.ml[155,5747+22])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[155,5747+14]..lib/set.ml[155,5747+15])
                                      Tpat_var "l/462"
                                  "v"
                                    pattern (lib/set.ml[155,5747+17]..lib/set.ml[155,5747+18])
                                      Tpat_var "v/463"
                                  "r"
                                    pattern (lib/set.ml[155,5747+20]..lib/set.ml[155,5747+21])
                                      Tpat_var "r/464"
                                ]
                            ]
                            None
                          expression (lib/set.ml[156,5773+8]..lib/set.ml[156,5773+37])
                            Texp_apply
                            expression (lib/set.ml[156,5773+8]..lib/set.ml[156,5773+11])
                              Texp_ident "bal/427"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[156,5773+12]..lib/set.ml[156,5773+33])
                                  Texp_apply
                                  expression (lib/set.ml[156,5773+13]..lib/set.ml[156,5773+28])
                                    Texp_ident "add_min_element/460"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[156,5773+29]..lib/set.ml[156,5773+30])
                                        Texp_ident "x/461"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[156,5773+31]..lib/set.ml[156,5773+32])
                                        Texp_ident "l/462"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/set.ml[156,5773+34]..lib/set.ml[156,5773+35])
                                  Texp_ident "v/463"
                              <arg>
                                Nolabel
                                expression (lib/set.ml[156,5773+36]..lib/set.ml[156,5773+37])
                                  Texp_ident "r/464"
                            ]
                      ]
              ]
            structure_item (lib/set.ml[158,5812+4]..lib/set.ml[161,5908+37])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[158,5812+12]..lib/set.ml[158,5812+27])
                    Tpat_var "add_max_element/466"
                  expression (lib/set.ml[158,5812+28]..lib/set.ml[161,5908+37]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[158,5812+28]..lib/set.ml[158,5812+29])
                          Tpat_var "x/467"
                    ]
                    Tfunction_cases (lib/set.ml[158,5812+32]..lib/set.ml[161,5908+37])
                      [
                        <case>
                          pattern (lib/set.ml[159,5853+8]..lib/set.ml[159,5853+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[159,5853+17]..lib/set.ml[159,5853+28])
                            Texp_apply
                            expression (lib/set.ml[159,5853+17]..lib/set.ml[159,5853+26])
                              Texp_ident "singleton/457"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[159,5853+27]..lib/set.ml[159,5853+28])
                                  Texp_ident "x/467"
                            ]
                        <case>
                          pattern (lib/set.ml[160,5882+8]..lib/set.ml[160,5882+22])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[160,5882+13]..lib/set.ml[160,5882+22])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[160,5882+14]..lib/set.ml[160,5882+15])
                                      Tpat_var "l/468"
                                  "v"
                                    pattern (lib/set.ml[160,5882+17]..lib/set.ml[160,5882+18])
                                      Tpat_var "v/469"
                                  "r"
                                    pattern (lib/set.ml[160,5882+20]..lib/set.ml[160,5882+21])
                                      Tpat_var "r/470"
                                ]
                            ]
                            None
                          expression (lib/set.ml[161,5908+8]..lib/set.ml[161,5908+37])
                            Texp_apply
                            expression (lib/set.ml[161,5908+8]..lib/set.ml[161,5908+11])
                              Texp_ident "bal/427"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[161,5908+12]..lib/set.ml[161,5908+13])
                                  Texp_ident "l/468"
                              <arg>
                                Nolabel
                                expression (lib/set.ml[161,5908+14]..lib/set.ml[161,5908+15])
                                  Texp_ident "v/469"
                              <arg>
                                Nolabel
                                expression (lib/set.ml[161,5908+16]..lib/set.ml[161,5908+37])
                                  Texp_apply
                                  expression (lib/set.ml[161,5908+17]..lib/set.ml[161,5908+32])
                                    Texp_ident "add_max_element/466"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[161,5908+33]..lib/set.ml[161,5908+34])
                                        Texp_ident "x/467"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[161,5908+35]..lib/set.ml[161,5908+36])
                                        Texp_ident "r/470"
                                  ]
                            ]
                      ]
              ]
            structure_item (lib/set.ml[166,6053+4]..lib/set.ml[173,6376+22])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[166,6053+12]..lib/set.ml[166,6053+16])
                    Tpat_var "join/472"
                  expression (lib/set.ml[166,6053+17]..lib/set.ml[173,6376+22]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[166,6053+17]..lib/set.ml[166,6053+18])
                          Tpat_var "l/473"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[166,6053+19]..lib/set.ml[166,6053+20])
                          Tpat_var "v/474"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[166,6053+21]..lib/set.ml[166,6053+22])
                          Tpat_var "r/475"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[167,6078+6]..lib/set.ml[173,6376+22])
                        Texp_match
                        expression (lib/set.ml[167,6078+12]..lib/set.ml[167,6078+18])
                          Texp_tuple
                          [
                            expression (lib/set.ml[167,6078+13]..lib/set.ml[167,6078+14])
                              Texp_ident "l/473"
                            expression (lib/set.ml[167,6078+16]..lib/set.ml[167,6078+17])
                              Texp_ident "r/475"
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[168,6102+8]..lib/set.ml[168,6102+18])
                              Tpat_value
                              pattern (lib/set.ml[168,6102+8]..lib/set.ml[168,6102+18])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[168,6102+9]..lib/set.ml[168,6102+14])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                  pattern (lib/set.ml[168,6102+16]..lib/set.ml[168,6102+17])
                                    Tpat_any
                                ]
                            expression (lib/set.ml[168,6102+22]..lib/set.ml[168,6102+41])
                              Texp_apply
                              expression (lib/set.ml[168,6102+22]..lib/set.ml[168,6102+37])
                                Texp_ident "add_min_element/460"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[168,6102+38]..lib/set.ml[168,6102+39])
                                    Texp_ident "v/474"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[168,6102+40]..lib/set.ml[168,6102+41])
                                    Texp_ident "r/475"
                              ]
                          <case>
                            pattern (lib/set.ml[169,6144+8]..lib/set.ml[169,6144+18])
                              Tpat_value
                              pattern (lib/set.ml[169,6144+8]..lib/set.ml[169,6144+18])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[169,6144+9]..lib/set.ml[169,6144+10])
                                    Tpat_any
                                  pattern (lib/set.ml[169,6144+12]..lib/set.ml[169,6144+17])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                ]
                            expression (lib/set.ml[169,6144+22]..lib/set.ml[169,6144+41])
                              Texp_apply
                              expression (lib/set.ml[169,6144+22]..lib/set.ml[169,6144+37])
                                Texp_ident "add_max_element/466"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[169,6144+38]..lib/set.ml[169,6144+39])
                                    Texp_ident "v/474"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[169,6144+40]..lib/set.ml[169,6144+41])
                                    Texp_ident "l/473"
                              ]
                          <case>
                            pattern (lib/set.ml[170,6186+8]..lib/set.ml[170,6186+68])
                              Tpat_value
                              pattern (lib/set.ml[170,6186+8]..lib/set.ml[170,6186+68])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[170,6186+9]..lib/set.ml[170,6186+37])
                                    Tpat_construct "Node"
                                    [
                                      pattern (lib/set.ml[170,6186+13]..lib/set.ml[170,6186+37])
                                        Tpat_record
                                        [
                                          "l"
                                            pattern (lib/set.ml[170,6186+16]..lib/set.ml[170,6186+18])
                                              Tpat_var "ll/476"
                                          "v"
                                            pattern (lib/set.ml[170,6186+22]..lib/set.ml[170,6186+24])
                                              Tpat_var "lv/477"
                                          "r"
                                            pattern (lib/set.ml[170,6186+28]..lib/set.ml[170,6186+30])
                                              Tpat_var "lr/478"
                                          "h"
                                            pattern (lib/set.ml[170,6186+34]..lib/set.ml[170,6186+36])
                                              Tpat_var "lh/479"
                                        ]
                                    ]
                                    None
                                  pattern (lib/set.ml[170,6186+39]..lib/set.ml[170,6186+67])
                                    Tpat_construct "Node"
                                    [
                                      pattern (lib/set.ml[170,6186+43]..lib/set.ml[170,6186+67])
                                        Tpat_record
                                        [
                                          "l"
                                            pattern (lib/set.ml[170,6186+46]..lib/set.ml[170,6186+48])
                                              Tpat_var "rl/480"
                                          "v"
                                            pattern (lib/set.ml[170,6186+52]..lib/set.ml[170,6186+54])
                                              Tpat_var "rv/481"
                                          "r"
                                            pattern (lib/set.ml[170,6186+58]..lib/set.ml[170,6186+60])
                                              Tpat_var "rr/482"
                                          "h"
                                            pattern (lib/set.ml[170,6186+64]..lib/set.ml[170,6186+66])
                                              Tpat_var "rh/483"
                                        ]
                                    ]
                                    None
                                ]
                            expression (lib/set.ml[171,6258+10]..lib/set.ml[173,6376+22])
                              Texp_ifthenelse
                              expression (lib/set.ml[171,6258+13]..lib/set.ml[171,6258+24])
                                Texp_apply
                                expression (lib/set.ml[171,6258+16]..lib/set.ml[171,6258+17])
                                  Texp_ident "Stdlib!.>"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[171,6258+13]..lib/set.ml[171,6258+15])
                                      Texp_ident "lh/479"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[171,6258+18]..lib/set.ml[171,6258+24])
                                      Texp_apply
                                      expression (lib/set.ml[171,6258+21]..lib/set.ml[171,6258+22])
                                        Texp_ident "Stdlib!.+"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[171,6258+18]..lib/set.ml[171,6258+20])
                                            Texp_ident "rh/483"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[171,6258+23]..lib/set.ml[171,6258+24])
                                            Texp_constant Const_int 2
                                      ]
                                ]
                              expression (lib/set.ml[171,6258+30]..lib/set.ml[171,6258+53])
                                Texp_apply
                                expression (lib/set.ml[171,6258+30]..lib/set.ml[171,6258+33])
                                  Texp_ident "bal/427"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[171,6258+34]..lib/set.ml[171,6258+36])
                                      Texp_ident "ll/476"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[171,6258+37]..lib/set.ml[171,6258+39])
                                      Texp_ident "lv/477"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[171,6258+40]..lib/set.ml[171,6258+53])
                                      Texp_apply
                                      expression (lib/set.ml[171,6258+41]..lib/set.ml[171,6258+45])
                                        Texp_ident "join/472"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[171,6258+46]..lib/set.ml[171,6258+48])
                                            Texp_ident "lr/478"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[171,6258+49]..lib/set.ml[171,6258+50])
                                            Texp_ident "v/474"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[171,6258+51]..lib/set.ml[171,6258+52])
                                            Texp_ident "r/475"
                                      ]
                                ]
                              Some
                                expression (lib/set.ml[172,6317+10]..lib/set.ml[173,6376+22])
                                  Texp_ifthenelse
                                  expression (lib/set.ml[172,6317+13]..lib/set.ml[172,6317+24])
                                    Texp_apply
                                    expression (lib/set.ml[172,6317+16]..lib/set.ml[172,6317+17])
                                      Texp_ident "Stdlib!.>"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[172,6317+13]..lib/set.ml[172,6317+15])
                                          Texp_ident "rh/483"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[172,6317+18]..lib/set.ml[172,6317+24])
                                          Texp_apply
                                          expression (lib/set.ml[172,6317+21]..lib/set.ml[172,6317+22])
                                            Texp_ident "Stdlib!.+"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[172,6317+18]..lib/set.ml[172,6317+20])
                                                Texp_ident "lh/479"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[172,6317+23]..lib/set.ml[172,6317+24])
                                                Texp_constant Const_int 2
                                          ]
                                    ]
                                  expression (lib/set.ml[172,6317+30]..lib/set.ml[172,6317+53])
                                    Texp_apply
                                    expression (lib/set.ml[172,6317+30]..lib/set.ml[172,6317+33])
                                      Texp_ident "bal/427"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[172,6317+34]..lib/set.ml[172,6317+47])
                                          Texp_apply
                                          expression (lib/set.ml[172,6317+35]..lib/set.ml[172,6317+39])
                                            Texp_ident "join/472"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[172,6317+40]..lib/set.ml[172,6317+41])
                                                Texp_ident "l/473"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[172,6317+42]..lib/set.ml[172,6317+43])
                                                Texp_ident "v/474"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[172,6317+44]..lib/set.ml[172,6317+46])
                                                Texp_ident "rl/480"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[172,6317+48]..lib/set.ml[172,6317+50])
                                          Texp_ident "rv/481"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[172,6317+51]..lib/set.ml[172,6317+53])
                                          Texp_ident "rr/482"
                                    ]
                                  Some
                                    expression (lib/set.ml[173,6376+10]..lib/set.ml[173,6376+22])
                                      Texp_apply
                                      expression (lib/set.ml[173,6376+10]..lib/set.ml[173,6376+16])
                                        Texp_ident "create/418"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[173,6376+17]..lib/set.ml[173,6376+18])
                                            Texp_ident "l/473"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[173,6376+19]..lib/set.ml[173,6376+20])
                                            Texp_ident "v/474"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[173,6376+21]..lib/set.ml[173,6376+22])
                                            Texp_ident "r/475"
                                      ]
                        ]
              ]
            structure_item (lib/set.ml[177,6450+4]..lib/set.ml[180,6544+28])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[177,6450+12]..lib/set.ml[177,6450+19])
                    Tpat_var "min_elt/484"
                  expression (lib/set.ml[177,6450+22]..lib/set.ml[180,6544+28])
                    Texp_function
                    []
                    Tfunction_cases (lib/set.ml[177,6450+22]..lib/set.ml[180,6544+28])
                      [
                        <case>
                          pattern (lib/set.ml[178,6481+8]..lib/set.ml[178,6481+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[178,6481+17]..lib/set.ml[178,6481+32])
                            Texp_apply
                            expression (lib/set.ml[178,6481+17]..lib/set.ml[178,6481+22])
                              Texp_ident "Stdlib!.raise"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[178,6481+23]..lib/set.ml[178,6481+32])
                                  Texp_construct "Not_found"
                                  []
                            ]
                        <case>
                          pattern (lib/set.ml[179,6514+8]..lib/set.ml[179,6514+24])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[179,6514+12]..lib/set.ml[179,6514+24])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[179,6514+15]..lib/set.ml[179,6514+20])
                                      Tpat_construct "Empty"
                                      []
                                      None
                                  "v"
                                    pattern (lib/set.ml[179,6514+22]..lib/set.ml[179,6514+23])
                                      Tpat_var "v/485"
                                ]
                            ]
                            None
                          expression (lib/set.ml[179,6514+28]..lib/set.ml[179,6514+29])
                            Texp_ident "v/485"
                        <case>
                          pattern (lib/set.ml[180,6544+8]..lib/set.ml[180,6544+15])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[180,6544+12]..lib/set.ml[180,6544+15])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[180,6544+13]..lib/set.ml[180,6544+14])
                                      Tpat_var "l/486"
                                ]
                            ]
                            None
                          expression (lib/set.ml[180,6544+19]..lib/set.ml[180,6544+28])
                            Texp_apply
                            expression (lib/set.ml[180,6544+19]..lib/set.ml[180,6544+26])
                              Texp_ident "min_elt/484"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[180,6544+27]..lib/set.ml[180,6544+28])
                                  Texp_ident "l/486"
                            ]
                      ]
              ]
            structure_item (lib/set.ml[182,6574+4]..lib/set.ml[185,6666+32])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[182,6574+12]..lib/set.ml[182,6574+23])
                    Tpat_var "min_elt_opt/488"
                  expression (lib/set.ml[182,6574+26]..lib/set.ml[185,6666+32])
                    Texp_function
                    []
                    Tfunction_cases (lib/set.ml[182,6574+26]..lib/set.ml[185,6666+32])
                      [
                        <case>
                          pattern (lib/set.ml[183,6609+8]..lib/set.ml[183,6609+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[183,6609+17]..lib/set.ml[183,6609+21])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (lib/set.ml[184,6631+8]..lib/set.ml[184,6631+24])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[184,6631+12]..lib/set.ml[184,6631+24])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[184,6631+15]..lib/set.ml[184,6631+20])
                                      Tpat_construct "Empty"
                                      []
                                      None
                                  "v"
                                    pattern (lib/set.ml[184,6631+22]..lib/set.ml[184,6631+23])
                                      Tpat_var "v/489"
                                ]
                            ]
                            None
                          expression (lib/set.ml[184,6631+28]..lib/set.ml[184,6631+34])
                            Texp_construct "Some"
                            [
                              expression (lib/set.ml[184,6631+33]..lib/set.ml[184,6631+34])
                                Texp_ident "v/489"
                            ]
                        <case>
                          pattern (lib/set.ml[185,6666+8]..lib/set.ml[185,6666+15])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[185,6666+12]..lib/set.ml[185,6666+15])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[185,6666+13]..lib/set.ml[185,6666+14])
                                      Tpat_var "l/490"
                                ]
                            ]
                            None
                          expression (lib/set.ml[185,6666+19]..lib/set.ml[185,6666+32])
                            Texp_apply
                            expression (lib/set.ml[185,6666+19]..lib/set.ml[185,6666+30])
                              Texp_ident "min_elt_opt/488"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[185,6666+31]..lib/set.ml[185,6666+32])
                                  Texp_ident "l/490"
                            ]
                      ]
              ]
            structure_item (lib/set.ml[187,6700+4]..lib/set.ml[190,6794+28])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[187,6700+12]..lib/set.ml[187,6700+19])
                    Tpat_var "max_elt/492"
                  expression (lib/set.ml[187,6700+22]..lib/set.ml[190,6794+28])
                    Texp_function
                    []
                    Tfunction_cases (lib/set.ml[187,6700+22]..lib/set.ml[190,6794+28])
                      [
                        <case>
                          pattern (lib/set.ml[188,6731+8]..lib/set.ml[188,6731+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[188,6731+17]..lib/set.ml[188,6731+32])
                            Texp_apply
                            expression (lib/set.ml[188,6731+17]..lib/set.ml[188,6731+22])
                              Texp_ident "Stdlib!.raise"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[188,6731+23]..lib/set.ml[188,6731+32])
                                  Texp_construct "Not_found"
                                  []
                            ]
                        <case>
                          pattern (lib/set.ml[189,6764+8]..lib/set.ml[189,6764+24])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[189,6764+12]..lib/set.ml[189,6764+24])
                                Tpat_record
                                [
                                  "v"
                                    pattern (lib/set.ml[189,6764+13]..lib/set.ml[189,6764+14])
                                      Tpat_var "v/493"
                                  "r"
                                    pattern (lib/set.ml[189,6764+18]..lib/set.ml[189,6764+23])
                                      Tpat_construct "Empty"
                                      []
                                      None
                                ]
                            ]
                            None
                          expression (lib/set.ml[189,6764+28]..lib/set.ml[189,6764+29])
                            Texp_ident "v/493"
                        <case>
                          pattern (lib/set.ml[190,6794+8]..lib/set.ml[190,6794+15])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[190,6794+12]..lib/set.ml[190,6794+15])
                                Tpat_record
                                [
                                  "r"
                                    pattern (lib/set.ml[190,6794+13]..lib/set.ml[190,6794+14])
                                      Tpat_var "r/494"
                                ]
                            ]
                            None
                          expression (lib/set.ml[190,6794+19]..lib/set.ml[190,6794+28])
                            Texp_apply
                            expression (lib/set.ml[190,6794+19]..lib/set.ml[190,6794+26])
                              Texp_ident "max_elt/492"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[190,6794+27]..lib/set.ml[190,6794+28])
                                  Texp_ident "r/494"
                            ]
                      ]
              ]
            structure_item (lib/set.ml[192,6824+4]..lib/set.ml[195,6916+32])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[192,6824+12]..lib/set.ml[192,6824+23])
                    Tpat_var "max_elt_opt/496"
                  expression (lib/set.ml[192,6824+26]..lib/set.ml[195,6916+32])
                    Texp_function
                    []
                    Tfunction_cases (lib/set.ml[192,6824+26]..lib/set.ml[195,6916+32])
                      [
                        <case>
                          pattern (lib/set.ml[193,6859+8]..lib/set.ml[193,6859+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[193,6859+17]..lib/set.ml[193,6859+21])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (lib/set.ml[194,6881+8]..lib/set.ml[194,6881+24])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[194,6881+12]..lib/set.ml[194,6881+24])
                                Tpat_record
                                [
                                  "v"
                                    pattern (lib/set.ml[194,6881+13]..lib/set.ml[194,6881+14])
                                      Tpat_var "v/497"
                                  "r"
                                    pattern (lib/set.ml[194,6881+18]..lib/set.ml[194,6881+23])
                                      Tpat_construct "Empty"
                                      []
                                      None
                                ]
                            ]
                            None
                          expression (lib/set.ml[194,6881+28]..lib/set.ml[194,6881+34])
                            Texp_construct "Some"
                            [
                              expression (lib/set.ml[194,6881+33]..lib/set.ml[194,6881+34])
                                Texp_ident "v/497"
                            ]
                        <case>
                          pattern (lib/set.ml[195,6916+8]..lib/set.ml[195,6916+15])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[195,6916+12]..lib/set.ml[195,6916+15])
                                Tpat_record
                                [
                                  "r"
                                    pattern (lib/set.ml[195,6916+13]..lib/set.ml[195,6916+14])
                                      Tpat_var "r/498"
                                ]
                            ]
                            None
                          expression (lib/set.ml[195,6916+19]..lib/set.ml[195,6916+32])
                            Texp_apply
                            expression (lib/set.ml[195,6916+19]..lib/set.ml[195,6916+30])
                              Texp_ident "max_elt_opt/496"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[195,6916+31]..lib/set.ml[195,6916+32])
                                  Texp_ident "r/498"
                            ]
                      ]
              ]
            structure_item (lib/set.ml[199,7006+4]..lib/set.ml[202,7124+51])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[199,7006+12]..lib/set.ml[199,7006+26])
                    Tpat_var "remove_min_elt/500"
                  expression (lib/set.ml[199,7006+29]..lib/set.ml[202,7124+51])
                    Texp_function
                    []
                    Tfunction_cases (lib/set.ml[199,7006+29]..lib/set.ml[202,7124+51])
                      [
                        <case>
                          pattern (lib/set.ml[200,7044+8]..lib/set.ml[200,7044+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[200,7044+17]..lib/set.ml[200,7044+49])
                            Texp_apply
                            expression (lib/set.ml[200,7044+17]..lib/set.ml[200,7044+28])
                              Texp_ident "Stdlib!.invalid_arg"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[200,7044+29]..lib/set.ml[200,7044+49])
                                  Texp_constant Const_string("Set.remove_min_elt",(lib/set.ml[200,7044+30]..lib/set.ml[200,7044+48]),None)
                            ]
                        <case>
                          pattern (lib/set.ml[201,7094+8]..lib/set.ml[201,7094+24])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[201,7094+12]..lib/set.ml[201,7094+24])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[201,7094+15]..lib/set.ml[201,7094+20])
                                      Tpat_construct "Empty"
                                      []
                                      None
                                  "r"
                                    pattern (lib/set.ml[201,7094+22]..lib/set.ml[201,7094+23])
                                      Tpat_var "r/501"
                                ]
                            ]
                            None
                          expression (lib/set.ml[201,7094+28]..lib/set.ml[201,7094+29])
                            Texp_ident "r/501"
                        <case>
                          pattern (lib/set.ml[202,7124+8]..lib/set.ml[202,7124+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[202,7124+12]..lib/set.ml[202,7124+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[202,7124+13]..lib/set.ml[202,7124+14])
                                      Tpat_var "l/502"
                                  "v"
                                    pattern (lib/set.ml[202,7124+16]..lib/set.ml[202,7124+17])
                                      Tpat_var "v/503"
                                  "r"
                                    pattern (lib/set.ml[202,7124+19]..lib/set.ml[202,7124+20])
                                      Tpat_var "r/504"
                                ]
                            ]
                            None
                          expression (lib/set.ml[202,7124+25]..lib/set.ml[202,7124+51])
                            Texp_apply
                            expression (lib/set.ml[202,7124+25]..lib/set.ml[202,7124+28])
                              Texp_ident "bal/427"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[202,7124+29]..lib/set.ml[202,7124+47])
                                  Texp_apply
                                  expression (lib/set.ml[202,7124+30]..lib/set.ml[202,7124+44])
                                    Texp_ident "remove_min_elt/500"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[202,7124+45]..lib/set.ml[202,7124+46])
                                        Texp_ident "l/502"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/set.ml[202,7124+48]..lib/set.ml[202,7124+49])
                                  Texp_ident "v/503"
                              <arg>
                                Nolabel
                                expression (lib/set.ml[202,7124+50]..lib/set.ml[202,7124+51])
                                  Texp_ident "r/504"
                            ]
                      ]
              ]
            structure_item (lib/set.ml[208,7323+4]..lib/set.ml[212,7419+57])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[208,7323+8]..lib/set.ml[208,7323+13])
                    Tpat_var "merge/506"
                  expression (lib/set.ml[208,7323+14]..lib/set.ml[212,7419+57]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[208,7323+14]..lib/set.ml[208,7323+16])
                          Tpat_var "t1/508"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[208,7323+17]..lib/set.ml[208,7323+19])
                          Tpat_var "t2/509"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[209,7345+6]..lib/set.ml[212,7419+57])
                        Texp_match
                        expression (lib/set.ml[209,7345+12]..lib/set.ml[209,7345+20])
                          Texp_tuple
                          [
                            expression (lib/set.ml[209,7345+13]..lib/set.ml[209,7345+15])
                              Texp_ident "t1/508"
                            expression (lib/set.ml[209,7345+17]..lib/set.ml[209,7345+19])
                              Texp_ident "t2/509"
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[210,7371+8]..lib/set.ml[210,7371+18])
                              Tpat_value
                              pattern (lib/set.ml[210,7371+8]..lib/set.ml[210,7371+18])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[210,7371+9]..lib/set.ml[210,7371+14])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                  pattern (lib/set.ml[210,7371+16]..lib/set.ml[210,7371+17])
                                    Tpat_var "t/510"
                                ]
                            expression (lib/set.ml[210,7371+22]..lib/set.ml[210,7371+23])
                              Texp_ident "t/510"
                          <case>
                            pattern (lib/set.ml[211,7395+8]..lib/set.ml[211,7395+18])
                              Tpat_value
                              pattern (lib/set.ml[211,7395+8]..lib/set.ml[211,7395+18])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[211,7395+9]..lib/set.ml[211,7395+10])
                                    Tpat_var "t/511"
                                  pattern (lib/set.ml[211,7395+12]..lib/set.ml[211,7395+17])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                ]
                            expression (lib/set.ml[211,7395+22]..lib/set.ml[211,7395+23])
                              Texp_ident "t/511"
                          <case>
                            pattern (lib/set.ml[212,7419+8]..lib/set.ml[212,7419+14])
                              Tpat_value
                              pattern (lib/set.ml[212,7419+8]..lib/set.ml[212,7419+14])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[212,7419+9]..lib/set.ml[212,7419+10])
                                    Tpat_any
                                  pattern (lib/set.ml[212,7419+12]..lib/set.ml[212,7419+13])
                                    Tpat_any
                                ]
                            expression (lib/set.ml[212,7419+18]..lib/set.ml[212,7419+57])
                              Texp_apply
                              expression (lib/set.ml[212,7419+18]..lib/set.ml[212,7419+21])
                                Texp_ident "bal/427"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[212,7419+22]..lib/set.ml[212,7419+24])
                                    Texp_ident "t1/508"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[212,7419+25]..lib/set.ml[212,7419+37])
                                    Texp_apply
                                    expression (lib/set.ml[212,7419+26]..lib/set.ml[212,7419+33])
                                      Texp_ident "min_elt/484"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[212,7419+34]..lib/set.ml[212,7419+36])
                                          Texp_ident "t2/509"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[212,7419+38]..lib/set.ml[212,7419+57])
                                    Texp_apply
                                    expression (lib/set.ml[212,7419+39]..lib/set.ml[212,7419+53])
                                      Texp_ident "remove_min_elt/500"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[212,7419+54]..lib/set.ml[212,7419+56])
                                          Texp_ident "t2/509"
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[218,7628+4]..lib/set.ml[222,7725+58])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[218,7628+8]..lib/set.ml[218,7628+14])
                    Tpat_var "concat/512"
                  expression (lib/set.ml[218,7628+15]..lib/set.ml[222,7725+58]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[218,7628+15]..lib/set.ml[218,7628+17])
                          Tpat_var "t1/514"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[218,7628+18]..lib/set.ml[218,7628+20])
                          Tpat_var "t2/515"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[219,7651+6]..lib/set.ml[222,7725+58])
                        Texp_match
                        expression (lib/set.ml[219,7651+12]..lib/set.ml[219,7651+20])
                          Texp_tuple
                          [
                            expression (lib/set.ml[219,7651+13]..lib/set.ml[219,7651+15])
                              Texp_ident "t1/514"
                            expression (lib/set.ml[219,7651+17]..lib/set.ml[219,7651+19])
                              Texp_ident "t2/515"
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[220,7677+8]..lib/set.ml[220,7677+18])
                              Tpat_value
                              pattern (lib/set.ml[220,7677+8]..lib/set.ml[220,7677+18])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[220,7677+9]..lib/set.ml[220,7677+14])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                  pattern (lib/set.ml[220,7677+16]..lib/set.ml[220,7677+17])
                                    Tpat_var "t/516"
                                ]
                            expression (lib/set.ml[220,7677+22]..lib/set.ml[220,7677+23])
                              Texp_ident "t/516"
                          <case>
                            pattern (lib/set.ml[221,7701+8]..lib/set.ml[221,7701+18])
                              Tpat_value
                              pattern (lib/set.ml[221,7701+8]..lib/set.ml[221,7701+18])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[221,7701+9]..lib/set.ml[221,7701+10])
                                    Tpat_var "t/517"
                                  pattern (lib/set.ml[221,7701+12]..lib/set.ml[221,7701+17])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                ]
                            expression (lib/set.ml[221,7701+22]..lib/set.ml[221,7701+23])
                              Texp_ident "t/517"
                          <case>
                            pattern (lib/set.ml[222,7725+8]..lib/set.ml[222,7725+14])
                              Tpat_value
                              pattern (lib/set.ml[222,7725+8]..lib/set.ml[222,7725+14])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[222,7725+9]..lib/set.ml[222,7725+10])
                                    Tpat_any
                                  pattern (lib/set.ml[222,7725+12]..lib/set.ml[222,7725+13])
                                    Tpat_any
                                ]
                            expression (lib/set.ml[222,7725+18]..lib/set.ml[222,7725+58])
                              Texp_apply
                              expression (lib/set.ml[222,7725+18]..lib/set.ml[222,7725+22])
                                Texp_ident "join/472"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[222,7725+23]..lib/set.ml[222,7725+25])
                                    Texp_ident "t1/514"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[222,7725+26]..lib/set.ml[222,7725+38])
                                    Texp_apply
                                    expression (lib/set.ml[222,7725+27]..lib/set.ml[222,7725+34])
                                      Texp_ident "min_elt/484"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[222,7725+35]..lib/set.ml[222,7725+37])
                                          Texp_ident "t2/515"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[222,7725+39]..lib/set.ml[222,7725+58])
                                    Texp_apply
                                    expression (lib/set.ml[222,7725+40]..lib/set.ml[222,7725+54])
                                      Texp_ident "remove_min_elt/500"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[222,7725+55]..lib/set.ml[222,7725+57])
                                          Texp_ident "t2/515"
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[230,8082+4]..lib/set.ml[239,8375+69])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[230,8082+12]..lib/set.ml[230,8082+17])
                    Tpat_var "split/518"
                  expression (lib/set.ml[230,8082+18]..lib/set.ml[239,8375+69]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[230,8082+18]..lib/set.ml[230,8082+19])
                          Tpat_var "x/519"
                    ]
                    Tfunction_cases (lib/set.ml[230,8082+22]..lib/set.ml[239,8375+69])
                      [
                        <case>
                          pattern (lib/set.ml[231,8113+8]..lib/set.ml[231,8113+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[232,8130+10]..lib/set.ml[232,8130+31])
                            Texp_tuple
                            [
                              expression (lib/set.ml[232,8130+11]..lib/set.ml[232,8130+16])
                                Texp_construct "Empty"
                                []
                              expression (lib/set.ml[232,8130+18]..lib/set.ml[232,8130+23])
                                Texp_construct "false"
                                []
                              expression (lib/set.ml[232,8130+25]..lib/set.ml[232,8130+30])
                                Texp_construct "Empty"
                                []
                            ]
                        <case>
                          pattern (lib/set.ml[233,8162+8]..lib/set.ml[233,8162+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[233,8162+12]..lib/set.ml[233,8162+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[233,8162+13]..lib/set.ml[233,8162+14])
                                      Tpat_var "l/520"
                                  "v"
                                    pattern (lib/set.ml[233,8162+16]..lib/set.ml[233,8162+17])
                                      Tpat_var "v/521"
                                  "r"
                                    pattern (lib/set.ml[233,8162+19]..lib/set.ml[233,8162+20])
                                      Tpat_var "r/522"
                                ]
                            ]
                            None
                          expression (lib/set.ml[234,8187+10]..lib/set.ml[239,8375+69])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[234,8187+14]..lib/set.ml[234,8187+15])
                                  Tpat_var "c/523"
                                expression (lib/set.ml[234,8187+18]..lib/set.ml[234,8187+33])
                                  Texp_apply
                                  expression (lib/set.ml[234,8187+18]..lib/set.ml[234,8187+29])
                                    Texp_ident "Ord/405.compare"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[234,8187+30]..lib/set.ml[234,8187+31])
                                        Texp_ident "x/519"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[234,8187+32]..lib/set.ml[234,8187+33])
                                        Texp_ident "v/521"
                                  ]
                            ]
                            expression (lib/set.ml[235,8224+10]..lib/set.ml[239,8375+69])
                              Texp_ifthenelse
                              expression (lib/set.ml[235,8224+13]..lib/set.ml[235,8224+18])
                                Texp_apply
                                expression (lib/set.ml[235,8224+15]..lib/set.ml[235,8224+16])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[235,8224+13]..lib/set.ml[235,8224+14])
                                      Texp_ident "c/523"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[235,8224+17]..lib/set.ml[235,8224+18])
                                      Texp_constant Const_int 0
                                ]
                              expression (lib/set.ml[235,8224+24]..lib/set.ml[235,8224+36])
                                Texp_tuple
                                [
                                  expression (lib/set.ml[235,8224+25]..lib/set.ml[235,8224+26])
                                    Texp_ident "l/520"
                                  expression (lib/set.ml[235,8224+28]..lib/set.ml[235,8224+32])
                                    Texp_construct "true"
                                    []
                                  expression (lib/set.ml[235,8224+34]..lib/set.ml[235,8224+35])
                                    Texp_ident "r/522"
                                ]
                              Some
                                expression (lib/set.ml[236,8261+15]..lib/set.ml[239,8375+69])
                                  Texp_ifthenelse
                                  expression (lib/set.ml[236,8261+18]..lib/set.ml[236,8261+23])
                                    Texp_apply
                                    expression (lib/set.ml[236,8261+20]..lib/set.ml[236,8261+21])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[236,8261+18]..lib/set.ml[236,8261+19])
                                          Texp_ident "c/523"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[236,8261+22]..lib/set.ml[236,8261+23])
                                          Texp_constant Const_int 0
                                    ]
                                  expression (lib/set.ml[237,8290+12]..lib/set.ml[237,8290+69])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/set.ml[237,8290+16]..lib/set.ml[237,8290+30])
                                          Tpat_tuple
                                          [
                                            pattern (lib/set.ml[237,8290+17]..lib/set.ml[237,8290+19])
                                              Tpat_var "ll/524"
                                            pattern (lib/set.ml[237,8290+21]..lib/set.ml[237,8290+25])
                                              Tpat_var "pres/525"
                                            pattern (lib/set.ml[237,8290+27]..lib/set.ml[237,8290+29])
                                              Tpat_var "rl/526"
                                          ]
                                        expression (lib/set.ml[237,8290+33]..lib/set.ml[237,8290+42])
                                          Texp_apply
                                          expression (lib/set.ml[237,8290+33]..lib/set.ml[237,8290+38])
                                            Texp_ident "split/518"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[237,8290+39]..lib/set.ml[237,8290+40])
                                                Texp_ident "x/519"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[237,8290+41]..lib/set.ml[237,8290+42])
                                                Texp_ident "l/520"
                                          ]
                                    ]
                                    expression (lib/set.ml[237,8290+46]..lib/set.ml[237,8290+69])
                                      Texp_tuple
                                      [
                                        expression (lib/set.ml[237,8290+47]..lib/set.ml[237,8290+49])
                                          Texp_ident "ll/524"
                                        expression (lib/set.ml[237,8290+51]..lib/set.ml[237,8290+55])
                                          Texp_ident "pres/525"
                                        expression (lib/set.ml[237,8290+57]..lib/set.ml[237,8290+68])
                                          Texp_apply
                                          expression (lib/set.ml[237,8290+57]..lib/set.ml[237,8290+61])
                                            Texp_ident "join/472"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[237,8290+62]..lib/set.ml[237,8290+64])
                                                Texp_ident "rl/526"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[237,8290+65]..lib/set.ml[237,8290+66])
                                                Texp_ident "v/521"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[237,8290+67]..lib/set.ml[237,8290+68])
                                                Texp_ident "r/522"
                                          ]
                                      ]
                                  Some
                                    expression (lib/set.ml[239,8375+12]..lib/set.ml[239,8375+69])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/set.ml[239,8375+16]..lib/set.ml[239,8375+30])
                                            Tpat_tuple
                                            [
                                              pattern (lib/set.ml[239,8375+17]..lib/set.ml[239,8375+19])
                                                Tpat_var "lr/527"
                                              pattern (lib/set.ml[239,8375+21]..lib/set.ml[239,8375+25])
                                                Tpat_var "pres/528"
                                              pattern (lib/set.ml[239,8375+27]..lib/set.ml[239,8375+29])
                                                Tpat_var "rr/529"
                                            ]
                                          expression (lib/set.ml[239,8375+33]..lib/set.ml[239,8375+42])
                                            Texp_apply
                                            expression (lib/set.ml[239,8375+33]..lib/set.ml[239,8375+38])
                                              Texp_ident "split/518"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[239,8375+39]..lib/set.ml[239,8375+40])
                                                  Texp_ident "x/519"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[239,8375+41]..lib/set.ml[239,8375+42])
                                                  Texp_ident "r/522"
                                            ]
                                      ]
                                      expression (lib/set.ml[239,8375+46]..lib/set.ml[239,8375+69])
                                        Texp_tuple
                                        [
                                          expression (lib/set.ml[239,8375+47]..lib/set.ml[239,8375+58])
                                            Texp_apply
                                            expression (lib/set.ml[239,8375+47]..lib/set.ml[239,8375+51])
                                              Texp_ident "join/472"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[239,8375+52]..lib/set.ml[239,8375+53])
                                                  Texp_ident "l/520"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[239,8375+54]..lib/set.ml[239,8375+55])
                                                  Texp_ident "v/521"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[239,8375+56]..lib/set.ml[239,8375+58])
                                                  Texp_ident "lr/527"
                                            ]
                                          expression (lib/set.ml[239,8375+60]..lib/set.ml[239,8375+64])
                                            Texp_ident "pres/528"
                                          expression (lib/set.ml[239,8375+66]..lib/set.ml[239,8375+68])
                                            Texp_ident "rr/529"
                                        ]
                      ]
              ]
            structure_item (lib/set.ml[243,8494+4]..lib/set.ml[243,8494+21])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[243,8494+8]..lib/set.ml[243,8494+13])
                    Tpat_var "empty/531"
                  expression (lib/set.ml[243,8494+16]..lib/set.ml[243,8494+21])
                    Texp_construct "Empty"
                    []
              ]
            structure_item (lib/set.ml[245,8517+4]..lib/set.ml[245,8517+54])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[245,8517+8]..lib/set.ml[245,8517+16])
                    Tpat_var "is_empty/532"
                  expression (lib/set.ml[245,8517+19]..lib/set.ml[245,8517+54])
                    Texp_function
                    []
                    Tfunction_cases (lib/set.ml[245,8517+19]..lib/set.ml[245,8517+54])
                      [
                        <case>
                          pattern (lib/set.ml[245,8517+28]..lib/set.ml[245,8517+33])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[245,8517+37]..lib/set.ml[245,8517+41])
                            Texp_construct "true"
                            []
                        <case>
                          pattern (lib/set.ml[245,8517+44]..lib/set.ml[245,8517+45])
                            Tpat_any
                          expression (lib/set.ml[245,8517+49]..lib/set.ml[245,8517+54])
                            Texp_construct "false"
                            []
                      ]
              ]
            structure_item (lib/set.ml[247,8573+4]..lib/set.ml[251,8687+49])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[247,8573+12]..lib/set.ml[247,8573+15])
                    Tpat_var "mem/535"
                  expression (lib/set.ml[247,8573+16]..lib/set.ml[251,8687+49]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[247,8573+16]..lib/set.ml[247,8573+17])
                          Tpat_var "x/536"
                    ]
                    Tfunction_cases (lib/set.ml[247,8573+20]..lib/set.ml[251,8687+49])
                      [
                        <case>
                          pattern (lib/set.ml[248,8602+8]..lib/set.ml[248,8602+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[248,8602+17]..lib/set.ml[248,8602+22])
                            Texp_construct "false"
                            []
                        <case>
                          pattern (lib/set.ml[249,8625+8]..lib/set.ml[249,8625+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[249,8625+12]..lib/set.ml[249,8625+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[249,8625+13]..lib/set.ml[249,8625+14])
                                      Tpat_var "l/537"
                                  "v"
                                    pattern (lib/set.ml[249,8625+16]..lib/set.ml[249,8625+17])
                                      Tpat_var "v/538"
                                  "r"
                                    pattern (lib/set.ml[249,8625+19]..lib/set.ml[249,8625+20])
                                      Tpat_var "r/539"
                                ]
                            ]
                            None
                          expression (lib/set.ml[250,8650+10]..lib/set.ml[251,8687+49])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[250,8650+14]..lib/set.ml[250,8650+15])
                                  Tpat_var "c/540"
                                expression (lib/set.ml[250,8650+18]..lib/set.ml[250,8650+33])
                                  Texp_apply
                                  expression (lib/set.ml[250,8650+18]..lib/set.ml[250,8650+29])
                                    Texp_ident "Ord/405.compare"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[250,8650+30]..lib/set.ml[250,8650+31])
                                        Texp_ident "x/536"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[250,8650+32]..lib/set.ml[250,8650+33])
                                        Texp_ident "v/538"
                                  ]
                            ]
                            expression (lib/set.ml[251,8687+10]..lib/set.ml[251,8687+49])
                              Texp_apply
                              expression (lib/set.ml[251,8687+16]..lib/set.ml[251,8687+18])
                                Texp_ident "Stdlib!.||"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[251,8687+10]..lib/set.ml[251,8687+15])
                                    Texp_apply
                                    expression (lib/set.ml[251,8687+12]..lib/set.ml[251,8687+13])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[251,8687+10]..lib/set.ml[251,8687+11])
                                          Texp_ident "c/540"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[251,8687+14]..lib/set.ml[251,8687+15])
                                          Texp_constant Const_int 0
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[251,8687+19]..lib/set.ml[251,8687+49])
                                    Texp_apply
                                    expression (lib/set.ml[251,8687+19]..lib/set.ml[251,8687+22])
                                      Texp_ident "mem/535"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[251,8687+23]..lib/set.ml[251,8687+24])
                                          Texp_ident "x/536"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[251,8687+25]..lib/set.ml[251,8687+49])
                                          Texp_ifthenelse
                                          expression (lib/set.ml[251,8687+29]..lib/set.ml[251,8687+34])
                                            Texp_apply
                                            expression (lib/set.ml[251,8687+31]..lib/set.ml[251,8687+32])
                                              Texp_ident "Stdlib!.<"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[251,8687+29]..lib/set.ml[251,8687+30])
                                                  Texp_ident "c/540"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[251,8687+33]..lib/set.ml[251,8687+34])
                                                  Texp_constant Const_int 0
                                            ]
                                          expression (lib/set.ml[251,8687+40]..lib/set.ml[251,8687+41])
                                            Texp_ident "l/537"
                                          Some
                                            expression (lib/set.ml[251,8687+47]..lib/set.ml[251,8687+48])
                                              Texp_ident "r/539"
                                    ]
                              ]
                      ]
              ]
            structure_item (lib/set.ml[253,8738+4]..lib/set.ml[266,9122+29])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[253,8738+12]..lib/set.ml[253,8738+18])
                    Tpat_var "remove/542"
                  expression (lib/set.ml[253,8738+19]..lib/set.ml[266,9122+29]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[253,8738+19]..lib/set.ml[253,8738+20])
                          Tpat_var "x/543"
                    ]
                    Tfunction_cases (lib/set.ml[253,8738+23]..lib/set.ml[266,9122+29])
                      [
                        <case>
                          pattern (lib/set.ml[254,8770+8]..lib/set.ml[254,8770+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[254,8770+17]..lib/set.ml[254,8770+22])
                            Texp_construct "Empty"
                            []
                        <case>
                          pattern (lib/set.ml[255,8793+8]..lib/set.ml[255,8793+28])
                            Tpat_alias "t/547"
                            pattern (lib/set.ml[255,8793+9]..lib/set.ml[255,8793+22])
                              Tpat_construct "Node"
                              [
                                pattern (lib/set.ml[255,8793+13]..lib/set.ml[255,8793+22])
                                  Tpat_record
                                  [
                                    "l"
                                      pattern (lib/set.ml[255,8793+14]..lib/set.ml[255,8793+15])
                                        Tpat_var "l/544"
                                    "v"
                                      pattern (lib/set.ml[255,8793+17]..lib/set.ml[255,8793+18])
                                        Tpat_var "v/545"
                                    "r"
                                      pattern (lib/set.ml[255,8793+20]..lib/set.ml[255,8793+21])
                                        Tpat_var "r/546"
                                  ]
                              ]
                              None
                          expression (lib/set.ml[256,8825+10]..lib/set.ml[266,9122+29])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[256,8825+14]..lib/set.ml[256,8825+15])
                                  Tpat_var "c/548"
                                expression (lib/set.ml[256,8825+18]..lib/set.ml[256,8825+33])
                                  Texp_apply
                                  expression (lib/set.ml[256,8825+18]..lib/set.ml[256,8825+29])
                                    Texp_ident "Ord/405.compare"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[256,8825+30]..lib/set.ml[256,8825+31])
                                        Texp_ident "x/543"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[256,8825+32]..lib/set.ml[256,8825+33])
                                        Texp_ident "v/545"
                                  ]
                            ]
                            expression (lib/set.ml[257,8862+10]..lib/set.ml[266,9122+29])
                              Texp_ifthenelse
                              expression (lib/set.ml[257,8862+13]..lib/set.ml[257,8862+18])
                                Texp_apply
                                expression (lib/set.ml[257,8862+15]..lib/set.ml[257,8862+16])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[257,8862+13]..lib/set.ml[257,8862+14])
                                      Texp_ident "c/548"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[257,8862+17]..lib/set.ml[257,8862+18])
                                      Texp_constant Const_int 0
                                ]
                              expression (lib/set.ml[257,8862+24]..lib/set.ml[257,8862+33])
                                Texp_apply
                                expression (lib/set.ml[257,8862+24]..lib/set.ml[257,8862+29])
                                  Texp_ident "merge/506"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[257,8862+30]..lib/set.ml[257,8862+31])
                                      Texp_ident "l/544"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[257,8862+32]..lib/set.ml[257,8862+33])
                                      Texp_ident "r/546"
                                ]
                              Some
                                expression (lib/set.ml[259,8911+12]..lib/set.ml[266,9122+29])
                                  Texp_ifthenelse
                                  expression (lib/set.ml[259,8911+15]..lib/set.ml[259,8911+20])
                                    Texp_apply
                                    expression (lib/set.ml[259,8911+17]..lib/set.ml[259,8911+18])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[259,8911+15]..lib/set.ml[259,8911+16])
                                          Texp_ident "c/548"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[259,8911+19]..lib/set.ml[259,8911+20])
                                          Texp_constant Const_int 0
                                    ]
                                  expression (lib/set.ml[260,8937+14]..lib/set.ml[262,9006+29])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/set.ml[260,8937+18]..lib/set.ml[260,8937+20])
                                          Tpat_var "ll/549"
                                        expression (lib/set.ml[260,8937+23]..lib/set.ml[260,8937+33])
                                          Texp_apply
                                          expression (lib/set.ml[260,8937+23]..lib/set.ml[260,8937+29])
                                            Texp_ident "remove/542"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[260,8937+30]..lib/set.ml[260,8937+31])
                                                Texp_ident "x/543"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[260,8937+32]..lib/set.ml[260,8937+33])
                                                Texp_ident "l/544"
                                          ]
                                    ]
                                    expression (lib/set.ml[261,8974+14]..lib/set.ml[262,9006+29])
                                      Texp_ifthenelse
                                      expression (lib/set.ml[261,8974+17]..lib/set.ml[261,8974+24])
                                        Texp_apply
                                        expression (lib/set.ml[261,8974+19]..lib/set.ml[261,8974+21])
                                          Texp_ident "Stdlib!.=="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[261,8974+17]..lib/set.ml[261,8974+18])
                                              Texp_ident "l/544"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[261,8974+22]..lib/set.ml[261,8974+24])
                                              Texp_ident "ll/549"
                                        ]
                                      expression (lib/set.ml[261,8974+30]..lib/set.ml[261,8974+31])
                                        Texp_ident "t/547"
                                      Some
                                        expression (lib/set.ml[262,9006+19]..lib/set.ml[262,9006+29])
                                          Texp_apply
                                          expression (lib/set.ml[262,9006+19]..lib/set.ml[262,9006+22])
                                            Texp_ident "bal/427"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[262,9006+23]..lib/set.ml[262,9006+25])
                                                Texp_ident "ll/549"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[262,9006+26]..lib/set.ml[262,9006+27])
                                                Texp_ident "v/545"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[262,9006+28]..lib/set.ml[262,9006+29])
                                                Texp_ident "r/546"
                                          ]
                                  Some
                                    expression (lib/set.ml[264,9053+14]..lib/set.ml[266,9122+29])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/set.ml[264,9053+18]..lib/set.ml[264,9053+20])
                                            Tpat_var "rr/550"
                                          expression (lib/set.ml[264,9053+23]..lib/set.ml[264,9053+33])
                                            Texp_apply
                                            expression (lib/set.ml[264,9053+23]..lib/set.ml[264,9053+29])
                                              Texp_ident "remove/542"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[264,9053+30]..lib/set.ml[264,9053+31])
                                                  Texp_ident "x/543"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[264,9053+32]..lib/set.ml[264,9053+33])
                                                  Texp_ident "r/546"
                                            ]
                                      ]
                                      expression (lib/set.ml[265,9090+14]..lib/set.ml[266,9122+29])
                                        Texp_ifthenelse
                                        expression (lib/set.ml[265,9090+17]..lib/set.ml[265,9090+24])
                                          Texp_apply
                                          expression (lib/set.ml[265,9090+19]..lib/set.ml[265,9090+21])
                                            Texp_ident "Stdlib!.=="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[265,9090+17]..lib/set.ml[265,9090+18])
                                                Texp_ident "r/546"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[265,9090+22]..lib/set.ml[265,9090+24])
                                                Texp_ident "rr/550"
                                          ]
                                        expression (lib/set.ml[265,9090+30]..lib/set.ml[265,9090+31])
                                          Texp_ident "t/547"
                                        Some
                                          expression (lib/set.ml[266,9122+19]..lib/set.ml[266,9122+29])
                                            Texp_apply
                                            expression (lib/set.ml[266,9122+19]..lib/set.ml[266,9122+22])
                                              Texp_ident "bal/427"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[266,9122+23]..lib/set.ml[266,9122+24])
                                                  Texp_ident "l/544"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[266,9122+25]..lib/set.ml[266,9122+26])
                                                  Texp_ident "v/545"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[266,9122+27]..lib/set.ml[266,9122+29])
                                                  Texp_ident "rr/550"
                                            ]
                      ]
              ]
            structure_item (lib/set.ml[268,9153+4]..lib/set.ml[282,9677+15])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[268,9153+12]..lib/set.ml[268,9153+17])
                    Tpat_var "union/551"
                  expression (lib/set.ml[268,9153+18]..lib/set.ml[282,9677+15]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[268,9153+18]..lib/set.ml[268,9153+20])
                          Tpat_var "s1/552"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[268,9153+21]..lib/set.ml[268,9153+23])
                          Tpat_var "s2/553"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[269,9179+6]..lib/set.ml[282,9677+15])
                        Texp_match
                        expression (lib/set.ml[269,9179+12]..lib/set.ml[269,9179+20])
                          Texp_tuple
                          [
                            expression (lib/set.ml[269,9179+13]..lib/set.ml[269,9179+15])
                              Texp_ident "s1/552"
                            expression (lib/set.ml[269,9179+17]..lib/set.ml[269,9179+19])
                              Texp_ident "s2/553"
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[270,9205+8]..lib/set.ml[270,9205+19])
                              Tpat_value
                              pattern (lib/set.ml[270,9205+8]..lib/set.ml[270,9205+19])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[270,9205+9]..lib/set.ml[270,9205+14])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                  pattern (lib/set.ml[270,9205+16]..lib/set.ml[270,9205+18])
                                    Tpat_var "t2/554"
                                ]
                            expression (lib/set.ml[270,9205+23]..lib/set.ml[270,9205+25])
                              Texp_ident "t2/554"
                          <case>
                            pattern (lib/set.ml[271,9231+8]..lib/set.ml[271,9231+19])
                              Tpat_value
                              pattern (lib/set.ml[271,9231+8]..lib/set.ml[271,9231+19])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[271,9231+9]..lib/set.ml[271,9231+11])
                                    Tpat_var "t1/555"
                                  pattern (lib/set.ml[271,9231+13]..lib/set.ml[271,9231+18])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                ]
                            expression (lib/set.ml[271,9231+23]..lib/set.ml[271,9231+25])
                              Texp_ident "t1/555"
                          <case>
                            pattern (lib/set.ml[272,9257+8]..lib/set.ml[272,9257+68])
                              Tpat_value
                              pattern (lib/set.ml[272,9257+8]..lib/set.ml[272,9257+68])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[272,9257+9]..lib/set.ml[272,9257+37])
                                    Tpat_construct "Node"
                                    [
                                      pattern (lib/set.ml[272,9257+13]..lib/set.ml[272,9257+37])
                                        Tpat_record
                                        [
                                          "l"
                                            pattern (lib/set.ml[272,9257+16]..lib/set.ml[272,9257+18])
                                              Tpat_var "l1/556"
                                          "v"
                                            pattern (lib/set.ml[272,9257+22]..lib/set.ml[272,9257+24])
                                              Tpat_var "v1/557"
                                          "r"
                                            pattern (lib/set.ml[272,9257+28]..lib/set.ml[272,9257+30])
                                              Tpat_var "r1/558"
                                          "h"
                                            pattern (lib/set.ml[272,9257+34]..lib/set.ml[272,9257+36])
                                              Tpat_var "h1/559"
                                        ]
                                    ]
                                    None
                                  pattern (lib/set.ml[272,9257+39]..lib/set.ml[272,9257+67])
                                    Tpat_construct "Node"
                                    [
                                      pattern (lib/set.ml[272,9257+43]..lib/set.ml[272,9257+67])
                                        Tpat_record
                                        [
                                          "l"
                                            pattern (lib/set.ml[272,9257+46]..lib/set.ml[272,9257+48])
                                              Tpat_var "l2/560"
                                          "v"
                                            pattern (lib/set.ml[272,9257+52]..lib/set.ml[272,9257+54])
                                              Tpat_var "v2/561"
                                          "r"
                                            pattern (lib/set.ml[272,9257+58]..lib/set.ml[272,9257+60])
                                              Tpat_var "r2/562"
                                          "h"
                                            pattern (lib/set.ml[272,9257+64]..lib/set.ml[272,9257+66])
                                              Tpat_var "h2/563"
                                        ]
                                    ]
                                    None
                                ]
                            expression (lib/set.ml[273,9329+10]..lib/set.ml[282,9677+15])
                              Texp_ifthenelse
                              expression (lib/set.ml[273,9329+13]..lib/set.ml[273,9329+21])
                                Texp_apply
                                expression (lib/set.ml[273,9329+16]..lib/set.ml[273,9329+18])
                                  Texp_ident "Stdlib!.>="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[273,9329+13]..lib/set.ml[273,9329+15])
                                      Texp_ident "h1/559"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[273,9329+19]..lib/set.ml[273,9329+21])
                                      Texp_ident "h2/563"
                                ]
                              expression (lib/set.ml[274,9356+12]..lib/set.ml[277,9501+15])
                                Texp_ifthenelse
                                expression (lib/set.ml[274,9356+15]..lib/set.ml[274,9356+21])
                                  Texp_apply
                                  expression (lib/set.ml[274,9356+18]..lib/set.ml[274,9356+19])
                                    Texp_ident "Stdlib!.="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[274,9356+15]..lib/set.ml[274,9356+17])
                                        Texp_ident "h2/563"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[274,9356+20]..lib/set.ml[274,9356+21])
                                        Texp_constant Const_int 1
                                  ]
                                expression (lib/set.ml[274,9356+27]..lib/set.ml[274,9356+36])
                                  Texp_apply
                                  expression (lib/set.ml[274,9356+27]..lib/set.ml[274,9356+30])
                                    Texp_ident "add/448"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[274,9356+31]..lib/set.ml[274,9356+33])
                                        Texp_ident "v2/561"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[274,9356+34]..lib/set.ml[274,9356+36])
                                        Texp_ident "s1/552"
                                  ]
                                Some
                                  expression (lib/set.ml[274,9356+42]..lib/set.ml[277,9501+15])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/set.ml[275,9404+18]..lib/set.ml[275,9404+29])
                                          Tpat_tuple
                                          [
                                            pattern (lib/set.ml[275,9404+19]..lib/set.ml[275,9404+21])
                                              Tpat_var "l2/564"
                                            pattern (lib/set.ml[275,9404+23]..lib/set.ml[275,9404+24])
                                              Tpat_any
                                            pattern (lib/set.ml[275,9404+26]..lib/set.ml[275,9404+28])
                                              Tpat_var "r2/565"
                                          ]
                                        expression (lib/set.ml[275,9404+32]..lib/set.ml[275,9404+43])
                                          Texp_apply
                                          expression (lib/set.ml[275,9404+32]..lib/set.ml[275,9404+37])
                                            Texp_ident "split/518"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[275,9404+38]..lib/set.ml[275,9404+40])
                                                Texp_ident "v1/557"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[275,9404+41]..lib/set.ml[275,9404+43])
                                                Texp_ident "s2/553"
                                          ]
                                    ]
                                    expression (lib/set.ml[276,9451+14]..lib/set.ml[276,9451+49])
                                      Texp_apply
                                      expression (lib/set.ml[276,9451+14]..lib/set.ml[276,9451+18])
                                        Texp_ident "join/472"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[276,9451+19]..lib/set.ml[276,9451+32])
                                            Texp_apply
                                            expression (lib/set.ml[276,9451+20]..lib/set.ml[276,9451+25])
                                              Texp_ident "union/551"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[276,9451+26]..lib/set.ml[276,9451+28])
                                                  Texp_ident "l1/556"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[276,9451+29]..lib/set.ml[276,9451+31])
                                                  Texp_ident "l2/564"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[276,9451+33]..lib/set.ml[276,9451+35])
                                            Texp_ident "v1/557"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[276,9451+36]..lib/set.ml[276,9451+49])
                                            Texp_apply
                                            expression (lib/set.ml[276,9451+37]..lib/set.ml[276,9451+42])
                                              Texp_ident "union/551"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[276,9451+43]..lib/set.ml[276,9451+45])
                                                  Texp_ident "r1/558"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[276,9451+46]..lib/set.ml[276,9451+48])
                                                  Texp_ident "r2/565"
                                            ]
                                      ]
                              Some
                                expression (lib/set.ml[279,9532+12]..lib/set.ml[282,9677+15])
                                  Texp_ifthenelse
                                  expression (lib/set.ml[279,9532+15]..lib/set.ml[279,9532+21])
                                    Texp_apply
                                    expression (lib/set.ml[279,9532+18]..lib/set.ml[279,9532+19])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[279,9532+15]..lib/set.ml[279,9532+17])
                                          Texp_ident "h1/559"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[279,9532+20]..lib/set.ml[279,9532+21])
                                          Texp_constant Const_int 1
                                    ]
                                  expression (lib/set.ml[279,9532+27]..lib/set.ml[279,9532+36])
                                    Texp_apply
                                    expression (lib/set.ml[279,9532+27]..lib/set.ml[279,9532+30])
                                      Texp_ident "add/448"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[279,9532+31]..lib/set.ml[279,9532+33])
                                          Texp_ident "v1/557"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[279,9532+34]..lib/set.ml[279,9532+36])
                                          Texp_ident "s2/553"
                                    ]
                                  Some
                                    expression (lib/set.ml[279,9532+42]..lib/set.ml[282,9677+15])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/set.ml[280,9580+18]..lib/set.ml[280,9580+29])
                                            Tpat_tuple
                                            [
                                              pattern (lib/set.ml[280,9580+19]..lib/set.ml[280,9580+21])
                                                Tpat_var "l1/566"
                                              pattern (lib/set.ml[280,9580+23]..lib/set.ml[280,9580+24])
                                                Tpat_any
                                              pattern (lib/set.ml[280,9580+26]..lib/set.ml[280,9580+28])
                                                Tpat_var "r1/567"
                                            ]
                                          expression (lib/set.ml[280,9580+32]..lib/set.ml[280,9580+43])
                                            Texp_apply
                                            expression (lib/set.ml[280,9580+32]..lib/set.ml[280,9580+37])
                                              Texp_ident "split/518"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[280,9580+38]..lib/set.ml[280,9580+40])
                                                  Texp_ident "v2/561"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[280,9580+41]..lib/set.ml[280,9580+43])
                                                  Texp_ident "s1/552"
                                            ]
                                      ]
                                      expression (lib/set.ml[281,9627+14]..lib/set.ml[281,9627+49])
                                        Texp_apply
                                        expression (lib/set.ml[281,9627+14]..lib/set.ml[281,9627+18])
                                          Texp_ident "join/472"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[281,9627+19]..lib/set.ml[281,9627+32])
                                              Texp_apply
                                              expression (lib/set.ml[281,9627+20]..lib/set.ml[281,9627+25])
                                                Texp_ident "union/551"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[281,9627+26]..lib/set.ml[281,9627+28])
                                                    Texp_ident "l1/566"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[281,9627+29]..lib/set.ml[281,9627+31])
                                                    Texp_ident "l2/560"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[281,9627+33]..lib/set.ml[281,9627+35])
                                              Texp_ident "v2/561"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[281,9627+36]..lib/set.ml[281,9627+49])
                                              Texp_apply
                                              expression (lib/set.ml[281,9627+37]..lib/set.ml[281,9627+42])
                                                Texp_ident "union/551"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[281,9627+43]..lib/set.ml[281,9627+45])
                                                    Texp_ident "r1/567"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[281,9627+46]..lib/set.ml[281,9627+48])
                                                    Texp_ident "r2/562"
                                              ]
                                        ]
                        ]
              ]
            structure_item (lib/set.ml[284,9694+4]..lib/set.ml[293,9985+49])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[284,9694+12]..lib/set.ml[284,9694+17])
                    Tpat_var "inter/568"
                  expression (lib/set.ml[284,9694+18]..lib/set.ml[293,9985+49]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[284,9694+18]..lib/set.ml[284,9694+20])
                          Tpat_var "s1/569"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[284,9694+21]..lib/set.ml[284,9694+23])
                          Tpat_var "s2/570"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[285,9720+6]..lib/set.ml[293,9985+49])
                        Texp_match
                        expression (lib/set.ml[285,9720+12]..lib/set.ml[285,9720+20])
                          Texp_tuple
                          [
                            expression (lib/set.ml[285,9720+13]..lib/set.ml[285,9720+15])
                              Texp_ident "s1/569"
                            expression (lib/set.ml[285,9720+17]..lib/set.ml[285,9720+19])
                              Texp_ident "s2/570"
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[286,9746+8]..lib/set.ml[286,9746+18])
                              Tpat_value
                              pattern (lib/set.ml[286,9746+8]..lib/set.ml[286,9746+18])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[286,9746+9]..lib/set.ml[286,9746+14])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                  pattern (lib/set.ml[286,9746+16]..lib/set.ml[286,9746+17])
                                    Tpat_any
                                ]
                            expression (lib/set.ml[286,9746+22]..lib/set.ml[286,9746+27])
                              Texp_construct "Empty"
                              []
                          <case>
                            pattern (lib/set.ml[287,9774+8]..lib/set.ml[287,9774+18])
                              Tpat_value
                              pattern (lib/set.ml[287,9774+8]..lib/set.ml[287,9774+18])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[287,9774+9]..lib/set.ml[287,9774+10])
                                    Tpat_any
                                  pattern (lib/set.ml[287,9774+12]..lib/set.ml[287,9774+17])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                ]
                            expression (lib/set.ml[287,9774+22]..lib/set.ml[287,9774+27])
                              Texp_construct "Empty"
                              []
                          <case>
                            pattern (lib/set.ml[288,9802+8]..lib/set.ml[288,9802+36])
                              Tpat_value
                              pattern (lib/set.ml[288,9802+8]..lib/set.ml[288,9802+36])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[288,9802+9]..lib/set.ml[288,9802+31])
                                    Tpat_construct "Node"
                                    [
                                      pattern (lib/set.ml[288,9802+13]..lib/set.ml[288,9802+31])
                                        Tpat_record
                                        [
                                          "l"
                                            pattern (lib/set.ml[288,9802+16]..lib/set.ml[288,9802+18])
                                              Tpat_var "l1/571"
                                          "v"
                                            pattern (lib/set.ml[288,9802+22]..lib/set.ml[288,9802+24])
                                              Tpat_var "v1/572"
                                          "r"
                                            pattern (lib/set.ml[288,9802+28]..lib/set.ml[288,9802+30])
                                              Tpat_var "r1/573"
                                        ]
                                    ]
                                    None
                                  pattern (lib/set.ml[288,9802+33]..lib/set.ml[288,9802+35])
                                    Tpat_var "t2/574"
                                ]
                            expression (lib/set.ml[289,9842+10]..lib/set.ml[293,9985+49])
                              Texp_match
                              expression (lib/set.ml[289,9842+16]..lib/set.ml[289,9842+27])
                                Texp_apply
                                expression (lib/set.ml[289,9842+16]..lib/set.ml[289,9842+21])
                                  Texp_ident "split/518"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[289,9842+22]..lib/set.ml[289,9842+24])
                                      Texp_ident "v1/572"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[289,9842+25]..lib/set.ml[289,9842+27])
                                      Texp_ident "t2/574"
                                ]
                              [
                                <case>
                                  pattern (lib/set.ml[290,9875+12]..lib/set.ml[290,9875+27])
                                    Tpat_value
                                    pattern (lib/set.ml[290,9875+12]..lib/set.ml[290,9875+27])
                                      Tpat_tuple
                                      [
                                        pattern (lib/set.ml[290,9875+13]..lib/set.ml[290,9875+15])
                                          Tpat_var "l2/575"
                                        pattern (lib/set.ml[290,9875+17]..lib/set.ml[290,9875+22])
                                          Tpat_construct "false"
                                          []
                                          None
                                        pattern (lib/set.ml[290,9875+24]..lib/set.ml[290,9875+26])
                                          Tpat_var "r2/576"
                                      ]
                                  expression (lib/set.ml[291,9906+14]..lib/set.ml[291,9906+48])
                                    Texp_apply
                                    expression (lib/set.ml[291,9906+14]..lib/set.ml[291,9906+20])
                                      Texp_ident "concat/512"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[291,9906+21]..lib/set.ml[291,9906+34])
                                          Texp_apply
                                          expression (lib/set.ml[291,9906+22]..lib/set.ml[291,9906+27])
                                            Texp_ident "inter/568"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[291,9906+28]..lib/set.ml[291,9906+30])
                                                Texp_ident "l1/571"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[291,9906+31]..lib/set.ml[291,9906+33])
                                                Texp_ident "l2/575"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[291,9906+35]..lib/set.ml[291,9906+48])
                                          Texp_apply
                                          expression (lib/set.ml[291,9906+36]..lib/set.ml[291,9906+41])
                                            Texp_ident "inter/568"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[291,9906+42]..lib/set.ml[291,9906+44])
                                                Texp_ident "r1/573"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[291,9906+45]..lib/set.ml[291,9906+47])
                                                Texp_ident "r2/576"
                                          ]
                                    ]
                                <case>
                                  pattern (lib/set.ml[292,9955+12]..lib/set.ml[292,9955+26])
                                    Tpat_value
                                    pattern (lib/set.ml[292,9955+12]..lib/set.ml[292,9955+26])
                                      Tpat_tuple
                                      [
                                        pattern (lib/set.ml[292,9955+13]..lib/set.ml[292,9955+15])
                                          Tpat_var "l2/577"
                                        pattern (lib/set.ml[292,9955+17]..lib/set.ml[292,9955+21])
                                          Tpat_construct "true"
                                          []
                                          None
                                        pattern (lib/set.ml[292,9955+23]..lib/set.ml[292,9955+25])
                                          Tpat_var "r2/578"
                                      ]
                                  expression (lib/set.ml[293,9985+14]..lib/set.ml[293,9985+49])
                                    Texp_apply
                                    expression (lib/set.ml[293,9985+14]..lib/set.ml[293,9985+18])
                                      Texp_ident "join/472"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[293,9985+19]..lib/set.ml[293,9985+32])
                                          Texp_apply
                                          expression (lib/set.ml[293,9985+20]..lib/set.ml[293,9985+25])
                                            Texp_ident "inter/568"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[293,9985+26]..lib/set.ml[293,9985+28])
                                                Texp_ident "l1/571"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[293,9985+29]..lib/set.ml[293,9985+31])
                                                Texp_ident "l2/577"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[293,9985+33]..lib/set.ml[293,9985+35])
                                          Texp_ident "v1/572"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[293,9985+36]..lib/set.ml[293,9985+49])
                                          Texp_apply
                                          expression (lib/set.ml[293,9985+37]..lib/set.ml[293,9985+42])
                                            Texp_ident "inter/568"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[293,9985+43]..lib/set.ml[293,9985+45])
                                                Texp_ident "r1/573"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[293,9985+46]..lib/set.ml[293,9985+48])
                                                Texp_ident "r2/578"
                                          ]
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[299,10203+4]..lib/set.ml[301,10238+35])
              Tstr_type Rec
              [
                type_declaration split_bis/579 (lib/set.ml[299,10203+4]..lib/set.ml[301,10238+35])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_variant
                      [
                        (lib/set.ml[300,10224+6]..lib/set.ml[300,10224+13])
                          Found/580
                          []
                          None
                        (lib/set.ml[301,10238+6]..lib/set.ml[301,10238+35])
                          NotFound/581
                          [
                            core_type (lib/set.ml[301,10238+20]..lib/set.ml[301,10238+21])
                              Ttyp_constr "t/407"
                              []
                            core_type (lib/set.ml[301,10238+25]..lib/set.ml[301,10238+34])
                              Ttyp_arrow
                              Nolabel
                              core_type (lib/set.ml[301,10238+25]..lib/set.ml[301,10238+29])
                                Ttyp_constr "unit/6!"
                                []
                              core_type (lib/set.ml[301,10238+33]..lib/set.ml[301,10238+34])
                                Ttyp_constr "t/407"
                                []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lib/set.ml[303,10275+4]..lib/set.ml[316,10723+61])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[303,10275+12]..lib/set.ml[303,10275+21])
                    Tpat_var "split_bis/582"
                  expression (lib/set.ml[303,10275+22]..lib/set.ml[316,10723+61]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[303,10275+22]..lib/set.ml[303,10275+23])
                          Tpat_var "x/583"
                    ]
                    Tfunction_cases (lib/set.ml[303,10275+26]..lib/set.ml[316,10723+61])
                      [
                        <case>
                          pattern (lib/set.ml[304,10310+8]..lib/set.ml[304,10310+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[305,10327+10]..lib/set.ml[305,10327+45])
                            Texp_construct "NotFound"
                            [
                              expression (lib/set.ml[305,10327+20]..lib/set.ml[305,10327+25])
                                Texp_construct "Empty"
                                []
                              expression (lib/set.ml[305,10327+27]..lib/set.ml[305,10327+44])
                                Texp_function
                                [
                                  Nolabel
                                  Param_pat
                                    pattern (lib/set.ml[305,10327+32]..lib/set.ml[305,10327+34])
                                      Tpat_construct "()"
                                      []
                                      None
                                ]
                                Tfunction_body
                                  expression (lib/set.ml[305,10327+38]..lib/set.ml[305,10327+43])
                                    Texp_construct "Empty"
                                    []
                            ]
                        <case>
                          pattern (lib/set.ml[306,10373+8]..lib/set.ml[306,10373+24])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[306,10373+12]..lib/set.ml[306,10373+24])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[306,10373+13]..lib/set.ml[306,10373+14])
                                      Tpat_var "l/584"
                                  "v"
                                    pattern (lib/set.ml[306,10373+16]..lib/set.ml[306,10373+17])
                                      Tpat_var "v/585"
                                  "r"
                                    pattern (lib/set.ml[306,10373+19]..lib/set.ml[306,10373+20])
                                      Tpat_var "r/586"
                                ]
                            ]
                            None
                          expression (lib/set.ml[307,10401+10]..lib/set.ml[316,10723+61])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[307,10401+14]..lib/set.ml[307,10401+15])
                                  Tpat_var "c/588"
                                expression (lib/set.ml[307,10401+18]..lib/set.ml[307,10401+33])
                                  Texp_apply
                                  expression (lib/set.ml[307,10401+18]..lib/set.ml[307,10401+29])
                                    Texp_ident "Ord/405.compare"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[307,10401+30]..lib/set.ml[307,10401+31])
                                        Texp_ident "x/583"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[307,10401+32]..lib/set.ml[307,10401+33])
                                        Texp_ident "v/585"
                                  ]
                            ]
                            expression (lib/set.ml[308,10438+10]..lib/set.ml[316,10723+61])
                              Texp_ifthenelse
                              expression (lib/set.ml[308,10438+13]..lib/set.ml[308,10438+18])
                                Texp_apply
                                expression (lib/set.ml[308,10438+15]..lib/set.ml[308,10438+16])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[308,10438+13]..lib/set.ml[308,10438+14])
                                      Texp_ident "c/588"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[308,10438+17]..lib/set.ml[308,10438+18])
                                      Texp_constant Const_int 0
                                ]
                              expression (lib/set.ml[308,10438+24]..lib/set.ml[308,10438+29])
                                Texp_construct "Found"
                                []
                              Some
                                expression (lib/set.ml[309,10468+15]..lib/set.ml[316,10723+61])
                                  Texp_ifthenelse
                                  expression (lib/set.ml[309,10468+18]..lib/set.ml[309,10468+23])
                                    Texp_apply
                                    expression (lib/set.ml[309,10468+20]..lib/set.ml[309,10468+21])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[309,10468+18]..lib/set.ml[309,10468+19])
                                          Texp_ident "c/588"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[309,10468+22]..lib/set.ml[309,10468+23])
                                          Texp_constant Const_int 0
                                    ]
                                  expression (lib/set.ml[310,10497+12]..lib/set.ml[312,10563+78])
                                    Texp_match
                                    expression (lib/set.ml[310,10497+18]..lib/set.ml[310,10497+31])
                                      Texp_apply
                                      expression (lib/set.ml[310,10497+18]..lib/set.ml[310,10497+27])
                                        Texp_ident "split_bis/582"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[310,10497+28]..lib/set.ml[310,10497+29])
                                            Texp_ident "x/583"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[310,10497+30]..lib/set.ml[310,10497+31])
                                            Texp_ident "l/584"
                                      ]
                                    [
                                      <case>
                                        pattern (lib/set.ml[311,10534+14]..lib/set.ml[311,10534+19])
                                          Tpat_value
                                          pattern (lib/set.ml[311,10534+14]..lib/set.ml[311,10534+19])
                                            Tpat_construct "Found"
                                            []
                                            None
                                        expression (lib/set.ml[311,10534+23]..lib/set.ml[311,10534+28])
                                          Texp_construct "Found"
                                          []
                                      <case>
                                        pattern (lib/set.ml[312,10563+14]..lib/set.ml[312,10563+31])
                                          Tpat_value
                                          pattern (lib/set.ml[312,10563+14]..lib/set.ml[312,10563+31])
                                            Tpat_construct "NotFound"
                                            [
                                              pattern (lib/set.ml[312,10563+24]..lib/set.ml[312,10563+26])
                                                Tpat_var "ll/589"
                                              pattern (lib/set.ml[312,10563+28]..lib/set.ml[312,10563+30])
                                                Tpat_var "rl/590"
                                            ]
                                            None
                                        expression (lib/set.ml[312,10563+35]..lib/set.ml[312,10563+78])
                                          Texp_construct "NotFound"
                                          [
                                            expression (lib/set.ml[312,10563+45]..lib/set.ml[312,10563+47])
                                              Texp_ident "ll/589"
                                            expression (lib/set.ml[312,10563+49]..lib/set.ml[312,10563+77])
                                              Texp_function
                                              [
                                                Nolabel
                                                Param_pat
                                                  pattern (lib/set.ml[312,10563+54]..lib/set.ml[312,10563+56])
                                                    Tpat_construct "()"
                                                    []
                                                    None
                                              ]
                                              Tfunction_body
                                                expression (lib/set.ml[312,10563+60]..lib/set.ml[312,10563+76])
                                                  Texp_apply
                                                  expression (lib/set.ml[312,10563+60]..lib/set.ml[312,10563+64])
                                                    Texp_ident "join/472"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/set.ml[312,10563+65]..lib/set.ml[312,10563+72])
                                                        Texp_apply
                                                        expression (lib/set.ml[312,10563+66]..lib/set.ml[312,10563+68])
                                                          Texp_ident "rl/590"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/set.ml[312,10563+69]..lib/set.ml[312,10563+71])
                                                              Texp_construct "()"
                                                              []
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/set.ml[312,10563+73]..lib/set.ml[312,10563+74])
                                                        Texp_ident "v/585"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/set.ml[312,10563+75]..lib/set.ml[312,10563+76])
                                                        Texp_ident "r/586"
                                                  ]
                                          ]
                                    ]
                                  Some
                                    expression (lib/set.ml[314,10657+12]..lib/set.ml[316,10723+61])
                                      Texp_match
                                      expression (lib/set.ml[314,10657+18]..lib/set.ml[314,10657+31])
                                        Texp_apply
                                        expression (lib/set.ml[314,10657+18]..lib/set.ml[314,10657+27])
                                          Texp_ident "split_bis/582"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[314,10657+28]..lib/set.ml[314,10657+29])
                                              Texp_ident "x/583"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[314,10657+30]..lib/set.ml[314,10657+31])
                                              Texp_ident "r/586"
                                        ]
                                      [
                                        <case>
                                          pattern (lib/set.ml[315,10694+14]..lib/set.ml[315,10694+19])
                                            Tpat_value
                                            pattern (lib/set.ml[315,10694+14]..lib/set.ml[315,10694+19])
                                              Tpat_construct "Found"
                                              []
                                              None
                                          expression (lib/set.ml[315,10694+23]..lib/set.ml[315,10694+28])
                                            Texp_construct "Found"
                                            []
                                        <case>
                                          pattern (lib/set.ml[316,10723+14]..lib/set.ml[316,10723+31])
                                            Tpat_value
                                            pattern (lib/set.ml[316,10723+14]..lib/set.ml[316,10723+31])
                                              Tpat_construct "NotFound"
                                              [
                                                pattern (lib/set.ml[316,10723+24]..lib/set.ml[316,10723+26])
                                                  Tpat_var "lr/592"
                                                pattern (lib/set.ml[316,10723+28]..lib/set.ml[316,10723+30])
                                                  Tpat_var "rr/593"
                                              ]
                                              None
                                          expression (lib/set.ml[316,10723+35]..lib/set.ml[316,10723+61])
                                            Texp_construct "NotFound"
                                            [
                                              expression (lib/set.ml[316,10723+45]..lib/set.ml[316,10723+56])
                                                Texp_apply
                                                expression (lib/set.ml[316,10723+45]..lib/set.ml[316,10723+49])
                                                  Texp_ident "join/472"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[316,10723+50]..lib/set.ml[316,10723+51])
                                                      Texp_ident "l/584"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[316,10723+52]..lib/set.ml[316,10723+53])
                                                      Texp_ident "v/585"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[316,10723+54]..lib/set.ml[316,10723+56])
                                                      Texp_ident "lr/592"
                                                ]
                                              expression (lib/set.ml[316,10723+58]..lib/set.ml[316,10723+60])
                                                Texp_ident "rr/593"
                                            ]
                                      ]
                      ]
              ]
            structure_item (lib/set.ml[318,10786+4]..lib/set.ml[325,11068+28])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[318,10786+12]..lib/set.ml[318,10786+20])
                    Tpat_var "disjoint/595"
                  expression (lib/set.ml[318,10786+21]..lib/set.ml[325,11068+28]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[318,10786+21]..lib/set.ml[318,10786+23])
                          Tpat_var "s1/596"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[318,10786+24]..lib/set.ml[318,10786+26])
                          Tpat_var "s2/597"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[319,10815+6]..lib/set.ml[325,11068+28])
                        Texp_match
                        expression (lib/set.ml[319,10815+12]..lib/set.ml[319,10815+20])
                          Texp_tuple
                          [
                            expression (lib/set.ml[319,10815+13]..lib/set.ml[319,10815+15])
                              Texp_ident "s1/596"
                            expression (lib/set.ml[319,10815+17]..lib/set.ml[319,10815+19])
                              Texp_ident "s2/597"
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[320,10841+8]..lib/set.ml[320,10841+31])
                              Tpat_or
                              pattern (lib/set.ml[320,10841+8]..lib/set.ml[320,10841+18])
                                Tpat_value
                                pattern (lib/set.ml[320,10841+8]..lib/set.ml[320,10841+18])
                                  Tpat_tuple
                                  [
                                    pattern (lib/set.ml[320,10841+9]..lib/set.ml[320,10841+14])
                                      Tpat_construct "Empty"
                                      []
                                      None
                                    pattern (lib/set.ml[320,10841+16]..lib/set.ml[320,10841+17])
                                      Tpat_any
                                  ]
                              pattern (lib/set.ml[320,10841+21]..lib/set.ml[320,10841+31])
                                Tpat_value
                                pattern (lib/set.ml[320,10841+21]..lib/set.ml[320,10841+31])
                                  Tpat_tuple
                                  [
                                    pattern (lib/set.ml[320,10841+22]..lib/set.ml[320,10841+23])
                                      Tpat_any
                                    pattern (lib/set.ml[320,10841+25]..lib/set.ml[320,10841+30])
                                      Tpat_construct "Empty"
                                      []
                                      None
                                  ]
                            expression (lib/set.ml[320,10841+35]..lib/set.ml[320,10841+39])
                              Texp_construct "true"
                              []
                          <case>
                            pattern (lib/set.ml[321,10881+8]..lib/set.ml[321,10881+36])
                              Tpat_value
                              pattern (lib/set.ml[321,10881+8]..lib/set.ml[321,10881+36])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[321,10881+9]..lib/set.ml[321,10881+31])
                                    Tpat_construct "Node"
                                    [
                                      pattern (lib/set.ml[321,10881+13]..lib/set.ml[321,10881+31])
                                        Tpat_record
                                        [
                                          "l"
                                            pattern (lib/set.ml[321,10881+16]..lib/set.ml[321,10881+18])
                                              Tpat_var "l1/598"
                                          "v"
                                            pattern (lib/set.ml[321,10881+22]..lib/set.ml[321,10881+24])
                                              Tpat_var "v1/599"
                                          "r"
                                            pattern (lib/set.ml[321,10881+28]..lib/set.ml[321,10881+30])
                                              Tpat_var "r1/600"
                                        ]
                                    ]
                                    None
                                  pattern (lib/set.ml[321,10881+33]..lib/set.ml[321,10881+35])
                                    Tpat_var "t2/601"
                                ]
                            expression (lib/set.ml[322,10921+10]..lib/set.ml[325,11068+28])
                              Texp_ifthenelse
                              expression (lib/set.ml[322,10921+13]..lib/set.ml[322,10921+21])
                                Texp_apply
                                expression (lib/set.ml[322,10921+16]..lib/set.ml[322,10921+18])
                                  Texp_ident "Stdlib!.=="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[322,10921+13]..lib/set.ml[322,10921+15])
                                      Texp_ident "s1/596"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[322,10921+19]..lib/set.ml[322,10921+21])
                                      Texp_ident "s2/597"
                                ]
                              expression (lib/set.ml[322,10921+27]..lib/set.ml[322,10921+32])
                                Texp_construct "false"
                                []
                              Some
                                expression (lib/set.ml[323,10954+15]..lib/set.ml[325,11068+28])
                                  Texp_match
                                  expression (lib/set.ml[323,10954+21]..lib/set.ml[323,10954+36])
                                    Texp_apply
                                    expression (lib/set.ml[323,10954+21]..lib/set.ml[323,10954+30])
                                      Texp_ident "split_bis/582"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[323,10954+31]..lib/set.ml[323,10954+33])
                                          Texp_ident "v1/599"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[323,10954+34]..lib/set.ml[323,10954+36])
                                          Texp_ident "t2/601"
                                    ]
                                  [
                                    <case>
                                      pattern (lib/set.ml[324,10996+14]..lib/set.ml[324,10996+30])
                                        Tpat_value
                                        pattern (lib/set.ml[324,10996+14]..lib/set.ml[324,10996+30])
                                          Tpat_construct "NotFound"
                                          [
                                            pattern (lib/set.ml[324,10996+23]..lib/set.ml[324,10996+25])
                                              Tpat_var "l2/602"
                                            pattern (lib/set.ml[324,10996+27]..lib/set.ml[324,10996+29])
                                              Tpat_var "r2/603"
                                          ]
                                          None
                                      expression (lib/set.ml[324,10996+34]..lib/set.ml[324,10996+71])
                                        Texp_apply
                                        expression (lib/set.ml[324,10996+49]..lib/set.ml[324,10996+51])
                                          Texp_ident "Stdlib!.&&"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[324,10996+34]..lib/set.ml[324,10996+48])
                                              Texp_apply
                                              expression (lib/set.ml[324,10996+34]..lib/set.ml[324,10996+42])
                                                Texp_ident "disjoint/595"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[324,10996+43]..lib/set.ml[324,10996+45])
                                                    Texp_ident "l1/598"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[324,10996+46]..lib/set.ml[324,10996+48])
                                                    Texp_ident "l2/602"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[324,10996+52]..lib/set.ml[324,10996+71])
                                              Texp_apply
                                              expression (lib/set.ml[324,10996+52]..lib/set.ml[324,10996+60])
                                                Texp_ident "disjoint/595"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[324,10996+61]..lib/set.ml[324,10996+63])
                                                    Texp_ident "r1/600"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[324,10996+64]..lib/set.ml[324,10996+71])
                                                    Texp_apply
                                                    expression (lib/set.ml[324,10996+65]..lib/set.ml[324,10996+67])
                                                      Texp_ident "r2/603"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/set.ml[324,10996+68]..lib/set.ml[324,10996+70])
                                                          Texp_construct "()"
                                                          []
                                                    ]
                                              ]
                                        ]
                                    <case>
                                      pattern (lib/set.ml[325,11068+14]..lib/set.ml[325,11068+19])
                                        Tpat_value
                                        pattern (lib/set.ml[325,11068+14]..lib/set.ml[325,11068+19])
                                          Tpat_construct "Found"
                                          []
                                          None
                                      expression (lib/set.ml[325,11068+23]..lib/set.ml[325,11068+28])
                                        Texp_construct "false"
                                        []
                                  ]
                        ]
              ]
            structure_item (lib/set.ml[327,11098+4]..lib/set.ml[336,11385+46])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[327,11098+12]..lib/set.ml[327,11098+16])
                    Tpat_var "diff/604"
                  expression (lib/set.ml[327,11098+17]..lib/set.ml[336,11385+46]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[327,11098+17]..lib/set.ml[327,11098+19])
                          Tpat_var "s1/605"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[327,11098+20]..lib/set.ml[327,11098+22])
                          Tpat_var "s2/606"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[328,11123+6]..lib/set.ml[336,11385+46])
                        Texp_match
                        expression (lib/set.ml[328,11123+12]..lib/set.ml[328,11123+20])
                          Texp_tuple
                          [
                            expression (lib/set.ml[328,11123+13]..lib/set.ml[328,11123+15])
                              Texp_ident "s1/605"
                            expression (lib/set.ml[328,11123+17]..lib/set.ml[328,11123+19])
                              Texp_ident "s2/606"
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[329,11149+8]..lib/set.ml[329,11149+18])
                              Tpat_value
                              pattern (lib/set.ml[329,11149+8]..lib/set.ml[329,11149+18])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[329,11149+9]..lib/set.ml[329,11149+14])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                  pattern (lib/set.ml[329,11149+16]..lib/set.ml[329,11149+17])
                                    Tpat_any
                                ]
                            expression (lib/set.ml[329,11149+22]..lib/set.ml[329,11149+27])
                              Texp_construct "Empty"
                              []
                          <case>
                            pattern (lib/set.ml[330,11177+8]..lib/set.ml[330,11177+19])
                              Tpat_value
                              pattern (lib/set.ml[330,11177+8]..lib/set.ml[330,11177+19])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[330,11177+9]..lib/set.ml[330,11177+11])
                                    Tpat_var "t1/607"
                                  pattern (lib/set.ml[330,11177+13]..lib/set.ml[330,11177+18])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                ]
                            expression (lib/set.ml[330,11177+23]..lib/set.ml[330,11177+25])
                              Texp_ident "t1/607"
                          <case>
                            pattern (lib/set.ml[331,11203+8]..lib/set.ml[331,11203+36])
                              Tpat_value
                              pattern (lib/set.ml[331,11203+8]..lib/set.ml[331,11203+36])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[331,11203+9]..lib/set.ml[331,11203+31])
                                    Tpat_construct "Node"
                                    [
                                      pattern (lib/set.ml[331,11203+13]..lib/set.ml[331,11203+31])
                                        Tpat_record
                                        [
                                          "l"
                                            pattern (lib/set.ml[331,11203+16]..lib/set.ml[331,11203+18])
                                              Tpat_var "l1/608"
                                          "v"
                                            pattern (lib/set.ml[331,11203+22]..lib/set.ml[331,11203+24])
                                              Tpat_var "v1/609"
                                          "r"
                                            pattern (lib/set.ml[331,11203+28]..lib/set.ml[331,11203+30])
                                              Tpat_var "r1/610"
                                        ]
                                    ]
                                    None
                                  pattern (lib/set.ml[331,11203+33]..lib/set.ml[331,11203+35])
                                    Tpat_var "t2/611"
                                ]
                            expression (lib/set.ml[332,11243+10]..lib/set.ml[336,11385+46])
                              Texp_match
                              expression (lib/set.ml[332,11243+16]..lib/set.ml[332,11243+27])
                                Texp_apply
                                expression (lib/set.ml[332,11243+16]..lib/set.ml[332,11243+21])
                                  Texp_ident "split/518"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[332,11243+22]..lib/set.ml[332,11243+24])
                                      Texp_ident "v1/609"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[332,11243+25]..lib/set.ml[332,11243+27])
                                      Texp_ident "t2/611"
                                ]
                              [
                                <case>
                                  pattern (lib/set.ml[333,11276+12]..lib/set.ml[333,11276+27])
                                    Tpat_value
                                    pattern (lib/set.ml[333,11276+12]..lib/set.ml[333,11276+27])
                                      Tpat_tuple
                                      [
                                        pattern (lib/set.ml[333,11276+13]..lib/set.ml[333,11276+15])
                                          Tpat_var "l2/612"
                                        pattern (lib/set.ml[333,11276+17]..lib/set.ml[333,11276+22])
                                          Tpat_construct "false"
                                          []
                                          None
                                        pattern (lib/set.ml[333,11276+24]..lib/set.ml[333,11276+26])
                                          Tpat_var "r2/613"
                                      ]
                                  expression (lib/set.ml[334,11307+14]..lib/set.ml[334,11307+47])
                                    Texp_apply
                                    expression (lib/set.ml[334,11307+14]..lib/set.ml[334,11307+18])
                                      Texp_ident "join/472"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[334,11307+19]..lib/set.ml[334,11307+31])
                                          Texp_apply
                                          expression (lib/set.ml[334,11307+20]..lib/set.ml[334,11307+24])
                                            Texp_ident "diff/604"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[334,11307+25]..lib/set.ml[334,11307+27])
                                                Texp_ident "l1/608"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[334,11307+28]..lib/set.ml[334,11307+30])
                                                Texp_ident "l2/612"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[334,11307+32]..lib/set.ml[334,11307+34])
                                          Texp_ident "v1/609"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[334,11307+35]..lib/set.ml[334,11307+47])
                                          Texp_apply
                                          expression (lib/set.ml[334,11307+36]..lib/set.ml[334,11307+40])
                                            Texp_ident "diff/604"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[334,11307+41]..lib/set.ml[334,11307+43])
                                                Texp_ident "r1/610"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[334,11307+44]..lib/set.ml[334,11307+46])
                                                Texp_ident "r2/613"
                                          ]
                                    ]
                                <case>
                                  pattern (lib/set.ml[335,11355+12]..lib/set.ml[335,11355+26])
                                    Tpat_value
                                    pattern (lib/set.ml[335,11355+12]..lib/set.ml[335,11355+26])
                                      Tpat_tuple
                                      [
                                        pattern (lib/set.ml[335,11355+13]..lib/set.ml[335,11355+15])
                                          Tpat_var "l2/614"
                                        pattern (lib/set.ml[335,11355+17]..lib/set.ml[335,11355+21])
                                          Tpat_construct "true"
                                          []
                                          None
                                        pattern (lib/set.ml[335,11355+23]..lib/set.ml[335,11355+25])
                                          Tpat_var "r2/615"
                                      ]
                                  expression (lib/set.ml[336,11385+14]..lib/set.ml[336,11385+46])
                                    Texp_apply
                                    expression (lib/set.ml[336,11385+14]..lib/set.ml[336,11385+20])
                                      Texp_ident "concat/512"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[336,11385+21]..lib/set.ml[336,11385+33])
                                          Texp_apply
                                          expression (lib/set.ml[336,11385+22]..lib/set.ml[336,11385+26])
                                            Texp_ident "diff/604"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[336,11385+27]..lib/set.ml[336,11385+29])
                                                Texp_ident "l1/608"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[336,11385+30]..lib/set.ml[336,11385+32])
                                                Texp_ident "l2/614"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[336,11385+34]..lib/set.ml[336,11385+46])
                                          Texp_apply
                                          expression (lib/set.ml[336,11385+35]..lib/set.ml[336,11385+39])
                                            Texp_ident "diff/604"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[336,11385+40]..lib/set.ml[336,11385+42])
                                                Texp_ident "r1/610"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[336,11385+43]..lib/set.ml[336,11385+45])
                                                Texp_ident "r2/615"
                                          ]
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[338,11433+4]..lib/set.ml[338,11433+58])
              Tstr_type Rec
              [
                type_declaration enumeration/616 (lib/set.ml[338,11433+4]..lib/set.ml[338,11433+58])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_variant
                      [
                        (lib/set.ml[338,11433+23]..lib/set.ml[338,11433+26])
                          End/617
                          []
                          None
                        (lib/set.ml[338,11433+27]..lib/set.ml[338,11433+58])
                          More/618
                          [
                            core_type (lib/set.ml[338,11433+37]..lib/set.ml[338,11433+40])
                              Ttyp_constr "elt/406"
                              []
                            core_type (lib/set.ml[338,11433+43]..lib/set.ml[338,11433+44])
                              Ttyp_constr "t/407"
                              []
                            core_type (lib/set.ml[338,11433+47]..lib/set.ml[338,11433+58])
                              Ttyp_constr "enumeration/616"
                              []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (lib/set.ml[340,11493+4]..lib/set.ml[343,11559+52])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[340,11493+12]..lib/set.ml[340,11493+21])
                    Tpat_var "cons_enum/619"
                  expression (lib/set.ml[340,11493+22]..lib/set.ml[343,11559+52]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[340,11493+22]..lib/set.ml[340,11493+23])
                          Tpat_var "s/620"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[340,11493+24]..lib/set.ml[340,11493+25])
                          Tpat_var "e/621"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[341,11521+6]..lib/set.ml[343,11559+52])
                        Texp_match
                        expression (lib/set.ml[341,11521+12]..lib/set.ml[341,11521+13])
                          Texp_ident "s/620"
                        [
                          <case>
                            pattern (lib/set.ml[342,11540+8]..lib/set.ml[342,11540+13])
                              Tpat_value
                              pattern (lib/set.ml[342,11540+8]..lib/set.ml[342,11540+13])
                                Tpat_construct "Empty"
                                []
                                None
                            expression (lib/set.ml[342,11540+17]..lib/set.ml[342,11540+18])
                              Texp_ident "e/621"
                          <case>
                            pattern (lib/set.ml[343,11559+8]..lib/set.ml[343,11559+21])
                              Tpat_value
                              pattern (lib/set.ml[343,11559+8]..lib/set.ml[343,11559+21])
                                Tpat_construct "Node"
                                [
                                  pattern (lib/set.ml[343,11559+12]..lib/set.ml[343,11559+21])
                                    Tpat_record
                                    [
                                      "l"
                                        pattern (lib/set.ml[343,11559+13]..lib/set.ml[343,11559+14])
                                          Tpat_var "l/622"
                                      "v"
                                        pattern (lib/set.ml[343,11559+16]..lib/set.ml[343,11559+17])
                                          Tpat_var "v/623"
                                      "r"
                                        pattern (lib/set.ml[343,11559+19]..lib/set.ml[343,11559+20])
                                          Tpat_var "r/624"
                                    ]
                                ]
                                None
                            expression (lib/set.ml[343,11559+25]..lib/set.ml[343,11559+52])
                              Texp_apply
                              expression (lib/set.ml[343,11559+25]..lib/set.ml[343,11559+34])
                                Texp_ident "cons_enum/619"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[343,11559+35]..lib/set.ml[343,11559+36])
                                    Texp_ident "l/622"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[343,11559+37]..lib/set.ml[343,11559+52])
                                    Texp_construct "More"
                                    [
                                      expression (lib/set.ml[343,11559+43]..lib/set.ml[343,11559+44])
                                        Texp_ident "v/623"
                                      expression (lib/set.ml[343,11559+46]..lib/set.ml[343,11559+47])
                                        Texp_ident "r/624"
                                      expression (lib/set.ml[343,11559+49]..lib/set.ml[343,11559+50])
                                        Texp_ident "e/621"
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[345,11613+4]..lib/set.ml[354,11867+62])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[345,11613+12]..lib/set.ml[345,11613+23])
                    Tpat_var "compare_aux/625"
                  expression (lib/set.ml[345,11613+24]..lib/set.ml[354,11867+62]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[345,11613+24]..lib/set.ml[345,11613+26])
                          Tpat_var "e1/626"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[345,11613+27]..lib/set.ml[345,11613+29])
                          Tpat_var "e2/627"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[346,11645+8]..lib/set.ml[354,11867+62])
                        Texp_match
                        expression (lib/set.ml[346,11645+14]..lib/set.ml[346,11645+22])
                          Texp_tuple
                          [
                            expression (lib/set.ml[346,11645+15]..lib/set.ml[346,11645+17])
                              Texp_ident "e1/626"
                            expression (lib/set.ml[346,11645+19]..lib/set.ml[346,11645+21])
                              Texp_ident "e2/627"
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[347,11673+8]..lib/set.ml[347,11673+18])
                              Tpat_value
                              pattern (lib/set.ml[347,11673+8]..lib/set.ml[347,11673+18])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[347,11673+9]..lib/set.ml[347,11673+12])
                                    Tpat_construct "End"
                                    []
                                    None
                                  pattern (lib/set.ml[347,11673+14]..lib/set.ml[347,11673+17])
                                    Tpat_construct "End"
                                    []
                                    None
                                ]
                            expression (lib/set.ml[347,11673+22]..lib/set.ml[347,11673+23])
                              Texp_constant Const_int 0
                          <case>
                            pattern (lib/set.ml[348,11697+8]..lib/set.ml[348,11697+16])
                              Tpat_value
                              pattern (lib/set.ml[348,11697+8]..lib/set.ml[348,11697+16])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[348,11697+9]..lib/set.ml[348,11697+12])
                                    Tpat_construct "End"
                                    []
                                    None
                                  pattern (lib/set.ml[348,11697+14]..lib/set.ml[348,11697+15])
                                    Tpat_any
                                ]
                            expression (lib/set.ml[348,11697+21]..lib/set.ml[348,11697+23])
                              Texp_constant Const_int -1
                          <case>
                            pattern (lib/set.ml[349,11721+8]..lib/set.ml[349,11721+16])
                              Tpat_value
                              pattern (lib/set.ml[349,11721+8]..lib/set.ml[349,11721+16])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[349,11721+9]..lib/set.ml[349,11721+10])
                                    Tpat_any
                                  pattern (lib/set.ml[349,11721+12]..lib/set.ml[349,11721+15])
                                    Tpat_construct "End"
                                    []
                                    None
                                ]
                            expression (lib/set.ml[349,11721+20]..lib/set.ml[349,11721+21])
                              Texp_constant Const_int 1
                          <case>
                            pattern (lib/set.ml[350,11743+8]..lib/set.ml[350,11743+44])
                              Tpat_value
                              pattern (lib/set.ml[350,11743+8]..lib/set.ml[350,11743+44])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[350,11743+9]..lib/set.ml[350,11743+25])
                                    Tpat_construct "More"
                                    [
                                      pattern (lib/set.ml[350,11743+14]..lib/set.ml[350,11743+16])
                                        Tpat_var "v1/628"
                                      pattern (lib/set.ml[350,11743+18]..lib/set.ml[350,11743+20])
                                        Tpat_var "r1/629"
                                      pattern (lib/set.ml[350,11743+22]..lib/set.ml[350,11743+24])
                                        Tpat_var "e1/630"
                                    ]
                                    None
                                  pattern (lib/set.ml[350,11743+27]..lib/set.ml[350,11743+43])
                                    Tpat_construct "More"
                                    [
                                      pattern (lib/set.ml[350,11743+32]..lib/set.ml[350,11743+34])
                                        Tpat_var "v2/631"
                                      pattern (lib/set.ml[350,11743+36]..lib/set.ml[350,11743+38])
                                        Tpat_var "r2/632"
                                      pattern (lib/set.ml[350,11743+40]..lib/set.ml[350,11743+42])
                                        Tpat_var "e2/633"
                                    ]
                                    None
                                ]
                            expression (lib/set.ml[351,11791+10]..lib/set.ml[354,11867+62])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/set.ml[351,11791+14]..lib/set.ml[351,11791+15])
                                    Tpat_var "c/634"
                                  expression (lib/set.ml[351,11791+18]..lib/set.ml[351,11791+35])
                                    Texp_apply
                                    expression (lib/set.ml[351,11791+18]..lib/set.ml[351,11791+29])
                                      Texp_ident "Ord/405.compare"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[351,11791+30]..lib/set.ml[351,11791+32])
                                          Texp_ident "v1/628"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[351,11791+33]..lib/set.ml[351,11791+35])
                                          Texp_ident "v2/631"
                                    ]
                              ]
                              expression (lib/set.ml[352,11830+10]..lib/set.ml[354,11867+62])
                                Texp_ifthenelse
                                expression (lib/set.ml[352,11830+13]..lib/set.ml[352,11830+19])
                                  Texp_apply
                                  expression (lib/set.ml[352,11830+15]..lib/set.ml[352,11830+17])
                                    Texp_ident "Stdlib!.<>"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[352,11830+13]..lib/set.ml[352,11830+14])
                                        Texp_ident "c/634"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[352,11830+18]..lib/set.ml[352,11830+19])
                                        Texp_constant Const_int 0
                                  ]
                                expression (lib/set.ml[353,11850+15]..lib/set.ml[353,11850+16])
                                  Texp_ident "c/634"
                                Some
                                  expression (lib/set.ml[354,11867+15]..lib/set.ml[354,11867+62])
                                    Texp_apply
                                    expression (lib/set.ml[354,11867+15]..lib/set.ml[354,11867+26])
                                      Texp_ident "compare_aux/625"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[354,11867+27]..lib/set.ml[354,11867+44])
                                          Texp_apply
                                          expression (lib/set.ml[354,11867+28]..lib/set.ml[354,11867+37])
                                            Texp_ident "cons_enum/619"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[354,11867+38]..lib/set.ml[354,11867+40])
                                                Texp_ident "r1/629"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[354,11867+41]..lib/set.ml[354,11867+43])
                                                Texp_ident "e1/630"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[354,11867+45]..lib/set.ml[354,11867+62])
                                          Texp_apply
                                          expression (lib/set.ml[354,11867+46]..lib/set.ml[354,11867+55])
                                            Texp_ident "cons_enum/619"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[354,11867+56]..lib/set.ml[354,11867+58])
                                                Texp_ident "r2/632"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[354,11867+59]..lib/set.ml[354,11867+61])
                                                Texp_ident "e2/633"
                                          ]
                                    ]
                        ]
              ]
            structure_item (lib/set.ml[356,11931+4]..lib/set.ml[357,11955+55])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[356,11931+8]..lib/set.ml[356,11931+15])
                    Tpat_var "compare/635"
                  expression (lib/set.ml[356,11931+16]..lib/set.ml[357,11955+55]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[356,11931+16]..lib/set.ml[356,11931+18])
                          Tpat_var "s1/636"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[356,11931+19]..lib/set.ml[356,11931+21])
                          Tpat_var "s2/637"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[357,11955+6]..lib/set.ml[357,11955+55])
                        Texp_apply
                        expression (lib/set.ml[357,11955+6]..lib/set.ml[357,11955+17])
                          Texp_ident "compare_aux/625"
                        [
                          <arg>
                            Nolabel
                            expression (lib/set.ml[357,11955+18]..lib/set.ml[357,11955+36])
                              Texp_apply
                              expression (lib/set.ml[357,11955+19]..lib/set.ml[357,11955+28])
                                Texp_ident "cons_enum/619"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[357,11955+29]..lib/set.ml[357,11955+31])
                                    Texp_ident "s1/636"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[357,11955+32]..lib/set.ml[357,11955+35])
                                    Texp_construct "End"
                                    []
                              ]
                          <arg>
                            Nolabel
                            expression (lib/set.ml[357,11955+37]..lib/set.ml[357,11955+55])
                              Texp_apply
                              expression (lib/set.ml[357,11955+38]..lib/set.ml[357,11955+47])
                                Texp_ident "cons_enum/619"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[357,11955+48]..lib/set.ml[357,11955+50])
                                    Texp_ident "s2/637"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[357,11955+51]..lib/set.ml[357,11955+54])
                                    Texp_construct "End"
                                    []
                              ]
                        ]
              ]
            structure_item (lib/set.ml[359,12012+4]..lib/set.ml[360,12034+23])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[359,12012+8]..lib/set.ml[359,12012+13])
                    Tpat_var "equal/638"
                  expression (lib/set.ml[359,12012+14]..lib/set.ml[360,12034+23]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[359,12012+14]..lib/set.ml[359,12012+16])
                          Tpat_var "s1/640"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[359,12012+17]..lib/set.ml[359,12012+19])
                          Tpat_var "s2/641"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[360,12034+6]..lib/set.ml[360,12034+23])
                        Texp_apply
                        expression (lib/set.ml[360,12034+20]..lib/set.ml[360,12034+21])
                          Texp_ident "Stdlib!.="
                        [
                          <arg>
                            Nolabel
                            expression (lib/set.ml[360,12034+6]..lib/set.ml[360,12034+19])
                              Texp_apply
                              expression (lib/set.ml[360,12034+6]..lib/set.ml[360,12034+13])
                                Texp_ident "compare/635"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[360,12034+14]..lib/set.ml[360,12034+16])
                                    Texp_ident "s1/640"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[360,12034+17]..lib/set.ml[360,12034+19])
                                    Texp_ident "s2/641"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/set.ml[360,12034+22]..lib/set.ml[360,12034+23])
                              Texp_constant Const_int 0
                        ]
              ]
            structure_item (lib/set.ml[362,12059+4]..lib/set.ml[375,12471+71])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[362,12059+12]..lib/set.ml[362,12059+18])
                    Tpat_var "subset/642"
                  expression (lib/set.ml[362,12059+19]..lib/set.ml[375,12471+71]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[362,12059+19]..lib/set.ml[362,12059+21])
                          Tpat_var "s1/643"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[362,12059+22]..lib/set.ml[362,12059+24])
                          Tpat_var "s2/644"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[363,12086+6]..lib/set.ml[375,12471+71])
                        Texp_match
                        expression (lib/set.ml[363,12086+12]..lib/set.ml[363,12086+20])
                          Texp_tuple
                          [
                            expression (lib/set.ml[363,12086+13]..lib/set.ml[363,12086+15])
                              Texp_ident "s1/643"
                            expression (lib/set.ml[363,12086+17]..lib/set.ml[363,12086+19])
                              Texp_ident "s2/644"
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[364,12112+8]..lib/set.ml[364,12112+16])
                              Tpat_value
                              pattern (lib/set.ml[364,12112+8]..lib/set.ml[364,12112+16])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[364,12112+8]..lib/set.ml[364,12112+13])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                  pattern (lib/set.ml[364,12112+15]..lib/set.ml[364,12112+16])
                                    Tpat_any
                                ]
                            expression (lib/set.ml[365,12132+10]..lib/set.ml[365,12132+14])
                              Texp_construct "true"
                              []
                          <case>
                            pattern (lib/set.ml[366,12147+8]..lib/set.ml[366,12147+16])
                              Tpat_value
                              pattern (lib/set.ml[366,12147+8]..lib/set.ml[366,12147+16])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[366,12147+8]..lib/set.ml[366,12147+9])
                                    Tpat_any
                                  pattern (lib/set.ml[366,12147+11]..lib/set.ml[366,12147+16])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                ]
                            expression (lib/set.ml[367,12167+10]..lib/set.ml[367,12167+15])
                              Texp_construct "false"
                              []
                          <case>
                            pattern (lib/set.ml[368,12183+8]..lib/set.ml[368,12183+64])
                              Tpat_value
                              pattern (lib/set.ml[368,12183+8]..lib/set.ml[368,12183+64])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[368,12183+8]..lib/set.ml[368,12183+31])
                                    Tpat_construct "Node"
                                    [
                                      pattern (lib/set.ml[368,12183+13]..lib/set.ml[368,12183+31])
                                        Tpat_record
                                        [
                                          "l"
                                            pattern (lib/set.ml[368,12183+16]..lib/set.ml[368,12183+18])
                                              Tpat_var "l1/645"
                                          "v"
                                            pattern (lib/set.ml[368,12183+22]..lib/set.ml[368,12183+24])
                                              Tpat_var "v1/646"
                                          "r"
                                            pattern (lib/set.ml[368,12183+28]..lib/set.ml[368,12183+30])
                                              Tpat_var "r1/647"
                                        ]
                                    ]
                                    None
                                  pattern (lib/set.ml[368,12183+33]..lib/set.ml[368,12183+64])
                                    Tpat_alias "t2/651"
                                    pattern (lib/set.ml[368,12183+34]..lib/set.ml[368,12183+57])
                                      Tpat_construct "Node"
                                      [
                                        pattern (lib/set.ml[368,12183+39]..lib/set.ml[368,12183+57])
                                          Tpat_record
                                          [
                                            "l"
                                              pattern (lib/set.ml[368,12183+42]..lib/set.ml[368,12183+44])
                                                Tpat_var "l2/648"
                                            "v"
                                              pattern (lib/set.ml[368,12183+48]..lib/set.ml[368,12183+50])
                                                Tpat_var "v2/649"
                                            "r"
                                              pattern (lib/set.ml[368,12183+54]..lib/set.ml[368,12183+56])
                                                Tpat_var "r2/650"
                                          ]
                                      ]
                                      None
                                ]
                            expression (lib/set.ml[369,12251+10]..lib/set.ml[375,12471+71])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/set.ml[369,12251+14]..lib/set.ml[369,12251+15])
                                    Tpat_var "c/652"
                                  expression (lib/set.ml[369,12251+18]..lib/set.ml[369,12251+35])
                                    Texp_apply
                                    expression (lib/set.ml[369,12251+18]..lib/set.ml[369,12251+29])
                                      Texp_ident "Ord/405.compare"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[369,12251+30]..lib/set.ml[369,12251+32])
                                          Texp_ident "v1/646"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[369,12251+33]..lib/set.ml[369,12251+35])
                                          Texp_ident "v2/649"
                                    ]
                              ]
                              expression (lib/set.ml[370,12290+10]..lib/set.ml[375,12471+71])
                                Texp_ifthenelse
                                expression (lib/set.ml[370,12290+13]..lib/set.ml[370,12290+18])
                                  Texp_apply
                                  expression (lib/set.ml[370,12290+15]..lib/set.ml[370,12290+16])
                                    Texp_ident "Stdlib!.="
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[370,12290+13]..lib/set.ml[370,12290+14])
                                        Texp_ident "c/652"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[370,12290+17]..lib/set.ml[370,12290+18])
                                        Texp_constant Const_int 0
                                  ]
                                expression (lib/set.ml[371,12314+12]..lib/set.ml[371,12314+40])
                                  Texp_apply
                                  expression (lib/set.ml[371,12314+25]..lib/set.ml[371,12314+27])
                                    Texp_ident "Stdlib!.&&"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[371,12314+12]..lib/set.ml[371,12314+24])
                                        Texp_apply
                                        expression (lib/set.ml[371,12314+12]..lib/set.ml[371,12314+18])
                                          Texp_ident "subset/642"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[371,12314+19]..lib/set.ml[371,12314+21])
                                              Texp_ident "l1/645"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[371,12314+22]..lib/set.ml[371,12314+24])
                                              Texp_ident "l2/648"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[371,12314+28]..lib/set.ml[371,12314+40])
                                        Texp_apply
                                        expression (lib/set.ml[371,12314+28]..lib/set.ml[371,12314+34])
                                          Texp_ident "subset/642"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[371,12314+35]..lib/set.ml[371,12314+37])
                                              Texp_ident "r1/647"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[371,12314+38]..lib/set.ml[371,12314+40])
                                              Texp_ident "r2/650"
                                        ]
                                  ]
                                Some
                                  expression (lib/set.ml[372,12355+15]..lib/set.ml[375,12471+71])
                                    Texp_ifthenelse
                                    expression (lib/set.ml[372,12355+18]..lib/set.ml[372,12355+23])
                                      Texp_apply
                                      expression (lib/set.ml[372,12355+20]..lib/set.ml[372,12355+21])
                                        Texp_ident "Stdlib!.<"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[372,12355+18]..lib/set.ml[372,12355+19])
                                            Texp_ident "c/652"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[372,12355+22]..lib/set.ml[372,12355+23])
                                            Texp_constant Const_int 0
                                      ]
                                    expression (lib/set.ml[373,12384+12]..lib/set.ml[373,12384+71])
                                      Texp_apply
                                      expression (lib/set.ml[373,12384+56]..lib/set.ml[373,12384+58])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[373,12384+12]..lib/set.ml[373,12384+55])
                                            Texp_apply
                                            expression (lib/set.ml[373,12384+12]..lib/set.ml[373,12384+18])
                                              Texp_ident "subset/642"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[373,12384+19]..lib/set.ml[373,12384+52])
                                                  Texp_construct "Node"
                                                  [
                                                    expression (lib/set.ml[373,12384+25]..lib/set.ml[373,12384+51])
                                                      Texp_record
                                                        fields =
                                                          [
                                                            "l"
                                                              expression (lib/set.ml[373,12384+28]..lib/set.ml[373,12384+30])
                                                                Texp_ident "l1/645"
                                                            "v"
                                                              expression (lib/set.ml[373,12384+34]..lib/set.ml[373,12384+36])
                                                                Texp_ident "v1/646"
                                                            "r"
                                                              expression (lib/set.ml[373,12384+40]..lib/set.ml[373,12384+45])
                                                                Texp_construct "Empty"
                                                                []
                                                            "h"
                                                              expression (lib/set.ml[373,12384+49]..lib/set.ml[373,12384+50])
                                                                Texp_constant Const_int 0
                                                          ]
                                                        representation =
Record_inlined 0
                                                        extended_expression =
                                                          None
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[373,12384+53]..lib/set.ml[373,12384+55])
                                                  Texp_ident "l2/648"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[373,12384+59]..lib/set.ml[373,12384+71])
                                            Texp_apply
                                            expression (lib/set.ml[373,12384+59]..lib/set.ml[373,12384+65])
                                              Texp_ident "subset/642"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[373,12384+66]..lib/set.ml[373,12384+68])
                                                  Texp_ident "r1/647"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[373,12384+69]..lib/set.ml[373,12384+71])
                                                  Texp_ident "t2/651"
                                            ]
                                      ]
                                    Some
                                      expression (lib/set.ml[375,12471+12]..lib/set.ml[375,12471+71])
                                        Texp_apply
                                        expression (lib/set.ml[375,12471+56]..lib/set.ml[375,12471+58])
                                          Texp_ident "Stdlib!.&&"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[375,12471+12]..lib/set.ml[375,12471+55])
                                              Texp_apply
                                              expression (lib/set.ml[375,12471+12]..lib/set.ml[375,12471+18])
                                                Texp_ident "subset/642"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[375,12471+19]..lib/set.ml[375,12471+52])
                                                    Texp_construct "Node"
                                                    [
                                                      expression (lib/set.ml[375,12471+25]..lib/set.ml[375,12471+51])
                                                        Texp_record
                                                          fields =
                                                            [
                                                              "l"
                                                                expression (lib/set.ml[375,12471+28]..lib/set.ml[375,12471+33])
                                                                  Texp_construct "Empty"
                                                                  []
                                                              "v"
                                                                expression (lib/set.ml[375,12471+37]..lib/set.ml[375,12471+39])
                                                                  Texp_ident "v1/646"
                                                              "r"
                                                                expression (lib/set.ml[375,12471+43]..lib/set.ml[375,12471+45])
                                                                  Texp_ident "r1/647"
                                                              "h"
                                                                expression (lib/set.ml[375,12471+49]..lib/set.ml[375,12471+50])
                                                                  Texp_constant Const_int 0
                                                            ]
                                                          representation =
Record_inlined 0
                                                          extended_expression =
                                                            None
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[375,12471+53]..lib/set.ml[375,12471+55])
                                                    Texp_ident "r2/650"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[375,12471+59]..lib/set.ml[375,12471+71])
                                              Texp_apply
                                              expression (lib/set.ml[375,12471+59]..lib/set.ml[375,12471+65])
                                                Texp_ident "subset/642"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[375,12471+66]..lib/set.ml[375,12471+68])
                                                    Texp_ident "l1/645"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[375,12471+69]..lib/set.ml[375,12471+71])
                                                    Texp_ident "t2/651"
                                              ]
                                        ]
                        ]
              ]
            structure_item (lib/set.ml[377,12544+4]..lib/set.ml[379,12594+48])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[377,12544+12]..lib/set.ml[377,12544+16])
                    Tpat_var "iter/653"
                  expression (lib/set.ml[377,12544+17]..lib/set.ml[379,12594+48]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[377,12544+17]..lib/set.ml[377,12544+18])
                          Tpat_var "f/654"
                    ]
                    Tfunction_cases (lib/set.ml[377,12544+21]..lib/set.ml[379,12594+48])
                      [
                        <case>
                          pattern (lib/set.ml[378,12574+8]..lib/set.ml[378,12574+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[378,12574+17]..lib/set.ml[378,12574+19])
                            Texp_construct "()"
                            []
                        <case>
                          pattern (lib/set.ml[379,12594+8]..lib/set.ml[379,12594+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[379,12594+12]..lib/set.ml[379,12594+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[379,12594+13]..lib/set.ml[379,12594+14])
                                      Tpat_var "l/655"
                                  "v"
                                    pattern (lib/set.ml[379,12594+16]..lib/set.ml[379,12594+17])
                                      Tpat_var "v/656"
                                  "r"
                                    pattern (lib/set.ml[379,12594+19]..lib/set.ml[379,12594+20])
                                      Tpat_var "r/657"
                                ]
                            ]
                            None
                          expression (lib/set.ml[379,12594+25]..lib/set.ml[379,12594+48])
                            Texp_sequence
                            expression (lib/set.ml[379,12594+25]..lib/set.ml[379,12594+33])
                              Texp_apply
                              expression (lib/set.ml[379,12594+25]..lib/set.ml[379,12594+29])
                                Texp_ident "iter/653"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[379,12594+30]..lib/set.ml[379,12594+31])
                                    Texp_ident "f/654"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[379,12594+32]..lib/set.ml[379,12594+33])
                                    Texp_ident "l/655"
                              ]
                            expression (lib/set.ml[379,12594+35]..lib/set.ml[379,12594+48])
                              Texp_sequence
                              expression (lib/set.ml[379,12594+35]..lib/set.ml[379,12594+38])
                                Texp_apply
                                expression (lib/set.ml[379,12594+35]..lib/set.ml[379,12594+36])
                                  Texp_ident "f/654"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[379,12594+37]..lib/set.ml[379,12594+38])
                                      Texp_ident "v/656"
                                ]
                              expression (lib/set.ml[379,12594+40]..lib/set.ml[379,12594+48])
                                Texp_apply
                                expression (lib/set.ml[379,12594+40]..lib/set.ml[379,12594+44])
                                  Texp_ident "iter/653"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[379,12594+45]..lib/set.ml[379,12594+46])
                                      Texp_ident "f/654"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[379,12594+47]..lib/set.ml[379,12594+48])
                                      Texp_ident "r/657"
                                ]
                      ]
              ]
            structure_item (lib/set.ml[381,12644+4]..lib/set.ml[384,12713+55])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[381,12644+12]..lib/set.ml[381,12644+16])
                    Tpat_var "fold/659"
                  expression (lib/set.ml[381,12644+17]..lib/set.ml[384,12713+55]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[381,12644+17]..lib/set.ml[381,12644+18])
                          Tpat_var "f/660"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[381,12644+19]..lib/set.ml[381,12644+20])
                          Tpat_var "s/661"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[381,12644+21]..lib/set.ml[381,12644+25])
                          Tpat_var "accu/662"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[382,12672+6]..lib/set.ml[384,12713+55])
                        Texp_match
                        expression (lib/set.ml[382,12672+12]..lib/set.ml[382,12672+13])
                          Texp_ident "s/661"
                        [
                          <case>
                            pattern (lib/set.ml[383,12691+8]..lib/set.ml[383,12691+13])
                              Tpat_value
                              pattern (lib/set.ml[383,12691+8]..lib/set.ml[383,12691+13])
                                Tpat_construct "Empty"
                                []
                                None
                            expression (lib/set.ml[383,12691+17]..lib/set.ml[383,12691+21])
                              Texp_ident "accu/662"
                          <case>
                            pattern (lib/set.ml[384,12713+8]..lib/set.ml[384,12713+21])
                              Tpat_value
                              pattern (lib/set.ml[384,12713+8]..lib/set.ml[384,12713+21])
                                Tpat_construct "Node"
                                [
                                  pattern (lib/set.ml[384,12713+12]..lib/set.ml[384,12713+21])
                                    Tpat_record
                                    [
                                      "l"
                                        pattern (lib/set.ml[384,12713+13]..lib/set.ml[384,12713+14])
                                          Tpat_var "l/663"
                                      "v"
                                        pattern (lib/set.ml[384,12713+16]..lib/set.ml[384,12713+17])
                                          Tpat_var "v/664"
                                      "r"
                                        pattern (lib/set.ml[384,12713+19]..lib/set.ml[384,12713+20])
                                          Tpat_var "r/665"
                                    ]
                                ]
                                None
                            expression (lib/set.ml[384,12713+25]..lib/set.ml[384,12713+55])
                              Texp_apply
                              expression (lib/set.ml[384,12713+25]..lib/set.ml[384,12713+29])
                                Texp_ident "fold/659"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[384,12713+30]..lib/set.ml[384,12713+31])
                                    Texp_ident "f/660"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[384,12713+32]..lib/set.ml[384,12713+33])
                                    Texp_ident "r/665"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[384,12713+34]..lib/set.ml[384,12713+55])
                                    Texp_apply
                                    expression (lib/set.ml[384,12713+35]..lib/set.ml[384,12713+36])
                                      Texp_ident "f/660"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[384,12713+37]..lib/set.ml[384,12713+38])
                                          Texp_ident "v/664"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[384,12713+39]..lib/set.ml[384,12713+54])
                                          Texp_apply
                                          expression (lib/set.ml[384,12713+40]..lib/set.ml[384,12713+44])
                                            Texp_ident "fold/659"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[384,12713+45]..lib/set.ml[384,12713+46])
                                                Texp_ident "f/660"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[384,12713+47]..lib/set.ml[384,12713+48])
                                                Texp_ident "l/663"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[384,12713+49]..lib/set.ml[384,12713+53])
                                                Texp_ident "accu/662"
                                          ]
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[386,12770+4]..lib/set.ml[388,12825+58])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[386,12770+12]..lib/set.ml[386,12770+19])
                    Tpat_var "for_all/666"
                  expression (lib/set.ml[386,12770+20]..lib/set.ml[388,12825+58]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[386,12770+20]..lib/set.ml[386,12770+21])
                          Tpat_var "p/667"
                    ]
                    Tfunction_cases (lib/set.ml[386,12770+24]..lib/set.ml[388,12825+58])
                      [
                        <case>
                          pattern (lib/set.ml[387,12803+8]..lib/set.ml[387,12803+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[387,12803+17]..lib/set.ml[387,12803+21])
                            Texp_construct "true"
                            []
                        <case>
                          pattern (lib/set.ml[388,12825+8]..lib/set.ml[388,12825+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[388,12825+12]..lib/set.ml[388,12825+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[388,12825+13]..lib/set.ml[388,12825+14])
                                      Tpat_var "l/668"
                                  "v"
                                    pattern (lib/set.ml[388,12825+16]..lib/set.ml[388,12825+17])
                                      Tpat_var "v/669"
                                  "r"
                                    pattern (lib/set.ml[388,12825+19]..lib/set.ml[388,12825+20])
                                      Tpat_var "r/670"
                                ]
                            ]
                            None
                          expression (lib/set.ml[388,12825+25]..lib/set.ml[388,12825+58])
                            Texp_apply
                            expression (lib/set.ml[388,12825+29]..lib/set.ml[388,12825+31])
                              Texp_ident "Stdlib!.&&"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[388,12825+25]..lib/set.ml[388,12825+28])
                                  Texp_apply
                                  expression (lib/set.ml[388,12825+25]..lib/set.ml[388,12825+26])
                                    Texp_ident "p/667"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[388,12825+27]..lib/set.ml[388,12825+28])
                                        Texp_ident "v/669"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/set.ml[388,12825+32]..lib/set.ml[388,12825+58])
                                  Texp_apply
                                  expression (lib/set.ml[388,12825+44]..lib/set.ml[388,12825+46])
                                    Texp_ident "Stdlib!.&&"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[388,12825+32]..lib/set.ml[388,12825+43])
                                        Texp_apply
                                        expression (lib/set.ml[388,12825+32]..lib/set.ml[388,12825+39])
                                          Texp_ident "for_all/666"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[388,12825+40]..lib/set.ml[388,12825+41])
                                              Texp_ident "p/667"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[388,12825+42]..lib/set.ml[388,12825+43])
                                              Texp_ident "l/668"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[388,12825+47]..lib/set.ml[388,12825+58])
                                        Texp_apply
                                        expression (lib/set.ml[388,12825+47]..lib/set.ml[388,12825+54])
                                          Texp_ident "for_all/666"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[388,12825+55]..lib/set.ml[388,12825+56])
                                              Texp_ident "p/667"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[388,12825+57]..lib/set.ml[388,12825+58])
                                              Texp_ident "r/670"
                                        ]
                                  ]
                            ]
                      ]
              ]
            structure_item (lib/set.ml[390,12885+4]..lib/set.ml[392,12940+56])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[390,12885+12]..lib/set.ml[390,12885+18])
                    Tpat_var "exists/672"
                  expression (lib/set.ml[390,12885+19]..lib/set.ml[392,12940+56]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[390,12885+19]..lib/set.ml[390,12885+20])
                          Tpat_var "p/673"
                    ]
                    Tfunction_cases (lib/set.ml[390,12885+23]..lib/set.ml[392,12940+56])
                      [
                        <case>
                          pattern (lib/set.ml[391,12917+8]..lib/set.ml[391,12917+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[391,12917+17]..lib/set.ml[391,12917+22])
                            Texp_construct "false"
                            []
                        <case>
                          pattern (lib/set.ml[392,12940+8]..lib/set.ml[392,12940+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[392,12940+12]..lib/set.ml[392,12940+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[392,12940+13]..lib/set.ml[392,12940+14])
                                      Tpat_var "l/674"
                                  "v"
                                    pattern (lib/set.ml[392,12940+16]..lib/set.ml[392,12940+17])
                                      Tpat_var "v/675"
                                  "r"
                                    pattern (lib/set.ml[392,12940+19]..lib/set.ml[392,12940+20])
                                      Tpat_var "r/676"
                                ]
                            ]
                            None
                          expression (lib/set.ml[392,12940+25]..lib/set.ml[392,12940+56])
                            Texp_apply
                            expression (lib/set.ml[392,12940+29]..lib/set.ml[392,12940+31])
                              Texp_ident "Stdlib!.||"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[392,12940+25]..lib/set.ml[392,12940+28])
                                  Texp_apply
                                  expression (lib/set.ml[392,12940+25]..lib/set.ml[392,12940+26])
                                    Texp_ident "p/673"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[392,12940+27]..lib/set.ml[392,12940+28])
                                        Texp_ident "v/675"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/set.ml[392,12940+32]..lib/set.ml[392,12940+56])
                                  Texp_apply
                                  expression (lib/set.ml[392,12940+43]..lib/set.ml[392,12940+45])
                                    Texp_ident "Stdlib!.||"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[392,12940+32]..lib/set.ml[392,12940+42])
                                        Texp_apply
                                        expression (lib/set.ml[392,12940+32]..lib/set.ml[392,12940+38])
                                          Texp_ident "exists/672"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[392,12940+39]..lib/set.ml[392,12940+40])
                                              Texp_ident "p/673"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[392,12940+41]..lib/set.ml[392,12940+42])
                                              Texp_ident "l/674"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[392,12940+46]..lib/set.ml[392,12940+56])
                                        Texp_apply
                                        expression (lib/set.ml[392,12940+46]..lib/set.ml[392,12940+52])
                                          Texp_ident "exists/672"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[392,12940+53]..lib/set.ml[392,12940+54])
                                              Texp_ident "p/673"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[392,12940+55]..lib/set.ml[392,12940+56])
                                              Texp_ident "r/676"
                                        ]
                                  ]
                            ]
                      ]
              ]
            structure_item (lib/set.ml[394,12998+4]..lib/set.ml[403,13314+27])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[394,12998+12]..lib/set.ml[394,12998+18])
                    Tpat_var "filter/678"
                  expression (lib/set.ml[394,12998+19]..lib/set.ml[403,13314+27]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[394,12998+19]..lib/set.ml[394,12998+20])
                          Tpat_var "p/679"
                    ]
                    Tfunction_cases (lib/set.ml[394,12998+23]..lib/set.ml[403,13314+27])
                      [
                        <case>
                          pattern (lib/set.ml[395,13030+8]..lib/set.ml[395,13030+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[395,13030+17]..lib/set.ml[395,13030+22])
                            Texp_construct "Empty"
                            []
                        <case>
                          pattern (lib/set.ml[396,13053+8]..lib/set.ml[396,13053+28])
                            Tpat_alias "t/683"
                            pattern (lib/set.ml[396,13053+8]..lib/set.ml[396,13053+23])
                              Tpat_construct "Node"
                              [
                                pattern (lib/set.ml[396,13053+13]..lib/set.ml[396,13053+22])
                                  Tpat_record
                                  [
                                    "l"
                                      pattern (lib/set.ml[396,13053+14]..lib/set.ml[396,13053+15])
                                        Tpat_var "l/680"
                                    "v"
                                      pattern (lib/set.ml[396,13053+17]..lib/set.ml[396,13053+18])
                                        Tpat_var "v/681"
                                    "r"
                                      pattern (lib/set.ml[396,13053+20]..lib/set.ml[396,13053+21])
                                        Tpat_var "r/682"
                                  ]
                              ]
                              None
                          expression (lib/set.ml[398,13146+10]..lib/set.ml[403,13314+27])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[398,13146+14]..lib/set.ml[398,13146+16])
                                  Tpat_var "l'/684"
                                expression (lib/set.ml[398,13146+19]..lib/set.ml[398,13146+29])
                                  Texp_apply
                                  expression (lib/set.ml[398,13146+19]..lib/set.ml[398,13146+25])
                                    Texp_ident "filter/678"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[398,13146+26]..lib/set.ml[398,13146+27])
                                        Texp_ident "p/679"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[398,13146+28]..lib/set.ml[398,13146+29])
                                        Texp_ident "l/680"
                                  ]
                            ]
                            expression (lib/set.ml[399,13179+10]..lib/set.ml[403,13314+27])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/set.ml[399,13179+14]..lib/set.ml[399,13179+16])
                                    Tpat_var "pv/685"
                                  expression (lib/set.ml[399,13179+19]..lib/set.ml[399,13179+22])
                                    Texp_apply
                                    expression (lib/set.ml[399,13179+19]..lib/set.ml[399,13179+20])
                                      Texp_ident "p/679"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[399,13179+21]..lib/set.ml[399,13179+22])
                                          Texp_ident "v/681"
                                    ]
                              ]
                              expression (lib/set.ml[400,13205+10]..lib/set.ml[403,13314+27])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/set.ml[400,13205+14]..lib/set.ml[400,13205+16])
                                      Tpat_var "r'/686"
                                    expression (lib/set.ml[400,13205+19]..lib/set.ml[400,13205+29])
                                      Texp_apply
                                      expression (lib/set.ml[400,13205+19]..lib/set.ml[400,13205+25])
                                        Texp_ident "filter/678"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[400,13205+26]..lib/set.ml[400,13205+27])
                                            Texp_ident "p/679"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[400,13205+28]..lib/set.ml[400,13205+29])
                                            Texp_ident "r/682"
                                      ]
                                ]
                                expression (lib/set.ml[401,13238+10]..lib/set.ml[403,13314+27])
                                  Texp_ifthenelse
                                  expression (lib/set.ml[401,13238+13]..lib/set.ml[401,13238+15])
                                    Texp_ident "pv/685"
                                  expression (lib/set.ml[402,13259+12]..lib/set.ml[402,13259+54])
                                    Texp_ifthenelse
                                    expression (lib/set.ml[402,13259+15]..lib/set.ml[402,13259+29])
                                      Texp_apply
                                      expression (lib/set.ml[402,13259+21]..lib/set.ml[402,13259+23])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[402,13259+15]..lib/set.ml[402,13259+20])
                                            Texp_apply
                                            expression (lib/set.ml[402,13259+16]..lib/set.ml[402,13259+18])
                                              Texp_ident "Stdlib!.=="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[402,13259+15]..lib/set.ml[402,13259+16])
                                                  Texp_ident "l/680"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[402,13259+18]..lib/set.ml[402,13259+20])
                                                  Texp_ident "l'/684"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[402,13259+24]..lib/set.ml[402,13259+29])
                                            Texp_apply
                                            expression (lib/set.ml[402,13259+25]..lib/set.ml[402,13259+27])
                                              Texp_ident "Stdlib!.=="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[402,13259+24]..lib/set.ml[402,13259+25])
                                                  Texp_ident "r/682"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[402,13259+27]..lib/set.ml[402,13259+29])
                                                  Texp_ident "r'/686"
                                            ]
                                      ]
                                    expression (lib/set.ml[402,13259+35]..lib/set.ml[402,13259+36])
                                      Texp_ident "t/683"
                                    Some
                                      expression (lib/set.ml[402,13259+42]..lib/set.ml[402,13259+54])
                                        Texp_apply
                                        expression (lib/set.ml[402,13259+42]..lib/set.ml[402,13259+46])
                                          Texp_ident "join/472"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[402,13259+47]..lib/set.ml[402,13259+49])
                                              Texp_ident "l'/684"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[402,13259+50]..lib/set.ml[402,13259+51])
                                              Texp_ident "v/681"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[402,13259+52]..lib/set.ml[402,13259+54])
                                              Texp_ident "r'/686"
                                        ]
                                  Some
                                    expression (lib/set.ml[403,13314+15]..lib/set.ml[403,13314+27])
                                      Texp_apply
                                      expression (lib/set.ml[403,13314+15]..lib/set.ml[403,13314+21])
                                        Texp_ident "concat/512"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[403,13314+22]..lib/set.ml[403,13314+24])
                                            Texp_ident "l'/684"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[403,13314+25]..lib/set.ml[403,13314+27])
                                            Texp_ident "r'/686"
                                      ]
                      ]
              ]
            structure_item (lib/set.ml[405,13343+4]..lib/set.ml[414,13666+43])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[405,13343+12]..lib/set.ml[405,13343+21])
                    Tpat_var "partition/687"
                  expression (lib/set.ml[405,13343+22]..lib/set.ml[414,13666+43]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[405,13343+22]..lib/set.ml[405,13343+23])
                          Tpat_var "p/688"
                    ]
                    Tfunction_cases (lib/set.ml[405,13343+26]..lib/set.ml[414,13666+43])
                      [
                        <case>
                          pattern (lib/set.ml[406,13378+8]..lib/set.ml[406,13378+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[406,13378+17]..lib/set.ml[406,13378+31])
                            Texp_tuple
                            [
                              expression (lib/set.ml[406,13378+18]..lib/set.ml[406,13378+23])
                                Texp_construct "Empty"
                                []
                              expression (lib/set.ml[406,13378+25]..lib/set.ml[406,13378+30])
                                Texp_construct "Empty"
                                []
                            ]
                        <case>
                          pattern (lib/set.ml[407,13410+8]..lib/set.ml[407,13410+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[407,13410+12]..lib/set.ml[407,13410+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[407,13410+13]..lib/set.ml[407,13410+14])
                                      Tpat_var "l/689"
                                  "v"
                                    pattern (lib/set.ml[407,13410+16]..lib/set.ml[407,13410+17])
                                      Tpat_var "v/690"
                                  "r"
                                    pattern (lib/set.ml[407,13410+19]..lib/set.ml[407,13410+20])
                                      Tpat_var "r/691"
                                ]
                            ]
                            None
                          expression (lib/set.ml[409,13496+10]..lib/set.ml[414,13666+43])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[409,13496+14]..lib/set.ml[409,13496+22])
                                  Tpat_tuple
                                  [
                                    pattern (lib/set.ml[409,13496+15]..lib/set.ml[409,13496+17])
                                      Tpat_var "lt/692"
                                    pattern (lib/set.ml[409,13496+19]..lib/set.ml[409,13496+21])
                                      Tpat_var "lf/693"
                                  ]
                                expression (lib/set.ml[409,13496+25]..lib/set.ml[409,13496+38])
                                  Texp_apply
                                  expression (lib/set.ml[409,13496+25]..lib/set.ml[409,13496+34])
                                    Texp_ident "partition/687"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[409,13496+35]..lib/set.ml[409,13496+36])
                                        Texp_ident "p/688"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[409,13496+37]..lib/set.ml[409,13496+38])
                                        Texp_ident "l/689"
                                  ]
                            ]
                            expression (lib/set.ml[410,13538+10]..lib/set.ml[414,13666+43])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/set.ml[410,13538+14]..lib/set.ml[410,13538+16])
                                    Tpat_var "pv/694"
                                  expression (lib/set.ml[410,13538+19]..lib/set.ml[410,13538+22])
                                    Texp_apply
                                    expression (lib/set.ml[410,13538+19]..lib/set.ml[410,13538+20])
                                      Texp_ident "p/688"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[410,13538+21]..lib/set.ml[410,13538+22])
                                          Texp_ident "v/690"
                                    ]
                              ]
                              expression (lib/set.ml[411,13564+10]..lib/set.ml[414,13666+43])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/set.ml[411,13564+14]..lib/set.ml[411,13564+22])
                                      Tpat_tuple
                                      [
                                        pattern (lib/set.ml[411,13564+15]..lib/set.ml[411,13564+17])
                                          Tpat_var "rt/695"
                                        pattern (lib/set.ml[411,13564+19]..lib/set.ml[411,13564+21])
                                          Tpat_var "rf/696"
                                      ]
                                    expression (lib/set.ml[411,13564+25]..lib/set.ml[411,13564+38])
                                      Texp_apply
                                      expression (lib/set.ml[411,13564+25]..lib/set.ml[411,13564+34])
                                        Texp_ident "partition/687"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[411,13564+35]..lib/set.ml[411,13564+36])
                                            Texp_ident "p/688"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[411,13564+37]..lib/set.ml[411,13564+38])
                                            Texp_ident "r/691"
                                      ]
                                ]
                                expression (lib/set.ml[412,13606+10]..lib/set.ml[414,13666+43])
                                  Texp_ifthenelse
                                  expression (lib/set.ml[412,13606+13]..lib/set.ml[412,13606+15])
                                    Texp_ident "pv/694"
                                  expression (lib/set.ml[413,13622+15]..lib/set.ml[413,13622+43])
                                    Texp_tuple
                                    [
                                      expression (lib/set.ml[413,13622+16]..lib/set.ml[413,13622+28])
                                        Texp_apply
                                        expression (lib/set.ml[413,13622+16]..lib/set.ml[413,13622+20])
                                          Texp_ident "join/472"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[413,13622+21]..lib/set.ml[413,13622+23])
                                              Texp_ident "lt/692"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[413,13622+24]..lib/set.ml[413,13622+25])
                                              Texp_ident "v/690"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[413,13622+26]..lib/set.ml[413,13622+28])
                                              Texp_ident "rt/695"
                                        ]
                                      expression (lib/set.ml[413,13622+30]..lib/set.ml[413,13622+42])
                                        Texp_apply
                                        expression (lib/set.ml[413,13622+30]..lib/set.ml[413,13622+36])
                                          Texp_ident "concat/512"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[413,13622+37]..lib/set.ml[413,13622+39])
                                              Texp_ident "lf/693"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[413,13622+40]..lib/set.ml[413,13622+42])
                                              Texp_ident "rf/696"
                                        ]
                                    ]
                                  Some
                                    expression (lib/set.ml[414,13666+15]..lib/set.ml[414,13666+43])
                                      Texp_tuple
                                      [
                                        expression (lib/set.ml[414,13666+16]..lib/set.ml[414,13666+28])
                                          Texp_apply
                                          expression (lib/set.ml[414,13666+16]..lib/set.ml[414,13666+22])
                                            Texp_ident "concat/512"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[414,13666+23]..lib/set.ml[414,13666+25])
                                                Texp_ident "lt/692"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[414,13666+26]..lib/set.ml[414,13666+28])
                                                Texp_ident "rt/695"
                                          ]
                                        expression (lib/set.ml[414,13666+30]..lib/set.ml[414,13666+42])
                                          Texp_apply
                                          expression (lib/set.ml[414,13666+30]..lib/set.ml[414,13666+34])
                                            Texp_ident "join/472"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[414,13666+35]..lib/set.ml[414,13666+37])
                                                Texp_ident "lf/693"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[414,13666+38]..lib/set.ml[414,13666+39])
                                                Texp_ident "v/690"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[414,13666+40]..lib/set.ml[414,13666+42])
                                                Texp_ident "rf/696"
                                          ]
                                      ]
                      ]
              ]
            structure_item (lib/set.ml[416,13711+4]..lib/set.ml[418,13762+49])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[416,13711+12]..lib/set.ml[416,13711+20])
                    Tpat_var "cardinal/698"
                  expression (lib/set.ml[416,13711+23]..lib/set.ml[418,13762+49])
                    Texp_function
                    []
                    Tfunction_cases (lib/set.ml[416,13711+23]..lib/set.ml[418,13762+49])
                      [
                        <case>
                          pattern (lib/set.ml[417,13743+8]..lib/set.ml[417,13743+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[417,13743+17]..lib/set.ml[417,13743+18])
                            Texp_constant Const_int 0
                        <case>
                          pattern (lib/set.ml[418,13762+8]..lib/set.ml[418,13762+18])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[418,13762+12]..lib/set.ml[418,13762+18])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[418,13762+13]..lib/set.ml[418,13762+14])
                                      Tpat_var "l/699"
                                  "r"
                                    pattern (lib/set.ml[418,13762+16]..lib/set.ml[418,13762+17])
                                      Tpat_var "r/700"
                                ]
                            ]
                            None
                          expression (lib/set.ml[418,13762+22]..lib/set.ml[418,13762+49])
                            Texp_apply
                            expression (lib/set.ml[418,13762+37]..lib/set.ml[418,13762+38])
                              Texp_ident "Stdlib!.+"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[418,13762+22]..lib/set.ml[418,13762+36])
                                  Texp_apply
                                  expression (lib/set.ml[418,13762+33]..lib/set.ml[418,13762+34])
                                    Texp_ident "Stdlib!.+"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[418,13762+22]..lib/set.ml[418,13762+32])
                                        Texp_apply
                                        expression (lib/set.ml[418,13762+22]..lib/set.ml[418,13762+30])
                                          Texp_ident "cardinal/698"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[418,13762+31]..lib/set.ml[418,13762+32])
                                              Texp_ident "l/699"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[418,13762+35]..lib/set.ml[418,13762+36])
                                        Texp_constant Const_int 1
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/set.ml[418,13762+39]..lib/set.ml[418,13762+49])
                                  Texp_apply
                                  expression (lib/set.ml[418,13762+39]..lib/set.ml[418,13762+47])
                                    Texp_ident "cardinal/698"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[418,13762+48]..lib/set.ml[418,13762+49])
                                        Texp_ident "r/700"
                                  ]
                            ]
                      ]
              ]
            structure_item (lib/set.ml[420,13813+4]..lib/set.ml[422,13876+66])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[420,13813+12]..lib/set.ml[420,13813+24])
                    Tpat_var "elements_aux/702"
                  expression (lib/set.ml[420,13813+25]..lib/set.ml[422,13876+66]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[420,13813+25]..lib/set.ml[420,13813+29])
                          Tpat_var "accu/703"
                    ]
                    Tfunction_cases (lib/set.ml[420,13813+32]..lib/set.ml[422,13876+66])
                      [
                        <case>
                          pattern (lib/set.ml[421,13854+8]..lib/set.ml[421,13854+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[421,13854+17]..lib/set.ml[421,13854+21])
                            Texp_ident "accu/703"
                        <case>
                          pattern (lib/set.ml[422,13876+8]..lib/set.ml[422,13876+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[422,13876+12]..lib/set.ml[422,13876+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[422,13876+13]..lib/set.ml[422,13876+14])
                                      Tpat_var "l/704"
                                  "v"
                                    pattern (lib/set.ml[422,13876+16]..lib/set.ml[422,13876+17])
                                      Tpat_var "v/705"
                                  "r"
                                    pattern (lib/set.ml[422,13876+19]..lib/set.ml[422,13876+20])
                                      Tpat_var "r/706"
                                ]
                            ]
                            None
                          expression (lib/set.ml[422,13876+25]..lib/set.ml[422,13876+66])
                            Texp_apply
                            expression (lib/set.ml[422,13876+25]..lib/set.ml[422,13876+37])
                              Texp_ident "elements_aux/702"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[422,13876+38]..lib/set.ml[422,13876+64])
                                  Texp_construct "::"
                                  [
                                    expression (lib/set.ml[422,13876+39]..lib/set.ml[422,13876+40])
                                      Texp_ident "v/705"
                                    expression (lib/set.ml[422,13876+44]..lib/set.ml[422,13876+63])
                                      Texp_apply
                                      expression (lib/set.ml[422,13876+44]..lib/set.ml[422,13876+56])
                                        Texp_ident "elements_aux/702"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[422,13876+57]..lib/set.ml[422,13876+61])
                                            Texp_ident "accu/703"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[422,13876+62]..lib/set.ml[422,13876+63])
                                            Texp_ident "r/706"
                                      ]
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/set.ml[422,13876+65]..lib/set.ml[422,13876+66])
                                  Texp_ident "l/704"
                            ]
                      ]
              ]
            structure_item (lib/set.ml[424,13944+4]..lib/set.ml[425,13965+23])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[424,13944+8]..lib/set.ml[424,13944+16])
                    Tpat_var "elements/708"
                  expression (lib/set.ml[424,13944+17]..lib/set.ml[425,13965+23]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[424,13944+17]..lib/set.ml[424,13944+18])
                          Tpat_var "s/710"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[425,13965+6]..lib/set.ml[425,13965+23])
                        Texp_apply
                        expression (lib/set.ml[425,13965+6]..lib/set.ml[425,13965+18])
                          Texp_ident "elements_aux/702"
                        [
                          <arg>
                            Nolabel
                            expression (lib/set.ml[425,13965+19]..lib/set.ml[425,13965+21])
                              Texp_construct "[]"
                              []
                          <arg>
                            Nolabel
                            expression (lib/set.ml[425,13965+22]..lib/set.ml[425,13965+23])
                              Texp_ident "s/710"
                        ]
              ]
            structure_item (lib/set.ml[427,13990+4]..lib/set.ml[427,13990+24])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[427,13990+8]..lib/set.ml[427,13990+14])
                    Tpat_var "choose/711"
                  expression (lib/set.ml[427,13990+17]..lib/set.ml[427,13990+24])
                    Texp_ident "min_elt/484"
              ]
            structure_item (lib/set.ml[429,14016+4]..lib/set.ml[429,14016+32])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[429,14016+8]..lib/set.ml[429,14016+18])
                    Tpat_var "choose_opt/712"
                  expression (lib/set.ml[429,14016+21]..lib/set.ml[429,14016+32])
                    Texp_ident "min_elt_opt/488"
              ]
            structure_item (lib/set.ml[431,14050+4]..lib/set.ml[436,14201+46])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[431,14050+12]..lib/set.ml[431,14050+16])
                    Tpat_var "find/713"
                  expression (lib/set.ml[431,14050+17]..lib/set.ml[436,14201+46]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[431,14050+17]..lib/set.ml[431,14050+18])
                          Tpat_var "x/714"
                    ]
                    Tfunction_cases (lib/set.ml[431,14050+21]..lib/set.ml[436,14201+46])
                      [
                        <case>
                          pattern (lib/set.ml[432,14080+8]..lib/set.ml[432,14080+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[432,14080+17]..lib/set.ml[432,14080+32])
                            Texp_apply
                            expression (lib/set.ml[432,14080+17]..lib/set.ml[432,14080+22])
                              Texp_ident "Stdlib!.raise"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[432,14080+23]..lib/set.ml[432,14080+32])
                                  Texp_construct "Not_found"
                                  []
                            ]
                        <case>
                          pattern (lib/set.ml[433,14113+8]..lib/set.ml[433,14113+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[433,14113+12]..lib/set.ml[433,14113+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[433,14113+13]..lib/set.ml[433,14113+14])
                                      Tpat_var "l/715"
                                  "v"
                                    pattern (lib/set.ml[433,14113+16]..lib/set.ml[433,14113+17])
                                      Tpat_var "v/716"
                                  "r"
                                    pattern (lib/set.ml[433,14113+19]..lib/set.ml[433,14113+20])
                                      Tpat_var "r/717"
                                ]
                            ]
                            None
                          expression (lib/set.ml[434,14138+10]..lib/set.ml[436,14201+46])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[434,14138+14]..lib/set.ml[434,14138+15])
                                  Tpat_var "c/718"
                                expression (lib/set.ml[434,14138+18]..lib/set.ml[434,14138+33])
                                  Texp_apply
                                  expression (lib/set.ml[434,14138+18]..lib/set.ml[434,14138+29])
                                    Texp_ident "Ord/405.compare"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[434,14138+30]..lib/set.ml[434,14138+31])
                                        Texp_ident "x/714"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[434,14138+32]..lib/set.ml[434,14138+33])
                                        Texp_ident "v/716"
                                  ]
                            ]
                            expression (lib/set.ml[435,14175+10]..lib/set.ml[436,14201+46])
                              Texp_ifthenelse
                              expression (lib/set.ml[435,14175+13]..lib/set.ml[435,14175+18])
                                Texp_apply
                                expression (lib/set.ml[435,14175+15]..lib/set.ml[435,14175+16])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[435,14175+13]..lib/set.ml[435,14175+14])
                                      Texp_ident "c/718"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[435,14175+17]..lib/set.ml[435,14175+18])
                                      Texp_constant Const_int 0
                                ]
                              expression (lib/set.ml[435,14175+24]..lib/set.ml[435,14175+25])
                                Texp_ident "v/716"
                              Some
                                expression (lib/set.ml[436,14201+15]..lib/set.ml[436,14201+46])
                                  Texp_apply
                                  expression (lib/set.ml[436,14201+15]..lib/set.ml[436,14201+19])
                                    Texp_ident "find/713"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[436,14201+20]..lib/set.ml[436,14201+21])
                                        Texp_ident "x/714"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[436,14201+22]..lib/set.ml[436,14201+46])
                                        Texp_ifthenelse
                                        expression (lib/set.ml[436,14201+26]..lib/set.ml[436,14201+31])
                                          Texp_apply
                                          expression (lib/set.ml[436,14201+28]..lib/set.ml[436,14201+29])
                                            Texp_ident "Stdlib!.<"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[436,14201+26]..lib/set.ml[436,14201+27])
                                                Texp_ident "c/718"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[436,14201+30]..lib/set.ml[436,14201+31])
                                                Texp_constant Const_int 0
                                          ]
                                        expression (lib/set.ml[436,14201+37]..lib/set.ml[436,14201+38])
                                          Texp_ident "l/715"
                                        Some
                                          expression (lib/set.ml[436,14201+44]..lib/set.ml[436,14201+45])
                                            Texp_ident "r/717"
                                  ]
                      ]
              ]
            structure_item (lib/set.ml[438,14249+4]..lib/set.ml[445,14417+33])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[438,14249+12]..lib/set.ml[438,14249+26])
                    Tpat_var "find_first_aux/720"
                  expression (lib/set.ml[438,14249+27]..lib/set.ml[445,14417+33]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[438,14249+27]..lib/set.ml[438,14249+29])
                          Tpat_var "v0/721"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[438,14249+30]..lib/set.ml[438,14249+31])
                          Tpat_var "f/722"
                    ]
                    Tfunction_cases (lib/set.ml[438,14249+34]..lib/set.ml[445,14417+33])
                      [
                        <case>
                          pattern (lib/set.ml[439,14292+8]..lib/set.ml[439,14292+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[440,14309+10]..lib/set.ml[440,14309+12])
                            Texp_ident "v0/721"
                        <case>
                          pattern (lib/set.ml[441,14322+8]..lib/set.ml[441,14322+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[441,14322+12]..lib/set.ml[441,14322+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[441,14322+13]..lib/set.ml[441,14322+14])
                                      Tpat_var "l/723"
                                  "v"
                                    pattern (lib/set.ml[441,14322+16]..lib/set.ml[441,14322+17])
                                      Tpat_var "v/724"
                                  "r"
                                    pattern (lib/set.ml[441,14322+19]..lib/set.ml[441,14322+20])
                                      Tpat_var "r/725"
                                ]
                            ]
                            None
                          expression (lib/set.ml[442,14347+10]..lib/set.ml[445,14417+33])
                            Texp_ifthenelse
                            expression (lib/set.ml[442,14347+13]..lib/set.ml[442,14347+16])
                              Texp_apply
                              expression (lib/set.ml[442,14347+13]..lib/set.ml[442,14347+14])
                                Texp_ident "f/722"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[442,14347+15]..lib/set.ml[442,14347+16])
                                    Texp_ident "v/724"
                              ]
                            expression (lib/set.ml[443,14369+12]..lib/set.ml[443,14369+32])
                              Texp_apply
                              expression (lib/set.ml[443,14369+12]..lib/set.ml[443,14369+26])
                                Texp_ident "find_first_aux/720"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[443,14369+27]..lib/set.ml[443,14369+28])
                                    Texp_ident "v/724"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[443,14369+29]..lib/set.ml[443,14369+30])
                                    Texp_ident "f/722"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[443,14369+31]..lib/set.ml[443,14369+32])
                                    Texp_ident "l/723"
                              ]
                            Some
                              expression (lib/set.ml[445,14417+12]..lib/set.ml[445,14417+33])
                                Texp_apply
                                expression (lib/set.ml[445,14417+12]..lib/set.ml[445,14417+26])
                                  Texp_ident "find_first_aux/720"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[445,14417+27]..lib/set.ml[445,14417+29])
                                      Texp_ident "v0/721"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[445,14417+30]..lib/set.ml[445,14417+31])
                                      Texp_ident "f/722"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[445,14417+32]..lib/set.ml[445,14417+33])
                                      Texp_ident "r/725"
                                ]
                      ]
              ]
            structure_item (lib/set.ml[447,14452+4]..lib/set.ml[454,14626+26])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[447,14452+12]..lib/set.ml[447,14452+22])
                    Tpat_var "find_first/727"
                  expression (lib/set.ml[447,14452+23]..lib/set.ml[454,14626+26]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[447,14452+23]..lib/set.ml[447,14452+24])
                          Tpat_var "f/728"
                    ]
                    Tfunction_cases (lib/set.ml[447,14452+27]..lib/set.ml[454,14626+26])
                      [
                        <case>
                          pattern (lib/set.ml[448,14488+8]..lib/set.ml[448,14488+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[449,14505+10]..lib/set.ml[449,14505+25])
                            Texp_apply
                            expression (lib/set.ml[449,14505+10]..lib/set.ml[449,14505+15])
                              Texp_ident "Stdlib!.raise"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[449,14505+16]..lib/set.ml[449,14505+25])
                                  Texp_construct "Not_found"
                                  []
                            ]
                        <case>
                          pattern (lib/set.ml[450,14531+8]..lib/set.ml[450,14531+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[450,14531+12]..lib/set.ml[450,14531+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[450,14531+13]..lib/set.ml[450,14531+14])
                                      Tpat_var "l/729"
                                  "v"
                                    pattern (lib/set.ml[450,14531+16]..lib/set.ml[450,14531+17])
                                      Tpat_var "v/730"
                                  "r"
                                    pattern (lib/set.ml[450,14531+19]..lib/set.ml[450,14531+20])
                                      Tpat_var "r/731"
                                ]
                            ]
                            None
                          expression (lib/set.ml[451,14556+10]..lib/set.ml[454,14626+26])
                            Texp_ifthenelse
                            expression (lib/set.ml[451,14556+13]..lib/set.ml[451,14556+16])
                              Texp_apply
                              expression (lib/set.ml[451,14556+13]..lib/set.ml[451,14556+14])
                                Texp_ident "f/728"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[451,14556+15]..lib/set.ml[451,14556+16])
                                    Texp_ident "v/730"
                              ]
                            expression (lib/set.ml[452,14578+12]..lib/set.ml[452,14578+32])
                              Texp_apply
                              expression (lib/set.ml[452,14578+12]..lib/set.ml[452,14578+26])
                                Texp_ident "find_first_aux/720"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[452,14578+27]..lib/set.ml[452,14578+28])
                                    Texp_ident "v/730"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[452,14578+29]..lib/set.ml[452,14578+30])
                                    Texp_ident "f/728"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[452,14578+31]..lib/set.ml[452,14578+32])
                                    Texp_ident "l/729"
                              ]
                            Some
                              expression (lib/set.ml[454,14626+12]..lib/set.ml[454,14626+26])
                                Texp_apply
                                expression (lib/set.ml[454,14626+12]..lib/set.ml[454,14626+22])
                                  Texp_ident "find_first/727"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[454,14626+23]..lib/set.ml[454,14626+24])
                                      Texp_ident "f/728"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[454,14626+25]..lib/set.ml[454,14626+26])
                                      Texp_ident "r/731"
                                ]
                      ]
              ]
            structure_item (lib/set.ml[456,14654+4]..lib/set.ml[463,14835+37])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[456,14654+12]..lib/set.ml[456,14654+30])
                    Tpat_var "find_first_opt_aux/733"
                  expression (lib/set.ml[456,14654+31]..lib/set.ml[463,14835+37]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[456,14654+31]..lib/set.ml[456,14654+33])
                          Tpat_var "v0/734"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[456,14654+34]..lib/set.ml[456,14654+35])
                          Tpat_var "f/735"
                    ]
                    Tfunction_cases (lib/set.ml[456,14654+38]..lib/set.ml[463,14835+37])
                      [
                        <case>
                          pattern (lib/set.ml[457,14701+8]..lib/set.ml[457,14701+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[458,14718+10]..lib/set.ml[458,14718+17])
                            Texp_construct "Some"
                            [
                              expression (lib/set.ml[458,14718+15]..lib/set.ml[458,14718+17])
                                Texp_ident "v0/734"
                            ]
                        <case>
                          pattern (lib/set.ml[459,14736+8]..lib/set.ml[459,14736+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[459,14736+12]..lib/set.ml[459,14736+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[459,14736+13]..lib/set.ml[459,14736+14])
                                      Tpat_var "l/736"
                                  "v"
                                    pattern (lib/set.ml[459,14736+16]..lib/set.ml[459,14736+17])
                                      Tpat_var "v/737"
                                  "r"
                                    pattern (lib/set.ml[459,14736+19]..lib/set.ml[459,14736+20])
                                      Tpat_var "r/738"
                                ]
                            ]
                            None
                          expression (lib/set.ml[460,14761+10]..lib/set.ml[463,14835+37])
                            Texp_ifthenelse
                            expression (lib/set.ml[460,14761+13]..lib/set.ml[460,14761+16])
                              Texp_apply
                              expression (lib/set.ml[460,14761+13]..lib/set.ml[460,14761+14])
                                Texp_ident "f/735"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[460,14761+15]..lib/set.ml[460,14761+16])
                                    Texp_ident "v/737"
                              ]
                            expression (lib/set.ml[461,14783+12]..lib/set.ml[461,14783+36])
                              Texp_apply
                              expression (lib/set.ml[461,14783+12]..lib/set.ml[461,14783+30])
                                Texp_ident "find_first_opt_aux/733"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[461,14783+31]..lib/set.ml[461,14783+32])
                                    Texp_ident "v/737"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[461,14783+33]..lib/set.ml[461,14783+34])
                                    Texp_ident "f/735"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[461,14783+35]..lib/set.ml[461,14783+36])
                                    Texp_ident "l/736"
                              ]
                            Some
                              expression (lib/set.ml[463,14835+12]..lib/set.ml[463,14835+37])
                                Texp_apply
                                expression (lib/set.ml[463,14835+12]..lib/set.ml[463,14835+30])
                                  Texp_ident "find_first_opt_aux/733"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[463,14835+31]..lib/set.ml[463,14835+33])
                                      Texp_ident "v0/734"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[463,14835+34]..lib/set.ml[463,14835+35])
                                      Texp_ident "f/735"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[463,14835+36]..lib/set.ml[463,14835+37])
                                      Texp_ident "r/738"
                                ]
                      ]
              ]
            structure_item (lib/set.ml[465,14874+4]..lib/set.ml[472,15045+30])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[465,14874+12]..lib/set.ml[465,14874+26])
                    Tpat_var "find_first_opt/740"
                  expression (lib/set.ml[465,14874+27]..lib/set.ml[472,15045+30]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[465,14874+27]..lib/set.ml[465,14874+28])
                          Tpat_var "f/741"
                    ]
                    Tfunction_cases (lib/set.ml[465,14874+31]..lib/set.ml[472,15045+30])
                      [
                        <case>
                          pattern (lib/set.ml[466,14914+8]..lib/set.ml[466,14914+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[467,14931+10]..lib/set.ml[467,14931+14])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (lib/set.ml[468,14946+8]..lib/set.ml[468,14946+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[468,14946+12]..lib/set.ml[468,14946+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[468,14946+13]..lib/set.ml[468,14946+14])
                                      Tpat_var "l/742"
                                  "v"
                                    pattern (lib/set.ml[468,14946+16]..lib/set.ml[468,14946+17])
                                      Tpat_var "v/743"
                                  "r"
                                    pattern (lib/set.ml[468,14946+19]..lib/set.ml[468,14946+20])
                                      Tpat_var "r/744"
                                ]
                            ]
                            None
                          expression (lib/set.ml[469,14971+10]..lib/set.ml[472,15045+30])
                            Texp_ifthenelse
                            expression (lib/set.ml[469,14971+13]..lib/set.ml[469,14971+16])
                              Texp_apply
                              expression (lib/set.ml[469,14971+13]..lib/set.ml[469,14971+14])
                                Texp_ident "f/741"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[469,14971+15]..lib/set.ml[469,14971+16])
                                    Texp_ident "v/743"
                              ]
                            expression (lib/set.ml[470,14993+12]..lib/set.ml[470,14993+36])
                              Texp_apply
                              expression (lib/set.ml[470,14993+12]..lib/set.ml[470,14993+30])
                                Texp_ident "find_first_opt_aux/733"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[470,14993+31]..lib/set.ml[470,14993+32])
                                    Texp_ident "v/743"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[470,14993+33]..lib/set.ml[470,14993+34])
                                    Texp_ident "f/741"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[470,14993+35]..lib/set.ml[470,14993+36])
                                    Texp_ident "l/742"
                              ]
                            Some
                              expression (lib/set.ml[472,15045+12]..lib/set.ml[472,15045+30])
                                Texp_apply
                                expression (lib/set.ml[472,15045+12]..lib/set.ml[472,15045+26])
                                  Texp_ident "find_first_opt/740"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[472,15045+27]..lib/set.ml[472,15045+28])
                                      Texp_ident "f/741"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[472,15045+29]..lib/set.ml[472,15045+30])
                                      Texp_ident "r/744"
                                ]
                      ]
              ]
            structure_item (lib/set.ml[474,15077+4]..lib/set.ml[481,15243+32])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[474,15077+12]..lib/set.ml[474,15077+25])
                    Tpat_var "find_last_aux/746"
                  expression (lib/set.ml[474,15077+26]..lib/set.ml[481,15243+32]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[474,15077+26]..lib/set.ml[474,15077+28])
                          Tpat_var "v0/747"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[474,15077+29]..lib/set.ml[474,15077+30])
                          Tpat_var "f/748"
                    ]
                    Tfunction_cases (lib/set.ml[474,15077+33]..lib/set.ml[481,15243+32])
                      [
                        <case>
                          pattern (lib/set.ml[475,15119+8]..lib/set.ml[475,15119+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[476,15136+10]..lib/set.ml[476,15136+12])
                            Texp_ident "v0/747"
                        <case>
                          pattern (lib/set.ml[477,15149+8]..lib/set.ml[477,15149+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[477,15149+12]..lib/set.ml[477,15149+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[477,15149+13]..lib/set.ml[477,15149+14])
                                      Tpat_var "l/749"
                                  "v"
                                    pattern (lib/set.ml[477,15149+16]..lib/set.ml[477,15149+17])
                                      Tpat_var "v/750"
                                  "r"
                                    pattern (lib/set.ml[477,15149+19]..lib/set.ml[477,15149+20])
                                      Tpat_var "r/751"
                                ]
                            ]
                            None
                          expression (lib/set.ml[478,15174+10]..lib/set.ml[481,15243+32])
                            Texp_ifthenelse
                            expression (lib/set.ml[478,15174+13]..lib/set.ml[478,15174+16])
                              Texp_apply
                              expression (lib/set.ml[478,15174+13]..lib/set.ml[478,15174+14])
                                Texp_ident "f/748"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[478,15174+15]..lib/set.ml[478,15174+16])
                                    Texp_ident "v/750"
                              ]
                            expression (lib/set.ml[479,15196+12]..lib/set.ml[479,15196+31])
                              Texp_apply
                              expression (lib/set.ml[479,15196+12]..lib/set.ml[479,15196+25])
                                Texp_ident "find_last_aux/746"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[479,15196+26]..lib/set.ml[479,15196+27])
                                    Texp_ident "v/750"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[479,15196+28]..lib/set.ml[479,15196+29])
                                    Texp_ident "f/748"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[479,15196+30]..lib/set.ml[479,15196+31])
                                    Texp_ident "r/751"
                              ]
                            Some
                              expression (lib/set.ml[481,15243+12]..lib/set.ml[481,15243+32])
                                Texp_apply
                                expression (lib/set.ml[481,15243+12]..lib/set.ml[481,15243+25])
                                  Texp_ident "find_last_aux/746"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[481,15243+26]..lib/set.ml[481,15243+28])
                                      Texp_ident "v0/747"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[481,15243+29]..lib/set.ml[481,15243+30])
                                      Texp_ident "f/748"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[481,15243+31]..lib/set.ml[481,15243+32])
                                      Texp_ident "l/749"
                                ]
                      ]
              ]
            structure_item (lib/set.ml[483,15277+4]..lib/set.ml[490,15449+25])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[483,15277+12]..lib/set.ml[483,15277+21])
                    Tpat_var "find_last/753"
                  expression (lib/set.ml[483,15277+22]..lib/set.ml[490,15449+25]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[483,15277+22]..lib/set.ml[483,15277+23])
                          Tpat_var "f/754"
                    ]
                    Tfunction_cases (lib/set.ml[483,15277+26]..lib/set.ml[490,15449+25])
                      [
                        <case>
                          pattern (lib/set.ml[484,15312+8]..lib/set.ml[484,15312+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[485,15329+10]..lib/set.ml[485,15329+25])
                            Texp_apply
                            expression (lib/set.ml[485,15329+10]..lib/set.ml[485,15329+15])
                              Texp_ident "Stdlib!.raise"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[485,15329+16]..lib/set.ml[485,15329+25])
                                  Texp_construct "Not_found"
                                  []
                            ]
                        <case>
                          pattern (lib/set.ml[486,15355+8]..lib/set.ml[486,15355+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[486,15355+12]..lib/set.ml[486,15355+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[486,15355+13]..lib/set.ml[486,15355+14])
                                      Tpat_var "l/755"
                                  "v"
                                    pattern (lib/set.ml[486,15355+16]..lib/set.ml[486,15355+17])
                                      Tpat_var "v/756"
                                  "r"
                                    pattern (lib/set.ml[486,15355+19]..lib/set.ml[486,15355+20])
                                      Tpat_var "r/757"
                                ]
                            ]
                            None
                          expression (lib/set.ml[487,15380+10]..lib/set.ml[490,15449+25])
                            Texp_ifthenelse
                            expression (lib/set.ml[487,15380+13]..lib/set.ml[487,15380+16])
                              Texp_apply
                              expression (lib/set.ml[487,15380+13]..lib/set.ml[487,15380+14])
                                Texp_ident "f/754"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[487,15380+15]..lib/set.ml[487,15380+16])
                                    Texp_ident "v/756"
                              ]
                            expression (lib/set.ml[488,15402+12]..lib/set.ml[488,15402+31])
                              Texp_apply
                              expression (lib/set.ml[488,15402+12]..lib/set.ml[488,15402+25])
                                Texp_ident "find_last_aux/746"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[488,15402+26]..lib/set.ml[488,15402+27])
                                    Texp_ident "v/756"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[488,15402+28]..lib/set.ml[488,15402+29])
                                    Texp_ident "f/754"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[488,15402+30]..lib/set.ml[488,15402+31])
                                    Texp_ident "r/757"
                              ]
                            Some
                              expression (lib/set.ml[490,15449+12]..lib/set.ml[490,15449+25])
                                Texp_apply
                                expression (lib/set.ml[490,15449+12]..lib/set.ml[490,15449+21])
                                  Texp_ident "find_last/753"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[490,15449+22]..lib/set.ml[490,15449+23])
                                      Texp_ident "f/754"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[490,15449+24]..lib/set.ml[490,15449+25])
                                      Texp_ident "l/755"
                                ]
                      ]
              ]
            structure_item (lib/set.ml[492,15476+4]..lib/set.ml[499,15655+36])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[492,15476+12]..lib/set.ml[492,15476+29])
                    Tpat_var "find_last_opt_aux/759"
                  expression (lib/set.ml[492,15476+30]..lib/set.ml[499,15655+36]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[492,15476+30]..lib/set.ml[492,15476+32])
                          Tpat_var "v0/760"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[492,15476+33]..lib/set.ml[492,15476+34])
                          Tpat_var "f/761"
                    ]
                    Tfunction_cases (lib/set.ml[492,15476+37]..lib/set.ml[499,15655+36])
                      [
                        <case>
                          pattern (lib/set.ml[493,15522+8]..lib/set.ml[493,15522+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[494,15539+10]..lib/set.ml[494,15539+17])
                            Texp_construct "Some"
                            [
                              expression (lib/set.ml[494,15539+15]..lib/set.ml[494,15539+17])
                                Texp_ident "v0/760"
                            ]
                        <case>
                          pattern (lib/set.ml[495,15557+8]..lib/set.ml[495,15557+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[495,15557+12]..lib/set.ml[495,15557+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[495,15557+13]..lib/set.ml[495,15557+14])
                                      Tpat_var "l/762"
                                  "v"
                                    pattern (lib/set.ml[495,15557+16]..lib/set.ml[495,15557+17])
                                      Tpat_var "v/763"
                                  "r"
                                    pattern (lib/set.ml[495,15557+19]..lib/set.ml[495,15557+20])
                                      Tpat_var "r/764"
                                ]
                            ]
                            None
                          expression (lib/set.ml[496,15582+10]..lib/set.ml[499,15655+36])
                            Texp_ifthenelse
                            expression (lib/set.ml[496,15582+13]..lib/set.ml[496,15582+16])
                              Texp_apply
                              expression (lib/set.ml[496,15582+13]..lib/set.ml[496,15582+14])
                                Texp_ident "f/761"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[496,15582+15]..lib/set.ml[496,15582+16])
                                    Texp_ident "v/763"
                              ]
                            expression (lib/set.ml[497,15604+12]..lib/set.ml[497,15604+35])
                              Texp_apply
                              expression (lib/set.ml[497,15604+12]..lib/set.ml[497,15604+29])
                                Texp_ident "find_last_opt_aux/759"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[497,15604+30]..lib/set.ml[497,15604+31])
                                    Texp_ident "v/763"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[497,15604+32]..lib/set.ml[497,15604+33])
                                    Texp_ident "f/761"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[497,15604+34]..lib/set.ml[497,15604+35])
                                    Texp_ident "r/764"
                              ]
                            Some
                              expression (lib/set.ml[499,15655+12]..lib/set.ml[499,15655+36])
                                Texp_apply
                                expression (lib/set.ml[499,15655+12]..lib/set.ml[499,15655+29])
                                  Texp_ident "find_last_opt_aux/759"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[499,15655+30]..lib/set.ml[499,15655+32])
                                      Texp_ident "v0/760"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[499,15655+33]..lib/set.ml[499,15655+34])
                                      Texp_ident "f/761"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[499,15655+35]..lib/set.ml[499,15655+36])
                                      Texp_ident "l/762"
                                ]
                      ]
              ]
            structure_item (lib/set.ml[501,15693+4]..lib/set.ml[508,15862+29])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[501,15693+12]..lib/set.ml[501,15693+25])
                    Tpat_var "find_last_opt/766"
                  expression (lib/set.ml[501,15693+26]..lib/set.ml[508,15862+29]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[501,15693+26]..lib/set.ml[501,15693+27])
                          Tpat_var "f/767"
                    ]
                    Tfunction_cases (lib/set.ml[501,15693+30]..lib/set.ml[508,15862+29])
                      [
                        <case>
                          pattern (lib/set.ml[502,15732+8]..lib/set.ml[502,15732+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[503,15749+10]..lib/set.ml[503,15749+14])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (lib/set.ml[504,15764+8]..lib/set.ml[504,15764+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[504,15764+12]..lib/set.ml[504,15764+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[504,15764+13]..lib/set.ml[504,15764+14])
                                      Tpat_var "l/768"
                                  "v"
                                    pattern (lib/set.ml[504,15764+16]..lib/set.ml[504,15764+17])
                                      Tpat_var "v/769"
                                  "r"
                                    pattern (lib/set.ml[504,15764+19]..lib/set.ml[504,15764+20])
                                      Tpat_var "r/770"
                                ]
                            ]
                            None
                          expression (lib/set.ml[505,15789+10]..lib/set.ml[508,15862+29])
                            Texp_ifthenelse
                            expression (lib/set.ml[505,15789+13]..lib/set.ml[505,15789+16])
                              Texp_apply
                              expression (lib/set.ml[505,15789+13]..lib/set.ml[505,15789+14])
                                Texp_ident "f/767"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[505,15789+15]..lib/set.ml[505,15789+16])
                                    Texp_ident "v/769"
                              ]
                            expression (lib/set.ml[506,15811+12]..lib/set.ml[506,15811+35])
                              Texp_apply
                              expression (lib/set.ml[506,15811+12]..lib/set.ml[506,15811+29])
                                Texp_ident "find_last_opt_aux/759"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[506,15811+30]..lib/set.ml[506,15811+31])
                                    Texp_ident "v/769"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[506,15811+32]..lib/set.ml[506,15811+33])
                                    Texp_ident "f/767"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[506,15811+34]..lib/set.ml[506,15811+35])
                                    Texp_ident "r/770"
                              ]
                            Some
                              expression (lib/set.ml[508,15862+12]..lib/set.ml[508,15862+29])
                                Texp_apply
                                expression (lib/set.ml[508,15862+12]..lib/set.ml[508,15862+25])
                                  Texp_ident "find_last_opt/766"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[508,15862+26]..lib/set.ml[508,15862+27])
                                      Texp_ident "f/767"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[508,15862+28]..lib/set.ml[508,15862+29])
                                      Texp_ident "l/768"
                                ]
                      ]
              ]
            structure_item (lib/set.ml[510,15893+4]..lib/set.ml[515,16042+50])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[510,15893+12]..lib/set.ml[510,15893+20])
                    Tpat_var "find_opt/772"
                  expression (lib/set.ml[510,15893+21]..lib/set.ml[515,16042+50]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[510,15893+21]..lib/set.ml[510,15893+22])
                          Tpat_var "x/773"
                    ]
                    Tfunction_cases (lib/set.ml[510,15893+25]..lib/set.ml[515,16042+50])
                      [
                        <case>
                          pattern (lib/set.ml[511,15927+8]..lib/set.ml[511,15927+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[511,15927+17]..lib/set.ml[511,15927+21])
                            Texp_construct "None"
                            []
                        <case>
                          pattern (lib/set.ml[512,15949+8]..lib/set.ml[512,15949+21])
                            Tpat_construct "Node"
                            [
                              pattern (lib/set.ml[512,15949+12]..lib/set.ml[512,15949+21])
                                Tpat_record
                                [
                                  "l"
                                    pattern (lib/set.ml[512,15949+13]..lib/set.ml[512,15949+14])
                                      Tpat_var "l/774"
                                  "v"
                                    pattern (lib/set.ml[512,15949+16]..lib/set.ml[512,15949+17])
                                      Tpat_var "v/775"
                                  "r"
                                    pattern (lib/set.ml[512,15949+19]..lib/set.ml[512,15949+20])
                                      Tpat_var "r/776"
                                ]
                            ]
                            None
                          expression (lib/set.ml[513,15974+10]..lib/set.ml[515,16042+50])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[513,15974+14]..lib/set.ml[513,15974+15])
                                  Tpat_var "c/777"
                                expression (lib/set.ml[513,15974+18]..lib/set.ml[513,15974+33])
                                  Texp_apply
                                  expression (lib/set.ml[513,15974+18]..lib/set.ml[513,15974+29])
                                    Texp_ident "Ord/405.compare"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[513,15974+30]..lib/set.ml[513,15974+31])
                                        Texp_ident "x/773"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[513,15974+32]..lib/set.ml[513,15974+33])
                                        Texp_ident "v/775"
                                  ]
                            ]
                            expression (lib/set.ml[514,16011+10]..lib/set.ml[515,16042+50])
                              Texp_ifthenelse
                              expression (lib/set.ml[514,16011+13]..lib/set.ml[514,16011+18])
                                Texp_apply
                                expression (lib/set.ml[514,16011+15]..lib/set.ml[514,16011+16])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[514,16011+13]..lib/set.ml[514,16011+14])
                                      Texp_ident "c/777"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[514,16011+17]..lib/set.ml[514,16011+18])
                                      Texp_constant Const_int 0
                                ]
                              expression (lib/set.ml[514,16011+24]..lib/set.ml[514,16011+30])
                                Texp_construct "Some"
                                [
                                  expression (lib/set.ml[514,16011+29]..lib/set.ml[514,16011+30])
                                    Texp_ident "v/775"
                                ]
                              Some
                                expression (lib/set.ml[515,16042+15]..lib/set.ml[515,16042+50])
                                  Texp_apply
                                  expression (lib/set.ml[515,16042+15]..lib/set.ml[515,16042+23])
                                    Texp_ident "find_opt/772"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[515,16042+24]..lib/set.ml[515,16042+25])
                                        Texp_ident "x/773"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[515,16042+26]..lib/set.ml[515,16042+50])
                                        Texp_ifthenelse
                                        expression (lib/set.ml[515,16042+30]..lib/set.ml[515,16042+35])
                                          Texp_apply
                                          expression (lib/set.ml[515,16042+32]..lib/set.ml[515,16042+33])
                                            Texp_ident "Stdlib!.<"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[515,16042+30]..lib/set.ml[515,16042+31])
                                                Texp_ident "c/777"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[515,16042+34]..lib/set.ml[515,16042+35])
                                                Texp_constant Const_int 0
                                          ]
                                        expression (lib/set.ml[515,16042+41]..lib/set.ml[515,16042+42])
                                          Texp_ident "l/774"
                                        Some
                                          expression (lib/set.ml[515,16042+48]..lib/set.ml[515,16042+49])
                                            Texp_ident "r/776"
                                  ]
                      ]
              ]
            structure_item (lib/set.ml[517,16094+4]..lib/set.ml[524,16452+28])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[517,16094+8]..lib/set.ml[517,16094+16])
                    Tpat_var "try_join/779"
                  expression (lib/set.ml[517,16094+17]..lib/set.ml[524,16452+28]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[517,16094+17]..lib/set.ml[517,16094+18])
                          Tpat_var "l/781"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[517,16094+19]..lib/set.ml[517,16094+20])
                          Tpat_var "v/782"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[517,16094+21]..lib/set.ml[517,16094+22])
                          Tpat_var "r/783"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[521,16322+6]..lib/set.ml[524,16452+28])
                        Texp_ifthenelse
                        expression (lib/set.ml[521,16322+9]..lib/set.ml[522,16376+53])
                          Texp_apply
                          expression (lib/set.ml[522,16376+6]..lib/set.ml[522,16376+8])
                            Texp_ident "Stdlib!.&&"
                          [
                            <arg>
                              Nolabel
                              expression (lib/set.ml[521,16322+9]..lib/set.ml[521,16322+53])
                                Texp_apply
                                expression (lib/set.ml[521,16322+20]..lib/set.ml[521,16322+22])
                                  Texp_ident "Stdlib!.||"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[521,16322+10]..lib/set.ml[521,16322+19])
                                      Texp_apply
                                      expression (lib/set.ml[521,16322+12]..lib/set.ml[521,16322+13])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[521,16322+10]..lib/set.ml[521,16322+11])
                                            Texp_ident "l/781"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[521,16322+14]..lib/set.ml[521,16322+19])
                                            Texp_construct "Empty"
                                            []
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[521,16322+23]..lib/set.ml[521,16322+52])
                                      Texp_apply
                                      expression (lib/set.ml[521,16322+49]..lib/set.ml[521,16322+50])
                                        Texp_ident "Stdlib!.<"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[521,16322+23]..lib/set.ml[521,16322+48])
                                            Texp_apply
                                            expression (lib/set.ml[521,16322+23]..lib/set.ml[521,16322+34])
                                              Texp_ident "Ord/405.compare"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[521,16322+35]..lib/set.ml[521,16322+46])
                                                  Texp_apply
                                                  expression (lib/set.ml[521,16322+36]..lib/set.ml[521,16322+43])
                                                    Texp_ident "max_elt/492"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/set.ml[521,16322+44]..lib/set.ml[521,16322+45])
                                                        Texp_ident "l/781"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[521,16322+47]..lib/set.ml[521,16322+48])
                                                  Texp_ident "v/782"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[521,16322+51]..lib/set.ml[521,16322+52])
                                            Texp_constant Const_int 0
                                      ]
                                ]
                            <arg>
                              Nolabel
                              expression (lib/set.ml[522,16376+9]..lib/set.ml[522,16376+53])
                                Texp_apply
                                expression (lib/set.ml[522,16376+20]..lib/set.ml[522,16376+22])
                                  Texp_ident "Stdlib!.||"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[522,16376+10]..lib/set.ml[522,16376+19])
                                      Texp_apply
                                      expression (lib/set.ml[522,16376+12]..lib/set.ml[522,16376+13])
                                        Texp_ident "Stdlib!.="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[522,16376+10]..lib/set.ml[522,16376+11])
                                            Texp_ident "r/783"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[522,16376+14]..lib/set.ml[522,16376+19])
                                            Texp_construct "Empty"
                                            []
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[522,16376+23]..lib/set.ml[522,16376+52])
                                      Texp_apply
                                      expression (lib/set.ml[522,16376+49]..lib/set.ml[522,16376+50])
                                        Texp_ident "Stdlib!.<"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[522,16376+23]..lib/set.ml[522,16376+48])
                                            Texp_apply
                                            expression (lib/set.ml[522,16376+23]..lib/set.ml[522,16376+34])
                                              Texp_ident "Ord/405.compare"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[522,16376+35]..lib/set.ml[522,16376+36])
                                                  Texp_ident "v/782"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[522,16376+37]..lib/set.ml[522,16376+48])
                                                  Texp_apply
                                                  expression (lib/set.ml[522,16376+38]..lib/set.ml[522,16376+45])
                                                    Texp_ident "min_elt/484"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/set.ml[522,16376+46]..lib/set.ml[522,16376+47])
                                                        Texp_ident "r/783"
                                                  ]
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[522,16376+51]..lib/set.ml[522,16376+52])
                                            Texp_constant Const_int 0
                                      ]
                                ]
                          ]
                        expression (lib/set.ml[523,16430+11]..lib/set.ml[523,16430+21])
                          Texp_apply
                          expression (lib/set.ml[523,16430+11]..lib/set.ml[523,16430+15])
                            Texp_ident "join/472"
                          [
                            <arg>
                              Nolabel
                              expression (lib/set.ml[523,16430+16]..lib/set.ml[523,16430+17])
                                Texp_ident "l/781"
                            <arg>
                              Nolabel
                              expression (lib/set.ml[523,16430+18]..lib/set.ml[523,16430+19])
                                Texp_ident "v/782"
                            <arg>
                              Nolabel
                              expression (lib/set.ml[523,16430+20]..lib/set.ml[523,16430+21])
                                Texp_ident "r/783"
                          ]
                        Some
                          expression (lib/set.ml[524,16452+11]..lib/set.ml[524,16452+28])
                            Texp_apply
                            expression (lib/set.ml[524,16452+11]..lib/set.ml[524,16452+16])
                              Texp_ident "union/551"
                            [
                              <arg>
                                Nolabel
                                expression (lib/set.ml[524,16452+17]..lib/set.ml[524,16452+18])
                                  Texp_ident "l/781"
                              <arg>
                                Nolabel
                                expression (lib/set.ml[524,16452+19]..lib/set.ml[524,16452+28])
                                  Texp_apply
                                  expression (lib/set.ml[524,16452+20]..lib/set.ml[524,16452+23])
                                    Texp_ident "add/448"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[524,16452+24]..lib/set.ml[524,16452+25])
                                        Texp_ident "v/782"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[524,16452+26]..lib/set.ml[524,16452+27])
                                        Texp_ident "r/783"
                                  ]
                            ]
              ]
            structure_item (lib/set.ml[526,16482+4]..lib/set.ml[534,16750+31])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[526,16482+12]..lib/set.ml[526,16482+15])
                    Tpat_var "map/784"
                  expression (lib/set.ml[526,16482+16]..lib/set.ml[534,16750+31]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[526,16482+16]..lib/set.ml[526,16482+17])
                          Tpat_var "f/785"
                    ]
                    Tfunction_cases (lib/set.ml[526,16482+20]..lib/set.ml[534,16750+31])
                      [
                        <case>
                          pattern (lib/set.ml[527,16511+8]..lib/set.ml[527,16511+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[527,16511+17]..lib/set.ml[527,16511+22])
                            Texp_construct "Empty"
                            []
                        <case>
                          pattern (lib/set.ml[528,16534+8]..lib/set.ml[528,16534+26])
                            Tpat_alias "t/789"
                            pattern (lib/set.ml[528,16534+8]..lib/set.ml[528,16534+21])
                              Tpat_construct "Node"
                              [
                                pattern (lib/set.ml[528,16534+12]..lib/set.ml[528,16534+21])
                                  Tpat_record
                                  [
                                    "l"
                                      pattern (lib/set.ml[528,16534+13]..lib/set.ml[528,16534+14])
                                        Tpat_var "l/786"
                                    "v"
                                      pattern (lib/set.ml[528,16534+16]..lib/set.ml[528,16534+17])
                                        Tpat_var "v/787"
                                    "r"
                                      pattern (lib/set.ml[528,16534+19]..lib/set.ml[528,16534+20])
                                        Tpat_var "r/788"
                                  ]
                              ]
                              None
                          expression (lib/set.ml[530,16618+9]..lib/set.ml[534,16750+31])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[530,16618+13]..lib/set.ml[530,16618+15])
                                  Tpat_var "l'/790"
                                expression (lib/set.ml[530,16618+18]..lib/set.ml[530,16618+25])
                                  Texp_apply
                                  expression (lib/set.ml[530,16618+18]..lib/set.ml[530,16618+21])
                                    Texp_ident "map/784"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[530,16618+22]..lib/set.ml[530,16618+23])
                                        Texp_ident "f/785"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[530,16618+24]..lib/set.ml[530,16618+25])
                                        Texp_ident "l/786"
                                  ]
                            ]
                            expression (lib/set.ml[531,16647+9]..lib/set.ml[534,16750+31])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/set.ml[531,16647+13]..lib/set.ml[531,16647+15])
                                    Tpat_var "v'/791"
                                  expression (lib/set.ml[531,16647+18]..lib/set.ml[531,16647+21])
                                    Texp_apply
                                    expression (lib/set.ml[531,16647+18]..lib/set.ml[531,16647+19])
                                      Texp_ident "f/785"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[531,16647+20]..lib/set.ml[531,16647+21])
                                          Texp_ident "v/787"
                                    ]
                              ]
                              expression (lib/set.ml[532,16672+9]..lib/set.ml[534,16750+31])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/set.ml[532,16672+13]..lib/set.ml[532,16672+15])
                                      Tpat_var "r'/792"
                                    expression (lib/set.ml[532,16672+18]..lib/set.ml[532,16672+25])
                                      Texp_apply
                                      expression (lib/set.ml[532,16672+18]..lib/set.ml[532,16672+21])
                                        Texp_ident "map/784"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[532,16672+22]..lib/set.ml[532,16672+23])
                                            Texp_ident "f/785"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[532,16672+24]..lib/set.ml[532,16672+25])
                                            Texp_ident "r/788"
                                      ]
                                ]
                                expression (lib/set.ml[533,16701+9]..lib/set.ml[534,16750+31])
                                  Texp_ifthenelse
                                  expression (lib/set.ml[533,16701+12]..lib/set.ml[533,16701+41])
                                    Texp_apply
                                    expression (lib/set.ml[533,16701+20]..lib/set.ml[533,16701+22])
                                      Texp_ident "Stdlib!.&&"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[533,16701+12]..lib/set.ml[533,16701+19])
                                          Texp_apply
                                          expression (lib/set.ml[533,16701+14]..lib/set.ml[533,16701+16])
                                            Texp_ident "Stdlib!.=="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[533,16701+12]..lib/set.ml[533,16701+13])
                                                Texp_ident "l/786"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[533,16701+17]..lib/set.ml[533,16701+19])
                                                Texp_ident "l'/790"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[533,16701+23]..lib/set.ml[533,16701+41])
                                          Texp_apply
                                          expression (lib/set.ml[533,16701+31]..lib/set.ml[533,16701+33])
                                            Texp_ident "Stdlib!.&&"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[533,16701+23]..lib/set.ml[533,16701+30])
                                                Texp_apply
                                                expression (lib/set.ml[533,16701+25]..lib/set.ml[533,16701+27])
                                                  Texp_ident "Stdlib!.=="
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[533,16701+23]..lib/set.ml[533,16701+24])
                                                      Texp_ident "v/787"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[533,16701+28]..lib/set.ml[533,16701+30])
                                                      Texp_ident "v'/791"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[533,16701+34]..lib/set.ml[533,16701+41])
                                                Texp_apply
                                                expression (lib/set.ml[533,16701+36]..lib/set.ml[533,16701+38])
                                                  Texp_ident "Stdlib!.=="
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[533,16701+34]..lib/set.ml[533,16701+35])
                                                      Texp_ident "r/788"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[533,16701+39]..lib/set.ml[533,16701+41])
                                                      Texp_ident "r'/792"
                                                ]
                                          ]
                                    ]
                                  expression (lib/set.ml[533,16701+47]..lib/set.ml[533,16701+48])
                                    Texp_ident "t/789"
                                  Some
                                    expression (lib/set.ml[534,16750+14]..lib/set.ml[534,16750+31])
                                      Texp_apply
                                      expression (lib/set.ml[534,16750+14]..lib/set.ml[534,16750+22])
                                        Texp_ident "try_join/779"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[534,16750+23]..lib/set.ml[534,16750+25])
                                            Texp_ident "l'/790"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[534,16750+26]..lib/set.ml[534,16750+28])
                                            Texp_ident "v'/791"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[534,16750+29]..lib/set.ml[534,16750+31])
                                            Texp_ident "r'/792"
                                      ]
                      ]
              ]
            structure_item (lib/set.ml[536,16783+4]..lib/set.ml[540,16884+62])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[536,16783+8]..lib/set.ml[536,16783+18])
                    Tpat_var "try_concat/793"
                  expression (lib/set.ml[536,16783+19]..lib/set.ml[540,16884+62]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[536,16783+19]..lib/set.ml[536,16783+21])
                          Tpat_var "t1/795"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[536,16783+22]..lib/set.ml[536,16783+24])
                          Tpat_var "t2/796"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[537,16810+6]..lib/set.ml[540,16884+62])
                        Texp_match
                        expression (lib/set.ml[537,16810+12]..lib/set.ml[537,16810+20])
                          Texp_tuple
                          [
                            expression (lib/set.ml[537,16810+13]..lib/set.ml[537,16810+15])
                              Texp_ident "t1/795"
                            expression (lib/set.ml[537,16810+17]..lib/set.ml[537,16810+19])
                              Texp_ident "t2/796"
                          ]
                        [
                          <case>
                            pattern (lib/set.ml[538,16836+8]..lib/set.ml[538,16836+18])
                              Tpat_value
                              pattern (lib/set.ml[538,16836+8]..lib/set.ml[538,16836+18])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[538,16836+9]..lib/set.ml[538,16836+14])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                  pattern (lib/set.ml[538,16836+16]..lib/set.ml[538,16836+17])
                                    Tpat_var "t/797"
                                ]
                            expression (lib/set.ml[538,16836+22]..lib/set.ml[538,16836+23])
                              Texp_ident "t/797"
                          <case>
                            pattern (lib/set.ml[539,16860+8]..lib/set.ml[539,16860+18])
                              Tpat_value
                              pattern (lib/set.ml[539,16860+8]..lib/set.ml[539,16860+18])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[539,16860+9]..lib/set.ml[539,16860+10])
                                    Tpat_var "t/798"
                                  pattern (lib/set.ml[539,16860+12]..lib/set.ml[539,16860+17])
                                    Tpat_construct "Empty"
                                    []
                                    None
                                ]
                            expression (lib/set.ml[539,16860+22]..lib/set.ml[539,16860+23])
                              Texp_ident "t/798"
                          <case>
                            pattern (lib/set.ml[540,16884+8]..lib/set.ml[540,16884+14])
                              Tpat_value
                              pattern (lib/set.ml[540,16884+8]..lib/set.ml[540,16884+14])
                                Tpat_tuple
                                [
                                  pattern (lib/set.ml[540,16884+9]..lib/set.ml[540,16884+10])
                                    Tpat_any
                                  pattern (lib/set.ml[540,16884+12]..lib/set.ml[540,16884+13])
                                    Tpat_any
                                ]
                            expression (lib/set.ml[540,16884+18]..lib/set.ml[540,16884+62])
                              Texp_apply
                              expression (lib/set.ml[540,16884+18]..lib/set.ml[540,16884+26])
                                Texp_ident "try_join/779"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[540,16884+27]..lib/set.ml[540,16884+29])
                                    Texp_ident "t1/795"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[540,16884+30]..lib/set.ml[540,16884+42])
                                    Texp_apply
                                    expression (lib/set.ml[540,16884+31]..lib/set.ml[540,16884+38])
                                      Texp_ident "min_elt/484"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[540,16884+39]..lib/set.ml[540,16884+41])
                                          Texp_ident "t2/796"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[540,16884+43]..lib/set.ml[540,16884+62])
                                    Texp_apply
                                    expression (lib/set.ml[540,16884+44]..lib/set.ml[540,16884+58])
                                      Texp_ident "remove_min_elt/500"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[540,16884+59]..lib/set.ml[540,16884+61])
                                          Texp_ident "t2/796"
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[542,16948+4]..lib/set.ml[555,17384+12])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[542,16948+12]..lib/set.ml[542,16948+22])
                    Tpat_var "filter_map/799"
                  expression (lib/set.ml[542,16948+23]..lib/set.ml[555,17384+12]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[542,16948+23]..lib/set.ml[542,16948+24])
                          Tpat_var "f/800"
                    ]
                    Tfunction_cases (lib/set.ml[542,16948+27]..lib/set.ml[555,17384+12])
                      [
                        <case>
                          pattern (lib/set.ml[543,16984+8]..lib/set.ml[543,16984+13])
                            Tpat_construct "Empty"
                            []
                            None
                          expression (lib/set.ml[543,16984+17]..lib/set.ml[543,16984+22])
                            Texp_construct "Empty"
                            []
                        <case>
                          pattern (lib/set.ml[544,17007+8]..lib/set.ml[544,17007+26])
                            Tpat_alias "t/804"
                            pattern (lib/set.ml[544,17007+8]..lib/set.ml[544,17007+21])
                              Tpat_construct "Node"
                              [
                                pattern (lib/set.ml[544,17007+12]..lib/set.ml[544,17007+21])
                                  Tpat_record
                                  [
                                    "l"
                                      pattern (lib/set.ml[544,17007+13]..lib/set.ml[544,17007+14])
                                        Tpat_var "l/801"
                                    "v"
                                      pattern (lib/set.ml[544,17007+16]..lib/set.ml[544,17007+17])
                                        Tpat_var "v/802"
                                    "r"
                                      pattern (lib/set.ml[544,17007+19]..lib/set.ml[544,17007+20])
                                        Tpat_var "r/803"
                                  ]
                              ]
                              None
                          expression (lib/set.ml[546,17091+9]..lib/set.ml[555,17384+12])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/set.ml[546,17091+13]..lib/set.ml[546,17091+15])
                                  Tpat_var "l'/805"
                                expression (lib/set.ml[546,17091+18]..lib/set.ml[546,17091+32])
                                  Texp_apply
                                  expression (lib/set.ml[546,17091+18]..lib/set.ml[546,17091+28])
                                    Texp_ident "filter_map/799"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[546,17091+29]..lib/set.ml[546,17091+30])
                                        Texp_ident "f/800"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[546,17091+31]..lib/set.ml[546,17091+32])
                                        Texp_ident "l/801"
                                  ]
                            ]
                            expression (lib/set.ml[547,17127+9]..lib/set.ml[555,17384+12])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/set.ml[547,17127+13]..lib/set.ml[547,17127+15])
                                    Tpat_var "v'/806"
                                  expression (lib/set.ml[547,17127+18]..lib/set.ml[547,17127+21])
                                    Texp_apply
                                    expression (lib/set.ml[547,17127+18]..lib/set.ml[547,17127+19])
                                      Texp_ident "f/800"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[547,17127+20]..lib/set.ml[547,17127+21])
                                          Texp_ident "v/802"
                                    ]
                              ]
                              expression (lib/set.ml[548,17152+9]..lib/set.ml[555,17384+12])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/set.ml[548,17152+13]..lib/set.ml[548,17152+15])
                                      Tpat_var "r'/807"
                                    expression (lib/set.ml[548,17152+18]..lib/set.ml[548,17152+32])
                                      Texp_apply
                                      expression (lib/set.ml[548,17152+18]..lib/set.ml[548,17152+28])
                                        Texp_ident "filter_map/799"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[548,17152+29]..lib/set.ml[548,17152+30])
                                            Texp_ident "f/800"
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[548,17152+31]..lib/set.ml[548,17152+32])
                                            Texp_ident "r/803"
                                      ]
                                ]
                                expression (lib/set.ml[549,17188+9]..lib/set.ml[555,17384+12])
                                  Texp_match
                                  expression (lib/set.ml[549,17188+21]..lib/set.ml[549,17188+23])
                                    Texp_ident "v'/806"
                                  [
                                    <case>
                                      pattern (lib/set.ml[550,17217+13]..lib/set.ml[550,17217+20])
                                        Tpat_value
                                        pattern (lib/set.ml[550,17217+13]..lib/set.ml[550,17217+20])
                                          Tpat_construct "Some"
                                          [
                                            pattern (lib/set.ml[550,17217+18]..lib/set.ml[550,17217+20])
                                              Tpat_var "v'/808"
                                          ]
                                          None
                                      expression (lib/set.ml[551,17241+14]..lib/set.ml[552,17295+36])
                                        Texp_ifthenelse
                                        expression (lib/set.ml[551,17241+17]..lib/set.ml[551,17241+46])
                                          Texp_apply
                                          expression (lib/set.ml[551,17241+25]..lib/set.ml[551,17241+27])
                                            Texp_ident "Stdlib!.&&"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[551,17241+17]..lib/set.ml[551,17241+24])
                                                Texp_apply
                                                expression (lib/set.ml[551,17241+19]..lib/set.ml[551,17241+21])
                                                  Texp_ident "Stdlib!.=="
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[551,17241+17]..lib/set.ml[551,17241+18])
                                                      Texp_ident "l/801"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[551,17241+22]..lib/set.ml[551,17241+24])
                                                      Texp_ident "l'/805"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[551,17241+28]..lib/set.ml[551,17241+46])
                                                Texp_apply
                                                expression (lib/set.ml[551,17241+36]..lib/set.ml[551,17241+38])
                                                  Texp_ident "Stdlib!.&&"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[551,17241+28]..lib/set.ml[551,17241+35])
                                                      Texp_apply
                                                      expression (lib/set.ml[551,17241+30]..lib/set.ml[551,17241+32])
                                                        Texp_ident "Stdlib!.=="
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/set.ml[551,17241+28]..lib/set.ml[551,17241+29])
                                                            Texp_ident "v/802"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/set.ml[551,17241+33]..lib/set.ml[551,17241+35])
                                                            Texp_ident "v'/808"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[551,17241+39]..lib/set.ml[551,17241+46])
                                                      Texp_apply
                                                      expression (lib/set.ml[551,17241+41]..lib/set.ml[551,17241+43])
                                                        Texp_ident "Stdlib!.=="
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/set.ml[551,17241+39]..lib/set.ml[551,17241+40])
                                                            Texp_ident "r/803"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/set.ml[551,17241+44]..lib/set.ml[551,17241+46])
                                                            Texp_ident "r'/807"
                                                      ]
                                                ]
                                          ]
                                        expression (lib/set.ml[551,17241+52]..lib/set.ml[551,17241+53])
                                          Texp_ident "t/804"
                                        Some
                                          expression (lib/set.ml[552,17295+19]..lib/set.ml[552,17295+36])
                                            Texp_apply
                                            expression (lib/set.ml[552,17295+19]..lib/set.ml[552,17295+27])
                                              Texp_ident "try_join/779"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[552,17295+28]..lib/set.ml[552,17295+30])
                                                  Texp_ident "l'/805"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[552,17295+31]..lib/set.ml[552,17295+33])
                                                  Texp_ident "v'/808"
                                              <arg>
                                                Nolabel
                                                expression (lib/set.ml[552,17295+34]..lib/set.ml[552,17295+36])
                                                  Texp_ident "r'/807"
                                            ]
                                    <case>
                                      pattern (lib/set.ml[553,17332+13]..lib/set.ml[553,17332+17])
                                        Tpat_value
                                        pattern (lib/set.ml[553,17332+13]..lib/set.ml[553,17332+17])
                                          Tpat_construct "None"
                                          []
                                          None
                                      expression (lib/set.ml[554,17353+14]..lib/set.ml[554,17353+30])
                                        Texp_apply
                                        expression (lib/set.ml[554,17353+14]..lib/set.ml[554,17353+24])
                                          Texp_ident "try_concat/793"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[554,17353+25]..lib/set.ml[554,17353+27])
                                              Texp_ident "l'/805"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[554,17353+28]..lib/set.ml[554,17353+30])
                                              Texp_ident "r'/807"
                                        ]
                                  ]
                      ]
              ]
            structure_item (lib/set.ml[557,17398+4]..lib/set.ml[576,18082+33])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[557,17398+8]..lib/set.ml[557,17398+22])
                    Tpat_var "of_sorted_list/809"
                  expression (lib/set.ml[557,17398+23]..lib/set.ml[576,18082+33]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[557,17398+23]..lib/set.ml[557,17398+24])
                          Tpat_var "l/811"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[558,17425+6]..lib/set.ml[576,18082+33])
                        Texp_let Rec
                        [
                          <def>
                            pattern (lib/set.ml[558,17425+14]..lib/set.ml[558,17425+17])
                              Tpat_var "sub/812"
                            expression (lib/set.ml[558,17425+18]..lib/set.ml[574,18036+36]) ghost
                              Texp_function
                              [
                                Nolabel
                                Param_pat
                                  pattern (lib/set.ml[558,17425+18]..lib/set.ml[558,17425+19])
                                    Tpat_var "n/813"
                                Nolabel
                                Param_pat
                                  pattern (lib/set.ml[558,17425+20]..lib/set.ml[558,17425+21])
                                    Tpat_var "l/814"
                              ]
                              Tfunction_body
                                expression (lib/set.ml[559,17449+8]..lib/set.ml[574,18036+36])
                                  Texp_match
                                  expression (lib/set.ml[559,17449+14]..lib/set.ml[559,17449+18])
                                    Texp_tuple
                                    [
                                      expression (lib/set.ml[559,17449+14]..lib/set.ml[559,17449+15])
                                        Texp_ident "n/813"
                                      expression (lib/set.ml[559,17449+17]..lib/set.ml[559,17449+18])
                                        Texp_ident "l/814"
                                    ]
                                  [
                                    <case>
                                      pattern (lib/set.ml[560,17473+10]..lib/set.ml[560,17473+14])
                                        Tpat_value
                                        pattern (lib/set.ml[560,17473+10]..lib/set.ml[560,17473+14])
                                          Tpat_tuple
                                          [
                                            pattern (lib/set.ml[560,17473+10]..lib/set.ml[560,17473+11])
                                              Tpat_constant Const_int 0
                                            pattern (lib/set.ml[560,17473+13]..lib/set.ml[560,17473+14])
                                              Tpat_var "l/815"
                                          ]
                                      expression (lib/set.ml[560,17473+18]..lib/set.ml[560,17473+26])
                                        Texp_tuple
                                        [
                                          expression (lib/set.ml[560,17473+18]..lib/set.ml[560,17473+23])
                                            Texp_construct "Empty"
                                            []
                                          expression (lib/set.ml[560,17473+25]..lib/set.ml[560,17473+26])
                                            Texp_ident "l/815"
                                        ]
                                    <case>
                                      pattern (lib/set.ml[561,17500+10]..lib/set.ml[561,17500+20])
                                        Tpat_value
                                        pattern (lib/set.ml[561,17500+10]..lib/set.ml[561,17500+20])
                                          Tpat_tuple
                                          [
                                            pattern (lib/set.ml[561,17500+10]..lib/set.ml[561,17500+11])
                                              Tpat_constant Const_int 1
                                            pattern (lib/set.ml[561,17500+13]..lib/set.ml[561,17500+20])
                                              Tpat_construct "::"
                                              [
                                                pattern (lib/set.ml[561,17500+13]..lib/set.ml[561,17500+15])
                                                  Tpat_var "x0/816"
                                                pattern (lib/set.ml[561,17500+19]..lib/set.ml[561,17500+20])
                                                  Tpat_var "l/817"
                                              ]
                                              None
                                          ]
                                      expression (lib/set.ml[561,17500+24]..lib/set.ml[561,17500+61])
                                        Texp_tuple
                                        [
                                          expression (lib/set.ml[561,17500+24]..lib/set.ml[561,17500+58])
                                            Texp_construct "Node"
                                            [
                                              expression (lib/set.ml[561,17500+29]..lib/set.ml[561,17500+58])
                                                Texp_record
                                                  fields =
                                                    [
                                                      "l"
                                                        expression (lib/set.ml[561,17500+32]..lib/set.ml[561,17500+37])
                                                          Texp_construct "Empty"
                                                          []
                                                      "v"
                                                        expression (lib/set.ml[561,17500+41]..lib/set.ml[561,17500+43])
                                                          Texp_ident "x0/816"
                                                      "r"
                                                        expression (lib/set.ml[561,17500+47]..lib/set.ml[561,17500+52])
                                                          Texp_construct "Empty"
                                                          []
                                                      "h"
                                                        expression (lib/set.ml[561,17500+56]..lib/set.ml[561,17500+57])
                                                          Texp_constant Const_int 1
                                                    ]
                                                  representation =
Record_inlined 0
                                                  extended_expression =
                                                    None
                                            ]
                                          expression (lib/set.ml[561,17500+60]..lib/set.ml[561,17500+61])
                                            Texp_ident "l/817"
                                        ]
                                    <case>
                                      pattern (lib/set.ml[562,17562+10]..lib/set.ml[562,17562+26])
                                        Tpat_value
                                        pattern (lib/set.ml[562,17562+10]..lib/set.ml[562,17562+26])
                                          Tpat_tuple
                                          [
                                            pattern (lib/set.ml[562,17562+10]..lib/set.ml[562,17562+11])
                                              Tpat_constant Const_int 2
                                            pattern (lib/set.ml[562,17562+13]..lib/set.ml[562,17562+26])
                                              Tpat_construct "::"
                                              [
                                                pattern (lib/set.ml[562,17562+13]..lib/set.ml[562,17562+15])
                                                  Tpat_var "x0/818"
                                                pattern (lib/set.ml[562,17562+19]..lib/set.ml[562,17562+26])
                                                  Tpat_construct "::"
                                                  [
                                                    pattern (lib/set.ml[562,17562+19]..lib/set.ml[562,17562+21])
                                                      Tpat_var "x1/819"
                                                    pattern (lib/set.ml[562,17562+25]..lib/set.ml[562,17562+26])
                                                      Tpat_var "l/820"
                                                  ]
                                                  None
                                              ]
                                              None
                                          ]
                                      expression (lib/set.ml[563,17592+12]..lib/set.ml[563,17592+76])
                                        Texp_tuple
                                        [
                                          expression (lib/set.ml[563,17592+12]..lib/set.ml[563,17592+73])
                                            Texp_construct "Node"
                                            [
                                              expression (lib/set.ml[563,17592+16]..lib/set.ml[563,17592+73])
                                                Texp_record
                                                  fields =
                                                    [
                                                      "l"
                                                        expression (lib/set.ml[563,17592+19]..lib/set.ml[563,17592+52])
                                                          Texp_construct "Node"
                                                          [
                                                            expression (lib/set.ml[563,17592+23]..lib/set.ml[563,17592+52])
                                                              Texp_record
                                                                fields =
                                                                  [
                                                                    "l"
                                                                      expression (lib/set.ml[563,17592+26]..lib/set.ml[563,17592+31])
                                                                        Texp_construct "Empty"
                                                                        []
                                                                    "v"
                                                                      expression (lib/set.ml[563,17592+35]..lib/set.ml[563,17592+37])
                                                                        Texp_ident "x0/818"
                                                                    "r"
                                                                      expression (lib/set.ml[563,17592+41]..lib/set.ml[563,17592+46])
                                                                        Texp_construct "Empty"
                                                                        []
                                                                    "h"
                                                                      expression (lib/set.ml[563,17592+50]..lib/set.ml[563,17592+51])
                                                                        Texp_constant Const_int 1
                                                                  ]
                                                                representation =
Record_inlined 0
                                                                extended_expression =
                                                                  None
                                                          ]
                                                      "v"
                                                        expression (lib/set.ml[563,17592+56]..lib/set.ml[563,17592+58])
                                                          Texp_ident "x1/819"
                                                      "r"
                                                        expression (lib/set.ml[563,17592+62]..lib/set.ml[563,17592+67])
                                                          Texp_construct "Empty"
                                                          []
                                                      "h"
                                                        expression (lib/set.ml[563,17592+71]..lib/set.ml[563,17592+72])
                                                          Texp_constant Const_int 2
                                                    ]
                                                  representation =
Record_inlined 0
                                                  extended_expression =
                                                    None
                                            ]
                                          expression (lib/set.ml[563,17592+75]..lib/set.ml[563,17592+76])
                                            Texp_ident "l/820"
                                        ]
                                    <case>
                                      pattern (lib/set.ml[564,17669+10]..lib/set.ml[564,17669+32])
                                        Tpat_value
                                        pattern (lib/set.ml[564,17669+10]..lib/set.ml[564,17669+32])
                                          Tpat_tuple
                                          [
                                            pattern (lib/set.ml[564,17669+10]..lib/set.ml[564,17669+11])
                                              Tpat_constant Const_int 3
                                            pattern (lib/set.ml[564,17669+13]..lib/set.ml[564,17669+32])
                                              Tpat_construct "::"
                                              [
                                                pattern (lib/set.ml[564,17669+13]..lib/set.ml[564,17669+15])
                                                  Tpat_var "x0/821"
                                                pattern (lib/set.ml[564,17669+19]..lib/set.ml[564,17669+32])
                                                  Tpat_construct "::"
                                                  [
                                                    pattern (lib/set.ml[564,17669+19]..lib/set.ml[564,17669+21])
                                                      Tpat_var "x1/822"
                                                    pattern (lib/set.ml[564,17669+25]..lib/set.ml[564,17669+32])
                                                      Tpat_construct "::"
                                                      [
                                                        pattern (lib/set.ml[564,17669+25]..lib/set.ml[564,17669+27])
                                                          Tpat_var "x2/823"
                                                        pattern (lib/set.ml[564,17669+31]..lib/set.ml[564,17669+32])
                                                          Tpat_var "l/824"
                                                      ]
                                                      None
                                                  ]
                                                  None
                                              ]
                                              None
                                          ]
                                      expression (lib/set.ml[565,17705+12]..lib/set.ml[566,17765+61])
                                        Texp_tuple
                                        [
                                          expression (lib/set.ml[565,17705+12]..lib/set.ml[566,17765+58])
                                            Texp_construct "Node"
                                            [
                                              expression (lib/set.ml[565,17705+16]..lib/set.ml[566,17765+58])
                                                Texp_record
                                                  fields =
                                                    [
                                                      "l"
                                                        expression (lib/set.ml[565,17705+19]..lib/set.ml[565,17705+52])
                                                          Texp_construct "Node"
                                                          [
                                                            expression (lib/set.ml[565,17705+23]..lib/set.ml[565,17705+52])
                                                              Texp_record
                                                                fields =
                                                                  [
                                                                    "l"
                                                                      expression (lib/set.ml[565,17705+26]..lib/set.ml[565,17705+31])
                                                                        Texp_construct "Empty"
                                                                        []
                                                                    "v"
                                                                      expression (lib/set.ml[565,17705+35]..lib/set.ml[565,17705+37])
                                                                        Texp_ident "x0/821"
                                                                    "r"
                                                                      expression (lib/set.ml[565,17705+41]..lib/set.ml[565,17705+46])
                                                                        Texp_construct "Empty"
                                                                        []
                                                                    "h"
                                                                      expression (lib/set.ml[565,17705+50]..lib/set.ml[565,17705+51])
                                                                        Texp_constant Const_int 1
                                                                  ]
                                                                representation =
Record_inlined 0
                                                                extended_expression =
                                                                  None
                                                          ]
                                                      "v"
                                                        expression (lib/set.ml[565,17705+56]..lib/set.ml[565,17705+58])
                                                          Texp_ident "x1/822"
                                                      "r"
                                                        expression (lib/set.ml[566,17765+19]..lib/set.ml[566,17765+52])
                                                          Texp_construct "Node"
                                                          [
                                                            expression (lib/set.ml[566,17765+23]..lib/set.ml[566,17765+52])
                                                              Texp_record
                                                                fields =
                                                                  [
                                                                    "l"
                                                                      expression (lib/set.ml[566,17765+26]..lib/set.ml[566,17765+31])
                                                                        Texp_construct "Empty"
                                                                        []
                                                                    "v"
                                                                      expression (lib/set.ml[566,17765+35]..lib/set.ml[566,17765+37])
                                                                        Texp_ident "x2/823"
                                                                    "r"
                                                                      expression (lib/set.ml[566,17765+41]..lib/set.ml[566,17765+46])
                                                                        Texp_construct "Empty"
                                                                        []
                                                                    "h"
                                                                      expression (lib/set.ml[566,17765+50]..lib/set.ml[566,17765+51])
                                                                        Texp_constant Const_int 1
                                                                  ]
                                                                representation =
Record_inlined 0
                                                                extended_expression =
                                                                  None
                                                          ]
                                                      "h"
                                                        expression (lib/set.ml[566,17765+56]..lib/set.ml[566,17765+57])
                                                          Texp_constant Const_int 2
                                                    ]
                                                  representation =
Record_inlined 0
                                                  extended_expression =
                                                    None
                                            ]
                                          expression (lib/set.ml[566,17765+60]..lib/set.ml[566,17765+61])
                                            Texp_ident "l/824"
                                        ]
                                    <case>
                                      pattern (lib/set.ml[567,17827+10]..lib/set.ml[567,17827+14])
                                        Tpat_value
                                        pattern (lib/set.ml[567,17827+10]..lib/set.ml[567,17827+14])
                                          Tpat_tuple
                                          [
                                            pattern (lib/set.ml[567,17827+10]..lib/set.ml[567,17827+11])
                                              Tpat_var "n/825"
                                            pattern (lib/set.ml[567,17827+13]..lib/set.ml[567,17827+14])
                                              Tpat_var "l/826"
                                          ]
                                      expression (lib/set.ml[568,17845+10]..lib/set.ml[574,18036+36])
                                        Texp_let Nonrec
                                        [
                                          <def>
                                            pattern (lib/set.ml[568,17845+14]..lib/set.ml[568,17845+16])
                                              Tpat_var "nl/827"
                                            expression (lib/set.ml[568,17845+19]..lib/set.ml[568,17845+24])
                                              Texp_apply
                                              expression (lib/set.ml[568,17845+21]..lib/set.ml[568,17845+22])
                                                Texp_ident "Stdlib!./"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[568,17845+19]..lib/set.ml[568,17845+20])
                                                    Texp_ident "n/825"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[568,17845+23]..lib/set.ml[568,17845+24])
                                                    Texp_constant Const_int 2
                                              ]
                                        ]
                                        expression (lib/set.ml[569,17873+10]..lib/set.ml[574,18036+36])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/set.ml[569,17873+14]..lib/set.ml[569,17873+21])
                                                Tpat_tuple
                                                [
                                                  pattern (lib/set.ml[569,17873+14]..lib/set.ml[569,17873+18])
                                                    Tpat_var "left/828"
                                                  pattern (lib/set.ml[569,17873+20]..lib/set.ml[569,17873+21])
                                                    Tpat_var "l/829"
                                                ]
                                              expression (lib/set.ml[569,17873+24]..lib/set.ml[569,17873+32])
                                                Texp_apply
                                                expression (lib/set.ml[569,17873+24]..lib/set.ml[569,17873+27])
                                                  Texp_ident "sub/812"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[569,17873+28]..lib/set.ml[569,17873+30])
                                                      Texp_ident "nl/827"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[569,17873+31]..lib/set.ml[569,17873+32])
                                                      Texp_ident "l/826"
                                                ]
                                          ]
                                          expression (lib/set.ml[570,17909+10]..lib/set.ml[574,18036+36])
                                            Texp_match
                                            expression (lib/set.ml[570,17909+16]..lib/set.ml[570,17909+17])
                                              Texp_ident "l/829"
                                            [
                                              <case>
                                                pattern (lib/set.ml[571,17932+12]..lib/set.ml[571,17932+14])
                                                  Tpat_value
                                                  pattern (lib/set.ml[571,17932+12]..lib/set.ml[571,17932+14])
                                                    Tpat_construct "[]"
                                                    []
                                                    None
                                                expression (lib/set.ml[571,17932+18]..lib/set.ml[571,17932+30])
                                                  Texp_assert                                                  expression (lib/set.ml[571,17932+25]..lib/set.ml[571,17932+30])
                                                    Texp_construct "false"
                                                    []
                                              <case>
                                                pattern (lib/set.ml[572,17963+12]..lib/set.ml[572,17963+20])
                                                  Tpat_value
                                                  pattern (lib/set.ml[572,17963+12]..lib/set.ml[572,17963+20])
                                                    Tpat_construct "::"
                                                    [
                                                      pattern (lib/set.ml[572,17963+12]..lib/set.ml[572,17963+15])
                                                        Tpat_var "mid/830"
                                                      pattern (lib/set.ml[572,17963+19]..lib/set.ml[572,17963+20])
                                                        Tpat_var "l/831"
                                                    ]
                                                    None
                                                expression (lib/set.ml[573,17987+12]..lib/set.ml[574,18036+36])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/set.ml[573,17987+16]..lib/set.ml[573,17987+24])
                                                        Tpat_tuple
                                                        [
                                                          pattern (lib/set.ml[573,17987+16]..lib/set.ml[573,17987+21])
                                                            Tpat_var "right/832"
                                                          pattern (lib/set.ml[573,17987+23]..lib/set.ml[573,17987+24])
                                                            Tpat_var "l/833"
                                                        ]
                                                      expression (lib/set.ml[573,17987+27]..lib/set.ml[573,17987+45])
                                                        Texp_apply
                                                        expression (lib/set.ml[573,17987+27]..lib/set.ml[573,17987+30])
                                                          Texp_ident "sub/812"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/set.ml[573,17987+31]..lib/set.ml[573,17987+43])
                                                              Texp_apply
                                                              expression (lib/set.ml[573,17987+39]..lib/set.ml[573,17987+40])
                                                                Texp_ident "Stdlib!.-"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/set.ml[573,17987+32]..lib/set.ml[573,17987+38])
                                                                    Texp_apply
                                                                    expression (lib/set.ml[573,17987+34]..lib/set.ml[573,17987+35])
                                                                      Texp_ident "Stdlib!.-"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/set.ml[573,17987+32]..lib/set.ml[573,17987+33])
                                                                          Texp_ident "n/825"
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/set.ml[573,17987+36]..lib/set.ml[573,17987+38])
                                                                          Texp_ident "nl/827"
                                                                    ]
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/set.ml[573,17987+41]..lib/set.ml[573,17987+42])
                                                                    Texp_constant Const_int 1
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/set.ml[573,17987+44]..lib/set.ml[573,17987+45])
                                                              Texp_ident "l/831"
                                                        ]
                                                  ]
                                                  expression (lib/set.ml[574,18036+12]..lib/set.ml[574,18036+36])
                                                    Texp_tuple
                                                    [
                                                      expression (lib/set.ml[574,18036+12]..lib/set.ml[574,18036+33])
                                                        Texp_apply
                                                        expression (lib/set.ml[574,18036+12]..lib/set.ml[574,18036+18])
                                                          Texp_ident "create/418"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/set.ml[574,18036+19]..lib/set.ml[574,18036+23])
                                                              Texp_ident "left/828"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/set.ml[574,18036+24]..lib/set.ml[574,18036+27])
                                                              Texp_ident "mid/830"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/set.ml[574,18036+28]..lib/set.ml[574,18036+33])
                                                              Texp_ident "right/832"
                                                        ]
                                                      expression (lib/set.ml[574,18036+35]..lib/set.ml[574,18036+36])
                                                        Texp_ident "l/833"
                                                    ]
                                            ]
                                  ]
                        ]
                        expression (lib/set.ml[576,18082+6]..lib/set.ml[576,18082+33])
                          Texp_apply
                          expression (lib/set.ml[576,18082+6]..lib/set.ml[576,18082+9])
                            Texp_ident "Stdlib!.fst"
                          [
                            <arg>
                              Nolabel
                              expression (lib/set.ml[576,18082+10]..lib/set.ml[576,18082+33])
                                Texp_apply
                                expression (lib/set.ml[576,18082+11]..lib/set.ml[576,18082+14])
                                  Texp_ident "sub/812"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[576,18082+15]..lib/set.ml[576,18082+30])
                                      Texp_apply
                                      expression (lib/set.ml[576,18082+16]..lib/set.ml[576,18082+27])
                                        Texp_ident "Stdlib!.List.length"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/set.ml[576,18082+28]..lib/set.ml[576,18082+29])
                                            Texp_ident "l/811"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[576,18082+31]..lib/set.ml[576,18082+32])
                                      Texp_ident "l/811"
                                ]
                          ]
              ]
            structure_item (lib/set.ml[578,18117+4]..lib/set.ml[578,18117+26])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[578,18117+8]..lib/set.ml[578,18117+15])
                    Tpat_var "to_list/900"
                  expression (lib/set.ml[578,18117+18]..lib/set.ml[578,18117+26])
                    Texp_ident "elements/708"
              ]
            structure_item (lib/set.ml[580,18145+4]..lib/set.ml[588,18479+58])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[580,18145+8]..lib/set.ml[580,18145+15])
                    Tpat_var "of_list/901"
                  expression (lib/set.ml[580,18145+16]..lib/set.ml[588,18479+58]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[580,18145+16]..lib/set.ml[580,18145+17])
                          Tpat_var "l/903"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[581,18165+6]..lib/set.ml[588,18479+58])
                        Texp_match
                        expression (lib/set.ml[581,18165+12]..lib/set.ml[581,18165+13])
                          Texp_ident "l/903"
                        [
                          <case>
                            pattern (lib/set.ml[582,18184+8]..lib/set.ml[582,18184+10])
                              Tpat_value
                              pattern (lib/set.ml[582,18184+8]..lib/set.ml[582,18184+10])
                                Tpat_construct "[]"
                                []
                                None
                            expression (lib/set.ml[582,18184+14]..lib/set.ml[582,18184+19])
                              Texp_ident "empty/531"
                          <case>
                            pattern (lib/set.ml[583,18204+8]..lib/set.ml[583,18204+12])
                              Tpat_value
                              pattern (lib/set.ml[583,18204+8]..lib/set.ml[583,18204+12])
                                Tpat_construct "::"
                                [
                                  pattern (lib/set.ml[583,18204+9]..lib/set.ml[583,18204+11])
                                    Tpat_var "x0/904"
                                  pattern (lib/set.ml[583,18204+11]..lib/set.ml[583,18204+12]) ghost
                                    Tpat_construct "[]"
                                    []
                                    None
                                ]
                                None
                            expression (lib/set.ml[583,18204+16]..lib/set.ml[583,18204+28])
                              Texp_apply
                              expression (lib/set.ml[583,18204+16]..lib/set.ml[583,18204+25])
                                Texp_ident "singleton/457"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[583,18204+26]..lib/set.ml[583,18204+28])
                                    Texp_ident "x0/904"
                              ]
                          <case>
                            pattern (lib/set.ml[584,18233+8]..lib/set.ml[584,18233+16])
                              Tpat_value
                              pattern (lib/set.ml[584,18233+8]..lib/set.ml[584,18233+16])
                                Tpat_construct "::"
                                [
                                  pattern (lib/set.ml[584,18233+9]..lib/set.ml[584,18233+11])
                                    Tpat_var "x0/905"
                                  pattern (lib/set.ml[584,18233+13]..lib/set.ml[584,18233+16]) ghost
                                    Tpat_construct "::"
                                    [
                                      pattern (lib/set.ml[584,18233+13]..lib/set.ml[584,18233+15])
                                        Tpat_var "x1/906"
                                      pattern (lib/set.ml[584,18233+15]..lib/set.ml[584,18233+16]) ghost
                                        Tpat_construct "[]"
                                        []
                                        None
                                    ]
                                    None
                                ]
                                None
                            expression (lib/set.ml[584,18233+20]..lib/set.ml[584,18233+41])
                              Texp_apply
                              expression (lib/set.ml[584,18233+20]..lib/set.ml[584,18233+23])
                                Texp_ident "add/448"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[584,18233+24]..lib/set.ml[584,18233+26])
                                    Texp_ident "x1/906"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[584,18233+27]..lib/set.ml[584,18233+41])
                                    Texp_apply
                                    expression (lib/set.ml[584,18233+28]..lib/set.ml[584,18233+37])
                                      Texp_ident "singleton/457"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[584,18233+38]..lib/set.ml[584,18233+40])
                                          Texp_ident "x0/905"
                                    ]
                              ]
                          <case>
                            pattern (lib/set.ml[585,18275+8]..lib/set.ml[585,18275+20])
                              Tpat_value
                              pattern (lib/set.ml[585,18275+8]..lib/set.ml[585,18275+20])
                                Tpat_construct "::"
                                [
                                  pattern (lib/set.ml[585,18275+9]..lib/set.ml[585,18275+11])
                                    Tpat_var "x0/907"
                                  pattern (lib/set.ml[585,18275+13]..lib/set.ml[585,18275+20]) ghost
                                    Tpat_construct "::"
                                    [
                                      pattern (lib/set.ml[585,18275+13]..lib/set.ml[585,18275+15])
                                        Tpat_var "x1/908"
                                      pattern (lib/set.ml[585,18275+17]..lib/set.ml[585,18275+20]) ghost
                                        Tpat_construct "::"
                                        [
                                          pattern (lib/set.ml[585,18275+17]..lib/set.ml[585,18275+19])
                                            Tpat_var "x2/909"
                                          pattern (lib/set.ml[585,18275+19]..lib/set.ml[585,18275+20]) ghost
                                            Tpat_construct "[]"
                                            []
                                            None
                                        ]
                                        None
                                    ]
                                    None
                                ]
                                None
                            expression (lib/set.ml[585,18275+24]..lib/set.ml[585,18275+54])
                              Texp_apply
                              expression (lib/set.ml[585,18275+24]..lib/set.ml[585,18275+27])
                                Texp_ident "add/448"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[585,18275+28]..lib/set.ml[585,18275+30])
                                    Texp_ident "x2/909"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[585,18275+31]..lib/set.ml[585,18275+54])
                                    Texp_apply
                                    expression (lib/set.ml[585,18275+32]..lib/set.ml[585,18275+35])
                                      Texp_ident "add/448"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[585,18275+36]..lib/set.ml[585,18275+38])
                                          Texp_ident "x1/908"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[585,18275+39]..lib/set.ml[585,18275+53])
                                          Texp_apply
                                          expression (lib/set.ml[585,18275+40]..lib/set.ml[585,18275+49])
                                            Texp_ident "singleton/457"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[585,18275+50]..lib/set.ml[585,18275+52])
                                                Texp_ident "x0/907"
                                          ]
                                    ]
                              ]
                          <case>
                            pattern (lib/set.ml[586,18330+8]..lib/set.ml[586,18330+24])
                              Tpat_value
                              pattern (lib/set.ml[586,18330+8]..lib/set.ml[586,18330+24])
                                Tpat_construct "::"
                                [
                                  pattern (lib/set.ml[586,18330+9]..lib/set.ml[586,18330+11])
                                    Tpat_var "x0/910"
                                  pattern (lib/set.ml[586,18330+13]..lib/set.ml[586,18330+24]) ghost
                                    Tpat_construct "::"
                                    [
                                      pattern (lib/set.ml[586,18330+13]..lib/set.ml[586,18330+15])
                                        Tpat_var "x1/911"
                                      pattern (lib/set.ml[586,18330+17]..lib/set.ml[586,18330+24]) ghost
                                        Tpat_construct "::"
                                        [
                                          pattern (lib/set.ml[586,18330+17]..lib/set.ml[586,18330+19])
                                            Tpat_var "x2/912"
                                          pattern (lib/set.ml[586,18330+21]..lib/set.ml[586,18330+24]) ghost
                                            Tpat_construct "::"
                                            [
                                              pattern (lib/set.ml[586,18330+21]..lib/set.ml[586,18330+23])
                                                Tpat_var "x3/913"
                                              pattern (lib/set.ml[586,18330+23]..lib/set.ml[586,18330+24]) ghost
                                                Tpat_construct "[]"
                                                []
                                                None
                                            ]
                                            None
                                        ]
                                        None
                                    ]
                                    None
                                ]
                                None
                            expression (lib/set.ml[586,18330+28]..lib/set.ml[586,18330+67])
                              Texp_apply
                              expression (lib/set.ml[586,18330+28]..lib/set.ml[586,18330+31])
                                Texp_ident "add/448"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[586,18330+32]..lib/set.ml[586,18330+34])
                                    Texp_ident "x3/913"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[586,18330+35]..lib/set.ml[586,18330+67])
                                    Texp_apply
                                    expression (lib/set.ml[586,18330+36]..lib/set.ml[586,18330+39])
                                      Texp_ident "add/448"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[586,18330+40]..lib/set.ml[586,18330+42])
                                          Texp_ident "x2/912"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[586,18330+43]..lib/set.ml[586,18330+66])
                                          Texp_apply
                                          expression (lib/set.ml[586,18330+44]..lib/set.ml[586,18330+47])
                                            Texp_ident "add/448"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[586,18330+48]..lib/set.ml[586,18330+50])
                                                Texp_ident "x1/911"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[586,18330+51]..lib/set.ml[586,18330+65])
                                                Texp_apply
                                                expression (lib/set.ml[586,18330+52]..lib/set.ml[586,18330+61])
                                                  Texp_ident "singleton/457"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[586,18330+62]..lib/set.ml[586,18330+64])
                                                      Texp_ident "x0/910"
                                                ]
                                          ]
                                    ]
                              ]
                          <case>
                            pattern (lib/set.ml[587,18398+8]..lib/set.ml[587,18398+28])
                              Tpat_value
                              pattern (lib/set.ml[587,18398+8]..lib/set.ml[587,18398+28])
                                Tpat_construct "::"
                                [
                                  pattern (lib/set.ml[587,18398+9]..lib/set.ml[587,18398+11])
                                    Tpat_var "x0/914"
                                  pattern (lib/set.ml[587,18398+13]..lib/set.ml[587,18398+28]) ghost
                                    Tpat_construct "::"
                                    [
                                      pattern (lib/set.ml[587,18398+13]..lib/set.ml[587,18398+15])
                                        Tpat_var "x1/915"
                                      pattern (lib/set.ml[587,18398+17]..lib/set.ml[587,18398+28]) ghost
                                        Tpat_construct "::"
                                        [
                                          pattern (lib/set.ml[587,18398+17]..lib/set.ml[587,18398+19])
                                            Tpat_var "x2/916"
                                          pattern (lib/set.ml[587,18398+21]..lib/set.ml[587,18398+28]) ghost
                                            Tpat_construct "::"
                                            [
                                              pattern (lib/set.ml[587,18398+21]..lib/set.ml[587,18398+23])
                                                Tpat_var "x3/917"
                                              pattern (lib/set.ml[587,18398+25]..lib/set.ml[587,18398+28]) ghost
                                                Tpat_construct "::"
                                                [
                                                  pattern (lib/set.ml[587,18398+25]..lib/set.ml[587,18398+27])
                                                    Tpat_var "x4/918"
                                                  pattern (lib/set.ml[587,18398+27]..lib/set.ml[587,18398+28]) ghost
                                                    Tpat_construct "[]"
                                                    []
                                                    None
                                                ]
                                                None
                                            ]
                                            None
                                        ]
                                        None
                                    ]
                                    None
                                ]
                                None
                            expression (lib/set.ml[587,18398+32]..lib/set.ml[587,18398+80])
                              Texp_apply
                              expression (lib/set.ml[587,18398+32]..lib/set.ml[587,18398+35])
                                Texp_ident "add/448"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[587,18398+36]..lib/set.ml[587,18398+38])
                                    Texp_ident "x4/918"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[587,18398+39]..lib/set.ml[587,18398+80])
                                    Texp_apply
                                    expression (lib/set.ml[587,18398+40]..lib/set.ml[587,18398+43])
                                      Texp_ident "add/448"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[587,18398+44]..lib/set.ml[587,18398+46])
                                          Texp_ident "x3/917"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[587,18398+47]..lib/set.ml[587,18398+79])
                                          Texp_apply
                                          expression (lib/set.ml[587,18398+48]..lib/set.ml[587,18398+51])
                                            Texp_ident "add/448"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[587,18398+52]..lib/set.ml[587,18398+54])
                                                Texp_ident "x2/916"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[587,18398+55]..lib/set.ml[587,18398+78])
                                                Texp_apply
                                                expression (lib/set.ml[587,18398+56]..lib/set.ml[587,18398+59])
                                                  Texp_ident "add/448"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[587,18398+60]..lib/set.ml[587,18398+62])
                                                      Texp_ident "x1/915"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[587,18398+63]..lib/set.ml[587,18398+77])
                                                      Texp_apply
                                                      expression (lib/set.ml[587,18398+64]..lib/set.ml[587,18398+73])
                                                        Texp_ident "singleton/457"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/set.ml[587,18398+74]..lib/set.ml[587,18398+76])
                                                            Texp_ident "x0/914"
                                                      ]
                                                ]
                                          ]
                                    ]
                              ]
                          <case>
                            pattern (lib/set.ml[588,18479+8]..lib/set.ml[588,18479+9])
                              Tpat_value
                              pattern (lib/set.ml[588,18479+8]..lib/set.ml[588,18479+9])
                                Tpat_any
                            expression (lib/set.ml[588,18479+13]..lib/set.ml[588,18479+58])
                              Texp_apply
                              expression (lib/set.ml[588,18479+13]..lib/set.ml[588,18479+27])
                                Texp_ident "of_sorted_list/809"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[588,18479+28]..lib/set.ml[588,18479+58])
                                    Texp_apply
                                    expression (lib/set.ml[588,18479+29]..lib/set.ml[588,18479+43])
                                      Texp_ident "Stdlib!.List.sort_uniq"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[588,18479+44]..lib/set.ml[588,18479+55])
                                          Texp_ident "Ord/405.compare"
                                      <arg>
                                        Nolabel
                                        expression (lib/set.ml[588,18479+56]..lib/set.ml[588,18479+57])
                                          Texp_ident "l/903"
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[590,18539+4]..lib/set.ml[591,18561+44])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[590,18539+8]..lib/set.ml[590,18539+15])
                    Tpat_var "add_seq/919"
                  expression (lib/set.ml[590,18539+16]..lib/set.ml[591,18561+44]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[590,18539+16]..lib/set.ml[590,18539+17])
                          Tpat_var "i/921"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[590,18539+18]..lib/set.ml[590,18539+19])
                          Tpat_var "m/922"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[591,18561+6]..lib/set.ml[591,18561+44])
                        Texp_apply
                        expression (lib/set.ml[591,18561+6]..lib/set.ml[591,18561+19])
                          Texp_ident "Stdlib!.Seq.fold_left"
                        [
                          <arg>
                            Nolabel
                            expression (lib/set.ml[591,18561+20]..lib/set.ml[591,18561+40])
                              Texp_function
                              [
                                Nolabel
                                Param_pat
                                  pattern (lib/set.ml[591,18561+25]..lib/set.ml[591,18561+26])
                                    Tpat_var "s/923"
                                Nolabel
                                Param_pat
                                  pattern (lib/set.ml[591,18561+27]..lib/set.ml[591,18561+28])
                                    Tpat_var "x/924"
                              ]
                              Tfunction_body
                                expression (lib/set.ml[591,18561+32]..lib/set.ml[591,18561+39])
                                  Texp_apply
                                  expression (lib/set.ml[591,18561+32]..lib/set.ml[591,18561+35])
                                    Texp_ident "add/448"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[591,18561+36]..lib/set.ml[591,18561+37])
                                        Texp_ident "x/924"
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[591,18561+38]..lib/set.ml[591,18561+39])
                                        Texp_ident "s/923"
                                  ]
                          <arg>
                            Nolabel
                            expression (lib/set.ml[591,18561+41]..lib/set.ml[591,18561+42])
                              Texp_ident "m/922"
                          <arg>
                            Nolabel
                            expression (lib/set.ml[591,18561+43]..lib/set.ml[591,18561+44])
                              Texp_ident "i/921"
                        ]
              ]
            structure_item (lib/set.ml[593,18607+4]..lib/set.ml[593,18607+34])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[593,18607+8]..lib/set.ml[593,18607+14])
                    Tpat_var "of_seq/986"
                  expression (lib/set.ml[593,18607+15]..lib/set.ml[593,18607+34]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[593,18607+15]..lib/set.ml[593,18607+16])
                          Tpat_var "i/988"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[593,18607+19]..lib/set.ml[593,18607+34])
                        Texp_apply
                        expression (lib/set.ml[593,18607+19]..lib/set.ml[593,18607+26])
                          Texp_ident "add_seq/919"
                        [
                          <arg>
                            Nolabel
                            expression (lib/set.ml[593,18607+27]..lib/set.ml[593,18607+28])
                              Texp_ident "i/988"
                          <arg>
                            Nolabel
                            expression (lib/set.ml[593,18607+29]..lib/set.ml[593,18607+34])
                              Texp_ident "empty/531"
                        ]
              ]
            structure_item (lib/set.ml[595,18643+4]..lib/set.ml[597,18711+74])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[595,18643+12]..lib/set.ml[595,18643+24])
                    Tpat_var "seq_of_enum_/989"
                  expression (lib/set.ml[595,18643+25]..lib/set.ml[597,18711+74]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[595,18643+25]..lib/set.ml[595,18643+26])
                          Tpat_var "c/990"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[595,18643+27]..lib/set.ml[595,18643+29])
                          Tpat_construct "()"
                          []
                          None
                    ]
                    Tfunction_body
                      expression (lib/set.ml[595,18643+32]..lib/set.ml[597,18711+74])
                        Texp_match
                        expression (lib/set.ml[595,18643+38]..lib/set.ml[595,18643+39])
                          Texp_ident "c/990"
                        [
                          <case>
                            pattern (lib/set.ml[596,18688+8]..lib/set.ml[596,18688+11])
                              Tpat_value
                              pattern (lib/set.ml[596,18688+8]..lib/set.ml[596,18688+11])
                                Tpat_construct "End"
                                []
                                None
                            expression (lib/set.ml[596,18688+15]..lib/set.ml[596,18688+22])
                              Texp_construct "Seq.Nil"
                              []
                          <case>
                            pattern (lib/set.ml[597,18711+8]..lib/set.ml[597,18711+25])
                              Tpat_value
                              pattern (lib/set.ml[597,18711+8]..lib/set.ml[597,18711+25])
                                Tpat_construct "More"
                                [
                                  pattern (lib/set.ml[597,18711+14]..lib/set.ml[597,18711+15])
                                    Tpat_var "x/991"
                                  pattern (lib/set.ml[597,18711+17]..lib/set.ml[597,18711+18])
                                    Tpat_var "t/992"
                                  pattern (lib/set.ml[597,18711+20]..lib/set.ml[597,18711+24])
                                    Tpat_var "rest/993"
                                ]
                                None
                            expression (lib/set.ml[597,18711+29]..lib/set.ml[597,18711+74])
                              Texp_construct "Seq.Cons"
                              [
                                expression (lib/set.ml[597,18711+39]..lib/set.ml[597,18711+40])
                                  Texp_ident "x/991"
                                expression (lib/set.ml[597,18711+42]..lib/set.ml[597,18711+73])
                                  Texp_apply
                                  expression (lib/set.ml[597,18711+42]..lib/set.ml[597,18711+54])
                                    Texp_ident "seq_of_enum_/989"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[597,18711+55]..lib/set.ml[597,18711+73])
                                        Texp_apply
                                        expression (lib/set.ml[597,18711+56]..lib/set.ml[597,18711+65])
                                          Texp_ident "cons_enum/619"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[597,18711+66]..lib/set.ml[597,18711+67])
                                              Texp_ident "t/992"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[597,18711+68]..lib/set.ml[597,18711+72])
                                              Texp_ident "rest/993"
                                        ]
                                  ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[599,18787+4]..lib/set.ml[599,18787+49])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[599,18787+8]..lib/set.ml[599,18787+14])
                    Tpat_var "to_seq/995"
                  expression (lib/set.ml[599,18787+15]..lib/set.ml[599,18787+49]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[599,18787+15]..lib/set.ml[599,18787+16])
                          Tpat_var "c/997"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[599,18787+19]..lib/set.ml[599,18787+49])
                        Texp_apply
                        expression (lib/set.ml[599,18787+19]..lib/set.ml[599,18787+31])
                          Texp_ident "seq_of_enum_/989"
                        [
                          <arg>
                            Nolabel
                            expression (lib/set.ml[599,18787+32]..lib/set.ml[599,18787+49])
                              Texp_apply
                              expression (lib/set.ml[599,18787+33]..lib/set.ml[599,18787+42])
                                Texp_ident "cons_enum/619"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[599,18787+43]..lib/set.ml[599,18787+44])
                                    Texp_ident "c/997"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[599,18787+45]..lib/set.ml[599,18787+48])
                                    Texp_construct "End"
                                    []
                              ]
                        ]
              ]
            structure_item (lib/set.ml[601,18838+4]..lib/set.ml[604,18904+52])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[601,18838+12]..lib/set.ml[601,18838+21])
                    Tpat_var "snoc_enum/998"
                  expression (lib/set.ml[601,18838+22]..lib/set.ml[604,18904+52]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[601,18838+22]..lib/set.ml[601,18838+23])
                          Tpat_var "s/999"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[601,18838+24]..lib/set.ml[601,18838+25])
                          Tpat_var "e/1000"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[602,18866+6]..lib/set.ml[604,18904+52])
                        Texp_match
                        expression (lib/set.ml[602,18866+12]..lib/set.ml[602,18866+13])
                          Texp_ident "s/999"
                        [
                          <case>
                            pattern (lib/set.ml[603,18885+8]..lib/set.ml[603,18885+13])
                              Tpat_value
                              pattern (lib/set.ml[603,18885+8]..lib/set.ml[603,18885+13])
                                Tpat_construct "Empty"
                                []
                                None
                            expression (lib/set.ml[603,18885+17]..lib/set.ml[603,18885+18])
                              Texp_ident "e/1000"
                          <case>
                            pattern (lib/set.ml[604,18904+8]..lib/set.ml[604,18904+21])
                              Tpat_value
                              pattern (lib/set.ml[604,18904+8]..lib/set.ml[604,18904+21])
                                Tpat_construct "Node"
                                [
                                  pattern (lib/set.ml[604,18904+12]..lib/set.ml[604,18904+21])
                                    Tpat_record
                                    [
                                      "l"
                                        pattern (lib/set.ml[604,18904+13]..lib/set.ml[604,18904+14])
                                          Tpat_var "l/1001"
                                      "v"
                                        pattern (lib/set.ml[604,18904+16]..lib/set.ml[604,18904+17])
                                          Tpat_var "v/1002"
                                      "r"
                                        pattern (lib/set.ml[604,18904+19]..lib/set.ml[604,18904+20])
                                          Tpat_var "r/1003"
                                    ]
                                ]
                                None
                            expression (lib/set.ml[604,18904+25]..lib/set.ml[604,18904+52])
                              Texp_apply
                              expression (lib/set.ml[604,18904+25]..lib/set.ml[604,18904+34])
                                Texp_ident "snoc_enum/998"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[604,18904+35]..lib/set.ml[604,18904+36])
                                    Texp_ident "r/1003"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[604,18904+37]..lib/set.ml[604,18904+52])
                                    Texp_construct "More"
                                    [
                                      expression (lib/set.ml[604,18904+43]..lib/set.ml[604,18904+44])
                                        Texp_ident "v/1002"
                                      expression (lib/set.ml[604,18904+46]..lib/set.ml[604,18904+47])
                                        Texp_ident "l/1001"
                                      expression (lib/set.ml[604,18904+49]..lib/set.ml[604,18904+50])
                                        Texp_ident "e/1000"
                                    ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[606,18958+4]..lib/set.ml[608,19030+78])
              Tstr_value Rec
              [
                <def>
                  pattern (lib/set.ml[606,18958+12]..lib/set.ml[606,18958+28])
                    Tpat_var "rev_seq_of_enum_/1004"
                  expression (lib/set.ml[606,18958+29]..lib/set.ml[608,19030+78]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[606,18958+29]..lib/set.ml[606,18958+30])
                          Tpat_var "c/1005"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[606,18958+31]..lib/set.ml[606,18958+33])
                          Tpat_construct "()"
                          []
                          None
                    ]
                    Tfunction_body
                      expression (lib/set.ml[606,18958+36]..lib/set.ml[608,19030+78])
                        Texp_match
                        expression (lib/set.ml[606,18958+42]..lib/set.ml[606,18958+43])
                          Texp_ident "c/1005"
                        [
                          <case>
                            pattern (lib/set.ml[607,19007+8]..lib/set.ml[607,19007+11])
                              Tpat_value
                              pattern (lib/set.ml[607,19007+8]..lib/set.ml[607,19007+11])
                                Tpat_construct "End"
                                []
                                None
                            expression (lib/set.ml[607,19007+15]..lib/set.ml[607,19007+22])
                              Texp_construct "Seq.Nil"
                              []
                          <case>
                            pattern (lib/set.ml[608,19030+8]..lib/set.ml[608,19030+25])
                              Tpat_value
                              pattern (lib/set.ml[608,19030+8]..lib/set.ml[608,19030+25])
                                Tpat_construct "More"
                                [
                                  pattern (lib/set.ml[608,19030+14]..lib/set.ml[608,19030+15])
                                    Tpat_var "x/1006"
                                  pattern (lib/set.ml[608,19030+17]..lib/set.ml[608,19030+18])
                                    Tpat_var "t/1007"
                                  pattern (lib/set.ml[608,19030+20]..lib/set.ml[608,19030+24])
                                    Tpat_var "rest/1008"
                                ]
                                None
                            expression (lib/set.ml[608,19030+29]..lib/set.ml[608,19030+78])
                              Texp_construct "Seq.Cons"
                              [
                                expression (lib/set.ml[608,19030+39]..lib/set.ml[608,19030+40])
                                  Texp_ident "x/1006"
                                expression (lib/set.ml[608,19030+42]..lib/set.ml[608,19030+77])
                                  Texp_apply
                                  expression (lib/set.ml[608,19030+42]..lib/set.ml[608,19030+58])
                                    Texp_ident "rev_seq_of_enum_/1004"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/set.ml[608,19030+59]..lib/set.ml[608,19030+77])
                                        Texp_apply
                                        expression (lib/set.ml[608,19030+60]..lib/set.ml[608,19030+69])
                                          Texp_ident "snoc_enum/998"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[608,19030+70]..lib/set.ml[608,19030+71])
                                              Texp_ident "t/1007"
                                          <arg>
                                            Nolabel
                                            expression (lib/set.ml[608,19030+72]..lib/set.ml[608,19030+76])
                                              Texp_ident "rest/1008"
                                        ]
                                  ]
                              ]
                        ]
              ]
            structure_item (lib/set.ml[610,19110+4]..lib/set.ml[610,19110+57])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[610,19110+8]..lib/set.ml[610,19110+18])
                    Tpat_var "to_rev_seq/1010"
                  expression (lib/set.ml[610,19110+19]..lib/set.ml[610,19110+57]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[610,19110+19]..lib/set.ml[610,19110+20])
                          Tpat_var "c/1012"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[610,19110+23]..lib/set.ml[610,19110+57])
                        Texp_apply
                        expression (lib/set.ml[610,19110+23]..lib/set.ml[610,19110+39])
                          Texp_ident "rev_seq_of_enum_/1004"
                        [
                          <arg>
                            Nolabel
                            expression (lib/set.ml[610,19110+40]..lib/set.ml[610,19110+57])
                              Texp_apply
                              expression (lib/set.ml[610,19110+41]..lib/set.ml[610,19110+50])
                                Texp_ident "snoc_enum/998"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[610,19110+51]..lib/set.ml[610,19110+52])
                                    Texp_ident "c/1012"
                                <arg>
                                  Nolabel
                                  expression (lib/set.ml[610,19110+53]..lib/set.ml[610,19110+56])
                                    Texp_construct "End"
                                    []
                              ]
                        ]
              ]
            structure_item (lib/set.ml[612,19169+4]..lib/set.ml[622,19488+34])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/set.ml[612,19169+8]..lib/set.ml[612,19169+19])
                    Tpat_var "to_seq_from/1013"
                  expression (lib/set.ml[612,19169+20]..lib/set.ml[622,19488+34]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[612,19169+20]..lib/set.ml[612,19169+23])
                          Tpat_var "low/1015"
                      Nolabel
                      Param_pat
                        pattern (lib/set.ml[612,19169+24]..lib/set.ml[612,19169+25])
                          Tpat_var "s/1016"
                    ]
                    Tfunction_body
                      expression (lib/set.ml[613,19197+6]..lib/set.ml[622,19488+34])
                        Texp_let Rec
                        [
                          <def>
                            pattern (lib/set.ml[613,19197+14]..lib/set.ml[613,19197+17])
                              Tpat_var "aux/1017"
                            expression (lib/set.ml[613,19197+18]..lib/set.ml[620,19463+15]) ghost
                              Texp_function
                              [
                                Nolabel
                                Param_pat
                                  pattern (lib/set.ml[613,19197+18]..lib/set.ml[613,19197+21])
                                    Tpat_var "low/1018"
                                Nolabel
                                Param_pat
                                  pattern (lib/set.ml[613,19197+22]..lib/set.ml[613,19197+23])
                                    Tpat_var "s/1019"
                                Nolabel
                                Param_pat
                                  pattern (lib/set.ml[613,19197+24]..lib/set.ml[613,19197+25])
                                    Tpat_var "c/1020"
                              ]
                              Tfunction_body
                                expression (lib/set.ml[613,19197+28]..lib/set.ml[620,19463+15])
                                  Texp_match
                                  expression (lib/set.ml[613,19197+34]..lib/set.ml[613,19197+35])
                                    Texp_ident "s/1019"
                                  [
                                    <case>
                                      pattern (lib/set.ml[614,19238+10]..lib/set.ml[614,19238+15])
                                        Tpat_value
                                        pattern (lib/set.ml[614,19238+10]..lib/set.ml[614,19238+15])
                                          Tpat_construct "Empty"
                                          []
                                          None
                                      expression (lib/set.ml[614,19238+19]..lib/set.ml[614,19238+20])
                                        Texp_ident "c/1020"
                                    <case>
                                      pattern (lib/set.ml[615,19259+10]..lib/set.ml[615,19259+27])
                                        Tpat_value
                                        pattern (lib/set.ml[615,19259+10]..lib/set.ml[615,19259+27])
                                          Tpat_construct "Node"
                                          [
                                            pattern (lib/set.ml[615,19259+15]..lib/set.ml[615,19259+27])
                                              Tpat_record
                                              [
                                                "l"
                                                  pattern (lib/set.ml[615,19259+16]..lib/set.ml[615,19259+17])
                                                    Tpat_var "l/1021"
                                                "v"
                                                  pattern (lib/set.ml[615,19259+22]..lib/set.ml[615,19259+23])
                                                    Tpat_var "v/1022"
                                                "r"
                                                  pattern (lib/set.ml[615,19259+19]..lib/set.ml[615,19259+20])
                                                    Tpat_var "r/1023"
                                              ]
                                          ]
                                          None
                                      expression (lib/set.ml[616,19290+12]..lib/set.ml[620,19463+15])
                                        Texp_match
                                        expression (lib/set.ml[616,19290+24]..lib/set.ml[616,19290+41])
                                          Texp_apply
                                          expression (lib/set.ml[616,19290+24]..lib/set.ml[616,19290+35])
                                            Texp_ident "Ord/405.compare"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[616,19290+36]..lib/set.ml[616,19290+37])
                                                Texp_ident "v/1022"
                                            <arg>
                                              Nolabel
                                              expression (lib/set.ml[616,19290+38]..lib/set.ml[616,19290+41])
                                                Texp_ident "low/1018"
                                          ]
                                        [
                                          <case>
                                            pattern (lib/set.ml[617,19337+16]..lib/set.ml[617,19337+17])
                                              Tpat_value
                                              pattern (lib/set.ml[617,19337+16]..lib/set.ml[617,19337+17])
                                                Tpat_constant Const_int 0
                                            expression (lib/set.ml[617,19337+21]..lib/set.ml[617,19337+35])
                                              Texp_construct "More"
                                              [
                                                expression (lib/set.ml[617,19337+27]..lib/set.ml[617,19337+28])
                                                  Texp_ident "v/1022"
                                                expression (lib/set.ml[617,19337+30]..lib/set.ml[617,19337+31])
                                                  Texp_ident "r/1023"
                                                expression (lib/set.ml[617,19337+33]..lib/set.ml[617,19337+34])
                                                  Texp_ident "c/1020"
                                              ]
                                          <case>
                                            pattern (lib/set.ml[618,19373+16]..lib/set.ml[618,19373+17])
                                              Tpat_value
                                              pattern (lib/set.ml[618,19373+16]..lib/set.ml[618,19373+17])
                                                Tpat_var "n/1024"
                                            <when>
                                              expression (lib/set.ml[618,19373+23]..lib/set.ml[618,19373+26])
                                                Texp_apply
                                                expression (lib/set.ml[618,19373+24]..lib/set.ml[618,19373+25])
                                                  Texp_ident "Stdlib!.<"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[618,19373+23]..lib/set.ml[618,19373+24])
                                                      Texp_ident "n/1024"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/set.ml[618,19373+25]..lib/set.ml[618,19373+26])
                                                      Texp_constant Const_int 0
                                                ]
                                            expression (lib/set.ml[618,19373+30]..lib/set.ml[618,19373+41])
                                              Texp_apply
                                              expression (lib/set.ml[618,19373+30]..lib/set.ml[618,19373+33])
                                                Texp_ident "aux/1017"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[618,19373+34]..lib/set.ml[618,19373+37])
                                                    Texp_ident "low/1018"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[618,19373+38]..lib/set.ml[618,19373+39])
                                                    Texp_ident "r/1023"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[618,19373+40]..lib/set.ml[618,19373+41])
                                                    Texp_ident "c/1020"
                                              ]
                                          <case>
                                            pattern (lib/set.ml[619,19415+16]..lib/set.ml[619,19415+17])
                                              Tpat_value
                                              pattern (lib/set.ml[619,19415+16]..lib/set.ml[619,19415+17])
                                                Tpat_any
                                            expression (lib/set.ml[619,19415+21]..lib/set.ml[619,19415+47])
                                              Texp_apply
                                              expression (lib/set.ml[619,19415+21]..lib/set.ml[619,19415+24])
                                                Texp_ident "aux/1017"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[619,19415+25]..lib/set.ml[619,19415+28])
                                                    Texp_ident "low/1018"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[619,19415+29]..lib/set.ml[619,19415+30])
                                                    Texp_ident "l/1021"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/set.ml[619,19415+31]..lib/set.ml[619,19415+47])
                                                    Texp_construct "More"
                                                    [
                                                      expression (lib/set.ml[619,19415+38]..lib/set.ml[619,19415+39])
                                                        Texp_ident "v/1022"
                                                      expression (lib/set.ml[619,19415+41]..lib/set.ml[619,19415+42])
                                                        Texp_ident "r/1023"
                                                      expression (lib/set.ml[619,19415+44]..lib/set.ml[619,19415+45])
                                                        Texp_ident "c/1020"
                                                    ]
                                              ]
                                        ]
                                  ]
                        ]
                        expression (lib/set.ml[622,19488+6]..lib/set.ml[622,19488+34])
                          Texp_apply
                          expression (lib/set.ml[622,19488+6]..lib/set.ml[622,19488+18])
                            Texp_ident "seq_of_enum_/989"
                          [
                            <arg>
                              Nolabel
                              expression (lib/set.ml[622,19488+19]..lib/set.ml[622,19488+34])
                                Texp_apply
                                expression (lib/set.ml[622,19488+20]..lib/set.ml[622,19488+23])
                                  Texp_ident "aux/1017"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[622,19488+24]..lib/set.ml[622,19488+27])
                                      Texp_ident "low/1015"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[622,19488+28]..lib/set.ml[622,19488+29])
                                      Texp_ident "s/1016"
                                  <arg>
                                    Nolabel
                                    expression (lib/set.ml[622,19488+30]..lib/set.ml[622,19488+33])
                                      Texp_construct "End"
                                      []
                                ]
                          ]
              ]
          ]
]

{<Ocaml_ocaml_types__Set>
 "Make"[module] ->
   Abs<Ocaml_ocaml_types__Set.497>
      (Ord/405,
       {
        "add"[value] -> <Ocaml_ocaml_types__Set.93>;
        "add_max_element"[value] -> <Ocaml_ocaml_types__Set.109>;
        "add_min_element"[value] -> <Ocaml_ocaml_types__Set.104>;
        "add_seq"[value] -> <Ocaml_ocaml_types__Set.459>;
        "bal"[value] -> <Ocaml_ocaml_types__Set.73>;
        "cardinal"[value] -> <Ocaml_ocaml_types__Set.321>;
        "choose"[value] -> <Ocaml_ocaml_types__Set.331>;
        "choose_opt"[value] -> <Ocaml_ocaml_types__Set.332>;
        "compare"[value] -> <Ocaml_ocaml_types__Set.263>;
        "compare_aux"[value] -> <Ocaml_ocaml_types__Set.253>;
        "concat"[value] -> <Ocaml_ocaml_types__Set.148>;
        "cons_enum"[value] -> <Ocaml_ocaml_types__Set.247>;
        "create"[value] -> <Ocaml_ocaml_types__Set.65>;
        "diff"[value] -> <Ocaml_ocaml_types__Set.232>;
        "disjoint"[value] -> <Ocaml_ocaml_types__Set.223>;
        "elements"[value] -> <Ocaml_ocaml_types__Set.329>;
        "elements_aux"[value] -> <Ocaml_ocaml_types__Set.324>;
        "elt"[type] -> <Ocaml_ocaml_types__Set.50>;
        "empty"[value] -> <Ocaml_ocaml_types__Set.165>;
        "enumeration"[type] -> <Ocaml_ocaml_types__Set.244>;
        "equal"[value] -> <Ocaml_ocaml_types__Set.266>;
        "exists"[value] -> <Ocaml_ocaml_types__Set.297>;
        "filter"[value] -> <Ocaml_ocaml_types__Set.302>;
        "filter_map"[value] -> <Ocaml_ocaml_types__Set.407>;
        "find"[value] -> <Ocaml_ocaml_types__Set.333>;
        "find_first"[value] -> <Ocaml_ocaml_types__Set.345>;
        "find_first_aux"[value] -> <Ocaml_ocaml_types__Set.339>;
        "find_first_opt"[value] -> <Ocaml_ocaml_types__Set.356>;
        "find_first_opt_aux"[value] -> <Ocaml_ocaml_types__Set.350>;
        "find_last"[value] -> <Ocaml_ocaml_types__Set.367>;
        "find_last_aux"[value] -> <Ocaml_ocaml_types__Set.361>;
        "find_last_opt"[value] -> <Ocaml_ocaml_types__Set.378>;
        "find_last_opt_aux"[value] -> <Ocaml_ocaml_types__Set.372>;
        "find_opt"[value] -> <Ocaml_ocaml_types__Set.383>;
        "fold"[value] -> <Ocaml_ocaml_types__Set.285>;
        "for_all"[value] -> <Ocaml_ocaml_types__Set.292>;
        "height"[value] -> <Ocaml_ocaml_types__Set.63>;
        "inter"[value] -> <Ocaml_ocaml_types__Set.199>;
        "is_empty"[value] -> <Ocaml_ocaml_types__Set.166>;
        "iter"[value] -> <Ocaml_ocaml_types__Set.280>;
        "join"[value] -> <Ocaml_ocaml_types__Set.114>;
        "map"[value] -> <Ocaml_ocaml_types__Set.393>;
        "max_elt"[value] -> <Ocaml_ocaml_types__Set.132>;
        "max_elt_opt"[value] -> <Ocaml_ocaml_types__Set.135>;
        "mem"[value] -> <Ocaml_ocaml_types__Set.167>;
        "merge"[value] -> <Ocaml_ocaml_types__Set.143>;
        "min_elt"[value] -> <Ocaml_ocaml_types__Set.126>;
        "min_elt_opt"[value] -> <Ocaml_ocaml_types__Set.129>;
        "of_list"[value] -> <Ocaml_ocaml_types__Set.442>;
        "of_seq"[value] -> <Ocaml_ocaml_types__Set.464>;
        "of_sorted_list"[value] -> <Ocaml_ocaml_types__Set.417>;
        "partition"[value] -> <Ocaml_ocaml_types__Set.311>;
        "remove"[value] -> <Ocaml_ocaml_types__Set.173>;
        "remove_min_elt"[value] -> <Ocaml_ocaml_types__Set.138>;
        "rev_seq_of_enum_"[value] -> <Ocaml_ocaml_types__Set.479>;
        "seq_of_enum_"[value] -> <Ocaml_ocaml_types__Set.466>;
        "singleton"[value] -> <Ocaml_ocaml_types__Set.102>;
        "snoc_enum"[value] -> <Ocaml_ocaml_types__Set.473>;
        "split"[value] -> <Ocaml_ocaml_types__Set.153>;
        "split_bis"[value] -> <Ocaml_ocaml_types__Set.213>;
        "split_bis"[type] -> <Ocaml_ocaml_types__Set.210>;
        "subset"[value] -> <Ocaml_ocaml_types__Set.269>;
        "t"[type] -> <Ocaml_ocaml_types__Set.51>;
        "to_list"[value] -> <Ocaml_ocaml_types__Set.441>;
        "to_rev_seq"[value] -> <Ocaml_ocaml_types__Set.484>;
        "to_seq"[value] -> <Ocaml_ocaml_types__Set.471>;
        "to_seq_from"[value] -> <Ocaml_ocaml_types__Set.486>;
        "try_concat"[value] -> <Ocaml_ocaml_types__Set.402>;
        "try_join"[value] -> <Ocaml_ocaml_types__Set.389>;
        "union"[value] -> <Ocaml_ocaml_types__Set.182>;
        });
 "OrderedType"[module type] -> <Ocaml_ocaml_types__Set.2>;
 "S"[module type] -> <Ocaml_ocaml_types__Set.48>;
 }

(let
  (Make/1025 =
     (function Ord/1750 is_a_functor
       (let
         (Ord/405 =a Ord/1750
          height/414 =
            (function param/417 : int
              (if (isint param/417) 0
                (let
                  (h/416 =a (field_int 3 param/417)
                   *match*/1609 =a (field_imm 2 param/417)
                   *match*/1608 =a (field_imm 1 param/417)
                   *match*/1607 =a (field_imm 0 param/417))
                  h/416)))
          create/418 =
            (function l/420 v/421 r/422
              (let
                (hl/423 =[int]
                   (if (isint l/420) 0
                     (let
                       (h/424 =a (field_int 3 l/420)
                        *match*/1616 =a (field_imm 2 l/420)
                        *match*/1615 =a (field_imm 1 l/420)
                        *match*/1614 =a (field_imm 0 l/420))
                       h/424))
                 hr/425 =[int]
                   (if (isint r/422) 0
                     (let
                       (h/426 =a (field_int 3 r/422)
                        *match*/1613 =a (field_imm 2 r/422)
                        *match*/1612 =a (field_imm 1 r/422)
                        *match*/1611 =a (field_imm 0 r/422))
                       h/426)))
                (makeblock 0 (*,*,*,int) l/420 v/421 r/422
                  (if (>= hl/423 hr/425) (+ hl/423 1) (+ hr/425 1)))))
          bal/427 =
            (function l/429 v/430 r/431
              (let
                (hl/432 =[int]
                   (if (isint l/429) 0
                     (let
                       (h/433 =a (field_int 3 l/429)
                        *match*/1627 =a (field_imm 2 l/429)
                        *match*/1626 =a (field_imm 1 l/429)
                        *match*/1625 =a (field_imm 0 l/429))
                       h/433))
                 hr/434 =[int]
                   (if (isint r/431) 0
                     (let
                       (h/435 =a (field_int 3 r/431)
                        *match*/1624 =a (field_imm 2 r/431)
                        *match*/1623 =a (field_imm 1 r/431)
                        *match*/1622 =a (field_imm 0 r/431))
                       h/435)))
                (if (> hl/432 (+ hr/434 2))
                  (if (isint l/429)
                    (apply (field_imm 0 (global Stdlib!)) "Set.bal")
                    (let
                      (*match*/1621 =a (field_int 3 l/429)
                       lr/438 =a (field_imm 2 l/429)
                       lv/437 =a (field_imm 1 l/429)
                       ll/436 =a (field_imm 0 l/429))
                      (if
                        (>= (apply height/414 ll/436)
                          (apply height/414 lr/438))
                        (apply create/418 ll/436 lv/437
                          (apply create/418 lr/438 v/430 r/431))
                        (if (isint lr/438)
                          (apply (field_imm 0 (global Stdlib!)) "Set.bal")
                          (let
                            (*match*/1620 =a (field_int 3 lr/438)
                             lrr/441 =a (field_imm 2 lr/438)
                             lrv/440 =a (field_imm 1 lr/438)
                             lrl/439 =a (field_imm 0 lr/438))
                            (apply create/418
                              (apply create/418 ll/436 lv/437 lrl/439)
                              lrv/440 (apply create/418 lrr/441 v/430 r/431)))))))
                  (if (> hr/434 (+ hl/432 2))
                    (if (isint r/431)
                      (apply (field_imm 0 (global Stdlib!)) "Set.bal")
                      (let
                        (*match*/1619 =a (field_int 3 r/431)
                         rr/444 =a (field_imm 2 r/431)
                         rv/443 =a (field_imm 1 r/431)
                         rl/442 =a (field_imm 0 r/431))
                        (if
                          (>= (apply height/414 rr/444)
                            (apply height/414 rl/442))
                          (apply create/418
                            (apply create/418 l/429 v/430 rl/442) rv/443
                            rr/444)
                          (if (isint rl/442)
                            (apply (field_imm 0 (global Stdlib!)) "Set.bal")
                            (let
                              (*match*/1618 =a (field_int 3 rl/442)
                               rlr/447 =a (field_imm 2 rl/442)
                               rlv/446 =a (field_imm 1 rl/442)
                               rll/445 =a (field_imm 0 rl/442))
                              (apply create/418
                                (apply create/418 l/429 v/430 rll/445)
                                rlv/446
                                (apply create/418 rlr/447 rv/443 rr/444)))))))
                    (makeblock 0 (*,*,*,int) l/429 v/430 r/431
                      (if (>= hl/432 hr/434) (+ hl/432 1) (+ hr/434 1))))))))
         (letrec
           (add/448
              (function x/449 t/453
                (if (isint t/453) (makeblock 0 (*,*,*,int) 0 x/449 0 1)
                  (let
                    (*match*/1629 =a (field_int 3 t/453)
                     r/452 =a (field_imm 2 t/453)
                     v/451 =a (field_imm 1 t/453)
                     l/450 =a (field_imm 0 t/453)
                     c/454 =[int] (apply (field_imm 0 Ord/405) x/449 v/451))
                    (if (== c/454 0) t/453
                      (if (< c/454 0)
                        (let (ll/455 = (apply add/448 x/449 l/450))
                          (if (== l/450 ll/455) t/453
                            (apply bal/427 ll/455 v/451 r/452)))
                        (let (rr/456 = (apply add/448 x/449 r/452))
                          (if (== r/452 rr/456) t/453
                            (apply bal/427 l/450 v/451 rr/456)))))))))
           (let
             (singleton/457 =
                (function x/459 (makeblock 0 (*,*,*,int) 0 x/459 0 1)))
             (letrec
               (add_min_element/460
                  (function x/461 param/465
                    (if (isint param/465) (apply singleton/457 x/461)
                      (let
                        (*match*/1631 =a (field_int 3 param/465)
                         r/464 =a (field_imm 2 param/465)
                         v/463 =a (field_imm 1 param/465)
                         l/462 =a (field_imm 0 param/465))
                        (apply bal/427
                          (apply add_min_element/460 x/461 l/462) v/463
                          r/464)))))
               (letrec
                 (add_max_element/466
                    (function x/467 param/471
                      (if (isint param/471) (apply singleton/457 x/467)
                        (let
                          (*match*/1632 =a (field_int 3 param/471)
                           r/470 =a (field_imm 2 param/471)
                           v/469 =a (field_imm 1 param/471)
                           l/468 =a (field_imm 0 param/471))
                          (apply bal/427 l/468 v/469
                            (apply add_max_element/466 x/467 r/470))))))
                 (letrec
                   (join/472
                      (function l/473 v/474 r/475
                        (catch
                          (if (isint l/473)
                            (apply add_min_element/460 v/474 r/475)
                            (if (isint r/475) (exit 1)
                              (let
                                (rh/483 =a (field_int 3 r/475)
                                 rr/482 =a (field_imm 2 r/475)
                                 rv/481 =a (field_imm 1 r/475)
                                 rl/480 =a (field_imm 0 r/475)
                                 lh/479 =a (field_int 3 l/473)
                                 lr/478 =a (field_imm 2 l/473)
                                 lv/477 =a (field_imm 1 l/473)
                                 ll/476 =a (field_imm 0 l/473))
                                (if (> lh/479 (+ rh/483 2))
                                  (apply bal/427 ll/476 lv/477
                                    (apply join/472 lr/478 v/474 r/475))
                                  (if (> rh/483 (+ lh/479 2))
                                    (apply bal/427
                                      (apply join/472 l/473 v/474 rl/480)
                                      rv/481 rr/482)
                                    (apply create/418 l/473 v/474 r/475))))))
                         with (1) (apply add_max_element/466 v/474 l/473))))
                   (letrec
                     (min_elt/484
                        (function param/487
                          (if (isint param/487)
                            (raise (field_imm 7 (global Stdlib!)))
                            (let (l/486 =a (field_imm 0 param/487))
                              (catch
                                (if (isint l/486)
                                  (let
                                    (*match*/1634 =a (field_int 3 param/487)
                                     *match*/1633 =a (field_imm 2 param/487)
                                     v/485 =a (field_imm 1 param/487))
                                    v/485)
                                  (exit 2))
                               with (2)
                                (let
                                  (*match*/1637 =a (field_int 3 param/487)
                                   *match*/1636 =a (field_imm 2 param/487)
                                   *match*/1635 =a (field_imm 1 param/487))
                                  (apply min_elt/484 l/486)))))))
                     (letrec
                       (min_elt_opt/488
                          (function param/491
                            (if (isint param/491) 0
                              (let (l/490 =a (field_imm 0 param/491))
                                (catch
                                  (if (isint l/490)
                                    (let
                                      (*match*/1639 =a
                                         (field_int 3 param/491)
                                       *match*/1638 =a
                                         (field_imm 2 param/491)
                                       v/489 =a (field_imm 1 param/491))
                                      (makeblock 0 v/489))
                                    (exit 3))
                                 with (3)
                                  (let
                                    (*match*/1642 =a (field_int 3 param/491)
                                     *match*/1641 =a (field_imm 2 param/491)
                                     *match*/1640 =a (field_imm 1 param/491))
                                    (apply min_elt_opt/488 l/490)))))))
                       (letrec
                         (max_elt/492
                            (function param/495
                              (if (isint param/495)
                                (raise (field_imm 7 (global Stdlib!)))
                                (let
                                  (*match*/1643 =a (field_imm 0 param/495))
                                  (catch
                                    (let
                                      (*match*/1644 =a
                                         (field_imm 2 param/495))
                                      (if (isint *match*/1644)
                                        (let
                                          (*match*/1645 =a
                                             (field_int 3 param/495)
                                           v/493 =a (field_imm 1 param/495))
                                          v/493)
                                        (exit 4)))
                                   with (4)
                                    (let
                                      (*match*/1647 =a
                                         (field_int 3 param/495)
                                       r/494 =a (field_imm 2 param/495)
                                       *match*/1646 =a
                                         (field_imm 1 param/495))
                                      (apply max_elt/492 r/494)))))))
                         (letrec
                           (max_elt_opt/496
                              (function param/499
                                (if (isint param/499) 0
                                  (let
                                    (*match*/1648 =a (field_imm 0 param/499))
                                    (catch
                                      (let
                                        (*match*/1649 =a
                                           (field_imm 2 param/499))
                                        (if (isint *match*/1649)
                                          (let
                                            (*match*/1650 =a
                                               (field_int 3 param/499)
                                             v/497 =a (field_imm 1 param/499))
                                            (makeblock 0 v/497))
                                          (exit 5)))
                                     with (5)
                                      (let
                                        (*match*/1652 =a
                                           (field_int 3 param/499)
                                         r/498 =a (field_imm 2 param/499)
                                         *match*/1651 =a
                                           (field_imm 1 param/499))
                                        (apply max_elt_opt/496 r/498)))))))
                           (letrec
                             (remove_min_elt/500
                                (function param/505
                                  (if (isint param/505)
                                    (apply (field_imm 0 (global Stdlib!))
                                      "Set.remove_min_elt")
                                    (let (l/502 =a (field_imm 0 param/505))
                                      (catch
                                        (if (isint l/502)
                                          (let
                                            (*match*/1654 =a
                                               (field_int 3 param/505)
                                             r/501 =a (field_imm 2 param/505)
                                             *match*/1653 =a
                                               (field_imm 1 param/505))
                                            r/501)
                                          (exit 6))
                                       with (6)
                                        (let
                                          (*match*/1655 =a
                                             (field_int 3 param/505)
                                           r/504 =a (field_imm 2 param/505)
                                           v/503 =a (field_imm 1 param/505))
                                          (apply bal/427
                                            (apply remove_min_elt/500 l/502)
                                            v/503 r/504)))))))
                             (let
                               (merge/506 =
                                  (function t1/508 t2/509
                                    (catch
                                      (catch
                                        (if (isint t1/508)
                                          (let (t/510 =a t2/509) t/510)
                                          (exit 8))
                                       with (8)
                                        (if (isint t2/509)
                                          (let (t/511 =a t1/508) t/511)
                                          (exit 7)))
                                     with (7)
                                      (apply bal/427 t1/508
                                        (apply min_elt/484 t2/509)
                                        (apply remove_min_elt/500 t2/509))))
                                concat/512 =
                                  (function t1/514 t2/515
                                    (catch
                                      (catch
                                        (if (isint t1/514)
                                          (let (t/516 =a t2/515) t/516)
                                          (exit 10))
                                       with (10)
                                        (if (isint t2/515)
                                          (let (t/517 =a t1/514) t/517)
                                          (exit 9)))
                                     with (9)
                                      (apply join/472 t1/514
                                        (apply min_elt/484 t2/515)
                                        (apply remove_min_elt/500 t2/515)))))
                               (letrec
                                 (split/518
                                    (function x/519 param/530
                                      (if (isint param/530) [0: 0 0 0]
                                        (let
                                          (*match*/1666 =a
                                             (field_int 3 param/530)
                                           r/522 =a (field_imm 2 param/530)
                                           v/521 =a (field_imm 1 param/530)
                                           l/520 =a (field_imm 0 param/530)
                                           c/523 =[int]
                                             (apply (field_imm 0 Ord/405)
                                               x/519 v/521))
                                          (if (== c/523 0)
                                            (makeblock 0 (*,int,*) l/520 1
                                              r/522)
                                            (if (< c/523 0)
                                              (let
                                                (*match*/1665 =
                                                   (apply split/518 x/519
                                                     l/520)
                                                 rl/526 =a
                                                   (field_imm 2 *match*/1665)
                                                 pres/525 =a
                                                   (field_imm 1 *match*/1665)
                                                 ll/524 =a
                                                   (field_imm 0 *match*/1665))
                                                (makeblock 0 (*,int,*) ll/524
                                                  pres/525
                                                  (apply join/472 rl/526
                                                    v/521 r/522)))
                                              (let
                                                (*match*/1660 =
                                                   (apply split/518 x/519
                                                     r/522)
                                                 rr/529 =a
                                                   (field_imm 2 *match*/1660)
                                                 pres/528 =a
                                                   (field_imm 1 *match*/1660)
                                                 lr/527 =a
                                                   (field_imm 0 *match*/1660))
                                                (makeblock 0 (*,int,*)
                                                  (apply join/472 l/520 v/521
                                                    lr/527)
                                                  pres/528 rr/529))))))))
                                 (let
                                   (empty/531 = 0
                                    is_empty/532 =
                                      (function param/534 : int
                                        (catch
                                          (if (isint param/534) 1 (exit 17))
                                         with (17) 0)))
                                   (letrec
                                     (mem/535
                                        (function x/536 param/541 : int
                                          (if (isint param/541) 0
                                            (let
                                              (*match*/1667 =a
                                                 (field_int 3 param/541)
                                               r/539 =a
                                                 (field_imm 2 param/541)
                                               v/538 =a
                                                 (field_imm 1 param/541)
                                               l/537 =a
                                                 (field_imm 0 param/541)
                                               c/540 =[int]
                                                 (apply (field_imm 0 Ord/405)
                                                   x/536 v/538))
                                              (|| (== c/540 0)
                                                (apply mem/535 x/536
                                                  (if (< c/540 0) l/537
                                                    r/539)))))))
                                     (letrec
                                       (remove/542
                                          (function x/543 t/547
                                            (if (isint t/547) 0
                                              (let
                                                (*match*/1668 =a
                                                   (field_int 3 t/547)
                                                 r/546 =a (field_imm 2 t/547)
                                                 v/545 =a (field_imm 1 t/547)
                                                 l/544 =a (field_imm 0 t/547)
                                                 c/548 =[int]
                                                   (apply
                                                     (field_imm 0 Ord/405)
                                                     x/543 v/545))
                                                (if (== c/548 0)
                                                  (apply merge/506 l/544
                                                    r/546)
                                                  (if (< c/548 0)
                                                    (let
                                                      (ll/549 =
                                                         (apply remove/542
                                                           x/543 l/544))
                                                      (if (== l/544 ll/549)
                                                        t/547
                                                        (apply bal/427 ll/549
                                                          v/545 r/546)))
                                                    (let
                                                      (rr/550 =
                                                         (apply remove/542
                                                           x/543 r/546))
                                                      (if (== r/546 rr/550)
                                                        t/547
                                                        (apply bal/427 l/544
                                                          v/545 rr/550)))))))))
                                       (letrec
                                         (union/551
                                            (function s1/552 s2/553
                                              (catch
                                                (if (isint s1/552)
                                                  (let (t2/554 =a s2/553)
                                                    t2/554)
                                                  (if (isint s2/553)
                                                    (exit 24)
                                                    (let
                                                      (h2/563 =a
                                                         (field_int 3 s2/553)
                                                       r2/562 =a
                                                         (field_imm 2 s2/553)
                                                       v2/561 =a
                                                         (field_imm 1 s2/553)
                                                       l2/560 =a
                                                         (field_imm 0 s2/553)
                                                       h1/559 =a
                                                         (field_int 3 s1/552)
                                                       r1/558 =a
                                                         (field_imm 2 s1/552)
                                                       v1/557 =a
                                                         (field_imm 1 s1/552)
                                                       l1/556 =a
                                                         (field_imm 0 s1/552))
                                                      (if (>= h1/559 h2/563)
                                                        (if (== h2/563 1)
                                                          (apply add/448
                                                            v2/561 s1/552)
                                                          (let
                                                            (*match*/1679 =
                                                               (apply
                                                                 split/518
                                                                 v1/557
                                                                 s2/553)
                                                             r2/565 =a
                                                               (field_imm 2
                                                                 *match*/1679)
                                                             *match*/1680 =a
                                                               (field_imm 1
                                                                 *match*/1679)
                                                             l2/564 =a
                                                               (field_imm 0
                                                                 *match*/1679))
                                                            (apply join/472
                                                              (apply
                                                                union/551
                                                                l1/556
                                                                l2/564)
                                                              v1/557
                                                              (apply
                                                                union/551
                                                                r1/558
                                                                r2/565))))
                                                        (if (== h1/559 1)
                                                          (apply add/448
                                                            v1/557 s2/553)
                                                          (let
                                                            (*match*/1673 =
                                                               (apply
                                                                 split/518
                                                                 v2/561
                                                                 s1/552)
                                                             r1/567 =a
                                                               (field_imm 2
                                                                 *match*/1673)
                                                             *match*/1674 =a
                                                               (field_imm 1
                                                                 *match*/1673)
                                                             l1/566 =a
                                                               (field_imm 0
                                                                 *match*/1673))
                                                            (apply join/472
                                                              (apply
                                                                union/551
                                                                l1/566
                                                                l2/560)
                                                              v2/561
                                                              (apply
                                                                union/551
                                                                r1/567
                                                                r2/562))))))))
                                               with (24)
                                                (let (t1/555 =a s1/552)
                                                  t1/555))))
                                         (letrec
                                           (inter/568
                                              (function s1/569 s2/570
                                                (catch
                                                  (catch
                                                    (if (isint s1/569) 0
                                                      (exit 26))
                                                   with (26)
                                                    (if (isint s2/570) 0
                                                      (exit 25)))
                                                 with (25)
                                                  (let
                                                    (t2/574 =a s2/570
                                                     *match*/1683 =a
                                                       (field_int 3 s1/569)
                                                     r1/573 =a
                                                       (field_imm 2 s1/569)
                                                     v1/572 =a
                                                       (field_imm 1 s1/569)
                                                     l1/571 =a
                                                       (field_imm 0 s1/569)
                                                     *match*/1681 =
                                                       (apply split/518
                                                         v1/572 t2/574)
                                                     *match*/1682 =a
                                                       (field_imm 1
                                                         *match*/1681)
                                                     l2/575 =a
                                                       (field_imm 0
                                                         *match*/1681))
                                                    (if *match*/1682
                                                      (let
                                                        (l2/577 =a l2/575
                                                         r2/578 =a
                                                           (field_imm 2
                                                             *match*/1681))
                                                        (apply join/472
                                                          (apply inter/568
                                                            l1/571 l2/577)
                                                          v1/572
                                                          (apply inter/568
                                                            r1/573 r2/578)))
                                                      (let
                                                        (r2/576 =a
                                                           (field_imm 2
                                                             *match*/1681))
                                                        (apply concat/512
                                                          (apply inter/568
                                                            l1/571 l2/575)
                                                          (apply inter/568
                                                            r1/573 r2/576))))))))
                                           (letrec
                                             (split_bis/582
                                                (function x/583 param/594
                                                  (if (isint param/594)
                                                    (makeblock 0 0
                                                      (function
                                                        param/587[int] 0))
                                                    (let
                                                      (*match*/1686 =a
                                                         (field_int 3
                                                           param/594)
                                                       r/586 =a
                                                         (field_imm 2
                                                           param/594)
                                                       v/585 =a
                                                         (field_imm 1
                                                           param/594)
                                                       l/584 =a
                                                         (field_imm 0
                                                           param/594)
                                                       c/588 =[int]
                                                         (apply
                                                           (field_imm 0
                                                             Ord/405)
                                                           x/583 v/585))
                                                      (if (== c/588 0) 0
                                                        (if (< c/588 0)
                                                          (let
                                                            (*match*/1685 =
                                                               (apply
                                                                 split_bis/582
                                                                 x/583 l/584))
                                                            (if
                                                              (isint
                                                                *match*/1685)
                                                              0
                                                              (let
                                                                (rl/590 =a
                                                                   (field_imm 1
                                                                    *match*/1685)
                                                                 ll/589 =a
                                                                   (field_imm 0
                                                                    *match*/1685))
                                                                (makeblock 0
                                                                  ll/589
                                                                  (function
                                                                    param/591[int]
                                                                    (apply
                                                                    join/472
                                                                    (apply
                                                                    rl/590 0)
                                                                    v/585
                                                                    r/586))))))
                                                          (let
                                                            (*match*/1684 =
                                                               (apply
                                                                 split_bis/582
                                                                 x/583 r/586))
                                                            (if
                                                              (isint
                                                                *match*/1684)
                                                              0
                                                              (let
                                                                (rr/593 =a
                                                                   (field_imm 1
                                                                    *match*/1684)
                                                                 lr/592 =a
                                                                   (field_imm 0
                                                                    *match*/1684))
                                                                (makeblock 0
                                                                  (apply
                                                                    join/472
                                                                    l/584
                                                                    v/585
                                                                    lr/592)
                                                                  rr/593))))))))))
                                             (letrec
                                               (disjoint/595
                                                  (function s1/596 s2/597
                                                    : int
                                                    (catch
                                                      (catch
                                                        (catch
                                                          (if (isint s1/596)
                                                            (exit 27)
                                                            (exit 29))
                                                         with (29)
                                                          (if (isint s2/597)
                                                            (exit 27)
                                                            (exit 28)))
                                                       with (28)
                                                        (let
                                                          (t2/601 =a s2/597)
                                                          (if
                                                            (== s1/596
                                                              s2/597)
                                                            0
                                                            (let
                                                              (*match*/1688 =a
                                                                 (field_int 3
                                                                   s1/596)
                                                               r1/600 =a
                                                                 (field_imm 2
                                                                   s1/596)
                                                               v1/599 =a
                                                                 (field_imm 1
                                                                   s1/596)
                                                               l1/598 =a
                                                                 (field_imm 0
                                                                   s1/596)
                                                               *match*/1687 =
                                                                 (apply
                                                                   split_bis/582
                                                                   v1/599
                                                                   t2/601))
                                                              (if
                                                                (isint
                                                                  *match*/1687)
                                                                0
                                                                (let
                                                                  (r2/603 =a
                                                                    (field_imm 1
                                                                    *match*/1687)
                                                                   l2/602 =a
                                                                    (field_imm 0
                                                                    *match*/1687))
                                                                  (&&
                                                                    (apply
                                                                    disjoint/595
                                                                    l1/598
                                                                    l2/602)
                                                                    (apply
                                                                    disjoint/595
                                                                    r1/600
                                                                    (apply
                                                                    r2/603 0)))))))))
                                                     with (27) 1)))
                                               (letrec
                                                 (diff/604
                                                    (function s1/605 s2/606
                                                      (catch
                                                        (catch
                                                          (if (isint s1/605)
                                                            0 (exit 31))
                                                         with (31)
                                                          (if (isint s2/606)
                                                            (let
                                                              (t1/607 =a
                                                                 s1/605)
                                                              t1/607)
                                                            (exit 30)))
                                                       with (30)
                                                        (let
                                                          (t2/611 =a s2/606
                                                           *match*/1691 =a
                                                             (field_int 3
                                                               s1/605)
                                                           r1/610 =a
                                                             (field_imm 2
                                                               s1/605)
                                                           v1/609 =a
                                                             (field_imm 1
                                                               s1/605)
                                                           l1/608 =a
                                                             (field_imm 0
                                                               s1/605)
                                                           *match*/1689 =
                                                             (apply split/518
                                                               v1/609 t2/611)
                                                           *match*/1690 =a
                                                             (field_imm 1
                                                               *match*/1689)
                                                           l2/612 =a
                                                             (field_imm 0
                                                               *match*/1689))
                                                          (if *match*/1690
                                                            (let
                                                              (l2/614 =a
                                                                 l2/612
                                                               r2/615 =a
                                                                 (field_imm 2
                                                                   *match*/1689))
                                                              (apply
                                                                concat/512
                                                                (apply
                                                                  diff/604
                                                                  l1/608
                                                                  l2/614)
                                                                (apply
                                                                  diff/604
                                                                  r1/610
                                                                  r2/615)))
                                                            (let
                                                              (r2/613 =a
                                                                 (field_imm 2
                                                                   *match*/1689))
                                                              (apply join/472
                                                                (apply
                                                                  diff/604
                                                                  l1/608
                                                                  l2/612)
                                                                v1/609
                                                                (apply
                                                                  diff/604
                                                                  r1/610
                                                                  r2/613))))))))
                                                 (letrec
                                                   (cons_enum/619
                                                      (function s/620 e/621
                                                        (if (isint s/620)
                                                          e/621
                                                          (let
                                                            (*match*/1692 =a
                                                               (field_int 3
                                                                 s/620)
                                                             r/624 =a
                                                               (field_imm 2
                                                                 s/620)
                                                             v/623 =a
                                                               (field_imm 1
                                                                 s/620)
                                                             l/622 =a
                                                               (field_imm 0
                                                                 s/620))
                                                            (apply
                                                              cons_enum/619
                                                              l/622
                                                              (makeblock 0
                                                                v/623 r/624
                                                                e/621))))))
                                                   (letrec
                                                     (compare_aux/625
                                                        (function e1/626
                                                          e2/627 : int
                                                          (catch
                                                            (if
                                                              (isint e1/626)
                                                              (catch
                                                                (if
                                                                  (isint
                                                                    e2/627)
                                                                  0
                                                                  (exit 33))
                                                               with (33) -1)
                                                              (if
                                                                (isint
                                                                  e2/627)
                                                                (exit 32)
                                                                (let
                                                                  (e2/633 =a
                                                                    (field_imm 2
                                                                    e2/627)
                                                                   r2/632 =a
                                                                    (field_imm 1
                                                                    e2/627)
                                                                   v2/631 =a
                                                                    (field_imm 0
                                                                    e2/627)
                                                                   e1/630 =a
                                                                    (field_imm 2
                                                                    e1/626)
                                                                   r1/629 =a
                                                                    (field_imm 1
                                                                    e1/626)
                                                                   v1/628 =a
                                                                    (field_imm 0
                                                                    e1/626)
                                                                   c/634 =[int]
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/405)
                                                                    v1/628
                                                                    v2/631))
                                                                  (if
                                                                    (!= c/634
                                                                    0) c/634
                                                                    (apply
                                                                    compare_aux/625
                                                                    (apply
                                                                    cons_enum/619
                                                                    r1/629
                                                                    e1/630)
                                                                    (apply
                                                                    cons_enum/619
                                                                    r2/632
                                                                    e2/633))))))
                                                           with (32) 1)))
                                                     (let
                                                       (compare/635 =
                                                          (function s1/636
                                                            s2/637 : int
                                                            (apply
                                                              compare_aux/625
                                                              (apply
                                                                cons_enum/619
                                                                s1/636 0)
                                                              (apply
                                                                cons_enum/619
                                                                s2/637 0)))
                                                        equal/638 =
                                                          (function s1/640
                                                            s2/641 : int
                                                            (==
                                                              (apply
                                                                compare/635
                                                                s1/640
                                                                s2/641)
                                                              0)))
                                                       (letrec
                                                         (subset/642
                                                            (function s1/643
                                                              s2/644 : int
                                                              (catch
                                                                (if
                                                                  (isint
                                                                    s1/643)
                                                                  1
                                                                  (if
                                                                    (isint
                                                                    s2/644)
                                                                    (exit 34)
                                                                    (let
                                                                    (t2/651 =a
                                                                    s2/644
                                                                    *match*/1696 =a
                                                                    (field_int 3
                                                                    s2/644)
                                                                    r2/650 =a
                                                                    (field_imm 2
                                                                    s2/644)
                                                                    v2/649 =a
                                                                    (field_imm 1
                                                                    s2/644)
                                                                    l2/648 =a
                                                                    (field_imm 0
                                                                    s2/644)
                                                                    *match*/1695 =a
                                                                    (field_int 3
                                                                    s1/643)
                                                                    r1/647 =a
                                                                    (field_imm 2
                                                                    s1/643)
                                                                    v1/646 =a
                                                                    (field_imm 1
                                                                    s1/643)
                                                                    l1/645 =a
                                                                    (field_imm 0
                                                                    s1/643)
                                                                    c/652 =[int]
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/405)
                                                                    v1/646
                                                                    v2/649))
                                                                    (if
                                                                    (== c/652
                                                                    0)
                                                                    (&&
                                                                    (apply
                                                                    subset/642
                                                                    l1/645
                                                                    l2/648)
                                                                    (apply
                                                                    subset/642
                                                                    r1/647
                                                                    r2/650))
                                                                    (if
                                                                    (< c/652
                                                                    0)
                                                                    (&&
                                                                    (apply
                                                                    subset/642
                                                                    (makeblock 0 (*,*,*,int)
                                                                    l1/645
                                                                    v1/646 0
                                                                    0)
                                                                    l2/648)
                                                                    (apply
                                                                    subset/642
                                                                    r1/647
                                                                    t2/651))
                                                                    (&&
                                                                    (apply
                                                                    subset/642
                                                                    (makeblock 0 (*,*,*,int)
                                                                    0 v1/646
                                                                    r1/647 0)
                                                                    r2/650)
                                                                    (apply
                                                                    subset/642
                                                                    l1/645
                                                                    t2/651)))))))
                                                               with (34) 0)))
                                                         (letrec
                                                           (iter/653
                                                              (function f/654
                                                                param/658
                                                                : int
                                                                (if
                                                                  (isint
                                                                    param/658)
                                                                  0
                                                                  (let
                                                                    (*match*/1697 =a
                                                                    (field_int 3
                                                                    param/658)
                                                                    r/657 =a
                                                                    (field_imm 2
                                                                    param/658)
                                                                    v/656 =a
                                                                    (field_imm 1
                                                                    param/658)
                                                                    l/655 =a
                                                                    (field_imm 0
                                                                    param/658))
                                                                    (seq
                                                                    (apply
                                                                    iter/653
                                                                    f/654
                                                                    l/655)
                                                                    (apply
                                                                    f/654
                                                                    v/656)
                                                                    (apply
                                                                    iter/653
                                                                    f/654
                                                                    r/657))))))
                                                           (letrec
                                                             (fold/659
                                                                (function
                                                                  f/660 s/661
                                                                  accu/662
                                                                  (if
                                                                    (isint
                                                                    s/661)
                                                                    accu/662
                                                                    (let
                                                                    (*match*/1698 =a
                                                                    (field_int 3
                                                                    s/661)
                                                                    r/665 =a
                                                                    (field_imm 2
                                                                    s/661)
                                                                    v/664 =a
                                                                    (field_imm 1
                                                                    s/661)
                                                                    l/663 =a
                                                                    (field_imm 0
                                                                    s/661))
                                                                    (apply
                                                                    fold/659
                                                                    f/660
                                                                    r/665
                                                                    (apply
                                                                    f/660
                                                                    v/664
                                                                    (apply
                                                                    fold/659
                                                                    f/660
                                                                    l/663
                                                                    accu/662)))))))
                                                             (letrec
                                                               (for_all/666
                                                                  (function
                                                                    p/667
                                                                    param/671
                                                                    : int
                                                                    (if
                                                                    (isint
                                                                    param/671)
                                                                    1
                                                                    (let
                                                                    (*match*/1699 =a
                                                                    (field_int 3
                                                                    param/671)
                                                                    r/670 =a
                                                                    (field_imm 2
                                                                    param/671)
                                                                    v/669 =a
                                                                    (field_imm 1
                                                                    param/671)
                                                                    l/668 =a
                                                                    (field_imm 0
                                                                    param/671))
                                                                    (&&
                                                                    (apply
                                                                    p/667
                                                                    v/669)
                                                                    (&&
                                                                    (apply
                                                                    for_all/666
                                                                    p/667
                                                                    l/668)
                                                                    (apply
                                                                    for_all/666
                                                                    p/667
                                                                    r/670)))))))
                                                               (letrec
                                                                 (exists/672
                                                                    (function
                                                                    p/673
                                                                    param/677
                                                                    : int
                                                                    (if
                                                                    (isint
                                                                    param/677)
                                                                    0
                                                                    (let
                                                                    (*match*/1700 =a
                                                                    (field_int 3
                                                                    param/677)
                                                                    r/676 =a
                                                                    (field_imm 2
                                                                    param/677)
                                                                    v/675 =a
                                                                    (field_imm 1
                                                                    param/677)
                                                                    l/674 =a
                                                                    (field_imm 0
                                                                    param/677))
                                                                    (||
                                                                    (apply
                                                                    p/673
                                                                    v/675)
                                                                    (||
                                                                    (apply
                                                                    exists/672
                                                                    p/673
                                                                    l/674)
                                                                    (apply
                                                                    exists/672
                                                                    p/673
                                                                    r/676)))))))
                                                                 (letrec
                                                                   (filter/678
                                                                    (function
                                                                    p/679
                                                                    t/683
                                                                    (if
                                                                    (isint
                                                                    t/683) 0
                                                                    (let
                                                                    (*match*/1701 =a
                                                                    (field_int 3
                                                                    t/683)
                                                                    r/682 =a
                                                                    (field_imm 2
                                                                    t/683)
                                                                    v/681 =a
                                                                    (field_imm 1
                                                                    t/683)
                                                                    l/680 =a
                                                                    (field_imm 0
                                                                    t/683)
                                                                    l'/684 =
                                                                    (apply
                                                                    filter/678
                                                                    p/679
                                                                    l/680)
                                                                    pv/685 =[int]
                                                                    (apply
                                                                    p/679
                                                                    v/681)
                                                                    r'/686 =
                                                                    (apply
                                                                    filter/678
                                                                    p/679
                                                                    r/682))
                                                                    (if
                                                                    pv/685
                                                                    (if
                                                                    (&&
                                                                    (== l/680
                                                                    l'/684)
                                                                    (== r/682
                                                                    r'/686))
                                                                    t/683
                                                                    (apply
                                                                    join/472
                                                                    l'/684
                                                                    v/681
                                                                    r'/686))
                                                                    (apply
                                                                    concat/512
                                                                    l'/684
                                                                    r'/686))))))
                                                                   (letrec
                                                                    (partition/687
                                                                    (function
                                                                    p/688
                                                                    param/697
                                                                    (if
                                                                    (isint
                                                                    param/697)
                                                                    [0: 0 0]
                                                                    (let
                                                                    (*match*/1710 =a
                                                                    (field_int 3
                                                                    param/697)
                                                                    r/691 =a
                                                                    (field_imm 2
                                                                    param/697)
                                                                    v/690 =a
                                                                    (field_imm 1
                                                                    param/697)
                                                                    l/689 =a
                                                                    (field_imm 0
                                                                    param/697)
                                                                    *match*/1709 =
                                                                    (apply
                                                                    partition/687
                                                                    p/688
                                                                    l/689)
                                                                    lf/693 =a
                                                                    (field_imm 1
                                                                    *match*/1709)
                                                                    lt/692 =a
                                                                    (field_imm 0
                                                                    *match*/1709)
                                                                    pv/694 =[int]
                                                                    (apply
                                                                    p/688
                                                                    v/690)
                                                                    *match*/1705 =
                                                                    (apply
                                                                    partition/687
                                                                    p/688
                                                                    r/691)
                                                                    rf/696 =a
                                                                    (field_imm 1
                                                                    *match*/1705)
                                                                    rt/695 =a
                                                                    (field_imm 0
                                                                    *match*/1705))
                                                                    (if
                                                                    pv/694
                                                                    (makeblock 0
                                                                    (apply
                                                                    join/472
                                                                    lt/692
                                                                    v/690
                                                                    rt/695)
                                                                    (apply
                                                                    concat/512
                                                                    lf/693
                                                                    rf/696))
                                                                    (makeblock 0
                                                                    (apply
                                                                    concat/512
                                                                    lt/692
                                                                    rt/695)
                                                                    (apply
                                                                    join/472
                                                                    lf/693
                                                                    v/690
                                                                    rf/696)))))))
                                                                    (letrec
                                                                    (cardinal/698
                                                                    (function
                                                                    param/701
                                                                    : int
                                                                    (if
                                                                    (isint
                                                                    param/701)
                                                                    0
                                                                    (let
                                                                    (*match*/1712 =a
                                                                    (field_int 3
                                                                    param/701)
                                                                    r/700 =a
                                                                    (field_imm 2
                                                                    param/701)
                                                                    *match*/1711 =a
                                                                    (field_imm 1
                                                                    param/701)
                                                                    l/699 =a
                                                                    (field_imm 0
                                                                    param/701))
                                                                    (+
                                                                    (+
                                                                    (apply
                                                                    cardinal/698
                                                                    l/699) 1)
                                                                    (apply
                                                                    cardinal/698
                                                                    r/700))))))
                                                                    (letrec
                                                                    (elements_aux/702
                                                                    (function
                                                                    accu/703
                                                                    param/707
                                                                    (if
                                                                    (isint
                                                                    param/707)
                                                                    accu/703
                                                                    (let
                                                                    (*match*/1713 =a
                                                                    (field_int 3
                                                                    param/707)
                                                                    r/706 =a
                                                                    (field_imm 2
                                                                    param/707)
                                                                    v/705 =a
                                                                    (field_imm 1
                                                                    param/707)
                                                                    l/704 =a
                                                                    (field_imm 0
                                                                    param/707))
                                                                    (apply
                                                                    elements_aux/702
                                                                    (makeblock 0
                                                                    v/705
                                                                    (apply
                                                                    elements_aux/702
                                                                    accu/703
                                                                    r/706))
                                                                    l/704)))))
                                                                    (let
                                                                    (elements/708 =
                                                                    (function
                                                                    s/710
                                                                    (apply
                                                                    elements_aux/702
                                                                    0 s/710))
                                                                    choose/711 =
                                                                    min_elt/484
                                                                    choose_opt/712 =
                                                                    min_elt_opt/488)
                                                                    (letrec
                                                                    (find/713
                                                                    (function
                                                                    x/714
                                                                    param/719
                                                                    (if
                                                                    (isint
                                                                    param/719)
                                                                    (raise
                                                                    (field_imm 7
                                                                    (global Stdlib!)))
                                                                    (let
                                                                    (*match*/1714 =a
                                                                    (field_int 3
                                                                    param/719)
                                                                    r/717 =a
                                                                    (field_imm 2
                                                                    param/719)
                                                                    v/716 =a
                                                                    (field_imm 1
                                                                    param/719)
                                                                    l/715 =a
                                                                    (field_imm 0
                                                                    param/719)
                                                                    c/718 =[int]
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/405)
                                                                    x/714
                                                                    v/716))
                                                                    (if
                                                                    (== c/718
                                                                    0) v/716
                                                                    (apply
                                                                    find/713
                                                                    x/714
                                                                    (if
                                                                    (< c/718
                                                                    0) l/715
                                                                    r/717)))))))
                                                                    (letrec
                                                                    (find_first_aux/720
                                                                    (function
                                                                    v0/721
                                                                    f/722
                                                                    param/726
                                                                    (if
                                                                    (isint
                                                                    param/726)
                                                                    v0/721
                                                                    (let
                                                                    (*match*/1715 =a
                                                                    (field_int 3
                                                                    param/726)
                                                                    r/725 =a
                                                                    (field_imm 2
                                                                    param/726)
                                                                    v/724 =a
                                                                    (field_imm 1
                                                                    param/726)
                                                                    l/723 =a
                                                                    (field_imm 0
                                                                    param/726))
                                                                    (if
                                                                    (apply
                                                                    f/722
                                                                    v/724)
                                                                    (apply
                                                                    find_first_aux/720
                                                                    v/724
                                                                    f/722
                                                                    l/723)
                                                                    (apply
                                                                    find_first_aux/720
                                                                    v0/721
                                                                    f/722
                                                                    r/725))))))
                                                                    (letrec
                                                                    (find_first/727
                                                                    (function
                                                                    f/728
                                                                    param/732
                                                                    (if
                                                                    (isint
                                                                    param/732)
                                                                    (raise
                                                                    (field_imm 7
                                                                    (global Stdlib!)))
                                                                    (let
                                                                    (*match*/1716 =a
                                                                    (field_int 3
                                                                    param/732)
                                                                    r/731 =a
                                                                    (field_imm 2
                                                                    param/732)
                                                                    v/730 =a
                                                                    (field_imm 1
                                                                    param/732)
                                                                    l/729 =a
                                                                    (field_imm 0
                                                                    param/732))
                                                                    (if
                                                                    (apply
                                                                    f/728
                                                                    v/730)
                                                                    (apply
                                                                    find_first_aux/720
                                                                    v/730
                                                                    f/728
                                                                    l/729)
                                                                    (apply
                                                                    find_first/727
                                                                    f/728
                                                                    r/731))))))
                                                                    (letrec
                                                                    (find_first_opt_aux/733
                                                                    (function
                                                                    v0/734
                                                                    f/735
                                                                    param/739
                                                                    (if
                                                                    (isint
                                                                    param/739)
                                                                    (makeblock 0
                                                                    v0/734)
                                                                    (let
                                                                    (*match*/1717 =a
                                                                    (field_int 3
                                                                    param/739)
                                                                    r/738 =a
                                                                    (field_imm 2
                                                                    param/739)
                                                                    v/737 =a
                                                                    (field_imm 1
                                                                    param/739)
                                                                    l/736 =a
                                                                    (field_imm 0
                                                                    param/739))
                                                                    (if
                                                                    (apply
                                                                    f/735
                                                                    v/737)
                                                                    (apply
                                                                    find_first_opt_aux/733
                                                                    v/737
                                                                    f/735
                                                                    l/736)
                                                                    (apply
                                                                    find_first_opt_aux/733
                                                                    v0/734
                                                                    f/735
                                                                    r/738))))))
                                                                    (letrec
                                                                    (find_first_opt/740
                                                                    (function
                                                                    f/741
                                                                    param/745
                                                                    (if
                                                                    (isint
                                                                    param/745)
                                                                    0
                                                                    (let
                                                                    (*match*/1718 =a
                                                                    (field_int 3
                                                                    param/745)
                                                                    r/744 =a
                                                                    (field_imm 2
                                                                    param/745)
                                                                    v/743 =a
                                                                    (field_imm 1
                                                                    param/745)
                                                                    l/742 =a
                                                                    (field_imm 0
                                                                    param/745))
                                                                    (if
                                                                    (apply
                                                                    f/741
                                                                    v/743)
                                                                    (apply
                                                                    find_first_opt_aux/733
                                                                    v/743
                                                                    f/741
                                                                    l/742)
                                                                    (apply
                                                                    find_first_opt/740
                                                                    f/741
                                                                    r/744))))))
                                                                    (letrec
                                                                    (find_last_aux/746
                                                                    (function
                                                                    v0/747
                                                                    f/748
                                                                    param/752
                                                                    (if
                                                                    (isint
                                                                    param/752)
                                                                    v0/747
                                                                    (let
                                                                    (*match*/1719 =a
                                                                    (field_int 3
                                                                    param/752)
                                                                    r/751 =a
                                                                    (field_imm 2
                                                                    param/752)
                                                                    v/750 =a
                                                                    (field_imm 1
                                                                    param/752)
                                                                    l/749 =a
                                                                    (field_imm 0
                                                                    param/752))
                                                                    (if
                                                                    (apply
                                                                    f/748
                                                                    v/750)
                                                                    (apply
                                                                    find_last_aux/746
                                                                    v/750
                                                                    f/748
                                                                    r/751)
                                                                    (apply
                                                                    find_last_aux/746
                                                                    v0/747
                                                                    f/748
                                                                    l/749))))))
                                                                    (letrec
                                                                    (find_last/753
                                                                    (function
                                                                    f/754
                                                                    param/758
                                                                    (if
                                                                    (isint
                                                                    param/758)
                                                                    (raise
                                                                    (field_imm 7
                                                                    (global Stdlib!)))
                                                                    (let
                                                                    (*match*/1720 =a
                                                                    (field_int 3
                                                                    param/758)
                                                                    r/757 =a
                                                                    (field_imm 2
                                                                    param/758)
                                                                    v/756 =a
                                                                    (field_imm 1
                                                                    param/758)
                                                                    l/755 =a
                                                                    (field_imm 0
                                                                    param/758))
                                                                    (if
                                                                    (apply
                                                                    f/754
                                                                    v/756)
                                                                    (apply
                                                                    find_last_aux/746
                                                                    v/756
                                                                    f/754
                                                                    r/757)
                                                                    (apply
                                                                    find_last/753
                                                                    f/754
                                                                    l/755))))))
                                                                    (letrec
                                                                    (find_last_opt_aux/759
                                                                    (function
                                                                    v0/760
                                                                    f/761
                                                                    param/765
                                                                    (if
                                                                    (isint
                                                                    param/765)
                                                                    (makeblock 0
                                                                    v0/760)
                                                                    (let
                                                                    (*match*/1721 =a
                                                                    (field_int 3
                                                                    param/765)
                                                                    r/764 =a
                                                                    (field_imm 2
                                                                    param/765)
                                                                    v/763 =a
                                                                    (field_imm 1
                                                                    param/765)
                                                                    l/762 =a
                                                                    (field_imm 0
                                                                    param/765))
                                                                    (if
                                                                    (apply
                                                                    f/761
                                                                    v/763)
                                                                    (apply
                                                                    find_last_opt_aux/759
                                                                    v/763
                                                                    f/761
                                                                    r/764)
                                                                    (apply
                                                                    find_last_opt_aux/759
                                                                    v0/760
                                                                    f/761
                                                                    l/762))))))
                                                                    (letrec
                                                                    (find_last_opt/766
                                                                    (function
                                                                    f/767
                                                                    param/771
                                                                    (if
                                                                    (isint
                                                                    param/771)
                                                                    0
                                                                    (let
                                                                    (*match*/1722 =a
                                                                    (field_int 3
                                                                    param/771)
                                                                    r/770 =a
                                                                    (field_imm 2
                                                                    param/771)
                                                                    v/769 =a
                                                                    (field_imm 1
                                                                    param/771)
                                                                    l/768 =a
                                                                    (field_imm 0
                                                                    param/771))
                                                                    (if
                                                                    (apply
                                                                    f/767
                                                                    v/769)
                                                                    (apply
                                                                    find_last_opt_aux/759
                                                                    v/769
                                                                    f/767
                                                                    r/770)
                                                                    (apply
                                                                    find_last_opt/766
                                                                    f/767
                                                                    l/768))))))
                                                                    (letrec
                                                                    (find_opt/772
                                                                    (function
                                                                    x/773
                                                                    param/778
                                                                    (if
                                                                    (isint
                                                                    param/778)
                                                                    0
                                                                    (let
                                                                    (*match*/1723 =a
                                                                    (field_int 3
                                                                    param/778)
                                                                    r/776 =a
                                                                    (field_imm 2
                                                                    param/778)
                                                                    v/775 =a
                                                                    (field_imm 1
                                                                    param/778)
                                                                    l/774 =a
                                                                    (field_imm 0
                                                                    param/778)
                                                                    c/777 =[int]
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/405)
                                                                    x/773
                                                                    v/775))
                                                                    (if
                                                                    (== c/777
                                                                    0)
                                                                    (makeblock 0
                                                                    v/775)
                                                                    (apply
                                                                    find_opt/772
                                                                    x/773
                                                                    (if
                                                                    (< c/777
                                                                    0) l/774
                                                                    r/776)))))))
                                                                    (let
                                                                    (try_join/779 =
                                                                    (function
                                                                    l/781
                                                                    v/782
                                                                    r/783
                                                                    (if
                                                                    (&&
                                                                    (||
                                                                    (== l/781
                                                                    0)
                                                                    (<
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/405)
                                                                    (apply
                                                                    max_elt/492
                                                                    l/781)
                                                                    v/782) 0))
                                                                    (||
                                                                    (== r/783
                                                                    0)
                                                                    (<
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/405)
                                                                    v/782
                                                                    (apply
                                                                    min_elt/484
                                                                    r/783))
                                                                    0)))
                                                                    (apply
                                                                    join/472
                                                                    l/781
                                                                    v/782
                                                                    r/783)
                                                                    (apply
                                                                    union/551
                                                                    l/781
                                                                    (apply
                                                                    add/448
                                                                    v/782
                                                                    r/783)))))
                                                                    (letrec
                                                                    (map/784
                                                                    (function
                                                                    f/785
                                                                    t/789
                                                                    (if
                                                                    (isint
                                                                    t/789) 0
                                                                    (let
                                                                    (*match*/1724 =a
                                                                    (field_int 3
                                                                    t/789)
                                                                    r/788 =a
                                                                    (field_imm 2
                                                                    t/789)
                                                                    v/787 =a
                                                                    (field_imm 1
                                                                    t/789)
                                                                    l/786 =a
                                                                    (field_imm 0
                                                                    t/789)
                                                                    l'/790 =
                                                                    (apply
                                                                    map/784
                                                                    f/785
                                                                    l/786)
                                                                    v'/791 =
                                                                    (apply
                                                                    f/785
                                                                    v/787)
                                                                    r'/792 =
                                                                    (apply
                                                                    map/784
                                                                    f/785
                                                                    r/788))
                                                                    (if
                                                                    (&&
                                                                    (== l/786
                                                                    l'/790)
                                                                    (&&
                                                                    (== v/787
                                                                    v'/791)
                                                                    (== r/788
                                                                    r'/792)))
                                                                    t/789
                                                                    (apply
                                                                    try_join/779
                                                                    l'/790
                                                                    v'/791
                                                                    r'/792))))))
                                                                    (let
                                                                    (try_concat/793 =
                                                                    (function
                                                                    t1/795
                                                                    t2/796
                                                                    (catch
                                                                    (catch
                                                                    (if
                                                                    (isint
                                                                    t1/795)
                                                                    (let
                                                                    (t/797 =a
                                                                    t2/796)
                                                                    t/797)
                                                                    (exit 42))
                                                                    with (42)
                                                                    (if
                                                                    (isint
                                                                    t2/796)
                                                                    (let
                                                                    (t/798 =a
                                                                    t1/795)
                                                                    t/798)
                                                                    (exit 41)))
                                                                    with (41)
                                                                    (apply
                                                                    try_join/779
                                                                    t1/795
                                                                    (apply
                                                                    min_elt/484
                                                                    t2/796)
                                                                    (apply
                                                                    remove_min_elt/500
                                                                    t2/796)))))
                                                                    (letrec
                                                                    (filter_map/799
                                                                    (function
                                                                    f/800
                                                                    t/804
                                                                    (if
                                                                    (isint
                                                                    t/804) 0
                                                                    (let
                                                                    (*match*/1725 =a
                                                                    (field_int 3
                                                                    t/804)
                                                                    r/803 =a
                                                                    (field_imm 2
                                                                    t/804)
                                                                    v/802 =a
                                                                    (field_imm 1
                                                                    t/804)
                                                                    l/801 =a
                                                                    (field_imm 0
                                                                    t/804)
                                                                    l'/805 =
                                                                    (apply
                                                                    filter_map/799
                                                                    f/800
                                                                    l/801)
                                                                    v'/806 =
                                                                    (apply
                                                                    f/800
                                                                    v/802)
                                                                    r'/807 =
                                                                    (apply
                                                                    filter_map/799
                                                                    f/800
                                                                    r/803))
                                                                    (if
                                                                    (isint
                                                                    v'/806)
                                                                    (apply
                                                                    try_concat/793
                                                                    l'/805
                                                                    r'/807)
                                                                    (let
                                                                    (v'/808 =a
                                                                    (field_imm 0
                                                                    v'/806))
                                                                    (if
                                                                    (&&
                                                                    (== l/801
                                                                    l'/805)
                                                                    (&&
                                                                    (== v/802
                                                                    v'/808)
                                                                    (== r/803
                                                                    r'/807)))
                                                                    t/804
                                                                    (apply
                                                                    try_join/779
                                                                    l'/805
                                                                    v'/808
                                                                    r'/807))))))))
                                                                    (let
                                                                    (of_sorted_list/809 =
                                                                    (function
                                                                    l/811
                                                                    (letrec
                                                                    (sub/812
                                                                    (function
                                                                    n/813[int]
                                                                    l/814
                                                                    (catch
                                                                    (if
                                                                    (isout 3
                                                                    n/813)
                                                                    (exit 49)
                                                                    (switch* n/813
                                                                    case int 0:
                                                                    (let
                                                                    (l/815 =a
                                                                    l/814)
                                                                    (makeblock 0
                                                                    0 l/815))
                                                                    case int 1:
                                                                    (if
                                                                    (isint
                                                                    l/814)
                                                                    (exit 49)
                                                                    (let
                                                                    (l/817 =a
                                                                    (field_imm 1
                                                                    l/814)
                                                                    x0/816 =a
                                                                    (field_imm 0
                                                                    l/814))
                                                                    (makeblock 0
                                                                    (makeblock 0 (*,*,*,int)
                                                                    0 x0/816
                                                                    0 1)
                                                                    l/817)))
                                                                    case int 2:
                                                                    (if
                                                                    (isint
                                                                    l/814)
                                                                    (exit 49)
                                                                    (let
                                                                    (*match*/1740 =a
                                                                    (field_imm 1
                                                                    l/814))
                                                                    (if
                                                                    (isint
                                                                    *match*/1740)
                                                                    (exit 49)
                                                                    (let
                                                                    (l/820 =a
                                                                    (field_imm 1
                                                                    *match*/1740)
                                                                    x1/819 =a
                                                                    (field_imm 0
                                                                    *match*/1740)
                                                                    x0/818 =a
                                                                    (field_imm 0
                                                                    l/814))
                                                                    (makeblock 0
                                                                    (makeblock 0 (*,*,*,int)
                                                                    (makeblock 0 (*,*,*,int)
                                                                    0 x0/818
                                                                    0 1)
                                                                    x1/819 0
                                                                    2) l/820)))))
                                                                    case int 3:
                                                                    (if
                                                                    (isint
                                                                    l/814)
                                                                    (exit 49)
                                                                    (let
                                                                    (*match*/1741 =a
                                                                    (field_imm 1
                                                                    l/814))
                                                                    (if
                                                                    (isint
                                                                    *match*/1741)
                                                                    (exit 49)
                                                                    (let
                                                                    (*match*/1742 =a
                                                                    (field_imm 1
                                                                    *match*/1741))
                                                                    (if
                                                                    (isint
                                                                    *match*/1742)
                                                                    (exit 49)
                                                                    (let
                                                                    (l/824 =a
                                                                    (field_imm 1
                                                                    *match*/1742)
                                                                    x2/823 =a
                                                                    (field_imm 0
                                                                    *match*/1742)
                                                                    x1/822 =a
                                                                    (field_imm 0
                                                                    *match*/1741)
                                                                    x0/821 =a
                                                                    (field_imm 0
                                                                    l/814))
                                                                    (makeblock 0
                                                                    (makeblock 0 (*,*,*,int)
                                                                    (makeblock 0 (*,*,*,int)
                                                                    0 x0/821
                                                                    0 1)
                                                                    x1/822
                                                                    (makeblock 0 (*,*,*,int)
                                                                    0 x2/823
                                                                    0 1) 2)
                                                                    l/824)))))))))
                                                                    with (49)
                                                                    (let
                                                                    (l/826 =a
                                                                    l/814
                                                                    n/825 =a
                                                                    n/813
                                                                    nl/827 =[int]
                                                                    (/ n/825
                                                                    2)
                                                                    *match*/1739 =
                                                                    (apply
                                                                    sub/812
                                                                    nl/827
                                                                    l/826)
                                                                    l/829 =a
                                                                    (field_imm 1
                                                                    *match*/1739))
                                                                    (if
                                                                    (isint
                                                                    l/829)
                                                                    (raise
                                                                    (makeblock 0
                                                                    (global Assert_failure/28!)
                                                                    [0:
                                                                    "lib/set.ml"
                                                                    571 18]))
                                                                    (let
                                                                    (l/831 =a
                                                                    (field_imm 1
                                                                    l/829)
                                                                    mid/830 =a
                                                                    (field_imm 0
                                                                    l/829)
                                                                    left/828 =a
                                                                    (field_imm 0
                                                                    *match*/1739)
                                                                    *match*/1735 =
                                                                    (apply
                                                                    sub/812
                                                                    (-
                                                                    (- n/825
                                                                    nl/827)
                                                                    1) l/831)
                                                                    l/833 =a
                                                                    (field_imm 1
                                                                    *match*/1735)
                                                                    right/832 =a
                                                                    (field_imm 0
                                                                    *match*/1735))
                                                                    (makeblock 0
                                                                    (apply
                                                                    create/418
                                                                    left/828
                                                                    mid/830
                                                                    right/832)
                                                                    l/833)))))))
                                                                    (field_mut 0
                                                                    (apply
                                                                    sub/812
                                                                    (apply
                                                                    (field_imm 0
                                                                    (global Stdlib__List!))
                                                                    l/811)
                                                                    l/811))))
                                                                    to_list/900 =
                                                                    elements/708
                                                                    of_list/901 =
                                                                    (function
                                                                    l/903
                                                                    (catch
                                                                    (if
                                                                    (isint
                                                                    l/903)
                                                                    empty/531
                                                                    (let
                                                                    (*match*/1743 =a
                                                                    (field_imm 1
                                                                    l/903)
                                                                    x0/904 =a
                                                                    (field_imm 0
                                                                    l/903))
                                                                    (if
                                                                    (isint
                                                                    *match*/1743)
                                                                    (apply
                                                                    singleton/457
                                                                    x0/904)
                                                                    (let
                                                                    (*match*/1744 =a
                                                                    (field_imm 1
                                                                    *match*/1743)
                                                                    x1/906 =a
                                                                    (field_imm 0
                                                                    *match*/1743))
                                                                    (if
                                                                    (isint
                                                                    *match*/1744)
                                                                    (let
                                                                    (x0/905 =a
                                                                    x0/904)
                                                                    (apply
                                                                    add/448
                                                                    x1/906
                                                                    (apply
                                                                    singleton/457
                                                                    x0/905)))
                                                                    (let
                                                                    (*match*/1745 =a
                                                                    (field_imm 1
                                                                    *match*/1744)
                                                                    x2/909 =a
                                                                    (field_imm 0
                                                                    *match*/1744))
                                                                    (if
                                                                    (isint
                                                                    *match*/1745)
                                                                    (let
                                                                    (x1/908 =a
                                                                    x1/906
                                                                    x0/907 =a
                                                                    x0/904)
                                                                    (apply
                                                                    add/448
                                                                    x2/909
                                                                    (apply
                                                                    add/448
                                                                    x1/908
                                                                    (apply
                                                                    singleton/457
                                                                    x0/907))))
                                                                    (let
                                                                    (*match*/1746 =a
                                                                    (field_imm 1
                                                                    *match*/1745)
                                                                    x3/913 =a
                                                                    (field_imm 0
                                                                    *match*/1745))
                                                                    (if
                                                                    (isint
                                                                    *match*/1746)
                                                                    (let
                                                                    (x2/912 =a
                                                                    x2/909
                                                                    x1/911 =a
                                                                    x1/906
                                                                    x0/910 =a
                                                                    x0/904)
                                                                    (apply
                                                                    add/448
                                                                    x3/913
                                                                    (apply
                                                                    add/448
                                                                    x2/912
                                                                    (apply
                                                                    add/448
                                                                    x1/911
                                                                    (apply
                                                                    singleton/457
                                                                    x0/910)))))
                                                                    (let
                                                                    (*match*/1747 =a
                                                                    (field_imm 1
                                                                    *match*/1746))
                                                                    (if
                                                                    (isint
                                                                    *match*/1747)
                                                                    (let
                                                                    (x3/917 =a
                                                                    x3/913
                                                                    x2/916 =a
                                                                    x2/909
                                                                    x1/915 =a
                                                                    x1/906
                                                                    x0/914 =a
                                                                    x0/904
                                                                    x4/918 =a
                                                                    (field_imm 0
                                                                    *match*/1746))
                                                                    (apply
                                                                    add/448
                                                                    x4/918
                                                                    (apply
                                                                    add/448
                                                                    x3/917
                                                                    (apply
                                                                    add/448
                                                                    x2/916
                                                                    (apply
                                                                    add/448
                                                                    x1/915
                                                                    (apply
                                                                    singleton/457
                                                                    x0/914))))))
                                                                    (exit 50))))))))))))
                                                                    with (50)
                                                                    (apply
                                                                    of_sorted_list/809
                                                                    (apply
                                                                    (field_imm 61
                                                                    (global Stdlib__List!))
                                                                    (field_imm 0
                                                                    Ord/405)
                                                                    l/903))))
                                                                    add_seq/919 =
                                                                    (function
                                                                    i/921
                                                                    m/922
                                                                    (apply
                                                                    (field_imm 4
                                                                    (global Stdlib__Seq!))
                                                                    (function
                                                                    s/923
                                                                    x/924
                                                                    (apply
                                                                    add/448
                                                                    x/924
                                                                    s/923))
                                                                    m/922
                                                                    i/921))
                                                                    of_seq/986 =
                                                                    (function
                                                                    i/988
                                                                    (apply
                                                                    add_seq/919
                                                                    i/988
                                                                    empty/531)))
                                                                    (letrec
                                                                    (seq_of_enum_/989
                                                                    (function
                                                                    c/990
                                                                    param/994[int]
                                                                    (if
                                                                    (isint
                                                                    c/990) 0
                                                                    (let
                                                                    (rest/993 =a
                                                                    (field_imm 2
                                                                    c/990)
                                                                    t/992 =a
                                                                    (field_imm 1
                                                                    c/990)
                                                                    x/991 =a
                                                                    (field_imm 0
                                                                    c/990))
                                                                    (makeblock 0
                                                                    x/991
                                                                    (apply
                                                                    seq_of_enum_/989
                                                                    (apply
                                                                    cons_enum/619
                                                                    t/992
                                                                    rest/993)))))))
                                                                    (let
                                                                    (to_seq/995 =
                                                                    (function
                                                                    c/997
                                                                    (apply
                                                                    seq_of_enum_/989
                                                                    (apply
                                                                    cons_enum/619
                                                                    c/997 0))))
                                                                    (letrec
                                                                    (snoc_enum/998
                                                                    (function
                                                                    s/999
                                                                    e/1000
                                                                    (if
                                                                    (isint
                                                                    s/999)
                                                                    e/1000
                                                                    (let
                                                                    (*match*/1748 =a
                                                                    (field_int 3
                                                                    s/999)
                                                                    r/1003 =a
                                                                    (field_imm 2
                                                                    s/999)
                                                                    v/1002 =a
                                                                    (field_imm 1
                                                                    s/999)
                                                                    l/1001 =a
                                                                    (field_imm 0
                                                                    s/999))
                                                                    (apply
                                                                    snoc_enum/998
                                                                    r/1003
                                                                    (makeblock 0
                                                                    v/1002
                                                                    l/1001
                                                                    e/1000))))))
                                                                    (letrec
                                                                    (rev_seq_of_enum_/1004
                                                                    (function
                                                                    c/1005
                                                                    param/1009[int]
                                                                    (if
                                                                    (isint
                                                                    c/1005) 0
                                                                    (let
                                                                    (rest/1008 =a
                                                                    (field_imm 2
                                                                    c/1005)
                                                                    t/1007 =a
                                                                    (field_imm 1
                                                                    c/1005)
                                                                    x/1006 =a
                                                                    (field_imm 0
                                                                    c/1005))
                                                                    (makeblock 0
                                                                    x/1006
                                                                    (apply
                                                                    rev_seq_of_enum_/1004
                                                                    (apply
                                                                    snoc_enum/998
                                                                    t/1007
                                                                    rest/1008)))))))
                                                                    (let
                                                                    (to_rev_seq/1010 =
                                                                    (function
                                                                    c/1012
                                                                    (apply
                                                                    rev_seq_of_enum_/1004
                                                                    (apply
                                                                    snoc_enum/998
                                                                    c/1012 0)))
                                                                    to_seq_from/1013 =
                                                                    (function
                                                                    low/1015
                                                                    s/1016
                                                                    (letrec
                                                                    (aux/1017
                                                                    (function
                                                                    low/1018
                                                                    s/1019
                                                                    c/1020
                                                                    (if
                                                                    (isint
                                                                    s/1019)
                                                                    c/1020
                                                                    (let
                                                                    (*match*/1749 =a
                                                                    (field_int 3
                                                                    s/1019)
                                                                    r/1023 =a
                                                                    (field_imm 2
                                                                    s/1019)
                                                                    v/1022 =a
                                                                    (field_imm 1
                                                                    s/1019)
                                                                    l/1021 =a
                                                                    (field_imm 0
                                                                    s/1019)
                                                                    n/1024 =
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/405)
                                                                    v/1022
                                                                    low/1018))
                                                                    (catch
                                                                    (catch
                                                                    (if
                                                                    (!=
                                                                    n/1024 0)
                                                                    (exit 52)
                                                                    (makeblock 0
                                                                    v/1022
                                                                    r/1023
                                                                    c/1020))
                                                                    with (52)
                                                                    (if
                                                                    (< n/1024
                                                                    0)
                                                                    (apply
                                                                    aux/1017
                                                                    low/1018
                                                                    r/1023
                                                                    c/1020)
                                                                    (exit 51)))
                                                                    with (51)
                                                                    (apply
                                                                    aux/1017
                                                                    low/1018
                                                                    l/1021
                                                                    (makeblock 0
                                                                    v/1022
                                                                    r/1023
                                                                    c/1020)))))))
                                                                    (apply
                                                                    seq_of_enum_/989
                                                                    (apply
                                                                    aux/1017
                                                                    low/1015
                                                                    s/1016 0)))))
                                                                    (makeblock 0
                                                                    height/414
                                                                    create/418
                                                                    bal/427
                                                                    add/448
                                                                    singleton/457
                                                                    add_min_element/460
                                                                    add_max_element/466
                                                                    join/472
                                                                    min_elt/484
                                                                    min_elt_opt/488
                                                                    max_elt/492
                                                                    max_elt_opt/496
                                                                    remove_min_elt/500
                                                                    merge/506
                                                                    concat/512
                                                                    split/518
                                                                    empty/531
                                                                    is_empty/532
                                                                    mem/535
                                                                    remove/542
                                                                    union/551
                                                                    inter/568
                                                                    split_bis/582
                                                                    disjoint/595
                                                                    diff/604
                                                                    cons_enum/619
                                                                    compare_aux/625
                                                                    compare/635
                                                                    equal/638
                                                                    subset/642
                                                                    iter/653
                                                                    fold/659
                                                                    for_all/666
                                                                    exists/672
                                                                    filter/678
                                                                    partition/687
                                                                    cardinal/698
                                                                    elements_aux/702
                                                                    elements/708
                                                                    choose/711
                                                                    choose_opt/712
                                                                    find/713
                                                                    find_first_aux/720
                                                                    find_first/727
                                                                    find_first_opt_aux/733
                                                                    find_first_opt/740
                                                                    find_last_aux/746
                                                                    find_last/753
                                                                    find_last_opt_aux/759
                                                                    find_last_opt/766
                                                                    find_opt/772
                                                                    try_join/779
                                                                    map/784
                                                                    try_concat/793
                                                                    filter_map/799
                                                                    of_sorted_list/809
                                                                    to_list/900
                                                                    of_list/901
                                                                    add_seq/919
                                                                    of_seq/986
                                                                    seq_of_enum_/989
                                                                    to_seq/995
                                                                    snoc_enum/998
                                                                    rev_seq_of_enum_/1004
                                                                    to_rev_seq/1010
                                                                    to_seq_from/1013)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
  (seq (setfield_ptr(root-init) 0 (global Ocaml_ocaml_types__Set!) Make/1025)
    0))
(let
  (Make/1025 =
     (function Ord/1750 is_a_functor
       (let
         (height/414 =
            (function param/417 : int
              (if (isint param/417) 0 (field_int 3 param/417)))
          create/418 =
            (function l/420 v/421 r/422
              (let
                (hl/423 =[int] (if (isint l/420) 0 (field_int 3 l/420))
                 hr/425 =[int] (if (isint r/422) 0 (field_int 3 r/422)))
                (makeblock 0 (*,*,*,int) l/420 v/421 r/422
                  (if (>= hl/423 hr/425) (+ hl/423 1) (+ hr/425 1)))))
          bal/427 =
            (function l/429 v/430 r/431
              (let
                (hl/432 =[int] (if (isint l/429) 0 (field_int 3 l/429))
                 hr/434 =[int] (if (isint r/431) 0 (field_int 3 r/431)))
                (if (> hl/432 (+ hr/434 2))
                  (if (isint l/429)
                    (apply (field_imm 0 (global Stdlib!)) "Set.bal")
                    (let
                      (lr/438 =a (field_imm 2 l/429)
                       lv/437 =a (field_imm 1 l/429)
                       ll/436 =a (field_imm 0 l/429))
                      (if
                        (>= (apply height/414 ll/436)
                          (apply height/414 lr/438))
                        (apply create/418 ll/436 lv/437
                          (apply create/418 lr/438 v/430 r/431))
                        (if (isint lr/438)
                          (apply (field_imm 0 (global Stdlib!)) "Set.bal")
                          (apply create/418
                            (apply create/418 ll/436 lv/437
                              (field_imm 0 lr/438))
                            (field_imm 1 lr/438)
                            (apply create/418 (field_imm 2 lr/438) v/430
                              r/431))))))
                  (if (> hr/434 (+ hl/432 2))
                    (if (isint r/431)
                      (apply (field_imm 0 (global Stdlib!)) "Set.bal")
                      (let
                        (rr/444 =a (field_imm 2 r/431)
                         rv/443 =a (field_imm 1 r/431)
                         rl/442 =a (field_imm 0 r/431))
                        (if
                          (>= (apply height/414 rr/444)
                            (apply height/414 rl/442))
                          (apply create/418
                            (apply create/418 l/429 v/430 rl/442) rv/443
                            rr/444)
                          (if (isint rl/442)
                            (apply (field_imm 0 (global Stdlib!)) "Set.bal")
                            (apply create/418
                              (apply create/418 l/429 v/430
                                (field_imm 0 rl/442))
                              (field_imm 1 rl/442)
                              (apply create/418 (field_imm 2 rl/442) rv/443
                                rr/444))))))
                    (makeblock 0 (*,*,*,int) l/429 v/430 r/431
                      (if (>= hl/432 hr/434) (+ hl/432 1) (+ hr/434 1))))))))
         (letrec
           (add/448
              (function x/449 t/453
                (if (isint t/453) (makeblock 0 (*,*,*,int) 0 x/449 0 1)
                  (let
                    (r/452 =a (field_imm 2 t/453)
                     v/451 =a (field_imm 1 t/453)
                     l/450 =a (field_imm 0 t/453)
                     c/454 =[int] (apply (field_imm 0 Ord/1750) x/449 v/451))
                    (if (== c/454 0) t/453
                      (if (< c/454 0)
                        (let (ll/455 = (apply add/448 x/449 l/450))
                          (if (== l/450 ll/455) t/453
                            (apply bal/427 ll/455 v/451 r/452)))
                        (let (rr/456 = (apply add/448 x/449 r/452))
                          (if (== r/452 rr/456) t/453
                            (apply bal/427 l/450 v/451 rr/456)))))))))
           (let
             (singleton/457 =
                (function x/459 (makeblock 0 (*,*,*,int) 0 x/459 0 1)))
             (letrec
               (add_min_element/460
                  (function x/461 param/465
                    (if (isint param/465) (apply singleton/457 x/461)
                      (apply bal/427
                        (apply add_min_element/460 x/461
                          (field_imm 0 param/465))
                        (field_imm 1 param/465) (field_imm 2 param/465)))))
               (letrec
                 (add_max_element/466
                    (function x/467 param/471
                      (if (isint param/471) (apply singleton/457 x/467)
                        (apply bal/427 (field_imm 0 param/471)
                          (field_imm 1 param/471)
                          (apply add_max_element/466 x/467
                            (field_imm 2 param/471))))))
                 (letrec
                   (join/472
                      (function l/473 v/474 r/475
                        (if (isint l/473)
                          (apply add_min_element/460 v/474 r/475)
                          (if (isint r/475)
                            (apply add_max_element/466 v/474 l/473)
                            (let
                              (rh/483 =a (field_int 3 r/475)
                               lh/479 =a (field_int 3 l/473))
                              (if (> lh/479 (+ rh/483 2))
                                (apply bal/427 (field_imm 0 l/473)
                                  (field_imm 1 l/473)
                                  (apply join/472 (field_imm 2 l/473) v/474
                                    r/475))
                                (if (> rh/483 (+ lh/479 2))
                                  (apply bal/427
                                    (apply join/472 l/473 v/474
                                      (field_imm 0 r/475))
                                    (field_imm 1 r/475) (field_imm 2 r/475))
                                  (apply create/418 l/473 v/474 r/475))))))))
                   (letrec
                     (min_elt/484
                        (function param/487
                          (if (isint param/487)
                            (raise (field_imm 7 (global Stdlib!)))
                            (let (l/486 =a (field_imm 0 param/487))
                              (if (isint l/486) (field_imm 1 param/487)
                                (apply min_elt/484 l/486))))))
                     (letrec
                       (min_elt_opt/488
                          (function param/491
                            (if (isint param/491) 0
                              (let (l/490 =a (field_imm 0 param/491))
                                (if (isint l/490)
                                  (makeblock 0 (field_imm 1 param/491))
                                  (apply min_elt_opt/488 l/490))))))
                       (letrec
                         (max_elt/492
                            (function param/495
                              (if (isint param/495)
                                (raise (field_imm 7 (global Stdlib!)))
                                (if (isint (field_imm 2 param/495))
                                  (field_imm 1 param/495)
                                  (apply max_elt/492 (field_imm 2 param/495))))))
                         (letrec
                           (max_elt_opt/496
                              (function param/499
                                (if (isint param/499) 0
                                  (if (isint (field_imm 2 param/499))
                                    (makeblock 0 (field_imm 1 param/499))
                                    (apply max_elt_opt/496
                                      (field_imm 2 param/499))))))
                           (letrec
                             (remove_min_elt/500
                                (function param/505
                                  (if (isint param/505)
                                    (apply (field_imm 0 (global Stdlib!))
                                      "Set.remove_min_elt")
                                    (let (l/502 =a (field_imm 0 param/505))
                                      (if (isint l/502)
                                        (field_imm 2 param/505)
                                        (apply bal/427
                                          (apply remove_min_elt/500 l/502)
                                          (field_imm 1 param/505)
                                          (field_imm 2 param/505)))))))
                             (let
                               (merge/506 =
                                  (function t1/508 t2/509
                                    (if (isint t1/508) t2/509
                                      (if (isint t2/509) t1/508
                                        (apply bal/427 t1/508
                                          (apply min_elt/484 t2/509)
                                          (apply remove_min_elt/500 t2/509)))))
                                concat/512 =
                                  (function t1/514 t2/515
                                    (if (isint t1/514) t2/515
                                      (if (isint t2/515) t1/514
                                        (apply join/472 t1/514
                                          (apply min_elt/484 t2/515)
                                          (apply remove_min_elt/500 t2/515))))))
                               (letrec
                                 (split/518
                                    (function x/519 param/530
                                      (if (isint param/530) [0: 0 0 0]
                                        (let
                                          (r/522 =a (field_imm 2 param/530)
                                           v/521 =a (field_imm 1 param/530)
                                           l/520 =a (field_imm 0 param/530)
                                           c/523 =[int]
                                             (apply (field_imm 0 Ord/1750)
                                               x/519 v/521))
                                          (if (== c/523 0)
                                            (makeblock 0 (*,int,*) l/520 1
                                              r/522)
                                            (if (< c/523 0)
                                              (let
                                                (*match*/1665 =
                                                   (apply split/518 x/519
                                                     l/520))
                                                (makeblock 0 (*,int,*)
                                                  (field_imm 0 *match*/1665)
                                                  (field_imm 1 *match*/1665)
                                                  (apply join/472
                                                    (field_imm 2
                                                      *match*/1665)
                                                    v/521 r/522)))
                                              (let
                                                (*match*/1660 =
                                                   (apply split/518 x/519
                                                     r/522))
                                                (makeblock 0 (*,int,*)
                                                  (apply join/472 l/520 v/521
                                                    (field_imm 0
                                                      *match*/1660))
                                                  (field_imm 1 *match*/1660)
                                                  (field_imm 2 *match*/1660)))))))))
                                 (let
                                   (empty/531 = 0
                                    is_empty/532 =
                                      (function param/534 : int
                                        (if (isint param/534) 1 0)))
                                   (letrec
                                     (mem/535
                                        (function x/536 param/541 : int
                                          (if (isint param/541) 0
                                            (let
                                              (c/540 =[int]
                                                 (apply
                                                   (field_imm 0 Ord/1750)
                                                   x/536
                                                   (field_imm 1 param/541)))
                                              (|| (== c/540 0)
                                                (apply mem/535 x/536
                                                  (if (< c/540 0)
                                                    (field_imm 0 param/541)
                                                    (field_imm 2 param/541))))))))
                                     (letrec
                                       (remove/542
                                          (function x/543 t/547
                                            (if (isint t/547) 0
                                              (let
                                                (r/546 =a (field_imm 2 t/547)
                                                 v/545 =a (field_imm 1 t/547)
                                                 l/544 =a (field_imm 0 t/547)
                                                 c/548 =[int]
                                                   (apply
                                                     (field_imm 0 Ord/1750)
                                                     x/543 v/545))
                                                (if (== c/548 0)
                                                  (apply merge/506 l/544
                                                    r/546)
                                                  (if (< c/548 0)
                                                    (let
                                                      (ll/549 =
                                                         (apply remove/542
                                                           x/543 l/544))
                                                      (if (== l/544 ll/549)
                                                        t/547
                                                        (apply bal/427 ll/549
                                                          v/545 r/546)))
                                                    (let
                                                      (rr/550 =
                                                         (apply remove/542
                                                           x/543 r/546))
                                                      (if (== r/546 rr/550)
                                                        t/547
                                                        (apply bal/427 l/544
                                                          v/545 rr/550)))))))))
                                       (letrec
                                         (union/551
                                            (function s1/552 s2/553
                                              (if (isint s1/552) s2/553
                                                (if (isint s2/553) s1/552
                                                  (let
                                                    (h2/563 =a
                                                       (field_int 3 s2/553)
                                                     v2/561 =a
                                                       (field_imm 1 s2/553)
                                                     h1/559 =a
                                                       (field_int 3 s1/552)
                                                     v1/557 =a
                                                       (field_imm 1 s1/552))
                                                    (if (>= h1/559 h2/563)
                                                      (if (== h2/563 1)
                                                        (apply add/448 v2/561
                                                          s1/552)
                                                        (let
                                                          (*match*/1679 =
                                                             (apply split/518
                                                               v1/557 s2/553))
                                                          (apply join/472
                                                            (apply union/551
                                                              (field_imm 0
                                                                s1/552)
                                                              (field_imm 0
                                                                *match*/1679))
                                                            v1/557
                                                            (apply union/551
                                                              (field_imm 2
                                                                s1/552)
                                                              (field_imm 2
                                                                *match*/1679)))))
                                                      (if (== h1/559 1)
                                                        (apply add/448 v1/557
                                                          s2/553)
                                                        (let
                                                          (*match*/1673 =
                                                             (apply split/518
                                                               v2/561 s1/552))
                                                          (apply join/472
                                                            (apply union/551
                                                              (field_imm 0
                                                                *match*/1673)
                                                              (field_imm 0
                                                                s2/553))
                                                            v2/561
                                                            (apply union/551
                                                              (field_imm 2
                                                                *match*/1673)
                                                              (field_imm 2
                                                                s2/553)))))))))))
                                         (letrec
                                           (inter/568
                                              (function s1/569 s2/570
                                                (if (isint s1/569) 0
                                                  (if (isint s2/570) 0
                                                    (let
                                                      (r1/573 =a
                                                         (field_imm 2 s1/569)
                                                       v1/572 =a
                                                         (field_imm 1 s1/569)
                                                       l1/571 =a
                                                         (field_imm 0 s1/569)
                                                       *match*/1681 =
                                                         (apply split/518
                                                           v1/572 s2/570)
                                                       l2/575 =a
                                                         (field_imm 0
                                                           *match*/1681))
                                                      (if
                                                        (field_imm 1
                                                          *match*/1681)
                                                        (apply join/472
                                                          (apply inter/568
                                                            l1/571 l2/575)
                                                          v1/572
                                                          (apply inter/568
                                                            r1/573
                                                            (field_imm 2
                                                              *match*/1681)))
                                                        (apply concat/512
                                                          (apply inter/568
                                                            l1/571 l2/575)
                                                          (apply inter/568
                                                            r1/573
                                                            (field_imm 2
                                                              *match*/1681)))))))))
                                           (letrec
                                             (split_bis/582
                                                (function x/583 param/594
                                                  (if (isint param/594)
                                                    (makeblock 0 0
                                                      (function
                                                        param/587[int] 0))
                                                    (let
                                                      (r/586 =a
                                                         (field_imm 2
                                                           param/594)
                                                       v/585 =a
                                                         (field_imm 1
                                                           param/594)
                                                       l/584 =a
                                                         (field_imm 0
                                                           param/594)
                                                       c/588 =[int]
                                                         (apply
                                                           (field_imm 0
                                                             Ord/1750)
                                                           x/583 v/585))
                                                      (if (== c/588 0) 0
                                                        (if (< c/588 0)
                                                          (let
                                                            (*match*/1685 =
                                                               (apply
                                                                 split_bis/582
                                                                 x/583 l/584))
                                                            (if
                                                              (isint
                                                                *match*/1685)
                                                              0
                                                              (let
                                                                (rl/590 =a
                                                                   (field_imm 1
                                                                    *match*/1685))
                                                                (makeblock 0
                                                                  (field_imm 0
                                                                    *match*/1685)
                                                                  (function
                                                                    param/591[int]
                                                                    (apply
                                                                    join/472
                                                                    (apply
                                                                    rl/590 0)
                                                                    v/585
                                                                    r/586))))))
                                                          (let
                                                            (*match*/1684 =
                                                               (apply
                                                                 split_bis/582
                                                                 x/583 r/586))
                                                            (if
                                                              (isint
                                                                *match*/1684)
                                                              0
                                                              (makeblock 0
                                                                (apply
                                                                  join/472
                                                                  l/584 v/585
                                                                  (field_imm 0
                                                                    *match*/1684))
                                                                (field_imm 1
                                                                  *match*/1684))))))))))
                                             (letrec
                                               (disjoint/595
                                                  (function s1/596 s2/597
                                                    : int
                                                    (catch
                                                      (if (isint s1/596)
                                                        (exit 27)
                                                        (if (isint s2/597)
                                                          (exit 27)
                                                          (if
                                                            (== s1/596
                                                              s2/597)
                                                            0
                                                            (let
                                                              (*match*/1687 =
                                                                 (apply
                                                                   split_bis/582
                                                                   (field_imm 1
                                                                    s1/596)
                                                                   s2/597))
                                                              (if
                                                                (isint
                                                                  *match*/1687)
                                                                0
                                                                (&&
                                                                  (apply
                                                                    disjoint/595
                                                                    (field_imm 0
                                                                    s1/596)
                                                                    (field_imm 0
                                                                    *match*/1687))
                                                                  (apply
                                                                    disjoint/595
                                                                    (field_imm 2
                                                                    s1/596)
                                                                    (apply
                                                                    (field_imm 1
                                                                    *match*/1687)
                                                                    0))))))))
                                                     with (27) 1)))
                                               (letrec
                                                 (diff/604
                                                    (function s1/605 s2/606
                                                      (if (isint s1/605) 0
                                                        (if (isint s2/606)
                                                          s1/605
                                                          (let
                                                            (r1/610 =a
                                                               (field_imm 2
                                                                 s1/605)
                                                             v1/609 =a
                                                               (field_imm 1
                                                                 s1/605)
                                                             l1/608 =a
                                                               (field_imm 0
                                                                 s1/605)
                                                             *match*/1689 =
                                                               (apply
                                                                 split/518
                                                                 v1/609
                                                                 s2/606)
                                                             l2/612 =a
                                                               (field_imm 0
                                                                 *match*/1689))
                                                            (if
                                                              (field_imm 1
                                                                *match*/1689)
                                                              (apply
                                                                concat/512
                                                                (apply
                                                                  diff/604
                                                                  l1/608
                                                                  l2/612)
                                                                (apply
                                                                  diff/604
                                                                  r1/610
                                                                  (field_imm 2
                                                                    *match*/1689)))
                                                              (apply join/472
                                                                (apply
                                                                  diff/604
                                                                  l1/608
                                                                  l2/612)
                                                                v1/609
                                                                (apply
                                                                  diff/604
                                                                  r1/610
                                                                  (field_imm 2
                                                                    *match*/1689)))))))))
                                                 (letrec
                                                   (cons_enum/619
                                                      (function s/620 e/621
                                                        (if (isint s/620)
                                                          e/621
                                                          (apply
                                                            cons_enum/619
                                                            (field_imm 0
                                                              s/620)
                                                            (makeblock 0
                                                              (field_imm 1
                                                                s/620)
                                                              (field_imm 2
                                                                s/620)
                                                              e/621)))))
                                                   (letrec
                                                     (compare_aux/625
                                                        (function e1/626
                                                          e2/627 : int
                                                          (if (isint e1/626)
                                                            (if
                                                              (isint e2/627)
                                                              0 -1)
                                                            (if
                                                              (isint e2/627)
                                                              1
                                                              (let
                                                                (c/634 =[int]
                                                                   (apply
                                                                    (field_imm 0
                                                                    Ord/1750)
                                                                    (field_imm 0
                                                                    e1/626)
                                                                    (field_imm 0
                                                                    e2/627)))
                                                                (if
                                                                  (!= c/634
                                                                    0)
                                                                  c/634
                                                                  (apply
                                                                    compare_aux/625
                                                                    (apply
                                                                    cons_enum/619
                                                                    (field_imm 1
                                                                    e1/626)
                                                                    (field_imm 2
                                                                    e1/626))
                                                                    (apply
                                                                    cons_enum/619
                                                                    (field_imm 1
                                                                    e2/627)
                                                                    (field_imm 2
                                                                    e2/627)))))))))
                                                     (let
                                                       (compare/635 =
                                                          (function s1/636
                                                            s2/637 : int
                                                            (apply
                                                              compare_aux/625
                                                              (apply
                                                                cons_enum/619
                                                                s1/636 0)
                                                              (apply
                                                                cons_enum/619
                                                                s2/637 0)))
                                                        equal/638 =
                                                          (function s1/640
                                                            s2/641 : int
                                                            (==
                                                              (apply
                                                                compare/635
                                                                s1/640
                                                                s2/641)
                                                              0)))
                                                       (letrec
                                                         (subset/642
                                                            (function s1/643
                                                              s2/644 : int
                                                              (if
                                                                (isint
                                                                  s1/643)
                                                                1
                                                                (if
                                                                  (isint
                                                                    s2/644)
                                                                  0
                                                                  (let
                                                                    (r2/650 =a
                                                                    (field_imm 2
                                                                    s2/644)
                                                                    l2/648 =a
                                                                    (field_imm 0
                                                                    s2/644)
                                                                    r1/647 =a
                                                                    (field_imm 2
                                                                    s1/643)
                                                                    v1/646 =a
                                                                    (field_imm 1
                                                                    s1/643)
                                                                    l1/645 =a
                                                                    (field_imm 0
                                                                    s1/643)
                                                                    c/652 =[int]
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/1750)
                                                                    v1/646
                                                                    (field_imm 1
                                                                    s2/644)))
                                                                    (if
                                                                    (== c/652
                                                                    0)
                                                                    (&&
                                                                    (apply
                                                                    subset/642
                                                                    l1/645
                                                                    l2/648)
                                                                    (apply
                                                                    subset/642
                                                                    r1/647
                                                                    r2/650))
                                                                    (if
                                                                    (< c/652
                                                                    0)
                                                                    (&&
                                                                    (apply
                                                                    subset/642
                                                                    (makeblock 0 (*,*,*,int)
                                                                    l1/645
                                                                    v1/646 0
                                                                    0)
                                                                    l2/648)
                                                                    (apply
                                                                    subset/642
                                                                    r1/647
                                                                    s2/644))
                                                                    (&&
                                                                    (apply
                                                                    subset/642
                                                                    (makeblock 0 (*,*,*,int)
                                                                    0 v1/646
                                                                    r1/647 0)
                                                                    r2/650)
                                                                    (apply
                                                                    subset/642
                                                                    l1/645
                                                                    s2/644)))))))))
                                                         (letrec
                                                           (iter/653
                                                              (function f/654
                                                                param/658
                                                                : int
                                                                (if
                                                                  (isint
                                                                    param/658)
                                                                  0
                                                                  (seq
                                                                    (apply
                                                                    iter/653
                                                                    f/654
                                                                    (field_imm 0
                                                                    param/658))
                                                                    (apply
                                                                    f/654
                                                                    (field_imm 1
                                                                    param/658))
                                                                    (apply
                                                                    iter/653
                                                                    f/654
                                                                    (field_imm 2
                                                                    param/658))))))
                                                           (letrec
                                                             (fold/659
                                                                (function
                                                                  f/660 s/661
                                                                  accu/662
                                                                  (if
                                                                    (isint
                                                                    s/661)
                                                                    accu/662
                                                                    (apply
                                                                    fold/659
                                                                    f/660
                                                                    (field_imm 2
                                                                    s/661)
                                                                    (apply
                                                                    f/660
                                                                    (field_imm 1
                                                                    s/661)
                                                                    (apply
                                                                    fold/659
                                                                    f/660
                                                                    (field_imm 0
                                                                    s/661)
                                                                    accu/662))))))
                                                             (letrec
                                                               (for_all/666
                                                                  (function
                                                                    p/667
                                                                    param/671
                                                                    : int
                                                                    (if
                                                                    (isint
                                                                    param/671)
                                                                    1
                                                                    (&&
                                                                    (apply
                                                                    p/667
                                                                    (field_imm 1
                                                                    param/671))
                                                                    (&&
                                                                    (apply
                                                                    for_all/666
                                                                    p/667
                                                                    (field_imm 0
                                                                    param/671))
                                                                    (apply
                                                                    for_all/666
                                                                    p/667
                                                                    (field_imm 2
                                                                    param/671)))))))
                                                               (letrec
                                                                 (exists/672
                                                                    (function
                                                                    p/673
                                                                    param/677
                                                                    : int
                                                                    (if
                                                                    (isint
                                                                    param/677)
                                                                    0
                                                                    (||
                                                                    (apply
                                                                    p/673
                                                                    (field_imm 1
                                                                    param/677))
                                                                    (||
                                                                    (apply
                                                                    exists/672
                                                                    p/673
                                                                    (field_imm 0
                                                                    param/677))
                                                                    (apply
                                                                    exists/672
                                                                    p/673
                                                                    (field_imm 2
                                                                    param/677)))))))
                                                                 (letrec
                                                                   (filter/678
                                                                    (function
                                                                    p/679
                                                                    t/683
                                                                    (if
                                                                    (isint
                                                                    t/683) 0
                                                                    (let
                                                                    (r/682 =a
                                                                    (field_imm 2
                                                                    t/683)
                                                                    v/681 =a
                                                                    (field_imm 1
                                                                    t/683)
                                                                    l/680 =a
                                                                    (field_imm 0
                                                                    t/683)
                                                                    l'/684 =
                                                                    (apply
                                                                    filter/678
                                                                    p/679
                                                                    l/680)
                                                                    pv/685 =[int]
                                                                    (apply
                                                                    p/679
                                                                    v/681)
                                                                    r'/686 =
                                                                    (apply
                                                                    filter/678
                                                                    p/679
                                                                    r/682))
                                                                    (if
                                                                    pv/685
                                                                    (if
                                                                    (&&
                                                                    (== l/680
                                                                    l'/684)
                                                                    (== r/682
                                                                    r'/686))
                                                                    t/683
                                                                    (apply
                                                                    join/472
                                                                    l'/684
                                                                    v/681
                                                                    r'/686))
                                                                    (apply
                                                                    concat/512
                                                                    l'/684
                                                                    r'/686))))))
                                                                   (letrec
                                                                    (partition/687
                                                                    (function
                                                                    p/688
                                                                    param/697
                                                                    (if
                                                                    (isint
                                                                    param/697)
                                                                    [0: 0 0]
                                                                    (let
                                                                    (v/690 =a
                                                                    (field_imm 1
                                                                    param/697)
                                                                    *match*/1709 =
                                                                    (apply
                                                                    partition/687
                                                                    p/688
                                                                    (field_imm 0
                                                                    param/697))
                                                                    lf/693 =a
                                                                    (field_imm 1
                                                                    *match*/1709)
                                                                    lt/692 =a
                                                                    (field_imm 0
                                                                    *match*/1709)
                                                                    pv/694 =[int]
                                                                    (apply
                                                                    p/688
                                                                    v/690)
                                                                    *match*/1705 =
                                                                    (apply
                                                                    partition/687
                                                                    p/688
                                                                    (field_imm 2
                                                                    param/697))
                                                                    rf/696 =a
                                                                    (field_imm 1
                                                                    *match*/1705)
                                                                    rt/695 =a
                                                                    (field_imm 0
                                                                    *match*/1705))
                                                                    (if
                                                                    pv/694
                                                                    (makeblock 0
                                                                    (apply
                                                                    join/472
                                                                    lt/692
                                                                    v/690
                                                                    rt/695)
                                                                    (apply
                                                                    concat/512
                                                                    lf/693
                                                                    rf/696))
                                                                    (makeblock 0
                                                                    (apply
                                                                    concat/512
                                                                    lt/692
                                                                    rt/695)
                                                                    (apply
                                                                    join/472
                                                                    lf/693
                                                                    v/690
                                                                    rf/696)))))))
                                                                    (letrec
                                                                    (cardinal/698
                                                                    (function
                                                                    param/701
                                                                    : int
                                                                    (if
                                                                    (isint
                                                                    param/701)
                                                                    0
                                                                    (+
                                                                    (+
                                                                    (apply
                                                                    cardinal/698
                                                                    (field_imm 0
                                                                    param/701))
                                                                    1)
                                                                    (apply
                                                                    cardinal/698
                                                                    (field_imm 2
                                                                    param/701))))))
                                                                    (letrec
                                                                    (elements_aux/702
                                                                    (function
                                                                    accu/703
                                                                    param/707
                                                                    (if
                                                                    (isint
                                                                    param/707)
                                                                    accu/703
                                                                    (apply
                                                                    elements_aux/702
                                                                    (makeblock 0
                                                                    (field_imm 1
                                                                    param/707)
                                                                    (apply
                                                                    elements_aux/702
                                                                    accu/703
                                                                    (field_imm 2
                                                                    param/707)))
                                                                    (field_imm 0
                                                                    param/707)))))
                                                                    (let
                                                                    (elements/708 =
                                                                    (function
                                                                    s/710
                                                                    (apply
                                                                    elements_aux/702
                                                                    0 s/710)))
                                                                    (letrec
                                                                    (find/713
                                                                    (function
                                                                    x/714
                                                                    param/719
                                                                    (if
                                                                    (isint
                                                                    param/719)
                                                                    (raise
                                                                    (field_imm 7
                                                                    (global Stdlib!)))
                                                                    (let
                                                                    (v/716 =a
                                                                    (field_imm 1
                                                                    param/719)
                                                                    c/718 =[int]
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/1750)
                                                                    x/714
                                                                    v/716))
                                                                    (if
                                                                    (== c/718
                                                                    0) v/716
                                                                    (apply
                                                                    find/713
                                                                    x/714
                                                                    (if
                                                                    (< c/718
                                                                    0)
                                                                    (field_imm 0
                                                                    param/719)
                                                                    (field_imm 2
                                                                    param/719))))))))
                                                                    (letrec
                                                                    (find_first_aux/720
                                                                    (function
                                                                    v0/721
                                                                    f/722
                                                                    param/726
                                                                    (if
                                                                    (isint
                                                                    param/726)
                                                                    v0/721
                                                                    (let
                                                                    (v/724 =a
                                                                    (field_imm 1
                                                                    param/726))
                                                                    (if
                                                                    (apply
                                                                    f/722
                                                                    v/724)
                                                                    (apply
                                                                    find_first_aux/720
                                                                    v/724
                                                                    f/722
                                                                    (field_imm 0
                                                                    param/726))
                                                                    (apply
                                                                    find_first_aux/720
                                                                    v0/721
                                                                    f/722
                                                                    (field_imm 2
                                                                    param/726)))))))
                                                                    (letrec
                                                                    (find_first/727
                                                                    (function
                                                                    f/728
                                                                    param/732
                                                                    (if
                                                                    (isint
                                                                    param/732)
                                                                    (raise
                                                                    (field_imm 7
                                                                    (global Stdlib!)))
                                                                    (let
                                                                    (v/730 =a
                                                                    (field_imm 1
                                                                    param/732))
                                                                    (if
                                                                    (apply
                                                                    f/728
                                                                    v/730)
                                                                    (apply
                                                                    find_first_aux/720
                                                                    v/730
                                                                    f/728
                                                                    (field_imm 0
                                                                    param/732))
                                                                    (apply
                                                                    find_first/727
                                                                    f/728
                                                                    (field_imm 2
                                                                    param/732)))))))
                                                                    (letrec
                                                                    (find_first_opt_aux/733
                                                                    (function
                                                                    v0/734
                                                                    f/735
                                                                    param/739
                                                                    (if
                                                                    (isint
                                                                    param/739)
                                                                    (makeblock 0
                                                                    v0/734)
                                                                    (let
                                                                    (v/737 =a
                                                                    (field_imm 1
                                                                    param/739))
                                                                    (if
                                                                    (apply
                                                                    f/735
                                                                    v/737)
                                                                    (apply
                                                                    find_first_opt_aux/733
                                                                    v/737
                                                                    f/735
                                                                    (field_imm 0
                                                                    param/739))
                                                                    (apply
                                                                    find_first_opt_aux/733
                                                                    v0/734
                                                                    f/735
                                                                    (field_imm 2
                                                                    param/739)))))))
                                                                    (letrec
                                                                    (find_first_opt/740
                                                                    (function
                                                                    f/741
                                                                    param/745
                                                                    (if
                                                                    (isint
                                                                    param/745)
                                                                    0
                                                                    (let
                                                                    (v/743 =a
                                                                    (field_imm 1
                                                                    param/745))
                                                                    (if
                                                                    (apply
                                                                    f/741
                                                                    v/743)
                                                                    (apply
                                                                    find_first_opt_aux/733
                                                                    v/743
                                                                    f/741
                                                                    (field_imm 0
                                                                    param/745))
                                                                    (apply
                                                                    find_first_opt/740
                                                                    f/741
                                                                    (field_imm 2
                                                                    param/745)))))))
                                                                    (letrec
                                                                    (find_last_aux/746
                                                                    (function
                                                                    v0/747
                                                                    f/748
                                                                    param/752
                                                                    (if
                                                                    (isint
                                                                    param/752)
                                                                    v0/747
                                                                    (let
                                                                    (v/750 =a
                                                                    (field_imm 1
                                                                    param/752))
                                                                    (if
                                                                    (apply
                                                                    f/748
                                                                    v/750)
                                                                    (apply
                                                                    find_last_aux/746
                                                                    v/750
                                                                    f/748
                                                                    (field_imm 2
                                                                    param/752))
                                                                    (apply
                                                                    find_last_aux/746
                                                                    v0/747
                                                                    f/748
                                                                    (field_imm 0
                                                                    param/752)))))))
                                                                    (letrec
                                                                    (find_last/753
                                                                    (function
                                                                    f/754
                                                                    param/758
                                                                    (if
                                                                    (isint
                                                                    param/758)
                                                                    (raise
                                                                    (field_imm 7
                                                                    (global Stdlib!)))
                                                                    (let
                                                                    (v/756 =a
                                                                    (field_imm 1
                                                                    param/758))
                                                                    (if
                                                                    (apply
                                                                    f/754
                                                                    v/756)
                                                                    (apply
                                                                    find_last_aux/746
                                                                    v/756
                                                                    f/754
                                                                    (field_imm 2
                                                                    param/758))
                                                                    (apply
                                                                    find_last/753
                                                                    f/754
                                                                    (field_imm 0
                                                                    param/758)))))))
                                                                    (letrec
                                                                    (find_last_opt_aux/759
                                                                    (function
                                                                    v0/760
                                                                    f/761
                                                                    param/765
                                                                    (if
                                                                    (isint
                                                                    param/765)
                                                                    (makeblock 0
                                                                    v0/760)
                                                                    (let
                                                                    (v/763 =a
                                                                    (field_imm 1
                                                                    param/765))
                                                                    (if
                                                                    (apply
                                                                    f/761
                                                                    v/763)
                                                                    (apply
                                                                    find_last_opt_aux/759
                                                                    v/763
                                                                    f/761
                                                                    (field_imm 2
                                                                    param/765))
                                                                    (apply
                                                                    find_last_opt_aux/759
                                                                    v0/760
                                                                    f/761
                                                                    (field_imm 0
                                                                    param/765)))))))
                                                                    (letrec
                                                                    (find_last_opt/766
                                                                    (function
                                                                    f/767
                                                                    param/771
                                                                    (if
                                                                    (isint
                                                                    param/771)
                                                                    0
                                                                    (let
                                                                    (v/769 =a
                                                                    (field_imm 1
                                                                    param/771))
                                                                    (if
                                                                    (apply
                                                                    f/767
                                                                    v/769)
                                                                    (apply
                                                                    find_last_opt_aux/759
                                                                    v/769
                                                                    f/767
                                                                    (field_imm 2
                                                                    param/771))
                                                                    (apply
                                                                    find_last_opt/766
                                                                    f/767
                                                                    (field_imm 0
                                                                    param/771)))))))
                                                                    (letrec
                                                                    (find_opt/772
                                                                    (function
                                                                    x/773
                                                                    param/778
                                                                    (if
                                                                    (isint
                                                                    param/778)
                                                                    0
                                                                    (let
                                                                    (v/775 =a
                                                                    (field_imm 1
                                                                    param/778)
                                                                    c/777 =[int]
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/1750)
                                                                    x/773
                                                                    v/775))
                                                                    (if
                                                                    (== c/777
                                                                    0)
                                                                    (makeblock 0
                                                                    v/775)
                                                                    (apply
                                                                    find_opt/772
                                                                    x/773
                                                                    (if
                                                                    (< c/777
                                                                    0)
                                                                    (field_imm 0
                                                                    param/778)
                                                                    (field_imm 2
                                                                    param/778))))))))
                                                                    (let
                                                                    (try_join/779 =
                                                                    (function
                                                                    l/781
                                                                    v/782
                                                                    r/783
                                                                    (if
                                                                    (&&
                                                                    (||
                                                                    (== l/781
                                                                    0)
                                                                    (<
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/1750)
                                                                    (apply
                                                                    max_elt/492
                                                                    l/781)
                                                                    v/782) 0))
                                                                    (||
                                                                    (== r/783
                                                                    0)
                                                                    (<
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/1750)
                                                                    v/782
                                                                    (apply
                                                                    min_elt/484
                                                                    r/783))
                                                                    0)))
                                                                    (apply
                                                                    join/472
                                                                    l/781
                                                                    v/782
                                                                    r/783)
                                                                    (apply
                                                                    union/551
                                                                    l/781
                                                                    (apply
                                                                    add/448
                                                                    v/782
                                                                    r/783)))))
                                                                    (letrec
                                                                    (map/784
                                                                    (function
                                                                    f/785
                                                                    t/789
                                                                    (if
                                                                    (isint
                                                                    t/789) 0
                                                                    (let
                                                                    (r/788 =a
                                                                    (field_imm 2
                                                                    t/789)
                                                                    v/787 =a
                                                                    (field_imm 1
                                                                    t/789)
                                                                    l/786 =a
                                                                    (field_imm 0
                                                                    t/789)
                                                                    l'/790 =
                                                                    (apply
                                                                    map/784
                                                                    f/785
                                                                    l/786)
                                                                    v'/791 =
                                                                    (apply
                                                                    f/785
                                                                    v/787)
                                                                    r'/792 =
                                                                    (apply
                                                                    map/784
                                                                    f/785
                                                                    r/788))
                                                                    (if
                                                                    (&&
                                                                    (== l/786
                                                                    l'/790)
                                                                    (&&
                                                                    (== v/787
                                                                    v'/791)
                                                                    (== r/788
                                                                    r'/792)))
                                                                    t/789
                                                                    (apply
                                                                    try_join/779
                                                                    l'/790
                                                                    v'/791
                                                                    r'/792))))))
                                                                    (let
                                                                    (try_concat/793 =
                                                                    (function
                                                                    t1/795
                                                                    t2/796
                                                                    (if
                                                                    (isint
                                                                    t1/795)
                                                                    t2/796
                                                                    (if
                                                                    (isint
                                                                    t2/796)
                                                                    t1/795
                                                                    (apply
                                                                    try_join/779
                                                                    t1/795
                                                                    (apply
                                                                    min_elt/484
                                                                    t2/796)
                                                                    (apply
                                                                    remove_min_elt/500
                                                                    t2/796))))))
                                                                    (letrec
                                                                    (filter_map/799
                                                                    (function
                                                                    f/800
                                                                    t/804
                                                                    (if
                                                                    (isint
                                                                    t/804) 0
                                                                    (let
                                                                    (r/803 =a
                                                                    (field_imm 2
                                                                    t/804)
                                                                    v/802 =a
                                                                    (field_imm 1
                                                                    t/804)
                                                                    l/801 =a
                                                                    (field_imm 0
                                                                    t/804)
                                                                    l'/805 =
                                                                    (apply
                                                                    filter_map/799
                                                                    f/800
                                                                    l/801)
                                                                    v'/806 =
                                                                    (apply
                                                                    f/800
                                                                    v/802)
                                                                    r'/807 =
                                                                    (apply
                                                                    filter_map/799
                                                                    f/800
                                                                    r/803))
                                                                    (if
                                                                    (isint
                                                                    v'/806)
                                                                    (apply
                                                                    try_concat/793
                                                                    l'/805
                                                                    r'/807)
                                                                    (let
                                                                    (v'/808 =a
                                                                    (field_imm 0
                                                                    v'/806))
                                                                    (if
                                                                    (&&
                                                                    (== l/801
                                                                    l'/805)
                                                                    (&&
                                                                    (== v/802
                                                                    v'/808)
                                                                    (== r/803
                                                                    r'/807)))
                                                                    t/804
                                                                    (apply
                                                                    try_join/779
                                                                    l'/805
                                                                    v'/808
                                                                    r'/807))))))))
                                                                    (let
                                                                    (of_sorted_list/809 =
                                                                    (function
                                                                    l/811
                                                                    (letrec
                                                                    (sub/812
                                                                    (function
                                                                    n/813[int]
                                                                    l/814
                                                                    (catch
                                                                    (if
                                                                    (isout 3
                                                                    n/813)
                                                                    (exit 49)
                                                                    (switch* n/813
                                                                    case int 0:
                                                                    (makeblock 0
                                                                    0 l/814)
                                                                    case int 1:
                                                                    (if
                                                                    (isint
                                                                    l/814)
                                                                    (exit 49)
                                                                    (makeblock 0
                                                                    (makeblock 0 (*,*,*,int)
                                                                    0
                                                                    (field_imm 0
                                                                    l/814) 0
                                                                    1)
                                                                    (field_imm 1
                                                                    l/814)))
                                                                    case int 2:
                                                                    (if
                                                                    (isint
                                                                    l/814)
                                                                    (exit 49)
                                                                    (let
                                                                    (*match*/1740 =a
                                                                    (field_imm 1
                                                                    l/814))
                                                                    (if
                                                                    (isint
                                                                    *match*/1740)
                                                                    (exit 49)
                                                                    (makeblock 0
                                                                    (makeblock 0 (*,*,*,int)
                                                                    (makeblock 0 (*,*,*,int)
                                                                    0
                                                                    (field_imm 0
                                                                    l/814) 0
                                                                    1)
                                                                    (field_imm 0
                                                                    *match*/1740)
                                                                    0 2)
                                                                    (field_imm 1
                                                                    *match*/1740)))))
                                                                    case int 3:
                                                                    (if
                                                                    (isint
                                                                    l/814)
                                                                    (exit 49)
                                                                    (let
                                                                    (*match*/1741 =a
                                                                    (field_imm 1
                                                                    l/814))
                                                                    (if
                                                                    (isint
                                                                    *match*/1741)
                                                                    (exit 49)
                                                                    (let
                                                                    (*match*/1742 =a
                                                                    (field_imm 1
                                                                    *match*/1741))
                                                                    (if
                                                                    (isint
                                                                    *match*/1742)
                                                                    (exit 49)
                                                                    (makeblock 0
                                                                    (makeblock 0 (*,*,*,int)
                                                                    (makeblock 0 (*,*,*,int)
                                                                    0
                                                                    (field_imm 0
                                                                    l/814) 0
                                                                    1)
                                                                    (field_imm 0
                                                                    *match*/1741)
                                                                    (makeblock 0 (*,*,*,int)
                                                                    0
                                                                    (field_imm 0
                                                                    *match*/1742)
                                                                    0 1) 2)
                                                                    (field_imm 1
                                                                    *match*/1742)))))))))
                                                                    with (49)
                                                                    (let
                                                                    (nl/827 =[int]
                                                                    (/ n/813
                                                                    2)
                                                                    *match*/1739 =
                                                                    (apply
                                                                    sub/812
                                                                    nl/827
                                                                    l/814)
                                                                    l/829 =a
                                                                    (field_imm 1
                                                                    *match*/1739))
                                                                    (if
                                                                    (isint
                                                                    l/829)
                                                                    (raise
                                                                    (makeblock 0
                                                                    (global Assert_failure/28!)
                                                                    [0:
                                                                    "lib/set.ml"
                                                                    571 18]))
                                                                    (let
                                                                    (*match*/1735 =
                                                                    (apply
                                                                    sub/812
                                                                    (-
                                                                    (- n/813
                                                                    nl/827)
                                                                    1)
                                                                    (field_imm 1
                                                                    l/829)))
                                                                    (makeblock 0
                                                                    (apply
                                                                    create/418
                                                                    (field_imm 0
                                                                    *match*/1739)
                                                                    (field_imm 0
                                                                    l/829)
                                                                    (field_imm 0
                                                                    *match*/1735))
                                                                    (field_imm 1
                                                                    *match*/1735))))))))
                                                                    (field_mut 0
                                                                    (apply
                                                                    sub/812
                                                                    (apply
                                                                    (field_imm 0
                                                                    (global Stdlib__List!))
                                                                    l/811)
                                                                    l/811))))
                                                                    of_list/901 =
                                                                    (function
                                                                    l/903
                                                                    (if
                                                                    (isint
                                                                    l/903)
                                                                    empty/531
                                                                    (let
                                                                    (*match*/1743 =a
                                                                    (field_imm 1
                                                                    l/903)
                                                                    x0/904 =a
                                                                    (field_imm 0
                                                                    l/903))
                                                                    (if
                                                                    (isint
                                                                    *match*/1743)
                                                                    (apply
                                                                    singleton/457
                                                                    x0/904)
                                                                    (let
                                                                    (*match*/1744 =a
                                                                    (field_imm 1
                                                                    *match*/1743)
                                                                    x1/906 =a
                                                                    (field_imm 0
                                                                    *match*/1743))
                                                                    (if
                                                                    (isint
                                                                    *match*/1744)
                                                                    (apply
                                                                    add/448
                                                                    x1/906
                                                                    (apply
                                                                    singleton/457
                                                                    x0/904))
                                                                    (let
                                                                    (*match*/1745 =a
                                                                    (field_imm 1
                                                                    *match*/1744)
                                                                    x2/909 =a
                                                                    (field_imm 0
                                                                    *match*/1744))
                                                                    (if
                                                                    (isint
                                                                    *match*/1745)
                                                                    (apply
                                                                    add/448
                                                                    x2/909
                                                                    (apply
                                                                    add/448
                                                                    x1/906
                                                                    (apply
                                                                    singleton/457
                                                                    x0/904)))
                                                                    (let
                                                                    (*match*/1746 =a
                                                                    (field_imm 1
                                                                    *match*/1745)
                                                                    x3/913 =a
                                                                    (field_imm 0
                                                                    *match*/1745))
                                                                    (if
                                                                    (isint
                                                                    *match*/1746)
                                                                    (apply
                                                                    add/448
                                                                    x3/913
                                                                    (apply
                                                                    add/448
                                                                    x2/909
                                                                    (apply
                                                                    add/448
                                                                    x1/906
                                                                    (apply
                                                                    singleton/457
                                                                    x0/904))))
                                                                    (if
                                                                    (isint
                                                                    (field_imm 1
                                                                    *match*/1746))
                                                                    (apply
                                                                    add/448
                                                                    (field_imm 0
                                                                    *match*/1746)
                                                                    (apply
                                                                    add/448
                                                                    x3/913
                                                                    (apply
                                                                    add/448
                                                                    x2/909
                                                                    (apply
                                                                    add/448
                                                                    x1/906
                                                                    (apply
                                                                    singleton/457
                                                                    x0/904)))))
                                                                    (apply
                                                                    of_sorted_list/809
                                                                    (apply
                                                                    (field_imm 61
                                                                    (global Stdlib__List!))
                                                                    (field_imm 0
                                                                    Ord/1750)
                                                                    l/903)))))))))))))
                                                                    add_seq/919 =
                                                                    (function
                                                                    i/921
                                                                    m/922
                                                                    (apply
                                                                    (field_imm 4
                                                                    (global Stdlib__Seq!))
                                                                    (function
                                                                    s/923
                                                                    x/924
                                                                    (apply
                                                                    add/448
                                                                    x/924
                                                                    s/923))
                                                                    m/922
                                                                    i/921))
                                                                    of_seq/986 =
                                                                    (function
                                                                    i/988
                                                                    (apply
                                                                    add_seq/919
                                                                    i/988
                                                                    empty/531)))
                                                                    (letrec
                                                                    (seq_of_enum_/989
                                                                    (function
                                                                    c/990
                                                                    param/994[int]
                                                                    (if
                                                                    (isint
                                                                    c/990) 0
                                                                    (makeblock 0
                                                                    (field_imm 0
                                                                    c/990)
                                                                    (apply
                                                                    seq_of_enum_/989
                                                                    (apply
                                                                    cons_enum/619
                                                                    (field_imm 1
                                                                    c/990)
                                                                    (field_imm 2
                                                                    c/990)))))))
                                                                    (let
                                                                    (to_seq/995 =
                                                                    (function
                                                                    c/997
                                                                    (apply
                                                                    seq_of_enum_/989
                                                                    (apply
                                                                    cons_enum/619
                                                                    c/997 0))))
                                                                    (letrec
                                                                    (snoc_enum/998
                                                                    (function
                                                                    s/999
                                                                    e/1000
                                                                    (if
                                                                    (isint
                                                                    s/999)
                                                                    e/1000
                                                                    (apply
                                                                    snoc_enum/998
                                                                    (field_imm 2
                                                                    s/999)
                                                                    (makeblock 0
                                                                    (field_imm 1
                                                                    s/999)
                                                                    (field_imm 0
                                                                    s/999)
                                                                    e/1000)))))
                                                                    (letrec
                                                                    (rev_seq_of_enum_/1004
                                                                    (function
                                                                    c/1005
                                                                    param/1009[int]
                                                                    (if
                                                                    (isint
                                                                    c/1005) 0
                                                                    (makeblock 0
                                                                    (field_imm 0
                                                                    c/1005)
                                                                    (apply
                                                                    rev_seq_of_enum_/1004
                                                                    (apply
                                                                    snoc_enum/998
                                                                    (field_imm 1
                                                                    c/1005)
                                                                    (field_imm 2
                                                                    c/1005)))))))
                                                                    (let
                                                                    (to_rev_seq/1010 =
                                                                    (function
                                                                    c/1012
                                                                    (apply
                                                                    rev_seq_of_enum_/1004
                                                                    (apply
                                                                    snoc_enum/998
                                                                    c/1012 0)))
                                                                    to_seq_from/1013 =
                                                                    (function
                                                                    low/1015
                                                                    s/1016
                                                                    (letrec
                                                                    (aux/1017
                                                                    (function
                                                                    low/1018
                                                                    s/1019
                                                                    c/1020
                                                                    (if
                                                                    (isint
                                                                    s/1019)
                                                                    c/1020
                                                                    (let
                                                                    (r/1023 =a
                                                                    (field_imm 2
                                                                    s/1019)
                                                                    v/1022 =a
                                                                    (field_imm 1
                                                                    s/1019)
                                                                    n/1024 =
                                                                    (apply
                                                                    (field_imm 0
                                                                    Ord/1750)
                                                                    v/1022
                                                                    low/1018))
                                                                    (if
                                                                    (!=
                                                                    n/1024 0)
                                                                    (if
                                                                    (< n/1024
                                                                    0)
                                                                    (apply
                                                                    aux/1017
                                                                    low/1018
                                                                    r/1023
                                                                    c/1020)
                                                                    (apply
                                                                    aux/1017
                                                                    low/1018
                                                                    (field_imm 0
                                                                    s/1019)
                                                                    (makeblock 0
                                                                    v/1022
                                                                    r/1023
                                                                    c/1020)))
                                                                    (makeblock 0
                                                                    v/1022
                                                                    r/1023
                                                                    c/1020))))))
                                                                    (apply
                                                                    seq_of_enum_/989
                                                                    (apply
                                                                    aux/1017
                                                                    low/1015
                                                                    s/1016 0)))))
                                                                    (makeblock 0
                                                                    height/414
                                                                    create/418
                                                                    bal/427
                                                                    add/448
                                                                    singleton/457
                                                                    add_min_element/460
                                                                    add_max_element/466
                                                                    join/472
                                                                    min_elt/484
                                                                    min_elt_opt/488
                                                                    max_elt/492
                                                                    max_elt_opt/496
                                                                    remove_min_elt/500
                                                                    merge/506
                                                                    concat/512
                                                                    split/518
                                                                    empty/531
                                                                    is_empty/532
                                                                    mem/535
                                                                    remove/542
                                                                    union/551
                                                                    inter/568
                                                                    split_bis/582
                                                                    disjoint/595
                                                                    diff/604
                                                                    cons_enum/619
                                                                    compare_aux/625
                                                                    compare/635
                                                                    equal/638
                                                                    subset/642
                                                                    iter/653
                                                                    fold/659
                                                                    for_all/666
                                                                    exists/672
                                                                    filter/678
                                                                    partition/687
                                                                    cardinal/698
                                                                    elements_aux/702
                                                                    elements/708
                                                                    min_elt/484
                                                                    min_elt_opt/488
                                                                    find/713
                                                                    find_first_aux/720
                                                                    find_first/727
                                                                    find_first_opt_aux/733
                                                                    find_first_opt/740
                                                                    find_last_aux/746
                                                                    find_last/753
                                                                    find_last_opt_aux/759
                                                                    find_last_opt/766
                                                                    find_opt/772
                                                                    try_join/779
                                                                    map/784
                                                                    try_concat/793
                                                                    filter_map/799
                                                                    of_sorted_list/809
                                                                    elements/708
                                                                    of_list/901
                                                                    add_seq/919
                                                                    of_seq/986
                                                                    seq_of_enum_/989
                                                                    to_seq/995
                                                                    snoc_enum/998
                                                                    rev_seq_of_enum_/1004
                                                                    to_rev_seq/1010
                                                                    to_seq_from/1013)))))))))))))))))))))))))))))))))))))))))))))))))))))))))
  (seq (setfield_ptr(root-init) 0 (global Ocaml_ocaml_types__Set!) Make/1025)
    0))
