[
  structure_item (lib/location.ml[16,1079+0]..[16,1079+11])
    Pstr_open Fresh
    module_expr (lib/location.ml[16,1079+5]..[16,1079+11])
      Pmod_ident "Lexing" (lib/location.ml[16,1079+5]..[16,1079+11])
  structure_item (lib/location.ml[18,1092+0]..[19,1116+61])
    Pstr_type Rec
    [
      type_declaration "t" (lib/location.ml[18,1092+5]..[18,1092+6]) (lib/location.ml[18,1092+0]..[19,1116+61])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/location.ml[19,1116+4]..[19,1116+24])
                Immutable
                "loc_start" (lib/location.ml[19,1116+4]..[19,1116+13])                core_type (lib/location.ml[19,1116+15]..[19,1116+23])
                  Ptyp_constr "position" (lib/location.ml[19,1116+15]..[19,1116+23])
                  []
              (lib/location.ml[19,1116+25]..[19,1116+43])
                Immutable
                "loc_end" (lib/location.ml[19,1116+25]..[19,1116+32])                core_type (lib/location.ml[19,1116+34]..[19,1116+42])
                  Ptyp_constr "position" (lib/location.ml[19,1116+34]..[19,1116+42])
                  []
              (lib/location.ml[19,1116+44]..[19,1116+59])
                Immutable
                "loc_ghost" (lib/location.ml[19,1116+44]..[19,1116+53])                core_type (lib/location.ml[19,1116+55]..[19,1116+59])
                  Ptyp_constr "bool" (lib/location.ml[19,1116+55]..[19,1116+59])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/location.ml[18,1092+9]..[18,1092+21])
              Ptyp_constr "Warnings.loc" (lib/location.ml[18,1092+9]..[18,1092+21])
              []
    ]
  structure_item (lib/location.ml[21,1179+0]..[21,1179+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[21,1179+4]..[21,1179+11])
          Ppat_var "in_file" (lib/location.ml[21,1179+4]..[21,1179+11])
        expression (lib/location.ml[21,1179+14]..[21,1179+40])
          Pexp_ident "Warnings.ghost_loc_in_file" (lib/location.ml[21,1179+14]..[21,1179+40])
    ]
  structure_item (lib/location.ml[23,1221+0]..[23,1221+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[23,1221+4]..[23,1221+8])
          Ppat_var "none" (lib/location.ml[23,1221+4]..[23,1221+8])
        expression (lib/location.ml[23,1221+11]..[23,1221+27])
          Pexp_apply
          expression (lib/location.ml[23,1221+11]..[23,1221+18])
            Pexp_ident "in_file" (lib/location.ml[23,1221+11]..[23,1221+18])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[23,1221+19]..[23,1221+27])
                Pexp_constant PConst_string("_none_",(lib/location.ml[23,1221+20]..[23,1221+26]),None)
          ]
    ]
  structure_item (lib/location.ml[24,1249+0]..[24,1249+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[24,1249+4]..[24,1249+11])
          Ppat_var "is_none" (lib/location.ml[24,1249+4]..[24,1249+11])
        expression (lib/location.ml[24,1249+12]..[24,1249+26]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[24,1249+12]..[24,1249+13])
              Nolabel
              None
              pattern (lib/location.ml[24,1249+12]..[24,1249+13])
                Ppat_var "l" (lib/location.ml[24,1249+12]..[24,1249+13])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[24,1249+16]..[24,1249+26])
              Pexp_apply
              expression (lib/location.ml[24,1249+19]..[24,1249+20])
                Pexp_ident "=" (lib/location.ml[24,1249+19]..[24,1249+20])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[24,1249+17]..[24,1249+18])
                    Pexp_ident "l" (lib/location.ml[24,1249+17]..[24,1249+18])
                <arg>
                Nolabel
                  expression (lib/location.ml[24,1249+21]..[24,1249+25])
                    Pexp_ident "none" (lib/location.ml[24,1249+21]..[24,1249+25])
              ]
    ]
  structure_item (lib/location.ml[26,1277+0]..[30,1382+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[26,1277+4]..[26,1277+8])
          Ppat_var "curr" (lib/location.ml[26,1277+4]..[26,1277+8])
        expression (lib/location.ml[26,1277+9]..[30,1382+1]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[26,1277+9]..[26,1277+15])
              Nolabel
              None
              pattern (lib/location.ml[26,1277+9]..[26,1277+15])
                Ppat_var "lexbuf" (lib/location.ml[26,1277+9]..[26,1277+15])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[26,1277+18]..[30,1382+1])
              Pexp_record
              [
                "loc_start" (lib/location.ml[27,1297+2]..[27,1297+11])
                  expression (lib/location.ml[27,1297+14]..[27,1297+32])
                    Pexp_field
                    expression (lib/location.ml[27,1297+14]..[27,1297+20])
                      Pexp_ident "lexbuf" (lib/location.ml[27,1297+14]..[27,1297+20])
                    "lex_start_p" (lib/location.ml[27,1297+21]..[27,1297+32])
                "loc_end" (lib/location.ml[28,1331+2]..[28,1331+9])
                  expression (lib/location.ml[28,1331+12]..[28,1331+29])
                    Pexp_field
                    expression (lib/location.ml[28,1331+12]..[28,1331+18])
                      Pexp_ident "lexbuf" (lib/location.ml[28,1331+12]..[28,1331+18])
                    "lex_curr_p" (lib/location.ml[28,1331+19]..[28,1331+29])
                "loc_ghost" (lib/location.ml[29,1362+2]..[29,1362+11])
                  expression (lib/location.ml[29,1362+14]..[29,1362+19])
                    Pexp_construct "false" (lib/location.ml[29,1362+14]..[29,1362+19])
                    None
              ]
              None
    ]
  structure_item (lib/location.ml[32,1385+0]..[38,1510+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[32,1385+4]..[32,1385+8])
          Ppat_var "init" (lib/location.ml[32,1385+4]..[32,1385+8])
        expression (lib/location.ml[32,1385+9]..[38,1510+3]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[32,1385+9]..[32,1385+15])
              Nolabel
              None
              pattern (lib/location.ml[32,1385+9]..[32,1385+15])
                Ppat_var "lexbuf" (lib/location.ml[32,1385+9]..[32,1385+15])
            Pparam_val (lib/location.ml[32,1385+16]..[32,1385+21])
              Nolabel
              None
              pattern (lib/location.ml[32,1385+16]..[32,1385+21])
                Ppat_var "fname" (lib/location.ml[32,1385+16]..[32,1385+21])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[33,1409+2]..[38,1510+3])
              Pexp_setfield
              expression (lib/location.ml[33,1409+2]..[33,1409+8])
                Pexp_ident "lexbuf" (lib/location.ml[33,1409+2]..[33,1409+8])
              "lex_curr_p" (lib/location.ml[33,1409+9]..[33,1409+19])
              expression (lib/location.ml[33,1409+23]..[38,1510+3])
                Pexp_record
                [
                  "pos_fname" (lib/location.ml[34,1434+4]..[34,1434+13])
                    expression (lib/location.ml[34,1434+16]..[34,1434+21])
                      Pexp_ident "fname" (lib/location.ml[34,1434+16]..[34,1434+21])
                  "pos_lnum" (lib/location.ml[35,1457+4]..[35,1457+12])
                    expression (lib/location.ml[35,1457+15]..[35,1457+16])
                      Pexp_constant PConst_int (1,None)
                  "pos_bol" (lib/location.ml[36,1475+4]..[36,1475+11])
                    expression (lib/location.ml[36,1475+14]..[36,1475+15])
                      Pexp_constant PConst_int (0,None)
                  "pos_cnum" (lib/location.ml[37,1492+4]..[37,1492+12])
                    expression (lib/location.ml[37,1492+15]..[37,1492+16])
                      Pexp_constant PConst_int (0,None)
                ]
                None
    ]
  structure_item (lib/location.ml[40,1515+0]..[44,1641+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[40,1515+4]..[40,1515+15])
          Ppat_var "symbol_rloc" (lib/location.ml[40,1515+4]..[40,1515+15])
        expression (lib/location.ml[40,1515+16]..[44,1641+1]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[40,1515+16]..[40,1515+18])
              Nolabel
              None
              pattern (lib/location.ml[40,1515+16]..[40,1515+18])
                Ppat_construct "()" (lib/location.ml[40,1515+16]..[40,1515+18])
                None
          ]
          None
          Pfunction_body
            expression (lib/location.ml[40,1515+21]..[44,1641+1])
              Pexp_record
              [
                "loc_start" (lib/location.ml[41,1538+2]..[41,1538+11])
                  expression (lib/location.ml[41,1538+14]..[41,1538+41])
                    Pexp_apply
                    expression (lib/location.ml[41,1538+14]..[41,1538+38])
                      Pexp_ident "Parsing.symbol_start_pos" (lib/location.ml[41,1538+14]..[41,1538+38])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[41,1538+39]..[41,1538+41])
                          Pexp_construct "()" (lib/location.ml[41,1538+39]..[41,1538+41])
                          None
                    ]
                "loc_end" (lib/location.ml[42,1581+2]..[42,1581+9])
                  expression (lib/location.ml[42,1581+12]..[42,1581+37])
                    Pexp_apply
                    expression (lib/location.ml[42,1581+12]..[42,1581+34])
                      Pexp_ident "Parsing.symbol_end_pos" (lib/location.ml[42,1581+12]..[42,1581+34])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[42,1581+35]..[42,1581+37])
                          Pexp_construct "()" (lib/location.ml[42,1581+35]..[42,1581+37])
                          None
                    ]
                "loc_ghost" (lib/location.ml[43,1620+2]..[43,1620+11])
                  expression (lib/location.ml[43,1620+14]..[43,1620+19])
                    Pexp_construct "false" (lib/location.ml[43,1620+14]..[43,1620+19])
                    None
              ]
              None
    ]
  structure_item (lib/location.ml[46,1644+0]..[50,1769+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[46,1644+4]..[46,1644+15])
          Ppat_var "symbol_gloc" (lib/location.ml[46,1644+4]..[46,1644+15])
        expression (lib/location.ml[46,1644+16]..[50,1769+1]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[46,1644+16]..[46,1644+18])
              Nolabel
              None
              pattern (lib/location.ml[46,1644+16]..[46,1644+18])
                Ppat_construct "()" (lib/location.ml[46,1644+16]..[46,1644+18])
                None
          ]
          None
          Pfunction_body
            expression (lib/location.ml[46,1644+21]..[50,1769+1])
              Pexp_record
              [
                "loc_start" (lib/location.ml[47,1667+2]..[47,1667+11])
                  expression (lib/location.ml[47,1667+14]..[47,1667+41])
                    Pexp_apply
                    expression (lib/location.ml[47,1667+14]..[47,1667+38])
                      Pexp_ident "Parsing.symbol_start_pos" (lib/location.ml[47,1667+14]..[47,1667+38])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[47,1667+39]..[47,1667+41])
                          Pexp_construct "()" (lib/location.ml[47,1667+39]..[47,1667+41])
                          None
                    ]
                "loc_end" (lib/location.ml[48,1710+2]..[48,1710+9])
                  expression (lib/location.ml[48,1710+12]..[48,1710+37])
                    Pexp_apply
                    expression (lib/location.ml[48,1710+12]..[48,1710+34])
                      Pexp_ident "Parsing.symbol_end_pos" (lib/location.ml[48,1710+12]..[48,1710+34])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[48,1710+35]..[48,1710+37])
                          Pexp_construct "()" (lib/location.ml[48,1710+35]..[48,1710+37])
                          None
                    ]
                "loc_ghost" (lib/location.ml[49,1749+2]..[49,1749+11])
                  expression (lib/location.ml[49,1749+14]..[49,1749+18])
                    Pexp_construct "true" (lib/location.ml[49,1749+14]..[49,1749+18])
                    None
              ]
              None
    ]
  structure_item (lib/location.ml[52,1772+0]..[56,1885+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[52,1772+4]..[52,1772+11])
          Ppat_var "rhs_loc" (lib/location.ml[52,1772+4]..[52,1772+11])
        expression (lib/location.ml[52,1772+12]..[56,1885+1]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[52,1772+12]..[52,1772+13])
              Nolabel
              None
              pattern (lib/location.ml[52,1772+12]..[52,1772+13])
                Ppat_var "n" (lib/location.ml[52,1772+12]..[52,1772+13])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[52,1772+16]..[56,1885+1])
              Pexp_record
              [
                "loc_start" (lib/location.ml[53,1790+2]..[53,1790+11])
                  expression (lib/location.ml[53,1790+14]..[53,1790+37])
                    Pexp_apply
                    expression (lib/location.ml[53,1790+14]..[53,1790+35])
                      Pexp_ident "Parsing.rhs_start_pos" (lib/location.ml[53,1790+14]..[53,1790+35])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[53,1790+36]..[53,1790+37])
                          Pexp_ident "n" (lib/location.ml[53,1790+36]..[53,1790+37])
                    ]
                "loc_end" (lib/location.ml[54,1829+2]..[54,1829+9])
                  expression (lib/location.ml[54,1829+12]..[54,1829+33])
                    Pexp_apply
                    expression (lib/location.ml[54,1829+12]..[54,1829+31])
                      Pexp_ident "Parsing.rhs_end_pos" (lib/location.ml[54,1829+12]..[54,1829+31])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[54,1829+32]..[54,1829+33])
                          Pexp_ident "n" (lib/location.ml[54,1829+32]..[54,1829+33])
                    ]
                "loc_ghost" (lib/location.ml[55,1864+2]..[55,1864+11])
                  expression (lib/location.ml[55,1864+14]..[55,1864+19])
                    Pexp_construct "false" (lib/location.ml[55,1864+14]..[55,1864+19])
                    None
              ]
              None
    ]
  structure_item (lib/location.ml[58,1888+0]..[62,2008+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[58,1888+4]..[58,1888+16])
          Ppat_var "rhs_interval" (lib/location.ml[58,1888+4]..[58,1888+16])
        expression (lib/location.ml[58,1888+17]..[62,2008+1]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[58,1888+17]..[58,1888+18])
              Nolabel
              None
              pattern (lib/location.ml[58,1888+17]..[58,1888+18])
                Ppat_var "m" (lib/location.ml[58,1888+17]..[58,1888+18])
            Pparam_val (lib/location.ml[58,1888+19]..[58,1888+20])
              Nolabel
              None
              pattern (lib/location.ml[58,1888+19]..[58,1888+20])
                Ppat_var "n" (lib/location.ml[58,1888+19]..[58,1888+20])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[58,1888+23]..[62,2008+1])
              Pexp_record
              [
                "loc_start" (lib/location.ml[59,1913+2]..[59,1913+11])
                  expression (lib/location.ml[59,1913+14]..[59,1913+37])
                    Pexp_apply
                    expression (lib/location.ml[59,1913+14]..[59,1913+35])
                      Pexp_ident "Parsing.rhs_start_pos" (lib/location.ml[59,1913+14]..[59,1913+35])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[59,1913+36]..[59,1913+37])
                          Pexp_ident "m" (lib/location.ml[59,1913+36]..[59,1913+37])
                    ]
                "loc_end" (lib/location.ml[60,1952+2]..[60,1952+9])
                  expression (lib/location.ml[60,1952+12]..[60,1952+33])
                    Pexp_apply
                    expression (lib/location.ml[60,1952+12]..[60,1952+31])
                      Pexp_ident "Parsing.rhs_end_pos" (lib/location.ml[60,1952+12]..[60,1952+31])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[60,1952+32]..[60,1952+33])
                          Pexp_ident "n" (lib/location.ml[60,1952+32]..[60,1952+33])
                    ]
                "loc_ghost" (lib/location.ml[61,1987+2]..[61,1987+11])
                  expression (lib/location.ml[61,1987+14]..[61,1987+19])
                    Pexp_construct "false" (lib/location.ml[61,1987+14]..[61,1987+19])
                    None
              ]
              None
    ]
  structure_item (lib/location.ml[65,2065+0]..[66,2088+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[65,2065+4]..[65,2065+16])
          Ppat_var "get_pos_info" (lib/location.ml[65,2065+4]..[65,2065+16])
        expression (lib/location.ml[65,2065+17]..[66,2088+59]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[65,2065+17]..[65,2065+20])
              Nolabel
              None
              pattern (lib/location.ml[65,2065+17]..[65,2065+20])
                Ppat_var "pos" (lib/location.ml[65,2065+17]..[65,2065+20])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[66,2088+2]..[66,2088+59])
              Pexp_tuple
              [
                expression (lib/location.ml[66,2088+3]..[66,2088+16])
                  Pexp_field
                  expression (lib/location.ml[66,2088+3]..[66,2088+6])
                    Pexp_ident "pos" (lib/location.ml[66,2088+3]..[66,2088+6])
                  "pos_fname" (lib/location.ml[66,2088+7]..[66,2088+16])
                expression (lib/location.ml[66,2088+18]..[66,2088+30])
                  Pexp_field
                  expression (lib/location.ml[66,2088+18]..[66,2088+21])
                    Pexp_ident "pos" (lib/location.ml[66,2088+18]..[66,2088+21])
                  "pos_lnum" (lib/location.ml[66,2088+22]..[66,2088+30])
                expression (lib/location.ml[66,2088+32]..[66,2088+58])
                  Pexp_apply
                  expression (lib/location.ml[66,2088+45]..[66,2088+46])
                    Pexp_ident "-" (lib/location.ml[66,2088+45]..[66,2088+46])
                  [
                    <arg>
                    Nolabel
                      expression (lib/location.ml[66,2088+32]..[66,2088+44])
                        Pexp_field
                        expression (lib/location.ml[66,2088+32]..[66,2088+35])
                          Pexp_ident "pos" (lib/location.ml[66,2088+32]..[66,2088+35])
                        "pos_cnum" (lib/location.ml[66,2088+36]..[66,2088+44])
                    <arg>
                    Nolabel
                      expression (lib/location.ml[66,2088+47]..[66,2088+58])
                        Pexp_field
                        expression (lib/location.ml[66,2088+47]..[66,2088+50])
                          Pexp_ident "pos" (lib/location.ml[66,2088+47]..[66,2088+50])
                        "pos_bol" (lib/location.ml[66,2088+51]..[66,2088+58])
                  ]
              ]
    ]
  structure_item (lib/location.ml[68,2149+0]..[71,2188+1])
    Pstr_type Rec
    [
      type_declaration "loc" (lib/location.ml[68,2149+8]..[68,2149+11]) (lib/location.ml[68,2149+0]..[71,2188+1])
        ptype_params =
          [
            core_type (lib/location.ml[68,2149+5]..[68,2149+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/location.ml[69,2165+2]..[69,2165+11])
                Immutable
                "txt" (lib/location.ml[69,2165+2]..[69,2165+5])                core_type (lib/location.ml[69,2165+8]..[69,2165+10])
                  Ptyp_var a
              (lib/location.ml[70,2177+2]..[70,2177+10])
                Immutable
                "loc" (lib/location.ml[70,2177+2]..[70,2177+5])                core_type (lib/location.ml[70,2177+8]..[70,2177+9])
                  Ptyp_constr "t" (lib/location.ml[70,2177+8]..[70,2177+9])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/location.ml[73,2191+0]..[73,2191+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[73,2191+4]..[73,2191+9])
          Ppat_var "mkloc" (lib/location.ml[73,2191+4]..[73,2191+9])
        expression (lib/location.ml[73,2191+10]..[73,2191+33]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[73,2191+10]..[73,2191+13])
              Nolabel
              None
              pattern (lib/location.ml[73,2191+10]..[73,2191+13])
                Ppat_var "txt" (lib/location.ml[73,2191+10]..[73,2191+13])
            Pparam_val (lib/location.ml[73,2191+14]..[73,2191+17])
              Nolabel
              None
              pattern (lib/location.ml[73,2191+14]..[73,2191+17])
                Ppat_var "loc" (lib/location.ml[73,2191+14]..[73,2191+17])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[73,2191+20]..[73,2191+33])
              Pexp_record
              [
                "txt" (lib/location.ml[73,2191+22]..[73,2191+25]) ghost
                  expression (lib/location.ml[73,2191+22]..[73,2191+25])
                    Pexp_ident "txt" (lib/location.ml[73,2191+22]..[73,2191+25])
                "loc" (lib/location.ml[73,2191+28]..[73,2191+31]) ghost
                  expression (lib/location.ml[73,2191+28]..[73,2191+31])
                    Pexp_ident "loc" (lib/location.ml[73,2191+28]..[73,2191+31])
              ]
              None
    ]
  structure_item (lib/location.ml[74,2225+0]..[74,2225+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[74,2225+4]..[74,2225+11])
          Ppat_var "mknoloc" (lib/location.ml[74,2225+4]..[74,2225+11])
        expression (lib/location.ml[74,2225+12]..[74,2225+32]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[74,2225+12]..[74,2225+15])
              Nolabel
              None
              pattern (lib/location.ml[74,2225+12]..[74,2225+15])
                Ppat_var "txt" (lib/location.ml[74,2225+12]..[74,2225+15])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[74,2225+18]..[74,2225+32])
              Pexp_apply
              expression (lib/location.ml[74,2225+18]..[74,2225+23])
                Pexp_ident "mkloc" (lib/location.ml[74,2225+18]..[74,2225+23])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[74,2225+24]..[74,2225+27])
                    Pexp_ident "txt" (lib/location.ml[74,2225+24]..[74,2225+27])
                <arg>
                Nolabel
                  expression (lib/location.ml[74,2225+28]..[74,2225+32])
                    Pexp_ident "none" (lib/location.ml[74,2225+28]..[74,2225+32])
              ]
    ]
  structure_item (lib/location.ml[79,2358+0]..[79,2358+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[79,2358+4]..[79,2358+14])
          Ppat_var "input_name" (lib/location.ml[79,2358+4]..[79,2358+14])
        expression (lib/location.ml[79,2358+17]..[79,2358+29])
          Pexp_apply
          expression (lib/location.ml[79,2358+17]..[79,2358+20])
            Pexp_ident "ref" (lib/location.ml[79,2358+17]..[79,2358+20])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[79,2358+21]..[79,2358+29])
                Pexp_constant PConst_string("_none_",(lib/location.ml[79,2358+22]..[79,2358+28]),None)
          ]
    ]
  structure_item (lib/location.ml[80,2388+0]..[80,2388+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[80,2388+4]..[80,2388+16])
          Ppat_var "input_lexbuf" (lib/location.ml[80,2388+4]..[80,2388+16])
        expression (lib/location.ml[80,2388+19]..[80,2388+45])
          Pexp_apply
          expression (lib/location.ml[80,2388+19]..[80,2388+22])
            Pexp_ident "ref" (lib/location.ml[80,2388+19]..[80,2388+22])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[80,2388+23]..[80,2388+45])
                Pexp_constraint
                expression (lib/location.ml[80,2388+24]..[80,2388+28])
                  Pexp_construct "None" (lib/location.ml[80,2388+24]..[80,2388+28])
                  None
                core_type (lib/location.ml[80,2388+31]..[80,2388+44])
                  Ptyp_constr "option" (lib/location.ml[80,2388+38]..[80,2388+44])
                  [
                    core_type (lib/location.ml[80,2388+31]..[80,2388+37])
                      Ptyp_constr "lexbuf" (lib/location.ml[80,2388+31]..[80,2388+37])
                      []
                  ]
          ]
    ]
  structure_item (lib/location.ml[81,2434+0]..[81,2434+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[81,2434+4]..[81,2434+23])
          Ppat_var "input_phrase_buffer" (lib/location.ml[81,2434+4]..[81,2434+23])
        expression (lib/location.ml[81,2434+26]..[81,2434+54])
          Pexp_apply
          expression (lib/location.ml[81,2434+26]..[81,2434+29])
            Pexp_ident "ref" (lib/location.ml[81,2434+26]..[81,2434+29])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[81,2434+30]..[81,2434+54])
                Pexp_constraint
                expression (lib/location.ml[81,2434+31]..[81,2434+35])
                  Pexp_construct "None" (lib/location.ml[81,2434+31]..[81,2434+35])
                  None
                core_type (lib/location.ml[81,2434+38]..[81,2434+53])
                  Ptyp_constr "option" (lib/location.ml[81,2434+47]..[81,2434+53])
                  [
                    core_type (lib/location.ml[81,2434+38]..[81,2434+46])
                      Ptyp_constr "Buffer.t" (lib/location.ml[81,2434+38]..[81,2434+46])
                      []
                  ]
          ]
    ]
  structure_item (lib/location.ml[86,2592+0]..[86,2592+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[86,2592+4]..[86,2592+10])
          Ppat_var "status" (lib/location.ml[86,2592+4]..[86,2592+10])
        expression (lib/location.ml[86,2592+13]..[86,2592+39])
          Pexp_apply
          expression (lib/location.ml[86,2592+13]..[86,2592+16])
            Pexp_ident "ref" (lib/location.ml[86,2592+13]..[86,2592+16])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[86,2592+17]..[86,2592+39])
                Pexp_construct "Terminfo.Uninitialised" (lib/location.ml[86,2592+17]..[86,2592+39])
                None
          ]
    ]
  structure_item (lib/location.ml[88,2633+0]..[90,2700+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[88,2633+4]..[88,2633+18])
          Ppat_var "setup_terminal" (lib/location.ml[88,2633+4]..[88,2633+18])
        expression (lib/location.ml[88,2633+19]..[90,2700+35]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[88,2633+19]..[88,2633+21])
              Nolabel
              None
              pattern (lib/location.ml[88,2633+19]..[88,2633+21])
                Ppat_construct "()" (lib/location.ml[88,2633+19]..[88,2633+21])
                None
          ]
          None
          Pfunction_body
            expression (lib/location.ml[89,2657+2]..[90,2700+35])
              Pexp_ifthenelse
              expression (lib/location.ml[89,2657+5]..[89,2657+37])
                Pexp_apply
                expression (lib/location.ml[89,2657+13]..[89,2657+14])
                  Pexp_ident "=" (lib/location.ml[89,2657+13]..[89,2657+14])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[89,2657+5]..[89,2657+12])
                      Pexp_apply
                      expression (lib/location.ml[89,2657+5]..[89,2657+6])
                        Pexp_ident "!" (lib/location.ml[89,2657+5]..[89,2657+6])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[89,2657+6]..[89,2657+12])
                            Pexp_ident "status" (lib/location.ml[89,2657+6]..[89,2657+12])
                      ]
                  <arg>
                  Nolabel
                    expression (lib/location.ml[89,2657+15]..[89,2657+37])
                      Pexp_construct "Terminfo.Uninitialised" (lib/location.ml[89,2657+15]..[89,2657+37])
                      None
                ]
              expression (lib/location.ml[90,2700+4]..[90,2700+35])
                Pexp_apply
                expression (lib/location.ml[90,2700+11]..[90,2700+13])
                  Pexp_ident ":=" (lib/location.ml[90,2700+11]..[90,2700+13])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[90,2700+4]..[90,2700+10])
                      Pexp_ident "status" (lib/location.ml[90,2700+4]..[90,2700+10])
                  <arg>
                  Nolabel
                    expression (lib/location.ml[90,2700+14]..[90,2700+35])
                      Pexp_apply
                      expression (lib/location.ml[90,2700+14]..[90,2700+28])
                        Pexp_ident "Terminfo.setup" (lib/location.ml[90,2700+14]..[90,2700+28])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[90,2700+29]..[90,2700+35])
                            Pexp_ident "stdout" (lib/location.ml[90,2700+29]..[90,2700+35])
                      ]
                ]
              None
    ]
  structure_item (lib/location.ml[101,3113+0]..[101,3113+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[101,3113+4]..[101,3113+17])
          Ppat_var "num_loc_lines" (lib/location.ml[101,3113+4]..[101,3113+17])
        expression (lib/location.ml[101,3113+20]..[101,3113+25])
          Pexp_apply
          expression (lib/location.ml[101,3113+20]..[101,3113+23])
            Pexp_ident "ref" (lib/location.ml[101,3113+20]..[101,3113+23])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[101,3113+24]..[101,3113+25])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (lib/location.ml[109,3454+0]..[110,3480+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[109,3454+4]..[109,3454+20])
          Ppat_var "is_first_message" (lib/location.ml[109,3454+4]..[109,3454+20])
        expression (lib/location.ml[109,3454+21]..[110,3480+20]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[109,3454+21]..[109,3454+23])
              Nolabel
              None
              pattern (lib/location.ml[109,3454+21]..[109,3454+23])
                Ppat_construct "()" (lib/location.ml[109,3454+21]..[109,3454+23])
                None
          ]
          None
          Pfunction_body
            expression (lib/location.ml[110,3480+2]..[110,3480+20])
              Pexp_apply
              expression (lib/location.ml[110,3480+17]..[110,3480+18])
                Pexp_ident "=" (lib/location.ml[110,3480+17]..[110,3480+18])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[110,3480+2]..[110,3480+16])
                    Pexp_apply
                    expression (lib/location.ml[110,3480+2]..[110,3480+3])
                      Pexp_ident "!" (lib/location.ml[110,3480+2]..[110,3480+3])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[110,3480+3]..[110,3480+16])
                          Pexp_ident "num_loc_lines" (lib/location.ml[110,3480+3]..[110,3480+16])
                    ]
                <arg>
                Nolabel
                  expression (lib/location.ml[110,3480+19]..[110,3480+20])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
  structure_item (lib/location.ml[113,3581+0]..[114,3596+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[113,3581+4]..[113,3581+9])
          Ppat_var "reset" (lib/location.ml[113,3581+4]..[113,3581+9])
        expression (lib/location.ml[113,3581+10]..[114,3596+20]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[113,3581+10]..[113,3581+12])
              Nolabel
              None
              pattern (lib/location.ml[113,3581+10]..[113,3581+12])
                Ppat_construct "()" (lib/location.ml[113,3581+10]..[113,3581+12])
                None
          ]
          None
          Pfunction_body
            expression (lib/location.ml[114,3596+2]..[114,3596+20])
              Pexp_apply
              expression (lib/location.ml[114,3596+16]..[114,3596+18])
                Pexp_ident ":=" (lib/location.ml[114,3596+16]..[114,3596+18])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[114,3596+2]..[114,3596+15])
                    Pexp_ident "num_loc_lines" (lib/location.ml[114,3596+2]..[114,3596+15])
                <arg>
                Nolabel
                  expression (lib/location.ml[114,3596+19]..[114,3596+20])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
  structure_item (lib/location.ml[117,3653+0]..[119,3691+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[117,3653+4]..[117,3653+12])
          Ppat_var "echo_eof" (lib/location.ml[117,3653+4]..[117,3653+12])
        expression (lib/location.ml[117,3653+13]..[119,3691+20]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[117,3653+13]..[117,3653+15])
              Nolabel
              None
              pattern (lib/location.ml[117,3653+13]..[117,3653+15])
                Ppat_construct "()" (lib/location.ml[117,3653+13]..[117,3653+15])
                None
          ]
          None
          Pfunction_body
            expression (lib/location.ml[118,3671+2]..[119,3691+20])
              Pexp_sequence
              expression (lib/location.ml[118,3671+2]..[118,3671+18])
                Pexp_apply
                expression (lib/location.ml[118,3671+2]..[118,3671+15])
                  Pexp_ident "print_newline" (lib/location.ml[118,3671+2]..[118,3671+15])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[118,3671+16]..[118,3671+18])
                      Pexp_construct "()" (lib/location.ml[118,3671+16]..[118,3671+18])
                      None
                ]
              expression (lib/location.ml[119,3691+2]..[119,3691+20])
                Pexp_apply
                expression (lib/location.ml[119,3691+2]..[119,3691+6])
                  Pexp_ident "incr" (lib/location.ml[119,3691+2]..[119,3691+6])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[119,3691+7]..[119,3691+20])
                      Pexp_ident "num_loc_lines" (lib/location.ml[119,3691+7]..[119,3691+20])
                ]
    ]
  structure_item (lib/location.ml[122,3779+0]..[126,3911+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[122,3779+4]..[122,3779+24])
          Ppat_var "separate_new_message" (lib/location.ml[122,3779+4]..[122,3779+24])
        expression (lib/location.ml[122,3779+25]..[126,3911+5]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[122,3779+25]..[122,3779+28])
              Nolabel
              None
              pattern (lib/location.ml[122,3779+25]..[122,3779+28])
                Ppat_var "ppf" (lib/location.ml[122,3779+25]..[122,3779+28])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[123,3810+2]..[126,3911+5])
              Pexp_ifthenelse
              expression (lib/location.ml[123,3810+5]..[123,3810+30])
                Pexp_apply
                expression (lib/location.ml[123,3810+5]..[123,3810+8])
                  Pexp_ident "not" (lib/location.ml[123,3810+5]..[123,3810+8])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[123,3810+9]..[123,3810+30])
                      Pexp_apply
                      expression (lib/location.ml[123,3810+10]..[123,3810+26])
                        Pexp_ident "is_first_message" (lib/location.ml[123,3810+10]..[123,3810+26])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[123,3810+27]..[123,3810+29])
                            Pexp_construct "()" (lib/location.ml[123,3810+27]..[123,3810+29])
                            None
                      ]
                ]
              expression (lib/location.ml[123,3810+36]..[126,3911+5])
                Pexp_sequence
                expression (lib/location.ml[124,3852+4]..[124,3852+34])
                  Pexp_apply
                  expression (lib/location.ml[124,3852+4]..[124,3852+27])
                    Pexp_ident "Format.pp_print_newline" (lib/location.ml[124,3852+4]..[124,3852+27])
                  [
                    <arg>
                    Nolabel
                      expression (lib/location.ml[124,3852+28]..[124,3852+31])
                        Pexp_ident "ppf" (lib/location.ml[124,3852+28]..[124,3852+31])
                    <arg>
                    Nolabel
                      expression (lib/location.ml[124,3852+32]..[124,3852+34])
                        Pexp_construct "()" (lib/location.ml[124,3852+32]..[124,3852+34])
                        None
                  ]
                expression (lib/location.ml[125,3888+4]..[125,3888+22])
                  Pexp_apply
                  expression (lib/location.ml[125,3888+4]..[125,3888+8])
                    Pexp_ident "incr" (lib/location.ml[125,3888+4]..[125,3888+8])
                  [
                    <arg>
                    Nolabel
                      expression (lib/location.ml[125,3888+9]..[125,3888+22])
                        Pexp_ident "num_loc_lines" (lib/location.ml[125,3888+9]..[125,3888+22])
                  ]
              None
    ]
  structure_item (lib/location.ml[133,4162+0]..[147,4694+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[133,4162+4]..[133,4162+32])
          Ppat_var "print_updating_num_loc_lines" (lib/location.ml[133,4162+4]..[133,4162+32])
        expression (lib/location.ml[133,4162+33]..[147,4694+50]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[133,4162+33]..[133,4162+36])
              Nolabel
              None
              pattern (lib/location.ml[133,4162+33]..[133,4162+36])
                Ppat_var "ppf" (lib/location.ml[133,4162+33]..[133,4162+36])
            Pparam_val (lib/location.ml[133,4162+37]..[133,4162+38])
              Nolabel
              None
              pattern (lib/location.ml[133,4162+37]..[133,4162+38])
                Ppat_var "f" (lib/location.ml[133,4162+37]..[133,4162+38])
            Pparam_val (lib/location.ml[133,4162+39]..[133,4162+42])
              Nolabel
              None
              pattern (lib/location.ml[133,4162+39]..[133,4162+42])
                Ppat_var "arg" (lib/location.ml[133,4162+39]..[133,4162+42])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[134,4207+2]..[147,4694+50])
              Pexp_open Fresh
              module_expr (lib/location.ml[134,4207+11]..[134,4207+17])
                Pmod_ident "Format" (lib/location.ml[134,4207+11]..[134,4207+17])
              expression (lib/location.ml[135,4228+2]..[147,4694+50])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[135,4228+6]..[135,4228+19])
                      Ppat_var "out_functions" (lib/location.ml[135,4228+6]..[135,4228+19])
                    expression (lib/location.ml[135,4228+22]..[135,4228+59])
                      Pexp_apply
                      expression (lib/location.ml[135,4228+22]..[135,4228+52])
                        Pexp_ident "pp_get_formatter_out_functions" (lib/location.ml[135,4228+22]..[135,4228+52])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[135,4228+53]..[135,4228+56])
                            Pexp_ident "ppf" (lib/location.ml[135,4228+53]..[135,4228+56])
                        <arg>
                        Nolabel
                          expression (lib/location.ml[135,4228+57]..[135,4228+59])
                            Pexp_construct "()" (lib/location.ml[135,4228+57]..[135,4228+59])
                            None
                      ]
                ]
                expression (lib/location.ml[136,4291+2]..[147,4694+50])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/location.ml[136,4291+6]..[136,4291+16])
                        Ppat_var "out_string" (lib/location.ml[136,4291+6]..[136,4291+16])
                      expression (lib/location.ml[136,4291+17]..[142,4532+42]) ghost
                        Pexp_function
                        [
                          Pparam_val (lib/location.ml[136,4291+17]..[136,4291+20])
                            Nolabel
                            None
                            pattern (lib/location.ml[136,4291+17]..[136,4291+20])
                              Ppat_var "str" (lib/location.ml[136,4291+17]..[136,4291+20])
                          Pparam_val (lib/location.ml[136,4291+21]..[136,4291+26])
                            Nolabel
                            None
                            pattern (lib/location.ml[136,4291+21]..[136,4291+26])
                              Ppat_var "start" (lib/location.ml[136,4291+21]..[136,4291+26])
                          Pparam_val (lib/location.ml[136,4291+27]..[136,4291+30])
                            Nolabel
                            None
                            pattern (lib/location.ml[136,4291+27]..[136,4291+30])
                              Ppat_var "len" (lib/location.ml[136,4291+27]..[136,4291+30])
                        ]
                        None
                        Pfunction_body
                          expression (lib/location.ml[137,4324+4]..[142,4532+42])
                            Pexp_let Rec
                            [
                              <def>
                                pattern (lib/location.ml[137,4324+12]..[137,4324+17])
                                  Ppat_var "count" (lib/location.ml[137,4324+12]..[137,4324+17])
                                expression (lib/location.ml[137,4324+18]..[140,4447+27]) ghost
                                  Pexp_function
                                  [
                                    Pparam_val (lib/location.ml[137,4324+18]..[137,4324+19])
                                      Nolabel
                                      None
                                      pattern (lib/location.ml[137,4324+18]..[137,4324+19])
                                        Ppat_var "i" (lib/location.ml[137,4324+18]..[137,4324+19])
                                    Pparam_val (lib/location.ml[137,4324+20]..[137,4324+21])
                                      Nolabel
                                      None
                                      pattern (lib/location.ml[137,4324+20]..[137,4324+21])
                                        Ppat_var "c" (lib/location.ml[137,4324+20]..[137,4324+21])
                                  ]
                                  None
                                  Pfunction_body
                                    expression (lib/location.ml[138,4348+6]..[140,4447+27])
                                      Pexp_ifthenelse
                                      expression (lib/location.ml[138,4348+9]..[138,4348+24])
                                        Pexp_apply
                                        expression (lib/location.ml[138,4348+11]..[138,4348+12])
                                          Pexp_ident "=" (lib/location.ml[138,4348+11]..[138,4348+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[138,4348+9]..[138,4348+10])
                                              Pexp_ident "i" (lib/location.ml[138,4348+9]..[138,4348+10])
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[138,4348+13]..[138,4348+24])
                                              Pexp_apply
                                              expression (lib/location.ml[138,4348+19]..[138,4348+20])
                                                Pexp_ident "+" (lib/location.ml[138,4348+19]..[138,4348+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[138,4348+13]..[138,4348+18])
                                                    Pexp_ident "start" (lib/location.ml[138,4348+13]..[138,4348+18])
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[138,4348+21]..[138,4348+24])
                                                    Pexp_ident "len" (lib/location.ml[138,4348+21]..[138,4348+24])
                                              ]
                                        ]
                                      expression (lib/location.ml[138,4348+30]..[138,4348+31])
                                        Pexp_ident "c" (lib/location.ml[138,4348+30]..[138,4348+31])
                                      Some
                                        expression (lib/location.ml[139,4380+11]..[140,4447+27])
                                          Pexp_ifthenelse
                                          expression (lib/location.ml[139,4380+14]..[139,4380+37])
                                            Pexp_apply
                                            expression (lib/location.ml[139,4380+31]..[139,4380+32])
                                              Pexp_ident "=" (lib/location.ml[139,4380+31]..[139,4380+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[139,4380+14]..[139,4380+30])
                                                  Pexp_apply
                                                  expression (lib/location.ml[139,4380+14]..[139,4380+24])
                                                    Pexp_ident "String.get" (lib/location.ml[139,4380+14]..[139,4380+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[139,4380+25]..[139,4380+28])
                                                        Pexp_ident "str" (lib/location.ml[139,4380+25]..[139,4380+28])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[139,4380+29]..[139,4380+30])
                                                        Pexp_ident "i" (lib/location.ml[139,4380+29]..[139,4380+30])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[139,4380+33]..[139,4380+37])
                                                  Pexp_constant PConst_char 0a
                                            ]
                                          expression (lib/location.ml[139,4380+43]..[139,4380+66])
                                            Pexp_apply
                                            expression (lib/location.ml[139,4380+43]..[139,4380+48])
                                              Pexp_ident "count" (lib/location.ml[139,4380+43]..[139,4380+48])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[139,4380+49]..[139,4380+57])
                                                  Pexp_apply
                                                  expression (lib/location.ml[139,4380+50]..[139,4380+54])
                                                    Pexp_ident "succ" (lib/location.ml[139,4380+50]..[139,4380+54])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[139,4380+55]..[139,4380+56])
                                                        Pexp_ident "i" (lib/location.ml[139,4380+55]..[139,4380+56])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[139,4380+58]..[139,4380+66])
                                                  Pexp_apply
                                                  expression (lib/location.ml[139,4380+59]..[139,4380+63])
                                                    Pexp_ident "succ" (lib/location.ml[139,4380+59]..[139,4380+63])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[139,4380+64]..[139,4380+65])
                                                        Pexp_ident "c" (lib/location.ml[139,4380+64]..[139,4380+65])
                                                  ]
                                            ]
                                          Some
                                            expression (lib/location.ml[140,4447+11]..[140,4447+27])
                                              Pexp_apply
                                              expression (lib/location.ml[140,4447+11]..[140,4447+16])
                                                Pexp_ident "count" (lib/location.ml[140,4447+11]..[140,4447+16])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[140,4447+17]..[140,4447+25])
                                                    Pexp_apply
                                                    expression (lib/location.ml[140,4447+18]..[140,4447+22])
                                                      Pexp_ident "succ" (lib/location.ml[140,4447+18]..[140,4447+22])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/location.ml[140,4447+23]..[140,4447+24])
                                                          Pexp_ident "i" (lib/location.ml[140,4447+23]..[140,4447+24])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[140,4447+26]..[140,4447+27])
                                                    Pexp_ident "c" (lib/location.ml[140,4447+26]..[140,4447+27])
                                              ]
                            ]
                            expression (lib/location.ml[141,4478+4]..[142,4532+42])
                              Pexp_sequence
                              expression (lib/location.ml[141,4478+4]..[141,4478+51])
                                Pexp_apply
                                expression (lib/location.ml[141,4478+18]..[141,4478+20])
                                  Pexp_ident ":=" (lib/location.ml[141,4478+18]..[141,4478+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[141,4478+4]..[141,4478+17])
                                      Pexp_ident "num_loc_lines" (lib/location.ml[141,4478+4]..[141,4478+17])
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[141,4478+21]..[141,4478+51])
                                      Pexp_apply
                                      expression (lib/location.ml[141,4478+36]..[141,4478+37])
                                        Pexp_ident "+" (lib/location.ml[141,4478+36]..[141,4478+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[141,4478+21]..[141,4478+35])
                                            Pexp_apply
                                            expression (lib/location.ml[141,4478+21]..[141,4478+22])
                                              Pexp_ident "!" (lib/location.ml[141,4478+21]..[141,4478+22])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[141,4478+22]..[141,4478+35])
                                                  Pexp_ident "num_loc_lines" (lib/location.ml[141,4478+22]..[141,4478+35])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[141,4478+38]..[141,4478+51])
                                            Pexp_apply
                                            expression (lib/location.ml[141,4478+38]..[141,4478+43])
                                              Pexp_ident "count" (lib/location.ml[141,4478+38]..[141,4478+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[141,4478+44]..[141,4478+49])
                                                  Pexp_ident "start" (lib/location.ml[141,4478+44]..[141,4478+49])
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[141,4478+50]..[141,4478+51])
                                                  Pexp_constant PConst_int (0,None)
                                            ]
                                      ]
                                ]
                              expression (lib/location.ml[142,4532+4]..[142,4532+42])
                                Pexp_apply
                                expression (lib/location.ml[142,4532+4]..[142,4532+28])
                                  Pexp_field
                                  expression (lib/location.ml[142,4532+4]..[142,4532+17])
                                    Pexp_ident "out_functions" (lib/location.ml[142,4532+4]..[142,4532+17])
                                  "out_string" (lib/location.ml[142,4532+18]..[142,4532+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[142,4532+29]..[142,4532+32])
                                      Pexp_ident "str" (lib/location.ml[142,4532+29]..[142,4532+32])
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[142,4532+33]..[142,4532+38])
                                      Pexp_ident "start" (lib/location.ml[142,4532+33]..[142,4532+38])
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[142,4532+39]..[142,4532+42])
                                      Pexp_ident "len" (lib/location.ml[142,4532+39]..[142,4532+42])
                                ]
                  ]
                  expression (lib/location.ml[143,4578+2]..[147,4694+50])
                    Pexp_sequence
                    expression (lib/location.ml[143,4578+2]..[144,4615+37])
                      Pexp_apply
                      expression (lib/location.ml[143,4578+2]..[143,4578+32])
                        Pexp_ident "pp_set_formatter_out_functions" (lib/location.ml[143,4578+2]..[143,4578+32])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[143,4578+33]..[143,4578+36])
                            Pexp_ident "ppf" (lib/location.ml[143,4578+33]..[143,4578+36])
                        <arg>
                        Nolabel
                          expression (lib/location.ml[144,4615+4]..[144,4615+37])
                            Pexp_record
                            [
                              "out_string" (lib/location.ml[144,4615+25]..[144,4615+35]) ghost
                                expression (lib/location.ml[144,4615+25]..[144,4615+35])
                                  Pexp_ident "out_string" (lib/location.ml[144,4615+25]..[144,4615+35])
                            ]
                            Some
                              expression (lib/location.ml[144,4615+6]..[144,4615+19])
                                Pexp_ident "out_functions" (lib/location.ml[144,4615+6]..[144,4615+19])
                      ]
                    expression (lib/location.ml[145,4655+2]..[147,4694+50])
                      Pexp_sequence
                      expression (lib/location.ml[145,4655+2]..[145,4655+11])
                        Pexp_apply
                        expression (lib/location.ml[145,4655+2]..[145,4655+3])
                          Pexp_ident "f" (lib/location.ml[145,4655+2]..[145,4655+3])
                        [
                          <arg>
                          Nolabel
                            expression (lib/location.ml[145,4655+4]..[145,4655+7])
                              Pexp_ident "ppf" (lib/location.ml[145,4655+4]..[145,4655+7])
                          <arg>
                          Nolabel
                            expression (lib/location.ml[145,4655+8]..[145,4655+11])
                              Pexp_ident "arg" (lib/location.ml[145,4655+8]..[145,4655+11])
                        ]
                      expression (lib/location.ml[146,4669+2]..[147,4694+50])
                        Pexp_sequence
                        expression (lib/location.ml[146,4669+2]..[146,4669+23])
                          Pexp_apply
                          expression (lib/location.ml[146,4669+2]..[146,4669+16])
                            Pexp_ident "pp_print_flush" (lib/location.ml[146,4669+2]..[146,4669+16])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[146,4669+17]..[146,4669+20])
                                Pexp_ident "ppf" (lib/location.ml[146,4669+17]..[146,4669+20])
                            <arg>
                            Nolabel
                              expression (lib/location.ml[146,4669+21]..[146,4669+23])
                                Pexp_construct "()" (lib/location.ml[146,4669+21]..[146,4669+23])
                                None
                          ]
                        expression (lib/location.ml[147,4694+2]..[147,4694+50])
                          Pexp_apply
                          expression (lib/location.ml[147,4694+2]..[147,4694+32])
                            Pexp_ident "pp_set_formatter_out_functions" (lib/location.ml[147,4694+2]..[147,4694+32])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[147,4694+33]..[147,4694+36])
                                Pexp_ident "ppf" (lib/location.ml[147,4694+33]..[147,4694+36])
                            <arg>
                            Nolabel
                              expression (lib/location.ml[147,4694+37]..[147,4694+50])
                                Pexp_ident "out_functions" (lib/location.ml[147,4694+37]..[147,4694+50])
                          ]
    ]
  structure_item (lib/location.ml[149,4746+0]..[149,4746+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[149,4746+4]..[149,4746+14])
          Ppat_var "setup_tags" (lib/location.ml[149,4746+4]..[149,4746+14])
        expression (lib/location.ml[149,4746+15]..[149,4746+21]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[149,4746+15]..[149,4746+17])
              Nolabel
              None
              pattern (lib/location.ml[149,4746+15]..[149,4746+17])
                Ppat_construct "()" (lib/location.ml[149,4746+15]..[149,4746+17])
                None
          ]
          None
          Pfunction_body
            expression (lib/location.ml[149,4746+19]..[149,4746+21])
              Pexp_construct "()" (lib/location.ml[149,4746+19]..[149,4746+21])
              None
    ]
  structure_item (lib/location.ml[155,4964+0]..[158,5061+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[155,4964+4]..[155,4964+25])
          Ppat_var "rewrite_absolute_path" (lib/location.ml[155,4964+4]..[155,4964+25])
        expression (lib/location.ml[155,4964+26]..[158,5061+54]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[155,4964+26]..[155,4964+30])
              Nolabel
              None
              pattern (lib/location.ml[155,4964+26]..[155,4964+30])
                Ppat_var "path" (lib/location.ml[155,4964+26]..[155,4964+30])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[156,4997+2]..[158,5061+54])
              Pexp_match
              expression (lib/location.ml[156,4997+8]..[156,4997+41])
                Pexp_apply
                expression (lib/location.ml[156,4997+8]..[156,4997+38])
                  Pexp_ident "Misc.get_build_path_prefix_map" (lib/location.ml[156,4997+8]..[156,4997+38])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[156,4997+39]..[156,4997+41])
                      Pexp_construct "()" (lib/location.ml[156,4997+39]..[156,4997+41])
                      None
                ]
              [
                <case>
                  pattern (lib/location.ml[157,5044+4]..[157,5044+8])
                    Ppat_construct "None" (lib/location.ml[157,5044+4]..[157,5044+8])
                    None
                  expression (lib/location.ml[157,5044+12]..[157,5044+16])
                    Pexp_ident "path" (lib/location.ml[157,5044+12]..[157,5044+16])
                <case>
                  pattern (lib/location.ml[158,5061+4]..[158,5061+12])
                    Ppat_construct "Some" (lib/location.ml[158,5061+4]..[158,5061+8])
                    Some
                      []
                      pattern (lib/location.ml[158,5061+9]..[158,5061+12])
                        Ppat_var "map" (lib/location.ml[158,5061+9]..[158,5061+12])
                  expression (lib/location.ml[158,5061+16]..[158,5061+54])
                    Pexp_apply
                    expression (lib/location.ml[158,5061+16]..[158,5061+45])
                      Pexp_ident "Build_path_prefix_map.rewrite" (lib/location.ml[158,5061+16]..[158,5061+45])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[158,5061+46]..[158,5061+49])
                          Pexp_ident "map" (lib/location.ml[158,5061+46]..[158,5061+49])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[158,5061+50]..[158,5061+54])
                          Pexp_ident "path" (lib/location.ml[158,5061+50]..[158,5061+54])
                    ]
              ]
    ]
  structure_item (lib/location.ml[160,5117+0]..[171,5454+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[160,5117+4]..[160,5117+31])
          Ppat_var "rewrite_find_first_existing" (lib/location.ml[160,5117+4]..[160,5117+31])
        expression (lib/location.ml[160,5117+32]..[171,5454+46]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[160,5117+32]..[160,5117+36])
              Nolabel
              None
              pattern (lib/location.ml[160,5117+32]..[160,5117+36])
                Ppat_var "path" (lib/location.ml[160,5117+32]..[160,5117+36])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[161,5156+2]..[171,5454+46])
              Pexp_match
              expression (lib/location.ml[161,5156+8]..[161,5156+41])
                Pexp_apply
                expression (lib/location.ml[161,5156+8]..[161,5156+38])
                  Pexp_ident "Misc.get_build_path_prefix_map" (lib/location.ml[161,5156+8]..[161,5156+38])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[161,5156+39]..[161,5156+41])
                      Pexp_construct "()" (lib/location.ml[161,5156+39]..[161,5156+41])
                      None
                ]
              [
                <case>
                  pattern (lib/location.ml[162,5203+4]..[162,5203+8])
                    Ppat_construct "None" (lib/location.ml[162,5203+4]..[162,5203+8])
                    None
                  expression (lib/location.ml[163,5215+6]..[164,5260+15])
                    Pexp_ifthenelse
                    expression (lib/location.ml[163,5215+9]..[163,5215+29])
                      Pexp_apply
                      expression (lib/location.ml[163,5215+9]..[163,5215+24])
                        Pexp_ident "Sys.file_exists" (lib/location.ml[163,5215+9]..[163,5215+24])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[163,5215+25]..[163,5215+29])
                            Pexp_ident "path" (lib/location.ml[163,5215+25]..[163,5215+29])
                      ]
                    expression (lib/location.ml[163,5215+35]..[163,5215+44])
                      Pexp_construct "Some" (lib/location.ml[163,5215+35]..[163,5215+39])
                      Some
                        expression (lib/location.ml[163,5215+40]..[163,5215+44])
                          Pexp_ident "path" (lib/location.ml[163,5215+40]..[163,5215+44])
                    Some
                      expression (lib/location.ml[164,5260+11]..[164,5260+15])
                        Pexp_construct "None" (lib/location.ml[164,5260+11]..[164,5260+15])
                        None
                <case>
                  pattern (lib/location.ml[165,5276+4]..[165,5276+19])
                    Ppat_construct "Some" (lib/location.ml[165,5276+4]..[165,5276+8])
                    Some
                      []
                      pattern (lib/location.ml[165,5276+9]..[165,5276+19])
                        Ppat_var "prefix_map" (lib/location.ml[165,5276+9]..[165,5276+19])
                  expression (lib/location.ml[166,5299+4]..[171,5454+46])
                    Pexp_match
                    expression (lib/location.ml[166,5299+10]..[166,5299+59])
                      Pexp_apply
                      expression (lib/location.ml[166,5299+10]..[166,5299+43])
                        Pexp_ident "Build_path_prefix_map.rewrite_all" (lib/location.ml[166,5299+10]..[166,5299+43])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[166,5299+44]..[166,5299+54])
                            Pexp_ident "prefix_map" (lib/location.ml[166,5299+44]..[166,5299+54])
                        <arg>
                        Nolabel
                          expression (lib/location.ml[166,5299+55]..[166,5299+59])
                            Pexp_ident "path" (lib/location.ml[166,5299+55]..[166,5299+59])
                      ]
                    [
                      <case>
                        pattern (lib/location.ml[167,5364+6]..[167,5364+8])
                          Ppat_construct "[]" (lib/location.ml[167,5364+6]..[167,5364+8])
                          None
                        expression (lib/location.ml[168,5376+6]..[169,5421+15])
                          Pexp_ifthenelse
                          expression (lib/location.ml[168,5376+9]..[168,5376+29])
                            Pexp_apply
                            expression (lib/location.ml[168,5376+9]..[168,5376+24])
                              Pexp_ident "Sys.file_exists" (lib/location.ml[168,5376+9]..[168,5376+24])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[168,5376+25]..[168,5376+29])
                                  Pexp_ident "path" (lib/location.ml[168,5376+25]..[168,5376+29])
                            ]
                          expression (lib/location.ml[168,5376+35]..[168,5376+44])
                            Pexp_construct "Some" (lib/location.ml[168,5376+35]..[168,5376+39])
                            Some
                              expression (lib/location.ml[168,5376+40]..[168,5376+44])
                                Pexp_ident "path" (lib/location.ml[168,5376+40]..[168,5376+44])
                          Some
                            expression (lib/location.ml[169,5421+11]..[169,5421+15])
                              Pexp_construct "None" (lib/location.ml[169,5421+11]..[169,5421+15])
                              None
                      <case>
                        pattern (lib/location.ml[170,5437+6]..[170,5437+13])
                          Ppat_var "matches" (lib/location.ml[170,5437+6]..[170,5437+13])
                        expression (lib/location.ml[171,5454+6]..[171,5454+46])
                          Pexp_construct "Some" (lib/location.ml[171,5454+6]..[171,5454+10])
                          Some
                            expression (lib/location.ml[171,5454+11]..[171,5454+46])
                              Pexp_apply
                              expression (lib/location.ml[171,5454+12]..[171,5454+21])
                                Pexp_ident "List.find" (lib/location.ml[171,5454+12]..[171,5454+21])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[171,5454+22]..[171,5454+37])
                                    Pexp_ident "Sys.file_exists" (lib/location.ml[171,5454+22]..[171,5454+37])
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[171,5454+38]..[171,5454+45])
                                    Pexp_ident "matches" (lib/location.ml[171,5454+38]..[171,5454+45])
                              ]
                    ]
              ]
    ]
  structure_item (lib/location.ml[216,7093+0]..[269,8926+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[216,7093+4]..[216,7093+13])
          Ppat_var "print_loc" (lib/location.ml[216,7093+4]..[216,7093+13])
        expression (lib/location.ml[216,7093+14]..[269,8926+25]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[216,7093+14]..[216,7093+17])
              Nolabel
              None
              pattern (lib/location.ml[216,7093+14]..[216,7093+17])
                Ppat_var "ppf" (lib/location.ml[216,7093+14]..[216,7093+17])
            Pparam_val (lib/location.ml[216,7093+18]..[216,7093+21])
              Nolabel
              None
              pattern (lib/location.ml[216,7093+18]..[216,7093+21])
                Ppat_var "loc" (lib/location.ml[216,7093+18]..[216,7093+21])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[217,7117+2]..[269,8926+25])
              Pexp_sequence
              expression (lib/location.ml[217,7117+2]..[217,7117+15])
                Pexp_apply
                expression (lib/location.ml[217,7117+2]..[217,7117+12])
                  Pexp_ident "setup_tags" (lib/location.ml[217,7117+2]..[217,7117+12])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[217,7117+13]..[217,7117+15])
                      Pexp_construct "()" (lib/location.ml[217,7117+13]..[217,7117+15])
                      None
                ]
              expression (lib/location.ml[218,7134+2]..[269,8926+25])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[218,7134+6]..[218,7134+16])
                      Ppat_var "file_valid" (lib/location.ml[218,7134+6]..[218,7134+16])
                    expression (lib/location.ml[218,7134+19]..[224,7376+15])
                      Pexp_function
                      []
                      None
                      Pfunction_cases (lib/location.ml[218,7134+19]..[224,7376+15])
                        [
                          <case>
                            pattern (lib/location.ml[219,7162+6]..[219,7162+14])
                              Ppat_constant PConst_string("_none_",(lib/location.ml[219,7162+7]..[219,7162+13]),None)
                            expression (lib/location.ml[222,7328+8]..[222,7328+12])
                              Pexp_construct "true" (lib/location.ml[222,7328+8]..[222,7328+12])
                              None
                          <case>
                            pattern (lib/location.ml[223,7341+6]..[223,7341+25])
                              Ppat_or
                              pattern (lib/location.ml[223,7341+6]..[223,7341+8])
                                Ppat_constant PConst_string("",(lib/location.ml[223,7341+7]..[223,7341+7]),None)
                              pattern (lib/location.ml[223,7341+11]..[223,7341+25])
                                Ppat_constant PConst_string("//toplevel//",(lib/location.ml[223,7341+12]..[223,7341+24]),None)
                            expression (lib/location.ml[223,7341+29]..[223,7341+34])
                              Pexp_construct "false" (lib/location.ml[223,7341+29]..[223,7341+34])
                              None
                          <case>
                            pattern (lib/location.ml[224,7376+6]..[224,7376+7])
                              Ppat_any
                            expression (lib/location.ml[224,7376+11]..[224,7376+15])
                              Pexp_construct "true" (lib/location.ml[224,7376+11]..[224,7376+15])
                              None
                        ]
                ]
                expression (lib/location.ml[226,7397+2]..[269,8926+25])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/location.ml[226,7397+6]..[226,7397+16])
                        Ppat_var "line_valid" (lib/location.ml[226,7397+6]..[226,7397+16])
                      expression (lib/location.ml[226,7397+17]..[226,7397+32]) ghost
                        Pexp_function
                        [
                          Pparam_val (lib/location.ml[226,7397+17]..[226,7397+21])
                            Nolabel
                            None
                            pattern (lib/location.ml[226,7397+17]..[226,7397+21])
                              Ppat_var "line" (lib/location.ml[226,7397+17]..[226,7397+21])
                        ]
                        None
                        Pfunction_body
                          expression (lib/location.ml[226,7397+24]..[226,7397+32])
                            Pexp_apply
                            expression (lib/location.ml[226,7397+29]..[226,7397+30])
                              Pexp_ident ">" (lib/location.ml[226,7397+29]..[226,7397+30])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[226,7397+24]..[226,7397+28])
                                  Pexp_ident "line" (lib/location.ml[226,7397+24]..[226,7397+28])
                              <arg>
                              Nolabel
                                expression (lib/location.ml[226,7397+31]..[226,7397+32])
                                  Pexp_constant PConst_int (0,None)
                            ]
                  ]
                  expression (lib/location.ml[227,7433+2]..[269,8926+25])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/location.ml[227,7433+6]..[227,7433+17])
                          Ppat_var "chars_valid" (lib/location.ml[227,7433+6]..[227,7433+17])
                        expression (lib/location.ml[227,7433+18]..[227,7433+72]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/location.ml[227,7433+18]..[227,7433+28])
                              Labelled "startchar"
                              None
                              pattern (lib/location.ml[227,7433+19]..[227,7433+28])
                                Ppat_var "startchar" (lib/location.ml[227,7433+19]..[227,7433+28])
                            Pparam_val (lib/location.ml[227,7433+29]..[227,7433+37])
                              Labelled "endchar"
                              None
                              pattern (lib/location.ml[227,7433+30]..[227,7433+37])
                                Ppat_var "endchar" (lib/location.ml[227,7433+30]..[227,7433+37])
                          ]
                          None
                          Pfunction_body
                            expression (lib/location.ml[227,7433+40]..[227,7433+72])
                              Pexp_apply
                              expression (lib/location.ml[227,7433+56]..[227,7433+58])
                                Pexp_ident "&&" (lib/location.ml[227,7433+56]..[227,7433+58])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[227,7433+40]..[227,7433+55])
                                    Pexp_apply
                                    expression (lib/location.ml[227,7433+50]..[227,7433+52])
                                      Pexp_ident "<>" (lib/location.ml[227,7433+50]..[227,7433+52])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[227,7433+40]..[227,7433+49])
                                          Pexp_ident "startchar" (lib/location.ml[227,7433+40]..[227,7433+49])
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[227,7433+53]..[227,7433+55])
                                          Pexp_constant PConst_int (-1,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[227,7433+59]..[227,7433+72])
                                    Pexp_apply
                                    expression (lib/location.ml[227,7433+67]..[227,7433+69])
                                      Pexp_ident "<>" (lib/location.ml[227,7433+67]..[227,7433+69])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[227,7433+59]..[227,7433+66])
                                          Pexp_ident "endchar" (lib/location.ml[227,7433+59]..[227,7433+66])
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[227,7433+70]..[227,7433+72])
                                          Pexp_constant PConst_int (-1,None)
                                    ]
                              ]
                    ]
                    expression (lib/location.ml[229,7510+2]..[269,8926+25])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/location.ml[229,7510+6]..[229,7510+10])
                            Ppat_var "file" (lib/location.ml[229,7510+6]..[229,7510+10])
                          expression (lib/location.ml[232,7631+4]..[233,7684+32])
                            Pexp_ifthenelse
                            expression (lib/location.ml[232,7631+7]..[232,7631+35])
                              Pexp_apply
                              expression (lib/location.ml[232,7631+31]..[232,7631+32])
                                Pexp_ident "=" (lib/location.ml[232,7631+31]..[232,7631+32])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[232,7631+7]..[232,7631+30])
                                    Pexp_field
                                    expression (lib/location.ml[232,7631+7]..[232,7631+20])
                                      Pexp_field
                                      expression (lib/location.ml[232,7631+7]..[232,7631+10])
                                        Pexp_ident "loc" (lib/location.ml[232,7631+7]..[232,7631+10])
                                      "loc_start" (lib/location.ml[232,7631+11]..[232,7631+20])
                                    "pos_fname" (lib/location.ml[232,7631+21]..[232,7631+30])
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[232,7631+33]..[232,7631+35])
                                    Pexp_constant PConst_string("",(lib/location.ml[232,7631+34]..[232,7631+34]),None)
                              ]
                            expression (lib/location.ml[232,7631+41]..[232,7631+52])
                              Pexp_apply
                              expression (lib/location.ml[232,7631+41]..[232,7631+42])
                                Pexp_ident "!" (lib/location.ml[232,7631+41]..[232,7631+42])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[232,7631+42]..[232,7631+52])
                                    Pexp_ident "input_name" (lib/location.ml[232,7631+42]..[232,7631+52])
                              ]
                            Some
                              expression (lib/location.ml[233,7684+9]..[233,7684+32])
                                Pexp_field
                                expression (lib/location.ml[233,7684+9]..[233,7684+22])
                                  Pexp_field
                                  expression (lib/location.ml[233,7684+9]..[233,7684+12])
                                    Pexp_ident "loc" (lib/location.ml[233,7684+9]..[233,7684+12])
                                  "loc_start" (lib/location.ml[233,7684+13]..[233,7684+22])
                                "pos_fname" (lib/location.ml[233,7684+23]..[233,7684+32])
                      ]
                      expression (lib/location.ml[235,7722+2]..[269,8926+25])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/location.ml[235,7722+6]..[235,7722+15])
                              Ppat_var "startline" (lib/location.ml[235,7722+6]..[235,7722+15])
                            expression (lib/location.ml[235,7722+18]..[235,7722+40])
                              Pexp_field
                              expression (lib/location.ml[235,7722+18]..[235,7722+31])
                                Pexp_field
                                expression (lib/location.ml[235,7722+18]..[235,7722+21])
                                  Pexp_ident "loc" (lib/location.ml[235,7722+18]..[235,7722+21])
                                "loc_start" (lib/location.ml[235,7722+22]..[235,7722+31])
                              "pos_lnum" (lib/location.ml[235,7722+32]..[235,7722+40])
                        ]
                        expression (lib/location.ml[236,7766+2]..[269,8926+25])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/location.ml[236,7766+6]..[236,7766+13])
                                Ppat_var "endline" (lib/location.ml[236,7766+6]..[236,7766+13])
                              expression (lib/location.ml[236,7766+16]..[236,7766+36])
                                Pexp_field
                                expression (lib/location.ml[236,7766+16]..[236,7766+27])
                                  Pexp_field
                                  expression (lib/location.ml[236,7766+16]..[236,7766+19])
                                    Pexp_ident "loc" (lib/location.ml[236,7766+16]..[236,7766+19])
                                  "loc_end" (lib/location.ml[236,7766+20]..[236,7766+27])
                                "pos_lnum" (lib/location.ml[236,7766+28]..[236,7766+36])
                          ]
                          expression (lib/location.ml[237,7806+2]..[269,8926+25])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lib/location.ml[237,7806+6]..[237,7806+15])
                                  Ppat_var "startchar" (lib/location.ml[237,7806+6]..[237,7806+15])
                                expression (lib/location.ml[237,7806+18]..[237,7806+64])
                                  Pexp_apply
                                  expression (lib/location.ml[237,7806+41]..[237,7806+42])
                                    Pexp_ident "-" (lib/location.ml[237,7806+41]..[237,7806+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[237,7806+18]..[237,7806+40])
                                        Pexp_field
                                        expression (lib/location.ml[237,7806+18]..[237,7806+31])
                                          Pexp_field
                                          expression (lib/location.ml[237,7806+18]..[237,7806+21])
                                            Pexp_ident "loc" (lib/location.ml[237,7806+18]..[237,7806+21])
                                          "loc_start" (lib/location.ml[237,7806+22]..[237,7806+31])
                                        "pos_cnum" (lib/location.ml[237,7806+32]..[237,7806+40])
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[237,7806+43]..[237,7806+64])
                                        Pexp_field
                                        expression (lib/location.ml[237,7806+43]..[237,7806+56])
                                          Pexp_field
                                          expression (lib/location.ml[237,7806+43]..[237,7806+46])
                                            Pexp_ident "loc" (lib/location.ml[237,7806+43]..[237,7806+46])
                                          "loc_start" (lib/location.ml[237,7806+47]..[237,7806+56])
                                        "pos_bol" (lib/location.ml[237,7806+57]..[237,7806+64])
                                  ]
                            ]
                            expression (lib/location.ml[238,7874+2]..[269,8926+25])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/location.ml[238,7874+6]..[238,7874+13])
                                    Ppat_var "endchar" (lib/location.ml[238,7874+6]..[238,7874+13])
                                  expression (lib/location.ml[238,7874+16]..[238,7874+58])
                                    Pexp_apply
                                    expression (lib/location.ml[238,7874+37]..[238,7874+38])
                                      Pexp_ident "-" (lib/location.ml[238,7874+37]..[238,7874+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[238,7874+16]..[238,7874+36])
                                          Pexp_field
                                          expression (lib/location.ml[238,7874+16]..[238,7874+27])
                                            Pexp_field
                                            expression (lib/location.ml[238,7874+16]..[238,7874+19])
                                              Pexp_ident "loc" (lib/location.ml[238,7874+16]..[238,7874+19])
                                            "loc_end" (lib/location.ml[238,7874+20]..[238,7874+27])
                                          "pos_cnum" (lib/location.ml[238,7874+28]..[238,7874+36])
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[238,7874+39]..[238,7874+58])
                                          Pexp_field
                                          expression (lib/location.ml[238,7874+39]..[238,7874+50])
                                            Pexp_field
                                            expression (lib/location.ml[238,7874+39]..[238,7874+42])
                                              Pexp_ident "loc" (lib/location.ml[238,7874+39]..[238,7874+42])
                                            "loc_end" (lib/location.ml[238,7874+43]..[238,7874+50])
                                          "pos_bol" (lib/location.ml[238,7874+51]..[238,7874+58])
                                    ]
                              ]
                              expression (lib/location.ml[240,7937+2]..[269,8926+25])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/location.ml[240,7937+6]..[240,7937+11])
                                      Ppat_var "first" (lib/location.ml[240,7937+6]..[240,7937+11])
                                    expression (lib/location.ml[240,7937+14]..[240,7937+22])
                                      Pexp_apply
                                      expression (lib/location.ml[240,7937+14]..[240,7937+17])
                                        Pexp_ident "ref" (lib/location.ml[240,7937+14]..[240,7937+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[240,7937+18]..[240,7937+22])
                                            Pexp_construct "true" (lib/location.ml[240,7937+18]..[240,7937+22])
                                            None
                                      ]
                                ]
                                expression (lib/location.ml[241,7963+2]..[269,8926+25])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/location.ml[241,7963+6]..[241,7963+16])
                                        Ppat_var "capitalize" (lib/location.ml[241,7963+6]..[241,7963+16])
                                      expression (lib/location.ml[241,7963+17]..[243,8047+10]) ghost
                                        Pexp_function
                                        [
                                          Pparam_val (lib/location.ml[241,7963+17]..[241,7963+18])
                                            Nolabel
                                            None
                                            pattern (lib/location.ml[241,7963+17]..[241,7963+18])
                                              Ppat_var "s" (lib/location.ml[241,7963+17]..[241,7963+18])
                                        ]
                                        None
                                        Pfunction_body
                                          expression (lib/location.ml[242,7984+4]..[243,8047+10])
                                            Pexp_ifthenelse
                                            expression (lib/location.ml[242,7984+7]..[242,7984+13])
                                              Pexp_apply
                                              expression (lib/location.ml[242,7984+7]..[242,7984+8])
                                                Pexp_ident "!" (lib/location.ml[242,7984+7]..[242,7984+8])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[242,7984+8]..[242,7984+13])
                                                    Pexp_ident "first" (lib/location.ml[242,7984+8]..[242,7984+13])
                                              ]
                                            expression (lib/location.ml[242,7984+19]..[242,7984+62])
                                              Pexp_sequence
                                              expression (lib/location.ml[242,7984+20]..[242,7984+34])
                                                Pexp_apply
                                                expression (lib/location.ml[242,7984+26]..[242,7984+28])
                                                  Pexp_ident ":=" (lib/location.ml[242,7984+26]..[242,7984+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[242,7984+20]..[242,7984+25])
                                                      Pexp_ident "first" (lib/location.ml[242,7984+20]..[242,7984+25])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[242,7984+29]..[242,7984+34])
                                                      Pexp_construct "false" (lib/location.ml[242,7984+29]..[242,7984+34])
                                                      None
                                                ]
                                              expression (lib/location.ml[242,7984+36]..[242,7984+61])
                                                Pexp_apply
                                                expression (lib/location.ml[242,7984+36]..[242,7984+59])
                                                  Pexp_ident "String.capitalize_ascii" (lib/location.ml[242,7984+36]..[242,7984+59])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[242,7984+60]..[242,7984+61])
                                                      Pexp_ident "s" (lib/location.ml[242,7984+60]..[242,7984+61])
                                                ]
                                            Some
                                              expression (lib/location.ml[243,8047+9]..[243,8047+10])
                                                Pexp_ident "s" (lib/location.ml[243,8047+9]..[243,8047+10])
                                  ]
                                  expression (lib/location.ml[244,8061+2]..[269,8926+25])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/location.ml[244,8061+6]..[244,8061+11])
                                          Ppat_var "comma" (lib/location.ml[244,8061+6]..[244,8061+11])
                                        expression (lib/location.ml[244,8061+12]..[245,8078+50]) ghost
                                          Pexp_function
                                          [
                                            Pparam_val (lib/location.ml[244,8061+12]..[244,8061+14])
                                              Nolabel
                                              None
                                              pattern (lib/location.ml[244,8061+12]..[244,8061+14])
                                                Ppat_construct "()" (lib/location.ml[244,8061+12]..[244,8061+14])
                                                None
                                          ]
                                          None
                                          Pfunction_body
                                            expression (lib/location.ml[245,8078+4]..[245,8078+50])
                                              Pexp_ifthenelse
                                              expression (lib/location.ml[245,8078+7]..[245,8078+13])
                                                Pexp_apply
                                                expression (lib/location.ml[245,8078+7]..[245,8078+8])
                                                  Pexp_ident "!" (lib/location.ml[245,8078+7]..[245,8078+8])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[245,8078+8]..[245,8078+13])
                                                      Pexp_ident "first" (lib/location.ml[245,8078+8]..[245,8078+13])
                                                ]
                                              expression (lib/location.ml[245,8078+19]..[245,8078+21])
                                                Pexp_construct "()" (lib/location.ml[245,8078+19]..[245,8078+21])
                                                None
                                              Some
                                                expression (lib/location.ml[245,8078+27]..[245,8078+50])
                                                  Pexp_apply
                                                  expression (lib/location.ml[245,8078+27]..[245,8078+41])
                                                    Pexp_ident "Format.fprintf" (lib/location.ml[245,8078+27]..[245,8078+41])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[245,8078+42]..[245,8078+45])
                                                        Pexp_ident "ppf" (lib/location.ml[245,8078+42]..[245,8078+45])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[245,8078+46]..[245,8078+50])
                                                        Pexp_constant PConst_string(", ",(lib/location.ml[245,8078+47]..[245,8078+49]),None)
                                                  ]
                                    ]
                                    expression (lib/location.ml[247,8133+2]..[269,8926+25])
                                      Pexp_sequence
                                      expression (lib/location.ml[247,8133+2]..[247,8133+30])
                                        Pexp_apply
                                        expression (lib/location.ml[247,8133+2]..[247,8133+16])
                                          Pexp_ident "Format.fprintf" (lib/location.ml[247,8133+2]..[247,8133+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[247,8133+17]..[247,8133+20])
                                              Pexp_ident "ppf" (lib/location.ml[247,8133+17]..[247,8133+20])
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[247,8133+21]..[247,8133+30])
                                              Pexp_constant PConst_string("@{<loc>",(lib/location.ml[247,8133+22]..[247,8133+29]),None)
                                        ]
                                      expression (lib/location.ml[255,8451+2]..[269,8926+25])
                                        Pexp_sequence
                                        expression (lib/location.ml[255,8451+2]..[255,8451+10])
                                          Pexp_apply
                                          expression (lib/location.ml[255,8451+2]..[255,8451+7])
                                            Pexp_ident "comma" (lib/location.ml[255,8451+2]..[255,8451+7])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[255,8451+8]..[255,8451+10])
                                                Pexp_construct "()" (lib/location.ml[255,8451+8]..[255,8451+10])
                                                None
                                          ]
                                        expression (lib/location.ml[256,8463+2]..[269,8926+25])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/location.ml[256,8463+6]..[256,8463+15])
                                                Ppat_var "startline" (lib/location.ml[256,8463+6]..[256,8463+15])
                                              expression (lib/location.ml[256,8463+18]..[256,8463+63])
                                                Pexp_ifthenelse
                                                expression (lib/location.ml[256,8463+21]..[256,8463+41])
                                                  Pexp_apply
                                                  expression (lib/location.ml[256,8463+21]..[256,8463+31])
                                                    Pexp_ident "line_valid" (lib/location.ml[256,8463+21]..[256,8463+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[256,8463+32]..[256,8463+41])
                                                        Pexp_ident "startline" (lib/location.ml[256,8463+32]..[256,8463+41])
                                                  ]
                                                expression (lib/location.ml[256,8463+47]..[256,8463+56])
                                                  Pexp_ident "startline" (lib/location.ml[256,8463+47]..[256,8463+56])
                                                Some
                                                  expression (lib/location.ml[256,8463+62]..[256,8463+63])
                                                    Pexp_constant PConst_int (1,None)
                                          ]
                                          expression (lib/location.ml[257,8530+2]..[269,8926+25])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/location.ml[257,8530+6]..[257,8530+13])
                                                  Ppat_var "endline" (lib/location.ml[257,8530+6]..[257,8530+13])
                                                expression (lib/location.ml[257,8530+16]..[257,8530+65])
                                                  Pexp_ifthenelse
                                                  expression (lib/location.ml[257,8530+19]..[257,8530+37])
                                                    Pexp_apply
                                                    expression (lib/location.ml[257,8530+19]..[257,8530+29])
                                                      Pexp_ident "line_valid" (lib/location.ml[257,8530+19]..[257,8530+29])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/location.ml[257,8530+30]..[257,8530+37])
                                                          Pexp_ident "endline" (lib/location.ml[257,8530+30]..[257,8530+37])
                                                    ]
                                                  expression (lib/location.ml[257,8530+43]..[257,8530+50])
                                                    Pexp_ident "endline" (lib/location.ml[257,8530+43]..[257,8530+50])
                                                  Some
                                                    expression (lib/location.ml[257,8530+56]..[257,8530+65])
                                                      Pexp_ident "startline" (lib/location.ml[257,8530+56]..[257,8530+65])
                                            ]
                                            expression (lib/location.ml[258,8599+2]..[269,8926+25])
                                              Pexp_sequence
                                              expression (lib/location.ml[258,8599+2]..[262,8776+5])
                                                Pexp_ifthenelse
                                                expression (lib/location.ml[258,8599+11]..[258,8599+30])
                                                  Pexp_apply
                                                  expression (lib/location.ml[258,8599+21]..[258,8599+22])
                                                    Pexp_ident "=" (lib/location.ml[258,8599+21]..[258,8599+22])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[258,8599+11]..[258,8599+20])
                                                        Pexp_ident "startline" (lib/location.ml[258,8599+11]..[258,8599+20])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[258,8599+23]..[258,8599+30])
                                                        Pexp_ident "endline" (lib/location.ml[258,8599+23]..[258,8599+30])
                                                  ]
                                                expression (lib/location.ml[259,8635+4]..[259,8635+60])
                                                  Pexp_apply
                                                  expression (lib/location.ml[259,8635+4]..[259,8635+18])
                                                    Pexp_ident "Format.fprintf" (lib/location.ml[259,8635+4]..[259,8635+18])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[259,8635+19]..[259,8635+22])
                                                        Pexp_ident "ppf" (lib/location.ml[259,8635+19]..[259,8635+22])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[259,8635+23]..[259,8635+30])
                                                        Pexp_constant PConst_string("%s %i",(lib/location.ml[259,8635+24]..[259,8635+29]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[259,8635+31]..[259,8635+50])
                                                        Pexp_apply
                                                        expression (lib/location.ml[259,8635+32]..[259,8635+42])
                                                          Pexp_ident "capitalize" (lib/location.ml[259,8635+32]..[259,8635+42])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[259,8635+43]..[259,8635+49])
                                                              Pexp_constant PConst_string("line",(lib/location.ml[259,8635+44]..[259,8635+48]),None)
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[259,8635+51]..[259,8635+60])
                                                        Pexp_ident "startline" (lib/location.ml[259,8635+51]..[259,8635+60])
                                                  ]
                                                Some
                                                  expression (lib/location.ml[261,8703+4]..[261,8703+72])
                                                    Pexp_apply
                                                    expression (lib/location.ml[261,8703+4]..[261,8703+18])
                                                      Pexp_ident "Format.fprintf" (lib/location.ml[261,8703+4]..[261,8703+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/location.ml[261,8703+19]..[261,8703+22])
                                                          Pexp_ident "ppf" (lib/location.ml[261,8703+19]..[261,8703+22])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/location.ml[261,8703+23]..[261,8703+33])
                                                          Pexp_constant PConst_string("%s %i-%i",(lib/location.ml[261,8703+24]..[261,8703+32]),None)
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/location.ml[261,8703+34]..[261,8703+54])
                                                          Pexp_apply
                                                          expression (lib/location.ml[261,8703+35]..[261,8703+45])
                                                            Pexp_ident "capitalize" (lib/location.ml[261,8703+35]..[261,8703+45])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/location.ml[261,8703+46]..[261,8703+53])
                                                                Pexp_constant PConst_string("lines",(lib/location.ml[261,8703+47]..[261,8703+52]),None)
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/location.ml[261,8703+55]..[261,8703+64])
                                                          Pexp_ident "startline" (lib/location.ml[261,8703+55]..[261,8703+64])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/location.ml[261,8703+65]..[261,8703+72])
                                                          Pexp_ident "endline" (lib/location.ml[261,8703+65]..[261,8703+72])
                                                    ]
                                              expression (lib/location.ml[264,8784+2]..[269,8926+25])
                                                Pexp_sequence
                                                expression (lib/location.ml[264,8784+2]..[267,8920+3])
                                                  Pexp_ifthenelse
                                                  expression (lib/location.ml[264,8784+5]..[264,8784+36])
                                                    Pexp_apply
                                                    expression (lib/location.ml[264,8784+5]..[264,8784+16])
                                                      Pexp_ident "chars_valid" (lib/location.ml[264,8784+5]..[264,8784+16])
                                                    [
                                                      <arg>
                                                      Labelled "startchar"
                                                        expression (lib/location.ml[264,8784+18]..[264,8784+27])
                                                          Pexp_ident "startchar" (lib/location.ml[264,8784+18]..[264,8784+27])
                                                      <arg>
                                                      Labelled "endchar"
                                                        expression (lib/location.ml[264,8784+29]..[264,8784+36])
                                                          Pexp_ident "endchar" (lib/location.ml[264,8784+29]..[264,8784+36])
                                                    ]
                                                  expression (lib/location.ml[264,8784+42]..[267,8920+3])
                                                    Pexp_sequence
                                                    expression (lib/location.ml[265,8828+4]..[265,8828+12])
                                                      Pexp_apply
                                                      expression (lib/location.ml[265,8828+4]..[265,8828+9])
                                                        Pexp_ident "comma" (lib/location.ml[265,8828+4]..[265,8828+9])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[265,8828+10]..[265,8828+12])
                                                            Pexp_construct "()" (lib/location.ml[265,8828+10]..[265,8828+12])
                                                            None
                                                      ]
                                                    expression (lib/location.ml[266,8842+4]..[266,8842+77])
                                                      Pexp_apply
                                                      expression (lib/location.ml[266,8842+4]..[266,8842+18])
                                                        Pexp_ident "Format.fprintf" (lib/location.ml[266,8842+4]..[266,8842+18])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[266,8842+19]..[266,8842+22])
                                                            Pexp_ident "ppf" (lib/location.ml[266,8842+19]..[266,8842+22])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[266,8842+23]..[266,8842+33])
                                                            Pexp_constant PConst_string("%s %i-%i",(lib/location.ml[266,8842+24]..[266,8842+32]),None)
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[266,8842+34]..[266,8842+59])
                                                            Pexp_apply
                                                            expression (lib/location.ml[266,8842+35]..[266,8842+45])
                                                              Pexp_ident "capitalize" (lib/location.ml[266,8842+35]..[266,8842+45])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/location.ml[266,8842+46]..[266,8842+58])
                                                                  Pexp_constant PConst_string("characters",(lib/location.ml[266,8842+47]..[266,8842+57]),None)
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[266,8842+60]..[266,8842+69])
                                                            Pexp_ident "startchar" (lib/location.ml[266,8842+60]..[266,8842+69])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[266,8842+70]..[266,8842+77])
                                                            Pexp_ident "endchar" (lib/location.ml[266,8842+70]..[266,8842+77])
                                                      ]
                                                  None
                                                expression (lib/location.ml[269,8926+2]..[269,8926+25])
                                                  Pexp_apply
                                                  expression (lib/location.ml[269,8926+2]..[269,8926+16])
                                                    Pexp_ident "Format.fprintf" (lib/location.ml[269,8926+2]..[269,8926+16])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[269,8926+17]..[269,8926+20])
                                                        Pexp_ident "ppf" (lib/location.ml[269,8926+17]..[269,8926+20])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[269,8926+21]..[269,8926+25])
                                                        Pexp_constant PConst_string("@}",(lib/location.ml[269,8926+22]..[269,8926+24]),None)
                                                  ]
    ]
  structure_item (lib/location.ml[272,9001+0]..[274,9099+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[272,9001+4]..[272,9001+14])
          Ppat_var "print_locs" (lib/location.ml[272,9001+4]..[272,9001+14])
        expression (lib/location.ml[272,9001+15]..[274,9099+22]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[272,9001+15]..[272,9001+18])
              Nolabel
              None
              pattern (lib/location.ml[272,9001+15]..[272,9001+18])
                Ppat_var "ppf" (lib/location.ml[272,9001+15]..[272,9001+18])
            Pparam_val (lib/location.ml[272,9001+19]..[272,9001+23])
              Nolabel
              None
              pattern (lib/location.ml[272,9001+19]..[272,9001+23])
                Ppat_var "locs" (lib/location.ml[272,9001+19]..[272,9001+23])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[273,9027+2]..[274,9099+22])
              Pexp_apply
              expression (lib/location.ml[273,9027+2]..[273,9027+22])
                Pexp_ident "Format.pp_print_list" (lib/location.ml[273,9027+2]..[273,9027+22])
              [
                <arg>
                Labelled "pp_sep"
                  expression (lib/location.ml[273,9027+31]..[273,9027+71])
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[273,9027+36]..[273,9027+39])
                        Nolabel
                        None
                        pattern (lib/location.ml[273,9027+36]..[273,9027+39])
                          Ppat_var "ppf" (lib/location.ml[273,9027+36]..[273,9027+39])
                      Pparam_val (lib/location.ml[273,9027+40]..[273,9027+42])
                        Nolabel
                        None
                        pattern (lib/location.ml[273,9027+40]..[273,9027+42])
                          Ppat_construct "()" (lib/location.ml[273,9027+40]..[273,9027+42])
                          None
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[273,9027+46]..[273,9027+70])
                        Pexp_apply
                        expression (lib/location.ml[273,9027+46]..[273,9027+60])
                          Pexp_ident "Format.fprintf" (lib/location.ml[273,9027+46]..[273,9027+60])
                        [
                          <arg>
                          Nolabel
                            expression (lib/location.ml[273,9027+61]..[273,9027+64])
                              Pexp_ident "ppf" (lib/location.ml[273,9027+61]..[273,9027+64])
                          <arg>
                          Nolabel
                            expression (lib/location.ml[273,9027+65]..[273,9027+70])
                              Pexp_constant PConst_string(",@ ",(lib/location.ml[273,9027+66]..[273,9027+69]),None)
                        ]
                <arg>
                Nolabel
                  expression (lib/location.ml[274,9099+4]..[274,9099+13])
                    Pexp_ident "print_loc" (lib/location.ml[274,9099+4]..[274,9099+13])
                <arg>
                Nolabel
                  expression (lib/location.ml[274,9099+14]..[274,9099+17])
                    Pexp_ident "ppf" (lib/location.ml[274,9099+14]..[274,9099+17])
                <arg>
                Nolabel
                  expression (lib/location.ml[274,9099+18]..[274,9099+22])
                    Pexp_ident "locs" (lib/location.ml[274,9099+18]..[274,9099+22])
              ]
    ]
  structure_item (lib/location.ml[288,9583+0]..[356,11636+3])
    Pstr_module
    "ISet" (lib/location.ml[288,9583+7]..[288,9583+11])
      module_expr (lib/location.ml[288,9583+12]..[356,11636+3])
        Pmod_constraint
        module_expr (lib/location.ml[303,9979+0]..[356,11636+3])
          Pmod_structure
          [
            structure_item (lib/location.ml[304,9986+2]..[304,9986+26])
              Pstr_type Rec
              [
                type_declaration "bound" (lib/location.ml[304,9986+10]..[304,9986+15]) (lib/location.ml[304,9986+2]..[304,9986+26])
                  ptype_params =
                    [
                      core_type (lib/location.ml[304,9986+7]..[304,9986+9])
                        Ptyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/location.ml[304,9986+18]..[304,9986+26])
                        Ptyp_tuple
                        [
                          core_type (lib/location.ml[304,9986+18]..[304,9986+20])
                            Ptyp_var a
                          core_type (lib/location.ml[304,9986+23]..[304,9986+26])
                            Ptyp_constr "int" (lib/location.ml[304,9986+23]..[304,9986+26])
                            []
                        ]
              ]
            structure_item (lib/location.ml[307,10048+2]..[307,10048+40])
              Pstr_type Rec
              [
                type_declaration "t" (lib/location.ml[307,10048+10]..[307,10048+11]) (lib/location.ml[307,10048+2]..[307,10048+40])
                  ptype_params =
                    [
                      core_type (lib/location.ml[307,10048+7]..[307,10048+9])
                        Ptyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/location.ml[307,10048+14]..[307,10048+40])
                        Ptyp_constr "list" (lib/location.ml[307,10048+36]..[307,10048+40])
                        [
                          core_type (lib/location.ml[307,10048+15]..[307,10048+34])
                            Ptyp_tuple
                            [
                              core_type (lib/location.ml[307,10048+15]..[307,10048+23])
                                Ptyp_constr "bound" (lib/location.ml[307,10048+18]..[307,10048+23])
                                [
                                  core_type (lib/location.ml[307,10048+15]..[307,10048+17])
                                    Ptyp_var a
                                ]
                              core_type (lib/location.ml[307,10048+26]..[307,10048+34])
                                Ptyp_constr "bound" (lib/location.ml[307,10048+29]..[307,10048+34])
                                [
                                  core_type (lib/location.ml[307,10048+26]..[307,10048+28])
                                    Ptyp_var a
                                ]
                            ]
                        ]
              ]
            structure_item (lib/location.ml[309,10090+2]..[331,10958+16])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/location.ml[309,10090+6]..[309,10090+18])
                    Ppat_var "of_intervals" (lib/location.ml[309,10090+6]..[309,10090+18])
                  expression (lib/location.ml[309,10090+19]..[331,10958+16]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[309,10090+19]..[309,10090+28])
                        Nolabel
                        None
                        pattern (lib/location.ml[309,10090+19]..[309,10090+28])
                          Ppat_var "intervals" (lib/location.ml[309,10090+19]..[309,10090+28])
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[310,10121+4]..[331,10958+16])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/location.ml[310,10121+8]..[310,10121+11])
                              Ppat_var "pos" (lib/location.ml[310,10121+8]..[310,10121+11])
                            expression (lib/location.ml[311,10135+6]..[319,10489+37])
                              Pexp_apply
                              expression (lib/location.ml[315,10274+6]..[315,10274+8])
                                Pexp_ident "|>" (lib/location.ml[315,10274+6]..[315,10274+8])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[311,10135+6]..[314,10252+21])
                                    Pexp_apply
                                    expression (lib/location.ml[314,10252+6]..[314,10252+8])
                                      Pexp_ident "|>" (lib/location.ml[314,10252+6]..[314,10252+8])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[311,10135+6]..[313,10234+17])
                                          Pexp_apply
                                          expression (lib/location.ml[311,10135+6]..[311,10135+14])
                                            Pexp_ident "List.map" (lib/location.ml[311,10135+6]..[311,10135+14])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[311,10135+15]..[313,10234+7])
                                                Pexp_function
                                                [
                                                  Pparam_val (lib/location.ml[311,10135+20]..[311,10135+36])
                                                    Nolabel
                                                    None
                                                    pattern (lib/location.ml[311,10135+20]..[311,10135+36])
                                                      Ppat_tuple
                                                      [
                                                        pattern (lib/location.ml[311,10135+21]..[311,10135+27])
                                                          Ppat_tuple
                                                          [
                                                            pattern (lib/location.ml[311,10135+22]..[311,10135+23])
                                                              Ppat_var "a" (lib/location.ml[311,10135+22]..[311,10135+23])
                                                            pattern (lib/location.ml[311,10135+25]..[311,10135+26])
                                                              Ppat_var "x" (lib/location.ml[311,10135+25]..[311,10135+26])
                                                          ]
                                                        pattern (lib/location.ml[311,10135+29]..[311,10135+35])
                                                          Ppat_tuple
                                                          [
                                                            pattern (lib/location.ml[311,10135+30]..[311,10135+31])
                                                              Ppat_var "b" (lib/location.ml[311,10135+30]..[311,10135+31])
                                                            pattern (lib/location.ml[311,10135+33]..[311,10135+34])
                                                              Ppat_var "y" (lib/location.ml[311,10135+33]..[311,10135+34])
                                                          ]
                                                      ]
                                                ]
                                                None
                                                Pfunction_body
                                                  expression (lib/location.ml[312,10175+8]..[312,10175+58])
                                                    Pexp_ifthenelse
                                                    expression (lib/location.ml[312,10175+11]..[312,10175+16])
                                                      Pexp_apply
                                                      expression (lib/location.ml[312,10175+13]..[312,10175+14])
                                                        Pexp_ident ">" (lib/location.ml[312,10175+13]..[312,10175+14])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[312,10175+11]..[312,10175+12])
                                                            Pexp_ident "x" (lib/location.ml[312,10175+11]..[312,10175+12])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[312,10175+15]..[312,10175+16])
                                                            Pexp_ident "y" (lib/location.ml[312,10175+15]..[312,10175+16])
                                                      ]
                                                    expression (lib/location.ml[312,10175+22]..[312,10175+24])
                                                      Pexp_construct "[]" (lib/location.ml[312,10175+22]..[312,10175+24])
                                                      None
                                                    Some
                                                      expression (lib/location.ml[312,10175+30]..[312,10175+58])
                                                        Pexp_construct "::" (lib/location.ml[312,10175+31]..[312,10175+58]) ghost
                                                        Some
                                                          expression (lib/location.ml[312,10175+31]..[312,10175+58]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (lib/location.ml[312,10175+31]..[312,10175+43])
                                                                Pexp_tuple
                                                                [
                                                                  expression (lib/location.ml[312,10175+32]..[312,10175+38])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lib/location.ml[312,10175+33]..[312,10175+34])
Pexp_ident "a" (lib/location.ml[312,10175+33]..[312,10175+34])
                                                                      expression (lib/location.ml[312,10175+36]..[312,10175+37])
Pexp_ident "x" (lib/location.ml[312,10175+36]..[312,10175+37])
                                                                    ]
                                                                  expression (lib/location.ml[312,10175+40]..[312,10175+42])
                                                                    Pexp_variant "S"
                                                                    None
                                                                ]
                                                              expression (lib/location.ml[312,10175+45]..[312,10175+58]) ghost
                                                                Pexp_construct "::" (lib/location.ml[312,10175+45]..[312,10175+58]) ghost
                                                                Some
                                                                  expression (lib/location.ml[312,10175+45]..[312,10175+58]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lib/location.ml[312,10175+45]..[312,10175+57])
Pexp_tuple
[
  expression (lib/location.ml[312,10175+46]..[312,10175+52])
    Pexp_tuple
    [
      expression (lib/location.ml[312,10175+47]..[312,10175+48])
        Pexp_ident "b" (lib/location.ml[312,10175+47]..[312,10175+48])
      expression (lib/location.ml[312,10175+50]..[312,10175+51])
        Pexp_ident "y" (lib/location.ml[312,10175+50]..[312,10175+51])
    ]
  expression (lib/location.ml[312,10175+54]..[312,10175+56])
    Pexp_variant "E"
    None
]
                                                                      expression (lib/location.ml[312,10175+57]..[312,10175+58]) ghost
Pexp_construct "[]" (lib/location.ml[312,10175+57]..[312,10175+58]) ghost
None
                                                                    ]
                                                            ]
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[313,10234+8]..[313,10234+17])
                                                Pexp_ident "intervals" (lib/location.ml[313,10234+8]..[313,10234+17])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[314,10252+9]..[314,10252+21])
                                          Pexp_ident "List.flatten" (lib/location.ml[314,10252+9]..[314,10252+21])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[315,10274+9]..[319,10489+37])
                                    Pexp_apply
                                    expression (lib/location.ml[315,10274+9]..[315,10274+18])
                                      Pexp_ident "List.sort" (lib/location.ml[315,10274+9]..[315,10274+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[315,10274+19]..[319,10489+37])
                                          Pexp_function
                                          [
                                            Pparam_val (lib/location.ml[315,10274+24]..[315,10274+35])
                                              Nolabel
                                              None
                                              pattern (lib/location.ml[315,10274+24]..[315,10274+35])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/location.ml[315,10274+25]..[315,10274+31])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lib/location.ml[315,10274+26]..[315,10274+27])
                                                        Ppat_any
                                                      pattern (lib/location.ml[315,10274+29]..[315,10274+30])
                                                        Ppat_var "x" (lib/location.ml[315,10274+29]..[315,10274+30])
                                                    ]
                                                  pattern (lib/location.ml[315,10274+33]..[315,10274+34])
                                                    Ppat_var "k" (lib/location.ml[315,10274+33]..[315,10274+34])
                                                ]
                                            Pparam_val (lib/location.ml[315,10274+36]..[315,10274+48])
                                              Nolabel
                                              None
                                              pattern (lib/location.ml[315,10274+36]..[315,10274+48])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/location.ml[315,10274+37]..[315,10274+43])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lib/location.ml[315,10274+38]..[315,10274+39])
                                                        Ppat_any
                                                      pattern (lib/location.ml[315,10274+41]..[315,10274+42])
                                                        Ppat_var "y" (lib/location.ml[315,10274+41]..[315,10274+42])
                                                    ]
                                                  pattern (lib/location.ml[315,10274+45]..[315,10274+47])
                                                    Ppat_var "k'" (lib/location.ml[315,10274+45]..[315,10274+47])
                                                ]
                                          ]
                                          None
                                          Pfunction_body
                                            expression (lib/location.ml[318,10442+8]..[319,10489+36])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (lib/location.ml[318,10442+12]..[318,10442+14])
                                                    Ppat_var "kn" (lib/location.ml[318,10442+12]..[318,10442+14])
                                                  expression (lib/location.ml[318,10442+17]..[318,10442+43])
                                                    Pexp_function
                                                    []
                                                    None
                                                    Pfunction_cases (lib/location.ml[318,10442+17]..[318,10442+43])
                                                      [
                                                        <case>
                                                          pattern (lib/location.ml[318,10442+26]..[318,10442+28])
                                                            Ppat_variant "S"
                                                            None
                                                          expression (lib/location.ml[318,10442+32]..[318,10442+33])
                                                            Pexp_constant PConst_int (0,None)
                                                        <case>
                                                          pattern (lib/location.ml[318,10442+36]..[318,10442+38])
                                                            Ppat_variant "E"
                                                            None
                                                          expression (lib/location.ml[318,10442+42]..[318,10442+43])
                                                            Pexp_constant PConst_int (1,None)
                                                      ]
                                              ]
                                              expression (lib/location.ml[319,10489+8]..[319,10489+36])
                                                Pexp_apply
                                                expression (lib/location.ml[319,10489+8]..[319,10489+15])
                                                  Pexp_ident "compare" (lib/location.ml[319,10489+8]..[319,10489+15])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[319,10489+16]..[319,10489+25])
                                                      Pexp_tuple
                                                      [
                                                        expression (lib/location.ml[319,10489+17]..[319,10489+18])
                                                          Pexp_ident "x" (lib/location.ml[319,10489+17]..[319,10489+18])
                                                        expression (lib/location.ml[319,10489+20]..[319,10489+24])
                                                          Pexp_apply
                                                          expression (lib/location.ml[319,10489+20]..[319,10489+22])
                                                            Pexp_ident "kn" (lib/location.ml[319,10489+20]..[319,10489+22])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/location.ml[319,10489+23]..[319,10489+24])
                                                                Pexp_ident "k" (lib/location.ml[319,10489+23]..[319,10489+24])
                                                          ]
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[319,10489+26]..[319,10489+36])
                                                      Pexp_tuple
                                                      [
                                                        expression (lib/location.ml[319,10489+27]..[319,10489+28])
                                                          Pexp_ident "y" (lib/location.ml[319,10489+27]..[319,10489+28])
                                                        expression (lib/location.ml[319,10489+30]..[319,10489+35])
                                                          Pexp_apply
                                                          expression (lib/location.ml[319,10489+30]..[319,10489+32])
                                                            Pexp_ident "kn" (lib/location.ml[319,10489+30]..[319,10489+32])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/location.ml[319,10489+33]..[319,10489+35])
                                                                Pexp_ident "k'" (lib/location.ml[319,10489+33]..[319,10489+35])
                                                          ]
                                                      ]
                                                ]
                                    ]
                              ]
                        ]
                        expression (lib/location.ml[321,10534+4]..[331,10958+16])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/location.ml[321,10534+8]..[321,10534+20])
                                Ppat_tuple
                                [
                                  pattern (lib/location.ml[321,10534+8]..[321,10534+15])
                                    Ppat_var "nesting" (lib/location.ml[321,10534+8]..[321,10534+15])
                                  pattern (lib/location.ml[321,10534+17]..[321,10534+20])
                                    Ppat_var "acc" (lib/location.ml[321,10534+17]..[321,10534+20])
                                ]
                              expression (lib/location.ml[322,10557+6]..[329,10895+26])
                                Pexp_apply
                                expression (lib/location.ml[322,10557+6]..[322,10557+20])
                                  Pexp_ident "List.fold_left" (lib/location.ml[322,10557+6]..[322,10557+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[322,10557+21]..[329,10895+7])
                                      Pexp_function
                                      [
                                        Pparam_val (lib/location.ml[322,10557+26]..[322,10557+40])
                                          Nolabel
                                          None
                                          pattern (lib/location.ml[322,10557+26]..[322,10557+40])
                                            Ppat_tuple
                                            [
                                              pattern (lib/location.ml[322,10557+27]..[322,10557+34])
                                                Ppat_var "nesting" (lib/location.ml[322,10557+27]..[322,10557+34])
                                              pattern (lib/location.ml[322,10557+36]..[322,10557+39])
                                                Ppat_var "acc" (lib/location.ml[322,10557+36]..[322,10557+39])
                                            ]
                                        Pparam_val (lib/location.ml[322,10557+41]..[322,10557+50])
                                          Nolabel
                                          None
                                          pattern (lib/location.ml[322,10557+41]..[322,10557+50])
                                            Ppat_tuple
                                            [
                                              pattern (lib/location.ml[322,10557+42]..[322,10557+43])
                                                Ppat_var "a" (lib/location.ml[322,10557+42]..[322,10557+43])
                                              pattern (lib/location.ml[322,10557+45]..[322,10557+49])
                                                Ppat_var "kind" (lib/location.ml[322,10557+45]..[322,10557+49])
                                            ]
                                      ]
                                      None
                                      Pfunction_body
                                        expression (lib/location.ml[323,10611+8]..[328,10841+53])
                                          Pexp_match
                                          expression (lib/location.ml[323,10611+14]..[323,10611+27])
                                            Pexp_tuple
                                            [
                                              expression (lib/location.ml[323,10611+14]..[323,10611+18])
                                                Pexp_ident "kind" (lib/location.ml[323,10611+14]..[323,10611+18])
                                              expression (lib/location.ml[323,10611+20]..[323,10611+27])
                                                Pexp_ident "nesting" (lib/location.ml[323,10611+20]..[323,10611+27])
                                            ]
                                          [
                                            <case>
                                              pattern (lib/location.ml[324,10644+10]..[324,10644+22])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/location.ml[324,10644+10]..[324,10644+12])
                                                    Ppat_variant "S"
                                                    None
                                                  pattern (lib/location.ml[324,10644+14]..[324,10644+22])
                                                    Ppat_variant "Outside"
                                                    None
                                                ]
                                              expression (lib/location.ml[324,10644+26]..[324,10644+45])
                                                Pexp_tuple
                                                [
                                                  expression (lib/location.ml[324,10644+26]..[324,10644+40])
                                                    Pexp_variant "Inside"
                                                    Some
                                                      expression (lib/location.ml[324,10644+34]..[324,10644+40])
                                                        Pexp_tuple
                                                        [
                                                          expression (lib/location.ml[324,10644+35]..[324,10644+36])
                                                            Pexp_ident "a" (lib/location.ml[324,10644+35]..[324,10644+36])
                                                          expression (lib/location.ml[324,10644+38]..[324,10644+39])
                                                            Pexp_constant PConst_int (0,None)
                                                        ]
                                                  expression (lib/location.ml[324,10644+42]..[324,10644+45])
                                                    Pexp_ident "acc" (lib/location.ml[324,10644+42]..[324,10644+45])
                                                ]
                                            <case>
                                              pattern (lib/location.ml[325,10690+10]..[325,10690+28])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/location.ml[325,10690+10]..[325,10690+12])
                                                    Ppat_variant "S"
                                                    None
                                                  pattern (lib/location.ml[325,10690+14]..[325,10690+28])
                                                    Ppat_variant "Inside"
                                                    Some
                                                      pattern (lib/location.ml[325,10690+22]..[325,10690+28])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lib/location.ml[325,10690+23]..[325,10690+24])
                                                            Ppat_var "s" (lib/location.ml[325,10690+23]..[325,10690+24])
                                                          pattern (lib/location.ml[325,10690+26]..[325,10690+27])
                                                            Ppat_var "n" (lib/location.ml[325,10690+26]..[325,10690+27])
                                                        ]
                                                ]
                                              expression (lib/location.ml[325,10690+32]..[325,10690+53])
                                                Pexp_tuple
                                                [
                                                  expression (lib/location.ml[325,10690+32]..[325,10690+48])
                                                    Pexp_variant "Inside"
                                                    Some
                                                      expression (lib/location.ml[325,10690+40]..[325,10690+48])
                                                        Pexp_tuple
                                                        [
                                                          expression (lib/location.ml[325,10690+41]..[325,10690+42])
                                                            Pexp_ident "s" (lib/location.ml[325,10690+41]..[325,10690+42])
                                                          expression (lib/location.ml[325,10690+44]..[325,10690+47])
                                                            Pexp_apply
                                                            expression (lib/location.ml[325,10690+45]..[325,10690+46])
                                                              Pexp_ident "+" (lib/location.ml[325,10690+45]..[325,10690+46])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/location.ml[325,10690+44]..[325,10690+45])
                                                                  Pexp_ident "n" (lib/location.ml[325,10690+44]..[325,10690+45])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/location.ml[325,10690+46]..[325,10690+47])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                        ]
                                                  expression (lib/location.ml[325,10690+50]..[325,10690+53])
                                                    Pexp_ident "acc" (lib/location.ml[325,10690+50]..[325,10690+53])
                                                ]
                                            <case>
                                              pattern (lib/location.ml[326,10744+10]..[326,10744+22])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/location.ml[326,10744+10]..[326,10744+12])
                                                    Ppat_variant "E"
                                                    None
                                                  pattern (lib/location.ml[326,10744+14]..[326,10744+22])
                                                    Ppat_variant "Outside"
                                                    None
                                                ]
                                              expression (lib/location.ml[326,10744+26]..[326,10744+38])
                                                Pexp_assert
                                                expression (lib/location.ml[326,10744+33]..[326,10744+38])
                                                  Pexp_construct "false" (lib/location.ml[326,10744+33]..[326,10744+38])
                                                  None
                                            <case>
                                              pattern (lib/location.ml[327,10783+10]..[327,10783+28])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/location.ml[327,10783+10]..[327,10783+12])
                                                    Ppat_variant "E"
                                                    None
                                                  pattern (lib/location.ml[327,10783+14]..[327,10783+28])
                                                    Ppat_variant "Inside"
                                                    Some
                                                      pattern (lib/location.ml[327,10783+22]..[327,10783+28])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lib/location.ml[327,10783+23]..[327,10783+24])
                                                            Ppat_var "s" (lib/location.ml[327,10783+23]..[327,10783+24])
                                                          pattern (lib/location.ml[327,10783+26]..[327,10783+27])
                                                            Ppat_constant PConst_int (0,None)
                                                        ]
                                                ]
                                              expression (lib/location.ml[327,10783+32]..[327,10783+57])
                                                Pexp_tuple
                                                [
                                                  expression (lib/location.ml[327,10783+32]..[327,10783+40])
                                                    Pexp_variant "Outside"
                                                    None
                                                  expression (lib/location.ml[327,10783+42]..[327,10783+57])
                                                    Pexp_construct "::" (lib/location.ml[327,10783+50]..[327,10783+52])
                                                    Some
                                                      expression (lib/location.ml[327,10783+43]..[327,10783+56]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (lib/location.ml[327,10783+43]..[327,10783+49])
                                                            Pexp_tuple
                                                            [
                                                              expression (lib/location.ml[327,10783+44]..[327,10783+45])
                                                                Pexp_ident "s" (lib/location.ml[327,10783+44]..[327,10783+45])
                                                              expression (lib/location.ml[327,10783+47]..[327,10783+48])
                                                                Pexp_ident "a" (lib/location.ml[327,10783+47]..[327,10783+48])
                                                            ]
                                                          expression (lib/location.ml[327,10783+53]..[327,10783+56])
                                                            Pexp_ident "acc" (lib/location.ml[327,10783+53]..[327,10783+56])
                                                        ]
                                                ]
                                            <case>
                                              pattern (lib/location.ml[328,10841+10]..[328,10841+28])
                                                Ppat_tuple
                                                [
                                                  pattern (lib/location.ml[328,10841+10]..[328,10841+12])
                                                    Ppat_variant "E"
                                                    None
                                                  pattern (lib/location.ml[328,10841+14]..[328,10841+28])
                                                    Ppat_variant "Inside"
                                                    Some
                                                      pattern (lib/location.ml[328,10841+22]..[328,10841+28])
                                                        Ppat_tuple
                                                        [
                                                          pattern (lib/location.ml[328,10841+23]..[328,10841+24])
                                                            Ppat_var "s" (lib/location.ml[328,10841+23]..[328,10841+24])
                                                          pattern (lib/location.ml[328,10841+26]..[328,10841+27])
                                                            Ppat_var "n" (lib/location.ml[328,10841+26]..[328,10841+27])
                                                        ]
                                                ]
                                              expression (lib/location.ml[328,10841+32]..[328,10841+53])
                                                Pexp_tuple
                                                [
                                                  expression (lib/location.ml[328,10841+32]..[328,10841+48])
                                                    Pexp_variant "Inside"
                                                    Some
                                                      expression (lib/location.ml[328,10841+40]..[328,10841+48])
                                                        Pexp_tuple
                                                        [
                                                          expression (lib/location.ml[328,10841+41]..[328,10841+42])
                                                            Pexp_ident "s" (lib/location.ml[328,10841+41]..[328,10841+42])
                                                          expression (lib/location.ml[328,10841+44]..[328,10841+47])
                                                            Pexp_apply
                                                            expression (lib/location.ml[328,10841+45]..[328,10841+46])
                                                              Pexp_ident "-" (lib/location.ml[328,10841+45]..[328,10841+46])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/location.ml[328,10841+44]..[328,10841+45])
                                                                  Pexp_ident "n" (lib/location.ml[328,10841+44]..[328,10841+45])
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/location.ml[328,10841+46]..[328,10841+47])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                        ]
                                                  expression (lib/location.ml[328,10841+50]..[328,10841+53])
                                                    Pexp_ident "acc" (lib/location.ml[328,10841+50]..[328,10841+53])
                                                ]
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[329,10895+8]..[329,10895+22])
                                      Pexp_tuple
                                      [
                                        expression (lib/location.ml[329,10895+9]..[329,10895+17])
                                          Pexp_variant "Outside"
                                          None
                                        expression (lib/location.ml[329,10895+19]..[329,10895+21])
                                          Pexp_construct "[]" (lib/location.ml[329,10895+19]..[329,10895+21])
                                          None
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[329,10895+23]..[329,10895+26])
                                      Pexp_ident "pos" (lib/location.ml[329,10895+23]..[329,10895+26])
                                ]
                          ]
                          expression (lib/location.ml[330,10925+4]..[331,10958+16])
                            Pexp_sequence
                            expression (lib/location.ml[330,10925+4]..[330,10925+31])
                              Pexp_assert
                              expression (lib/location.ml[330,10925+11]..[330,10925+31])
                                Pexp_apply
                                expression (lib/location.ml[330,10925+20]..[330,10925+21])
                                  Pexp_ident "=" (lib/location.ml[330,10925+20]..[330,10925+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[330,10925+12]..[330,10925+19])
                                      Pexp_ident "nesting" (lib/location.ml[330,10925+12]..[330,10925+19])
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[330,10925+22]..[330,10925+30])
                                      Pexp_variant "Outside"
                                      None
                                ]
                            expression (lib/location.ml[331,10958+4]..[331,10958+16])
                              Pexp_apply
                              expression (lib/location.ml[331,10958+4]..[331,10958+12])
                                Pexp_ident "List.rev" (lib/location.ml[331,10958+4]..[331,10958+12])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[331,10958+13]..[331,10958+16])
                                    Pexp_ident "acc" (lib/location.ml[331,10958+13]..[331,10958+16])
                              ]
              ]
            structure_item (lib/location.ml[333,10976+2]..[334,10998+67])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/location.ml[333,10976+6]..[333,10976+9])
                    Ppat_var "mem" (lib/location.ml[333,10976+6]..[333,10976+9])
                  expression (lib/location.ml[333,10976+10]..[334,10998+67]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[333,10976+10]..[333,10976+14])
                        Nolabel
                        None
                        pattern (lib/location.ml[333,10976+10]..[333,10976+14])
                          Ppat_var "iset" (lib/location.ml[333,10976+10]..[333,10976+14])
                      Pparam_val (lib/location.ml[333,10976+15]..[333,10976+19])
                        Labelled "pos"
                        None
                        pattern (lib/location.ml[333,10976+16]..[333,10976+19])
                          Ppat_var "pos" (lib/location.ml[333,10976+16]..[333,10976+19])
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[334,10998+4]..[334,10998+67])
                        Pexp_apply
                        expression (lib/location.ml[334,10998+4]..[334,10998+15])
                          Pexp_ident "List.exists" (lib/location.ml[334,10998+4]..[334,10998+15])
                        [
                          <arg>
                          Nolabel
                            expression (lib/location.ml[334,10998+16]..[334,10998+62])
                              Pexp_function
                              [
                                Pparam_val (lib/location.ml[334,10998+21]..[334,10998+37])
                                  Nolabel
                                  None
                                  pattern (lib/location.ml[334,10998+21]..[334,10998+37])
                                    Ppat_tuple
                                    [
                                      pattern (lib/location.ml[334,10998+22]..[334,10998+28])
                                        Ppat_tuple
                                        [
                                          pattern (lib/location.ml[334,10998+23]..[334,10998+24])
                                            Ppat_any
                                          pattern (lib/location.ml[334,10998+26]..[334,10998+27])
                                            Ppat_var "s" (lib/location.ml[334,10998+26]..[334,10998+27])
                                        ]
                                      pattern (lib/location.ml[334,10998+30]..[334,10998+36])
                                        Ppat_tuple
                                        [
                                          pattern (lib/location.ml[334,10998+31]..[334,10998+32])
                                            Ppat_any
                                          pattern (lib/location.ml[334,10998+34]..[334,10998+35])
                                            Ppat_var "e" (lib/location.ml[334,10998+34]..[334,10998+35])
                                        ]
                                    ]
                              ]
                              None
                              Pfunction_body
                                expression (lib/location.ml[334,10998+41]..[334,10998+61])
                                  Pexp_apply
                                  expression (lib/location.ml[334,10998+50]..[334,10998+52])
                                    Pexp_ident "&&" (lib/location.ml[334,10998+50]..[334,10998+52])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[334,10998+41]..[334,10998+49])
                                        Pexp_apply
                                        expression (lib/location.ml[334,10998+43]..[334,10998+45])
                                          Pexp_ident "<=" (lib/location.ml[334,10998+43]..[334,10998+45])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[334,10998+41]..[334,10998+42])
                                              Pexp_ident "s" (lib/location.ml[334,10998+41]..[334,10998+42])
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[334,10998+46]..[334,10998+49])
                                              Pexp_ident "pos" (lib/location.ml[334,10998+46]..[334,10998+49])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[334,10998+53]..[334,10998+61])
                                        Pexp_apply
                                        expression (lib/location.ml[334,10998+57]..[334,10998+59])
                                          Pexp_ident "<=" (lib/location.ml[334,10998+57]..[334,10998+59])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[334,10998+53]..[334,10998+56])
                                              Pexp_ident "pos" (lib/location.ml[334,10998+53]..[334,10998+56])
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[334,10998+60]..[334,10998+61])
                                              Pexp_ident "e" (lib/location.ml[334,10998+60]..[334,10998+61])
                                        ]
                                  ]
                          <arg>
                          Nolabel
                            expression (lib/location.ml[334,10998+63]..[334,10998+67])
                              Pexp_ident "iset" (lib/location.ml[334,10998+63]..[334,10998+67])
                        ]
              ]
            structure_item (lib/location.ml[336,11067+2]..[341,11280+10])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/location.ml[336,11067+6]..[336,11067+19])
                    Ppat_var "find_bound_in" (lib/location.ml[336,11067+6]..[336,11067+19])
                  expression (lib/location.ml[336,11067+20]..[341,11280+10]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[336,11067+20]..[336,11067+24])
                        Nolabel
                        None
                        pattern (lib/location.ml[336,11067+20]..[336,11067+24])
                          Ppat_var "iset" (lib/location.ml[336,11067+20]..[336,11067+24])
                      Pparam_val (lib/location.ml[336,11067+25]..[336,11067+45])
                        Labelled "range"
                        None
                        pattern (lib/location.ml[336,11067+32]..[336,11067+45])
                          Ppat_tuple
                          [
                            pattern (lib/location.ml[336,11067+33]..[336,11067+38])
                              Ppat_var "start" (lib/location.ml[336,11067+33]..[336,11067+38])
                            pattern (lib/location.ml[336,11067+40]..[336,11067+44])
                              Ppat_var "end_" (lib/location.ml[336,11067+40]..[336,11067+44])
                          ]
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[337,11116+4]..[341,11280+10])
                        Pexp_apply
                        expression (lib/location.ml[337,11116+4]..[337,11116+17])
                          Pexp_ident "List.find_map" (lib/location.ml[337,11116+4]..[337,11116+17])
                        [
                          <arg>
                          Nolabel
                            expression (lib/location.ml[337,11116+18]..[341,11280+5])
                              Pexp_function
                              [
                                Pparam_val (lib/location.ml[337,11116+23]..[337,11116+39])
                                  Nolabel
                                  None
                                  pattern (lib/location.ml[337,11116+23]..[337,11116+39])
                                    Ppat_tuple
                                    [
                                      pattern (lib/location.ml[337,11116+24]..[337,11116+30])
                                        Ppat_tuple
                                        [
                                          pattern (lib/location.ml[337,11116+25]..[337,11116+26])
                                            Ppat_var "a" (lib/location.ml[337,11116+25]..[337,11116+26])
                                          pattern (lib/location.ml[337,11116+28]..[337,11116+29])
                                            Ppat_var "x" (lib/location.ml[337,11116+28]..[337,11116+29])
                                        ]
                                      pattern (lib/location.ml[337,11116+32]..[337,11116+38])
                                        Ppat_tuple
                                        [
                                          pattern (lib/location.ml[337,11116+33]..[337,11116+34])
                                            Ppat_var "b" (lib/location.ml[337,11116+33]..[337,11116+34])
                                          pattern (lib/location.ml[337,11116+36]..[337,11116+37])
                                            Ppat_var "y" (lib/location.ml[337,11116+36]..[337,11116+37])
                                        ]
                                    ]
                              ]
                              None
                              Pfunction_body
                                expression (lib/location.ml[338,11159+6]..[340,11264+15])
                                  Pexp_ifthenelse
                                  expression (lib/location.ml[338,11159+9]..[338,11159+32])
                                    Pexp_apply
                                    expression (lib/location.ml[338,11159+20]..[338,11159+22])
                                      Pexp_ident "&&" (lib/location.ml[338,11159+20]..[338,11159+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[338,11159+9]..[338,11159+19])
                                          Pexp_apply
                                          expression (lib/location.ml[338,11159+15]..[338,11159+17])
                                            Pexp_ident "<=" (lib/location.ml[338,11159+15]..[338,11159+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[338,11159+9]..[338,11159+14])
                                                Pexp_ident "start" (lib/location.ml[338,11159+9]..[338,11159+14])
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[338,11159+18]..[338,11159+19])
                                                Pexp_ident "x" (lib/location.ml[338,11159+18]..[338,11159+19])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[338,11159+23]..[338,11159+32])
                                          Pexp_apply
                                          expression (lib/location.ml[338,11159+25]..[338,11159+27])
                                            Pexp_ident "<=" (lib/location.ml[338,11159+25]..[338,11159+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[338,11159+23]..[338,11159+24])
                                                Pexp_ident "x" (lib/location.ml[338,11159+23]..[338,11159+24])
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[338,11159+28]..[338,11159+32])
                                                Pexp_ident "end_" (lib/location.ml[338,11159+28]..[338,11159+32])
                                          ]
                                    ]
                                  expression (lib/location.ml[338,11159+38]..[338,11159+49])
                                    Pexp_construct "Some" (lib/location.ml[338,11159+38]..[338,11159+42])
                                    Some
                                      expression (lib/location.ml[338,11159+43]..[338,11159+49])
                                        Pexp_tuple
                                        [
                                          expression (lib/location.ml[338,11159+44]..[338,11159+45])
                                            Pexp_ident "a" (lib/location.ml[338,11159+44]..[338,11159+45])
                                          expression (lib/location.ml[338,11159+47]..[338,11159+48])
                                            Pexp_ident "x" (lib/location.ml[338,11159+47]..[338,11159+48])
                                        ]
                                  Some
                                    expression (lib/location.ml[339,11209+11]..[340,11264+15])
                                      Pexp_ifthenelse
                                      expression (lib/location.ml[339,11209+14]..[339,11209+37])
                                        Pexp_apply
                                        expression (lib/location.ml[339,11209+25]..[339,11209+27])
                                          Pexp_ident "&&" (lib/location.ml[339,11209+25]..[339,11209+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[339,11209+14]..[339,11209+24])
                                              Pexp_apply
                                              expression (lib/location.ml[339,11209+20]..[339,11209+22])
                                                Pexp_ident "<=" (lib/location.ml[339,11209+20]..[339,11209+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[339,11209+14]..[339,11209+19])
                                                    Pexp_ident "start" (lib/location.ml[339,11209+14]..[339,11209+19])
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[339,11209+23]..[339,11209+24])
                                                    Pexp_ident "y" (lib/location.ml[339,11209+23]..[339,11209+24])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[339,11209+28]..[339,11209+37])
                                              Pexp_apply
                                              expression (lib/location.ml[339,11209+30]..[339,11209+32])
                                                Pexp_ident "<=" (lib/location.ml[339,11209+30]..[339,11209+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[339,11209+28]..[339,11209+29])
                                                    Pexp_ident "y" (lib/location.ml[339,11209+28]..[339,11209+29])
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[339,11209+33]..[339,11209+37])
                                                    Pexp_ident "end_" (lib/location.ml[339,11209+33]..[339,11209+37])
                                              ]
                                        ]
                                      expression (lib/location.ml[339,11209+43]..[339,11209+54])
                                        Pexp_construct "Some" (lib/location.ml[339,11209+43]..[339,11209+47])
                                        Some
                                          expression (lib/location.ml[339,11209+48]..[339,11209+54])
                                            Pexp_tuple
                                            [
                                              expression (lib/location.ml[339,11209+49]..[339,11209+50])
                                                Pexp_ident "b" (lib/location.ml[339,11209+49]..[339,11209+50])
                                              expression (lib/location.ml[339,11209+52]..[339,11209+53])
                                                Pexp_ident "y" (lib/location.ml[339,11209+52]..[339,11209+53])
                                            ]
                                      Some
                                        expression (lib/location.ml[340,11264+11]..[340,11264+15])
                                          Pexp_construct "None" (lib/location.ml[340,11264+11]..[340,11264+15])
                                          None
                          <arg>
                          Nolabel
                            expression (lib/location.ml[341,11280+6]..[341,11280+10])
                              Pexp_ident "iset" (lib/location.ml[341,11280+6]..[341,11280+10])
                        ]
              ]
            structure_item (lib/location.ml[343,11292+2]..[346,11396+10])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/location.ml[343,11292+6]..[343,11292+14])
                    Ppat_var "is_start" (lib/location.ml[343,11292+6]..[343,11292+14])
                  expression (lib/location.ml[343,11292+15]..[346,11396+10]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[343,11292+15]..[343,11292+19])
                        Nolabel
                        None
                        pattern (lib/location.ml[343,11292+15]..[343,11292+19])
                          Ppat_var "iset" (lib/location.ml[343,11292+15]..[343,11292+19])
                      Pparam_val (lib/location.ml[343,11292+20]..[343,11292+24])
                        Labelled "pos"
                        None
                        pattern (lib/location.ml[343,11292+21]..[343,11292+24])
                          Ppat_var "pos" (lib/location.ml[343,11292+21]..[343,11292+24])
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[344,11319+4]..[346,11396+10])
                        Pexp_apply
                        expression (lib/location.ml[344,11319+4]..[344,11319+17])
                          Pexp_ident "List.find_map" (lib/location.ml[344,11319+4]..[344,11319+17])
                        [
                          <arg>
                          Nolabel
                            expression (lib/location.ml[344,11319+18]..[346,11396+5])
                              Pexp_function
                              [
                                Pparam_val (lib/location.ml[344,11319+23]..[344,11319+34])
                                  Nolabel
                                  None
                                  pattern (lib/location.ml[344,11319+23]..[344,11319+34])
                                    Ppat_tuple
                                    [
                                      pattern (lib/location.ml[344,11319+24]..[344,11319+30])
                                        Ppat_tuple
                                        [
                                          pattern (lib/location.ml[344,11319+25]..[344,11319+26])
                                            Ppat_var "a" (lib/location.ml[344,11319+25]..[344,11319+26])
                                          pattern (lib/location.ml[344,11319+28]..[344,11319+29])
                                            Ppat_var "x" (lib/location.ml[344,11319+28]..[344,11319+29])
                                        ]
                                      pattern (lib/location.ml[344,11319+32]..[344,11319+33])
                                        Ppat_any
                                    ]
                              ]
                              None
                              Pfunction_body
                                expression (lib/location.ml[345,11357+6]..[345,11357+38])
                                  Pexp_ifthenelse
                                  expression (lib/location.ml[345,11357+9]..[345,11357+16])
                                    Pexp_apply
                                    expression (lib/location.ml[345,11357+13]..[345,11357+14])
                                      Pexp_ident "=" (lib/location.ml[345,11357+13]..[345,11357+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[345,11357+9]..[345,11357+12])
                                          Pexp_ident "pos" (lib/location.ml[345,11357+9]..[345,11357+12])
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[345,11357+15]..[345,11357+16])
                                          Pexp_ident "x" (lib/location.ml[345,11357+15]..[345,11357+16])
                                    ]
                                  expression (lib/location.ml[345,11357+22]..[345,11357+28])
                                    Pexp_construct "Some" (lib/location.ml[345,11357+22]..[345,11357+26])
                                    Some
                                      expression (lib/location.ml[345,11357+27]..[345,11357+28])
                                        Pexp_ident "a" (lib/location.ml[345,11357+27]..[345,11357+28])
                                  Some
                                    expression (lib/location.ml[345,11357+34]..[345,11357+38])
                                      Pexp_construct "None" (lib/location.ml[345,11357+34]..[345,11357+38])
                                      None
                          <arg>
                          Nolabel
                            expression (lib/location.ml[346,11396+6]..[346,11396+10])
                              Pexp_ident "iset" (lib/location.ml[346,11396+6]..[346,11396+10])
                        ]
              ]
            structure_item (lib/location.ml[348,11408+2]..[351,11510+10])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/location.ml[348,11408+6]..[348,11408+12])
                    Ppat_var "is_end" (lib/location.ml[348,11408+6]..[348,11408+12])
                  expression (lib/location.ml[348,11408+13]..[351,11510+10]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[348,11408+13]..[348,11408+17])
                        Nolabel
                        None
                        pattern (lib/location.ml[348,11408+13]..[348,11408+17])
                          Ppat_var "iset" (lib/location.ml[348,11408+13]..[348,11408+17])
                      Pparam_val (lib/location.ml[348,11408+18]..[348,11408+22])
                        Labelled "pos"
                        None
                        pattern (lib/location.ml[348,11408+19]..[348,11408+22])
                          Ppat_var "pos" (lib/location.ml[348,11408+19]..[348,11408+22])
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[349,11433+4]..[351,11510+10])
                        Pexp_apply
                        expression (lib/location.ml[349,11433+4]..[349,11433+17])
                          Pexp_ident "List.find_map" (lib/location.ml[349,11433+4]..[349,11433+17])
                        [
                          <arg>
                          Nolabel
                            expression (lib/location.ml[349,11433+18]..[351,11510+5])
                              Pexp_function
                              [
                                Pparam_val (lib/location.ml[349,11433+23]..[349,11433+34])
                                  Nolabel
                                  None
                                  pattern (lib/location.ml[349,11433+23]..[349,11433+34])
                                    Ppat_tuple
                                    [
                                      pattern (lib/location.ml[349,11433+24]..[349,11433+25])
                                        Ppat_any
                                      pattern (lib/location.ml[349,11433+27]..[349,11433+33])
                                        Ppat_tuple
                                        [
                                          pattern (lib/location.ml[349,11433+28]..[349,11433+29])
                                            Ppat_var "b" (lib/location.ml[349,11433+28]..[349,11433+29])
                                          pattern (lib/location.ml[349,11433+31]..[349,11433+32])
                                            Ppat_var "y" (lib/location.ml[349,11433+31]..[349,11433+32])
                                        ]
                                    ]
                              ]
                              None
                              Pfunction_body
                                expression (lib/location.ml[350,11471+6]..[350,11471+38])
                                  Pexp_ifthenelse
                                  expression (lib/location.ml[350,11471+9]..[350,11471+16])
                                    Pexp_apply
                                    expression (lib/location.ml[350,11471+13]..[350,11471+14])
                                      Pexp_ident "=" (lib/location.ml[350,11471+13]..[350,11471+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[350,11471+9]..[350,11471+12])
                                          Pexp_ident "pos" (lib/location.ml[350,11471+9]..[350,11471+12])
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[350,11471+15]..[350,11471+16])
                                          Pexp_ident "y" (lib/location.ml[350,11471+15]..[350,11471+16])
                                    ]
                                  expression (lib/location.ml[350,11471+22]..[350,11471+28])
                                    Pexp_construct "Some" (lib/location.ml[350,11471+22]..[350,11471+26])
                                    Some
                                      expression (lib/location.ml[350,11471+27]..[350,11471+28])
                                        Pexp_ident "b" (lib/location.ml[350,11471+27]..[350,11471+28])
                                  Some
                                    expression (lib/location.ml[350,11471+34]..[350,11471+38])
                                      Pexp_construct "None" (lib/location.ml[350,11471+34]..[350,11471+38])
                                      None
                          <arg>
                          Nolabel
                            expression (lib/location.ml[351,11510+6]..[351,11510+10])
                              Pexp_ident "iset" (lib/location.ml[351,11510+6]..[351,11510+10])
                        ]
              ]
            structure_item (lib/location.ml[353,11522+2]..[355,11570+65])
              Pstr_value Nonrec
              [
                <def>
                  pattern (lib/location.ml[353,11522+6]..[353,11522+13])
                    Ppat_var "extrema" (lib/location.ml[353,11522+6]..[353,11522+13])
                  expression (lib/location.ml[353,11522+14]..[355,11570+65]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[353,11522+14]..[353,11522+18])
                        Nolabel
                        None
                        pattern (lib/location.ml[353,11522+14]..[353,11522+18])
                          Ppat_var "iset" (lib/location.ml[353,11522+14]..[353,11522+18])
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[354,11543+4]..[355,11570+65])
                        Pexp_ifthenelse
                        expression (lib/location.ml[354,11543+7]..[354,11543+16])
                          Pexp_apply
                          expression (lib/location.ml[354,11543+12]..[354,11543+13])
                            Pexp_ident "=" (lib/location.ml[354,11543+12]..[354,11543+13])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[354,11543+7]..[354,11543+11])
                                Pexp_ident "iset" (lib/location.ml[354,11543+7]..[354,11543+11])
                            <arg>
                            Nolabel
                              expression (lib/location.ml[354,11543+14]..[354,11543+16])
                                Pexp_construct "[]" (lib/location.ml[354,11543+14]..[354,11543+16])
                                None
                          ]
                        expression (lib/location.ml[354,11543+22]..[354,11543+26])
                          Pexp_construct "None" (lib/location.ml[354,11543+22]..[354,11543+26])
                          None
                        Some
                          expression (lib/location.ml[355,11570+9]..[355,11570+65])
                            Pexp_construct "Some" (lib/location.ml[355,11570+9]..[355,11570+13])
                            Some
                              expression (lib/location.ml[355,11570+14]..[355,11570+65])
                                Pexp_tuple
                                [
                                  expression (lib/location.ml[355,11570+15]..[355,11570+33])
                                    Pexp_apply
                                    expression (lib/location.ml[355,11570+15]..[355,11570+18])
                                      Pexp_ident "fst" (lib/location.ml[355,11570+15]..[355,11570+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[355,11570+19]..[355,11570+33])
                                          Pexp_apply
                                          expression (lib/location.ml[355,11570+20]..[355,11570+27])
                                            Pexp_ident "List.hd" (lib/location.ml[355,11570+20]..[355,11570+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[355,11570+28]..[355,11570+32])
                                                Pexp_ident "iset" (lib/location.ml[355,11570+28]..[355,11570+32])
                                          ]
                                    ]
                                  expression (lib/location.ml[355,11570+35]..[355,11570+64])
                                    Pexp_apply
                                    expression (lib/location.ml[355,11570+35]..[355,11570+38])
                                      Pexp_ident "snd" (lib/location.ml[355,11570+35]..[355,11570+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[355,11570+39]..[355,11570+64])
                                          Pexp_apply
                                          expression (lib/location.ml[355,11570+40]..[355,11570+47])
                                            Pexp_ident "List.hd" (lib/location.ml[355,11570+40]..[355,11570+47])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[355,11570+48]..[355,11570+63])
                                                Pexp_apply
                                                expression (lib/location.ml[355,11570+49]..[355,11570+57])
                                                  Pexp_ident "List.rev" (lib/location.ml[355,11570+49]..[355,11570+57])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[355,11570+58]..[355,11570+62])
                                                      Pexp_ident "iset" (lib/location.ml[355,11570+58]..[355,11570+62])
                                                ]
                                          ]
                                    ]
                                ]
              ]
          ]
        module_type (lib/location.ml[288,9583+14]..[301,9973+3])
          Pmty_signature
          [
            signature_item (lib/location.ml[289,9601+2]..[289,9601+26])
              Psig_type Rec
              [
                type_declaration "bound" (lib/location.ml[289,9601+10]..[289,9601+15]) (lib/location.ml[289,9601+2]..[289,9601+26])
                  ptype_params =
                    [
                      core_type (lib/location.ml[289,9601+7]..[289,9601+9])
                        Ptyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/location.ml[289,9601+18]..[289,9601+26])
                        Ptyp_tuple
                        [
                          core_type (lib/location.ml[289,9601+18]..[289,9601+20])
                            Ptyp_var a
                          core_type (lib/location.ml[289,9601+23]..[289,9601+26])
                            Ptyp_constr "int" (lib/location.ml[289,9601+23]..[289,9601+26])
                            []
                        ]
              ]
            signature_item (lib/location.ml[290,9628+2]..[290,9628+11])
              Psig_type Rec
              [
                type_declaration "t" (lib/location.ml[290,9628+10]..[290,9628+11]) (lib/location.ml[290,9628+2]..[290,9628+11])
                  ptype_params =
                    [
                      core_type (lib/location.ml[290,9628+7]..[290,9628+9])
                        Ptyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (lib/location.ml[292,9668+2]..[292,9668+55])
              Psig_value
              value_description "of_intervals" (lib/location.ml[292,9668+6]..[292,9668+18]) (lib/location.ml[292,9668+2]..[292,9668+55])
                core_type (lib/location.ml[292,9668+21]..[292,9668+55])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[292,9668+21]..[292,9668+47])
                    Ptyp_constr "list" (lib/location.ml[292,9668+43]..[292,9668+47])
                    [
                      core_type (lib/location.ml[292,9668+22]..[292,9668+41])
                        Ptyp_tuple
                        [
                          core_type (lib/location.ml[292,9668+22]..[292,9668+30])
                            Ptyp_constr "bound" (lib/location.ml[292,9668+25]..[292,9668+30])
                            [
                              core_type (lib/location.ml[292,9668+22]..[292,9668+24])
                                Ptyp_var a
                            ]
                          core_type (lib/location.ml[292,9668+33]..[292,9668+41])
                            Ptyp_constr "bound" (lib/location.ml[292,9668+36]..[292,9668+41])
                            [
                              core_type (lib/location.ml[292,9668+33]..[292,9668+35])
                                Ptyp_var a
                            ]
                        ]
                    ]
                  core_type (lib/location.ml[292,9668+51]..[292,9668+55])
                    Ptyp_constr "t" (lib/location.ml[292,9668+54]..[292,9668+55])
                    [
                      core_type (lib/location.ml[292,9668+51]..[292,9668+53])
                        Ptyp_var a
                    ]
                []
            signature_item (lib/location.ml[294,9725+2]..[294,9725+35])
              Psig_value
              value_description "mem" (lib/location.ml[294,9725+6]..[294,9725+9]) (lib/location.ml[294,9725+2]..[294,9725+35])
                core_type (lib/location.ml[294,9725+12]..[294,9725+35])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[294,9725+12]..[294,9725+16])
                    Ptyp_constr "t" (lib/location.ml[294,9725+15]..[294,9725+16])
                    [
                      core_type (lib/location.ml[294,9725+12]..[294,9725+14])
                        Ptyp_var a
                    ]
                  core_type (lib/location.ml[294,9725+20]..[294,9725+35])
                    Ptyp_arrow
                    Labelled "pos"
                    core_type (lib/location.ml[294,9725+24]..[294,9725+27])
                      Ptyp_constr "int" (lib/location.ml[294,9725+24]..[294,9725+27])
                      []
                    core_type (lib/location.ml[294,9725+31]..[294,9725+35])
                      Ptyp_constr "bool" (lib/location.ml[294,9725+31]..[294,9725+35])
                      []
                []
            signature_item (lib/location.ml[295,9761+2]..[295,9761+66])
              Psig_value
              value_description "find_bound_in" (lib/location.ml[295,9761+6]..[295,9761+19]) (lib/location.ml[295,9761+2]..[295,9761+66])
                core_type (lib/location.ml[295,9761+22]..[295,9761+66])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[295,9761+22]..[295,9761+26])
                    Ptyp_constr "t" (lib/location.ml[295,9761+25]..[295,9761+26])
                    [
                      core_type (lib/location.ml[295,9761+22]..[295,9761+24])
                        Ptyp_var a
                    ]
                  core_type (lib/location.ml[295,9761+30]..[295,9761+66])
                    Ptyp_arrow
                    Labelled "range"
                    core_type (lib/location.ml[295,9761+37]..[295,9761+46])
                      Ptyp_tuple
                      [
                        core_type (lib/location.ml[295,9761+37]..[295,9761+40])
                          Ptyp_constr "int" (lib/location.ml[295,9761+37]..[295,9761+40])
                          []
                        core_type (lib/location.ml[295,9761+43]..[295,9761+46])
                          Ptyp_constr "int" (lib/location.ml[295,9761+43]..[295,9761+46])
                          []
                      ]
                    core_type (lib/location.ml[295,9761+51]..[295,9761+66])
                      Ptyp_constr "option" (lib/location.ml[295,9761+60]..[295,9761+66])
                      [
                        core_type (lib/location.ml[295,9761+51]..[295,9761+59])
                          Ptyp_constr "bound" (lib/location.ml[295,9761+54]..[295,9761+59])
                          [
                            core_type (lib/location.ml[295,9761+51]..[295,9761+53])
                              Ptyp_var a
                          ]
                      ]
                []
            signature_item (lib/location.ml[297,9829+2]..[297,9829+45])
              Psig_value
              value_description "is_start" (lib/location.ml[297,9829+6]..[297,9829+14]) (lib/location.ml[297,9829+2]..[297,9829+45])
                core_type (lib/location.ml[297,9829+17]..[297,9829+45])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[297,9829+17]..[297,9829+21])
                    Ptyp_constr "t" (lib/location.ml[297,9829+20]..[297,9829+21])
                    [
                      core_type (lib/location.ml[297,9829+17]..[297,9829+19])
                        Ptyp_var a
                    ]
                  core_type (lib/location.ml[297,9829+25]..[297,9829+45])
                    Ptyp_arrow
                    Labelled "pos"
                    core_type (lib/location.ml[297,9829+29]..[297,9829+32])
                      Ptyp_constr "int" (lib/location.ml[297,9829+29]..[297,9829+32])
                      []
                    core_type (lib/location.ml[297,9829+36]..[297,9829+45])
                      Ptyp_constr "option" (lib/location.ml[297,9829+39]..[297,9829+45])
                      [
                        core_type (lib/location.ml[297,9829+36]..[297,9829+38])
                          Ptyp_var a
                      ]
                []
            signature_item (lib/location.ml[298,9875+2]..[298,9875+43])
              Psig_value
              value_description "is_end" (lib/location.ml[298,9875+6]..[298,9875+12]) (lib/location.ml[298,9875+2]..[298,9875+43])
                core_type (lib/location.ml[298,9875+15]..[298,9875+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[298,9875+15]..[298,9875+19])
                    Ptyp_constr "t" (lib/location.ml[298,9875+18]..[298,9875+19])
                    [
                      core_type (lib/location.ml[298,9875+15]..[298,9875+17])
                        Ptyp_var a
                    ]
                  core_type (lib/location.ml[298,9875+23]..[298,9875+43])
                    Ptyp_arrow
                    Labelled "pos"
                    core_type (lib/location.ml[298,9875+27]..[298,9875+30])
                      Ptyp_constr "int" (lib/location.ml[298,9875+27]..[298,9875+30])
                      []
                    core_type (lib/location.ml[298,9875+34]..[298,9875+43])
                      Ptyp_constr "option" (lib/location.ml[298,9875+37]..[298,9875+43])
                      [
                        core_type (lib/location.ml[298,9875+34]..[298,9875+36])
                          Ptyp_var a
                      ]
                []
            signature_item (lib/location.ml[300,9920+2]..[300,9920+52])
              Psig_value
              value_description "extrema" (lib/location.ml[300,9920+6]..[300,9920+13]) (lib/location.ml[300,9920+2]..[300,9920+52])
                core_type (lib/location.ml[300,9920+16]..[300,9920+52])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[300,9920+16]..[300,9920+20])
                    Ptyp_constr "t" (lib/location.ml[300,9920+19]..[300,9920+20])
                    [
                      core_type (lib/location.ml[300,9920+16]..[300,9920+18])
                        Ptyp_var a
                    ]
                  core_type (lib/location.ml[300,9920+24]..[300,9920+52])
                    Ptyp_constr "option" (lib/location.ml[300,9920+46]..[300,9920+52])
                    [
                      core_type (lib/location.ml[300,9920+25]..[300,9920+44])
                        Ptyp_tuple
                        [
                          core_type (lib/location.ml[300,9920+25]..[300,9920+33])
                            Ptyp_constr "bound" (lib/location.ml[300,9920+28]..[300,9920+33])
                            [
                              core_type (lib/location.ml[300,9920+25]..[300,9920+27])
                                Ptyp_var a
                            ]
                          core_type (lib/location.ml[300,9920+36]..[300,9920+44])
                            Ptyp_constr "bound" (lib/location.ml[300,9920+39]..[300,9920+44])
                            [
                              core_type (lib/location.ml[300,9920+36]..[300,9920+38])
                                Ptyp_var a
                            ]
                        ]
                    ]
                []
          ]
  structure_item (lib/location.ml[365,11875+0]..[397,13244+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[365,11875+4]..[365,11875+22])
          Ppat_var "highlight_terminfo" (lib/location.ml[365,11875+4]..[365,11875+22])
        expression (lib/location.ml[365,11875+23]..[397,13244+14]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[365,11875+23]..[365,11875+25])
              Nolabel
              None
              pattern (lib/location.ml[365,11875+23]..[365,11875+25])
                Ppat_var "lb" (lib/location.ml[365,11875+23]..[365,11875+25])
            Pparam_val (lib/location.ml[365,11875+26]..[365,11875+29])
              Nolabel
              None
              pattern (lib/location.ml[365,11875+26]..[365,11875+29])
                Ppat_var "ppf" (lib/location.ml[365,11875+26]..[365,11875+29])
            Pparam_val (lib/location.ml[365,11875+30]..[365,11875+34])
              Nolabel
              None
              pattern (lib/location.ml[365,11875+30]..[365,11875+34])
                Ppat_var "locs" (lib/location.ml[365,11875+30]..[365,11875+34])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[366,11912+2]..[397,13244+14])
              Pexp_sequence
              expression (lib/location.ml[366,11912+2]..[366,11912+30])
                Pexp_apply
                expression (lib/location.ml[366,11912+2]..[366,11912+23])
                  Pexp_ident "Format.pp_print_flush" (lib/location.ml[366,11912+2]..[366,11912+23])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[366,11912+24]..[366,11912+27])
                      Pexp_ident "ppf" (lib/location.ml[366,11912+24]..[366,11912+27])
                  <arg>
                  Nolabel
                    expression (lib/location.ml[366,11912+28]..[366,11912+30])
                      Pexp_construct "()" (lib/location.ml[366,11912+28]..[366,11912+30])
                      None
                ]
              expression (lib/location.ml[368,12051+2]..[397,13244+14])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[368,12051+6]..[368,12051+10])
                      Ppat_var "pos0" (lib/location.ml[368,12051+6]..[368,12051+10])
                    expression (lib/location.ml[368,12051+13]..[368,12051+28])
                      Pexp_apply
                      expression (lib/location.ml[368,12051+13]..[368,12051+14])
                        Pexp_ident "~-" (lib/location.ml[368,12051+13]..[368,12051+14])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[368,12051+14]..[368,12051+28])
                            Pexp_field
                            expression (lib/location.ml[368,12051+14]..[368,12051+16])
                              Pexp_ident "lb" (lib/location.ml[368,12051+14]..[368,12051+16])
                            "lex_abs_pos" (lib/location.ml[368,12051+17]..[368,12051+28])
                      ]
                ]
                expression (lib/location.ml[370,12151+2]..[397,13244+14])
                  Pexp_sequence
                  expression (lib/location.ml[370,12151+2]..[370,12151+29])
                    Pexp_ifthenelse
                    expression (lib/location.ml[370,12151+5]..[370,12151+13])
                      Pexp_apply
                      expression (lib/location.ml[370,12151+10]..[370,12151+11])
                        Pexp_ident "<" (lib/location.ml[370,12151+10]..[370,12151+11])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[370,12151+5]..[370,12151+9])
                            Pexp_ident "pos0" (lib/location.ml[370,12151+5]..[370,12151+9])
                        <arg>
                        Nolabel
                          expression (lib/location.ml[370,12151+12]..[370,12151+13])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (lib/location.ml[370,12151+19]..[370,12151+29])
                      Pexp_apply
                      expression (lib/location.ml[370,12151+19]..[370,12151+24])
                        Pexp_ident "raise" (lib/location.ml[370,12151+19]..[370,12151+24])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[370,12151+25]..[370,12151+29])
                            Pexp_construct "Exit" (lib/location.ml[370,12151+25]..[370,12151+29])
                            None
                      ]
                    None
                  expression (lib/location.ml[372,12222+2]..[397,13244+14])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/location.ml[372,12222+6]..[372,12222+11])
                          Ppat_var "lines" (lib/location.ml[372,12222+6]..[372,12222+11])
                        expression (lib/location.ml[372,12222+14]..[372,12222+32])
                          Pexp_apply
                          expression (lib/location.ml[372,12222+14]..[372,12222+17])
                            Pexp_ident "ref" (lib/location.ml[372,12222+14]..[372,12222+17])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[372,12222+18]..[372,12222+32])
                                Pexp_apply
                                expression (lib/location.ml[372,12222+18]..[372,12222+19])
                                  Pexp_ident "!" (lib/location.ml[372,12222+18]..[372,12222+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[372,12222+19]..[372,12222+32])
                                      Pexp_ident "num_loc_lines" (lib/location.ml[372,12222+19]..[372,12222+32])
                                ]
                          ]
                    ]
                    expression (lib/location.ml[373,12258+2]..[397,13244+14])
                      Pexp_sequence
                      expression (lib/location.ml[373,12258+2]..[375,12357+6])
                        Pexp_for Up
                        pattern (lib/location.ml[373,12258+6]..[373,12258+7])
                          Ppat_var "i" (lib/location.ml[373,12258+6]..[373,12258+7])
                        expression (lib/location.ml[373,12258+10]..[373,12258+14])
                          Pexp_ident "pos0" (lib/location.ml[373,12258+10]..[373,12258+14])
                        expression (lib/location.ml[373,12258+18]..[373,12258+39])
                          Pexp_apply
                          expression (lib/location.ml[373,12258+36]..[373,12258+37])
                            Pexp_ident "-" (lib/location.ml[373,12258+36]..[373,12258+37])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[373,12258+18]..[373,12258+35])
                                Pexp_field
                                expression (lib/location.ml[373,12258+18]..[373,12258+20])
                                  Pexp_ident "lb" (lib/location.ml[373,12258+18]..[373,12258+20])
                                "lex_buffer_len" (lib/location.ml[373,12258+21]..[373,12258+35])
                            <arg>
                            Nolabel
                              expression (lib/location.ml[373,12258+38]..[373,12258+39])
                                Pexp_constant PConst_int (1,None)
                          ]
                        expression (lib/location.ml[374,12301+4]..[374,12301+55])
                          Pexp_ifthenelse
                          expression (lib/location.ml[374,12301+7]..[374,12301+39])
                            Pexp_apply
                            expression (lib/location.ml[374,12301+33]..[374,12301+34])
                              Pexp_ident "=" (lib/location.ml[374,12301+33]..[374,12301+34])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[374,12301+7]..[374,12301+32])
                                  Pexp_apply
                                  expression (lib/location.ml[374,12301+7]..[374,12301+16])
                                    Pexp_ident "Bytes.get" (lib/location.ml[374,12301+7]..[374,12301+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[374,12301+17]..[374,12301+30])
                                        Pexp_field
                                        expression (lib/location.ml[374,12301+17]..[374,12301+19])
                                          Pexp_ident "lb" (lib/location.ml[374,12301+17]..[374,12301+19])
                                        "lex_buffer" (lib/location.ml[374,12301+20]..[374,12301+30])
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[374,12301+31]..[374,12301+32])
                                        Pexp_ident "i" (lib/location.ml[374,12301+31]..[374,12301+32])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/location.ml[374,12301+35]..[374,12301+39])
                                  Pexp_constant PConst_char 0a
                            ]
                          expression (lib/location.ml[374,12301+45]..[374,12301+55])
                            Pexp_apply
                            expression (lib/location.ml[374,12301+45]..[374,12301+49])
                              Pexp_ident "incr" (lib/location.ml[374,12301+45]..[374,12301+49])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[374,12301+50]..[374,12301+55])
                                  Pexp_ident "lines" (lib/location.ml[374,12301+50]..[374,12301+55])
                            ]
                          None
                      expression (lib/location.ml[377,12400+2]..[397,13244+14])
                        Pexp_sequence
                        expression (lib/location.ml[377,12400+2]..[377,12400+60])
                          Pexp_ifthenelse
                          expression (lib/location.ml[377,12400+5]..[377,12400+44])
                            Pexp_apply
                            expression (lib/location.ml[377,12400+12]..[377,12400+14])
                              Pexp_ident ">=" (lib/location.ml[377,12400+12]..[377,12400+14])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[377,12400+5]..[377,12400+11])
                                  Pexp_apply
                                  expression (lib/location.ml[377,12400+5]..[377,12400+6])
                                    Pexp_ident "!" (lib/location.ml[377,12400+5]..[377,12400+6])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[377,12400+6]..[377,12400+11])
                                        Pexp_ident "lines" (lib/location.ml[377,12400+6]..[377,12400+11])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/location.ml[377,12400+15]..[377,12400+44])
                                  Pexp_apply
                                  expression (lib/location.ml[377,12400+41]..[377,12400+42])
                                    Pexp_ident "-" (lib/location.ml[377,12400+41]..[377,12400+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[377,12400+15]..[377,12400+40])
                                        Pexp_apply
                                        expression (lib/location.ml[377,12400+15]..[377,12400+33])
                                          Pexp_ident "Terminfo.num_lines" (lib/location.ml[377,12400+15]..[377,12400+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[377,12400+34]..[377,12400+40])
                                              Pexp_ident "stdout" (lib/location.ml[377,12400+34]..[377,12400+40])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[377,12400+43]..[377,12400+44])
                                        Pexp_constant PConst_int (2,None)
                                  ]
                            ]
                          expression (lib/location.ml[377,12400+50]..[377,12400+60])
                            Pexp_apply
                            expression (lib/location.ml[377,12400+50]..[377,12400+55])
                              Pexp_ident "raise" (lib/location.ml[377,12400+50]..[377,12400+55])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[377,12400+56]..[377,12400+60])
                                  Pexp_construct "Exit" (lib/location.ml[377,12400+56]..[377,12400+60])
                                  None
                            ]
                          None
                        expression (lib/location.ml[379,12506+2]..[397,13244+14])
                          Pexp_sequence
                          expression (lib/location.ml[379,12506+2]..[379,12506+14])
                            Pexp_apply
                            expression (lib/location.ml[379,12506+2]..[379,12506+7])
                              Pexp_ident "flush" (lib/location.ml[379,12506+2]..[379,12506+7])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[379,12506+8]..[379,12506+14])
                                  Pexp_ident "stdout" (lib/location.ml[379,12506+8]..[379,12506+14])
                            ]
                          expression (lib/location.ml[379,12506+16]..[397,13244+14])
                            Pexp_sequence
                            expression (lib/location.ml[379,12506+16]..[379,12506+45])
                              Pexp_apply
                              expression (lib/location.ml[379,12506+16]..[379,12506+31])
                                Pexp_ident "Terminfo.backup" (lib/location.ml[379,12506+16]..[379,12506+31])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[379,12506+32]..[379,12506+38])
                                    Pexp_ident "stdout" (lib/location.ml[379,12506+32]..[379,12506+38])
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[379,12506+39]..[379,12506+45])
                                    Pexp_apply
                                    expression (lib/location.ml[379,12506+39]..[379,12506+40])
                                      Pexp_ident "!" (lib/location.ml[379,12506+39]..[379,12506+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[379,12506+40]..[379,12506+45])
                                          Pexp_ident "lines" (lib/location.ml[379,12506+40]..[379,12506+45])
                                    ]
                              ]
                            expression (lib/location.ml[381,12617+2]..[397,13244+14])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (lib/location.ml[381,12617+6]..[381,12617+9])
                                    Ppat_var "bol" (lib/location.ml[381,12617+6]..[381,12617+9])
                                  expression (lib/location.ml[381,12617+12]..[381,12617+21])
                                    Pexp_apply
                                    expression (lib/location.ml[381,12617+12]..[381,12617+15])
                                      Pexp_ident "ref" (lib/location.ml[381,12617+12]..[381,12617+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[381,12617+16]..[381,12617+21])
                                          Pexp_construct "false" (lib/location.ml[381,12617+16]..[381,12617+21])
                                          None
                                    ]
                              ]
                              expression (lib/location.ml[382,12642+2]..[397,13244+14])
                                Pexp_sequence
                                expression (lib/location.ml[382,12642+2]..[382,12642+19])
                                  Pexp_apply
                                  expression (lib/location.ml[382,12642+2]..[382,12642+14])
                                    Pexp_ident "print_string" (lib/location.ml[382,12642+2]..[382,12642+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[382,12642+15]..[382,12642+19])
                                        Pexp_constant PConst_string("# ",(lib/location.ml[382,12642+16]..[382,12642+18]),None)
                                  ]
                                expression (lib/location.ml[383,12663+2]..[397,13244+14])
                                  Pexp_sequence
                                  expression (lib/location.ml[383,12663+2]..[392,13071+6])
                                    Pexp_for Up
                                    pattern (lib/location.ml[383,12663+6]..[383,12663+9])
                                      Ppat_var "pos" (lib/location.ml[383,12663+6]..[383,12663+9])
                                    expression (lib/location.ml[383,12663+12]..[383,12663+13])
                                      Pexp_constant PConst_int (0,None)
                                    expression (lib/location.ml[383,12663+17]..[383,12663+45])
                                      Pexp_apply
                                      expression (lib/location.ml[383,12663+42]..[383,12663+43])
                                        Pexp_ident "-" (lib/location.ml[383,12663+42]..[383,12663+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[383,12663+17]..[383,12663+41])
                                            Pexp_apply
                                            expression (lib/location.ml[383,12663+35]..[383,12663+36])
                                              Pexp_ident "-" (lib/location.ml[383,12663+35]..[383,12663+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[383,12663+17]..[383,12663+34])
                                                  Pexp_field
                                                  expression (lib/location.ml[383,12663+17]..[383,12663+19])
                                                    Pexp_ident "lb" (lib/location.ml[383,12663+17]..[383,12663+19])
                                                  "lex_buffer_len" (lib/location.ml[383,12663+20]..[383,12663+34])
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[383,12663+37]..[383,12663+41])
                                                  Pexp_ident "pos0" (lib/location.ml[383,12663+37]..[383,12663+41])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[383,12663+44]..[383,12663+45])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                                    expression (lib/location.ml[384,12712+4]..[391,13049+21])
                                      Pexp_sequence
                                      expression (lib/location.ml[384,12712+4]..[384,12712+50])
                                        Pexp_ifthenelse
                                        expression (lib/location.ml[384,12712+7]..[384,12712+11])
                                          Pexp_apply
                                          expression (lib/location.ml[384,12712+7]..[384,12712+8])
                                            Pexp_ident "!" (lib/location.ml[384,12712+7]..[384,12712+8])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[384,12712+8]..[384,12712+11])
                                                Pexp_ident "bol" (lib/location.ml[384,12712+8]..[384,12712+11])
                                          ]
                                        expression (lib/location.ml[384,12712+17]..[384,12712+50])
                                          Pexp_sequence
                                          expression (lib/location.ml[384,12712+18]..[384,12712+35])
                                            Pexp_apply
                                            expression (lib/location.ml[384,12712+18]..[384,12712+30])
                                              Pexp_ident "print_string" (lib/location.ml[384,12712+18]..[384,12712+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[384,12712+31]..[384,12712+35])
                                                  Pexp_constant PConst_string("  ",(lib/location.ml[384,12712+32]..[384,12712+34]),None)
                                            ]
                                          expression (lib/location.ml[384,12712+37]..[384,12712+49])
                                            Pexp_apply
                                            expression (lib/location.ml[384,12712+41]..[384,12712+43])
                                              Pexp_ident ":=" (lib/location.ml[384,12712+41]..[384,12712+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[384,12712+37]..[384,12712+40])
                                                  Pexp_ident "bol" (lib/location.ml[384,12712+37]..[384,12712+40])
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[384,12712+44]..[384,12712+49])
                                                  Pexp_construct "false" (lib/location.ml[384,12712+44]..[384,12712+49])
                                                  None
                                            ]
                                        None
                                      expression (lib/location.ml[385,12764+4]..[391,13049+21])
                                        Pexp_sequence
                                        expression (lib/location.ml[385,12764+4]..[386,12835+35])
                                          Pexp_ifthenelse
                                          expression (lib/location.ml[385,12764+7]..[385,12764+65])
                                            Pexp_apply
                                            expression (lib/location.ml[385,12764+7]..[385,12764+18])
                                              Pexp_ident "List.exists" (lib/location.ml[385,12764+7]..[385,12764+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[385,12764+19]..[385,12764+60])
                                                  Pexp_function
                                                  [
                                                    Pparam_val (lib/location.ml[385,12764+24]..[385,12764+27])
                                                      Nolabel
                                                      None
                                                      pattern (lib/location.ml[385,12764+24]..[385,12764+27])
                                                        Ppat_var "loc" (lib/location.ml[385,12764+24]..[385,12764+27])
                                                  ]
                                                  None
                                                  Pfunction_body
                                                    expression (lib/location.ml[385,12764+31]..[385,12764+59])
                                                      Pexp_apply
                                                      expression (lib/location.ml[385,12764+35]..[385,12764+36])
                                                        Pexp_ident "=" (lib/location.ml[385,12764+35]..[385,12764+36])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[385,12764+31]..[385,12764+34])
                                                            Pexp_ident "pos" (lib/location.ml[385,12764+31]..[385,12764+34])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[385,12764+37]..[385,12764+59])
                                                            Pexp_field
                                                            expression (lib/location.ml[385,12764+37]..[385,12764+50])
                                                              Pexp_field
                                                              expression (lib/location.ml[385,12764+37]..[385,12764+40])
                                                                Pexp_ident "loc" (lib/location.ml[385,12764+37]..[385,12764+40])
                                                              "loc_start" (lib/location.ml[385,12764+41]..[385,12764+50])
                                                            "pos_cnum" (lib/location.ml[385,12764+51]..[385,12764+59])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[385,12764+61]..[385,12764+65])
                                                  Pexp_ident "locs" (lib/location.ml[385,12764+61]..[385,12764+65])
                                            ]
                                          expression (lib/location.ml[386,12835+6]..[386,12835+35])
                                            Pexp_apply
                                            expression (lib/location.ml[386,12835+6]..[386,12835+23])
                                              Pexp_ident "Terminfo.standout" (lib/location.ml[386,12835+6]..[386,12835+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[386,12835+24]..[386,12835+30])
                                                  Pexp_ident "stdout" (lib/location.ml[386,12835+24]..[386,12835+30])
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[386,12835+31]..[386,12835+35])
                                                  Pexp_construct "true" (lib/location.ml[386,12835+31]..[386,12835+35])
                                                  None
                                            ]
                                          None
                                        expression (lib/location.ml[387,12872+4]..[391,13049+21])
                                          Pexp_sequence
                                          expression (lib/location.ml[387,12872+4]..[388,12941+36])
                                            Pexp_ifthenelse
                                            expression (lib/location.ml[387,12872+7]..[387,12872+63])
                                              Pexp_apply
                                              expression (lib/location.ml[387,12872+7]..[387,12872+18])
                                                Pexp_ident "List.exists" (lib/location.ml[387,12872+7]..[387,12872+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[387,12872+19]..[387,12872+58])
                                                    Pexp_function
                                                    [
                                                      Pparam_val (lib/location.ml[387,12872+24]..[387,12872+27])
                                                        Nolabel
                                                        None
                                                        pattern (lib/location.ml[387,12872+24]..[387,12872+27])
                                                          Ppat_var "loc" (lib/location.ml[387,12872+24]..[387,12872+27])
                                                    ]
                                                    None
                                                    Pfunction_body
                                                      expression (lib/location.ml[387,12872+31]..[387,12872+57])
                                                        Pexp_apply
                                                        expression (lib/location.ml[387,12872+35]..[387,12872+36])
                                                          Pexp_ident "=" (lib/location.ml[387,12872+35]..[387,12872+36])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[387,12872+31]..[387,12872+34])
                                                              Pexp_ident "pos" (lib/location.ml[387,12872+31]..[387,12872+34])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[387,12872+37]..[387,12872+57])
                                                              Pexp_field
                                                              expression (lib/location.ml[387,12872+37]..[387,12872+48])
                                                                Pexp_field
                                                                expression (lib/location.ml[387,12872+37]..[387,12872+40])
                                                                  Pexp_ident "loc" (lib/location.ml[387,12872+37]..[387,12872+40])
                                                                "loc_end" (lib/location.ml[387,12872+41]..[387,12872+48])
                                                              "pos_cnum" (lib/location.ml[387,12872+49]..[387,12872+57])
                                                        ]
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[387,12872+59]..[387,12872+63])
                                                    Pexp_ident "locs" (lib/location.ml[387,12872+59]..[387,12872+63])
                                              ]
                                            expression (lib/location.ml[388,12941+6]..[388,12941+36])
                                              Pexp_apply
                                              expression (lib/location.ml[388,12941+6]..[388,12941+23])
                                                Pexp_ident "Terminfo.standout" (lib/location.ml[388,12941+6]..[388,12941+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[388,12941+24]..[388,12941+30])
                                                    Pexp_ident "stdout" (lib/location.ml[388,12941+24]..[388,12941+30])
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[388,12941+31]..[388,12941+36])
                                                    Pexp_construct "false" (lib/location.ml[388,12941+31]..[388,12941+36])
                                                    None
                                              ]
                                            None
                                          expression (lib/location.ml[389,12979+4]..[391,13049+21])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/location.ml[389,12979+8]..[389,12979+9])
                                                  Ppat_var "c" (lib/location.ml[389,12979+8]..[389,12979+9])
                                                expression (lib/location.ml[389,12979+12]..[389,12979+48])
                                                  Pexp_apply
                                                  expression (lib/location.ml[389,12979+12]..[389,12979+21])
                                                    Pexp_ident "Bytes.get" (lib/location.ml[389,12979+12]..[389,12979+21])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[389,12979+22]..[389,12979+35])
                                                        Pexp_field
                                                        expression (lib/location.ml[389,12979+22]..[389,12979+24])
                                                          Pexp_ident "lb" (lib/location.ml[389,12979+22]..[389,12979+24])
                                                        "lex_buffer" (lib/location.ml[389,12979+25]..[389,12979+35])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[389,12979+36]..[389,12979+48])
                                                        Pexp_apply
                                                        expression (lib/location.ml[389,12979+41]..[389,12979+42])
                                                          Pexp_ident "+" (lib/location.ml[389,12979+41]..[389,12979+42])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[389,12979+37]..[389,12979+40])
                                                              Pexp_ident "pos" (lib/location.ml[389,12979+37]..[389,12979+40])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[389,12979+43]..[389,12979+47])
                                                              Pexp_ident "pos0" (lib/location.ml[389,12979+43]..[389,12979+47])
                                                        ]
                                                  ]
                                            ]
                                            expression (lib/location.ml[390,13031+4]..[391,13049+21])
                                              Pexp_sequence
                                              expression (lib/location.ml[390,13031+4]..[390,13031+16])
                                                Pexp_apply
                                                expression (lib/location.ml[390,13031+4]..[390,13031+14])
                                                  Pexp_ident "print_char" (lib/location.ml[390,13031+4]..[390,13031+14])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[390,13031+15]..[390,13031+16])
                                                      Pexp_ident "c" (lib/location.ml[390,13031+15]..[390,13031+16])
                                                ]
                                              expression (lib/location.ml[391,13049+4]..[391,13049+21])
                                                Pexp_apply
                                                expression (lib/location.ml[391,13049+8]..[391,13049+10])
                                                  Pexp_ident ":=" (lib/location.ml[391,13049+8]..[391,13049+10])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[391,13049+4]..[391,13049+7])
                                                      Pexp_ident "bol" (lib/location.ml[391,13049+4]..[391,13049+7])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[391,13049+11]..[391,13049+21])
                                                      Pexp_apply
                                                      expression (lib/location.ml[391,13049+14]..[391,13049+15])
                                                        Pexp_ident "=" (lib/location.ml[391,13049+14]..[391,13049+15])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[391,13049+12]..[391,13049+13])
                                                            Pexp_ident "c" (lib/location.ml[391,13049+12]..[391,13049+13])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[391,13049+16]..[391,13049+20])
                                                            Pexp_constant PConst_char 0a
                                                      ]
                                                ]
                                  expression (lib/location.ml[394,13119+2]..[397,13244+14])
                                    Pexp_sequence
                                    expression (lib/location.ml[394,13119+2]..[394,13119+32])
                                      Pexp_apply
                                      expression (lib/location.ml[394,13119+2]..[394,13119+19])
                                        Pexp_ident "Terminfo.standout" (lib/location.ml[394,13119+2]..[394,13119+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[394,13119+20]..[394,13119+26])
                                            Pexp_ident "stdout" (lib/location.ml[394,13119+20]..[394,13119+26])
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[394,13119+27]..[394,13119+32])
                                            Pexp_construct "false" (lib/location.ml[394,13119+27]..[394,13119+32])
                                            None
                                      ]
                                    expression (lib/location.ml[396,13203+2]..[397,13244+14])
                                      Pexp_sequence
                                      expression (lib/location.ml[396,13203+2]..[396,13203+39])
                                        Pexp_apply
                                        expression (lib/location.ml[396,13203+2]..[396,13203+17])
                                          Pexp_ident "Terminfo.resume" (lib/location.ml[396,13203+2]..[396,13203+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[396,13203+18]..[396,13203+24])
                                              Pexp_ident "stdout" (lib/location.ml[396,13203+18]..[396,13203+24])
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[396,13203+25]..[396,13203+39])
                                              Pexp_apply
                                              expression (lib/location.ml[396,13203+25]..[396,13203+26])
                                                Pexp_ident "!" (lib/location.ml[396,13203+25]..[396,13203+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[396,13203+26]..[396,13203+39])
                                                    Pexp_ident "num_loc_lines" (lib/location.ml[396,13203+26]..[396,13203+39])
                                              ]
                                        ]
                                      expression (lib/location.ml[397,13244+2]..[397,13244+14])
                                        Pexp_apply
                                        expression (lib/location.ml[397,13244+2]..[397,13244+7])
                                          Pexp_ident "flush" (lib/location.ml[397,13244+2]..[397,13244+7])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[397,13244+8]..[397,13244+14])
                                              Pexp_ident "stdout" (lib/location.ml[397,13244+8]..[397,13244+14])
                                        ]
    ]
  structure_item (lib/location.ml[399,13260+0]..[401,13334+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[399,13260+4]..[399,13260+22])
          Ppat_var "highlight_terminfo" (lib/location.ml[399,13260+4]..[399,13260+22])
        expression (lib/location.ml[399,13260+23]..[401,13334+17]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[399,13260+23]..[399,13260+25])
              Nolabel
              None
              pattern (lib/location.ml[399,13260+23]..[399,13260+25])
                Ppat_var "lb" (lib/location.ml[399,13260+23]..[399,13260+25])
            Pparam_val (lib/location.ml[399,13260+26]..[399,13260+29])
              Nolabel
              None
              pattern (lib/location.ml[399,13260+26]..[399,13260+29])
                Ppat_var "ppf" (lib/location.ml[399,13260+26]..[399,13260+29])
            Pparam_val (lib/location.ml[399,13260+30]..[399,13260+34])
              Nolabel
              None
              pattern (lib/location.ml[399,13260+30]..[399,13260+34])
                Ppat_var "locs" (lib/location.ml[399,13260+30]..[399,13260+34])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[400,13297+2]..[401,13334+17])
              Pexp_try
              expression (lib/location.ml[400,13297+6]..[400,13297+36])
                Pexp_apply
                expression (lib/location.ml[400,13297+6]..[400,13297+24])
                  Pexp_ident "highlight_terminfo" (lib/location.ml[400,13297+6]..[400,13297+24])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[400,13297+25]..[400,13297+27])
                      Pexp_ident "lb" (lib/location.ml[400,13297+25]..[400,13297+27])
                  <arg>
                  Nolabel
                    expression (lib/location.ml[400,13297+28]..[400,13297+31])
                      Pexp_ident "ppf" (lib/location.ml[400,13297+28]..[400,13297+31])
                  <arg>
                  Nolabel
                    expression (lib/location.ml[400,13297+32]..[400,13297+36])
                      Pexp_ident "locs" (lib/location.ml[400,13297+32]..[400,13297+36])
                ]
              [
                <case>
                  pattern (lib/location.ml[401,13334+7]..[401,13334+11])
                    Ppat_construct "Exit" (lib/location.ml[401,13334+7]..[401,13334+11])
                    None
                  expression (lib/location.ml[401,13334+15]..[401,13334+17])
                    Pexp_construct "()" (lib/location.ml[401,13334+15]..[401,13334+17])
                    None
              ]
    ]
  structure_item (lib/location.ml[434,14001+0]..[437,14057+1])
    Pstr_type Rec
    [
      type_declaration "input_line" (lib/location.ml[434,14001+5]..[434,14001+15]) (lib/location.ml[434,14001+0]..[437,14057+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/location.ml[435,14021+2]..[435,14021+16])
                Immutable
                "text" (lib/location.ml[435,14021+2]..[435,14021+6])                core_type (lib/location.ml[435,14021+9]..[435,14021+15])
                  Ptyp_constr "string" (lib/location.ml[435,14021+9]..[435,14021+15])
                  []
              (lib/location.ml[436,14038+2]..[436,14038+18])
                Immutable
                "start_pos" (lib/location.ml[436,14038+2]..[436,14038+11])                core_type (lib/location.ml[436,14038+14]..[436,14038+17])
                  Ptyp_constr "int" (lib/location.ml[436,14038+14]..[436,14038+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/location.ml[446,14351+0]..[462,14906+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[446,14351+4]..[446,14351+22])
          Ppat_var "infer_line_numbers" (lib/location.ml[446,14351+4]..[446,14351+22])
        expression (lib/location.ml[447,14374+4]..[462,14906+11]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[447,14374+4]..[447,14374+43])
              Nolabel
              None
              pattern (lib/location.ml[447,14374+4]..[447,14374+43])
                Ppat_constraint
                pattern (lib/location.ml[447,14374+5]..[447,14374+10])
                  Ppat_var "lines" (lib/location.ml[447,14374+5]..[447,14374+10])
                core_type (lib/location.ml[447,14374+12]..[447,14374+42])
                  Ptyp_constr "list" (lib/location.ml[447,14374+38]..[447,14374+42])
                  [
                    core_type (lib/location.ml[447,14374+13]..[447,14374+36])
                      Ptyp_tuple
                      [
                        core_type (lib/location.ml[447,14374+13]..[447,14374+23])
                          Ptyp_constr "option" (lib/location.ml[447,14374+17]..[447,14374+23])
                          [
                            core_type (lib/location.ml[447,14374+13]..[447,14374+16])
                              Ptyp_constr "int" (lib/location.ml[447,14374+13]..[447,14374+16])
                              []
                          ]
                        core_type (lib/location.ml[447,14374+26]..[447,14374+36])
                          Ptyp_constr "input_line" (lib/location.ml[447,14374+26]..[447,14374+36])
                          []
                      ]
                  ]
          ]
          Some
            Pconstraint
              core_type (lib/location.ml[448,14419+2]..[448,14419+32])
                Ptyp_constr "list" (lib/location.ml[448,14419+28]..[448,14419+32])
                [
                  core_type (lib/location.ml[448,14419+3]..[448,14419+26])
                    Ptyp_tuple
                    [
                      core_type (lib/location.ml[448,14419+3]..[448,14419+13])
                        Ptyp_constr "option" (lib/location.ml[448,14419+7]..[448,14419+13])
                        [
                          core_type (lib/location.ml[448,14419+3]..[448,14419+6])
                            Ptyp_constr "int" (lib/location.ml[448,14419+3]..[448,14419+6])
                            []
                        ]
                      core_type (lib/location.ml[448,14419+16]..[448,14419+26])
                        Ptyp_constr "input_line" (lib/location.ml[448,14419+16]..[448,14419+26])
                        []
                    ]
                ]
          Pfunction_body
            expression (lib/location.ml[450,14456+2]..[462,14906+11])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/location.ml[450,14456+6]..[450,14456+29])
                    Ppat_tuple
                    [
                      pattern (lib/location.ml[450,14456+7]..[450,14456+8])
                        Ppat_any
                      pattern (lib/location.ml[450,14456+10]..[450,14456+16])
                        Ppat_var "offset" (lib/location.ml[450,14456+10]..[450,14456+16])
                      pattern (lib/location.ml[450,14456+18]..[450,14456+28])
                        Ppat_var "consistent" (lib/location.ml[450,14456+18]..[450,14456+28])
                    ]
                  expression (lib/location.ml[451,14488+4]..[456,14745+27])
                    Pexp_apply
                    expression (lib/location.ml[451,14488+4]..[451,14488+18])
                      Pexp_ident "List.fold_left" (lib/location.ml[451,14488+4]..[451,14488+18])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[451,14488+19]..[456,14745+5])
                          Pexp_function
                          [
                            Pparam_val (lib/location.ml[451,14488+24]..[451,14488+47])
                              Nolabel
                              None
                              pattern (lib/location.ml[451,14488+24]..[451,14488+47])
                                Ppat_tuple
                                [
                                  pattern (lib/location.ml[451,14488+25]..[451,14488+26])
                                    Ppat_var "i" (lib/location.ml[451,14488+25]..[451,14488+26])
                                  pattern (lib/location.ml[451,14488+28]..[451,14488+34])
                                    Ppat_var "offset" (lib/location.ml[451,14488+28]..[451,14488+34])
                                  pattern (lib/location.ml[451,14488+36]..[451,14488+46])
                                    Ppat_var "consistent" (lib/location.ml[451,14488+36]..[451,14488+46])
                                ]
                            Pparam_val (lib/location.ml[451,14488+48]..[451,14488+57])
                              Nolabel
                              None
                              pattern (lib/location.ml[451,14488+48]..[451,14488+57])
                                Ppat_tuple
                                [
                                  pattern (lib/location.ml[451,14488+49]..[451,14488+53])
                                    Ppat_var "lnum" (lib/location.ml[451,14488+49]..[451,14488+53])
                                  pattern (lib/location.ml[451,14488+55]..[451,14488+56])
                                    Ppat_any
                                ]
                          ]
                          None
                          Pfunction_body
                            expression (lib/location.ml[452,14549+6]..[455,14680+64])
                              Pexp_match
                              expression (lib/location.ml[452,14549+12]..[452,14549+24])
                                Pexp_tuple
                                [
                                  expression (lib/location.ml[452,14549+12]..[452,14549+16])
                                    Pexp_ident "lnum" (lib/location.ml[452,14549+12]..[452,14549+16])
                                  expression (lib/location.ml[452,14549+18]..[452,14549+24])
                                    Pexp_ident "offset" (lib/location.ml[452,14549+18]..[452,14549+24])
                                ]
                              [
                                <case>
                                  pattern (lib/location.ml[453,14579+8]..[453,14579+15])
                                    Ppat_tuple
                                    [
                                      pattern (lib/location.ml[453,14579+8]..[453,14579+12])
                                        Ppat_construct "None" (lib/location.ml[453,14579+8]..[453,14579+12])
                                        None
                                      pattern (lib/location.ml[453,14579+14]..[453,14579+15])
                                        Ppat_any
                                    ]
                                  expression (lib/location.ml[453,14579+19]..[453,14579+44])
                                    Pexp_tuple
                                    [
                                      expression (lib/location.ml[453,14579+20]..[453,14579+23])
                                        Pexp_apply
                                        expression (lib/location.ml[453,14579+21]..[453,14579+22])
                                          Pexp_ident "+" (lib/location.ml[453,14579+21]..[453,14579+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[453,14579+20]..[453,14579+21])
                                              Pexp_ident "i" (lib/location.ml[453,14579+20]..[453,14579+21])
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[453,14579+22]..[453,14579+23])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                      expression (lib/location.ml[453,14579+25]..[453,14579+31])
                                        Pexp_ident "offset" (lib/location.ml[453,14579+25]..[453,14579+31])
                                      expression (lib/location.ml[453,14579+33]..[453,14579+43])
                                        Pexp_ident "consistent" (lib/location.ml[453,14579+33]..[453,14579+43])
                                    ]
                                <case>
                                  pattern (lib/location.ml[454,14624+8]..[454,14624+20])
                                    Ppat_tuple
                                    [
                                      pattern (lib/location.ml[454,14624+8]..[454,14624+14])
                                        Ppat_construct "Some" (lib/location.ml[454,14624+8]..[454,14624+12])
                                        Some
                                          []
                                          pattern (lib/location.ml[454,14624+13]..[454,14624+14])
                                            Ppat_var "n" (lib/location.ml[454,14624+13]..[454,14624+14])
                                      pattern (lib/location.ml[454,14624+16]..[454,14624+20])
                                        Ppat_construct "None" (lib/location.ml[454,14624+16]..[454,14624+20])
                                        None
                                    ]
                                  expression (lib/location.ml[454,14624+24]..[454,14624+55])
                                    Pexp_tuple
                                    [
                                      expression (lib/location.ml[454,14624+25]..[454,14624+28])
                                        Pexp_apply
                                        expression (lib/location.ml[454,14624+26]..[454,14624+27])
                                          Pexp_ident "+" (lib/location.ml[454,14624+26]..[454,14624+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[454,14624+25]..[454,14624+26])
                                              Pexp_ident "i" (lib/location.ml[454,14624+25]..[454,14624+26])
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[454,14624+27]..[454,14624+28])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                      expression (lib/location.ml[454,14624+30]..[454,14624+42])
                                        Pexp_construct "Some" (lib/location.ml[454,14624+30]..[454,14624+34])
                                        Some
                                          expression (lib/location.ml[454,14624+35]..[454,14624+42])
                                            Pexp_apply
                                            expression (lib/location.ml[454,14624+38]..[454,14624+39])
                                              Pexp_ident "-" (lib/location.ml[454,14624+38]..[454,14624+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[454,14624+36]..[454,14624+37])
                                                  Pexp_ident "n" (lib/location.ml[454,14624+36]..[454,14624+37])
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[454,14624+40]..[454,14624+41])
                                                  Pexp_ident "i" (lib/location.ml[454,14624+40]..[454,14624+41])
                                            ]
                                      expression (lib/location.ml[454,14624+44]..[454,14624+54])
                                        Pexp_ident "consistent" (lib/location.ml[454,14624+44]..[454,14624+54])
                                    ]
                                <case>
                                  pattern (lib/location.ml[455,14680+8]..[455,14680+22])
                                    Ppat_tuple
                                    [
                                      pattern (lib/location.ml[455,14680+8]..[455,14680+14])
                                        Ppat_construct "Some" (lib/location.ml[455,14680+8]..[455,14680+12])
                                        Some
                                          []
                                          pattern (lib/location.ml[455,14680+13]..[455,14680+14])
                                            Ppat_var "n" (lib/location.ml[455,14680+13]..[455,14680+14])
                                      pattern (lib/location.ml[455,14680+16]..[455,14680+22])
                                        Ppat_construct "Some" (lib/location.ml[455,14680+16]..[455,14680+20])
                                        Some
                                          []
                                          pattern (lib/location.ml[455,14680+21]..[455,14680+22])
                                            Ppat_var "m" (lib/location.ml[455,14680+21]..[455,14680+22])
                                    ]
                                  expression (lib/location.ml[455,14680+26]..[455,14680+64])
                                    Pexp_tuple
                                    [
                                      expression (lib/location.ml[455,14680+27]..[455,14680+30])
                                        Pexp_apply
                                        expression (lib/location.ml[455,14680+28]..[455,14680+29])
                                          Pexp_ident "+" (lib/location.ml[455,14680+28]..[455,14680+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[455,14680+27]..[455,14680+28])
                                              Pexp_ident "i" (lib/location.ml[455,14680+27]..[455,14680+28])
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[455,14680+29]..[455,14680+30])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                      expression (lib/location.ml[455,14680+32]..[455,14680+38])
                                        Pexp_ident "offset" (lib/location.ml[455,14680+32]..[455,14680+38])
                                      expression (lib/location.ml[455,14680+40]..[455,14680+63])
                                        Pexp_apply
                                        expression (lib/location.ml[455,14680+51]..[455,14680+53])
                                          Pexp_ident "&&" (lib/location.ml[455,14680+51]..[455,14680+53])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[455,14680+40]..[455,14680+50])
                                              Pexp_ident "consistent" (lib/location.ml[455,14680+40]..[455,14680+50])
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[455,14680+54]..[455,14680+63])
                                              Pexp_apply
                                              expression (lib/location.ml[455,14680+56]..[455,14680+57])
                                                Pexp_ident "=" (lib/location.ml[455,14680+56]..[455,14680+57])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[455,14680+54]..[455,14680+55])
                                                    Pexp_ident "n" (lib/location.ml[455,14680+54]..[455,14680+55])
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[455,14680+58]..[455,14680+63])
                                                    Pexp_apply
                                                    expression (lib/location.ml[455,14680+60]..[455,14680+61])
                                                      Pexp_ident "+" (lib/location.ml[455,14680+60]..[455,14680+61])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/location.ml[455,14680+58]..[455,14680+59])
                                                          Pexp_ident "m" (lib/location.ml[455,14680+58]..[455,14680+59])
                                                      <arg>
                                                      Nolabel
                                                        expression (lib/location.ml[455,14680+62]..[455,14680+63])
                                                          Pexp_ident "i" (lib/location.ml[455,14680+62]..[455,14680+63])
                                                    ]
                                              ]
                                        ]
                                    ]
                              ]
                      <arg>
                      Nolabel
                        expression (lib/location.ml[456,14745+6]..[456,14745+21])
                          Pexp_tuple
                          [
                            expression (lib/location.ml[456,14745+7]..[456,14745+8])
                              Pexp_constant PConst_int (0,None)
                            expression (lib/location.ml[456,14745+10]..[456,14745+14])
                              Pexp_construct "None" (lib/location.ml[456,14745+10]..[456,14745+14])
                              None
                            expression (lib/location.ml[456,14745+16]..[456,14745+20])
                              Pexp_construct "true" (lib/location.ml[456,14745+16]..[456,14745+20])
                              None
                          ]
                      <arg>
                      Nolabel
                        expression (lib/location.ml[456,14745+22]..[456,14745+27])
                          Pexp_ident "lines" (lib/location.ml[456,14745+22]..[456,14745+27])
                    ]
              ]
              expression (lib/location.ml[458,14778+2]..[462,14906+11])
                Pexp_match
                expression (lib/location.ml[458,14778+8]..[458,14778+26])
                  Pexp_tuple
                  [
                    expression (lib/location.ml[458,14778+8]..[458,14778+14])
                      Pexp_ident "offset" (lib/location.ml[458,14778+8]..[458,14778+14])
                    expression (lib/location.ml[458,14778+16]..[458,14778+26])
                      Pexp_ident "consistent" (lib/location.ml[458,14778+16]..[458,14778+26])
                  ]
                [
                  <case>
                    pattern (lib/location.ml[459,14810+4]..[459,14810+16])
                      Ppat_tuple
                      [
                        pattern (lib/location.ml[459,14810+4]..[459,14810+10])
                          Ppat_construct "Some" (lib/location.ml[459,14810+4]..[459,14810+8])
                          Some
                            []
                            pattern (lib/location.ml[459,14810+9]..[459,14810+10])
                              Ppat_var "m" (lib/location.ml[459,14810+9]..[459,14810+10])
                        pattern (lib/location.ml[459,14810+12]..[459,14810+16])
                          Ppat_construct "true" (lib/location.ml[459,14810+12]..[459,14810+16])
                          None
                      ]
                    expression (lib/location.ml[460,14830+6]..[460,14830+63])
                      Pexp_apply
                      expression (lib/location.ml[460,14830+6]..[460,14830+15])
                        Pexp_ident "List.mapi" (lib/location.ml[460,14830+6]..[460,14830+15])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[460,14830+16]..[460,14830+57])
                            Pexp_function
                            [
                              Pparam_val (lib/location.ml[460,14830+21]..[460,14830+22])
                                Nolabel
                                None
                                pattern (lib/location.ml[460,14830+21]..[460,14830+22])
                                  Ppat_var "i" (lib/location.ml[460,14830+21]..[460,14830+22])
                              Pparam_val (lib/location.ml[460,14830+23]..[460,14830+32])
                                Nolabel
                                None
                                pattern (lib/location.ml[460,14830+23]..[460,14830+32])
                                  Ppat_tuple
                                  [
                                    pattern (lib/location.ml[460,14830+24]..[460,14830+25])
                                      Ppat_any
                                    pattern (lib/location.ml[460,14830+27]..[460,14830+31])
                                      Ppat_var "line" (lib/location.ml[460,14830+27]..[460,14830+31])
                                  ]
                            ]
                            None
                            Pfunction_body
                              expression (lib/location.ml[460,14830+36]..[460,14830+56])
                                Pexp_tuple
                                [
                                  expression (lib/location.ml[460,14830+37]..[460,14830+49])
                                    Pexp_construct "Some" (lib/location.ml[460,14830+37]..[460,14830+41])
                                    Some
                                      expression (lib/location.ml[460,14830+42]..[460,14830+49])
                                        Pexp_apply
                                        expression (lib/location.ml[460,14830+45]..[460,14830+46])
                                          Pexp_ident "+" (lib/location.ml[460,14830+45]..[460,14830+46])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[460,14830+43]..[460,14830+44])
                                              Pexp_ident "m" (lib/location.ml[460,14830+43]..[460,14830+44])
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[460,14830+47]..[460,14830+48])
                                              Pexp_ident "i" (lib/location.ml[460,14830+47]..[460,14830+48])
                                        ]
                                  expression (lib/location.ml[460,14830+51]..[460,14830+55])
                                    Pexp_ident "line" (lib/location.ml[460,14830+51]..[460,14830+55])
                                ]
                        <arg>
                        Nolabel
                          expression (lib/location.ml[460,14830+58]..[460,14830+63])
                            Pexp_ident "lines" (lib/location.ml[460,14830+58]..[460,14830+63])
                      ]
                  <case>
                    pattern (lib/location.ml[461,14894+4]..[461,14894+8])
                      Ppat_tuple
                      [
                        pattern (lib/location.ml[461,14894+4]..[461,14894+5])
                          Ppat_any
                        pattern (lib/location.ml[461,14894+7]..[461,14894+8])
                          Ppat_any
                      ]
                    expression (lib/location.ml[462,14906+6]..[462,14906+11])
                      Pexp_ident "lines" (lib/location.ml[462,14906+6]..[462,14906+11])
                ]
    ]
  structure_item (lib/location.ml[470,15135+0]..[540,17836+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[470,15135+4]..[470,15135+19])
          Ppat_var "highlight_quote" (lib/location.ml[470,15135+4]..[470,15135+19])
        expression (lib/location.ml[470,15135+20]..[540,17836+27]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[470,15135+20]..[470,15135+23])
              Nolabel
              None
              pattern (lib/location.ml[470,15135+20]..[470,15135+23])
                Ppat_var "ppf" (lib/location.ml[470,15135+20]..[470,15135+23])
            Pparam_val (lib/location.ml[471,15159+4]..[471,15159+75])
              Labelled "get_lines"
              None
              pattern (lib/location.ml[471,15159+6]..[471,15159+74])
                Ppat_constraint
                pattern (lib/location.ml[471,15159+6]..[471,15159+15])
                  Ppat_var "get_lines" (lib/location.ml[471,15159+6]..[471,15159+15])
                core_type (lib/location.ml[471,15159+17]..[471,15159+74])
                  Ptyp_arrow
                  Labelled "start_pos"
                  core_type (lib/location.ml[471,15159+27]..[471,15159+35])
                    Ptyp_constr "position" (lib/location.ml[471,15159+27]..[471,15159+35])
                    []
                  core_type (lib/location.ml[471,15159+39]..[471,15159+74])
                    Ptyp_arrow
                    Labelled "end_pos"
                    core_type (lib/location.ml[471,15159+47]..[471,15159+55])
                      Ptyp_constr "position" (lib/location.ml[471,15159+47]..[471,15159+55])
                      []
                    core_type (lib/location.ml[471,15159+59]..[471,15159+74])
                      Ptyp_constr "list" (lib/location.ml[471,15159+70]..[471,15159+74])
                      [
                        core_type (lib/location.ml[471,15159+59]..[471,15159+69])
                          Ptyp_constr "input_line" (lib/location.ml[471,15159+59]..[471,15159+69])
                          []
                      ]
            Pparam_val (lib/location.ml[472,15235+4]..[472,15235+21])
              Optional "max_lines"
              Some
                expression (lib/location.ml[472,15235+18]..[472,15235+20])
                  Pexp_constant PConst_int (10,None)
              pattern (lib/location.ml[472,15235+6]..[472,15235+15])
                Ppat_var "max_lines" (lib/location.ml[472,15235+6]..[472,15235+15])
            Pparam_val (lib/location.ml[473,15257+4]..[473,15257+17])
              Nolabel
              None
              pattern (lib/location.ml[473,15257+4]..[473,15257+17])
                Ppat_var "highlight_tag" (lib/location.ml[473,15257+4]..[473,15257+17])
            Pparam_val (lib/location.ml[474,15275+4]..[474,15275+8])
              Nolabel
              None
              pattern (lib/location.ml[474,15275+4]..[474,15275+8])
                Ppat_var "locs" (lib/location.ml[474,15275+4]..[474,15275+8])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[476,15288+2]..[540,17836+27])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/location.ml[476,15288+6]..[476,15288+10])
                    Ppat_var "iset" (lib/location.ml[476,15288+6]..[476,15288+10])
                  expression (lib/location.ml[476,15288+13]..[480,15500+8])
                    Pexp_apply
                    expression (lib/location.ml[476,15288+31]..[476,15288+33])
                      Pexp_ident "@@" (lib/location.ml[476,15288+31]..[476,15288+33])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[476,15288+13]..[476,15288+30])
                          Pexp_ident "ISet.of_intervals" (lib/location.ml[476,15288+13]..[476,15288+30])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[476,15288+34]..[480,15500+8])
                          Pexp_apply
                          expression (lib/location.ml[476,15288+34]..[476,15288+49])
                            Pexp_ident "List.filter_map" (lib/location.ml[476,15288+34]..[476,15288+49])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[476,15288+50]..[480,15500+3])
                                Pexp_function
                                [
                                  Pparam_val (lib/location.ml[476,15288+55]..[476,15288+58])
                                    Nolabel
                                    None
                                    pattern (lib/location.ml[476,15288+55]..[476,15288+58])
                                      Ppat_var "loc" (lib/location.ml[476,15288+55]..[476,15288+58])
                                ]
                                None
                                Pfunction_body
                                  expression (lib/location.ml[477,15350+4]..[479,15447+52])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/location.ml[477,15350+8]..[477,15350+12])
                                          Ppat_tuple
                                          [
                                            pattern (lib/location.ml[477,15350+8]..[477,15350+9])
                                              Ppat_var "s" (lib/location.ml[477,15350+8]..[477,15350+9])
                                            pattern (lib/location.ml[477,15350+11]..[477,15350+12])
                                              Ppat_var "e" (lib/location.ml[477,15350+11]..[477,15350+12])
                                          ]
                                        expression (lib/location.ml[477,15350+15]..[477,15350+41])
                                          Pexp_tuple
                                          [
                                            expression (lib/location.ml[477,15350+15]..[477,15350+28])
                                              Pexp_field
                                              expression (lib/location.ml[477,15350+15]..[477,15350+18])
                                                Pexp_ident "loc" (lib/location.ml[477,15350+15]..[477,15350+18])
                                              "loc_start" (lib/location.ml[477,15350+19]..[477,15350+28])
                                            expression (lib/location.ml[477,15350+30]..[477,15350+41])
                                              Pexp_field
                                              expression (lib/location.ml[477,15350+30]..[477,15350+33])
                                                Pexp_ident "loc" (lib/location.ml[477,15350+30]..[477,15350+33])
                                              "loc_end" (lib/location.ml[477,15350+34]..[477,15350+41])
                                          ]
                                    ]
                                    expression (lib/location.ml[478,15395+4]..[479,15447+52])
                                      Pexp_ifthenelse
                                      expression (lib/location.ml[478,15395+7]..[478,15395+41])
                                        Pexp_apply
                                        expression (lib/location.ml[478,15395+23]..[478,15395+25])
                                          Pexp_ident "||" (lib/location.ml[478,15395+23]..[478,15395+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[478,15395+7]..[478,15395+22])
                                              Pexp_apply
                                              expression (lib/location.ml[478,15395+18]..[478,15395+19])
                                                Pexp_ident "=" (lib/location.ml[478,15395+18]..[478,15395+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[478,15395+7]..[478,15395+17])
                                                    Pexp_field
                                                    expression (lib/location.ml[478,15395+7]..[478,15395+8])
                                                      Pexp_ident "s" (lib/location.ml[478,15395+7]..[478,15395+8])
                                                    "pos_cnum" (lib/location.ml[478,15395+9]..[478,15395+17])
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[478,15395+20]..[478,15395+22])
                                                    Pexp_constant PConst_int (-1,None)
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[478,15395+26]..[478,15395+41])
                                              Pexp_apply
                                              expression (lib/location.ml[478,15395+37]..[478,15395+38])
                                                Pexp_ident "=" (lib/location.ml[478,15395+37]..[478,15395+38])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[478,15395+26]..[478,15395+36])
                                                    Pexp_field
                                                    expression (lib/location.ml[478,15395+26]..[478,15395+27])
                                                      Pexp_ident "e" (lib/location.ml[478,15395+26]..[478,15395+27])
                                                    "pos_cnum" (lib/location.ml[478,15395+28]..[478,15395+36])
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[478,15395+39]..[478,15395+41])
                                                    Pexp_constant PConst_int (-1,None)
                                              ]
                                        ]
                                      expression (lib/location.ml[478,15395+47]..[478,15395+51])
                                        Pexp_construct "None" (lib/location.ml[478,15395+47]..[478,15395+51])
                                        None
                                      Some
                                        expression (lib/location.ml[479,15447+9]..[479,15447+52])
                                          Pexp_construct "Some" (lib/location.ml[479,15447+9]..[479,15447+13])
                                          Some
                                            expression (lib/location.ml[479,15447+14]..[479,15447+52])
                                              Pexp_tuple
                                              [
                                                expression (lib/location.ml[479,15447+15]..[479,15447+30])
                                                  Pexp_tuple
                                                  [
                                                    expression (lib/location.ml[479,15447+16]..[479,15447+17])
                                                      Pexp_ident "s" (lib/location.ml[479,15447+16]..[479,15447+17])
                                                    expression (lib/location.ml[479,15447+19]..[479,15447+29])
                                                      Pexp_field
                                                      expression (lib/location.ml[479,15447+19]..[479,15447+20])
                                                        Pexp_ident "s" (lib/location.ml[479,15447+19]..[479,15447+20])
                                                      "pos_cnum" (lib/location.ml[479,15447+21]..[479,15447+29])
                                                  ]
                                                expression (lib/location.ml[479,15447+32]..[479,15447+51])
                                                  Pexp_tuple
                                                  [
                                                    expression (lib/location.ml[479,15447+33]..[479,15447+34])
                                                      Pexp_ident "e" (lib/location.ml[479,15447+33]..[479,15447+34])
                                                    expression (lib/location.ml[479,15447+36]..[479,15447+50])
                                                      Pexp_apply
                                                      expression (lib/location.ml[479,15447+47]..[479,15447+48])
                                                        Pexp_ident "-" (lib/location.ml[479,15447+47]..[479,15447+48])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[479,15447+36]..[479,15447+46])
                                                            Pexp_field
                                                            expression (lib/location.ml[479,15447+36]..[479,15447+37])
                                                              Pexp_ident "e" (lib/location.ml[479,15447+36]..[479,15447+37])
                                                            "pos_cnum" (lib/location.ml[479,15447+38]..[479,15447+46])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[479,15447+49]..[479,15447+50])
                                                            Pexp_constant PConst_int (1,None)
                                                      ]
                                                  ]
                                              ]
                            <arg>
                            Nolabel
                              expression (lib/location.ml[480,15500+4]..[480,15500+8])
                                Pexp_ident "locs" (lib/location.ml[480,15500+4]..[480,15500+8])
                          ]
                    ]
              ]
              expression (lib/location.ml[481,15512+2]..[540,17836+27])
                Pexp_match
                expression (lib/location.ml[481,15512+8]..[481,15512+25])
                  Pexp_apply
                  expression (lib/location.ml[481,15512+8]..[481,15512+20])
                    Pexp_ident "ISet.extrema" (lib/location.ml[481,15512+8]..[481,15512+20])
                  [
                    <arg>
                    Nolabel
                      expression (lib/location.ml[481,15512+21]..[481,15512+25])
                        Pexp_ident "iset" (lib/location.ml[481,15512+21]..[481,15512+25])
                  ]
                [
                  <case>
                    pattern (lib/location.ml[482,15543+4]..[482,15543+8])
                      Ppat_construct "None" (lib/location.ml[482,15543+4]..[482,15543+8])
                      None
                    expression (lib/location.ml[482,15543+12]..[482,15543+14])
                      Pexp_construct "()" (lib/location.ml[482,15543+12]..[482,15543+14])
                      None
                  <case>
                    pattern (lib/location.ml[483,15558+4]..[483,15558+40])
                      Ppat_construct "Some" (lib/location.ml[483,15558+4]..[483,15558+8])
                      Some
                        []
                        pattern (lib/location.ml[483,15558+9]..[483,15558+40])
                          Ppat_tuple
                          [
                            pattern (lib/location.ml[483,15558+10]..[483,15558+23])
                              Ppat_tuple
                              [
                                pattern (lib/location.ml[483,15558+11]..[483,15558+19])
                                  Ppat_var "leftmost" (lib/location.ml[483,15558+11]..[483,15558+19])
                                pattern (lib/location.ml[483,15558+21]..[483,15558+22])
                                  Ppat_any
                              ]
                            pattern (lib/location.ml[483,15558+25]..[483,15558+39])
                              Ppat_tuple
                              [
                                pattern (lib/location.ml[483,15558+26]..[483,15558+35])
                                  Ppat_var "rightmost" (lib/location.ml[483,15558+26]..[483,15558+35])
                                pattern (lib/location.ml[483,15558+37]..[483,15558+38])
                                  Ppat_any
                              ]
                          ]
                    expression (lib/location.ml[484,15602+6]..[540,17836+27])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/location.ml[484,15602+10]..[484,15602+15])
                            Ppat_var "lines" (lib/location.ml[484,15602+10]..[484,15602+15])
                          expression (lib/location.ml[485,15620+8]..[498,16169+22])
                            Pexp_apply
                            expression (lib/location.ml[495,16038+8]..[495,16038+10])
                              Pexp_ident "|>" (lib/location.ml[495,16038+8]..[495,16038+10])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[485,15620+8]..[494,16008+29])
                                  Pexp_apply
                                  expression (lib/location.ml[494,16008+8]..[494,16008+10])
                                    Pexp_ident "|>" (lib/location.ml[494,16008+8]..[494,16008+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[485,15620+8]..[493,15981+26])
                                        Pexp_apply
                                        expression (lib/location.ml[486,15677+8]..[486,15677+10])
                                          Pexp_ident "|>" (lib/location.ml[486,15677+8]..[486,15677+10])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[485,15620+8]..[485,15620+56])
                                              Pexp_apply
                                              expression (lib/location.ml[485,15620+8]..[485,15620+17])
                                                Pexp_ident "get_lines" (lib/location.ml[485,15620+8]..[485,15620+17])
                                              [
                                                <arg>
                                                Labelled "start_pos"
                                                  expression (lib/location.ml[485,15620+29]..[485,15620+37])
                                                    Pexp_ident "leftmost" (lib/location.ml[485,15620+29]..[485,15620+37])
                                                <arg>
                                                Labelled "end_pos"
                                                  expression (lib/location.ml[485,15620+47]..[485,15620+56])
                                                    Pexp_ident "rightmost" (lib/location.ml[485,15620+47]..[485,15620+56])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[486,15677+11]..[493,15981+26])
                                              Pexp_apply
                                              expression (lib/location.ml[486,15677+11]..[486,15677+19])
                                                Pexp_ident "List.map" (lib/location.ml[486,15677+11]..[486,15677+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[486,15677+20]..[493,15981+26])
                                                    Pexp_function
                                                    [
                                                      Pparam_val (lib/location.ml[486,15677+25]..[486,15677+54])
                                                        Nolabel
                                                        None
                                                        pattern (lib/location.ml[486,15677+25]..[486,15677+54])
                                                          Ppat_alias "line" (lib/location.ml[486,15677+49]..[486,15677+53])
                                                          pattern (lib/location.ml[486,15677+26]..[486,15677+45])
                                                            Ppat_record Closed
                                                            [
                                                              "text" (lib/location.ml[486,15677+28]..[486,15677+32]) ghost
                                                                pattern (lib/location.ml[486,15677+28]..[486,15677+32])
                                                                  Ppat_var "text" (lib/location.ml[486,15677+28]..[486,15677+32])
                                                              "start_pos" (lib/location.ml[486,15677+34]..[486,15677+43]) ghost
                                                                pattern (lib/location.ml[486,15677+34]..[486,15677+43])
                                                                  Ppat_var "start_pos" (lib/location.ml[486,15677+34]..[486,15677+43])
                                                            ]
                                                    ]
                                                    None
                                                    Pfunction_body
                                                      expression (lib/location.ml[487,15735+10]..[493,15981+25])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (lib/location.ml[487,15735+14]..[487,15735+21])
                                                              Ppat_var "end_pos" (lib/location.ml[487,15735+14]..[487,15735+21])
                                                            expression (lib/location.ml[487,15735+24]..[487,15735+58])
                                                              Pexp_apply
                                                              expression (lib/location.ml[487,15735+55]..[487,15735+56])
                                                                Pexp_ident "-" (lib/location.ml[487,15735+55]..[487,15735+56])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/location.ml[487,15735+24]..[487,15735+54])
                                                                    Pexp_apply
                                                                    expression (lib/location.ml[487,15735+34]..[487,15735+35])
                                                                      Pexp_ident "+" (lib/location.ml[487,15735+34]..[487,15735+35])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lib/location.ml[487,15735+24]..[487,15735+33])
  Pexp_ident "start_pos" (lib/location.ml[487,15735+24]..[487,15735+33])
                                                                      <arg>
                                                                      Nolabel
expression (lib/location.ml[487,15735+36]..[487,15735+54])
  Pexp_apply
  expression (lib/location.ml[487,15735+36]..[487,15735+49])
    Pexp_ident "String.length" (lib/location.ml[487,15735+36]..[487,15735+49])
  [
    <arg>
    Nolabel
      expression (lib/location.ml[487,15735+50]..[487,15735+54])
        Pexp_ident "text" (lib/location.ml[487,15735+50]..[487,15735+54])
  ]
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/location.ml[487,15735+57]..[487,15735+58])
                                                                    Pexp_constant PConst_int (1,None)
                                                              ]
                                                        ]
                                                        expression (lib/location.ml[488,15797+10]..[493,15981+25])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (lib/location.ml[488,15797+14]..[488,15797+21])
                                                                Ppat_var "line_nb" (lib/location.ml[488,15797+14]..[488,15797+21])
                                                              expression (lib/location.ml[489,15821+12]..[491,15923+44])
                                                                Pexp_match
                                                                expression (lib/location.ml[489,15821+18]..[489,15821+69])
                                                                  Pexp_apply
                                                                  expression (lib/location.ml[489,15821+18]..[489,15821+36])
                                                                    Pexp_ident "ISet.find_bound_in" (lib/location.ml[489,15821+18]..[489,15821+36])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (lib/location.ml[489,15821+37]..[489,15821+41])
Pexp_ident "iset" (lib/location.ml[489,15821+37]..[489,15821+41])
                                                                    <arg>
                                                                    Labelled "range"
                                                                      expression (lib/location.ml[489,15821+49]..[489,15821+69])
Pexp_tuple
[
  expression (lib/location.ml[489,15821+50]..[489,15821+59])
    Pexp_ident "start_pos" (lib/location.ml[489,15821+50]..[489,15821+59])
  expression (lib/location.ml[489,15821+61]..[489,15821+68])
    Pexp_ident "end_pos" (lib/location.ml[489,15821+61]..[489,15821+68])
]
                                                                  ]
                                                                [
                                                                  <case>
                                                                    pattern (lib/location.ml[490,15896+14]..[490,15896+18])
                                                                      Ppat_construct "None" (lib/location.ml[490,15896+14]..[490,15896+18])
                                                                      None
                                                                    expression (lib/location.ml[490,15896+22]..[490,15896+26])
                                                                      Pexp_construct "None" (lib/location.ml[490,15896+22]..[490,15896+26])
                                                                      None
                                                                  <case>
                                                                    pattern (lib/location.ml[491,15923+14]..[491,15923+25])
                                                                      Ppat_construct "Some" (lib/location.ml[491,15923+14]..[491,15923+18])
                                                                      Some
[]
pattern (lib/location.ml[491,15923+19]..[491,15923+25])
  Ppat_tuple
  [
    pattern (lib/location.ml[491,15923+20]..[491,15923+21])
      Ppat_var "p" (lib/location.ml[491,15923+20]..[491,15923+21])
    pattern (lib/location.ml[491,15923+23]..[491,15923+24])
      Ppat_any
  ]
                                                                    expression (lib/location.ml[491,15923+29]..[491,15923+44])
                                                                      Pexp_construct "Some" (lib/location.ml[491,15923+29]..[491,15923+33])
                                                                      Some
expression (lib/location.ml[491,15923+34]..[491,15923+44])
  Pexp_field
  expression (lib/location.ml[491,15923+34]..[491,15923+35])
    Pexp_ident "p" (lib/location.ml[491,15923+34]..[491,15923+35])
  "pos_lnum" (lib/location.ml[491,15923+36]..[491,15923+44])
                                                                ]
                                                          ]
                                                          expression (lib/location.ml[493,15981+10]..[493,15981+25])
                                                            Pexp_tuple
                                                            [
                                                              expression (lib/location.ml[493,15981+11]..[493,15981+18])
                                                                Pexp_ident "line_nb" (lib/location.ml[493,15981+11]..[493,15981+18])
                                                              expression (lib/location.ml[493,15981+20]..[493,15981+24])
                                                                Pexp_ident "line" (lib/location.ml[493,15981+20]..[493,15981+24])
                                                            ]
                                              ]
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[494,16008+11]..[494,16008+29])
                                        Pexp_ident "infer_line_numbers" (lib/location.ml[494,16008+11]..[494,16008+29])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/location.ml[495,16038+11]..[498,16169+22])
                                  Pexp_apply
                                  expression (lib/location.ml[495,16038+11]..[495,16038+19])
                                    Pexp_ident "List.map" (lib/location.ml[495,16038+11]..[495,16038+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[495,16038+20]..[498,16169+22])
                                        Pexp_function
                                        [
                                          Pparam_val (lib/location.ml[495,16038+25]..[495,16038+52])
                                            Nolabel
                                            None
                                            pattern (lib/location.ml[495,16038+25]..[495,16038+52])
                                              Ppat_tuple
                                              [
                                                pattern (lib/location.ml[495,16038+26]..[495,16038+30])
                                                  Ppat_var "lnum" (lib/location.ml[495,16038+26]..[495,16038+30])
                                                pattern (lib/location.ml[495,16038+32]..[495,16038+51])
                                                  Ppat_record Closed
                                                  [
                                                    "text" (lib/location.ml[495,16038+34]..[495,16038+38]) ghost
                                                      pattern (lib/location.ml[495,16038+34]..[495,16038+38])
                                                        Ppat_var "text" (lib/location.ml[495,16038+34]..[495,16038+38])
                                                    "start_pos" (lib/location.ml[495,16038+40]..[495,16038+49]) ghost
                                                      pattern (lib/location.ml[495,16038+40]..[495,16038+49])
                                                        Ppat_var "start_pos" (lib/location.ml[495,16038+40]..[495,16038+49])
                                                  ]
                                              ]
                                        ]
                                        None
                                        Pfunction_body
                                          expression (lib/location.ml[496,16094+10]..[498,16169+21])
                                            Pexp_tuple
                                            [
                                              expression (lib/location.ml[496,16094+11]..[496,16094+15])
                                                Pexp_ident "text" (lib/location.ml[496,16094+11]..[496,16094+15])
                                              expression (lib/location.ml[497,16111+11]..[497,16111+56])
                                                Pexp_apply
                                                expression (lib/location.ml[497,16111+11]..[497,16111+22])
                                                  Pexp_ident "Option.fold" (lib/location.ml[497,16111+11]..[497,16111+22])
                                                [
                                                  <arg>
                                                  Labelled "some"
                                                    expression (lib/location.ml[497,16111+29]..[497,16111+42])
                                                      Pexp_ident "Int.to_string" (lib/location.ml[497,16111+29]..[497,16111+42])
                                                  <arg>
                                                  Labelled "none"
                                                    expression (lib/location.ml[497,16111+49]..[497,16111+51])
                                                      Pexp_constant PConst_string("",(lib/location.ml[497,16111+50]..[497,16111+50]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[497,16111+52]..[497,16111+56])
                                                      Pexp_ident "lnum" (lib/location.ml[497,16111+52]..[497,16111+56])
                                                ]
                                              expression (lib/location.ml[498,16169+11]..[498,16169+20])
                                                Pexp_ident "start_pos" (lib/location.ml[498,16169+11]..[498,16169+20])
                                            ]
                                  ]
                            ]
                      ]
                      expression (lib/location.ml[500,16201+4]..[540,17836+27])
                        Pexp_sequence
                        expression (lib/location.ml[500,16201+4]..[500,16201+30])
                          Pexp_apply
                          expression (lib/location.ml[500,16201+4]..[500,16201+18])
                            Pexp_ident "Format.fprintf" (lib/location.ml[500,16201+4]..[500,16201+18])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[500,16201+19]..[500,16201+22])
                                Pexp_ident "ppf" (lib/location.ml[500,16201+19]..[500,16201+22])
                            <arg>
                            Nolabel
                              expression (lib/location.ml[500,16201+23]..[500,16201+30])
                                Pexp_constant PConst_string("@[<v>",(lib/location.ml[500,16201+24]..[500,16201+29]),None)
                          ]
                        expression (lib/location.ml[501,16233+4]..[540,17836+27])
                          Pexp_sequence
                          expression (lib/location.ml[501,16233+4]..[539,17827+7])
                            Pexp_match
                            expression (lib/location.ml[501,16233+16]..[501,16233+21])
                              Pexp_ident "lines" (lib/location.ml[501,16233+16]..[501,16233+21])
                            [
                              <case>
                                pattern (lib/location.ml[502,16260+6]..[502,16260+23])
                                  Ppat_or
                                  pattern (lib/location.ml[502,16260+6]..[502,16260+8])
                                    Ppat_construct "[]" (lib/location.ml[502,16260+6]..[502,16260+8])
                                    None
                                  pattern (lib/location.ml[502,16260+11]..[502,16260+23])
                                    Ppat_construct "::" (lib/location.ml[502,16260+12]..[502,16260+23]) ghost
                                    Some
                                      []
                                      pattern (lib/location.ml[502,16260+12]..[502,16260+23]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (lib/location.ml[502,16260+12]..[502,16260+22])
                                            Ppat_tuple
                                            [
                                              pattern (lib/location.ml[502,16260+13]..[502,16260+15])
                                                Ppat_constant PConst_string("",(lib/location.ml[502,16260+14]..[502,16260+14]),None)
                                              pattern (lib/location.ml[502,16260+17]..[502,16260+18])
                                                Ppat_any
                                              pattern (lib/location.ml[502,16260+20]..[502,16260+21])
                                                Ppat_any
                                            ]
                                          pattern (lib/location.ml[502,16260+22]..[502,16260+23]) ghost
                                            Ppat_construct "[]" (lib/location.ml[502,16260+22]..[502,16260+23]) ghost
                                            None
                                        ]
                                expression (lib/location.ml[502,16260+27]..[502,16260+29])
                                  Pexp_construct "()" (lib/location.ml[502,16260+27]..[502,16260+29])
                                  None
                              <case>
                                pattern (lib/location.ml[503,16290+6]..[503,16290+40])
                                  Ppat_construct "::" (lib/location.ml[503,16290+7]..[503,16290+40]) ghost
                                  Some
                                    []
                                    pattern (lib/location.ml[503,16290+7]..[503,16290+40]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lib/location.ml[503,16290+7]..[503,16290+39])
                                          Ppat_tuple
                                          [
                                            pattern (lib/location.ml[503,16290+8]..[503,16290+12])
                                              Ppat_var "line" (lib/location.ml[503,16290+8]..[503,16290+12])
                                            pattern (lib/location.ml[503,16290+14]..[503,16290+21])
                                              Ppat_var "line_nb" (lib/location.ml[503,16290+14]..[503,16290+21])
                                            pattern (lib/location.ml[503,16290+23]..[503,16290+38])
                                              Ppat_var "line_start_cnum" (lib/location.ml[503,16290+23]..[503,16290+38])
                                          ]
                                        pattern (lib/location.ml[503,16290+39]..[503,16290+40]) ghost
                                          Ppat_construct "[]" (lib/location.ml[503,16290+39]..[503,16290+40]) ghost
                                          None
                                      ]
                                expression (lib/location.ml[505,16366+8]..[529,17455+33])
                                  Pexp_sequence
                                  expression (lib/location.ml[505,16366+8]..[505,16366+51])
                                    Pexp_apply
                                    expression (lib/location.ml[505,16366+8]..[505,16366+22])
                                      Pexp_ident "Format.fprintf" (lib/location.ml[505,16366+8]..[505,16366+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[505,16366+23]..[505,16366+26])
                                          Pexp_ident "ppf" (lib/location.ml[505,16366+23]..[505,16366+26])
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[505,16366+27]..[505,16366+38])
                                          Pexp_constant PConst_string("%s | %s@,",(lib/location.ml[505,16366+28]..[505,16366+37]),None)
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[505,16366+39]..[505,16366+46])
                                          Pexp_ident "line_nb" (lib/location.ml[505,16366+39]..[505,16366+46])
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[505,16366+47]..[505,16366+51])
                                          Pexp_ident "line" (lib/location.ml[505,16366+47]..[505,16366+51])
                                    ]
                                  expression (lib/location.ml[506,16419+8]..[529,17455+33])
                                    Pexp_sequence
                                    expression (lib/location.ml[506,16419+8]..[506,16419+62])
                                      Pexp_apply
                                      expression (lib/location.ml[506,16419+8]..[506,16419+22])
                                        Pexp_ident "Format.fprintf" (lib/location.ml[506,16419+8]..[506,16419+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[506,16419+23]..[506,16419+26])
                                            Pexp_ident "ppf" (lib/location.ml[506,16419+23]..[506,16419+26])
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[506,16419+27]..[506,16419+35])
                                            Pexp_constant PConst_string("%*s   ",(lib/location.ml[506,16419+28]..[506,16419+34]),None)
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[506,16419+36]..[506,16419+59])
                                            Pexp_apply
                                            expression (lib/location.ml[506,16419+37]..[506,16419+50])
                                              Pexp_ident "String.length" (lib/location.ml[506,16419+37]..[506,16419+50])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[506,16419+51]..[506,16419+58])
                                                  Pexp_ident "line_nb" (lib/location.ml[506,16419+51]..[506,16419+58])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[506,16419+60]..[506,16419+62])
                                            Pexp_constant PConst_string("",(lib/location.ml[506,16419+61]..[506,16419+61]),None)
                                      ]
                                    expression (lib/location.ml[515,16792+8]..[529,17455+33])
                                      Pexp_sequence
                                      expression (lib/location.ml[515,16792+8]..[528,17441+12])
                                        Pexp_for Up
                                        pattern (lib/location.ml[515,16792+12]..[515,16792+13])
                                          Ppat_var "i" (lib/location.ml[515,16792+12]..[515,16792+13])
                                        expression (lib/location.ml[515,16792+16]..[515,16792+17])
                                          Pexp_constant PConst_int (0,None)
                                        expression (lib/location.ml[515,16792+21]..[515,16792+61])
                                          Pexp_apply
                                          expression (lib/location.ml[515,16792+58]..[515,16792+59])
                                            Pexp_ident "-" (lib/location.ml[515,16792+58]..[515,16792+59])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[515,16792+21]..[515,16792+57])
                                                Pexp_apply
                                                expression (lib/location.ml[515,16792+40]..[515,16792+41])
                                                  Pexp_ident "-" (lib/location.ml[515,16792+40]..[515,16792+41])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[515,16792+21]..[515,16792+39])
                                                      Pexp_field
                                                      expression (lib/location.ml[515,16792+21]..[515,16792+30])
                                                        Pexp_ident "rightmost" (lib/location.ml[515,16792+21]..[515,16792+30])
                                                      "pos_cnum" (lib/location.ml[515,16792+31]..[515,16792+39])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[515,16792+42]..[515,16792+57])
                                                      Pexp_ident "line_start_cnum" (lib/location.ml[515,16792+42]..[515,16792+57])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[515,16792+60]..[515,16792+61])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                        expression (lib/location.ml[516,16857+10]..[527,17405+35])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/location.ml[516,16857+14]..[516,16857+17])
                                                Ppat_var "pos" (lib/location.ml[516,16857+14]..[516,16857+17])
                                              expression (lib/location.ml[516,16857+20]..[516,16857+39])
                                                Pexp_apply
                                                expression (lib/location.ml[516,16857+36]..[516,16857+37])
                                                  Pexp_ident "+" (lib/location.ml[516,16857+36]..[516,16857+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[516,16857+20]..[516,16857+35])
                                                      Pexp_ident "line_start_cnum" (lib/location.ml[516,16857+20]..[516,16857+35])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[516,16857+38]..[516,16857+39])
                                                      Pexp_ident "i" (lib/location.ml[516,16857+38]..[516,16857+39])
                                                ]
                                          ]
                                          expression (lib/location.ml[517,16900+10]..[527,17405+35])
                                            Pexp_sequence
                                            expression (lib/location.ml[517,16900+10]..[518,16950+53])
                                              Pexp_ifthenelse
                                              expression (lib/location.ml[517,16900+13]..[517,16900+44])
                                                Pexp_apply
                                                expression (lib/location.ml[517,16900+37]..[517,16900+39])
                                                  Pexp_ident "<>" (lib/location.ml[517,16900+37]..[517,16900+39])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[517,16900+13]..[517,16900+36])
                                                      Pexp_apply
                                                      expression (lib/location.ml[517,16900+13]..[517,16900+26])
                                                        Pexp_ident "ISet.is_start" (lib/location.ml[517,16900+13]..[517,16900+26])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[517,16900+27]..[517,16900+31])
                                                            Pexp_ident "iset" (lib/location.ml[517,16900+27]..[517,16900+31])
                                                        <arg>
                                                        Labelled "pos"
                                                          expression (lib/location.ml[517,16900+33]..[517,16900+36])
                                                            Pexp_ident "pos" (lib/location.ml[517,16900+33]..[517,16900+36])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[517,16900+40]..[517,16900+44])
                                                      Pexp_construct "None" (lib/location.ml[517,16900+40]..[517,16900+44])
                                                      None
                                                ]
                                              expression (lib/location.ml[518,16950+12]..[518,16950+53])
                                                Pexp_apply
                                                expression (lib/location.ml[518,16950+12]..[518,16950+26])
                                                  Pexp_ident "Format.fprintf" (lib/location.ml[518,16950+12]..[518,16950+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[518,16950+27]..[518,16950+30])
                                                      Pexp_ident "ppf" (lib/location.ml[518,16950+27]..[518,16950+30])
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[518,16950+31]..[518,16950+39])
                                                      Pexp_constant PConst_string("@{<%s>",(lib/location.ml[518,16950+32]..[518,16950+38]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[518,16950+40]..[518,16950+53])
                                                      Pexp_ident "highlight_tag" (lib/location.ml[518,16950+40]..[518,16950+53])
                                                ]
                                              None
                                            expression (lib/location.ml[519,17005+10]..[527,17405+35])
                                              Pexp_sequence
                                              expression (lib/location.ml[519,17005+10]..[525,17342+13])
                                                Pexp_ifthenelse
                                                expression (lib/location.ml[519,17005+13]..[519,17005+31])
                                                  Pexp_apply
                                                  expression (lib/location.ml[519,17005+13]..[519,17005+21])
                                                    Pexp_ident "ISet.mem" (lib/location.ml[519,17005+13]..[519,17005+21])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[519,17005+22]..[519,17005+26])
                                                        Pexp_ident "iset" (lib/location.ml[519,17005+22]..[519,17005+26])
                                                    <arg>
                                                    Labelled "pos"
                                                      expression (lib/location.ml[519,17005+28]..[519,17005+31])
                                                        Pexp_ident "pos" (lib/location.ml[519,17005+28]..[519,17005+31])
                                                  ]
                                                expression (lib/location.ml[519,17005+37]..[519,17005+65])
                                                  Pexp_apply
                                                  expression (lib/location.ml[519,17005+37]..[519,17005+57])
                                                    Pexp_ident "Format.pp_print_char" (lib/location.ml[519,17005+37]..[519,17005+57])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[519,17005+58]..[519,17005+61])
                                                        Pexp_ident "ppf" (lib/location.ml[519,17005+58]..[519,17005+61])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[519,17005+62]..[519,17005+65])
                                                        Pexp_constant PConst_char 5e
                                                  ]
                                                Some
                                                  expression (lib/location.ml[520,17071+15]..[525,17342+13])
                                                    Pexp_ifthenelse
                                                    expression (lib/location.ml[520,17071+18]..[520,17071+40])
                                                      Pexp_apply
                                                      expression (lib/location.ml[520,17071+20]..[520,17071+21])
                                                        Pexp_ident "<" (lib/location.ml[520,17071+20]..[520,17071+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[520,17071+18]..[520,17071+19])
                                                            Pexp_ident "i" (lib/location.ml[520,17071+18]..[520,17071+19])
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[520,17071+22]..[520,17071+40])
                                                            Pexp_apply
                                                            expression (lib/location.ml[520,17071+22]..[520,17071+35])
                                                              Pexp_ident "String.length" (lib/location.ml[520,17071+22]..[520,17071+35])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lib/location.ml[520,17071+36]..[520,17071+40])
                                                                  Pexp_ident "line" (lib/location.ml[520,17071+36]..[520,17071+40])
                                                            ]
                                                      ]
                                                    expression (lib/location.ml[520,17071+46]..[525,17342+13])
                                                      Pexp_ifthenelse
                                                      expression (lib/location.ml[523,17230+15]..[523,17230+30])
                                                        Pexp_apply
                                                        expression (lib/location.ml[523,17230+24]..[523,17230+25])
                                                          Pexp_ident "=" (lib/location.ml[523,17230+24]..[523,17230+25])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[523,17230+15]..[523,17230+23])
                                                              Pexp_apply
                                                              expression (lib/location.ml[523,17230+15]..[523,17230+23]) ghost
                                                                Pexp_ident "String.get" (lib/location.ml[523,17230+15]..[523,17230+23]) ghost
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/location.ml[523,17230+15]..[523,17230+19])
                                                                    Pexp_ident "line" (lib/location.ml[523,17230+15]..[523,17230+19])
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/location.ml[523,17230+21]..[523,17230+22])
                                                                    Pexp_ident "i" (lib/location.ml[523,17230+21]..[523,17230+22])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[523,17230+26]..[523,17230+30])
                                                              Pexp_constant PConst_char 09
                                                        ]
                                                      expression (lib/location.ml[523,17230+36]..[523,17230+65])
                                                        Pexp_apply
                                                        expression (lib/location.ml[523,17230+36]..[523,17230+56])
                                                          Pexp_ident "Format.pp_print_char" (lib/location.ml[523,17230+36]..[523,17230+56])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[523,17230+57]..[523,17230+60])
                                                              Pexp_ident "ppf" (lib/location.ml[523,17230+57]..[523,17230+60])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[523,17230+61]..[523,17230+65])
                                                              Pexp_constant PConst_char 09
                                                        ]
                                                      Some
                                                        expression (lib/location.ml[524,17296+17]..[524,17296+45])
                                                          Pexp_apply
                                                          expression (lib/location.ml[524,17296+17]..[524,17296+37])
                                                            Pexp_ident "Format.pp_print_char" (lib/location.ml[524,17296+17]..[524,17296+37])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/location.ml[524,17296+38]..[524,17296+41])
                                                                Pexp_ident "ppf" (lib/location.ml[524,17296+38]..[524,17296+41])
                                                            <arg>
                                                            Nolabel
                                                              expression (lib/location.ml[524,17296+42]..[524,17296+45])
                                                                Pexp_constant PConst_char 20
                                                          ]
                                                    None
                                              expression (lib/location.ml[526,17357+10]..[527,17405+35])
                                                Pexp_ifthenelse
                                                expression (lib/location.ml[526,17357+13]..[526,17357+42])
                                                  Pexp_apply
                                                  expression (lib/location.ml[526,17357+35]..[526,17357+37])
                                                    Pexp_ident "<>" (lib/location.ml[526,17357+35]..[526,17357+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[526,17357+13]..[526,17357+34])
                                                        Pexp_apply
                                                        expression (lib/location.ml[526,17357+13]..[526,17357+24])
                                                          Pexp_ident "ISet.is_end" (lib/location.ml[526,17357+13]..[526,17357+24])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[526,17357+25]..[526,17357+29])
                                                              Pexp_ident "iset" (lib/location.ml[526,17357+25]..[526,17357+29])
                                                          <arg>
                                                          Labelled "pos"
                                                            expression (lib/location.ml[526,17357+31]..[526,17357+34])
                                                              Pexp_ident "pos" (lib/location.ml[526,17357+31]..[526,17357+34])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[526,17357+38]..[526,17357+42])
                                                        Pexp_construct "None" (lib/location.ml[526,17357+38]..[526,17357+42])
                                                        None
                                                  ]
                                                expression (lib/location.ml[527,17405+12]..[527,17405+35])
                                                  Pexp_apply
                                                  expression (lib/location.ml[527,17405+12]..[527,17405+26])
                                                    Pexp_ident "Format.fprintf" (lib/location.ml[527,17405+12]..[527,17405+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[527,17405+27]..[527,17405+30])
                                                        Pexp_ident "ppf" (lib/location.ml[527,17405+27]..[527,17405+30])
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[527,17405+31]..[527,17405+35])
                                                        Pexp_constant PConst_string("@}",(lib/location.ml[527,17405+32]..[527,17405+34]),None)
                                                  ]
                                                None
                                      expression (lib/location.ml[529,17455+8]..[529,17455+33])
                                        Pexp_apply
                                        expression (lib/location.ml[529,17455+8]..[529,17455+22])
                                          Pexp_ident "Format.fprintf" (lib/location.ml[529,17455+8]..[529,17455+22])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[529,17455+23]..[529,17455+26])
                                              Pexp_ident "ppf" (lib/location.ml[529,17455+23]..[529,17455+26])
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[529,17455+27]..[529,17455+33])
                                              Pexp_constant PConst_string("@}@,",(lib/location.ml[529,17455+28]..[529,17455+32]),None)
                                        ]
                              <case>
                                pattern (lib/location.ml[530,17489+6]..[530,17489+7])
                                  Ppat_any
                                expression (lib/location.ml[532,17531+8]..[538,17811+15])
                                  Pexp_apply
                                  expression (lib/location.ml[533,17583+8]..[533,17583+10])
                                    Pexp_ident "@@" (lib/location.ml[533,17583+8]..[533,17583+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[532,17531+8]..[532,17531+51])
                                        Pexp_apply
                                        expression (lib/location.ml[532,17531+8]..[532,17531+27])
                                          Pexp_ident "Misc.pp_two_columns" (lib/location.ml[532,17531+8]..[532,17531+27])
                                        [
                                          <arg>
                                          Labelled "sep"
                                            expression (lib/location.ml[532,17531+33]..[532,17531+36])
                                              Pexp_constant PConst_string("|",(lib/location.ml[532,17531+34]..[532,17531+35]),None)
                                          <arg>
                                          Labelled "max_lines"
                                            expression (lib/location.ml[532,17531+38]..[532,17531+47])
                                              Pexp_ident "max_lines" (lib/location.ml[532,17531+38]..[532,17531+47])
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[532,17531+48]..[532,17531+51])
                                              Pexp_ident "ppf" (lib/location.ml[532,17531+48]..[532,17531+51])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[533,17583+11]..[538,17811+15])
                                        Pexp_apply
                                        expression (lib/location.ml[533,17583+11]..[533,17583+19])
                                          Pexp_ident "List.map" (lib/location.ml[533,17583+11]..[533,17583+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[533,17583+20]..[538,17811+9])
                                              Pexp_function
                                              [
                                                Pparam_val (lib/location.ml[533,17583+25]..[533,17583+57])
                                                  Nolabel
                                                  None
                                                  pattern (lib/location.ml[533,17583+25]..[533,17583+57])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lib/location.ml[533,17583+26]..[533,17583+30])
                                                        Ppat_var "line" (lib/location.ml[533,17583+26]..[533,17583+30])
                                                      pattern (lib/location.ml[533,17583+32]..[533,17583+39])
                                                        Ppat_var "line_nb" (lib/location.ml[533,17583+32]..[533,17583+39])
                                                      pattern (lib/location.ml[533,17583+41]..[533,17583+56])
                                                        Ppat_var "line_start_cnum" (lib/location.ml[533,17583+41]..[533,17583+56])
                                                    ]
                                              ]
                                              None
                                              Pfunction_body
                                                expression (lib/location.ml[534,17644+10]..[537,17785+25])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/location.ml[534,17644+14]..[534,17644+18])
                                                        Ppat_var "line" (lib/location.ml[534,17644+14]..[534,17644+18])
                                                      expression (lib/location.ml[534,17644+21]..[536,17765+16])
                                                        Pexp_apply
                                                        expression (lib/location.ml[534,17644+21]..[534,17644+32])
                                                          Pexp_ident "String.mapi" (lib/location.ml[534,17644+21]..[534,17644+32])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[534,17644+33]..[536,17765+11])
                                                              Pexp_function
                                                              [
                                                                Pparam_val (lib/location.ml[534,17644+38]..[534,17644+39])
                                                                  Nolabel
                                                                  None
                                                                  pattern (lib/location.ml[534,17644+38]..[534,17644+39])
                                                                    Ppat_var "i" (lib/location.ml[534,17644+38]..[534,17644+39])
                                                                Pparam_val (lib/location.ml[534,17644+40]..[534,17644+43])
                                                                  Nolabel
                                                                  None
                                                                  pattern (lib/location.ml[534,17644+40]..[534,17644+43])
                                                                    Ppat_var "car" (lib/location.ml[534,17644+40]..[534,17644+43])
                                                              ]
                                                              None
                                                              Pfunction_body
                                                                expression (lib/location.ml[535,17691+12]..[535,17691+73])
                                                                  Pexp_ifthenelse
                                                                  expression (lib/location.ml[535,17691+15]..[535,17691+55])
                                                                    Pexp_apply
                                                                    expression (lib/location.ml[535,17691+15]..[535,17691+23])
                                                                      Pexp_ident "ISet.mem" (lib/location.ml[535,17691+15]..[535,17691+23])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lib/location.ml[535,17691+24]..[535,17691+28])
  Pexp_ident "iset" (lib/location.ml[535,17691+24]..[535,17691+28])
                                                                      <arg>
                                                                      Labelled "pos"
expression (lib/location.ml[535,17691+34]..[535,17691+55])
  Pexp_apply
  expression (lib/location.ml[535,17691+51]..[535,17691+52])
    Pexp_ident "+" (lib/location.ml[535,17691+51]..[535,17691+52])
  [
    <arg>
    Nolabel
      expression (lib/location.ml[535,17691+35]..[535,17691+50])
        Pexp_ident "line_start_cnum" (lib/location.ml[535,17691+35]..[535,17691+50])
    <arg>
    Nolabel
      expression (lib/location.ml[535,17691+53]..[535,17691+54])
        Pexp_ident "i" (lib/location.ml[535,17691+53]..[535,17691+54])
  ]
                                                                    ]
                                                                  expression (lib/location.ml[535,17691+61]..[535,17691+64])
                                                                    Pexp_ident "car" (lib/location.ml[535,17691+61]..[535,17691+64])
                                                                  Some
                                                                    expression (lib/location.ml[535,17691+70]..[535,17691+73])
                                                                      Pexp_constant PConst_char 2e
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[536,17765+12]..[536,17765+16])
                                                              Pexp_ident "line" (lib/location.ml[536,17765+12]..[536,17765+16])
                                                        ]
                                                  ]
                                                  expression (lib/location.ml[537,17785+10]..[537,17785+25])
                                                    Pexp_tuple
                                                    [
                                                      expression (lib/location.ml[537,17785+11]..[537,17785+18])
                                                        Pexp_ident "line_nb" (lib/location.ml[537,17785+11]..[537,17785+18])
                                                      expression (lib/location.ml[537,17785+20]..[537,17785+24])
                                                        Pexp_ident "line" (lib/location.ml[537,17785+20]..[537,17785+24])
                                                    ]
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[538,17811+10]..[538,17811+15])
                                              Pexp_ident "lines" (lib/location.ml[538,17811+10]..[538,17811+15])
                                        ]
                                  ]
                            ]
                          expression (lib/location.ml[540,17836+4]..[540,17836+27])
                            Pexp_apply
                            expression (lib/location.ml[540,17836+4]..[540,17836+18])
                              Pexp_ident "Format.fprintf" (lib/location.ml[540,17836+4]..[540,17836+18])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[540,17836+19]..[540,17836+22])
                                  Pexp_ident "ppf" (lib/location.ml[540,17836+19]..[540,17836+22])
                              <arg>
                              Nolabel
                                expression (lib/location.ml[540,17836+23]..[540,17836+27])
                                  Pexp_constant PConst_string("@]",(lib/location.ml[540,17836+24]..[540,17836+26]),None)
                            ]
                ]
    ]
  structure_item (lib/location.ml[544,17867+0]..[579,18738+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[544,17867+4]..[544,17867+16])
          Ppat_var "lines_around" (lib/location.ml[544,17867+4]..[544,17867+16])
        expression (lib/location.ml[545,17884+4]..[579,18738+17]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[545,17884+4]..[545,17884+26])
              Labelled "start_pos"
              None
              pattern (lib/location.ml[545,17884+6]..[545,17884+25])
                Ppat_constraint
                pattern (lib/location.ml[545,17884+6]..[545,17884+15])
                  Ppat_var "start_pos" (lib/location.ml[545,17884+6]..[545,17884+15])
                core_type (lib/location.ml[545,17884+17]..[545,17884+25])
                  Ptyp_constr "position" (lib/location.ml[545,17884+17]..[545,17884+25])
                  []
            Pparam_val (lib/location.ml[545,17884+27]..[545,17884+47])
              Labelled "end_pos"
              None
              pattern (lib/location.ml[545,17884+29]..[545,17884+46])
                Ppat_constraint
                pattern (lib/location.ml[545,17884+29]..[545,17884+36])
                  Ppat_var "end_pos" (lib/location.ml[545,17884+29]..[545,17884+36])
                core_type (lib/location.ml[545,17884+38]..[545,17884+46])
                  Ptyp_constr "position" (lib/location.ml[545,17884+38]..[545,17884+46])
                  []
            Pparam_val (lib/location.ml[546,17932+4]..[546,17932+24])
              Labelled "seek"
              None
              pattern (lib/location.ml[546,17932+6]..[546,17932+23])
                Ppat_constraint
                pattern (lib/location.ml[546,17932+6]..[546,17932+10])
                  Ppat_var "seek" (lib/location.ml[546,17932+6]..[546,17932+10])
                core_type (lib/location.ml[546,17932+12]..[546,17932+23])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[546,17932+12]..[546,17932+15])
                    Ptyp_constr "int" (lib/location.ml[546,17932+12]..[546,17932+15])
                    []
                  core_type (lib/location.ml[546,17932+19]..[546,17932+23])
                    Ptyp_constr "unit" (lib/location.ml[546,17932+19]..[546,17932+23])
                    []
            Pparam_val (lib/location.ml[547,17957+4]..[547,17957+37])
              Labelled "read_char"
              None
              pattern (lib/location.ml[547,17957+6]..[547,17957+36])
                Ppat_constraint
                pattern (lib/location.ml[547,17957+6]..[547,17957+15])
                  Ppat_var "read_char" (lib/location.ml[547,17957+6]..[547,17957+15])
                core_type (lib/location.ml[547,17957+17]..[547,17957+36])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[547,17957+17]..[547,17957+21])
                    Ptyp_constr "unit" (lib/location.ml[547,17957+17]..[547,17957+21])
                    []
                  core_type (lib/location.ml[547,17957+25]..[547,17957+36])
                    Ptyp_constr "option" (lib/location.ml[547,17957+30]..[547,17957+36])
                    [
                      core_type (lib/location.ml[547,17957+25]..[547,17957+29])
                        Ptyp_constr "char" (lib/location.ml[547,17957+25]..[547,17957+29])
                        []
                    ]
          ]
          Some
            Pconstraint
              core_type (lib/location.ml[548,17996+2]..[548,17996+17])
                Ptyp_constr "list" (lib/location.ml[548,17996+13]..[548,17996+17])
                [
                  core_type (lib/location.ml[548,17996+2]..[548,17996+12])
                    Ptyp_constr "input_line" (lib/location.ml[548,17996+2]..[548,17996+12])
                    []
                ]
          Pfunction_body
            expression (lib/location.ml[550,18018+2]..[579,18738+17])
              Pexp_sequence
              expression (lib/location.ml[550,18018+2]..[550,18018+24])
                Pexp_apply
                expression (lib/location.ml[550,18018+2]..[550,18018+6])
                  Pexp_ident "seek" (lib/location.ml[550,18018+2]..[550,18018+6])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[550,18018+7]..[550,18018+24])
                      Pexp_field
                      expression (lib/location.ml[550,18018+7]..[550,18018+16])
                        Pexp_ident "start_pos" (lib/location.ml[550,18018+7]..[550,18018+16])
                      "pos_bol" (lib/location.ml[550,18018+17]..[550,18018+24])
                ]
              expression (lib/location.ml[551,18044+2]..[579,18738+17])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[551,18044+6]..[551,18044+11])
                      Ppat_var "lines" (lib/location.ml[551,18044+6]..[551,18044+11])
                    expression (lib/location.ml[551,18044+14]..[551,18044+20])
                      Pexp_apply
                      expression (lib/location.ml[551,18044+14]..[551,18044+17])
                        Pexp_ident "ref" (lib/location.ml[551,18044+14]..[551,18044+17])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[551,18044+18]..[551,18044+20])
                            Pexp_construct "[]" (lib/location.ml[551,18044+18]..[551,18044+20])
                            None
                      ]
                ]
                expression (lib/location.ml[552,18068+2]..[579,18738+17])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/location.ml[552,18068+6]..[552,18068+9])
                        Ppat_var "bol" (lib/location.ml[552,18068+6]..[552,18068+9])
                      expression (lib/location.ml[552,18068+12]..[552,18068+33])
                        Pexp_apply
                        expression (lib/location.ml[552,18068+12]..[552,18068+15])
                          Pexp_ident "ref" (lib/location.ml[552,18068+12]..[552,18068+15])
                        [
                          <arg>
                          Nolabel
                            expression (lib/location.ml[552,18068+16]..[552,18068+33])
                              Pexp_field
                              expression (lib/location.ml[552,18068+16]..[552,18068+25])
                                Pexp_ident "start_pos" (lib/location.ml[552,18068+16]..[552,18068+25])
                              "pos_bol" (lib/location.ml[552,18068+26]..[552,18068+33])
                        ]
                  ]
                  expression (lib/location.ml[553,18105+2]..[579,18738+17])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/location.ml[553,18105+6]..[553,18105+9])
                          Ppat_var "cur" (lib/location.ml[553,18105+6]..[553,18105+9])
                        expression (lib/location.ml[553,18105+12]..[553,18105+33])
                          Pexp_apply
                          expression (lib/location.ml[553,18105+12]..[553,18105+15])
                            Pexp_ident "ref" (lib/location.ml[553,18105+12]..[553,18105+15])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[553,18105+16]..[553,18105+33])
                                Pexp_field
                                expression (lib/location.ml[553,18105+16]..[553,18105+25])
                                  Pexp_ident "start_pos" (lib/location.ml[553,18105+16]..[553,18105+25])
                                "pos_bol" (lib/location.ml[553,18105+26]..[553,18105+33])
                          ]
                    ]
                    expression (lib/location.ml[554,18142+2]..[579,18738+17])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/location.ml[554,18142+6]..[554,18142+7])
                            Ppat_var "b" (lib/location.ml[554,18142+6]..[554,18142+7])
                          expression (lib/location.ml[554,18142+10]..[554,18142+26])
                            Pexp_apply
                            expression (lib/location.ml[554,18142+10]..[554,18142+23])
                              Pexp_ident "Buffer.create" (lib/location.ml[554,18142+10]..[554,18142+23])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[554,18142+24]..[554,18142+26])
                                  Pexp_constant PConst_int (80,None)
                            ]
                      ]
                      expression (lib/location.ml[555,18172+2]..[579,18738+17])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/location.ml[555,18172+6]..[555,18172+14])
                              Ppat_var "add_line" (lib/location.ml[555,18172+6]..[555,18172+14])
                            expression (lib/location.ml[555,18172+15]..[561,18353+7]) ghost
                              Pexp_function
                              [
                                Pparam_val (lib/location.ml[555,18172+15]..[555,18172+17])
                                  Nolabel
                                  None
                                  pattern (lib/location.ml[555,18172+15]..[555,18172+17])
                                    Ppat_construct "()" (lib/location.ml[555,18172+15]..[555,18172+17])
                                    None
                              ]
                              None
                              Pfunction_body
                                expression (lib/location.ml[556,18192+4]..[561,18353+7])
                                  Pexp_ifthenelse
                                  expression (lib/location.ml[556,18192+7]..[556,18192+18])
                                    Pexp_apply
                                    expression (lib/location.ml[556,18192+12]..[556,18192+13])
                                      Pexp_ident "<" (lib/location.ml[556,18192+12]..[556,18192+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[556,18192+7]..[556,18192+11])
                                          Pexp_apply
                                          expression (lib/location.ml[556,18192+7]..[556,18192+8])
                                            Pexp_ident "!" (lib/location.ml[556,18192+7]..[556,18192+8])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[556,18192+8]..[556,18192+11])
                                                Pexp_ident "bol" (lib/location.ml[556,18192+8]..[556,18192+11])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[556,18192+14]..[556,18192+18])
                                          Pexp_apply
                                          expression (lib/location.ml[556,18192+14]..[556,18192+15])
                                            Pexp_ident "!" (lib/location.ml[556,18192+14]..[556,18192+15])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[556,18192+15]..[556,18192+18])
                                                Pexp_ident "cur" (lib/location.ml[556,18192+15]..[556,18192+18])
                                          ]
                                    ]
                                  expression (lib/location.ml[556,18192+24]..[561,18353+7])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/location.ml[557,18222+10]..[557,18222+14])
                                          Ppat_var "text" (lib/location.ml[557,18222+10]..[557,18222+14])
                                        expression (lib/location.ml[557,18222+17]..[557,18222+34])
                                          Pexp_apply
                                          expression (lib/location.ml[557,18222+17]..[557,18222+32])
                                            Pexp_ident "Buffer.contents" (lib/location.ml[557,18222+17]..[557,18222+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[557,18222+33]..[557,18222+34])
                                                Pexp_ident "b" (lib/location.ml[557,18222+33]..[557,18222+34])
                                          ]
                                    ]
                                    expression (lib/location.ml[558,18260+6]..[560,18335+17])
                                      Pexp_sequence
                                      expression (lib/location.ml[558,18260+6]..[558,18260+20])
                                        Pexp_apply
                                        expression (lib/location.ml[558,18260+6]..[558,18260+18])
                                          Pexp_ident "Buffer.clear" (lib/location.ml[558,18260+6]..[558,18260+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[558,18260+19]..[558,18260+20])
                                              Pexp_ident "b" (lib/location.ml[558,18260+19]..[558,18260+20])
                                        ]
                                      expression (lib/location.ml[559,18282+6]..[560,18335+17])
                                        Pexp_sequence
                                        expression (lib/location.ml[559,18282+6]..[559,18282+51])
                                          Pexp_apply
                                          expression (lib/location.ml[559,18282+12]..[559,18282+14])
                                            Pexp_ident ":=" (lib/location.ml[559,18282+12]..[559,18282+14])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[559,18282+6]..[559,18282+11])
                                                Pexp_ident "lines" (lib/location.ml[559,18282+6]..[559,18282+11])
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[559,18282+15]..[559,18282+51])
                                                Pexp_construct "::" (lib/location.ml[559,18282+42]..[559,18282+44])
                                                Some
                                                  expression (lib/location.ml[559,18282+15]..[559,18282+51]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (lib/location.ml[559,18282+15]..[559,18282+41])
                                                        Pexp_record
                                                        [
                                                          "text" (lib/location.ml[559,18282+17]..[559,18282+21]) ghost
                                                            expression (lib/location.ml[559,18282+17]..[559,18282+21])
                                                              Pexp_ident "text" (lib/location.ml[559,18282+17]..[559,18282+21])
                                                          "start_pos" (lib/location.ml[559,18282+23]..[559,18282+32])
                                                            expression (lib/location.ml[559,18282+35]..[559,18282+39])
                                                              Pexp_apply
                                                              expression (lib/location.ml[559,18282+35]..[559,18282+36])
                                                                Pexp_ident "!" (lib/location.ml[559,18282+35]..[559,18282+36])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lib/location.ml[559,18282+36]..[559,18282+39])
                                                                    Pexp_ident "bol" (lib/location.ml[559,18282+36]..[559,18282+39])
                                                              ]
                                                        ]
                                                        None
                                                      expression (lib/location.ml[559,18282+45]..[559,18282+51])
                                                        Pexp_apply
                                                        expression (lib/location.ml[559,18282+45]..[559,18282+46])
                                                          Pexp_ident "!" (lib/location.ml[559,18282+45]..[559,18282+46])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[559,18282+46]..[559,18282+51])
                                                              Pexp_ident "lines" (lib/location.ml[559,18282+46]..[559,18282+51])
                                                        ]
                                                    ]
                                          ]
                                        expression (lib/location.ml[560,18335+6]..[560,18335+17])
                                          Pexp_apply
                                          expression (lib/location.ml[560,18335+10]..[560,18335+12])
                                            Pexp_ident ":=" (lib/location.ml[560,18335+10]..[560,18335+12])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[560,18335+6]..[560,18335+9])
                                                Pexp_ident "bol" (lib/location.ml[560,18335+6]..[560,18335+9])
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[560,18335+13]..[560,18335+17])
                                                Pexp_apply
                                                expression (lib/location.ml[560,18335+13]..[560,18335+14])
                                                  Pexp_ident "!" (lib/location.ml[560,18335+13]..[560,18335+14])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[560,18335+14]..[560,18335+17])
                                                      Pexp_ident "cur" (lib/location.ml[560,18335+14]..[560,18335+17])
                                                ]
                                          ]
                                  None
                        ]
                        expression (lib/location.ml[563,18366+2]..[579,18738+17])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (lib/location.ml[563,18366+10]..[563,18366+14])
                                Ppat_var "loop" (lib/location.ml[563,18366+10]..[563,18366+14])
                              expression (lib/location.ml[563,18366+15]..[576,18714+7]) ghost
                                Pexp_function
                                [
                                  Pparam_val (lib/location.ml[563,18366+15]..[563,18366+17])
                                    Nolabel
                                    None
                                    pattern (lib/location.ml[563,18366+15]..[563,18366+17])
                                      Ppat_construct "()" (lib/location.ml[563,18366+15]..[563,18366+17])
                                      None
                                ]
                                None
                                Pfunction_body
                                  expression (lib/location.ml[564,18386+4]..[576,18714+7])
                                    Pexp_ifthenelse
                                    expression (lib/location.ml[564,18386+7]..[564,18386+31])
                                      Pexp_apply
                                      expression (lib/location.ml[564,18386+12]..[564,18386+14])
                                        Pexp_ident ">=" (lib/location.ml[564,18386+12]..[564,18386+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[564,18386+7]..[564,18386+11])
                                            Pexp_apply
                                            expression (lib/location.ml[564,18386+7]..[564,18386+8])
                                              Pexp_ident "!" (lib/location.ml[564,18386+7]..[564,18386+8])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[564,18386+8]..[564,18386+11])
                                                  Pexp_ident "bol" (lib/location.ml[564,18386+8]..[564,18386+11])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[564,18386+15]..[564,18386+31])
                                            Pexp_field
                                            expression (lib/location.ml[564,18386+15]..[564,18386+22])
                                              Pexp_ident "end_pos" (lib/location.ml[564,18386+15]..[564,18386+22])
                                            "pos_cnum" (lib/location.ml[564,18386+23]..[564,18386+31])
                                      ]
                                    expression (lib/location.ml[564,18386+37]..[564,18386+39])
                                      Pexp_construct "()" (lib/location.ml[564,18386+37]..[564,18386+39])
                                      None
                                    Some
                                      expression (lib/location.ml[565,18426+9]..[576,18714+7])
                                        Pexp_match
                                        expression (lib/location.ml[566,18441+12]..[566,18441+24])
                                          Pexp_apply
                                          expression (lib/location.ml[566,18441+12]..[566,18441+21])
                                            Pexp_ident "read_char" (lib/location.ml[566,18441+12]..[566,18441+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[566,18441+22]..[566,18441+24])
                                                Pexp_construct "()" (lib/location.ml[566,18441+22]..[566,18441+24])
                                                None
                                          ]
                                        [
                                          <case>
                                            pattern (lib/location.ml[567,18471+8]..[567,18471+12])
                                              Ppat_construct "None" (lib/location.ml[567,18471+8]..[567,18471+12])
                                              None
                                            expression (lib/location.ml[569,18516+10]..[569,18516+21])
                                              Pexp_apply
                                              expression (lib/location.ml[569,18516+10]..[569,18516+18])
                                                Pexp_ident "add_line" (lib/location.ml[569,18516+10]..[569,18516+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/location.ml[569,18516+19]..[569,18516+21])
                                                    Pexp_construct "()" (lib/location.ml[569,18516+19]..[569,18516+21])
                                                    None
                                              ]
                                          <case>
                                            pattern (lib/location.ml[570,18538+8]..[570,18538+14])
                                              Ppat_construct "Some" (lib/location.ml[570,18538+8]..[570,18538+12])
                                              Some
                                                []
                                                pattern (lib/location.ml[570,18538+13]..[570,18538+14])
                                                  Ppat_var "c" (lib/location.ml[570,18538+13]..[570,18538+14])
                                            expression (lib/location.ml[571,18556+10]..[575,18668+45])
                                              Pexp_sequence
                                              expression (lib/location.ml[571,18556+10]..[571,18556+18])
                                                Pexp_apply
                                                expression (lib/location.ml[571,18556+10]..[571,18556+14])
                                                  Pexp_ident "incr" (lib/location.ml[571,18556+10]..[571,18556+14])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[571,18556+15]..[571,18556+18])
                                                      Pexp_ident "cur" (lib/location.ml[571,18556+15]..[571,18556+18])
                                                ]
                                              expression (lib/location.ml[572,18576+10]..[575,18668+45])
                                                Pexp_match
                                                expression (lib/location.ml[572,18576+16]..[572,18576+17])
                                                  Pexp_ident "c" (lib/location.ml[572,18576+16]..[572,18576+17])
                                                [
                                                  <case>
                                                    pattern (lib/location.ml[573,18599+12]..[573,18599+16])
                                                      Ppat_constant PConst_char 0d
                                                    expression (lib/location.ml[573,18599+20]..[573,18599+27])
                                                      Pexp_apply
                                                      expression (lib/location.ml[573,18599+20]..[573,18599+24])
                                                        Pexp_ident "loop" (lib/location.ml[573,18599+20]..[573,18599+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lib/location.ml[573,18599+25]..[573,18599+27])
                                                            Pexp_construct "()" (lib/location.ml[573,18599+25]..[573,18599+27])
                                                            None
                                                      ]
                                                  <case>
                                                    pattern (lib/location.ml[574,18627+12]..[574,18627+16])
                                                      Ppat_constant PConst_char 0a
                                                    expression (lib/location.ml[574,18627+20]..[574,18627+40])
                                                      Pexp_sequence
                                                      expression (lib/location.ml[574,18627+20]..[574,18627+31])
                                                        Pexp_apply
                                                        expression (lib/location.ml[574,18627+20]..[574,18627+28])
                                                          Pexp_ident "add_line" (lib/location.ml[574,18627+20]..[574,18627+28])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[574,18627+29]..[574,18627+31])
                                                              Pexp_construct "()" (lib/location.ml[574,18627+29]..[574,18627+31])
                                                              None
                                                        ]
                                                      expression (lib/location.ml[574,18627+33]..[574,18627+40])
                                                        Pexp_apply
                                                        expression (lib/location.ml[574,18627+33]..[574,18627+37])
                                                          Pexp_ident "loop" (lib/location.ml[574,18627+33]..[574,18627+37])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[574,18627+38]..[574,18627+40])
                                                              Pexp_construct "()" (lib/location.ml[574,18627+38]..[574,18627+40])
                                                              None
                                                        ]
                                                  <case>
                                                    pattern (lib/location.ml[575,18668+12]..[575,18668+13])
                                                      Ppat_any
                                                    expression (lib/location.ml[575,18668+17]..[575,18668+45])
                                                      Pexp_sequence
                                                      expression (lib/location.ml[575,18668+17]..[575,18668+36])
                                                        Pexp_apply
                                                        expression (lib/location.ml[575,18668+17]..[575,18668+32])
                                                          Pexp_ident "Buffer.add_char" (lib/location.ml[575,18668+17]..[575,18668+32])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[575,18668+33]..[575,18668+34])
                                                              Pexp_ident "b" (lib/location.ml[575,18668+33]..[575,18668+34])
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[575,18668+35]..[575,18668+36])
                                                              Pexp_ident "c" (lib/location.ml[575,18668+35]..[575,18668+36])
                                                        ]
                                                      expression (lib/location.ml[575,18668+38]..[575,18668+45])
                                                        Pexp_apply
                                                        expression (lib/location.ml[575,18668+38]..[575,18668+42])
                                                          Pexp_ident "loop" (lib/location.ml[575,18668+38]..[575,18668+42])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lib/location.ml[575,18668+43]..[575,18668+45])
                                                              Pexp_construct "()" (lib/location.ml[575,18668+43]..[575,18668+45])
                                                              None
                                                        ]
                                                ]
                                        ]
                          ]
                          expression (lib/location.ml[578,18727+2]..[579,18738+17])
                            Pexp_sequence
                            expression (lib/location.ml[578,18727+2]..[578,18727+9])
                              Pexp_apply
                              expression (lib/location.ml[578,18727+2]..[578,18727+6])
                                Pexp_ident "loop" (lib/location.ml[578,18727+2]..[578,18727+6])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[578,18727+7]..[578,18727+9])
                                    Pexp_construct "()" (lib/location.ml[578,18727+7]..[578,18727+9])
                                    None
                              ]
                            expression (lib/location.ml[579,18738+2]..[579,18738+17])
                              Pexp_apply
                              expression (lib/location.ml[579,18738+2]..[579,18738+10])
                                Pexp_ident "List.rev" (lib/location.ml[579,18738+2]..[579,18738+10])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[579,18738+11]..[579,18738+17])
                                    Pexp_apply
                                    expression (lib/location.ml[579,18738+11]..[579,18738+12])
                                      Pexp_ident "!" (lib/location.ml[579,18738+11]..[579,18738+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[579,18738+12]..[579,18738+17])
                                          Pexp_ident "lines" (lib/location.ml[579,18738+12]..[579,18738+17])
                                    ]
                              ]
    ]
  structure_item (lib/location.ml[582,18808+0]..[603,19536+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[582,18808+4]..[582,18808+28])
          Ppat_var "lines_around_from_lexbuf" (lib/location.ml[582,18808+4]..[582,18808+28])
        expression (lib/location.ml[583,18837+4]..[603,19536+5]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[583,18837+4]..[583,18837+26])
              Labelled "start_pos"
              None
              pattern (lib/location.ml[583,18837+6]..[583,18837+25])
                Ppat_constraint
                pattern (lib/location.ml[583,18837+6]..[583,18837+15])
                  Ppat_var "start_pos" (lib/location.ml[583,18837+6]..[583,18837+15])
                core_type (lib/location.ml[583,18837+17]..[583,18837+25])
                  Ptyp_constr "position" (lib/location.ml[583,18837+17]..[583,18837+25])
                  []
            Pparam_val (lib/location.ml[583,18837+27]..[583,18837+47])
              Labelled "end_pos"
              None
              pattern (lib/location.ml[583,18837+29]..[583,18837+46])
                Ppat_constraint
                pattern (lib/location.ml[583,18837+29]..[583,18837+36])
                  Ppat_var "end_pos" (lib/location.ml[583,18837+29]..[583,18837+36])
                core_type (lib/location.ml[583,18837+38]..[583,18837+46])
                  Ptyp_constr "position" (lib/location.ml[583,18837+38]..[583,18837+46])
                  []
            Pparam_val (lib/location.ml[584,18885+4]..[584,18885+16])
              Nolabel
              None
              pattern (lib/location.ml[584,18885+4]..[584,18885+16])
                Ppat_constraint
                pattern (lib/location.ml[584,18885+5]..[584,18885+7])
                  Ppat_var "lb" (lib/location.ml[584,18885+5]..[584,18885+7])
                core_type (lib/location.ml[584,18885+9]..[584,18885+15])
                  Ptyp_constr "lexbuf" (lib/location.ml[584,18885+9]..[584,18885+15])
                  []
          ]
          Some
            Pconstraint
              core_type (lib/location.ml[585,18903+2]..[585,18903+17])
                Ptyp_constr "list" (lib/location.ml[585,18903+13]..[585,18903+17])
                [
                  core_type (lib/location.ml[585,18903+2]..[585,18903+12])
                    Ptyp_constr "input_line" (lib/location.ml[585,18903+2]..[585,18903+12])
                    []
                ]
          Pfunction_body
            expression (lib/location.ml[588,19005+2]..[603,19536+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/location.ml[588,19005+6]..[588,19005+9])
                    Ppat_var "rel" (lib/location.ml[588,19005+6]..[588,19005+9])
                  expression (lib/location.ml[588,19005+10]..[588,19005+32]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[588,19005+10]..[588,19005+11])
                        Nolabel
                        None
                        pattern (lib/location.ml[588,19005+10]..[588,19005+11])
                          Ppat_var "n" (lib/location.ml[588,19005+10]..[588,19005+11])
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[588,19005+14]..[588,19005+32])
                        Pexp_apply
                        expression (lib/location.ml[588,19005+16]..[588,19005+17])
                          Pexp_ident "-" (lib/location.ml[588,19005+16]..[588,19005+17])
                        [
                          <arg>
                          Nolabel
                            expression (lib/location.ml[588,19005+14]..[588,19005+15])
                              Pexp_ident "n" (lib/location.ml[588,19005+14]..[588,19005+15])
                          <arg>
                          Nolabel
                            expression (lib/location.ml[588,19005+18]..[588,19005+32])
                              Pexp_field
                              expression (lib/location.ml[588,19005+18]..[588,19005+20])
                                Pexp_ident "lb" (lib/location.ml[588,19005+18]..[588,19005+20])
                              "lex_abs_pos" (lib/location.ml[588,19005+21]..[588,19005+32])
                        ]
              ]
              expression (lib/location.ml[589,19041+2]..[603,19536+5])
                Pexp_ifthenelse
                expression (lib/location.ml[589,19041+5]..[589,19041+30])
                  Pexp_apply
                  expression (lib/location.ml[589,19041+27]..[589,19041+28])
                    Pexp_ident "<" (lib/location.ml[589,19041+27]..[589,19041+28])
                  [
                    <arg>
                    Nolabel
                      expression (lib/location.ml[589,19041+5]..[589,19041+26])
                        Pexp_apply
                        expression (lib/location.ml[589,19041+5]..[589,19041+8])
                          Pexp_ident "rel" (lib/location.ml[589,19041+5]..[589,19041+8])
                        [
                          <arg>
                          Nolabel
                            expression (lib/location.ml[589,19041+9]..[589,19041+26])
                              Pexp_field
                              expression (lib/location.ml[589,19041+9]..[589,19041+18])
                                Pexp_ident "start_pos" (lib/location.ml[589,19041+9]..[589,19041+18])
                              "pos_bol" (lib/location.ml[589,19041+19]..[589,19041+26])
                        ]
                    <arg>
                    Nolabel
                      expression (lib/location.ml[589,19041+29]..[589,19041+30])
                        Pexp_constant PConst_int (0,None)
                  ]
                expression (lib/location.ml[589,19041+36]..[593,19206+5])
                  Pexp_construct "[]" (lib/location.ml[592,19199+4]..[592,19199+6])
                  None
                Some
                  expression (lib/location.ml[593,19206+11]..[603,19536+5])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/location.ml[594,19223+8]..[594,19223+11])
                          Ppat_var "pos" (lib/location.ml[594,19223+8]..[594,19223+11])
                        expression (lib/location.ml[594,19223+14]..[594,19223+19])
                          Pexp_apply
                          expression (lib/location.ml[594,19223+14]..[594,19223+17])
                            Pexp_ident "ref" (lib/location.ml[594,19223+14]..[594,19223+17])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[594,19223+18]..[594,19223+19])
                                Pexp_constant PConst_int (0,None)
                          ]
                    ]
                    expression (lib/location.ml[595,19270+4]..[602,19482+53])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/location.ml[595,19270+8]..[595,19270+12])
                            Ppat_var "seek" (lib/location.ml[595,19270+8]..[595,19270+12])
                          expression (lib/location.ml[595,19270+13]..[595,19270+29]) ghost
                            Pexp_function
                            [
                              Pparam_val (lib/location.ml[595,19270+13]..[595,19270+14])
                                Nolabel
                                None
                                pattern (lib/location.ml[595,19270+13]..[595,19270+14])
                                  Ppat_var "n" (lib/location.ml[595,19270+13]..[595,19270+14])
                            ]
                            None
                            Pfunction_body
                              expression (lib/location.ml[595,19270+17]..[595,19270+29])
                                Pexp_apply
                                expression (lib/location.ml[595,19270+21]..[595,19270+23])
                                  Pexp_ident ":=" (lib/location.ml[595,19270+21]..[595,19270+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[595,19270+17]..[595,19270+20])
                                      Pexp_ident "pos" (lib/location.ml[595,19270+17]..[595,19270+20])
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[595,19270+24]..[595,19270+29])
                                      Pexp_apply
                                      expression (lib/location.ml[595,19270+24]..[595,19270+27])
                                        Pexp_ident "rel" (lib/location.ml[595,19270+24]..[595,19270+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[595,19270+28]..[595,19270+29])
                                            Pexp_ident "n" (lib/location.ml[595,19270+28]..[595,19270+29])
                                      ]
                                ]
                      ]
                      expression (lib/location.ml[596,19303+4]..[602,19482+53])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/location.ml[596,19303+8]..[596,19303+17])
                              Ppat_var "read_char" (lib/location.ml[596,19303+8]..[596,19303+17])
                            expression (lib/location.ml[596,19303+18]..[600,19450+24]) ghost
                              Pexp_function
                              [
                                Pparam_val (lib/location.ml[596,19303+18]..[596,19303+20])
                                  Nolabel
                                  None
                                  pattern (lib/location.ml[596,19303+18]..[596,19303+20])
                                    Ppat_construct "()" (lib/location.ml[596,19303+18]..[596,19303+20])
                                    None
                              ]
                              None
                              Pfunction_body
                                expression (lib/location.ml[597,19326+6]..[600,19450+24])
                                  Pexp_ifthenelse
                                  expression (lib/location.ml[597,19326+9]..[597,19326+34])
                                    Pexp_apply
                                    expression (lib/location.ml[597,19326+14]..[597,19326+16])
                                      Pexp_ident ">=" (lib/location.ml[597,19326+14]..[597,19326+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[597,19326+9]..[597,19326+13])
                                          Pexp_apply
                                          expression (lib/location.ml[597,19326+9]..[597,19326+10])
                                            Pexp_ident "!" (lib/location.ml[597,19326+9]..[597,19326+10])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[597,19326+10]..[597,19326+13])
                                                Pexp_ident "pos" (lib/location.ml[597,19326+10]..[597,19326+13])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[597,19326+17]..[597,19326+34])
                                          Pexp_field
                                          expression (lib/location.ml[597,19326+17]..[597,19326+19])
                                            Pexp_ident "lb" (lib/location.ml[597,19326+17]..[597,19326+19])
                                          "lex_buffer_len" (lib/location.ml[597,19326+20]..[597,19326+34])
                                    ]
                                  expression (lib/location.ml[597,19326+60]..[597,19326+64])
                                    Pexp_construct "None" (lib/location.ml[597,19326+60]..[597,19326+64])
                                    None
                                  Some
                                    expression (lib/location.ml[599,19402+8]..[600,19450+24])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/location.ml[599,19402+12]..[599,19402+13])
                                            Ppat_var "c" (lib/location.ml[599,19402+12]..[599,19402+13])
                                          expression (lib/location.ml[599,19402+16]..[599,19402+44])
                                            Pexp_apply
                                            expression (lib/location.ml[599,19402+16]..[599,19402+25])
                                              Pexp_ident "Bytes.get" (lib/location.ml[599,19402+16]..[599,19402+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[599,19402+26]..[599,19402+39])
                                                  Pexp_field
                                                  expression (lib/location.ml[599,19402+26]..[599,19402+28])
                                                    Pexp_ident "lb" (lib/location.ml[599,19402+26]..[599,19402+28])
                                                  "lex_buffer" (lib/location.ml[599,19402+29]..[599,19402+39])
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[599,19402+40]..[599,19402+44])
                                                  Pexp_apply
                                                  expression (lib/location.ml[599,19402+40]..[599,19402+41])
                                                    Pexp_ident "!" (lib/location.ml[599,19402+40]..[599,19402+41])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lib/location.ml[599,19402+41]..[599,19402+44])
                                                        Pexp_ident "pos" (lib/location.ml[599,19402+41]..[599,19402+44])
                                                  ]
                                            ]
                                      ]
                                      expression (lib/location.ml[600,19450+8]..[600,19450+24])
                                        Pexp_sequence
                                        expression (lib/location.ml[600,19450+8]..[600,19450+16])
                                          Pexp_apply
                                          expression (lib/location.ml[600,19450+8]..[600,19450+12])
                                            Pexp_ident "incr" (lib/location.ml[600,19450+8]..[600,19450+12])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/location.ml[600,19450+13]..[600,19450+16])
                                                Pexp_ident "pos" (lib/location.ml[600,19450+13]..[600,19450+16])
                                          ]
                                        expression (lib/location.ml[600,19450+18]..[600,19450+24])
                                          Pexp_construct "Some" (lib/location.ml[600,19450+18]..[600,19450+22])
                                          Some
                                            expression (lib/location.ml[600,19450+23]..[600,19450+24])
                                              Pexp_ident "c" (lib/location.ml[600,19450+23]..[600,19450+24])
                        ]
                        expression (lib/location.ml[602,19482+4]..[602,19482+53])
                          Pexp_apply
                          expression (lib/location.ml[602,19482+4]..[602,19482+16])
                            Pexp_ident "lines_around" (lib/location.ml[602,19482+4]..[602,19482+16])
                          [
                            <arg>
                            Labelled "start_pos"
                              expression (lib/location.ml[602,19482+18]..[602,19482+27])
                                Pexp_ident "start_pos" (lib/location.ml[602,19482+18]..[602,19482+27])
                            <arg>
                            Labelled "end_pos"
                              expression (lib/location.ml[602,19482+29]..[602,19482+36])
                                Pexp_ident "end_pos" (lib/location.ml[602,19482+29]..[602,19482+36])
                            <arg>
                            Labelled "seek"
                              expression (lib/location.ml[602,19482+38]..[602,19482+42])
                                Pexp_ident "seek" (lib/location.ml[602,19482+38]..[602,19482+42])
                            <arg>
                            Labelled "read_char"
                              expression (lib/location.ml[602,19482+44]..[602,19482+53])
                                Pexp_ident "read_char" (lib/location.ml[602,19482+44]..[602,19482+53])
                          ]
    ]
  structure_item (lib/location.ml[606,19593+0]..[620,19913+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[606,19593+4]..[606,19593+31])
          Ppat_var "lines_around_from_phrasebuf" (lib/location.ml[606,19593+4]..[606,19593+31])
        expression (lib/location.ml[607,19625+4]..[620,19913+51]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[607,19625+4]..[607,19625+26])
              Labelled "start_pos"
              None
              pattern (lib/location.ml[607,19625+6]..[607,19625+25])
                Ppat_constraint
                pattern (lib/location.ml[607,19625+6]..[607,19625+15])
                  Ppat_var "start_pos" (lib/location.ml[607,19625+6]..[607,19625+15])
                core_type (lib/location.ml[607,19625+17]..[607,19625+25])
                  Ptyp_constr "position" (lib/location.ml[607,19625+17]..[607,19625+25])
                  []
            Pparam_val (lib/location.ml[607,19625+27]..[607,19625+47])
              Labelled "end_pos"
              None
              pattern (lib/location.ml[607,19625+29]..[607,19625+46])
                Ppat_constraint
                pattern (lib/location.ml[607,19625+29]..[607,19625+36])
                  Ppat_var "end_pos" (lib/location.ml[607,19625+29]..[607,19625+36])
                core_type (lib/location.ml[607,19625+38]..[607,19625+46])
                  Ptyp_constr "position" (lib/location.ml[607,19625+38]..[607,19625+46])
                  []
            Pparam_val (lib/location.ml[608,19673+4]..[608,19673+18])
              Nolabel
              None
              pattern (lib/location.ml[608,19673+4]..[608,19673+18])
                Ppat_constraint
                pattern (lib/location.ml[608,19673+5]..[608,19673+7])
                  Ppat_var "pb" (lib/location.ml[608,19673+5]..[608,19673+7])
                core_type (lib/location.ml[608,19673+9]..[608,19673+17])
                  Ptyp_constr "Buffer.t" (lib/location.ml[608,19673+9]..[608,19673+17])
                  []
          ]
          Some
            Pconstraint
              core_type (lib/location.ml[609,19693+2]..[609,19693+17])
                Ptyp_constr "list" (lib/location.ml[609,19693+13]..[609,19693+17])
                [
                  core_type (lib/location.ml[609,19693+2]..[609,19693+12])
                    Ptyp_constr "input_line" (lib/location.ml[609,19693+2]..[609,19693+12])
                    []
                ]
          Pfunction_body
            expression (lib/location.ml[611,19715+2]..[620,19913+51])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/location.ml[611,19715+6]..[611,19715+9])
                    Ppat_var "pos" (lib/location.ml[611,19715+6]..[611,19715+9])
                  expression (lib/location.ml[611,19715+12]..[611,19715+17])
                    Pexp_apply
                    expression (lib/location.ml[611,19715+12]..[611,19715+15])
                      Pexp_ident "ref" (lib/location.ml[611,19715+12]..[611,19715+15])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[611,19715+16]..[611,19715+17])
                          Pexp_constant PConst_int (0,None)
                    ]
              ]
              expression (lib/location.ml[612,19736+2]..[620,19913+51])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[612,19736+6]..[612,19736+10])
                      Ppat_var "seek" (lib/location.ml[612,19736+6]..[612,19736+10])
                    expression (lib/location.ml[612,19736+11]..[612,19736+23]) ghost
                      Pexp_function
                      [
                        Pparam_val (lib/location.ml[612,19736+11]..[612,19736+12])
                          Nolabel
                          None
                          pattern (lib/location.ml[612,19736+11]..[612,19736+12])
                            Ppat_var "n" (lib/location.ml[612,19736+11]..[612,19736+12])
                      ]
                      None
                      Pfunction_body
                        expression (lib/location.ml[612,19736+15]..[612,19736+23])
                          Pexp_apply
                          expression (lib/location.ml[612,19736+19]..[612,19736+21])
                            Pexp_ident ":=" (lib/location.ml[612,19736+19]..[612,19736+21])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[612,19736+15]..[612,19736+18])
                                Pexp_ident "pos" (lib/location.ml[612,19736+15]..[612,19736+18])
                            <arg>
                            Nolabel
                              expression (lib/location.ml[612,19736+22]..[612,19736+23])
                                Pexp_ident "n" (lib/location.ml[612,19736+22]..[612,19736+23])
                          ]
                ]
                expression (lib/location.ml[613,19763+2]..[620,19913+51])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/location.ml[613,19763+6]..[613,19763+15])
                        Ppat_var "read_char" (lib/location.ml[613,19763+6]..[613,19763+15])
                      expression (lib/location.ml[613,19763+16]..[618,19900+7]) ghost
                        Pexp_function
                        [
                          Pparam_val (lib/location.ml[613,19763+16]..[613,19763+18])
                            Nolabel
                            None
                            pattern (lib/location.ml[613,19763+16]..[613,19763+18])
                              Ppat_construct "()" (lib/location.ml[613,19763+16]..[613,19763+18])
                              None
                        ]
                        None
                        Pfunction_body
                          expression (lib/location.ml[614,19784+4]..[618,19900+7])
                            Pexp_ifthenelse
                            expression (lib/location.ml[614,19784+7]..[614,19784+31])
                              Pexp_apply
                              expression (lib/location.ml[614,19784+12]..[614,19784+14])
                                Pexp_ident ">=" (lib/location.ml[614,19784+12]..[614,19784+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[614,19784+7]..[614,19784+11])
                                    Pexp_apply
                                    expression (lib/location.ml[614,19784+7]..[614,19784+8])
                                      Pexp_ident "!" (lib/location.ml[614,19784+7]..[614,19784+8])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[614,19784+8]..[614,19784+11])
                                          Pexp_ident "pos" (lib/location.ml[614,19784+8]..[614,19784+11])
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[614,19784+15]..[614,19784+31])
                                    Pexp_apply
                                    expression (lib/location.ml[614,19784+15]..[614,19784+28])
                                      Pexp_ident "Buffer.length" (lib/location.ml[614,19784+15]..[614,19784+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[614,19784+29]..[614,19784+31])
                                          Pexp_ident "pb" (lib/location.ml[614,19784+29]..[614,19784+31])
                                    ]
                              ]
                            expression (lib/location.ml[614,19784+37]..[614,19784+41])
                              Pexp_construct "None" (lib/location.ml[614,19784+37]..[614,19784+41])
                              None
                            Some
                              expression (lib/location.ml[615,19826+9]..[618,19900+7])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/location.ml[616,19841+10]..[616,19841+11])
                                      Ppat_var "c" (lib/location.ml[616,19841+10]..[616,19841+11])
                                    expression (lib/location.ml[616,19841+14]..[616,19841+32])
                                      Pexp_apply
                                      expression (lib/location.ml[616,19841+14]..[616,19841+24])
                                        Pexp_ident "Buffer.nth" (lib/location.ml[616,19841+14]..[616,19841+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[616,19841+25]..[616,19841+27])
                                            Pexp_ident "pb" (lib/location.ml[616,19841+25]..[616,19841+27])
                                        <arg>
                                        Nolabel
                                          expression (lib/location.ml[616,19841+28]..[616,19841+32])
                                            Pexp_apply
                                            expression (lib/location.ml[616,19841+28]..[616,19841+29])
                                              Pexp_ident "!" (lib/location.ml[616,19841+28]..[616,19841+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/location.ml[616,19841+29]..[616,19841+32])
                                                  Pexp_ident "pos" (lib/location.ml[616,19841+29]..[616,19841+32])
                                            ]
                                      ]
                                ]
                                expression (lib/location.ml[617,19877+6]..[617,19877+22])
                                  Pexp_sequence
                                  expression (lib/location.ml[617,19877+6]..[617,19877+14])
                                    Pexp_apply
                                    expression (lib/location.ml[617,19877+6]..[617,19877+10])
                                      Pexp_ident "incr" (lib/location.ml[617,19877+6]..[617,19877+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[617,19877+11]..[617,19877+14])
                                          Pexp_ident "pos" (lib/location.ml[617,19877+11]..[617,19877+14])
                                    ]
                                  expression (lib/location.ml[617,19877+16]..[617,19877+22])
                                    Pexp_construct "Some" (lib/location.ml[617,19877+16]..[617,19877+20])
                                    Some
                                      expression (lib/location.ml[617,19877+21]..[617,19877+22])
                                        Pexp_ident "c" (lib/location.ml[617,19877+21]..[617,19877+22])
                  ]
                  expression (lib/location.ml[620,19913+2]..[620,19913+51])
                    Pexp_apply
                    expression (lib/location.ml[620,19913+2]..[620,19913+14])
                      Pexp_ident "lines_around" (lib/location.ml[620,19913+2]..[620,19913+14])
                    [
                      <arg>
                      Labelled "start_pos"
                        expression (lib/location.ml[620,19913+16]..[620,19913+25])
                          Pexp_ident "start_pos" (lib/location.ml[620,19913+16]..[620,19913+25])
                      <arg>
                      Labelled "end_pos"
                        expression (lib/location.ml[620,19913+27]..[620,19913+34])
                          Pexp_ident "end_pos" (lib/location.ml[620,19913+27]..[620,19913+34])
                      <arg>
                      Labelled "seek"
                        expression (lib/location.ml[620,19913+36]..[620,19913+40])
                          Pexp_ident "seek" (lib/location.ml[620,19913+36]..[620,19913+40])
                      <arg>
                      Labelled "read_char"
                        expression (lib/location.ml[620,19913+42]..[620,19913+51])
                          Pexp_ident "read_char" (lib/location.ml[620,19913+42]..[620,19913+51])
                    ]
    ]
  structure_item (lib/location.ml[624,20055+0]..[631,20359+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[624,20055+4]..[624,20055+35])
          Ppat_var "lines_around_from_current_input" (lib/location.ml[624,20055+4]..[624,20055+35])
        expression (lib/location.ml[624,20055+36]..[631,20359+8]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[624,20055+36]..[624,20055+46])
              Labelled "start_pos"
              None
              pattern (lib/location.ml[624,20055+37]..[624,20055+46])
                Ppat_var "start_pos" (lib/location.ml[624,20055+37]..[624,20055+46])
            Pparam_val (lib/location.ml[624,20055+47]..[624,20055+55])
              Labelled "end_pos"
              None
              pattern (lib/location.ml[624,20055+48]..[624,20055+55])
                Ppat_var "end_pos" (lib/location.ml[624,20055+48]..[624,20055+55])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[625,20113+2]..[631,20359+8])
              Pexp_match
              expression (lib/location.ml[625,20113+8]..[625,20113+56])
                Pexp_tuple
                [
                  expression (lib/location.ml[625,20113+8]..[625,20113+21])
                    Pexp_apply
                    expression (lib/location.ml[625,20113+8]..[625,20113+9])
                      Pexp_ident "!" (lib/location.ml[625,20113+8]..[625,20113+9])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[625,20113+9]..[625,20113+21])
                          Pexp_ident "input_lexbuf" (lib/location.ml[625,20113+9]..[625,20113+21])
                    ]
                  expression (lib/location.ml[625,20113+23]..[625,20113+43])
                    Pexp_apply
                    expression (lib/location.ml[625,20113+23]..[625,20113+24])
                      Pexp_ident "!" (lib/location.ml[625,20113+23]..[625,20113+24])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[625,20113+24]..[625,20113+43])
                          Pexp_ident "input_phrase_buffer" (lib/location.ml[625,20113+24]..[625,20113+43])
                    ]
                  expression (lib/location.ml[625,20113+45]..[625,20113+56])
                    Pexp_apply
                    expression (lib/location.ml[625,20113+45]..[625,20113+46])
                      Pexp_ident "!" (lib/location.ml[625,20113+45]..[625,20113+46])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[625,20113+46]..[625,20113+56])
                          Pexp_ident "input_name" (lib/location.ml[625,20113+46]..[625,20113+56])
                    ]
                ]
              [
                <case>
                  pattern (lib/location.ml[626,20175+4]..[626,20175+30])
                    Ppat_tuple
                    [
                      pattern (lib/location.ml[626,20175+4]..[626,20175+5])
                        Ppat_any
                      pattern (lib/location.ml[626,20175+7]..[626,20175+14])
                        Ppat_construct "Some" (lib/location.ml[626,20175+7]..[626,20175+11])
                        Some
                          []
                          pattern (lib/location.ml[626,20175+12]..[626,20175+14])
                            Ppat_var "pb" (lib/location.ml[626,20175+12]..[626,20175+14])
                      pattern (lib/location.ml[626,20175+16]..[626,20175+30])
                        Ppat_constant PConst_string("//toplevel//",(lib/location.ml[626,20175+17]..[626,20175+29]),None)
                    ]
                  expression (lib/location.ml[627,20209+6]..[627,20209+56])
                    Pexp_apply
                    expression (lib/location.ml[627,20209+6]..[627,20209+33])
                      Pexp_ident "lines_around_from_phrasebuf" (lib/location.ml[627,20209+6]..[627,20209+33])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[627,20209+34]..[627,20209+36])
                          Pexp_ident "pb" (lib/location.ml[627,20209+34]..[627,20209+36])
                      <arg>
                      Labelled "start_pos"
                        expression (lib/location.ml[627,20209+38]..[627,20209+47])
                          Pexp_ident "start_pos" (lib/location.ml[627,20209+38]..[627,20209+47])
                      <arg>
                      Labelled "end_pos"
                        expression (lib/location.ml[627,20209+49]..[627,20209+56])
                          Pexp_ident "end_pos" (lib/location.ml[627,20209+49]..[627,20209+56])
                    ]
                <case>
                  pattern (lib/location.ml[628,20266+4]..[628,20266+17])
                    Ppat_tuple
                    [
                      pattern (lib/location.ml[628,20266+4]..[628,20266+11])
                        Ppat_construct "Some" (lib/location.ml[628,20266+4]..[628,20266+8])
                        Some
                          []
                          pattern (lib/location.ml[628,20266+9]..[628,20266+11])
                            Ppat_var "lb" (lib/location.ml[628,20266+9]..[628,20266+11])
                      pattern (lib/location.ml[628,20266+13]..[628,20266+14])
                        Ppat_any
                      pattern (lib/location.ml[628,20266+16]..[628,20266+17])
                        Ppat_any
                    ]
                  expression (lib/location.ml[629,20287+6]..[629,20287+53])
                    Pexp_apply
                    expression (lib/location.ml[629,20287+6]..[629,20287+30])
                      Pexp_ident "lines_around_from_lexbuf" (lib/location.ml[629,20287+6]..[629,20287+30])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[629,20287+31]..[629,20287+33])
                          Pexp_ident "lb" (lib/location.ml[629,20287+31]..[629,20287+33])
                      <arg>
                      Labelled "start_pos"
                        expression (lib/location.ml[629,20287+35]..[629,20287+44])
                          Pexp_ident "start_pos" (lib/location.ml[629,20287+35]..[629,20287+44])
                      <arg>
                      Labelled "end_pos"
                        expression (lib/location.ml[629,20287+46]..[629,20287+53])
                          Pexp_ident "end_pos" (lib/location.ml[629,20287+46]..[629,20287+53])
                    ]
                <case>
                  pattern (lib/location.ml[630,20341+4]..[630,20341+14])
                    Ppat_tuple
                    [
                      pattern (lib/location.ml[630,20341+4]..[630,20341+8])
                        Ppat_construct "None" (lib/location.ml[630,20341+4]..[630,20341+8])
                        None
                      pattern (lib/location.ml[630,20341+10]..[630,20341+11])
                        Ppat_any
                      pattern (lib/location.ml[630,20341+13]..[630,20341+14])
                        Ppat_any
                    ]
                  expression (lib/location.ml[631,20359+6]..[631,20359+8])
                    Pexp_construct "[]" (lib/location.ml[631,20359+6]..[631,20359+8])
                    None
              ]
    ]
  structure_item (lib/location.ml[636,20487+0]..[636,20487+41])
    Pstr_type Rec
    [
      type_declaration "msg" (lib/location.ml[636,20487+5]..[636,20487+8]) (lib/location.ml[636,20487+0]..[636,20487+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/location.ml[636,20487+11]..[636,20487+41])
              Ptyp_constr "loc" (lib/location.ml[636,20487+38]..[636,20487+41])
              [
                core_type (lib/location.ml[636,20487+12]..[636,20487+36])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[636,20487+12]..[636,20487+28])
                    Ptyp_constr "Format.formatter" (lib/location.ml[636,20487+12]..[636,20487+28])
                    []
                  core_type (lib/location.ml[636,20487+32]..[636,20487+36])
                    Ptyp_constr "unit" (lib/location.ml[636,20487+32]..[636,20487+36])
                    []
              ]
    ]
  structure_item (lib/location.ml[638,20530+0]..[639,20558+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[638,20530+4]..[638,20530+7])
          Ppat_var "msg" (lib/location.ml[638,20530+4]..[638,20530+7])
        expression (lib/location.ml[638,20530+8]..[639,20558+47]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[638,20530+8]..[638,20530+21])
              Optional "loc"
              Some
                expression (lib/location.ml[638,20530+16]..[638,20530+20])
                  Pexp_ident "none" (lib/location.ml[638,20530+16]..[638,20530+20])
              pattern (lib/location.ml[638,20530+10]..[638,20530+13])
                Ppat_var "loc" (lib/location.ml[638,20530+10]..[638,20530+13])
            Pparam_val (lib/location.ml[638,20530+22]..[638,20530+25])
              Nolabel
              None
              pattern (lib/location.ml[638,20530+22]..[638,20530+25])
                Ppat_var "fmt" (lib/location.ml[638,20530+22]..[638,20530+25])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[639,20558+2]..[639,20558+47])
              Pexp_apply
              expression (lib/location.ml[639,20558+2]..[639,20558+17])
                Pexp_ident "Format.kdprintf" (lib/location.ml[639,20558+2]..[639,20558+17])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[639,20558+18]..[639,20558+43])
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[639,20558+23]..[639,20558+26])
                        Nolabel
                        None
                        pattern (lib/location.ml[639,20558+23]..[639,20558+26])
                          Ppat_var "txt" (lib/location.ml[639,20558+23]..[639,20558+26])
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[639,20558+30]..[639,20558+42])
                        Pexp_record
                        [
                          "loc" (lib/location.ml[639,20558+32]..[639,20558+35]) ghost
                            expression (lib/location.ml[639,20558+32]..[639,20558+35])
                              Pexp_ident "loc" (lib/location.ml[639,20558+32]..[639,20558+35])
                          "txt" (lib/location.ml[639,20558+37]..[639,20558+40]) ghost
                            expression (lib/location.ml[639,20558+37]..[639,20558+40])
                              Pexp_ident "txt" (lib/location.ml[639,20558+37]..[639,20558+40])
                        ]
                        None
                <arg>
                Nolabel
                  expression (lib/location.ml[639,20558+44]..[639,20558+47])
                    Pexp_ident "fmt" (lib/location.ml[639,20558+44]..[639,20558+47])
              ]
    ]
  structure_item (lib/location.ml[641,20607+0]..[646,20737+35])
    Pstr_type Rec
    [
      type_declaration "report_kind" (lib/location.ml[641,20607+5]..[641,20607+16]) (lib/location.ml[641,20607+0]..[646,20737+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/location.ml[642,20626+2]..[642,20626+16])
                "Report_error" (lib/location.ml[642,20626+4]..[642,20626+16])
                []
                None
              (lib/location.ml[643,20643+2]..[643,20643+28])
                "Report_warning" (lib/location.ml[643,20643+4]..[643,20643+18])
                [
                  core_type (lib/location.ml[643,20643+22]..[643,20643+28])
                    Ptyp_constr "string" (lib/location.ml[643,20643+22]..[643,20643+28])
                    []
                ]
                None
              (lib/location.ml[644,20672+2]..[644,20672+37])
                "Report_warning_as_error" (lib/location.ml[644,20672+4]..[644,20672+27])
                [
                  core_type (lib/location.ml[644,20672+31]..[644,20672+37])
                    Ptyp_constr "string" (lib/location.ml[644,20672+31]..[644,20672+37])
                    []
                ]
                None
              (lib/location.ml[645,20710+2]..[645,20710+26])
                "Report_alert" (lib/location.ml[645,20710+4]..[645,20710+16])
                [
                  core_type (lib/location.ml[645,20710+20]..[645,20710+26])
                    Ptyp_constr "string" (lib/location.ml[645,20710+20]..[645,20710+26])
                    []
                ]
                None
              (lib/location.ml[646,20737+2]..[646,20737+35])
                "Report_alert_as_error" (lib/location.ml[646,20737+4]..[646,20737+25])
                [
                  core_type (lib/location.ml[646,20737+29]..[646,20737+35])
                    Ptyp_constr "string" (lib/location.ml[646,20737+29]..[646,20737+35])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/location.ml[648,20774+0]..[652,20844+1])
    Pstr_type Rec
    [
      type_declaration "report" (lib/location.ml[648,20774+5]..[648,20774+11]) (lib/location.ml[648,20774+0]..[652,20844+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/location.ml[649,20790+2]..[649,20790+21])
                Immutable
                "kind" (lib/location.ml[649,20790+2]..[649,20790+6])                core_type (lib/location.ml[649,20790+9]..[649,20790+20])
                  Ptyp_constr "report_kind" (lib/location.ml[649,20790+9]..[649,20790+20])
                  []
              (lib/location.ml[650,20812+2]..[650,20812+13])
                Immutable
                "main" (lib/location.ml[650,20812+2]..[650,20812+6])                core_type (lib/location.ml[650,20812+9]..[650,20812+12])
                  Ptyp_constr "msg" (lib/location.ml[650,20812+9]..[650,20812+12])
                  []
              (lib/location.ml[651,20826+2]..[651,20826+17])
                Immutable
                "sub" (lib/location.ml[651,20826+2]..[651,20826+5])                core_type (lib/location.ml[651,20826+8]..[651,20826+16])
                  Ptyp_constr "list" (lib/location.ml[651,20826+12]..[651,20826+16])
                  [
                    core_type (lib/location.ml[651,20826+8]..[651,20826+11])
                      Ptyp_constr "msg" (lib/location.ml[651,20826+8]..[651,20826+11])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/location.ml[654,20847+0]..[673,21587+1])
    Pstr_type Rec
    [
      type_declaration "report_printer" (lib/location.ml[654,20847+5]..[654,20847+19]) (lib/location.ml[654,20847+0]..[673,21587+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/location.ml[656,20895+2]..[657,20920+39])
                Immutable
                "pp" (lib/location.ml[656,20895+2]..[656,20895+4])                core_type (lib/location.ml[656,20895+7]..[657,20920+38])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[656,20895+7]..[656,20895+21])
                    Ptyp_constr "report_printer" (lib/location.ml[656,20895+7]..[656,20895+21])
                    []
                  core_type (lib/location.ml[657,20920+4]..[657,20920+38])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/location.ml[657,20920+4]..[657,20920+20])
                      Ptyp_constr "Format.formatter" (lib/location.ml[657,20920+4]..[657,20920+20])
                      []
                    core_type (lib/location.ml[657,20920+24]..[657,20920+38])
                      Ptyp_arrow
                      Nolabel
                      core_type (lib/location.ml[657,20920+24]..[657,20920+30])
                        Ptyp_constr "report" (lib/location.ml[657,20920+24]..[657,20920+30])
                        []
                      core_type (lib/location.ml[657,20920+34]..[657,20920+38])
                        Ptyp_constr "unit" (lib/location.ml[657,20920+34]..[657,20920+38])
                        []
              (lib/location.ml[659,20961+2]..[660,21008+44])
                Immutable
                "pp_report_kind" (lib/location.ml[659,20961+2]..[659,20961+16])                core_type (lib/location.ml[659,20961+19]..[660,21008+43])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[659,20961+19]..[659,20961+33])
                    Ptyp_constr "report_printer" (lib/location.ml[659,20961+19]..[659,20961+33])
                    []
                  core_type (lib/location.ml[659,20961+37]..[660,21008+43])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/location.ml[659,20961+37]..[659,20961+43])
                      Ptyp_constr "report" (lib/location.ml[659,20961+37]..[659,20961+43])
                      []
                    core_type (lib/location.ml[660,21008+4]..[660,21008+43])
                      Ptyp_arrow
                      Nolabel
                      core_type (lib/location.ml[660,21008+4]..[660,21008+20])
                        Ptyp_constr "Format.formatter" (lib/location.ml[660,21008+4]..[660,21008+20])
                        []
                      core_type (lib/location.ml[660,21008+24]..[660,21008+43])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/location.ml[660,21008+24]..[660,21008+35])
                          Ptyp_constr "report_kind" (lib/location.ml[660,21008+24]..[660,21008+35])
                          []
                        core_type (lib/location.ml[660,21008+39]..[660,21008+43])
                          Ptyp_constr "unit" (lib/location.ml[660,21008+39]..[660,21008+43])
                          []
              (lib/location.ml[661,21053+2]..[662,21097+34])
                Immutable
                "pp_main_loc" (lib/location.ml[661,21053+2]..[661,21053+13])                core_type (lib/location.ml[661,21053+16]..[662,21097+33])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[661,21053+16]..[661,21053+30])
                    Ptyp_constr "report_printer" (lib/location.ml[661,21053+16]..[661,21053+30])
                    []
                  core_type (lib/location.ml[661,21053+34]..[662,21097+33])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/location.ml[661,21053+34]..[661,21053+40])
                      Ptyp_constr "report" (lib/location.ml[661,21053+34]..[661,21053+40])
                      []
                    core_type (lib/location.ml[662,21097+4]..[662,21097+33])
                      Ptyp_arrow
                      Nolabel
                      core_type (lib/location.ml[662,21097+4]..[662,21097+20])
                        Ptyp_constr "Format.formatter" (lib/location.ml[662,21097+4]..[662,21097+20])
                        []
                      core_type (lib/location.ml[662,21097+24]..[662,21097+33])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/location.ml[662,21097+24]..[662,21097+25])
                          Ptyp_constr "t" (lib/location.ml[662,21097+24]..[662,21097+25])
                          []
                        core_type (lib/location.ml[662,21097+29]..[662,21097+33])
                          Ptyp_constr "unit" (lib/location.ml[662,21097+29]..[662,21097+33])
                          []
              (lib/location.ml[663,21132+2]..[664,21176+59])
                Immutable
                "pp_main_txt" (lib/location.ml[663,21132+2]..[663,21132+13])                core_type (lib/location.ml[663,21132+16]..[664,21176+58])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[663,21132+16]..[663,21132+30])
                    Ptyp_constr "report_printer" (lib/location.ml[663,21132+16]..[663,21132+30])
                    []
                  core_type (lib/location.ml[663,21132+34]..[664,21176+58])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/location.ml[663,21132+34]..[663,21132+40])
                      Ptyp_constr "report" (lib/location.ml[663,21132+34]..[663,21132+40])
                      []
                    core_type (lib/location.ml[664,21176+4]..[664,21176+58])
                      Ptyp_arrow
                      Nolabel
                      core_type (lib/location.ml[664,21176+4]..[664,21176+20])
                        Ptyp_constr "Format.formatter" (lib/location.ml[664,21176+4]..[664,21176+20])
                        []
                      core_type (lib/location.ml[664,21176+24]..[664,21176+58])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/location.ml[664,21176+25]..[664,21176+49])
                          Ptyp_arrow
                          Nolabel
                          core_type (lib/location.ml[664,21176+25]..[664,21176+41])
                            Ptyp_constr "Format.formatter" (lib/location.ml[664,21176+25]..[664,21176+41])
                            []
                          core_type (lib/location.ml[664,21176+45]..[664,21176+49])
                            Ptyp_constr "unit" (lib/location.ml[664,21176+45]..[664,21176+49])
                            []
                        core_type (lib/location.ml[664,21176+54]..[664,21176+58])
                          Ptyp_constr "unit" (lib/location.ml[664,21176+54]..[664,21176+58])
                          []
              (lib/location.ml[665,21236+2]..[666,21279+41])
                Immutable
                "pp_submsgs" (lib/location.ml[665,21236+2]..[665,21236+12])                core_type (lib/location.ml[665,21236+15]..[666,21279+40])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[665,21236+15]..[665,21236+29])
                    Ptyp_constr "report_printer" (lib/location.ml[665,21236+15]..[665,21236+29])
                    []
                  core_type (lib/location.ml[665,21236+33]..[666,21279+40])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/location.ml[665,21236+33]..[665,21236+39])
                      Ptyp_constr "report" (lib/location.ml[665,21236+33]..[665,21236+39])
                      []
                    core_type (lib/location.ml[666,21279+4]..[666,21279+40])
                      Ptyp_arrow
                      Nolabel
                      core_type (lib/location.ml[666,21279+4]..[666,21279+20])
                        Ptyp_constr "Format.formatter" (lib/location.ml[666,21279+4]..[666,21279+20])
                        []
                      core_type (lib/location.ml[666,21279+24]..[666,21279+40])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/location.ml[666,21279+24]..[666,21279+32])
                          Ptyp_constr "list" (lib/location.ml[666,21279+28]..[666,21279+32])
                          [
                            core_type (lib/location.ml[666,21279+24]..[666,21279+27])
                              Ptyp_constr "msg" (lib/location.ml[666,21279+24]..[666,21279+27])
                              []
                          ]
                        core_type (lib/location.ml[666,21279+36]..[666,21279+40])
                          Ptyp_constr "unit" (lib/location.ml[666,21279+36]..[666,21279+40])
                          []
              (lib/location.ml[667,21321+2]..[668,21363+36])
                Immutable
                "pp_submsg" (lib/location.ml[667,21321+2]..[667,21321+11])                core_type (lib/location.ml[667,21321+14]..[668,21363+35])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[667,21321+14]..[667,21321+28])
                    Ptyp_constr "report_printer" (lib/location.ml[667,21321+14]..[667,21321+28])
                    []
                  core_type (lib/location.ml[667,21321+32]..[668,21363+35])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/location.ml[667,21321+32]..[667,21321+38])
                      Ptyp_constr "report" (lib/location.ml[667,21321+32]..[667,21321+38])
                      []
                    core_type (lib/location.ml[668,21363+4]..[668,21363+35])
                      Ptyp_arrow
                      Nolabel
                      core_type (lib/location.ml[668,21363+4]..[668,21363+20])
                        Ptyp_constr "Format.formatter" (lib/location.ml[668,21363+4]..[668,21363+20])
                        []
                      core_type (lib/location.ml[668,21363+24]..[668,21363+35])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/location.ml[668,21363+24]..[668,21363+27])
                          Ptyp_constr "msg" (lib/location.ml[668,21363+24]..[668,21363+27])
                          []
                        core_type (lib/location.ml[668,21363+31]..[668,21363+35])
                          Ptyp_constr "unit" (lib/location.ml[668,21363+31]..[668,21363+35])
                          []
              (lib/location.ml[669,21400+2]..[670,21446+34])
                Immutable
                "pp_submsg_loc" (lib/location.ml[669,21400+2]..[669,21400+15])                core_type (lib/location.ml[669,21400+18]..[670,21446+33])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[669,21400+18]..[669,21400+32])
                    Ptyp_constr "report_printer" (lib/location.ml[669,21400+18]..[669,21400+32])
                    []
                  core_type (lib/location.ml[669,21400+36]..[670,21446+33])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/location.ml[669,21400+36]..[669,21400+42])
                      Ptyp_constr "report" (lib/location.ml[669,21400+36]..[669,21400+42])
                      []
                    core_type (lib/location.ml[670,21446+4]..[670,21446+33])
                      Ptyp_arrow
                      Nolabel
                      core_type (lib/location.ml[670,21446+4]..[670,21446+20])
                        Ptyp_constr "Format.formatter" (lib/location.ml[670,21446+4]..[670,21446+20])
                        []
                      core_type (lib/location.ml[670,21446+24]..[670,21446+33])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/location.ml[670,21446+24]..[670,21446+25])
                          Ptyp_constr "t" (lib/location.ml[670,21446+24]..[670,21446+25])
                          []
                        core_type (lib/location.ml[670,21446+29]..[670,21446+33])
                          Ptyp_constr "unit" (lib/location.ml[670,21446+29]..[670,21446+33])
                          []
              (lib/location.ml[671,21481+2]..[672,21527+59])
                Immutable
                "pp_submsg_txt" (lib/location.ml[671,21481+2]..[671,21481+15])                core_type (lib/location.ml[671,21481+18]..[672,21527+58])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[671,21481+18]..[671,21481+32])
                    Ptyp_constr "report_printer" (lib/location.ml[671,21481+18]..[671,21481+32])
                    []
                  core_type (lib/location.ml[671,21481+36]..[672,21527+58])
                    Ptyp_arrow
                    Nolabel
                    core_type (lib/location.ml[671,21481+36]..[671,21481+42])
                      Ptyp_constr "report" (lib/location.ml[671,21481+36]..[671,21481+42])
                      []
                    core_type (lib/location.ml[672,21527+4]..[672,21527+58])
                      Ptyp_arrow
                      Nolabel
                      core_type (lib/location.ml[672,21527+4]..[672,21527+20])
                        Ptyp_constr "Format.formatter" (lib/location.ml[672,21527+4]..[672,21527+20])
                        []
                      core_type (lib/location.ml[672,21527+24]..[672,21527+58])
                        Ptyp_arrow
                        Nolabel
                        core_type (lib/location.ml[672,21527+25]..[672,21527+49])
                          Ptyp_arrow
                          Nolabel
                          core_type (lib/location.ml[672,21527+25]..[672,21527+41])
                            Ptyp_constr "Format.formatter" (lib/location.ml[672,21527+25]..[672,21527+41])
                            []
                          core_type (lib/location.ml[672,21527+45]..[672,21527+49])
                            Ptyp_constr "unit" (lib/location.ml[672,21527+45]..[672,21527+49])
                            []
                        core_type (lib/location.ml[672,21527+54]..[672,21527+58])
                          Ptyp_constr "unit" (lib/location.ml[672,21527+54]..[672,21527+58])
                          []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/location.ml[675,21590+0]..[681,21943+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[675,21590+4]..[675,21590+16])
          Ppat_var "is_dummy_loc" (lib/location.ml[675,21590+4]..[675,21590+16])
        expression (lib/location.ml[675,21590+17]..[681,21943+58]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[675,21590+17]..[675,21590+20])
              Nolabel
              None
              pattern (lib/location.ml[675,21590+17]..[675,21590+20])
                Ppat_var "loc" (lib/location.ml[675,21590+17]..[675,21590+20])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[681,21943+2]..[681,21943+58])
              Pexp_apply
              expression (lib/location.ml[681,21943+30]..[681,21943+32])
                Pexp_ident "||" (lib/location.ml[681,21943+30]..[681,21943+32])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[681,21943+2]..[681,21943+29])
                    Pexp_apply
                    expression (lib/location.ml[681,21943+25]..[681,21943+26])
                      Pexp_ident "=" (lib/location.ml[681,21943+25]..[681,21943+26])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[681,21943+2]..[681,21943+24])
                          Pexp_field
                          expression (lib/location.ml[681,21943+2]..[681,21943+15])
                            Pexp_field
                            expression (lib/location.ml[681,21943+2]..[681,21943+5])
                              Pexp_ident "loc" (lib/location.ml[681,21943+2]..[681,21943+5])
                            "loc_start" (lib/location.ml[681,21943+6]..[681,21943+15])
                          "pos_cnum" (lib/location.ml[681,21943+16]..[681,21943+24])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[681,21943+27]..[681,21943+29])
                          Pexp_constant PConst_int (-1,None)
                    ]
                <arg>
                Nolabel
                  expression (lib/location.ml[681,21943+33]..[681,21943+58])
                    Pexp_apply
                    expression (lib/location.ml[681,21943+54]..[681,21943+55])
                      Pexp_ident "=" (lib/location.ml[681,21943+54]..[681,21943+55])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[681,21943+33]..[681,21943+53])
                          Pexp_field
                          expression (lib/location.ml[681,21943+33]..[681,21943+44])
                            Pexp_field
                            expression (lib/location.ml[681,21943+33]..[681,21943+36])
                              Pexp_ident "loc" (lib/location.ml[681,21943+33]..[681,21943+36])
                            "loc_end" (lib/location.ml[681,21943+37]..[681,21943+44])
                          "pos_cnum" (lib/location.ml[681,21943+45]..[681,21943+53])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[681,21943+56]..[681,21943+58])
                          Pexp_constant PConst_int (-1,None)
                    ]
              ]
    ]
  structure_item (lib/location.ml[699,22717+0]..[702,22811+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[699,22717+4]..[699,22717+19])
          Ppat_var "is_quotable_loc" (lib/location.ml[699,22717+4]..[699,22717+19])
        expression (lib/location.ml[699,22717+20]..[702,22811+40]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[699,22717+20]..[699,22717+23])
              Nolabel
              None
              pattern (lib/location.ml[699,22717+20]..[699,22717+23])
                Ppat_var "loc" (lib/location.ml[699,22717+20]..[699,22717+23])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[700,22743+2]..[702,22811+40])
              Pexp_apply
              expression (lib/location.ml[701,22768+2]..[701,22768+4])
                Pexp_ident "&&" (lib/location.ml[701,22768+2]..[701,22768+4])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[700,22743+2]..[700,22743+24])
                    Pexp_apply
                    expression (lib/location.ml[700,22743+2]..[700,22743+5])
                      Pexp_ident "not" (lib/location.ml[700,22743+2]..[700,22743+5])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[700,22743+6]..[700,22743+24])
                          Pexp_apply
                          expression (lib/location.ml[700,22743+7]..[700,22743+19])
                            Pexp_ident "is_dummy_loc" (lib/location.ml[700,22743+7]..[700,22743+19])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[700,22743+20]..[700,22743+23])
                                Pexp_ident "loc" (lib/location.ml[700,22743+20]..[700,22743+23])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (lib/location.ml[701,22768+5]..[702,22811+40])
                    Pexp_apply
                    expression (lib/location.ml[702,22811+2]..[702,22811+4])
                      Pexp_ident "&&" (lib/location.ml[702,22811+2]..[702,22811+4])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[701,22768+5]..[701,22768+42])
                          Pexp_apply
                          expression (lib/location.ml[701,22768+29]..[701,22768+30])
                            Pexp_ident "=" (lib/location.ml[701,22768+29]..[701,22768+30])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[701,22768+5]..[701,22768+28])
                                Pexp_field
                                expression (lib/location.ml[701,22768+5]..[701,22768+18])
                                  Pexp_field
                                  expression (lib/location.ml[701,22768+5]..[701,22768+8])
                                    Pexp_ident "loc" (lib/location.ml[701,22768+5]..[701,22768+8])
                                  "loc_start" (lib/location.ml[701,22768+9]..[701,22768+18])
                                "pos_fname" (lib/location.ml[701,22768+19]..[701,22768+28])
                            <arg>
                            Nolabel
                              expression (lib/location.ml[701,22768+31]..[701,22768+42])
                                Pexp_apply
                                expression (lib/location.ml[701,22768+31]..[701,22768+32])
                                  Pexp_ident "!" (lib/location.ml[701,22768+31]..[701,22768+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[701,22768+32]..[701,22768+42])
                                      Pexp_ident "input_name" (lib/location.ml[701,22768+32]..[701,22768+42])
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (lib/location.ml[702,22811+5]..[702,22811+40])
                          Pexp_apply
                          expression (lib/location.ml[702,22811+27]..[702,22811+28])
                            Pexp_ident "=" (lib/location.ml[702,22811+27]..[702,22811+28])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[702,22811+5]..[702,22811+26])
                                Pexp_field
                                expression (lib/location.ml[702,22811+5]..[702,22811+16])
                                  Pexp_field
                                  expression (lib/location.ml[702,22811+5]..[702,22811+8])
                                    Pexp_ident "loc" (lib/location.ml[702,22811+5]..[702,22811+8])
                                  "loc_end" (lib/location.ml[702,22811+9]..[702,22811+16])
                                "pos_fname" (lib/location.ml[702,22811+17]..[702,22811+26])
                            <arg>
                            Nolabel
                              expression (lib/location.ml[702,22811+29]..[702,22811+40])
                                Pexp_apply
                                expression (lib/location.ml[702,22811+29]..[702,22811+30])
                                  Pexp_ident "!" (lib/location.ml[702,22811+29]..[702,22811+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[702,22811+30]..[702,22811+40])
                                      Pexp_ident "input_name" (lib/location.ml[702,22811+30]..[702,22811+40])
                                ]
                          ]
                    ]
              ]
    ]
  structure_item (lib/location.ml[826,27703+0]..[826,27703+19])
    Pstr_type Rec
    [
      type_declaration "error" (lib/location.ml[826,27703+5]..[826,27703+10]) (lib/location.ml[826,27703+0]..[826,27703+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/location.ml[826,27703+13]..[826,27703+19])
              Ptyp_constr "report" (lib/location.ml[826,27703+13]..[826,27703+19])
              []
    ]
  structure_item (lib/location.ml[828,27724+0]..[828,27724+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[828,27724+4]..[828,27724+16])
          Ppat_var "report_error" (lib/location.ml[828,27724+4]..[828,27724+16])
        expression (lib/location.ml[828,27724+17]..[828,27724+28]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[828,27724+17]..[828,27724+20])
              Nolabel
              None
              pattern (lib/location.ml[828,27724+17]..[828,27724+20])
                Ppat_var "ppf" (lib/location.ml[828,27724+17]..[828,27724+20])
            Pparam_val (lib/location.ml[828,27724+21]..[828,27724+24])
              Nolabel
              None
              pattern (lib/location.ml[828,27724+21]..[828,27724+24])
                Ppat_var "err" (lib/location.ml[828,27724+21]..[828,27724+24])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[828,27724+26]..[828,27724+28])
              Pexp_construct "()" (lib/location.ml[828,27724+26]..[828,27724+28])
              None
    ]
  structure_item (lib/location.ml[831,27783+0]..[832,27809+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[831,27783+4]..[831,27783+11])
          Ppat_var "mkerror" (lib/location.ml[831,27783+4]..[831,27783+11])
        expression (lib/location.ml[831,27783+12]..[832,27809+51]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[831,27783+12]..[831,27783+15])
              Nolabel
              None
              pattern (lib/location.ml[831,27783+12]..[831,27783+15])
                Ppat_var "loc" (lib/location.ml[831,27783+12]..[831,27783+15])
            Pparam_val (lib/location.ml[831,27783+16]..[831,27783+19])
              Nolabel
              None
              pattern (lib/location.ml[831,27783+16]..[831,27783+19])
                Ppat_var "sub" (lib/location.ml[831,27783+16]..[831,27783+19])
            Pparam_val (lib/location.ml[831,27783+20]..[831,27783+23])
              Nolabel
              None
              pattern (lib/location.ml[831,27783+20]..[831,27783+23])
                Ppat_var "txt" (lib/location.ml[831,27783+20]..[831,27783+23])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[832,27809+2]..[832,27809+51])
              Pexp_record
              [
                "kind" (lib/location.ml[832,27809+4]..[832,27809+8])
                  expression (lib/location.ml[832,27809+11]..[832,27809+23])
                    Pexp_construct "Report_error" (lib/location.ml[832,27809+11]..[832,27809+23])
                    None
                "main" (lib/location.ml[832,27809+25]..[832,27809+29])
                  expression (lib/location.ml[832,27809+32]..[832,27809+44])
                    Pexp_record
                    [
                      "loc" (lib/location.ml[832,27809+34]..[832,27809+37]) ghost
                        expression (lib/location.ml[832,27809+34]..[832,27809+37])
                          Pexp_ident "loc" (lib/location.ml[832,27809+34]..[832,27809+37])
                      "txt" (lib/location.ml[832,27809+39]..[832,27809+42]) ghost
                        expression (lib/location.ml[832,27809+39]..[832,27809+42])
                          Pexp_ident "txt" (lib/location.ml[832,27809+39]..[832,27809+42])
                    ]
                    None
                "sub" (lib/location.ml[832,27809+46]..[832,27809+49]) ghost
                  expression (lib/location.ml[832,27809+46]..[832,27809+49])
                    Pexp_ident "sub" (lib/location.ml[832,27809+46]..[832,27809+49])
              ]
              None
    ]
  structure_item (lib/location.ml[834,27862+0]..[835,27901+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[834,27862+4]..[834,27862+10])
          Ppat_var "errorf" (lib/location.ml[834,27862+4]..[834,27862+10])
        expression (lib/location.ml[834,27862+11]..[835,27901+35]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[834,27862+11]..[834,27862+24])
              Optional "loc"
              Some
                expression (lib/location.ml[834,27862+19]..[834,27862+23])
                  Pexp_ident "none" (lib/location.ml[834,27862+19]..[834,27862+23])
              pattern (lib/location.ml[834,27862+13]..[834,27862+16])
                Ppat_var "loc" (lib/location.ml[834,27862+13]..[834,27862+16])
            Pparam_val (lib/location.ml[834,27862+25]..[834,27862+36])
              Optional "sub"
              Some
                expression (lib/location.ml[834,27862+33]..[834,27862+35])
                  Pexp_construct "[]" (lib/location.ml[834,27862+33]..[834,27862+35])
                  None
              pattern (lib/location.ml[834,27862+27]..[834,27862+30])
                Ppat_var "sub" (lib/location.ml[834,27862+27]..[834,27862+30])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[835,27901+2]..[835,27901+35])
              Pexp_apply
              expression (lib/location.ml[835,27901+2]..[835,27901+17])
                Pexp_ident "Format.kdprintf" (lib/location.ml[835,27901+2]..[835,27901+17])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[835,27901+18]..[835,27901+35])
                    Pexp_apply
                    expression (lib/location.ml[835,27901+19]..[835,27901+26])
                      Pexp_ident "mkerror" (lib/location.ml[835,27901+19]..[835,27901+26])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[835,27901+27]..[835,27901+30])
                          Pexp_ident "loc" (lib/location.ml[835,27901+27]..[835,27901+30])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[835,27901+31]..[835,27901+34])
                          Pexp_ident "sub" (lib/location.ml[835,27901+31]..[835,27901+34])
                    ]
              ]
    ]
  structure_item (lib/location.ml[837,27938+0]..[838,27984+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[837,27938+4]..[837,27938+9])
          Ppat_var "error" (lib/location.ml[837,27938+4]..[837,27938+9])
        expression (lib/location.ml[837,27938+10]..[838,27984+65]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[837,27938+10]..[837,27938+23])
              Optional "loc"
              Some
                expression (lib/location.ml[837,27938+18]..[837,27938+22])
                  Pexp_ident "none" (lib/location.ml[837,27938+18]..[837,27938+22])
              pattern (lib/location.ml[837,27938+12]..[837,27938+15])
                Ppat_var "loc" (lib/location.ml[837,27938+12]..[837,27938+15])
            Pparam_val (lib/location.ml[837,27938+24]..[837,27938+35])
              Optional "sub"
              Some
                expression (lib/location.ml[837,27938+32]..[837,27938+34])
                  Pexp_construct "[]" (lib/location.ml[837,27938+32]..[837,27938+34])
                  None
              pattern (lib/location.ml[837,27938+26]..[837,27938+29])
                Ppat_var "sub" (lib/location.ml[837,27938+26]..[837,27938+29])
            Pparam_val (lib/location.ml[837,27938+36]..[837,27938+43])
              Nolabel
              None
              pattern (lib/location.ml[837,27938+36]..[837,27938+43])
                Ppat_var "msg_str" (lib/location.ml[837,27938+36]..[837,27938+43])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[838,27984+2]..[838,27984+65])
              Pexp_apply
              expression (lib/location.ml[838,27984+2]..[838,27984+9])
                Pexp_ident "mkerror" (lib/location.ml[838,27984+2]..[838,27984+9])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[838,27984+10]..[838,27984+13])
                    Pexp_ident "loc" (lib/location.ml[838,27984+10]..[838,27984+13])
                <arg>
                Nolabel
                  expression (lib/location.ml[838,27984+14]..[838,27984+17])
                    Pexp_ident "sub" (lib/location.ml[838,27984+14]..[838,27984+17])
                <arg>
                Nolabel
                  expression (lib/location.ml[838,27984+18]..[838,27984+65])
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[838,27984+23]..[838,27984+26])
                        Nolabel
                        None
                        pattern (lib/location.ml[838,27984+23]..[838,27984+26])
                          Ppat_var "ppf" (lib/location.ml[838,27984+23]..[838,27984+26])
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[838,27984+30]..[838,27984+64])
                        Pexp_apply
                        expression (lib/location.ml[838,27984+30]..[838,27984+52])
                          Pexp_ident "Format.pp_print_string" (lib/location.ml[838,27984+30]..[838,27984+52])
                        [
                          <arg>
                          Nolabel
                            expression (lib/location.ml[838,27984+53]..[838,27984+56])
                              Pexp_ident "ppf" (lib/location.ml[838,27984+53]..[838,27984+56])
                          <arg>
                          Nolabel
                            expression (lib/location.ml[838,27984+57]..[838,27984+64])
                              Pexp_ident "msg_str" (lib/location.ml[838,27984+57]..[838,27984+64])
                        ]
              ]
    ]
  structure_item (lib/location.ml[840,28051+0]..[841,28105+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[840,28051+4]..[840,28051+20])
          Ppat_var "error_of_printer" (lib/location.ml[840,28051+4]..[840,28051+20])
        expression (lib/location.ml[840,28051+21]..[841,28105+39]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[840,28051+21]..[840,28051+34])
              Optional "loc"
              Some
                expression (lib/location.ml[840,28051+29]..[840,28051+33])
                  Pexp_ident "none" (lib/location.ml[840,28051+29]..[840,28051+33])
              pattern (lib/location.ml[840,28051+23]..[840,28051+26])
                Ppat_var "loc" (lib/location.ml[840,28051+23]..[840,28051+26])
            Pparam_val (lib/location.ml[840,28051+35]..[840,28051+46])
              Optional "sub"
              Some
                expression (lib/location.ml[840,28051+43]..[840,28051+45])
                  Pexp_construct "[]" (lib/location.ml[840,28051+43]..[840,28051+45])
                  None
              pattern (lib/location.ml[840,28051+37]..[840,28051+40])
                Ppat_var "sub" (lib/location.ml[840,28051+37]..[840,28051+40])
            Pparam_val (lib/location.ml[840,28051+47]..[840,28051+49])
              Nolabel
              None
              pattern (lib/location.ml[840,28051+47]..[840,28051+49])
                Ppat_var "pp" (lib/location.ml[840,28051+47]..[840,28051+49])
            Pparam_val (lib/location.ml[840,28051+50]..[840,28051+51])
              Nolabel
              None
              pattern (lib/location.ml[840,28051+50]..[840,28051+51])
                Ppat_var "x" (lib/location.ml[840,28051+50]..[840,28051+51])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[841,28105+2]..[841,28105+39])
              Pexp_apply
              expression (lib/location.ml[841,28105+2]..[841,28105+9])
                Pexp_ident "mkerror" (lib/location.ml[841,28105+2]..[841,28105+9])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[841,28105+10]..[841,28105+13])
                    Pexp_ident "loc" (lib/location.ml[841,28105+10]..[841,28105+13])
                <arg>
                Nolabel
                  expression (lib/location.ml[841,28105+14]..[841,28105+17])
                    Pexp_ident "sub" (lib/location.ml[841,28105+14]..[841,28105+17])
                <arg>
                Nolabel
                  expression (lib/location.ml[841,28105+18]..[841,28105+39])
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[841,28105+23]..[841,28105+26])
                        Nolabel
                        None
                        pattern (lib/location.ml[841,28105+23]..[841,28105+26])
                          Ppat_var "ppf" (lib/location.ml[841,28105+23]..[841,28105+26])
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[841,28105+30]..[841,28105+38])
                        Pexp_apply
                        expression (lib/location.ml[841,28105+30]..[841,28105+32])
                          Pexp_ident "pp" (lib/location.ml[841,28105+30]..[841,28105+32])
                        [
                          <arg>
                          Nolabel
                            expression (lib/location.ml[841,28105+33]..[841,28105+36])
                              Pexp_ident "ppf" (lib/location.ml[841,28105+33]..[841,28105+36])
                          <arg>
                          Nolabel
                            expression (lib/location.ml[841,28105+37]..[841,28105+38])
                              Pexp_ident "x" (lib/location.ml[841,28105+37]..[841,28105+38])
                        ]
              ]
    ]
  structure_item (lib/location.ml[843,28146+0]..[844,28182+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[843,28146+4]..[843,28146+25])
          Ppat_var "error_of_printer_file" (lib/location.ml[843,28146+4]..[843,28146+25])
        expression (lib/location.ml[843,28146+26]..[844,28182+53]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[843,28146+26]..[843,28146+31])
              Nolabel
              None
              pattern (lib/location.ml[843,28146+26]..[843,28146+31])
                Ppat_var "print" (lib/location.ml[843,28146+26]..[843,28146+31])
            Pparam_val (lib/location.ml[843,28146+32]..[843,28146+33])
              Nolabel
              None
              pattern (lib/location.ml[843,28146+32]..[843,28146+33])
                Ppat_var "x" (lib/location.ml[843,28146+32]..[843,28146+33])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[844,28182+2]..[844,28182+53])
              Pexp_apply
              expression (lib/location.ml[844,28182+2]..[844,28182+18])
                Pexp_ident "error_of_printer" (lib/location.ml[844,28182+2]..[844,28182+18])
              [
                <arg>
                Labelled "loc"
                  expression (lib/location.ml[844,28182+24]..[844,28182+45])
                    Pexp_apply
                    expression (lib/location.ml[844,28182+25]..[844,28182+32])
                      Pexp_ident "in_file" (lib/location.ml[844,28182+25]..[844,28182+32])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[844,28182+33]..[844,28182+44])
                          Pexp_apply
                          expression (lib/location.ml[844,28182+33]..[844,28182+34])
                            Pexp_ident "!" (lib/location.ml[844,28182+33]..[844,28182+34])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[844,28182+34]..[844,28182+44])
                                Pexp_ident "input_name" (lib/location.ml[844,28182+34]..[844,28182+44])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (lib/location.ml[844,28182+46]..[844,28182+51])
                    Pexp_ident "print" (lib/location.ml[844,28182+46]..[844,28182+51])
                <arg>
                Nolabel
                  expression (lib/location.ml[844,28182+52]..[844,28182+53])
                    Pexp_ident "x" (lib/location.ml[844,28182+52]..[844,28182+53])
              ]
    ]
  structure_item (lib/location.ml[850,28451+0]..[860,28908+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[850,28451+4]..[850,28451+34])
          Ppat_var "default_warning_alert_reporter" (lib/location.ml[850,28451+4]..[850,28451+34])
        expression (lib/location.ml[850,28451+35]..[860,28908+30]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[850,28451+35]..[850,28451+41])
              Nolabel
              None
              pattern (lib/location.ml[850,28451+35]..[850,28451+41])
                Ppat_var "report" (lib/location.ml[850,28451+35]..[850,28451+41])
            Pparam_val (lib/location.ml[850,28451+42]..[850,28451+44])
              Nolabel
              None
              pattern (lib/location.ml[850,28451+42]..[850,28451+44])
                Ppat_var "mk" (lib/location.ml[850,28451+42]..[850,28451+44])
            Pparam_val (lib/location.ml[850,28451+45]..[850,28451+53])
              Nolabel
              None
              pattern (lib/location.ml[850,28451+45]..[850,28451+53])
                Ppat_constraint
                pattern (lib/location.ml[850,28451+46]..[850,28451+49])
                  Ppat_var "loc" (lib/location.ml[850,28451+46]..[850,28451+49])
                core_type (lib/location.ml[850,28451+51]..[850,28451+52])
                  Ptyp_constr "t" (lib/location.ml[850,28451+51]..[850,28451+52])
                  []
            Pparam_val (lib/location.ml[850,28451+54]..[850,28451+55])
              Nolabel
              None
              pattern (lib/location.ml[850,28451+54]..[850,28451+55])
                Ppat_var "w" (lib/location.ml[850,28451+54]..[850,28451+55])
          ]
          Some
            Pconstraint
              core_type (lib/location.ml[850,28451+58]..[850,28451+71])
                Ptyp_constr "option" (lib/location.ml[850,28451+65]..[850,28451+71])
                [
                  core_type (lib/location.ml[850,28451+58]..[850,28451+64])
                    Ptyp_constr "report" (lib/location.ml[850,28451+58]..[850,28451+64])
                    []
                ]
          Pfunction_body
            expression (lib/location.ml[851,28525+2]..[860,28908+30])
              Pexp_match
              expression (lib/location.ml[851,28525+8]..[851,28525+16])
                Pexp_apply
                expression (lib/location.ml[851,28525+8]..[851,28525+14])
                  Pexp_ident "report" (lib/location.ml[851,28525+8]..[851,28525+14])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[851,28525+15]..[851,28525+16])
                      Pexp_ident "w" (lib/location.ml[851,28525+15]..[851,28525+16])
                ]
              [
                <case>
                  pattern (lib/location.ml[852,28547+4]..[852,28547+13])
                    Ppat_variant "Inactive"
                    None
                  expression (lib/location.ml[852,28547+17]..[852,28547+21])
                    Pexp_construct "None" (lib/location.ml[852,28547+17]..[852,28547+21])
                    None
                <case>
                  pattern (lib/location.ml[853,28569+4]..[853,28569+56])
                    Ppat_variant "Active"
                    Some
                      pattern (lib/location.ml[853,28569+12]..[853,28569+56])
                        Ppat_record Closed
                        [
                          "Warnings.id" (lib/location.ml[853,28569+14]..[853,28569+25]) ghost
                            pattern (lib/location.ml[853,28569+14]..[853,28569+25])
                              Ppat_var "id" (lib/location.ml[853,28569+14]..[853,28569+25])
                          "message" (lib/location.ml[853,28569+27]..[853,28569+34]) ghost
                            pattern (lib/location.ml[853,28569+27]..[853,28569+34])
                              Ppat_var "message" (lib/location.ml[853,28569+27]..[853,28569+34])
                          "is_error" (lib/location.ml[853,28569+36]..[853,28569+44]) ghost
                            pattern (lib/location.ml[853,28569+36]..[853,28569+44])
                              Ppat_var "is_error" (lib/location.ml[853,28569+36]..[853,28569+44])
                          "sub_locs" (lib/location.ml[853,28569+46]..[853,28569+54]) ghost
                            pattern (lib/location.ml[853,28569+46]..[853,28569+54])
                              Ppat_var "sub_locs" (lib/location.ml[853,28569+46]..[853,28569+54])
                        ]
                  expression (lib/location.ml[854,28629+6]..[860,28908+30])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/location.ml[854,28629+10]..[854,28629+20])
                          Ppat_var "msg_of_str" (lib/location.ml[854,28629+10]..[854,28629+20])
                        expression (lib/location.ml[854,28629+21]..[854,28629+68]) ghost
                          Pexp_function
                          [
                            Pparam_val (lib/location.ml[854,28629+21]..[854,28629+24])
                              Nolabel
                              None
                              pattern (lib/location.ml[854,28629+21]..[854,28629+24])
                                Ppat_var "str" (lib/location.ml[854,28629+21]..[854,28629+24])
                          ]
                          None
                          Pfunction_body
                            expression (lib/location.ml[854,28629+27]..[854,28629+68])
                              Pexp_function
                              [
                                Pparam_val (lib/location.ml[854,28629+31]..[854,28629+34])
                                  Nolabel
                                  None
                                  pattern (lib/location.ml[854,28629+31]..[854,28629+34])
                                    Ppat_var "ppf" (lib/location.ml[854,28629+31]..[854,28629+34])
                              ]
                              None
                              Pfunction_body
                                expression (lib/location.ml[854,28629+38]..[854,28629+68])
                                  Pexp_apply
                                  expression (lib/location.ml[854,28629+38]..[854,28629+60])
                                    Pexp_ident "Format.pp_print_string" (lib/location.ml[854,28629+38]..[854,28629+60])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[854,28629+61]..[854,28629+64])
                                        Pexp_ident "ppf" (lib/location.ml[854,28629+61]..[854,28629+64])
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[854,28629+65]..[854,28629+68])
                                        Pexp_ident "str" (lib/location.ml[854,28629+65]..[854,28629+68])
                                  ]
                    ]
                    expression (lib/location.ml[855,28701+6]..[860,28908+30])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/location.ml[855,28701+10]..[855,28701+14])
                            Ppat_var "kind" (lib/location.ml[855,28701+10]..[855,28701+14])
                          expression (lib/location.ml[855,28701+17]..[855,28701+31])
                            Pexp_apply
                            expression (lib/location.ml[855,28701+17]..[855,28701+19])
                              Pexp_ident "mk" (lib/location.ml[855,28701+17]..[855,28701+19])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[855,28701+20]..[855,28701+28])
                                  Pexp_ident "is_error" (lib/location.ml[855,28701+20]..[855,28701+28])
                              <arg>
                              Nolabel
                                expression (lib/location.ml[855,28701+29]..[855,28701+31])
                                  Pexp_ident "id" (lib/location.ml[855,28701+29]..[855,28701+31])
                            ]
                      ]
                      expression (lib/location.ml[856,28736+6]..[860,28908+30])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/location.ml[856,28736+10]..[856,28736+14])
                              Ppat_var "main" (lib/location.ml[856,28736+10]..[856,28736+14])
                            expression (lib/location.ml[856,28736+17]..[856,28736+50])
                              Pexp_record
                              [
                                "loc" (lib/location.ml[856,28736+19]..[856,28736+22]) ghost
                                  expression (lib/location.ml[856,28736+19]..[856,28736+22])
                                    Pexp_ident "loc" (lib/location.ml[856,28736+19]..[856,28736+22])
                                "txt" (lib/location.ml[856,28736+24]..[856,28736+27])
                                  expression (lib/location.ml[856,28736+30]..[856,28736+48])
                                    Pexp_apply
                                    expression (lib/location.ml[856,28736+30]..[856,28736+40])
                                      Pexp_ident "msg_of_str" (lib/location.ml[856,28736+30]..[856,28736+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[856,28736+41]..[856,28736+48])
                                          Pexp_ident "message" (lib/location.ml[856,28736+41]..[856,28736+48])
                                    ]
                              ]
                              None
                        ]
                        expression (lib/location.ml[857,28790+6]..[860,28908+30])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/location.ml[857,28790+10]..[857,28790+13])
                                Ppat_var "sub" (lib/location.ml[857,28790+10]..[857,28790+13])
                              expression (lib/location.ml[857,28790+16]..[859,28888+16])
                                Pexp_apply
                                expression (lib/location.ml[857,28790+16]..[857,28790+24])
                                  Pexp_ident "List.map" (lib/location.ml[857,28790+16]..[857,28790+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[857,28790+25]..[859,28888+7])
                                      Pexp_function
                                      [
                                        Pparam_val (lib/location.ml[857,28790+30]..[857,28790+48])
                                          Nolabel
                                          None
                                          pattern (lib/location.ml[857,28790+30]..[857,28790+48])
                                            Ppat_tuple
                                            [
                                              pattern (lib/location.ml[857,28790+31]..[857,28790+34])
                                                Ppat_var "loc" (lib/location.ml[857,28790+31]..[857,28790+34])
                                              pattern (lib/location.ml[857,28790+36]..[857,28790+47])
                                                Ppat_var "sub_message" (lib/location.ml[857,28790+36]..[857,28790+47])
                                            ]
                                      ]
                                      None
                                      Pfunction_body
                                        expression (lib/location.ml[858,28842+8]..[858,28842+45])
                                          Pexp_record
                                          [
                                            "loc" (lib/location.ml[858,28842+10]..[858,28842+13]) ghost
                                              expression (lib/location.ml[858,28842+10]..[858,28842+13])
                                                Pexp_ident "loc" (lib/location.ml[858,28842+10]..[858,28842+13])
                                            "txt" (lib/location.ml[858,28842+15]..[858,28842+18])
                                              expression (lib/location.ml[858,28842+21]..[858,28842+43])
                                                Pexp_apply
                                                expression (lib/location.ml[858,28842+21]..[858,28842+31])
                                                  Pexp_ident "msg_of_str" (lib/location.ml[858,28842+21]..[858,28842+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lib/location.ml[858,28842+32]..[858,28842+43])
                                                      Pexp_ident "sub_message" (lib/location.ml[858,28842+32]..[858,28842+43])
                                                ]
                                          ]
                                          None
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[859,28888+8]..[859,28888+16])
                                      Pexp_ident "sub_locs" (lib/location.ml[859,28888+8]..[859,28888+16])
                                ]
                          ]
                          expression (lib/location.ml[860,28908+6]..[860,28908+30])
                            Pexp_construct "Some" (lib/location.ml[860,28908+6]..[860,28908+10])
                            Some
                              expression (lib/location.ml[860,28908+11]..[860,28908+30])
                                Pexp_record
                                [
                                  "kind" (lib/location.ml[860,28908+13]..[860,28908+17]) ghost
                                    expression (lib/location.ml[860,28908+13]..[860,28908+17])
                                      Pexp_ident "kind" (lib/location.ml[860,28908+13]..[860,28908+17])
                                  "main" (lib/location.ml[860,28908+19]..[860,28908+23]) ghost
                                    expression (lib/location.ml[860,28908+19]..[860,28908+23])
                                      Pexp_ident "main" (lib/location.ml[860,28908+19]..[860,28908+23])
                                  "sub" (lib/location.ml[860,28908+25]..[860,28908+28]) ghost
                                    expression (lib/location.ml[860,28908+25]..[860,28908+28])
                                      Pexp_ident "sub" (lib/location.ml[860,28908+25]..[860,28908+28])
                                ]
                                None
              ]
    ]
  structure_item (lib/location.ml[863,28941+0]..[869,29130+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[863,28941+4]..[863,28941+28])
          Ppat_var "default_warning_reporter" (lib/location.ml[863,28941+4]..[863,28941+28])
        expression (lib/location.ml[864,28972+2]..[869,29130+5])
          Pexp_apply
          expression (lib/location.ml[864,28972+2]..[864,28972+32])
            Pexp_ident "default_warning_alert_reporter" (lib/location.ml[864,28972+2]..[864,28972+32])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[865,29005+4]..[865,29005+19])
                Pexp_ident "Warnings.report" (lib/location.ml[865,29005+4]..[865,29005+19])
            <arg>
            Nolabel
              expression (lib/location.ml[866,29025+4]..[869,29130+5])
                Pexp_function
                [
                  Pparam_val (lib/location.ml[866,29025+9]..[866,29025+17])
                    Nolabel
                    None
                    pattern (lib/location.ml[866,29025+9]..[866,29025+17])
                      Ppat_var "is_error" (lib/location.ml[866,29025+9]..[866,29025+17])
                  Pparam_val (lib/location.ml[866,29025+18]..[866,29025+20])
                    Nolabel
                    None
                    pattern (lib/location.ml[866,29025+18]..[866,29025+20])
                      Ppat_var "id" (lib/location.ml[866,29025+18]..[866,29025+20])
                ]
                None
                Pfunction_body
                  expression (lib/location.ml[867,29049+7]..[868,29100+29])
                    Pexp_ifthenelse
                    expression (lib/location.ml[867,29049+10]..[867,29049+18])
                      Pexp_ident "is_error" (lib/location.ml[867,29049+10]..[867,29049+18])
                    expression (lib/location.ml[867,29049+24]..[867,29049+50])
                      Pexp_construct "Report_warning_as_error" (lib/location.ml[867,29049+24]..[867,29049+47])
                      Some
                        expression (lib/location.ml[867,29049+48]..[867,29049+50])
                          Pexp_ident "id" (lib/location.ml[867,29049+48]..[867,29049+50])
                    Some
                      expression (lib/location.ml[868,29100+12]..[868,29100+29])
                        Pexp_construct "Report_warning" (lib/location.ml[868,29100+12]..[868,29100+26])
                        Some
                          expression (lib/location.ml[868,29100+27]..[868,29100+29])
                            Pexp_ident "id" (lib/location.ml[868,29100+27]..[868,29100+29])
          ]
    ]
  structure_item (lib/location.ml[871,29137+0]..[871,29137+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[871,29137+4]..[871,29137+20])
          Ppat_var "warning_reporter" (lib/location.ml[871,29137+4]..[871,29137+20])
        expression (lib/location.ml[871,29137+23]..[871,29137+51])
          Pexp_apply
          expression (lib/location.ml[871,29137+23]..[871,29137+26])
            Pexp_ident "ref" (lib/location.ml[871,29137+23]..[871,29137+26])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[871,29137+27]..[871,29137+51])
                Pexp_ident "default_warning_reporter" (lib/location.ml[871,29137+27]..[871,29137+51])
          ]
    ]
  structure_item (lib/location.ml[872,29189+0]..[872,29189+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[872,29189+4]..[872,29189+18])
          Ppat_var "report_warning" (lib/location.ml[872,29189+4]..[872,29189+18])
        expression (lib/location.ml[872,29189+19]..[872,29189+50]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[872,29189+19]..[872,29189+22])
              Nolabel
              None
              pattern (lib/location.ml[872,29189+19]..[872,29189+22])
                Ppat_var "loc" (lib/location.ml[872,29189+19]..[872,29189+22])
            Pparam_val (lib/location.ml[872,29189+23]..[872,29189+24])
              Nolabel
              None
              pattern (lib/location.ml[872,29189+23]..[872,29189+24])
                Ppat_var "w" (lib/location.ml[872,29189+23]..[872,29189+24])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[872,29189+27]..[872,29189+50])
              Pexp_apply
              expression (lib/location.ml[872,29189+27]..[872,29189+44])
                Pexp_apply
                expression (lib/location.ml[872,29189+27]..[872,29189+28])
                  Pexp_ident "!" (lib/location.ml[872,29189+27]..[872,29189+28])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[872,29189+28]..[872,29189+44])
                      Pexp_ident "warning_reporter" (lib/location.ml[872,29189+28]..[872,29189+44])
                ]
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[872,29189+45]..[872,29189+48])
                    Pexp_ident "loc" (lib/location.ml[872,29189+45]..[872,29189+48])
                <arg>
                Nolabel
                  expression (lib/location.ml[872,29189+49]..[872,29189+50])
                    Pexp_ident "w" (lib/location.ml[872,29189+49]..[872,29189+50])
              ]
    ]
  structure_item (lib/location.ml[874,29241+0]..[874,29241+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[874,29241+4]..[874,29241+26])
          Ppat_var "formatter_for_warnings" (lib/location.ml[874,29241+4]..[874,29241+26])
        expression (lib/location.ml[874,29241+29]..[874,29241+53])
          Pexp_apply
          expression (lib/location.ml[874,29241+29]..[874,29241+32])
            Pexp_ident "ref" (lib/location.ml[874,29241+29]..[874,29241+32])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[874,29241+33]..[874,29241+53])
                Pexp_ident "Format.err_formatter" (lib/location.ml[874,29241+33]..[874,29241+53])
          ]
    ]
  structure_item (lib/location.ml[876,29296+0]..[876,29296+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[876,29296+4]..[876,29296+17])
          Ppat_var "print_warning" (lib/location.ml[876,29296+4]..[876,29296+17])
        expression (lib/location.ml[876,29296+18]..[876,29296+31]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[876,29296+18]..[876,29296+21])
              Nolabel
              None
              pattern (lib/location.ml[876,29296+18]..[876,29296+21])
                Ppat_var "loc" (lib/location.ml[876,29296+18]..[876,29296+21])
            Pparam_val (lib/location.ml[876,29296+22]..[876,29296+25])
              Nolabel
              None
              pattern (lib/location.ml[876,29296+22]..[876,29296+25])
                Ppat_var "ppf" (lib/location.ml[876,29296+22]..[876,29296+25])
            Pparam_val (lib/location.ml[876,29296+26]..[876,29296+27])
              Nolabel
              None
              pattern (lib/location.ml[876,29296+26]..[876,29296+27])
                Ppat_var "w" (lib/location.ml[876,29296+26]..[876,29296+27])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[876,29296+29]..[876,29296+31])
              Pexp_construct "()" (lib/location.ml[876,29296+29]..[876,29296+31])
              None
    ]
  structure_item (lib/location.ml[881,29439+0]..[881,29439+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[881,29439+4]..[881,29439+17])
          Ppat_var "prerr_warning" (lib/location.ml[881,29439+4]..[881,29439+17])
        expression (lib/location.ml[881,29439+18]..[881,29439+69]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[881,29439+18]..[881,29439+21])
              Nolabel
              None
              pattern (lib/location.ml[881,29439+18]..[881,29439+21])
                Ppat_var "loc" (lib/location.ml[881,29439+18]..[881,29439+21])
            Pparam_val (lib/location.ml[881,29439+22]..[881,29439+23])
              Nolabel
              None
              pattern (lib/location.ml[881,29439+22]..[881,29439+23])
                Ppat_var "w" (lib/location.ml[881,29439+22]..[881,29439+23])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[881,29439+26]..[881,29439+69])
              Pexp_apply
              expression (lib/location.ml[881,29439+26]..[881,29439+39])
                Pexp_ident "print_warning" (lib/location.ml[881,29439+26]..[881,29439+39])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[881,29439+40]..[881,29439+43])
                    Pexp_ident "loc" (lib/location.ml[881,29439+40]..[881,29439+43])
                <arg>
                Nolabel
                  expression (lib/location.ml[881,29439+44]..[881,29439+67])
                    Pexp_apply
                    expression (lib/location.ml[881,29439+44]..[881,29439+45])
                      Pexp_ident "!" (lib/location.ml[881,29439+44]..[881,29439+45])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[881,29439+45]..[881,29439+67])
                          Pexp_ident "formatter_for_warnings" (lib/location.ml[881,29439+45]..[881,29439+67])
                    ]
                <arg>
                Nolabel
                  expression (lib/location.ml[881,29439+68]..[881,29439+69])
                    Pexp_ident "w" (lib/location.ml[881,29439+68]..[881,29439+69])
              ]
    ]
  structure_item (lib/location.ml[883,29510+0]..[889,29699+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[883,29510+4]..[883,29510+26])
          Ppat_var "default_alert_reporter" (lib/location.ml[883,29510+4]..[883,29510+26])
        expression (lib/location.ml[884,29539+2]..[889,29699+5])
          Pexp_apply
          expression (lib/location.ml[884,29539+2]..[884,29539+32])
            Pexp_ident "default_warning_alert_reporter" (lib/location.ml[884,29539+2]..[884,29539+32])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[885,29572+4]..[885,29572+25])
                Pexp_ident "Warnings.report_alert" (lib/location.ml[885,29572+4]..[885,29572+25])
            <arg>
            Nolabel
              expression (lib/location.ml[886,29598+4]..[889,29699+5])
                Pexp_function
                [
                  Pparam_val (lib/location.ml[886,29598+9]..[886,29598+17])
                    Nolabel
                    None
                    pattern (lib/location.ml[886,29598+9]..[886,29598+17])
                      Ppat_var "is_error" (lib/location.ml[886,29598+9]..[886,29598+17])
                  Pparam_val (lib/location.ml[886,29598+18]..[886,29598+20])
                    Nolabel
                    None
                    pattern (lib/location.ml[886,29598+18]..[886,29598+20])
                      Ppat_var "id" (lib/location.ml[886,29598+18]..[886,29598+20])
                ]
                None
                Pfunction_body
                  expression (lib/location.ml[887,29622+7]..[888,29671+27])
                    Pexp_ifthenelse
                    expression (lib/location.ml[887,29622+10]..[887,29622+18])
                      Pexp_ident "is_error" (lib/location.ml[887,29622+10]..[887,29622+18])
                    expression (lib/location.ml[887,29622+24]..[887,29622+48])
                      Pexp_construct "Report_alert_as_error" (lib/location.ml[887,29622+24]..[887,29622+45])
                      Some
                        expression (lib/location.ml[887,29622+46]..[887,29622+48])
                          Pexp_ident "id" (lib/location.ml[887,29622+46]..[887,29622+48])
                    Some
                      expression (lib/location.ml[888,29671+12]..[888,29671+27])
                        Pexp_construct "Report_alert" (lib/location.ml[888,29671+12]..[888,29671+24])
                        Some
                          expression (lib/location.ml[888,29671+25]..[888,29671+27])
                            Pexp_ident "id" (lib/location.ml[888,29671+25]..[888,29671+27])
          ]
    ]
  structure_item (lib/location.ml[891,29706+0]..[891,29706+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[891,29706+4]..[891,29706+18])
          Ppat_var "alert_reporter" (lib/location.ml[891,29706+4]..[891,29706+18])
        expression (lib/location.ml[891,29706+21]..[891,29706+47])
          Pexp_apply
          expression (lib/location.ml[891,29706+21]..[891,29706+24])
            Pexp_ident "ref" (lib/location.ml[891,29706+21]..[891,29706+24])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[891,29706+25]..[891,29706+47])
                Pexp_ident "default_alert_reporter" (lib/location.ml[891,29706+25]..[891,29706+47])
          ]
    ]
  structure_item (lib/location.ml[892,29754+0]..[892,29754+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[892,29754+4]..[892,29754+16])
          Ppat_var "report_alert" (lib/location.ml[892,29754+4]..[892,29754+16])
        expression (lib/location.ml[892,29754+17]..[892,29754+46]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[892,29754+17]..[892,29754+20])
              Nolabel
              None
              pattern (lib/location.ml[892,29754+17]..[892,29754+20])
                Ppat_var "loc" (lib/location.ml[892,29754+17]..[892,29754+20])
            Pparam_val (lib/location.ml[892,29754+21]..[892,29754+22])
              Nolabel
              None
              pattern (lib/location.ml[892,29754+21]..[892,29754+22])
                Ppat_var "w" (lib/location.ml[892,29754+21]..[892,29754+22])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[892,29754+25]..[892,29754+46])
              Pexp_apply
              expression (lib/location.ml[892,29754+25]..[892,29754+40])
                Pexp_apply
                expression (lib/location.ml[892,29754+25]..[892,29754+26])
                  Pexp_ident "!" (lib/location.ml[892,29754+25]..[892,29754+26])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[892,29754+26]..[892,29754+40])
                      Pexp_ident "alert_reporter" (lib/location.ml[892,29754+26]..[892,29754+40])
                ]
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[892,29754+41]..[892,29754+44])
                    Pexp_ident "loc" (lib/location.ml[892,29754+41]..[892,29754+44])
                <arg>
                Nolabel
                  expression (lib/location.ml[892,29754+45]..[892,29754+46])
                    Pexp_ident "w" (lib/location.ml[892,29754+45]..[892,29754+46])
              ]
    ]
  structure_item (lib/location.ml[894,29802+0]..[894,29802+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[894,29802+4]..[894,29802+15])
          Ppat_var "print_alert" (lib/location.ml[894,29802+4]..[894,29802+15])
        expression (lib/location.ml[894,29802+16]..[894,29802+29]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[894,29802+16]..[894,29802+19])
              Nolabel
              None
              pattern (lib/location.ml[894,29802+16]..[894,29802+19])
                Ppat_var "loc" (lib/location.ml[894,29802+16]..[894,29802+19])
            Pparam_val (lib/location.ml[894,29802+20]..[894,29802+23])
              Nolabel
              None
              pattern (lib/location.ml[894,29802+20]..[894,29802+23])
                Ppat_var "ppf" (lib/location.ml[894,29802+20]..[894,29802+23])
            Pparam_val (lib/location.ml[894,29802+24]..[894,29802+25])
              Nolabel
              None
              pattern (lib/location.ml[894,29802+24]..[894,29802+25])
                Ppat_var "w" (lib/location.ml[894,29802+24]..[894,29802+25])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[894,29802+27]..[894,29802+29])
              Pexp_construct "()" (lib/location.ml[894,29802+27]..[894,29802+29])
              None
    ]
  structure_item (lib/location.ml[899,29941+0]..[899,29941+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[899,29941+4]..[899,29941+15])
          Ppat_var "prerr_alert" (lib/location.ml[899,29941+4]..[899,29941+15])
        expression (lib/location.ml[899,29941+16]..[899,29941+65]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[899,29941+16]..[899,29941+19])
              Nolabel
              None
              pattern (lib/location.ml[899,29941+16]..[899,29941+19])
                Ppat_var "loc" (lib/location.ml[899,29941+16]..[899,29941+19])
            Pparam_val (lib/location.ml[899,29941+20]..[899,29941+21])
              Nolabel
              None
              pattern (lib/location.ml[899,29941+20]..[899,29941+21])
                Ppat_var "w" (lib/location.ml[899,29941+20]..[899,29941+21])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[899,29941+24]..[899,29941+65])
              Pexp_apply
              expression (lib/location.ml[899,29941+24]..[899,29941+35])
                Pexp_ident "print_alert" (lib/location.ml[899,29941+24]..[899,29941+35])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[899,29941+36]..[899,29941+39])
                    Pexp_ident "loc" (lib/location.ml[899,29941+36]..[899,29941+39])
                <arg>
                Nolabel
                  expression (lib/location.ml[899,29941+40]..[899,29941+63])
                    Pexp_apply
                    expression (lib/location.ml[899,29941+40]..[899,29941+41])
                      Pexp_ident "!" (lib/location.ml[899,29941+40]..[899,29941+41])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[899,29941+41]..[899,29941+63])
                          Pexp_ident "formatter_for_warnings" (lib/location.ml[899,29941+41]..[899,29941+63])
                    ]
                <arg>
                Nolabel
                  expression (lib/location.ml[899,29941+64]..[899,29941+65])
                    Pexp_ident "w" (lib/location.ml[899,29941+64]..[899,29941+65])
              ]
    ]
  structure_item (lib/location.ml[901,30008+0]..[902,30066+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[901,30008+4]..[901,30008+9])
          Ppat_var "alert" (lib/location.ml[901,30008+4]..[901,30008+9])
        expression (lib/location.ml[901,30008+10]..[902,30066+52]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[901,30008+10]..[901,30008+23])
              Optional "def"
              Some
                expression (lib/location.ml[901,30008+18]..[901,30008+22])
                  Pexp_ident "none" (lib/location.ml[901,30008+18]..[901,30008+22])
              pattern (lib/location.ml[901,30008+12]..[901,30008+15])
                Ppat_var "def" (lib/location.ml[901,30008+12]..[901,30008+15])
            Pparam_val (lib/location.ml[901,30008+24]..[901,30008+37])
              Optional "use"
              Some
                expression (lib/location.ml[901,30008+32]..[901,30008+36])
                  Pexp_ident "none" (lib/location.ml[901,30008+32]..[901,30008+36])
              pattern (lib/location.ml[901,30008+26]..[901,30008+29])
                Ppat_var "use" (lib/location.ml[901,30008+26]..[901,30008+29])
            Pparam_val (lib/location.ml[901,30008+38]..[901,30008+43])
              Labelled "kind"
              None
              pattern (lib/location.ml[901,30008+39]..[901,30008+43])
                Ppat_var "kind" (lib/location.ml[901,30008+39]..[901,30008+43])
            Pparam_val (lib/location.ml[901,30008+44]..[901,30008+47])
              Nolabel
              None
              pattern (lib/location.ml[901,30008+44]..[901,30008+47])
                Ppat_var "loc" (lib/location.ml[901,30008+44]..[901,30008+47])
            Pparam_val (lib/location.ml[901,30008+48]..[901,30008+55])
              Nolabel
              None
              pattern (lib/location.ml[901,30008+48]..[901,30008+55])
                Ppat_var "message" (lib/location.ml[901,30008+48]..[901,30008+55])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[902,30066+2]..[902,30066+52])
              Pexp_apply
              expression (lib/location.ml[902,30066+2]..[902,30066+13])
                Pexp_ident "prerr_alert" (lib/location.ml[902,30066+2]..[902,30066+13])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[902,30066+14]..[902,30066+17])
                    Pexp_ident "loc" (lib/location.ml[902,30066+14]..[902,30066+17])
                <arg>
                Nolabel
                  expression (lib/location.ml[902,30066+18]..[902,30066+52])
                    Pexp_record
                    [
                      "Warnings.kind" (lib/location.ml[902,30066+19]..[902,30066+32]) ghost
                        expression (lib/location.ml[902,30066+19]..[902,30066+32])
                          Pexp_ident "kind" (lib/location.ml[902,30066+19]..[902,30066+32])
                      "message" (lib/location.ml[902,30066+34]..[902,30066+41]) ghost
                        expression (lib/location.ml[902,30066+34]..[902,30066+41])
                          Pexp_ident "message" (lib/location.ml[902,30066+34]..[902,30066+41])
                      "def" (lib/location.ml[902,30066+43]..[902,30066+46]) ghost
                        expression (lib/location.ml[902,30066+43]..[902,30066+46])
                          Pexp_ident "def" (lib/location.ml[902,30066+43]..[902,30066+46])
                      "use" (lib/location.ml[902,30066+48]..[902,30066+51]) ghost
                        expression (lib/location.ml[902,30066+48]..[902,30066+51])
                          Pexp_ident "use" (lib/location.ml[902,30066+48]..[902,30066+51])
                    ]
                    None
              ]
    ]
  structure_item (lib/location.ml[904,30120+0]..[905,30159+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[904,30120+4]..[904,30120+14])
          Ppat_var "deprecated" (lib/location.ml[904,30120+4]..[904,30120+14])
        expression (lib/location.ml[904,30120+15]..[905,30159+48]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[904,30120+15]..[904,30120+19])
              Optional "def"
              None
              pattern (lib/location.ml[904,30120+16]..[904,30120+19])
                Ppat_var "def" (lib/location.ml[904,30120+16]..[904,30120+19])
            Pparam_val (lib/location.ml[904,30120+20]..[904,30120+24])
              Optional "use"
              None
              pattern (lib/location.ml[904,30120+21]..[904,30120+24])
                Ppat_var "use" (lib/location.ml[904,30120+21]..[904,30120+24])
            Pparam_val (lib/location.ml[904,30120+25]..[904,30120+28])
              Nolabel
              None
              pattern (lib/location.ml[904,30120+25]..[904,30120+28])
                Ppat_var "loc" (lib/location.ml[904,30120+25]..[904,30120+28])
            Pparam_val (lib/location.ml[904,30120+29]..[904,30120+36])
              Nolabel
              None
              pattern (lib/location.ml[904,30120+29]..[904,30120+36])
                Ppat_var "message" (lib/location.ml[904,30120+29]..[904,30120+36])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[905,30159+2]..[905,30159+48])
              Pexp_apply
              expression (lib/location.ml[905,30159+2]..[905,30159+7])
                Pexp_ident "alert" (lib/location.ml[905,30159+2]..[905,30159+7])
              [
                <arg>
                Optional "def"
                  expression (lib/location.ml[905,30159+9]..[905,30159+12])
                    Pexp_ident "def" (lib/location.ml[905,30159+9]..[905,30159+12])
                <arg>
                Optional "use"
                  expression (lib/location.ml[905,30159+14]..[905,30159+17])
                    Pexp_ident "use" (lib/location.ml[905,30159+14]..[905,30159+17])
                <arg>
                Labelled "kind"
                  expression (lib/location.ml[905,30159+24]..[905,30159+36])
                    Pexp_constant PConst_string("deprecated",(lib/location.ml[905,30159+25]..[905,30159+35]),None)
                <arg>
                Nolabel
                  expression (lib/location.ml[905,30159+37]..[905,30159+40])
                    Pexp_ident "loc" (lib/location.ml[905,30159+37]..[905,30159+40])
                <arg>
                Nolabel
                  expression (lib/location.ml[905,30159+41]..[905,30159+48])
                    Pexp_ident "message" (lib/location.ml[905,30159+41]..[905,30159+48])
              ]
    ]
  structure_item (lib/location.ml[907,30209+0]..[907,30209+25])
    Pstr_module
    "Style" (lib/location.ml[907,30209+7]..[907,30209+12])
      module_expr (lib/location.ml[907,30209+15]..[907,30209+25])
        Pmod_ident "Misc.Style" (lib/location.ml[907,30209+15]..[907,30209+25])
  structure_item (lib/location.ml[909,30236+0]..[926,31017+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[909,30236+4]..[909,30236+22])
          Ppat_var "auto_include_alert" (lib/location.ml[909,30236+4]..[909,30236+22])
        expression (lib/location.ml[909,30236+23]..[926,31017+24]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[909,30236+23]..[909,30236+26])
              Nolabel
              None
              pattern (lib/location.ml[909,30236+23]..[909,30236+26])
                Ppat_var "lib" (lib/location.ml[909,30236+23]..[909,30236+26])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[910,30265+2]..[926,31017+24])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/location.ml[910,30265+6]..[910,30265+13])
                    Ppat_var "message" (lib/location.ml[910,30265+6]..[910,30265+13])
                  expression (lib/location.ml[910,30265+16]..[921,30806+43])
                    Pexp_apply
                    expression (lib/location.ml[910,30265+16]..[910,30265+31])
                      Pexp_ident "Format.asprintf" (lib/location.ml[910,30265+16]..[910,30265+31])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[910,30265+32]..[915,30598+44])
                          Pexp_constant PConst_string("OCaml's lib directory layout changed in 5.0. The %a subdirectory has been automatically added to the search path, but you should add %a to the command-line to silence this alert (e.g. by adding %a to the list of libraries in your dune file, or adding %a to your %a file for ocamlbuild, or using %a for ocamlfind).",(lib/location.ml[910,30265+33]..[915,30598+43]),None)
                      <arg>
                      Nolabel
                        expression (lib/location.ml[916,30643+6]..[916,30643+23])
                          Pexp_ident "Style.inline_code" (lib/location.ml[916,30643+6]..[916,30643+23])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[916,30643+24]..[916,30643+27])
                          Pexp_ident "lib" (lib/location.ml[916,30643+24]..[916,30643+27])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[917,30671+6]..[917,30671+23])
                          Pexp_ident "Style.inline_code" (lib/location.ml[917,30671+6]..[917,30671+23])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[917,30671+24]..[917,30671+37])
                          Pexp_apply
                          expression (lib/location.ml[917,30671+32]..[917,30671+33])
                            Pexp_ident "^" (lib/location.ml[917,30671+32]..[917,30671+33])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[917,30671+25]..[917,30671+31])
                                Pexp_constant PConst_string("-I +",(lib/location.ml[917,30671+26]..[917,30671+30]),None)
                            <arg>
                            Nolabel
                              expression (lib/location.ml[917,30671+33]..[917,30671+36])
                                Pexp_ident "lib" (lib/location.ml[917,30671+33]..[917,30671+36])
                          ]
                      <arg>
                      Nolabel
                        expression (lib/location.ml[918,30709+6]..[918,30709+23])
                          Pexp_ident "Style.inline_code" (lib/location.ml[918,30709+6]..[918,30709+23])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[918,30709+24]..[918,30709+27])
                          Pexp_ident "lib" (lib/location.ml[918,30709+24]..[918,30709+27])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[919,30737+6]..[919,30737+23])
                          Pexp_ident "Style.inline_code" (lib/location.ml[919,30737+6]..[919,30737+23])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[919,30737+24]..[919,30737+36])
                          Pexp_apply
                          expression (lib/location.ml[919,30737+31]..[919,30737+32])
                            Pexp_ident "^" (lib/location.ml[919,30737+31]..[919,30737+32])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[919,30737+25]..[919,30737+31])
                                Pexp_constant PConst_string("use_",(lib/location.ml[919,30737+26]..[919,30737+30]),None)
                            <arg>
                            Nolabel
                              expression (lib/location.ml[919,30737+32]..[919,30737+35])
                                Pexp_ident "lib" (lib/location.ml[919,30737+32]..[919,30737+35])
                          ]
                      <arg>
                      Nolabel
                        expression (lib/location.ml[920,30774+6]..[920,30774+23])
                          Pexp_ident "Style.inline_code" (lib/location.ml[920,30774+6]..[920,30774+23])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[920,30774+24]..[920,30774+31])
                          Pexp_constant PConst_string("_tags",(lib/location.ml[920,30774+25]..[920,30774+30]),None)
                      <arg>
                      Nolabel
                        expression (lib/location.ml[921,30806+6]..[921,30806+23])
                          Pexp_ident "Style.inline_code" (lib/location.ml[921,30806+6]..[921,30806+23])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[921,30806+24]..[921,30806+43])
                          Pexp_apply
                          expression (lib/location.ml[921,30806+37]..[921,30806+38])
                            Pexp_ident "^" (lib/location.ml[921,30806+37]..[921,30806+38])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[921,30806+25]..[921,30806+36])
                                Pexp_constant PConst_string("-package ",(lib/location.ml[921,30806+26]..[921,30806+35]),None)
                            <arg>
                            Nolabel
                              expression (lib/location.ml[921,30806+39]..[921,30806+42])
                                Pexp_ident "lib" (lib/location.ml[921,30806+39]..[921,30806+42])
                          ]
                    ]
              ]
              expression (lib/location.ml[922,30853+2]..[926,31017+24])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[922,30853+6]..[922,30853+11])
                      Ppat_var "alert" (lib/location.ml[922,30853+6]..[922,30853+11])
                    expression (lib/location.ml[923,30867+4]..[924,30939+72])
                      Pexp_record
                      [
                        "Warnings.kind" (lib/location.ml[923,30867+5]..[923,30867+18])
                          expression (lib/location.ml[923,30867+19]..[923,30867+50])
                            Pexp_constant PConst_string("ocaml_deprecated_auto_include",(lib/location.ml[923,30867+20]..[923,30867+49]),None)
                        "use" (lib/location.ml[923,30867+52]..[923,30867+55])
                          expression (lib/location.ml[923,30867+56]..[923,30867+60])
                            Pexp_ident "none" (lib/location.ml[923,30867+56]..[923,30867+60])
                        "def" (lib/location.ml[923,30867+62]..[923,30867+65])
                          expression (lib/location.ml[923,30867+66]..[923,30867+70])
                            Pexp_ident "none" (lib/location.ml[923,30867+66]..[923,30867+70])
                        "message" (lib/location.ml[924,30939+5]..[924,30939+12])
                          expression (lib/location.ml[924,30939+15]..[924,30939+71])
                            Pexp_apply
                            expression (lib/location.ml[924,30939+15]..[924,30939+30])
                              Pexp_ident "Format.asprintf" (lib/location.ml[924,30939+15]..[924,30939+30])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[924,30939+31]..[924,30939+42])
                                  Pexp_constant PConst_string("@[@\n%a@]",(lib/location.ml[924,30939+32]..[924,30939+41]),None)
                              <arg>
                              Nolabel
                                expression (lib/location.ml[924,30939+43]..[924,30939+63])
                                  Pexp_ident "Format.pp_print_text" (lib/location.ml[924,30939+43]..[924,30939+63])
                              <arg>
                              Nolabel
                                expression (lib/location.ml[924,30939+64]..[924,30939+71])
                                  Pexp_ident "message" (lib/location.ml[924,30939+64]..[924,30939+71])
                            ]
                      ]
                      None
                ]
                expression (lib/location.ml[926,31017+2]..[926,31017+24])
                  Pexp_apply
                  expression (lib/location.ml[926,31017+2]..[926,31017+13])
                    Pexp_ident "prerr_alert" (lib/location.ml[926,31017+2]..[926,31017+13])
                  [
                    <arg>
                    Nolabel
                      expression (lib/location.ml[926,31017+14]..[926,31017+18])
                        Pexp_ident "none" (lib/location.ml[926,31017+14]..[926,31017+18])
                    <arg>
                    Nolabel
                      expression (lib/location.ml[926,31017+19]..[926,31017+24])
                        Pexp_ident "alert" (lib/location.ml[926,31017+19]..[926,31017+24])
                  ]
    ]
  structure_item (lib/location.ml[928,31043+0]..[942,31645+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[928,31043+4]..[928,31043+27])
          Ppat_var "deprecated_script_alert" (lib/location.ml[928,31043+4]..[928,31043+27])
        expression (lib/location.ml[928,31043+28]..[942,31645+24]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[928,31043+28]..[928,31043+35])
              Nolabel
              None
              pattern (lib/location.ml[928,31043+28]..[928,31043+35])
                Ppat_var "program" (lib/location.ml[928,31043+28]..[928,31043+35])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[929,31081+2]..[942,31645+24])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/location.ml[929,31081+6]..[929,31081+13])
                    Ppat_var "message" (lib/location.ml[929,31081+6]..[929,31081+13])
                  expression (lib/location.ml[929,31081+16]..[936,31432+52])
                    Pexp_apply
                    expression (lib/location.ml[929,31081+16]..[929,31081+31])
                      Pexp_ident "Format.asprintf" (lib/location.ml[929,31081+16]..[929,31081+31])
                    [
                      <arg>
                      Nolabel
                        expression (lib/location.ml[929,31081+32]..[932,31256+38])
                          Pexp_constant PConst_string("Running %a where the first argument is an implicit basename with no extension (e.g. %a) is deprecated. Either rename the script (%a) or qualify the basename (%a)",(lib/location.ml[929,31081+33]..[932,31256+37]),None)
                      <arg>
                      Nolabel
                        expression (lib/location.ml[933,31295+6]..[933,31295+23])
                          Pexp_ident "Style.inline_code" (lib/location.ml[933,31295+6]..[933,31295+23])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[933,31295+24]..[933,31295+31])
                          Pexp_ident "program" (lib/location.ml[933,31295+24]..[933,31295+31])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[934,31327+6]..[934,31327+23])
                          Pexp_ident "Style.inline_code" (lib/location.ml[934,31327+6]..[934,31327+23])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[934,31327+24]..[934,31327+50])
                          Pexp_apply
                          expression (lib/location.ml[934,31327+33]..[934,31327+34])
                            Pexp_ident "^" (lib/location.ml[934,31327+33]..[934,31327+34])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[934,31327+25]..[934,31327+32])
                                Pexp_ident "program" (lib/location.ml[934,31327+25]..[934,31327+32])
                            <arg>
                            Nolabel
                              expression (lib/location.ml[934,31327+35]..[934,31327+49])
                                Pexp_constant PConst_string(" script-file",(lib/location.ml[934,31327+36]..[934,31327+48]),None)
                          ]
                      <arg>
                      Nolabel
                        expression (lib/location.ml[935,31378+6]..[935,31378+23])
                          Pexp_ident "Style.inline_code" (lib/location.ml[935,31378+6]..[935,31378+23])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[935,31378+24]..[935,31378+53])
                          Pexp_apply
                          expression (lib/location.ml[935,31378+33]..[935,31378+34])
                            Pexp_ident "^" (lib/location.ml[935,31378+33]..[935,31378+34])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[935,31378+25]..[935,31378+32])
                                Pexp_ident "program" (lib/location.ml[935,31378+25]..[935,31378+32])
                            <arg>
                            Nolabel
                              expression (lib/location.ml[935,31378+35]..[935,31378+52])
                                Pexp_constant PConst_string(" script-file.ml",(lib/location.ml[935,31378+36]..[935,31378+51]),None)
                          ]
                      <arg>
                      Nolabel
                        expression (lib/location.ml[936,31432+6]..[936,31432+23])
                          Pexp_ident "Style.inline_code" (lib/location.ml[936,31432+6]..[936,31432+23])
                      <arg>
                      Nolabel
                        expression (lib/location.ml[936,31432+24]..[936,31432+52])
                          Pexp_apply
                          expression (lib/location.ml[936,31432+33]..[936,31432+34])
                            Pexp_ident "^" (lib/location.ml[936,31432+33]..[936,31432+34])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[936,31432+25]..[936,31432+32])
                                Pexp_ident "program" (lib/location.ml[936,31432+25]..[936,31432+32])
                            <arg>
                            Nolabel
                              expression (lib/location.ml[936,31432+35]..[936,31432+51])
                                Pexp_constant PConst_string(" ./script-file",(lib/location.ml[936,31432+36]..[936,31432+50]),None)
                          ]
                    ]
              ]
              expression (lib/location.ml[938,31490+2]..[942,31645+24])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[938,31490+6]..[938,31490+11])
                      Ppat_var "alert" (lib/location.ml[938,31490+6]..[938,31490+11])
                    expression (lib/location.ml[939,31504+4]..[940,31567+72])
                      Pexp_record
                      [
                        "Warnings.kind" (lib/location.ml[939,31504+5]..[939,31504+18])
                          expression (lib/location.ml[939,31504+19]..[939,31504+41])
                            Pexp_constant PConst_string("ocaml_deprecated_cli",(lib/location.ml[939,31504+20]..[939,31504+40]),None)
                        "use" (lib/location.ml[939,31504+43]..[939,31504+46])
                          expression (lib/location.ml[939,31504+47]..[939,31504+51])
                            Pexp_ident "none" (lib/location.ml[939,31504+47]..[939,31504+51])
                        "def" (lib/location.ml[939,31504+53]..[939,31504+56])
                          expression (lib/location.ml[939,31504+57]..[939,31504+61])
                            Pexp_ident "none" (lib/location.ml[939,31504+57]..[939,31504+61])
                        "message" (lib/location.ml[940,31567+5]..[940,31567+12])
                          expression (lib/location.ml[940,31567+15]..[940,31567+71])
                            Pexp_apply
                            expression (lib/location.ml[940,31567+15]..[940,31567+30])
                              Pexp_ident "Format.asprintf" (lib/location.ml[940,31567+15]..[940,31567+30])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[940,31567+31]..[940,31567+42])
                                  Pexp_constant PConst_string("@[@\n%a@]",(lib/location.ml[940,31567+32]..[940,31567+41]),None)
                              <arg>
                              Nolabel
                                expression (lib/location.ml[940,31567+43]..[940,31567+63])
                                  Pexp_ident "Format.pp_print_text" (lib/location.ml[940,31567+43]..[940,31567+63])
                              <arg>
                              Nolabel
                                expression (lib/location.ml[940,31567+64]..[940,31567+71])
                                  Pexp_ident "message" (lib/location.ml[940,31567+64]..[940,31567+71])
                            ]
                      ]
                      None
                ]
                expression (lib/location.ml[942,31645+2]..[942,31645+24])
                  Pexp_apply
                  expression (lib/location.ml[942,31645+2]..[942,31645+13])
                    Pexp_ident "prerr_alert" (lib/location.ml[942,31645+2]..[942,31645+13])
                  [
                    <arg>
                    Nolabel
                      expression (lib/location.ml[942,31645+14]..[942,31645+18])
                        Pexp_ident "none" (lib/location.ml[942,31645+14]..[942,31645+18])
                    <arg>
                    Nolabel
                      expression (lib/location.ml[942,31645+19]..[942,31645+24])
                        Pexp_ident "alert" (lib/location.ml[942,31645+19]..[942,31645+24])
                  ]
    ]
  structure_item (lib/location.ml[947,31790+0]..[947,31790+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[947,31790+4]..[947,31790+16])
          Ppat_var "error_of_exn" (lib/location.ml[947,31790+4]..[947,31790+16])
        core_type (lib/location.ml[947,31790+19]..[947,31790+49])
          Ptyp_constr "ref" (lib/location.ml[947,31790+46]..[947,31790+49])
          [
            core_type (lib/location.ml[947,31790+19]..[947,31790+45])
              Ptyp_constr "list" (lib/location.ml[947,31790+41]..[947,31790+45])
              [
                core_type (lib/location.ml[947,31790+20]..[947,31790+39])
                  Ptyp_arrow
                  Nolabel
                  core_type (lib/location.ml[947,31790+20]..[947,31790+23])
                    Ptyp_constr "exn" (lib/location.ml[947,31790+20]..[947,31790+23])
                    []
                  core_type (lib/location.ml[947,31790+27]..[947,31790+39])
                    Ptyp_constr "option" (lib/location.ml[947,31790+33]..[947,31790+39])
                    [
                      core_type (lib/location.ml[947,31790+27]..[947,31790+32])
                        Ptyp_constr "error" (lib/location.ml[947,31790+27]..[947,31790+32])
                        []
                    ]
              ]
          ]
        expression (lib/location.ml[947,31790+52]..[947,31790+58])
          Pexp_apply
          expression (lib/location.ml[947,31790+52]..[947,31790+55])
            Pexp_ident "ref" (lib/location.ml[947,31790+52]..[947,31790+55])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[947,31790+56]..[947,31790+58])
                Pexp_construct "[]" (lib/location.ml[947,31790+56]..[947,31790+58])
                None
          ]
    ]
  structure_item (lib/location.ml[949,31850+0]..[949,31850+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[949,31850+4]..[949,31850+25])
          Ppat_var "register_error_of_exn" (lib/location.ml[949,31850+4]..[949,31850+25])
        expression (lib/location.ml[949,31850+26]..[949,31850+64]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[949,31850+26]..[949,31850+27])
              Nolabel
              None
              pattern (lib/location.ml[949,31850+26]..[949,31850+27])
                Ppat_var "f" (lib/location.ml[949,31850+26]..[949,31850+27])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[949,31850+30]..[949,31850+64])
              Pexp_apply
              expression (lib/location.ml[949,31850+43]..[949,31850+45])
                Pexp_ident ":=" (lib/location.ml[949,31850+43]..[949,31850+45])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[949,31850+30]..[949,31850+42])
                    Pexp_ident "error_of_exn" (lib/location.ml[949,31850+30]..[949,31850+42])
                <arg>
                Nolabel
                  expression (lib/location.ml[949,31850+46]..[949,31850+64])
                    Pexp_construct "::" (lib/location.ml[949,31850+48]..[949,31850+50])
                    Some
                      expression (lib/location.ml[949,31850+46]..[949,31850+64]) ghost
                        Pexp_tuple
                        [
                          expression (lib/location.ml[949,31850+46]..[949,31850+47])
                            Pexp_ident "f" (lib/location.ml[949,31850+46]..[949,31850+47])
                          expression (lib/location.ml[949,31850+51]..[949,31850+64])
                            Pexp_apply
                            expression (lib/location.ml[949,31850+51]..[949,31850+52])
                              Pexp_ident "!" (lib/location.ml[949,31850+51]..[949,31850+52])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[949,31850+52]..[949,31850+64])
                                  Pexp_ident "error_of_exn" (lib/location.ml[949,31850+52]..[949,31850+64])
                            ]
                        ]
              ]
    ]
  structure_item (lib/location.ml[951,31916+0]..[951,31916+51])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (lib/location.ml[951,31916+0]..[951,31916+51])
          pext_name = "Already_displayed_error"
          pext_kind =
            Pext_rebind
              "Warnings.Errors" (lib/location.ml[951,31916+36]..[951,31916+51])
  structure_item (lib/location.ml[953,31969+0]..[964,32252+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[953,31969+4]..[953,31969+16])
          Ppat_var "error_of_exn" (lib/location.ml[953,31969+4]..[953,31969+16])
        expression (lib/location.ml[953,31969+17]..[964,32252+23]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[953,31969+17]..[953,31969+20])
              Nolabel
              None
              pattern (lib/location.ml[953,31969+17]..[953,31969+20])
                Ppat_var "exn" (lib/location.ml[953,31969+17]..[953,31969+20])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[954,31992+2]..[964,32252+23])
              Pexp_match
              expression (lib/location.ml[954,31992+8]..[954,31992+11])
                Pexp_ident "exn" (lib/location.ml[954,31992+8]..[954,31992+11])
              [
                <case>
                  pattern (lib/location.ml[955,32009+4]..[955,32009+27])
                    Ppat_construct "Already_displayed_error" (lib/location.ml[955,32009+4]..[955,32009+27])
                    None
                  expression (lib/location.ml[955,32009+31]..[955,32009+54])
                    Pexp_construct "Some" (lib/location.ml[955,32009+31]..[955,32009+35])
                    Some
                      expression (lib/location.ml[955,32009+36]..[955,32009+54])
                        Pexp_variant "Already_displayed"
                        None
                <case>
                  pattern (lib/location.ml[956,32064+4]..[956,32064+5])
                    Ppat_any
                  expression (lib/location.ml[957,32073+5]..[964,32252+23])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (lib/location.ml[957,32073+13]..[957,32073+17])
                          Ppat_var "loop" (lib/location.ml[957,32073+13]..[957,32073+17])
                        expression (lib/location.ml[957,32073+20]..[962,32214+29])
                          Pexp_function
                          []
                          None
                          Pfunction_cases (lib/location.ml[957,32073+20]..[962,32214+29])
                            [
                              <case>
                                pattern (lib/location.ml[958,32102+9]..[958,32102+11])
                                  Ppat_construct "[]" (lib/location.ml[958,32102+9]..[958,32102+11])
                                  None
                                expression (lib/location.ml[958,32102+15]..[958,32102+19])
                                  Pexp_construct "None" (lib/location.ml[958,32102+15]..[958,32102+19])
                                  None
                              <case>
                                pattern (lib/location.ml[959,32122+9]..[959,32122+18])
                                  Ppat_construct "::" (lib/location.ml[959,32122+11]..[959,32122+13])
                                  Some
                                    []
                                    pattern (lib/location.ml[959,32122+9]..[959,32122+18]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (lib/location.ml[959,32122+9]..[959,32122+10])
                                          Ppat_var "f" (lib/location.ml[959,32122+9]..[959,32122+10])
                                        pattern (lib/location.ml[959,32122+14]..[959,32122+18])
                                          Ppat_var "rest" (lib/location.ml[959,32122+14]..[959,32122+18])
                                      ]
                                expression (lib/location.ml[960,32144+10]..[962,32214+29])
                                  Pexp_match
                                  expression (lib/location.ml[960,32144+16]..[960,32144+21])
                                    Pexp_apply
                                    expression (lib/location.ml[960,32144+16]..[960,32144+17])
                                      Pexp_ident "f" (lib/location.ml[960,32144+16]..[960,32144+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[960,32144+18]..[960,32144+21])
                                          Pexp_ident "exn" (lib/location.ml[960,32144+18]..[960,32144+21])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/location.ml[961,32171+12]..[961,32171+22])
                                        Ppat_construct "Some" (lib/location.ml[961,32171+12]..[961,32171+16])
                                        Some
                                          []
                                          pattern (lib/location.ml[961,32171+17]..[961,32171+22])
                                            Ppat_var "error" (lib/location.ml[961,32171+17]..[961,32171+22])
                                      expression (lib/location.ml[961,32171+26]..[961,32171+42])
                                        Pexp_construct "Some" (lib/location.ml[961,32171+26]..[961,32171+30])
                                        Some
                                          expression (lib/location.ml[961,32171+31]..[961,32171+42])
                                            Pexp_variant "Ok"
                                            Some
                                              expression (lib/location.ml[961,32171+36]..[961,32171+41])
                                                Pexp_ident "error" (lib/location.ml[961,32171+36]..[961,32171+41])
                                    <case>
                                      pattern (lib/location.ml[962,32214+12]..[962,32214+16])
                                        Ppat_construct "None" (lib/location.ml[962,32214+12]..[962,32214+16])
                                        None
                                      expression (lib/location.ml[962,32214+20]..[962,32214+29])
                                        Pexp_apply
                                        expression (lib/location.ml[962,32214+20]..[962,32214+24])
                                          Pexp_ident "loop" (lib/location.ml[962,32214+20]..[962,32214+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[962,32214+25]..[962,32214+29])
                                              Pexp_ident "rest" (lib/location.ml[962,32214+25]..[962,32214+29])
                                        ]
                                  ]
                            ]
                    ]
                    expression (lib/location.ml[964,32252+5]..[964,32252+23])
                      Pexp_apply
                      expression (lib/location.ml[964,32252+5]..[964,32252+9])
                        Pexp_ident "loop" (lib/location.ml[964,32252+5]..[964,32252+9])
                      [
                        <arg>
                        Nolabel
                          expression (lib/location.ml[964,32252+10]..[964,32252+23])
                            Pexp_apply
                            expression (lib/location.ml[964,32252+10]..[964,32252+11])
                              Pexp_ident "!" (lib/location.ml[964,32252+10]..[964,32252+11])
                            [
                              <arg>
                              Nolabel
                                expression (lib/location.ml[964,32252+11]..[964,32252+23])
                                  Pexp_ident "error_of_exn" (lib/location.ml[964,32252+11]..[964,32252+23])
                            ]
                      ]
              ]
    ]
  structure_item (lib/location.ml[966,32277+0]..[972,32438+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[966,32277+4]..[966,32277+6])
          Ppat_construct "()" (lib/location.ml[966,32277+4]..[966,32277+6])
          None
        expression (lib/location.ml[967,32286+2]..[972,32438+5])
          Pexp_apply
          expression (lib/location.ml[967,32286+2]..[967,32286+23])
            Pexp_ident "register_error_of_exn" (lib/location.ml[967,32286+2]..[967,32286+23])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[968,32310+4]..[972,32438+5])
                Pexp_function
                []
                None
                Pfunction_cases (lib/location.ml[968,32310+5]..[971,32420+17])
                  [
                    <case>
                      pattern (lib/location.ml[969,32324+8]..[969,32324+21])
                        Ppat_construct "Sys_error" (lib/location.ml[969,32324+8]..[969,32324+17])
                        Some
                          []
                          pattern (lib/location.ml[969,32324+18]..[969,32324+21])
                            Ppat_var "msg" (lib/location.ml[969,32324+18]..[969,32324+21])
                      expression (lib/location.ml[970,32349+10]..[970,32349+70])
                        Pexp_construct "Some" (lib/location.ml[970,32349+10]..[970,32349+14])
                        Some
                          expression (lib/location.ml[970,32349+15]..[970,32349+70])
                            Pexp_apply
                            expression (lib/location.ml[970,32349+16]..[970,32349+22])
                              Pexp_ident "errorf" (lib/location.ml[970,32349+16]..[970,32349+22])
                            [
                              <arg>
                              Labelled "loc"
                                expression (lib/location.ml[970,32349+28]..[970,32349+49])
                                  Pexp_apply
                                  expression (lib/location.ml[970,32349+29]..[970,32349+36])
                                    Pexp_ident "in_file" (lib/location.ml[970,32349+29]..[970,32349+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[970,32349+37]..[970,32349+48])
                                        Pexp_apply
                                        expression (lib/location.ml[970,32349+37]..[970,32349+38])
                                          Pexp_ident "!" (lib/location.ml[970,32349+37]..[970,32349+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/location.ml[970,32349+38]..[970,32349+48])
                                              Pexp_ident "input_name" (lib/location.ml[970,32349+38]..[970,32349+48])
                                        ]
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/location.ml[970,32349+50]..[970,32349+65])
                                  Pexp_constant PConst_string("I/O error: %s",(lib/location.ml[970,32349+51]..[970,32349+64]),None)
                              <arg>
                              Nolabel
                                expression (lib/location.ml[970,32349+66]..[970,32349+69])
                                  Pexp_ident "msg" (lib/location.ml[970,32349+66]..[970,32349+69])
                            ]
                    <case>
                      pattern (lib/location.ml[971,32420+8]..[971,32420+9])
                        Ppat_any
                      expression (lib/location.ml[971,32420+13]..[971,32420+17])
                        Pexp_construct "None" (lib/location.ml[971,32420+13]..[971,32420+17])
                        None
                  ]
          ]
    ]
  structure_item (lib/location.ml[974,32445+0]..[974,32445+41])
    Pstr_primitive
    value_description "reraise" (lib/location.ml[974,32445+9]..[974,32445+16]) (lib/location.ml[974,32445+0]..[974,32445+41])
      core_type (lib/location.ml[974,32445+19]..[974,32445+28])
        Ptyp_arrow
        Nolabel
        core_type (lib/location.ml[974,32445+19]..[974,32445+22])
          Ptyp_constr "exn" (lib/location.ml[974,32445+19]..[974,32445+22])
          []
        core_type (lib/location.ml[974,32445+26]..[974,32445+28])
          Ptyp_var a
      [
        "%reraise"
      ]
  structure_item (lib/location.ml[976,32488+0]..[984,32735+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[976,32488+4]..[976,32488+20])
          Ppat_var "report_exception" (lib/location.ml[976,32488+4]..[976,32488+20])
        expression (lib/location.ml[976,32488+21]..[984,32735+12]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[976,32488+21]..[976,32488+24])
              Nolabel
              None
              pattern (lib/location.ml[976,32488+21]..[976,32488+24])
                Ppat_var "ppf" (lib/location.ml[976,32488+21]..[976,32488+24])
            Pparam_val (lib/location.ml[976,32488+25]..[976,32488+28])
              Nolabel
              None
              pattern (lib/location.ml[976,32488+25]..[976,32488+28])
                Ppat_var "exn" (lib/location.ml[976,32488+25]..[976,32488+28])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[977,32519+2]..[984,32735+12])
              Pexp_let Rec
              [
                <def>
                  pattern (lib/location.ml[977,32519+10]..[977,32519+14])
                    Ppat_var "loop" (lib/location.ml[977,32519+10]..[977,32519+14])
                  expression (lib/location.ml[977,32519+15]..[982,32681+48]) ghost
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[977,32519+15]..[977,32519+16])
                        Nolabel
                        None
                        pattern (lib/location.ml[977,32519+15]..[977,32519+16])
                          Ppat_var "n" (lib/location.ml[977,32519+15]..[977,32519+16])
                      Pparam_val (lib/location.ml[977,32519+17]..[977,32519+20])
                        Nolabel
                        None
                        pattern (lib/location.ml[977,32519+17]..[977,32519+20])
                          Ppat_var "exn" (lib/location.ml[977,32519+17]..[977,32519+20])
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[978,32542+4]..[982,32681+48])
                        Pexp_match
                        expression (lib/location.ml[978,32542+10]..[978,32542+26])
                          Pexp_apply
                          expression (lib/location.ml[978,32542+10]..[978,32542+22])
                            Pexp_ident "error_of_exn" (lib/location.ml[978,32542+10]..[978,32542+22])
                          [
                            <arg>
                            Nolabel
                              expression (lib/location.ml[978,32542+23]..[978,32542+26])
                                Pexp_ident "exn" (lib/location.ml[978,32542+23]..[978,32542+26])
                          ]
                        [
                          <case>
                            pattern (lib/location.ml[979,32574+6]..[979,32574+10])
                              Ppat_construct "None" (lib/location.ml[979,32574+6]..[979,32574+10])
                              None
                            expression (lib/location.ml[979,32574+14]..[979,32574+25])
                              Pexp_apply
                              expression (lib/location.ml[979,32574+14]..[979,32574+21])
                                Pexp_ident "reraise" (lib/location.ml[979,32574+14]..[979,32574+21])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[979,32574+22]..[979,32574+25])
                                    Pexp_ident "exn" (lib/location.ml[979,32574+22]..[979,32574+25])
                              ]
                          <case>
                            pattern (lib/location.ml[980,32600+6]..[980,32600+29])
                              Ppat_construct "Some" (lib/location.ml[980,32600+6]..[980,32600+10])
                              Some
                                []
                                pattern (lib/location.ml[980,32600+11]..[980,32600+29])
                                  Ppat_variant "Already_displayed"
                                  None
                            expression (lib/location.ml[980,32600+33]..[980,32600+35])
                              Pexp_construct "()" (lib/location.ml[980,32600+33]..[980,32600+35])
                              None
                          <case>
                            pattern (lib/location.ml[981,32636+6]..[981,32636+20])
                              Ppat_construct "Some" (lib/location.ml[981,32636+6]..[981,32636+10])
                              Some
                                []
                                pattern (lib/location.ml[981,32636+11]..[981,32636+20])
                                  Ppat_variant "Ok"
                                  Some
                                    pattern (lib/location.ml[981,32636+16]..[981,32636+19])
                                      Ppat_var "err" (lib/location.ml[981,32636+16]..[981,32636+19])
                            expression (lib/location.ml[981,32636+24]..[981,32636+44])
                              Pexp_apply
                              expression (lib/location.ml[981,32636+24]..[981,32636+36])
                                Pexp_ident "report_error" (lib/location.ml[981,32636+24]..[981,32636+36])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[981,32636+37]..[981,32636+40])
                                    Pexp_ident "ppf" (lib/location.ml[981,32636+37]..[981,32636+40])
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[981,32636+41]..[981,32636+44])
                                    Pexp_ident "err" (lib/location.ml[981,32636+41]..[981,32636+44])
                              ]
                          <case>
                            pattern (lib/location.ml[982,32681+6]..[982,32681+19])
                              Ppat_exception
                              pattern (lib/location.ml[982,32681+16]..[982,32681+19])
                                Ppat_var "exn" (lib/location.ml[982,32681+16]..[982,32681+19])
                            <when>
                              expression (lib/location.ml[982,32681+25]..[982,32681+30])
                                Pexp_apply
                                expression (lib/location.ml[982,32681+27]..[982,32681+28])
                                  Pexp_ident ">" (lib/location.ml[982,32681+27]..[982,32681+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[982,32681+25]..[982,32681+26])
                                      Pexp_ident "n" (lib/location.ml[982,32681+25]..[982,32681+26])
                                  <arg>
                                  Nolabel
                                    expression (lib/location.ml[982,32681+29]..[982,32681+30])
                                      Pexp_constant PConst_int (0,None)
                                ]
                            expression (lib/location.ml[982,32681+34]..[982,32681+48])
                              Pexp_apply
                              expression (lib/location.ml[982,32681+34]..[982,32681+38])
                                Pexp_ident "loop" (lib/location.ml[982,32681+34]..[982,32681+38])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[982,32681+39]..[982,32681+44])
                                    Pexp_apply
                                    expression (lib/location.ml[982,32681+41]..[982,32681+42])
                                      Pexp_ident "-" (lib/location.ml[982,32681+41]..[982,32681+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[982,32681+40]..[982,32681+41])
                                          Pexp_ident "n" (lib/location.ml[982,32681+40]..[982,32681+41])
                                      <arg>
                                      Nolabel
                                        expression (lib/location.ml[982,32681+42]..[982,32681+43])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (lib/location.ml[982,32681+45]..[982,32681+48])
                                    Pexp_ident "exn" (lib/location.ml[982,32681+45]..[982,32681+48])
                              ]
                        ]
              ]
              expression (lib/location.ml[984,32735+2]..[984,32735+12])
                Pexp_apply
                expression (lib/location.ml[984,32735+2]..[984,32735+6])
                  Pexp_ident "loop" (lib/location.ml[984,32735+2]..[984,32735+6])
                [
                  <arg>
                  Nolabel
                    expression (lib/location.ml[984,32735+7]..[984,32735+8])
                      Pexp_constant PConst_int (5,None)
                  <arg>
                  Nolabel
                    expression (lib/location.ml[984,32735+9]..[984,32735+12])
                      Pexp_ident "exn" (lib/location.ml[984,32735+9]..[984,32735+12])
                ]
    ]
  structure_item (lib/location.ml[986,32749+0]..[986,32749+24])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (lib/location.ml[986,32749+0]..[986,32749+24])
          pext_name = "Error"
          pext_kind =
            Pext_decl
              [
                core_type (lib/location.ml[986,32749+19]..[986,32749+24])
                  Ptyp_constr "error" (lib/location.ml[986,32749+19]..[986,32749+24])
                  []
              ]
              None
  structure_item (lib/location.ml[988,32775+0]..[993,32866+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[988,32775+4]..[988,32775+6])
          Ppat_construct "()" (lib/location.ml[988,32775+4]..[988,32775+6])
          None
        expression (lib/location.ml[989,32784+2]..[993,32866+5])
          Pexp_apply
          expression (lib/location.ml[989,32784+2]..[989,32784+23])
            Pexp_ident "register_error_of_exn" (lib/location.ml[989,32784+2]..[989,32784+23])
          [
            <arg>
            Nolabel
              expression (lib/location.ml[990,32808+4]..[993,32866+5])
                Pexp_function
                []
                None
                Pfunction_cases (lib/location.ml[990,32808+5]..[992,32848+17])
                  [
                    <case>
                      pattern (lib/location.ml[991,32822+8]..[991,32822+15])
                        Ppat_construct "Error" (lib/location.ml[991,32822+8]..[991,32822+13])
                        Some
                          []
                          pattern (lib/location.ml[991,32822+14]..[991,32822+15])
                            Ppat_var "e" (lib/location.ml[991,32822+14]..[991,32822+15])
                      expression (lib/location.ml[991,32822+19]..[991,32822+25])
                        Pexp_construct "Some" (lib/location.ml[991,32822+19]..[991,32822+23])
                        Some
                          expression (lib/location.ml[991,32822+24]..[991,32822+25])
                            Pexp_ident "e" (lib/location.ml[991,32822+24]..[991,32822+25])
                    <case>
                      pattern (lib/location.ml[992,32848+8]..[992,32848+9])
                        Ppat_any
                      expression (lib/location.ml[992,32848+13]..[992,32848+17])
                        Pexp_construct "None" (lib/location.ml[992,32848+13]..[992,32848+17])
                        None
                  ]
          ]
    ]
  structure_item (lib/location.ml[995,32873+0]..[996,32918+66])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[995,32873+4]..[995,32873+16])
          Ppat_var "raise_errorf" (lib/location.ml[995,32873+4]..[995,32873+16])
        expression (lib/location.ml[995,32873+17]..[996,32918+66]) ghost
          Pexp_function
          [
            Pparam_val (lib/location.ml[995,32873+17]..[995,32873+30])
              Optional "loc"
              Some
                expression (lib/location.ml[995,32873+25]..[995,32873+29])
                  Pexp_ident "none" (lib/location.ml[995,32873+25]..[995,32873+29])
              pattern (lib/location.ml[995,32873+19]..[995,32873+22])
                Ppat_var "loc" (lib/location.ml[995,32873+19]..[995,32873+22])
            Pparam_val (lib/location.ml[995,32873+31]..[995,32873+42])
              Optional "sub"
              Some
                expression (lib/location.ml[995,32873+39]..[995,32873+41])
                  Pexp_construct "[]" (lib/location.ml[995,32873+39]..[995,32873+41])
                  None
              pattern (lib/location.ml[995,32873+33]..[995,32873+36])
                Ppat_var "sub" (lib/location.ml[995,32873+33]..[995,32873+36])
          ]
          None
          Pfunction_body
            expression (lib/location.ml[996,32918+2]..[996,32918+66])
              Pexp_apply
              expression (lib/location.ml[996,32918+2]..[996,32918+17])
                Pexp_ident "Format.kdprintf" (lib/location.ml[996,32918+2]..[996,32918+17])
              [
                <arg>
                Nolabel
                  expression (lib/location.ml[996,32918+18]..[996,32918+66])
                    Pexp_function
                    [
                      Pparam_val (lib/location.ml[996,32918+23]..[996,32918+26])
                        Nolabel
                        None
                        pattern (lib/location.ml[996,32918+23]..[996,32918+26])
                          Ppat_var "txt" (lib/location.ml[996,32918+23]..[996,32918+26])
                    ]
                    None
                    Pfunction_body
                      expression (lib/location.ml[996,32918+30]..[996,32918+65])
                        Pexp_apply
                        expression (lib/location.ml[996,32918+30]..[996,32918+35])
                          Pexp_ident "raise" (lib/location.ml[996,32918+30]..[996,32918+35])
                        [
                          <arg>
                          Nolabel
                            expression (lib/location.ml[996,32918+36]..[996,32918+65])
                              Pexp_construct "Error" (lib/location.ml[996,32918+37]..[996,32918+42])
                              Some
                                expression (lib/location.ml[996,32918+43]..[996,32918+64])
                                  Pexp_apply
                                  expression (lib/location.ml[996,32918+44]..[996,32918+51])
                                    Pexp_ident "mkerror" (lib/location.ml[996,32918+44]..[996,32918+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[996,32918+52]..[996,32918+55])
                                        Pexp_ident "loc" (lib/location.ml[996,32918+52]..[996,32918+55])
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[996,32918+56]..[996,32918+59])
                                        Pexp_ident "sub" (lib/location.ml[996,32918+56]..[996,32918+59])
                                    <arg>
                                    Nolabel
                                      expression (lib/location.ml[996,32918+60]..[996,32918+63])
                                        Pexp_ident "txt" (lib/location.ml[996,32918+60]..[996,32918+63])
                                  ]
                        ]
              ]
    ]
]

open Lexing
type t = Warnings.loc =
  {
  loc_start: position ;
  loc_end: position ;
  loc_ghost: bool }
let in_file = Warnings.ghost_loc_in_file
let none = in_file "_none_"
let is_none l = l = none
let curr lexbuf =
  {
    loc_start = (lexbuf.lex_start_p);
    loc_end = (lexbuf.lex_curr_p);
    loc_ghost = false
  }
let init lexbuf fname =
  lexbuf.lex_curr_p <-
    { pos_fname = fname; pos_lnum = 1; pos_bol = 0; pos_cnum = 0 }
let symbol_rloc () =
  {
    loc_start = (Parsing.symbol_start_pos ());
    loc_end = (Parsing.symbol_end_pos ());
    loc_ghost = false
  }
let symbol_gloc () =
  {
    loc_start = (Parsing.symbol_start_pos ());
    loc_end = (Parsing.symbol_end_pos ());
    loc_ghost = true
  }
let rhs_loc n =
  {
    loc_start = (Parsing.rhs_start_pos n);
    loc_end = (Parsing.rhs_end_pos n);
    loc_ghost = false
  }
let rhs_interval m n =
  {
    loc_start = (Parsing.rhs_start_pos m);
    loc_end = (Parsing.rhs_end_pos n);
    loc_ghost = false
  }
let get_pos_info pos =
  ((pos.pos_fname), (pos.pos_lnum), (pos.pos_cnum - pos.pos_bol))
type 'a loc = {
  txt: 'a ;
  loc: t }
let mkloc txt loc = { txt; loc }
let mknoloc txt = mkloc txt none
let input_name = ref "_none_"
let input_lexbuf = ref (None : lexbuf option)
let input_phrase_buffer = ref (None : Buffer.t option)
let status = ref Terminfo.Uninitialised
let setup_terminal () =
  if (!status) = Terminfo.Uninitialised
  then status := (Terminfo.setup stdout)
let num_loc_lines = ref 0
let is_first_message () = (!num_loc_lines) = 0
let reset () = num_loc_lines := 0
let echo_eof () = print_newline (); incr num_loc_lines
let separate_new_message ppf =
  if not (is_first_message ())
  then (Format.pp_print_newline ppf (); incr num_loc_lines)
let print_updating_num_loc_lines ppf f arg =
  let open Format in
    let out_functions = pp_get_formatter_out_functions ppf () in
    let out_string str start len =
      let rec count i c =
        if i = (start + len)
        then c
        else
          if (str.[i]) = '\n'
          then count (succ i) (succ c)
          else count (succ i) c in
      num_loc_lines := ((!num_loc_lines) + (count start 0));
      out_functions.out_string str start len in
    pp_set_formatter_out_functions ppf { out_functions with out_string };
    f ppf arg;
    pp_print_flush ppf ();
    pp_set_formatter_out_functions ppf out_functions
let setup_tags () = ()
let rewrite_absolute_path path =
  match Misc.get_build_path_prefix_map () with
  | None -> path
  | Some map -> Build_path_prefix_map.rewrite map path
let rewrite_find_first_existing path =
  match Misc.get_build_path_prefix_map () with
  | None -> if Sys.file_exists path then Some path else None
  | Some prefix_map ->
      (match Build_path_prefix_map.rewrite_all prefix_map path with
       | [] -> if Sys.file_exists path then Some path else None
       | matches -> Some (List.find Sys.file_exists matches))
let print_loc ppf loc =
  setup_tags ();
  (let file_valid =
     function | "_none_" -> true | "" | "//toplevel//" -> false | _ -> true in
   let line_valid line = line > 0 in
   let chars_valid ~startchar ~endchar =
     (startchar <> (-1)) && (endchar <> (-1)) in
   let file =
     if (loc.loc_start).pos_fname = ""
     then !input_name
     else (loc.loc_start).pos_fname in
   let startline = (loc.loc_start).pos_lnum in
   let endline = (loc.loc_end).pos_lnum in
   let startchar = (loc.loc_start).pos_cnum - (loc.loc_start).pos_bol in
   let endchar = (loc.loc_end).pos_cnum - (loc.loc_end).pos_bol in
   let first = ref true in
   let capitalize s =
     if !first then (first := false; String.capitalize_ascii s) else s in
   let comma () = if !first then () else Format.fprintf ppf ", " in
   Format.fprintf ppf "@{<loc>";
   comma ();
   (let startline = if line_valid startline then startline else 1 in
    let endline = if line_valid endline then endline else startline in
    if startline = endline
    then Format.fprintf ppf "%s %i" (capitalize "line") startline
    else Format.fprintf ppf "%s %i-%i" (capitalize "lines") startline endline;
    if chars_valid ~startchar ~endchar
    then
      (comma ();
       Format.fprintf ppf "%s %i-%i" (capitalize "characters") startchar
         endchar);
    Format.fprintf ppf "@}"))
let print_locs ppf locs =
  Format.pp_print_list ~pp_sep:(fun ppf () -> Format.fprintf ppf ",@ ")
    print_loc ppf locs
module ISet :
  sig
    type 'a bound = ('a * int)
    type 'a t
    val of_intervals : ('a bound * 'a bound) list -> 'a t
    val mem : 'a t -> pos:int -> bool
    val find_bound_in : 'a t -> range:(int * int) -> 'a bound option
    val is_start : 'a t -> pos:int -> 'a option
    val is_end : 'a t -> pos:int -> 'a option
    val extrema : 'a t -> ('a bound * 'a bound) option
  end =
  struct
    type 'a bound = ('a * int)
    type 'a t = ('a bound * 'a bound) list
    let of_intervals intervals =
      let pos =
        ((List.map
            (fun ((a, x), (b, y)) ->
               if x > y then [] else [((a, x), `S); ((b, y), `E)]) intervals)
           |> List.flatten)
          |>
          (List.sort
             (fun ((_, x), k) ((_, y), k') ->
                let kn = function | `S -> 0 | `E -> 1 in
                compare (x, (kn k)) (y, (kn k')))) in
      let (nesting, acc) =
        List.fold_left
          (fun (nesting, acc) (a, kind) ->
             match (kind, nesting) with
             | (`S, `Outside) -> ((`Inside (a, 0)), acc)
             | (`S, `Inside (s, n)) -> ((`Inside (s, (n + 1))), acc)
             | (`E, `Outside) -> assert false
             | (`E, `Inside (s, 0)) -> (`Outside, ((s, a) :: acc))
             | (`E, `Inside (s, n)) -> ((`Inside (s, (n - 1))), acc))
          (`Outside, []) pos in
      assert (nesting = `Outside); List.rev acc
    let mem iset ~pos =
      List.exists (fun ((_, s), (_, e)) -> (s <= pos) && (pos <= e)) iset
    let find_bound_in iset ~range:(start, end_) =
      List.find_map
        (fun ((a, x), (b, y)) ->
           if (start <= x) && (x <= end_)
           then Some (a, x)
           else if (start <= y) && (y <= end_) then Some (b, y) else None)
        iset
    let is_start iset ~pos =
      List.find_map (fun ((a, x), _) -> if pos = x then Some a else None)
        iset
    let is_end iset ~pos =
      List.find_map (fun (_, (b, y)) -> if pos = y then Some b else None)
        iset
    let extrema iset =
      if iset = []
      then None
      else Some ((fst (List.hd iset)), (snd (List.hd (List.rev iset))))
  end 
let highlight_terminfo lb ppf locs =
  Format.pp_print_flush ppf ();
  (let pos0 = - (lb.lex_abs_pos) in
   if pos0 < 0 then raise Exit;
   (let lines = ref (!num_loc_lines) in
    for i = pos0 to lb.lex_buffer_len - 1 do
      if (Bytes.get lb.lex_buffer i) = '\n' then incr lines
    done;
    if (!lines) >= ((Terminfo.num_lines stdout) - 2) then raise Exit;
    flush stdout;
    Terminfo.backup stdout (!lines);
    (let bol = ref false in
     print_string "# ";
     for pos = 0 to (lb.lex_buffer_len - pos0) - 1 do
       (if !bol then (print_string "  "; bol := false);
        if List.exists (fun loc -> pos = (loc.loc_start).pos_cnum) locs
        then Terminfo.standout stdout true;
        if List.exists (fun loc -> pos = (loc.loc_end).pos_cnum) locs
        then Terminfo.standout stdout false;
        (let c = Bytes.get lb.lex_buffer (pos + pos0) in
         print_char c; bol := (c = '\n')))
     done;
     Terminfo.standout stdout false;
     Terminfo.resume stdout (!num_loc_lines);
     flush stdout)))
let highlight_terminfo lb ppf locs =
  try highlight_terminfo lb ppf locs with | Exit -> ()
type input_line = {
  text: string ;
  start_pos: int }
let infer_line_numbers (lines : (int option * input_line) list) :
  (int option * input_line) list=
  let (_, offset, consistent) =
    List.fold_left
      (fun (i, offset, consistent) (lnum, _) ->
         match (lnum, offset) with
         | (None, _) -> ((i + 1), offset, consistent)
         | (Some n, None) -> ((i + 1), (Some (n - i)), consistent)
         | (Some n, Some m) ->
             ((i + 1), offset, (consistent && (n = (m + i)))))
      (0, None, true) lines in
  match (offset, consistent) with
  | (Some m, true) ->
      List.mapi (fun i (_, line) -> ((Some (m + i)), line)) lines
  | (_, _) -> lines
let highlight_quote ppf
  ~get_lines:(get_lines :
               start_pos:position -> end_pos:position -> input_line list)
  ?(max_lines= 10) highlight_tag locs =
  let iset =
    ISet.of_intervals @@
      (List.filter_map
         (fun loc ->
            let (s, e) = ((loc.loc_start), (loc.loc_end)) in
            if (s.pos_cnum = (-1)) || (e.pos_cnum = (-1))
            then None
            else Some ((s, (s.pos_cnum)), (e, (e.pos_cnum - 1)))) locs) in
  match ISet.extrema iset with
  | None -> ()
  | Some ((leftmost, _), (rightmost, _)) ->
      let lines =
        (((get_lines ~start_pos:leftmost ~end_pos:rightmost) |>
            (List.map
               (fun ({ text; start_pos } as line) ->
                  let end_pos = (start_pos + (String.length text)) - 1 in
                  let line_nb =
                    match ISet.find_bound_in iset ~range:(start_pos, end_pos)
                    with
                    | None -> None
                    | Some (p, _) -> Some (p.pos_lnum) in
                  (line_nb, line))))
           |> infer_line_numbers)
          |>
          (List.map
             (fun (lnum, { text; start_pos }) ->
                (text, (Option.fold ~some:Int.to_string ~none:"" lnum),
                  start_pos))) in
      (Format.fprintf ppf "@[<v>";
       (match lines with
        | [] | ("", _, _)::[] -> ()
        | (line, line_nb, line_start_cnum)::[] ->
            (Format.fprintf ppf "%s | %s@," line_nb line;
             Format.fprintf ppf "%*s   " (String.length line_nb) "";
             for i = 0 to (rightmost.pos_cnum - line_start_cnum) - 1 do
               (let pos = line_start_cnum + i in
                if (ISet.is_start iset ~pos) <> None
                then Format.fprintf ppf "@{<%s>" highlight_tag;
                if ISet.mem iset ~pos
                then Format.pp_print_char ppf '^'
                else
                  if i < (String.length line)
                  then
                    (if (line.[i]) = '\t'
                     then Format.pp_print_char ppf '\t'
                     else Format.pp_print_char ppf ' ');
                if (ISet.is_end iset ~pos) <> None
                then Format.fprintf ppf "@}")
             done;
             Format.fprintf ppf "@}@,")
        | _ ->
            (Misc.pp_two_columns ~sep:"|" ~max_lines ppf) @@
              (List.map
                 (fun (line, line_nb, line_start_cnum) ->
                    let line =
                      String.mapi
                        (fun i car ->
                           if ISet.mem iset ~pos:(line_start_cnum + i)
                           then car
                           else '.') line in
                    (line_nb, line)) lines));
       Format.fprintf ppf "@]")
let lines_around ~start_pos:(start_pos : position)
  ~end_pos:(end_pos : position) ~seek:(seek : int -> unit)
  ~read_char:(read_char : unit -> char option) : input_line list=
  seek start_pos.pos_bol;
  (let lines = ref [] in
   let bol = ref start_pos.pos_bol in
   let cur = ref start_pos.pos_bol in
   let b = Buffer.create 80 in
   let add_line () =
     if (!bol) < (!cur)
     then
       let text = Buffer.contents b in
       (Buffer.clear b;
        lines := ({ text; start_pos = (!bol) } :: (!lines));
        bol := (!cur)) in
   let rec loop () =
     if (!bol) >= end_pos.pos_cnum
     then ()
     else
       (match read_char () with
        | None -> add_line ()
        | Some c ->
            (incr cur;
             (match c with
              | '\r' -> loop ()
              | '\n' -> (add_line (); loop ())
              | _ -> (Buffer.add_char b c; loop ())))) in
   loop (); List.rev (!lines))
let lines_around_from_lexbuf ~start_pos:(start_pos : position)
  ~end_pos:(end_pos : position) (lb : lexbuf) : input_line list=
  let rel n = n - lb.lex_abs_pos in
  if (rel start_pos.pos_bol) < 0
  then []
  else
    (let pos = ref 0 in
     let seek n = pos := (rel n) in
     let read_char () =
       if (!pos) >= lb.lex_buffer_len
       then None
       else (let c = Bytes.get lb.lex_buffer (!pos) in incr pos; Some c) in
     lines_around ~start_pos ~end_pos ~seek ~read_char)
let lines_around_from_phrasebuf ~start_pos:(start_pos : position)
  ~end_pos:(end_pos : position) (pb : Buffer.t) : input_line list=
  let pos = ref 0 in
  let seek n = pos := n in
  let read_char () =
    if (!pos) >= (Buffer.length pb)
    then None
    else (let c = Buffer.nth pb (!pos) in incr pos; Some c) in
  lines_around ~start_pos ~end_pos ~seek ~read_char
let lines_around_from_current_input ~start_pos ~end_pos =
  match ((!input_lexbuf), (!input_phrase_buffer), (!input_name)) with
  | (_, Some pb, "//toplevel//") ->
      lines_around_from_phrasebuf pb ~start_pos ~end_pos
  | (Some lb, _, _) -> lines_around_from_lexbuf lb ~start_pos ~end_pos
  | (None, _, _) -> []
type msg = (Format.formatter -> unit) loc
let msg ?(loc= none) fmt = Format.kdprintf (fun txt -> { loc; txt }) fmt
type report_kind =
  | Report_error 
  | Report_warning of string 
  | Report_warning_as_error of string 
  | Report_alert of string 
  | Report_alert_as_error of string 
type report = {
  kind: report_kind ;
  main: msg ;
  sub: msg list }
type report_printer =
  {
  pp: report_printer -> Format.formatter -> report -> unit ;
  pp_report_kind:
    report_printer -> report -> Format.formatter -> report_kind -> unit ;
  pp_main_loc: report_printer -> report -> Format.formatter -> t -> unit ;
  pp_main_txt:
    report_printer ->
      report -> Format.formatter -> (Format.formatter -> unit) -> unit
    ;
  pp_submsgs:
    report_printer -> report -> Format.formatter -> msg list -> unit ;
  pp_submsg: report_printer -> report -> Format.formatter -> msg -> unit ;
  pp_submsg_loc: report_printer -> report -> Format.formatter -> t -> unit ;
  pp_submsg_txt:
    report_printer ->
      report -> Format.formatter -> (Format.formatter -> unit) -> unit
    }
let is_dummy_loc loc =
  ((loc.loc_start).pos_cnum = (-1)) || ((loc.loc_end).pos_cnum = (-1))
let is_quotable_loc loc =
  (not (is_dummy_loc loc)) &&
    (((loc.loc_start).pos_fname = (!input_name)) &&
       ((loc.loc_end).pos_fname = (!input_name)))
type error = report
let report_error ppf err = ()
let mkerror loc sub txt = { kind = Report_error; main = { loc; txt }; sub }
let errorf ?(loc= none) ?(sub= []) = Format.kdprintf (mkerror loc sub)
let error ?(loc= none) ?(sub= []) msg_str =
  mkerror loc sub (fun ppf -> Format.pp_print_string ppf msg_str)
let error_of_printer ?(loc= none) ?(sub= []) pp x =
  mkerror loc sub (fun ppf -> pp ppf x)
let error_of_printer_file print x =
  error_of_printer ~loc:(in_file (!input_name)) print x
let default_warning_alert_reporter report mk (loc : t) w : report option=
  match report w with
  | `Inactive -> None
  | `Active { Warnings.id = id; message; is_error; sub_locs } ->
      let msg_of_str str = fun ppf -> Format.pp_print_string ppf str in
      let kind = mk is_error id in
      let main = { loc; txt = (msg_of_str message) } in
      let sub =
        List.map
          (fun (loc, sub_message) -> { loc; txt = (msg_of_str sub_message) })
          sub_locs in
      Some { kind; main; sub }
let default_warning_reporter =
  default_warning_alert_reporter Warnings.report
    (fun is_error id ->
       if is_error then Report_warning_as_error id else Report_warning id)
let warning_reporter = ref default_warning_reporter
let report_warning loc w = (!warning_reporter) loc w
let formatter_for_warnings = ref Format.err_formatter
let print_warning loc ppf w = ()
let prerr_warning loc w = print_warning loc (!formatter_for_warnings) w
let default_alert_reporter =
  default_warning_alert_reporter Warnings.report_alert
    (fun is_error id ->
       if is_error then Report_alert_as_error id else Report_alert id)
let alert_reporter = ref default_alert_reporter
let report_alert loc w = (!alert_reporter) loc w
let print_alert loc ppf w = ()
let prerr_alert loc w = print_alert loc (!formatter_for_warnings) w
let alert ?(def= none) ?(use= none) ~kind loc message =
  prerr_alert loc { Warnings.kind = kind; message; def; use }
let deprecated ?def ?use loc message =
  alert ?def ?use ~kind:"deprecated" loc message
module Style = Misc.Style
let auto_include_alert lib =
  let message =
    Format.asprintf
      "OCaml's lib directory layout changed in 5.0. The %a subdirectory has been automatically added to the search path, but you should add %a to the command-line to silence this alert (e.g. by adding %a to the list of libraries in your dune file, or adding %a to your %a file for ocamlbuild, or using %a for ocamlfind)."
      Style.inline_code lib Style.inline_code ("-I +" ^ lib)
      Style.inline_code lib Style.inline_code ("use_" ^ lib)
      Style.inline_code "_tags" Style.inline_code ("-package " ^ lib) in
  let alert =
    {
      Warnings.kind = "ocaml_deprecated_auto_include";
      use = none;
      def = none;
      message = (Format.asprintf "@[@\n%a@]" Format.pp_print_text message)
    } in
  prerr_alert none alert
let deprecated_script_alert program =
  let message =
    Format.asprintf
      "Running %a where the first argument is an implicit basename with no extension (e.g. %a) is deprecated. Either rename the script (%a) or qualify the basename (%a)"
      Style.inline_code program Style.inline_code (program ^ " script-file")
      Style.inline_code (program ^ " script-file.ml") Style.inline_code
      (program ^ " ./script-file") in
  let alert =
    {
      Warnings.kind = "ocaml_deprecated_cli";
      use = none;
      def = none;
      message = (Format.asprintf "@[@\n%a@]" Format.pp_print_text message)
    } in
  prerr_alert none alert
let error_of_exn : (exn -> error option) list ref = ref []
let register_error_of_exn f = error_of_exn := (f :: (!error_of_exn))
exception Already_displayed_error = Warnings.Errors
let error_of_exn exn =
  match exn with
  | Already_displayed_error -> Some `Already_displayed
  | _ ->
      let rec loop =
        function
        | [] -> None
        | f::rest ->
            (match f exn with
             | Some error -> Some (`Ok error)
             | None -> loop rest) in
      loop (!error_of_exn)
let () =
  register_error_of_exn
    (function
     | Sys_error msg ->
         Some (errorf ~loc:(in_file (!input_name)) "I/O error: %s" msg)
     | _ -> None)
external reraise : exn -> 'a = "%reraise"
let report_exception ppf exn =
  let rec loop n exn =
    match error_of_exn exn with
    | None -> reraise exn
    | Some `Already_displayed -> ()
    | Some (`Ok err) -> report_error ppf err
    | exception exn when n > 0 -> loop (n - 1) exn in
  loop 5 exn
exception Error of error 
let () = register_error_of_exn (function | Error e -> Some e | _ -> None)
let raise_errorf ?(loc= none) ?(sub= []) =
  Format.kdprintf (fun txt -> raise (Error (mkerror loc sub txt)))
[
  structure_item (lib/location.ml[16,1079+0]..lib/location.ml[16,1079+11])
    Tstr_open Fresh
    module_expr (lib/location.ml[16,1079+5]..lib/location.ml[16,1079+11])
      Tmod_ident "Stdlib!.Lexing"
  structure_item (lib/location.ml[18,1092+0]..lib/location.ml[19,1116+61])
    Tstr_type Rec
    [
      type_declaration t/320 (lib/location.ml[18,1092+0]..lib/location.ml[19,1116+61])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/location.ml[19,1116+4]..lib/location.ml[19,1116+24])
                Immutable
                loc_start/321                core_type (lib/location.ml[19,1116+15]..lib/location.ml[19,1116+23])
                  Ttyp_poly
                  core_type (lib/location.ml[19,1116+15]..lib/location.ml[19,1116+23])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
              (lib/location.ml[19,1116+25]..lib/location.ml[19,1116+43])
                Immutable
                loc_end/322                core_type (lib/location.ml[19,1116+34]..lib/location.ml[19,1116+42])
                  Ttyp_poly
                  core_type (lib/location.ml[19,1116+34]..lib/location.ml[19,1116+42])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
              (lib/location.ml[19,1116+44]..lib/location.ml[19,1116+59])
                Immutable
                loc_ghost/323                core_type (lib/location.ml[19,1116+55]..lib/location.ml[19,1116+59])
                  Ttyp_poly
                  core_type (lib/location.ml[19,1116+55]..lib/location.ml[19,1116+59])
                    Ttyp_constr "bool/5!"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/location.ml[18,1092+9]..lib/location.ml[18,1092+21])
              Ttyp_constr "Ocaml_ocaml_types!.Warnings.loc"
              []
    ]
  structure_item (lib/location.ml[21,1179+0]..lib/location.ml[21,1179+40])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[21,1179+4]..lib/location.ml[21,1179+11])
          Tpat_var "in_file/438"
        expression (lib/location.ml[21,1179+14]..lib/location.ml[21,1179+40])
          Texp_ident "Ocaml_ocaml_types!.Warnings.ghost_loc_in_file"
    ]
  structure_item (lib/location.ml[23,1221+0]..lib/location.ml[23,1221+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[23,1221+4]..lib/location.ml[23,1221+8])
          Tpat_var "none/439"
        expression (lib/location.ml[23,1221+11]..lib/location.ml[23,1221+27])
          Texp_apply
          expression (lib/location.ml[23,1221+11]..lib/location.ml[23,1221+18])
            Texp_ident "in_file/438"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[23,1221+19]..lib/location.ml[23,1221+27])
                Texp_constant Const_string("_none_",(lib/location.ml[23,1221+20]..lib/location.ml[23,1221+26]),None)
          ]
    ]
  structure_item (lib/location.ml[24,1249+0]..lib/location.ml[24,1249+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[24,1249+4]..lib/location.ml[24,1249+11])
          Tpat_var "is_none/440"
        expression (lib/location.ml[24,1249+12]..lib/location.ml[24,1249+26]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[24,1249+12]..lib/location.ml[24,1249+13])
                Tpat_var "l/442"
          ]
          Tfunction_body
            expression (lib/location.ml[24,1249+16]..lib/location.ml[24,1249+26])
              Texp_apply
              expression (lib/location.ml[24,1249+19]..lib/location.ml[24,1249+20])
                Texp_ident "Stdlib!.="
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[24,1249+17]..lib/location.ml[24,1249+18])
                    Texp_ident "l/442"
                <arg>
                  Nolabel
                  expression (lib/location.ml[24,1249+21]..lib/location.ml[24,1249+25])
                    Texp_ident "none/439"
              ]
    ]
  structure_item (lib/location.ml[26,1277+0]..lib/location.ml[30,1382+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[26,1277+4]..lib/location.ml[26,1277+8])
          Tpat_var "curr/443"
        expression (lib/location.ml[26,1277+9]..lib/location.ml[30,1382+1]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[26,1277+9]..lib/location.ml[26,1277+15])
                Tpat_var "lexbuf/445"
          ]
          Tfunction_body
            expression (lib/location.ml[26,1277+18]..lib/location.ml[30,1382+1])
              Texp_record
                fields =
                  [
                    "loc_start"
                      expression (lib/location.ml[27,1297+14]..lib/location.ml[27,1297+32])
                        Texp_field
                        expression (lib/location.ml[27,1297+14]..lib/location.ml[27,1297+20])
                          Texp_ident "lexbuf/445"
                        "lex_start_p"
                    "loc_end"
                      expression (lib/location.ml[28,1331+12]..lib/location.ml[28,1331+29])
                        Texp_field
                        expression (lib/location.ml[28,1331+12]..lib/location.ml[28,1331+18])
                          Texp_ident "lexbuf/445"
                        "lex_curr_p"
                    "loc_ghost"
                      expression (lib/location.ml[29,1362+14]..lib/location.ml[29,1362+19])
                        Texp_construct "false"
                        []
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/location.ml[32,1385+0]..lib/location.ml[38,1510+3])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[32,1385+4]..lib/location.ml[32,1385+8])
          Tpat_var "init/446"
        expression (lib/location.ml[32,1385+9]..lib/location.ml[38,1510+3]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[32,1385+9]..lib/location.ml[32,1385+15])
                Tpat_var "lexbuf/448"
            Nolabel
            Param_pat
              pattern (lib/location.ml[32,1385+16]..lib/location.ml[32,1385+21])
                Tpat_var "fname/449"
          ]
          Tfunction_body
            expression (lib/location.ml[33,1409+2]..lib/location.ml[38,1510+3])
              Texp_setfield
              expression (lib/location.ml[33,1409+2]..lib/location.ml[33,1409+8])
                Texp_ident "lexbuf/448"
              "lex_curr_p"
              expression (lib/location.ml[33,1409+23]..lib/location.ml[38,1510+3])
                Texp_record
                  fields =
                    [
                      "pos_fname"
                        expression (lib/location.ml[34,1434+16]..lib/location.ml[34,1434+21])
                          Texp_ident "fname/449"
                      "pos_lnum"
                        expression (lib/location.ml[35,1457+15]..lib/location.ml[35,1457+16])
                          Texp_constant Const_int 1
                      "pos_bol"
                        expression (lib/location.ml[36,1475+14]..lib/location.ml[36,1475+15])
                          Texp_constant Const_int 0
                      "pos_cnum"
                        expression (lib/location.ml[37,1492+15]..lib/location.ml[37,1492+16])
                          Texp_constant Const_int 0
                    ]
                  representation =
                    Record_regular
                  extended_expression =
                    None
    ]
  structure_item (lib/location.ml[40,1515+0]..lib/location.ml[44,1641+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[40,1515+4]..lib/location.ml[40,1515+15])
          Tpat_var "symbol_rloc/450"
        expression (lib/location.ml[40,1515+16]..lib/location.ml[44,1641+1]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[40,1515+16]..lib/location.ml[40,1515+18])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/location.ml[40,1515+21]..lib/location.ml[44,1641+1])
              Texp_record
                fields =
                  [
                    "loc_start"
                      expression (lib/location.ml[41,1538+14]..lib/location.ml[41,1538+41])
                        Texp_apply
                        expression (lib/location.ml[41,1538+14]..lib/location.ml[41,1538+38])
                          Texp_ident "Stdlib!.Parsing.symbol_start_pos"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[41,1538+39]..lib/location.ml[41,1538+41])
                              Texp_construct "()"
                              []
                        ]
                    "loc_end"
                      expression (lib/location.ml[42,1581+12]..lib/location.ml[42,1581+37])
                        Texp_apply
                        expression (lib/location.ml[42,1581+12]..lib/location.ml[42,1581+34])
                          Texp_ident "Stdlib!.Parsing.symbol_end_pos"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[42,1581+35]..lib/location.ml[42,1581+37])
                              Texp_construct "()"
                              []
                        ]
                    "loc_ghost"
                      expression (lib/location.ml[43,1620+14]..lib/location.ml[43,1620+19])
                        Texp_construct "false"
                        []
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/location.ml[46,1644+0]..lib/location.ml[50,1769+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[46,1644+4]..lib/location.ml[46,1644+15])
          Tpat_var "symbol_gloc/471"
        expression (lib/location.ml[46,1644+16]..lib/location.ml[50,1769+1]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[46,1644+16]..lib/location.ml[46,1644+18])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/location.ml[46,1644+21]..lib/location.ml[50,1769+1])
              Texp_record
                fields =
                  [
                    "loc_start"
                      expression (lib/location.ml[47,1667+14]..lib/location.ml[47,1667+41])
                        Texp_apply
                        expression (lib/location.ml[47,1667+14]..lib/location.ml[47,1667+38])
                          Texp_ident "Stdlib!.Parsing.symbol_start_pos"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[47,1667+39]..lib/location.ml[47,1667+41])
                              Texp_construct "()"
                              []
                        ]
                    "loc_end"
                      expression (lib/location.ml[48,1710+12]..lib/location.ml[48,1710+37])
                        Texp_apply
                        expression (lib/location.ml[48,1710+12]..lib/location.ml[48,1710+34])
                          Texp_ident "Stdlib!.Parsing.symbol_end_pos"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[48,1710+35]..lib/location.ml[48,1710+37])
                              Texp_construct "()"
                              []
                        ]
                    "loc_ghost"
                      expression (lib/location.ml[49,1749+14]..lib/location.ml[49,1749+18])
                        Texp_construct "true"
                        []
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/location.ml[52,1772+0]..lib/location.ml[56,1885+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[52,1772+4]..lib/location.ml[52,1772+11])
          Tpat_var "rhs_loc/474"
        expression (lib/location.ml[52,1772+12]..lib/location.ml[56,1885+1]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[52,1772+12]..lib/location.ml[52,1772+13])
                Tpat_var "n/476"
          ]
          Tfunction_body
            expression (lib/location.ml[52,1772+16]..lib/location.ml[56,1885+1])
              Texp_record
                fields =
                  [
                    "loc_start"
                      expression (lib/location.ml[53,1790+14]..lib/location.ml[53,1790+37])
                        Texp_apply
                        expression (lib/location.ml[53,1790+14]..lib/location.ml[53,1790+35])
                          Texp_ident "Stdlib!.Parsing.rhs_start_pos"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[53,1790+36]..lib/location.ml[53,1790+37])
                              Texp_ident "n/476"
                        ]
                    "loc_end"
                      expression (lib/location.ml[54,1829+12]..lib/location.ml[54,1829+33])
                        Texp_apply
                        expression (lib/location.ml[54,1829+12]..lib/location.ml[54,1829+31])
                          Texp_ident "Stdlib!.Parsing.rhs_end_pos"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[54,1829+32]..lib/location.ml[54,1829+33])
                              Texp_ident "n/476"
                        ]
                    "loc_ghost"
                      expression (lib/location.ml[55,1864+14]..lib/location.ml[55,1864+19])
                        Texp_construct "false"
                        []
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/location.ml[58,1888+0]..lib/location.ml[62,2008+1])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[58,1888+4]..lib/location.ml[58,1888+16])
          Tpat_var "rhs_interval/477"
        expression (lib/location.ml[58,1888+17]..lib/location.ml[62,2008+1]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[58,1888+17]..lib/location.ml[58,1888+18])
                Tpat_var "m/479"
            Nolabel
            Param_pat
              pattern (lib/location.ml[58,1888+19]..lib/location.ml[58,1888+20])
                Tpat_var "n/480"
          ]
          Tfunction_body
            expression (lib/location.ml[58,1888+23]..lib/location.ml[62,2008+1])
              Texp_record
                fields =
                  [
                    "loc_start"
                      expression (lib/location.ml[59,1913+14]..lib/location.ml[59,1913+37])
                        Texp_apply
                        expression (lib/location.ml[59,1913+14]..lib/location.ml[59,1913+35])
                          Texp_ident "Stdlib!.Parsing.rhs_start_pos"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[59,1913+36]..lib/location.ml[59,1913+37])
                              Texp_ident "m/479"
                        ]
                    "loc_end"
                      expression (lib/location.ml[60,1952+12]..lib/location.ml[60,1952+33])
                        Texp_apply
                        expression (lib/location.ml[60,1952+12]..lib/location.ml[60,1952+31])
                          Texp_ident "Stdlib!.Parsing.rhs_end_pos"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[60,1952+32]..lib/location.ml[60,1952+33])
                              Texp_ident "n/480"
                        ]
                    "loc_ghost"
                      expression (lib/location.ml[61,1987+14]..lib/location.ml[61,1987+19])
                        Texp_construct "false"
                        []
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/location.ml[65,2065+0]..lib/location.ml[66,2088+59])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[65,2065+4]..lib/location.ml[65,2065+16])
          Tpat_var "get_pos_info/481"
        expression (lib/location.ml[65,2065+17]..lib/location.ml[66,2088+59]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[65,2065+17]..lib/location.ml[65,2065+20])
                Tpat_var "pos/483"
          ]
          Tfunction_body
            expression (lib/location.ml[66,2088+2]..lib/location.ml[66,2088+59])
              Texp_tuple
              [
                expression (lib/location.ml[66,2088+3]..lib/location.ml[66,2088+16])
                  Texp_field
                  expression (lib/location.ml[66,2088+3]..lib/location.ml[66,2088+6])
                    Texp_ident "pos/483"
                  "pos_fname"
                expression (lib/location.ml[66,2088+18]..lib/location.ml[66,2088+30])
                  Texp_field
                  expression (lib/location.ml[66,2088+18]..lib/location.ml[66,2088+21])
                    Texp_ident "pos/483"
                  "pos_lnum"
                expression (lib/location.ml[66,2088+32]..lib/location.ml[66,2088+58])
                  Texp_apply
                  expression (lib/location.ml[66,2088+45]..lib/location.ml[66,2088+46])
                    Texp_ident "Stdlib!.-"
                  [
                    <arg>
                      Nolabel
                      expression (lib/location.ml[66,2088+32]..lib/location.ml[66,2088+44])
                        Texp_field
                        expression (lib/location.ml[66,2088+32]..lib/location.ml[66,2088+35])
                          Texp_ident "pos/483"
                        "pos_cnum"
                    <arg>
                      Nolabel
                      expression (lib/location.ml[66,2088+47]..lib/location.ml[66,2088+58])
                        Texp_field
                        expression (lib/location.ml[66,2088+47]..lib/location.ml[66,2088+50])
                          Texp_ident "pos/483"
                        "pos_bol"
                  ]
              ]
    ]
  structure_item (lib/location.ml[68,2149+0]..lib/location.ml[71,2188+1])
    Tstr_type Rec
    [
      type_declaration loc/484 (lib/location.ml[68,2149+0]..lib/location.ml[71,2188+1])
        ptype_params =
          [
            core_type (lib/location.ml[68,2149+5]..lib/location.ml[68,2149+7])
              Ttyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/location.ml[69,2165+2]..lib/location.ml[69,2165+11])
                Immutable
                txt/485                core_type (lib/location.ml[69,2165+8]..lib/location.ml[69,2165+10])
                  Ttyp_poly
                  core_type (lib/location.ml[69,2165+8]..lib/location.ml[69,2165+10])
                    Ttyp_var a
              (lib/location.ml[70,2177+2]..lib/location.ml[70,2177+10])
                Immutable
                loc/486                core_type (lib/location.ml[70,2177+8]..lib/location.ml[70,2177+9])
                  Ttyp_poly
                  core_type (lib/location.ml[70,2177+8]..lib/location.ml[70,2177+9])
                    Ttyp_constr "t/320"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/location.ml[73,2191+0]..lib/location.ml[73,2191+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[73,2191+4]..lib/location.ml[73,2191+9])
          Tpat_var "mkloc/487"
        expression (lib/location.ml[73,2191+10]..lib/location.ml[73,2191+33]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[73,2191+10]..lib/location.ml[73,2191+13])
                Tpat_var "txt/489"
            Nolabel
            Param_pat
              pattern (lib/location.ml[73,2191+14]..lib/location.ml[73,2191+17])
                Tpat_var "loc/490"
          ]
          Tfunction_body
            expression (lib/location.ml[73,2191+20]..lib/location.ml[73,2191+33])
              Texp_record
                fields =
                  [
                    "txt"
                      expression (lib/location.ml[73,2191+22]..lib/location.ml[73,2191+25])
                        Texp_ident "txt/489"
                    "loc"
                      expression (lib/location.ml[73,2191+28]..lib/location.ml[73,2191+31])
                        Texp_ident "loc/490"
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/location.ml[74,2225+0]..lib/location.ml[74,2225+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[74,2225+4]..lib/location.ml[74,2225+11])
          Tpat_var "mknoloc/491"
        expression (lib/location.ml[74,2225+12]..lib/location.ml[74,2225+32]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[74,2225+12]..lib/location.ml[74,2225+15])
                Tpat_var "txt/493"
          ]
          Tfunction_body
            expression (lib/location.ml[74,2225+18]..lib/location.ml[74,2225+32])
              Texp_apply
              expression (lib/location.ml[74,2225+18]..lib/location.ml[74,2225+23])
                Texp_ident "mkloc/487"
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[74,2225+24]..lib/location.ml[74,2225+27])
                    Texp_ident "txt/493"
                <arg>
                  Nolabel
                  expression (lib/location.ml[74,2225+28]..lib/location.ml[74,2225+32])
                    Texp_ident "none/439"
              ]
    ]
  structure_item (lib/location.ml[79,2358+0]..lib/location.ml[79,2358+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[79,2358+4]..lib/location.ml[79,2358+14])
          Tpat_var "input_name/494"
        expression (lib/location.ml[79,2358+17]..lib/location.ml[79,2358+29])
          Texp_apply
          expression (lib/location.ml[79,2358+17]..lib/location.ml[79,2358+20])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[79,2358+21]..lib/location.ml[79,2358+29])
                Texp_constant Const_string("_none_",(lib/location.ml[79,2358+22]..lib/location.ml[79,2358+28]),None)
          ]
    ]
  structure_item (lib/location.ml[80,2388+0]..lib/location.ml[80,2388+45])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[80,2388+4]..lib/location.ml[80,2388+16])
          Tpat_var "input_lexbuf/495"
        expression (lib/location.ml[80,2388+19]..lib/location.ml[80,2388+45])
          Texp_apply
          expression (lib/location.ml[80,2388+19]..lib/location.ml[80,2388+22])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[80,2388+24]..lib/location.ml[80,2388+28])
                extra
                  Texp_constraint
                  core_type (lib/location.ml[80,2388+31]..lib/location.ml[80,2388+44])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/location.ml[80,2388+31]..lib/location.ml[80,2388+37])
                        Ttyp_constr "Stdlib!.Lexing.lexbuf"
                        []
                    ]
                Texp_construct "None"
                []
          ]
    ]
  structure_item (lib/location.ml[81,2434+0]..lib/location.ml[81,2434+54])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[81,2434+4]..lib/location.ml[81,2434+23])
          Tpat_var "input_phrase_buffer/496"
        expression (lib/location.ml[81,2434+26]..lib/location.ml[81,2434+54])
          Texp_apply
          expression (lib/location.ml[81,2434+26]..lib/location.ml[81,2434+29])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[81,2434+31]..lib/location.ml[81,2434+35])
                extra
                  Texp_constraint
                  core_type (lib/location.ml[81,2434+38]..lib/location.ml[81,2434+53])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/location.ml[81,2434+38]..lib/location.ml[81,2434+46])
                        Ttyp_constr "Stdlib!.Buffer.t"
                        []
                    ]
                Texp_construct "None"
                []
          ]
    ]
  structure_item (lib/location.ml[86,2592+0]..lib/location.ml[86,2592+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[86,2592+4]..lib/location.ml[86,2592+10])
          Tpat_var "status/538"
        expression (lib/location.ml[86,2592+13]..lib/location.ml[86,2592+39])
          Texp_apply
          expression (lib/location.ml[86,2592+13]..lib/location.ml[86,2592+16])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[86,2592+17]..lib/location.ml[86,2592+39])
                Texp_construct "Terminfo.Uninitialised"
                []
          ]
    ]
  structure_item (lib/location.ml[88,2633+0]..lib/location.ml[90,2700+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[88,2633+4]..lib/location.ml[88,2633+18])
          Tpat_var "setup_terminal/547"
        expression (lib/location.ml[88,2633+19]..lib/location.ml[90,2700+35]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[88,2633+19]..lib/location.ml[88,2633+21])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/location.ml[89,2657+2]..lib/location.ml[90,2700+35])
              Texp_ifthenelse
              expression (lib/location.ml[89,2657+5]..lib/location.ml[89,2657+37])
                Texp_apply
                expression (lib/location.ml[89,2657+13]..lib/location.ml[89,2657+14])
                  Texp_ident "Stdlib!.="
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[89,2657+5]..lib/location.ml[89,2657+12])
                      Texp_apply
                      expression (lib/location.ml[89,2657+5]..lib/location.ml[89,2657+6])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[89,2657+6]..lib/location.ml[89,2657+12])
                            Texp_ident "status/538"
                      ]
                  <arg>
                    Nolabel
                    expression (lib/location.ml[89,2657+15]..lib/location.ml[89,2657+37])
                      Texp_construct "Terminfo.Uninitialised"
                      []
                ]
              expression (lib/location.ml[90,2700+4]..lib/location.ml[90,2700+35])
                Texp_apply
                expression (lib/location.ml[90,2700+11]..lib/location.ml[90,2700+13])
                  Texp_ident "Stdlib!.:="
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[90,2700+4]..lib/location.ml[90,2700+10])
                      Texp_ident "status/538"
                  <arg>
                    Nolabel
                    expression (lib/location.ml[90,2700+14]..lib/location.ml[90,2700+35])
                      Texp_apply
                      expression (lib/location.ml[90,2700+14]..lib/location.ml[90,2700+28])
                        Texp_ident "Ocaml_ocaml_types!.Terminfo.setup"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[90,2700+29]..lib/location.ml[90,2700+35])
                            Texp_ident "Stdlib!.stdout"
                      ]
                ]
              None
    ]
  structure_item (lib/location.ml[101,3113+0]..lib/location.ml[101,3113+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[101,3113+4]..lib/location.ml[101,3113+17])
          Tpat_var "num_loc_lines/558"
        expression (lib/location.ml[101,3113+20]..lib/location.ml[101,3113+25])
          Texp_apply
          expression (lib/location.ml[101,3113+20]..lib/location.ml[101,3113+23])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[101,3113+24]..lib/location.ml[101,3113+25])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (lib/location.ml[109,3454+0]..lib/location.ml[110,3480+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[109,3454+4]..lib/location.ml[109,3454+20])
          Tpat_var "is_first_message/559"
        expression (lib/location.ml[109,3454+21]..lib/location.ml[110,3480+20]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[109,3454+21]..lib/location.ml[109,3454+23])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/location.ml[110,3480+2]..lib/location.ml[110,3480+20])
              Texp_apply
              expression (lib/location.ml[110,3480+17]..lib/location.ml[110,3480+18])
                Texp_ident "Stdlib!.="
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[110,3480+2]..lib/location.ml[110,3480+16])
                    Texp_apply
                    expression (lib/location.ml[110,3480+2]..lib/location.ml[110,3480+3])
                      Texp_ident "Stdlib!.!"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[110,3480+3]..lib/location.ml[110,3480+16])
                          Texp_ident "num_loc_lines/558"
                    ]
                <arg>
                  Nolabel
                  expression (lib/location.ml[110,3480+19]..lib/location.ml[110,3480+20])
                    Texp_constant Const_int 0
              ]
    ]
  structure_item (lib/location.ml[113,3581+0]..lib/location.ml[114,3596+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[113,3581+4]..lib/location.ml[113,3581+9])
          Tpat_var "reset/562"
        expression (lib/location.ml[113,3581+10]..lib/location.ml[114,3596+20]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[113,3581+10]..lib/location.ml[113,3581+12])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/location.ml[114,3596+2]..lib/location.ml[114,3596+20])
              Texp_apply
              expression (lib/location.ml[114,3596+16]..lib/location.ml[114,3596+18])
                Texp_ident "Stdlib!.:="
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[114,3596+2]..lib/location.ml[114,3596+15])
                    Texp_ident "num_loc_lines/558"
                <arg>
                  Nolabel
                  expression (lib/location.ml[114,3596+19]..lib/location.ml[114,3596+20])
                    Texp_constant Const_int 0
              ]
    ]
  structure_item (lib/location.ml[117,3653+0]..lib/location.ml[119,3691+20])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[117,3653+4]..lib/location.ml[117,3653+12])
          Tpat_var "echo_eof/565"
        expression (lib/location.ml[117,3653+13]..lib/location.ml[119,3691+20]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[117,3653+13]..lib/location.ml[117,3653+15])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/location.ml[118,3671+2]..lib/location.ml[119,3691+20])
              Texp_sequence
              expression (lib/location.ml[118,3671+2]..lib/location.ml[118,3671+18])
                Texp_apply
                expression (lib/location.ml[118,3671+2]..lib/location.ml[118,3671+15])
                  Texp_ident "Stdlib!.print_newline"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[118,3671+16]..lib/location.ml[118,3671+18])
                      Texp_construct "()"
                      []
                ]
              expression (lib/location.ml[119,3691+2]..lib/location.ml[119,3691+20])
                Texp_apply
                expression (lib/location.ml[119,3691+2]..lib/location.ml[119,3691+6])
                  Texp_ident "Stdlib!.incr"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[119,3691+7]..lib/location.ml[119,3691+20])
                      Texp_ident "num_loc_lines/558"
                ]
    ]
  structure_item (lib/location.ml[122,3779+0]..lib/location.ml[126,3911+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[122,3779+4]..lib/location.ml[122,3779+24])
          Tpat_var "separate_new_message/568"
        expression (lib/location.ml[122,3779+25]..lib/location.ml[126,3911+5]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[122,3779+25]..lib/location.ml[122,3779+28])
                Tpat_var "ppf/570"
          ]
          Tfunction_body
            expression (lib/location.ml[123,3810+2]..lib/location.ml[126,3911+5])
              Texp_ifthenelse
              expression (lib/location.ml[123,3810+5]..lib/location.ml[123,3810+30])
                Texp_apply
                expression (lib/location.ml[123,3810+5]..lib/location.ml[123,3810+8])
                  Texp_ident "Stdlib!.not"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[123,3810+9]..lib/location.ml[123,3810+30])
                      Texp_apply
                      expression (lib/location.ml[123,3810+10]..lib/location.ml[123,3810+26])
                        Texp_ident "is_first_message/559"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[123,3810+27]..lib/location.ml[123,3810+29])
                            Texp_construct "()"
                            []
                      ]
                ]
              expression (lib/location.ml[123,3810+36]..lib/location.ml[126,3911+5])
                Texp_sequence
                expression (lib/location.ml[124,3852+4]..lib/location.ml[124,3852+34])
                  Texp_apply
                  expression (lib/location.ml[124,3852+4]..lib/location.ml[124,3852+27])
                    Texp_ident "Stdlib!.Format.pp_print_newline"
                  [
                    <arg>
                      Nolabel
                      expression (lib/location.ml[124,3852+28]..lib/location.ml[124,3852+31])
                        Texp_ident "ppf/570"
                    <arg>
                      Nolabel
                      expression (lib/location.ml[124,3852+32]..lib/location.ml[124,3852+34])
                        Texp_construct "()"
                        []
                  ]
                expression (lib/location.ml[125,3888+4]..lib/location.ml[125,3888+22])
                  Texp_apply
                  expression (lib/location.ml[125,3888+4]..lib/location.ml[125,3888+8])
                    Texp_ident "Stdlib!.incr"
                  [
                    <arg>
                      Nolabel
                      expression (lib/location.ml[125,3888+9]..lib/location.ml[125,3888+22])
                        Texp_ident "num_loc_lines/558"
                  ]
              None
    ]
  structure_item (lib/location.ml[133,4162+0]..lib/location.ml[147,4694+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[133,4162+4]..lib/location.ml[133,4162+32])
          Tpat_var "print_updating_num_loc_lines/887"
        expression (lib/location.ml[133,4162+33]..lib/location.ml[147,4694+50]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[133,4162+33]..lib/location.ml[133,4162+36])
                Tpat_var "ppf/889"
            Nolabel
            Param_pat
              pattern (lib/location.ml[133,4162+37]..lib/location.ml[133,4162+38])
                Tpat_var "f/890"
            Nolabel
            Param_pat
              pattern (lib/location.ml[133,4162+39]..lib/location.ml[133,4162+42])
                Tpat_var "arg/891"
          ]
          Tfunction_body
            expression (lib/location.ml[134,4207+2]..lib/location.ml[147,4694+50])
              Texp_open Fresh
              module_expr (lib/location.ml[134,4207+11]..lib/location.ml[134,4207+17])
                Tmod_ident "Stdlib!.Format"
              expression (lib/location.ml[135,4228+2]..lib/location.ml[147,4694+50])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[135,4228+6]..lib/location.ml[135,4228+19])
                      Tpat_var "out_functions/892"
                    expression (lib/location.ml[135,4228+22]..lib/location.ml[135,4228+59])
                      Texp_apply
                      expression (lib/location.ml[135,4228+22]..lib/location.ml[135,4228+52])
                        Texp_ident "Stdlib!.Format.pp_get_formatter_out_functions"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[135,4228+53]..lib/location.ml[135,4228+56])
                            Texp_ident "ppf/889"
                        <arg>
                          Nolabel
                          expression (lib/location.ml[135,4228+57]..lib/location.ml[135,4228+59])
                            Texp_construct "()"
                            []
                      ]
                ]
                expression (lib/location.ml[136,4291+2]..lib/location.ml[147,4694+50])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/location.ml[136,4291+6]..lib/location.ml[136,4291+16])
                        Tpat_var "out_string/893"
                      expression (lib/location.ml[136,4291+17]..lib/location.ml[142,4532+42]) ghost
                        Texp_function
                        [
                          Nolabel
                          Param_pat
                            pattern (lib/location.ml[136,4291+17]..lib/location.ml[136,4291+20])
                              Tpat_var "str/895"
                          Nolabel
                          Param_pat
                            pattern (lib/location.ml[136,4291+21]..lib/location.ml[136,4291+26])
                              Tpat_var "start/896"
                          Nolabel
                          Param_pat
                            pattern (lib/location.ml[136,4291+27]..lib/location.ml[136,4291+30])
                              Tpat_var "len/897"
                        ]
                        Tfunction_body
                          expression (lib/location.ml[137,4324+4]..lib/location.ml[142,4532+42])
                            Texp_let Rec
                            [
                              <def>
                                pattern (lib/location.ml[137,4324+12]..lib/location.ml[137,4324+17])
                                  Tpat_var "count/898"
                                expression (lib/location.ml[137,4324+18]..lib/location.ml[140,4447+27]) ghost
                                  Texp_function
                                  [
                                    Nolabel
                                    Param_pat
                                      pattern (lib/location.ml[137,4324+18]..lib/location.ml[137,4324+19])
                                        Tpat_var "i/899"
                                    Nolabel
                                    Param_pat
                                      pattern (lib/location.ml[137,4324+20]..lib/location.ml[137,4324+21])
                                        Tpat_var "c/900"
                                  ]
                                  Tfunction_body
                                    expression (lib/location.ml[138,4348+6]..lib/location.ml[140,4447+27])
                                      Texp_ifthenelse
                                      expression (lib/location.ml[138,4348+9]..lib/location.ml[138,4348+24])
                                        Texp_apply
                                        expression (lib/location.ml[138,4348+11]..lib/location.ml[138,4348+12])
                                          Texp_ident "Stdlib!.="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[138,4348+9]..lib/location.ml[138,4348+10])
                                              Texp_ident "i/899"
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[138,4348+13]..lib/location.ml[138,4348+24])
                                              Texp_apply
                                              expression (lib/location.ml[138,4348+19]..lib/location.ml[138,4348+20])
                                                Texp_ident "Stdlib!.+"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[138,4348+13]..lib/location.ml[138,4348+18])
                                                    Texp_ident "start/896"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[138,4348+21]..lib/location.ml[138,4348+24])
                                                    Texp_ident "len/897"
                                              ]
                                        ]
                                      expression (lib/location.ml[138,4348+30]..lib/location.ml[138,4348+31])
                                        Texp_ident "c/900"
                                      Some
                                        expression (lib/location.ml[139,4380+11]..lib/location.ml[140,4447+27])
                                          Texp_ifthenelse
                                          expression (lib/location.ml[139,4380+14]..lib/location.ml[139,4380+37])
                                            Texp_apply
                                            expression (lib/location.ml[139,4380+31]..lib/location.ml[139,4380+32])
                                              Texp_ident "Stdlib!.="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[139,4380+14]..lib/location.ml[139,4380+30])
                                                  Texp_apply
                                                  expression (lib/location.ml[139,4380+14]..lib/location.ml[139,4380+24])
                                                    Texp_ident "Stdlib!.String.get"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[139,4380+25]..lib/location.ml[139,4380+28])
                                                        Texp_ident "str/895"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[139,4380+29]..lib/location.ml[139,4380+30])
                                                        Texp_ident "i/899"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[139,4380+33]..lib/location.ml[139,4380+37])
                                                  Texp_constant Const_char 0a
                                            ]
                                          expression (lib/location.ml[139,4380+43]..lib/location.ml[139,4380+66])
                                            Texp_apply
                                            expression (lib/location.ml[139,4380+43]..lib/location.ml[139,4380+48])
                                              Texp_ident "count/898"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[139,4380+49]..lib/location.ml[139,4380+57])
                                                  Texp_apply
                                                  expression (lib/location.ml[139,4380+50]..lib/location.ml[139,4380+54])
                                                    Texp_ident "Stdlib!.succ"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[139,4380+55]..lib/location.ml[139,4380+56])
                                                        Texp_ident "i/899"
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[139,4380+58]..lib/location.ml[139,4380+66])
                                                  Texp_apply
                                                  expression (lib/location.ml[139,4380+59]..lib/location.ml[139,4380+63])
                                                    Texp_ident "Stdlib!.succ"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[139,4380+64]..lib/location.ml[139,4380+65])
                                                        Texp_ident "c/900"
                                                  ]
                                            ]
                                          Some
                                            expression (lib/location.ml[140,4447+11]..lib/location.ml[140,4447+27])
                                              Texp_apply
                                              expression (lib/location.ml[140,4447+11]..lib/location.ml[140,4447+16])
                                                Texp_ident "count/898"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[140,4447+17]..lib/location.ml[140,4447+25])
                                                    Texp_apply
                                                    expression (lib/location.ml[140,4447+18]..lib/location.ml[140,4447+22])
                                                      Texp_ident "Stdlib!.succ"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/location.ml[140,4447+23]..lib/location.ml[140,4447+24])
                                                          Texp_ident "i/899"
                                                    ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[140,4447+26]..lib/location.ml[140,4447+27])
                                                    Texp_ident "c/900"
                                              ]
                            ]
                            expression (lib/location.ml[141,4478+4]..lib/location.ml[142,4532+42])
                              Texp_sequence
                              expression (lib/location.ml[141,4478+4]..lib/location.ml[141,4478+51])
                                Texp_apply
                                expression (lib/location.ml[141,4478+18]..lib/location.ml[141,4478+20])
                                  Texp_ident "Stdlib!.:="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[141,4478+4]..lib/location.ml[141,4478+17])
                                      Texp_ident "num_loc_lines/558"
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[141,4478+21]..lib/location.ml[141,4478+51])
                                      Texp_apply
                                      expression (lib/location.ml[141,4478+36]..lib/location.ml[141,4478+37])
                                        Texp_ident "Stdlib!.+"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[141,4478+21]..lib/location.ml[141,4478+35])
                                            Texp_apply
                                            expression (lib/location.ml[141,4478+21]..lib/location.ml[141,4478+22])
                                              Texp_ident "Stdlib!.!"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[141,4478+22]..lib/location.ml[141,4478+35])
                                                  Texp_ident "num_loc_lines/558"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[141,4478+38]..lib/location.ml[141,4478+51])
                                            Texp_apply
                                            expression (lib/location.ml[141,4478+38]..lib/location.ml[141,4478+43])
                                              Texp_ident "count/898"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[141,4478+44]..lib/location.ml[141,4478+49])
                                                  Texp_ident "start/896"
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[141,4478+50]..lib/location.ml[141,4478+51])
                                                  Texp_constant Const_int 0
                                            ]
                                      ]
                                ]
                              expression (lib/location.ml[142,4532+4]..lib/location.ml[142,4532+42])
                                Texp_apply
                                expression (lib/location.ml[142,4532+4]..lib/location.ml[142,4532+28])
                                  Texp_field
                                  expression (lib/location.ml[142,4532+4]..lib/location.ml[142,4532+17])
                                    Texp_ident "out_functions/892"
                                  "out_string"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[142,4532+29]..lib/location.ml[142,4532+32])
                                      Texp_ident "str/895"
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[142,4532+33]..lib/location.ml[142,4532+38])
                                      Texp_ident "start/896"
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[142,4532+39]..lib/location.ml[142,4532+42])
                                      Texp_ident "len/897"
                                ]
                  ]
                  expression (lib/location.ml[143,4578+2]..lib/location.ml[147,4694+50])
                    Texp_sequence
                    expression (lib/location.ml[143,4578+2]..lib/location.ml[144,4615+37])
                      Texp_apply
                      expression (lib/location.ml[143,4578+2]..lib/location.ml[143,4578+32])
                        Texp_ident "Stdlib!.Format.pp_set_formatter_out_functions"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[143,4578+33]..lib/location.ml[143,4578+36])
                            Texp_ident "ppf/889"
                        <arg>
                          Nolabel
                          expression (lib/location.ml[144,4615+4]..lib/location.ml[144,4615+37])
                            Texp_record
                              fields =
                                [
                                  "out_string"
                                    expression (lib/location.ml[144,4615+25]..lib/location.ml[144,4615+35])
                                      Texp_ident "out_string/893"
                                  <kept>                                  <kept>                                  <kept>                                  <kept>                                ]
                              representation =
                                Record_regular
                              extended_expression =
                                Some
                                  expression (lib/location.ml[144,4615+6]..lib/location.ml[144,4615+19])
                                    Texp_ident "out_functions/892"
                      ]
                    expression (lib/location.ml[145,4655+2]..lib/location.ml[147,4694+50])
                      Texp_sequence
                      expression (lib/location.ml[145,4655+2]..lib/location.ml[145,4655+11])
                        Texp_apply
                        expression (lib/location.ml[145,4655+2]..lib/location.ml[145,4655+3])
                          Texp_ident "f/890"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[145,4655+4]..lib/location.ml[145,4655+7])
                              Texp_ident "ppf/889"
                          <arg>
                            Nolabel
                            expression (lib/location.ml[145,4655+8]..lib/location.ml[145,4655+11])
                              Texp_ident "arg/891"
                        ]
                      expression (lib/location.ml[146,4669+2]..lib/location.ml[147,4694+50])
                        Texp_sequence
                        expression (lib/location.ml[146,4669+2]..lib/location.ml[146,4669+23])
                          Texp_apply
                          expression (lib/location.ml[146,4669+2]..lib/location.ml[146,4669+16])
                            Texp_ident "Stdlib!.Format.pp_print_flush"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[146,4669+17]..lib/location.ml[146,4669+20])
                                Texp_ident "ppf/889"
                            <arg>
                              Nolabel
                              expression (lib/location.ml[146,4669+21]..lib/location.ml[146,4669+23])
                                Texp_construct "()"
                                []
                          ]
                        expression (lib/location.ml[147,4694+2]..lib/location.ml[147,4694+50])
                          Texp_apply
                          expression (lib/location.ml[147,4694+2]..lib/location.ml[147,4694+32])
                            Texp_ident "Stdlib!.Format.pp_set_formatter_out_functions"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[147,4694+33]..lib/location.ml[147,4694+36])
                                Texp_ident "ppf/889"
                            <arg>
                              Nolabel
                              expression (lib/location.ml[147,4694+37]..lib/location.ml[147,4694+50])
                                Texp_ident "out_functions/892"
                          ]
    ]
  structure_item (lib/location.ml[149,4746+0]..lib/location.ml[149,4746+21])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[149,4746+4]..lib/location.ml[149,4746+14])
          Tpat_var "setup_tags/970"
        expression (lib/location.ml[149,4746+15]..lib/location.ml[149,4746+21]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[149,4746+15]..lib/location.ml[149,4746+17])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/location.ml[149,4746+19]..lib/location.ml[149,4746+21])
              Texp_construct "()"
              []
    ]
  structure_item (lib/location.ml[155,4964+0]..lib/location.ml[158,5061+54])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[155,4964+4]..lib/location.ml[155,4964+25])
          Tpat_var "rewrite_absolute_path/973"
        expression (lib/location.ml[155,4964+26]..lib/location.ml[158,5061+54]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[155,4964+26]..lib/location.ml[155,4964+30])
                Tpat_var "path/975"
          ]
          Tfunction_body
            expression (lib/location.ml[156,4997+2]..lib/location.ml[158,5061+54])
              Texp_match
              expression (lib/location.ml[156,4997+8]..lib/location.ml[156,4997+41])
                Texp_apply
                expression (lib/location.ml[156,4997+8]..lib/location.ml[156,4997+38])
                  Texp_ident "Ocaml_ocaml_types!.Misc.get_build_path_prefix_map"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[156,4997+39]..lib/location.ml[156,4997+41])
                      Texp_construct "()"
                      []
                ]
              [
                <case>
                  pattern (lib/location.ml[157,5044+4]..lib/location.ml[157,5044+8])
                    Tpat_value
                    pattern (lib/location.ml[157,5044+4]..lib/location.ml[157,5044+8])
                      Tpat_construct "None"
                      []
                      None
                  expression (lib/location.ml[157,5044+12]..lib/location.ml[157,5044+16])
                    Texp_ident "path/975"
                <case>
                  pattern (lib/location.ml[158,5061+4]..lib/location.ml[158,5061+12])
                    Tpat_value
                    pattern (lib/location.ml[158,5061+4]..lib/location.ml[158,5061+12])
                      Tpat_construct "Some"
                      [
                        pattern (lib/location.ml[158,5061+9]..lib/location.ml[158,5061+12])
                          Tpat_var "map/1051"
                      ]
                      None
                  expression (lib/location.ml[158,5061+16]..lib/location.ml[158,5061+54])
                    Texp_apply
                    expression (lib/location.ml[158,5061+16]..lib/location.ml[158,5061+45])
                      Texp_ident "Ocaml_ocaml_types!.Build_path_prefix_map.rewrite"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[158,5061+46]..lib/location.ml[158,5061+49])
                          Texp_ident "map/1051"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[158,5061+50]..lib/location.ml[158,5061+54])
                          Texp_ident "path/975"
                    ]
              ]
    ]
  structure_item (lib/location.ml[160,5117+0]..lib/location.ml[171,5454+46])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[160,5117+4]..lib/location.ml[160,5117+31])
          Tpat_var "rewrite_find_first_existing/1068"
        expression (lib/location.ml[160,5117+32]..lib/location.ml[171,5454+46]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[160,5117+32]..lib/location.ml[160,5117+36])
                Tpat_var "path/1070"
          ]
          Tfunction_body
            expression (lib/location.ml[161,5156+2]..lib/location.ml[171,5454+46])
              Texp_match
              expression (lib/location.ml[161,5156+8]..lib/location.ml[161,5156+41])
                Texp_apply
                expression (lib/location.ml[161,5156+8]..lib/location.ml[161,5156+38])
                  Texp_ident "Ocaml_ocaml_types!.Misc.get_build_path_prefix_map"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[161,5156+39]..lib/location.ml[161,5156+41])
                      Texp_construct "()"
                      []
                ]
              [
                <case>
                  pattern (lib/location.ml[162,5203+4]..lib/location.ml[162,5203+8])
                    Tpat_value
                    pattern (lib/location.ml[162,5203+4]..lib/location.ml[162,5203+8])
                      Tpat_construct "None"
                      []
                      None
                  expression (lib/location.ml[163,5215+6]..lib/location.ml[164,5260+15])
                    Texp_ifthenelse
                    expression (lib/location.ml[163,5215+9]..lib/location.ml[163,5215+29])
                      Texp_apply
                      expression (lib/location.ml[163,5215+9]..lib/location.ml[163,5215+24])
                        Texp_ident "Ocaml_ocaml_types!.Sys.file_exists"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[163,5215+25]..lib/location.ml[163,5215+29])
                            Texp_ident "path/1070"
                      ]
                    expression (lib/location.ml[163,5215+35]..lib/location.ml[163,5215+44])
                      Texp_construct "Some"
                      [
                        expression (lib/location.ml[163,5215+40]..lib/location.ml[163,5215+44])
                          Texp_ident "path/1070"
                      ]
                    Some
                      expression (lib/location.ml[164,5260+11]..lib/location.ml[164,5260+15])
                        Texp_construct "None"
                        []
                <case>
                  pattern (lib/location.ml[165,5276+4]..lib/location.ml[165,5276+19])
                    Tpat_value
                    pattern (lib/location.ml[165,5276+4]..lib/location.ml[165,5276+19])
                      Tpat_construct "Some"
                      [
                        pattern (lib/location.ml[165,5276+9]..lib/location.ml[165,5276+19])
                          Tpat_var "prefix_map/1071"
                      ]
                      None
                  expression (lib/location.ml[166,5299+4]..lib/location.ml[171,5454+46])
                    Texp_match
                    expression (lib/location.ml[166,5299+10]..lib/location.ml[166,5299+59])
                      Texp_apply
                      expression (lib/location.ml[166,5299+10]..lib/location.ml[166,5299+43])
                        Texp_ident "Ocaml_ocaml_types!.Build_path_prefix_map.rewrite_all"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[166,5299+44]..lib/location.ml[166,5299+54])
                            Texp_ident "prefix_map/1071"
                        <arg>
                          Nolabel
                          expression (lib/location.ml[166,5299+55]..lib/location.ml[166,5299+59])
                            Texp_ident "path/1070"
                      ]
                    [
                      <case>
                        pattern (lib/location.ml[167,5364+6]..lib/location.ml[167,5364+8])
                          Tpat_value
                          pattern (lib/location.ml[167,5364+6]..lib/location.ml[167,5364+8])
                            Tpat_construct "[]"
                            []
                            None
                        expression (lib/location.ml[168,5376+6]..lib/location.ml[169,5421+15])
                          Texp_ifthenelse
                          expression (lib/location.ml[168,5376+9]..lib/location.ml[168,5376+29])
                            Texp_apply
                            expression (lib/location.ml[168,5376+9]..lib/location.ml[168,5376+24])
                              Texp_ident "Ocaml_ocaml_types!.Sys.file_exists"
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[168,5376+25]..lib/location.ml[168,5376+29])
                                  Texp_ident "path/1070"
                            ]
                          expression (lib/location.ml[168,5376+35]..lib/location.ml[168,5376+44])
                            Texp_construct "Some"
                            [
                              expression (lib/location.ml[168,5376+40]..lib/location.ml[168,5376+44])
                                Texp_ident "path/1070"
                            ]
                          Some
                            expression (lib/location.ml[169,5421+11]..lib/location.ml[169,5421+15])
                              Texp_construct "None"
                              []
                      <case>
                        pattern (lib/location.ml[170,5437+6]..lib/location.ml[170,5437+13])
                          Tpat_value
                          pattern (lib/location.ml[170,5437+6]..lib/location.ml[170,5437+13])
                            Tpat_var "matches/1079"
                        expression (lib/location.ml[171,5454+6]..lib/location.ml[171,5454+46])
                          Texp_construct "Some"
                          [
                            expression (lib/location.ml[171,5454+11]..lib/location.ml[171,5454+46])
                              Texp_apply
                              expression (lib/location.ml[171,5454+12]..lib/location.ml[171,5454+21])
                                Texp_ident "Stdlib!.List.find"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[171,5454+22]..lib/location.ml[171,5454+37])
                                    Texp_ident "Ocaml_ocaml_types!.Sys.file_exists"
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[171,5454+38]..lib/location.ml[171,5454+45])
                                    Texp_ident "matches/1079"
                              ]
                          ]
                    ]
              ]
    ]
  structure_item (lib/location.ml[216,7093+0]..lib/location.ml[269,8926+25])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[216,7093+4]..lib/location.ml[216,7093+13])
          Tpat_var "print_loc/1146"
        expression (lib/location.ml[216,7093+14]..lib/location.ml[269,8926+25]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[216,7093+14]..lib/location.ml[216,7093+17])
                Tpat_var "ppf/1148"
            Nolabel
            Param_pat
              pattern (lib/location.ml[216,7093+18]..lib/location.ml[216,7093+21])
                Tpat_var "loc/1149"
          ]
          Tfunction_body
            expression (lib/location.ml[217,7117+2]..lib/location.ml[269,8926+25])
              Texp_sequence
              expression (lib/location.ml[217,7117+2]..lib/location.ml[217,7117+15])
                Texp_apply
                expression (lib/location.ml[217,7117+2]..lib/location.ml[217,7117+12])
                  Texp_ident "setup_tags/970"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[217,7117+13]..lib/location.ml[217,7117+15])
                      Texp_construct "()"
                      []
                ]
              expression (lib/location.ml[218,7134+2]..lib/location.ml[269,8926+25])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[218,7134+6]..lib/location.ml[218,7134+16])
                      Tpat_var "file_valid/1150"
                    expression (lib/location.ml[218,7134+19]..lib/location.ml[224,7376+15])
                      Texp_function
                      []
                      Tfunction_cases (lib/location.ml[218,7134+19]..lib/location.ml[224,7376+15])
                        [
                          <case>
                            pattern (lib/location.ml[219,7162+6]..lib/location.ml[219,7162+14])
                              Tpat_constant Const_string("_none_",(lib/location.ml[219,7162+7]..lib/location.ml[219,7162+13]),None)
                            expression (lib/location.ml[222,7328+8]..lib/location.ml[222,7328+12])
                              Texp_construct "true"
                              []
                          <case>
                            pattern (lib/location.ml[223,7341+6]..lib/location.ml[223,7341+25])
                              Tpat_or
                              pattern (lib/location.ml[223,7341+6]..lib/location.ml[223,7341+8])
                                Tpat_constant Const_string("",(lib/location.ml[223,7341+7]..lib/location.ml[223,7341+7]),None)
                              pattern (lib/location.ml[223,7341+11]..lib/location.ml[223,7341+25])
                                Tpat_constant Const_string("//toplevel//",(lib/location.ml[223,7341+12]..lib/location.ml[223,7341+24]),None)
                            expression (lib/location.ml[223,7341+29]..lib/location.ml[223,7341+34])
                              Texp_construct "false"
                              []
                          <case>
                            pattern (lib/location.ml[224,7376+6]..lib/location.ml[224,7376+7])
                              Tpat_any
                            expression (lib/location.ml[224,7376+11]..lib/location.ml[224,7376+15])
                              Texp_construct "true"
                              []
                        ]
                ]
                expression (lib/location.ml[226,7397+2]..lib/location.ml[269,8926+25])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/location.ml[226,7397+6]..lib/location.ml[226,7397+16])
                        Tpat_var "line_valid/1153"
                      expression (lib/location.ml[226,7397+17]..lib/location.ml[226,7397+32]) ghost
                        Texp_function
                        [
                          Nolabel
                          Param_pat
                            pattern (lib/location.ml[226,7397+17]..lib/location.ml[226,7397+21])
                              Tpat_var "line/1155"
                        ]
                        Tfunction_body
                          expression (lib/location.ml[226,7397+24]..lib/location.ml[226,7397+32])
                            Texp_apply
                            expression (lib/location.ml[226,7397+29]..lib/location.ml[226,7397+30])
                              Texp_ident "Stdlib!.>"
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[226,7397+24]..lib/location.ml[226,7397+28])
                                  Texp_ident "line/1155"
                              <arg>
                                Nolabel
                                expression (lib/location.ml[226,7397+31]..lib/location.ml[226,7397+32])
                                  Texp_constant Const_int 0
                            ]
                  ]
                  expression (lib/location.ml[227,7433+2]..lib/location.ml[269,8926+25])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/location.ml[227,7433+6]..lib/location.ml[227,7433+17])
                          Tpat_var "chars_valid/1156"
                        expression (lib/location.ml[227,7433+18]..lib/location.ml[227,7433+72]) ghost
                          Texp_function
                          [
                            Labelled "startchar"
                            Param_pat
                              pattern (lib/location.ml[227,7433+19]..lib/location.ml[227,7433+28])
                                Tpat_var "startchar/1158"
                            Labelled "endchar"
                            Param_pat
                              pattern (lib/location.ml[227,7433+30]..lib/location.ml[227,7433+37])
                                Tpat_var "endchar/1159"
                          ]
                          Tfunction_body
                            expression (lib/location.ml[227,7433+40]..lib/location.ml[227,7433+72])
                              Texp_apply
                              expression (lib/location.ml[227,7433+56]..lib/location.ml[227,7433+58])
                                Texp_ident "Stdlib!.&&"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[227,7433+40]..lib/location.ml[227,7433+55])
                                    Texp_apply
                                    expression (lib/location.ml[227,7433+50]..lib/location.ml[227,7433+52])
                                      Texp_ident "Stdlib!.<>"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[227,7433+40]..lib/location.ml[227,7433+49])
                                          Texp_ident "startchar/1158"
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[227,7433+53]..lib/location.ml[227,7433+55])
                                          Texp_constant Const_int -1
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[227,7433+59]..lib/location.ml[227,7433+72])
                                    Texp_apply
                                    expression (lib/location.ml[227,7433+67]..lib/location.ml[227,7433+69])
                                      Texp_ident "Stdlib!.<>"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[227,7433+59]..lib/location.ml[227,7433+66])
                                          Texp_ident "endchar/1159"
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[227,7433+70]..lib/location.ml[227,7433+72])
                                          Texp_constant Const_int -1
                                    ]
                              ]
                    ]
                    expression (lib/location.ml[229,7510+2]..lib/location.ml[269,8926+25])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/location.ml[229,7510+6]..lib/location.ml[229,7510+10])
                            Tpat_var "file/1160"
                          expression (lib/location.ml[232,7631+4]..lib/location.ml[233,7684+32])
                            Texp_ifthenelse
                            expression (lib/location.ml[232,7631+7]..lib/location.ml[232,7631+35])
                              Texp_apply
                              expression (lib/location.ml[232,7631+31]..lib/location.ml[232,7631+32])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[232,7631+7]..lib/location.ml[232,7631+30])
                                    Texp_field
                                    expression (lib/location.ml[232,7631+7]..lib/location.ml[232,7631+20])
                                      Texp_field
                                      expression (lib/location.ml[232,7631+7]..lib/location.ml[232,7631+10])
                                        Texp_ident "loc/1149"
                                      "loc_start"
                                    "pos_fname"
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[232,7631+33]..lib/location.ml[232,7631+35])
                                    Texp_constant Const_string("",(lib/location.ml[232,7631+34]..lib/location.ml[232,7631+34]),None)
                              ]
                            expression (lib/location.ml[232,7631+41]..lib/location.ml[232,7631+52])
                              Texp_apply
                              expression (lib/location.ml[232,7631+41]..lib/location.ml[232,7631+42])
                                Texp_ident "Stdlib!.!"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[232,7631+42]..lib/location.ml[232,7631+52])
                                    Texp_ident "input_name/494"
                              ]
                            Some
                              expression (lib/location.ml[233,7684+9]..lib/location.ml[233,7684+32])
                                Texp_field
                                expression (lib/location.ml[233,7684+9]..lib/location.ml[233,7684+22])
                                  Texp_field
                                  expression (lib/location.ml[233,7684+9]..lib/location.ml[233,7684+12])
                                    Texp_ident "loc/1149"
                                  "loc_start"
                                "pos_fname"
                      ]
                      expression (lib/location.ml[235,7722+2]..lib/location.ml[269,8926+25])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/location.ml[235,7722+6]..lib/location.ml[235,7722+15])
                              Tpat_var "startline/1161"
                            expression (lib/location.ml[235,7722+18]..lib/location.ml[235,7722+40])
                              Texp_field
                              expression (lib/location.ml[235,7722+18]..lib/location.ml[235,7722+31])
                                Texp_field
                                expression (lib/location.ml[235,7722+18]..lib/location.ml[235,7722+21])
                                  Texp_ident "loc/1149"
                                "loc_start"
                              "pos_lnum"
                        ]
                        expression (lib/location.ml[236,7766+2]..lib/location.ml[269,8926+25])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/location.ml[236,7766+6]..lib/location.ml[236,7766+13])
                                Tpat_var "endline/1162"
                              expression (lib/location.ml[236,7766+16]..lib/location.ml[236,7766+36])
                                Texp_field
                                expression (lib/location.ml[236,7766+16]..lib/location.ml[236,7766+27])
                                  Texp_field
                                  expression (lib/location.ml[236,7766+16]..lib/location.ml[236,7766+19])
                                    Texp_ident "loc/1149"
                                  "loc_end"
                                "pos_lnum"
                          ]
                          expression (lib/location.ml[237,7806+2]..lib/location.ml[269,8926+25])
                            Texp_let Nonrec
                            [
                              <def>
                                pattern (lib/location.ml[237,7806+6]..lib/location.ml[237,7806+15])
                                  Tpat_var "startchar/1163"
                                expression (lib/location.ml[237,7806+18]..lib/location.ml[237,7806+64])
                                  Texp_apply
                                  expression (lib/location.ml[237,7806+41]..lib/location.ml[237,7806+42])
                                    Texp_ident "Stdlib!.-"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[237,7806+18]..lib/location.ml[237,7806+40])
                                        Texp_field
                                        expression (lib/location.ml[237,7806+18]..lib/location.ml[237,7806+31])
                                          Texp_field
                                          expression (lib/location.ml[237,7806+18]..lib/location.ml[237,7806+21])
                                            Texp_ident "loc/1149"
                                          "loc_start"
                                        "pos_cnum"
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[237,7806+43]..lib/location.ml[237,7806+64])
                                        Texp_field
                                        expression (lib/location.ml[237,7806+43]..lib/location.ml[237,7806+56])
                                          Texp_field
                                          expression (lib/location.ml[237,7806+43]..lib/location.ml[237,7806+46])
                                            Texp_ident "loc/1149"
                                          "loc_start"
                                        "pos_bol"
                                  ]
                            ]
                            expression (lib/location.ml[238,7874+2]..lib/location.ml[269,8926+25])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/location.ml[238,7874+6]..lib/location.ml[238,7874+13])
                                    Tpat_var "endchar/1164"
                                  expression (lib/location.ml[238,7874+16]..lib/location.ml[238,7874+58])
                                    Texp_apply
                                    expression (lib/location.ml[238,7874+37]..lib/location.ml[238,7874+38])
                                      Texp_ident "Stdlib!.-"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[238,7874+16]..lib/location.ml[238,7874+36])
                                          Texp_field
                                          expression (lib/location.ml[238,7874+16]..lib/location.ml[238,7874+27])
                                            Texp_field
                                            expression (lib/location.ml[238,7874+16]..lib/location.ml[238,7874+19])
                                              Texp_ident "loc/1149"
                                            "loc_end"
                                          "pos_cnum"
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[238,7874+39]..lib/location.ml[238,7874+58])
                                          Texp_field
                                          expression (lib/location.ml[238,7874+39]..lib/location.ml[238,7874+50])
                                            Texp_field
                                            expression (lib/location.ml[238,7874+39]..lib/location.ml[238,7874+42])
                                              Texp_ident "loc/1149"
                                            "loc_end"
                                          "pos_bol"
                                    ]
                              ]
                              expression (lib/location.ml[240,7937+2]..lib/location.ml[269,8926+25])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/location.ml[240,7937+6]..lib/location.ml[240,7937+11])
                                      Tpat_var "first/1165"
                                    expression (lib/location.ml[240,7937+14]..lib/location.ml[240,7937+22])
                                      Texp_apply
                                      expression (lib/location.ml[240,7937+14]..lib/location.ml[240,7937+17])
                                        Texp_ident "Stdlib!.ref"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[240,7937+18]..lib/location.ml[240,7937+22])
                                            Texp_construct "true"
                                            []
                                      ]
                                ]
                                expression (lib/location.ml[241,7963+2]..lib/location.ml[269,8926+25])
                                  Texp_let Nonrec
                                  [
                                    <def>
                                      pattern (lib/location.ml[241,7963+6]..lib/location.ml[241,7963+16])
                                        Tpat_var "capitalize/1166"
                                      expression (lib/location.ml[241,7963+17]..lib/location.ml[243,8047+10]) ghost
                                        Texp_function
                                        [
                                          Nolabel
                                          Param_pat
                                            pattern (lib/location.ml[241,7963+17]..lib/location.ml[241,7963+18])
                                              Tpat_var "s/1168"
                                        ]
                                        Tfunction_body
                                          expression (lib/location.ml[242,7984+4]..lib/location.ml[243,8047+10])
                                            Texp_ifthenelse
                                            expression (lib/location.ml[242,7984+7]..lib/location.ml[242,7984+13])
                                              Texp_apply
                                              expression (lib/location.ml[242,7984+7]..lib/location.ml[242,7984+8])
                                                Texp_ident "Stdlib!.!"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[242,7984+8]..lib/location.ml[242,7984+13])
                                                    Texp_ident "first/1165"
                                              ]
                                            expression (lib/location.ml[242,7984+19]..lib/location.ml[242,7984+62])
                                              Texp_sequence
                                              expression (lib/location.ml[242,7984+20]..lib/location.ml[242,7984+34])
                                                Texp_apply
                                                expression (lib/location.ml[242,7984+26]..lib/location.ml[242,7984+28])
                                                  Texp_ident "Stdlib!.:="
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[242,7984+20]..lib/location.ml[242,7984+25])
                                                      Texp_ident "first/1165"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[242,7984+29]..lib/location.ml[242,7984+34])
                                                      Texp_construct "false"
                                                      []
                                                ]
                                              expression (lib/location.ml[242,7984+36]..lib/location.ml[242,7984+61])
                                                Texp_apply
                                                expression (lib/location.ml[242,7984+36]..lib/location.ml[242,7984+59])
                                                  Texp_ident "Stdlib!.String.capitalize_ascii"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[242,7984+60]..lib/location.ml[242,7984+61])
                                                      Texp_ident "s/1168"
                                                ]
                                            Some
                                              expression (lib/location.ml[243,8047+9]..lib/location.ml[243,8047+10])
                                                Texp_ident "s/1168"
                                  ]
                                  expression (lib/location.ml[244,8061+2]..lib/location.ml[269,8926+25])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/location.ml[244,8061+6]..lib/location.ml[244,8061+11])
                                          Tpat_var "comma/1169"
                                        expression (lib/location.ml[244,8061+12]..lib/location.ml[245,8078+50]) ghost
                                          Texp_function
                                          [
                                            Nolabel
                                            Param_pat
                                              pattern (lib/location.ml[244,8061+12]..lib/location.ml[244,8061+14])
                                                Tpat_construct "()"
                                                []
                                                None
                                          ]
                                          Tfunction_body
                                            expression (lib/location.ml[245,8078+4]..lib/location.ml[245,8078+50])
                                              Texp_ifthenelse
                                              expression (lib/location.ml[245,8078+7]..lib/location.ml[245,8078+13])
                                                Texp_apply
                                                expression (lib/location.ml[245,8078+7]..lib/location.ml[245,8078+8])
                                                  Texp_ident "Stdlib!.!"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[245,8078+8]..lib/location.ml[245,8078+13])
                                                      Texp_ident "first/1165"
                                                ]
                                              expression (lib/location.ml[245,8078+19]..lib/location.ml[245,8078+21])
                                                Texp_construct "()"
                                                []
                                              Some
                                                expression (lib/location.ml[245,8078+27]..lib/location.ml[245,8078+50])
                                                  Texp_apply
                                                  expression (lib/location.ml[245,8078+27]..lib/location.ml[245,8078+41])
                                                    Texp_ident "Stdlib!.Format.fprintf"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[245,8078+42]..lib/location.ml[245,8078+45])
                                                        Texp_ident "ppf/1148"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[245,8078+46]..lib/location.ml[245,8078+50])
                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                        [
                                                          expression (lib/location.ml[245,8078+46]..lib/location.ml[245,8078+50]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String_literal"
                                                            [
                                                              expression (lib/location.ml[245,8078+46]..lib/location.ml[245,8078+50]) ghost
                                                                Texp_constant Const_string(", ",(lib/location.ml[245,8078+46]..lib/location.ml[245,8078+50]) ghost,None)
                                                              expression (lib/location.ml[245,8078+46]..lib/location.ml[245,8078+50]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                          expression (lib/location.ml[245,8078+46]..lib/location.ml[245,8078+50]) ghost
                                                            Texp_constant Const_string(", ",(lib/location.ml[245,8078+46]..lib/location.ml[245,8078+50]) ghost,None)
                                                        ]
                                                  ]
                                    ]
                                    expression (lib/location.ml[247,8133+2]..lib/location.ml[269,8926+25])
                                      Texp_sequence
                                      expression (lib/location.ml[247,8133+2]..lib/location.ml[247,8133+30])
                                        Texp_apply
                                        expression (lib/location.ml[247,8133+2]..lib/location.ml[247,8133+16])
                                          Texp_ident "Stdlib!.Format.fprintf"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[247,8133+17]..lib/location.ml[247,8133+20])
                                              Texp_ident "ppf/1148"
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                                  [
                                                    expression (lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Open_tag"
                                                      [
                                                        expression (lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                          [
                                                            expression (lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                              [
                                                                expression (lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30]) ghost
                                                                  Texp_constant Const_string("<loc>",(lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30]) ghost,None)
                                                                expression (lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                  []
                                                              ]
                                                            expression (lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30]) ghost
                                                              Texp_constant Const_string("<loc>",(lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30]) ghost,None)
                                                          ]
                                                      ]
                                                    expression (lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                  ]
                                                expression (lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30]) ghost
                                                  Texp_constant Const_string("@{<loc>",(lib/location.ml[247,8133+21]..lib/location.ml[247,8133+30]) ghost,None)
                                              ]
                                        ]
                                      expression (lib/location.ml[255,8451+2]..lib/location.ml[269,8926+25])
                                        Texp_sequence
                                        expression (lib/location.ml[255,8451+2]..lib/location.ml[255,8451+10])
                                          Texp_apply
                                          expression (lib/location.ml[255,8451+2]..lib/location.ml[255,8451+7])
                                            Texp_ident "comma/1169"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[255,8451+8]..lib/location.ml[255,8451+10])
                                                Texp_construct "()"
                                                []
                                          ]
                                        expression (lib/location.ml[256,8463+2]..lib/location.ml[269,8926+25])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/location.ml[256,8463+6]..lib/location.ml[256,8463+15])
                                                Tpat_var "startline/1195"
                                              expression (lib/location.ml[256,8463+18]..lib/location.ml[256,8463+63])
                                                Texp_ifthenelse
                                                expression (lib/location.ml[256,8463+21]..lib/location.ml[256,8463+41])
                                                  Texp_apply
                                                  expression (lib/location.ml[256,8463+21]..lib/location.ml[256,8463+31])
                                                    Texp_ident "line_valid/1153"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[256,8463+32]..lib/location.ml[256,8463+41])
                                                        Texp_ident "startline/1161"
                                                  ]
                                                expression (lib/location.ml[256,8463+47]..lib/location.ml[256,8463+56])
                                                  Texp_ident "startline/1161"
                                                Some
                                                  expression (lib/location.ml[256,8463+62]..lib/location.ml[256,8463+63])
                                                    Texp_constant Const_int 1
                                          ]
                                          expression (lib/location.ml[257,8530+2]..lib/location.ml[269,8926+25])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/location.ml[257,8530+6]..lib/location.ml[257,8530+13])
                                                  Tpat_var "endline/1196"
                                                expression (lib/location.ml[257,8530+16]..lib/location.ml[257,8530+65])
                                                  Texp_ifthenelse
                                                  expression (lib/location.ml[257,8530+19]..lib/location.ml[257,8530+37])
                                                    Texp_apply
                                                    expression (lib/location.ml[257,8530+19]..lib/location.ml[257,8530+29])
                                                      Texp_ident "line_valid/1153"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/location.ml[257,8530+30]..lib/location.ml[257,8530+37])
                                                          Texp_ident "endline/1162"
                                                    ]
                                                  expression (lib/location.ml[257,8530+43]..lib/location.ml[257,8530+50])
                                                    Texp_ident "endline/1162"
                                                  Some
                                                    expression (lib/location.ml[257,8530+56]..lib/location.ml[257,8530+65])
                                                      Texp_ident "startline/1195"
                                            ]
                                            expression (lib/location.ml[258,8599+2]..lib/location.ml[269,8926+25])
                                              Texp_sequence
                                              expression (lib/location.ml[258,8599+2]..lib/location.ml[262,8776+5])
                                                Texp_ifthenelse
                                                expression (lib/location.ml[258,8599+11]..lib/location.ml[258,8599+30])
                                                  Texp_apply
                                                  expression (lib/location.ml[258,8599+21]..lib/location.ml[258,8599+22])
                                                    Texp_ident "Stdlib!.="
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[258,8599+11]..lib/location.ml[258,8599+20])
                                                        Texp_ident "startline/1195"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[258,8599+23]..lib/location.ml[258,8599+30])
                                                        Texp_ident "endline/1196"
                                                  ]
                                                expression (lib/location.ml[259,8635+4]..lib/location.ml[259,8635+60])
                                                  Texp_apply
                                                  expression (lib/location.ml[259,8635+4]..lib/location.ml[259,8635+18])
                                                    Texp_ident "Stdlib!.Format.fprintf"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[259,8635+19]..lib/location.ml[259,8635+22])
                                                        Texp_ident "ppf/1148"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[259,8635+23]..lib/location.ml[259,8635+30])
                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                        [
                                                          expression (lib/location.ml[259,8635+23]..lib/location.ml[259,8635+30]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.String"
                                                            [
                                                              expression (lib/location.ml[259,8635+23]..lib/location.ml[259,8635+30]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                []
                                                              expression (lib/location.ml[259,8635+23]..lib/location.ml[259,8635+30]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                [
                                                                  expression (lib/location.ml[259,8635+23]..lib/location.ml[259,8635+30]) ghost
                                                                    Texp_constant Const_char 20
                                                                  expression (lib/location.ml[259,8635+23]..lib/location.ml[259,8635+30]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.Int"
                                                                    [
                                                                      expression (lib/location.ml[259,8635+23]..lib/location.ml[259,8635+30]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.Int_i"
                                                                        []
                                                                      expression (lib/location.ml[259,8635+23]..lib/location.ml[259,8635+30]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                        []
                                                                      expression (lib/location.ml[259,8635+23]..lib/location.ml[259,8635+30]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                        []
                                                                      expression (lib/location.ml[259,8635+23]..lib/location.ml[259,8635+30]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                        []
                                                                    ]
                                                                ]
                                                            ]
                                                          expression (lib/location.ml[259,8635+23]..lib/location.ml[259,8635+30]) ghost
                                                            Texp_constant Const_string("%s %i",(lib/location.ml[259,8635+23]..lib/location.ml[259,8635+30]) ghost,None)
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[259,8635+31]..lib/location.ml[259,8635+50])
                                                        Texp_apply
                                                        expression (lib/location.ml[259,8635+32]..lib/location.ml[259,8635+42])
                                                          Texp_ident "capitalize/1166"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[259,8635+43]..lib/location.ml[259,8635+49])
                                                              Texp_constant Const_string("line",(lib/location.ml[259,8635+44]..lib/location.ml[259,8635+48]),None)
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[259,8635+51]..lib/location.ml[259,8635+60])
                                                        Texp_ident "startline/1195"
                                                  ]
                                                Some
                                                  expression (lib/location.ml[261,8703+4]..lib/location.ml[261,8703+72])
                                                    Texp_apply
                                                    expression (lib/location.ml[261,8703+4]..lib/location.ml[261,8703+18])
                                                      Texp_ident "Stdlib!.Format.fprintf"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/location.ml[261,8703+19]..lib/location.ml[261,8703+22])
                                                          Texp_ident "ppf/1148"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33])
                                                          Texp_construct "CamlinternalFormatBasics.Format"
                                                          [
                                                            expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String"
                                                              [
                                                                expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                  []
                                                                expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                  [
                                                                    expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                      Texp_constant Const_char 20
                                                                    expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.Int"
                                                                      [
                                                                        expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.Int_i"
                                                                          []
                                                                        expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                          []
                                                                        expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                          []
                                                                        expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                          [
                                                                            expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                              Texp_constant Const_char 2d
                                                                            expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.Int"
                                                                              [
                                                                                expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.Int_i"
                                                                                  []
                                                                                expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                  []
                                                                                expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                                  []
                                                                                expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                  []
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                            expression (lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost
                                                              Texp_constant Const_string("%s %i-%i",(lib/location.ml[261,8703+23]..lib/location.ml[261,8703+33]) ghost,None)
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/location.ml[261,8703+34]..lib/location.ml[261,8703+54])
                                                          Texp_apply
                                                          expression (lib/location.ml[261,8703+35]..lib/location.ml[261,8703+45])
                                                            Texp_ident "capitalize/1166"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/location.ml[261,8703+46]..lib/location.ml[261,8703+53])
                                                                Texp_constant Const_string("lines",(lib/location.ml[261,8703+47]..lib/location.ml[261,8703+52]),None)
                                                          ]
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/location.ml[261,8703+55]..lib/location.ml[261,8703+64])
                                                          Texp_ident "startline/1195"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/location.ml[261,8703+65]..lib/location.ml[261,8703+72])
                                                          Texp_ident "endline/1196"
                                                    ]
                                              expression (lib/location.ml[264,8784+2]..lib/location.ml[269,8926+25])
                                                Texp_sequence
                                                expression (lib/location.ml[264,8784+2]..lib/location.ml[267,8920+3])
                                                  Texp_ifthenelse
                                                  expression (lib/location.ml[264,8784+5]..lib/location.ml[264,8784+36])
                                                    Texp_apply
                                                    expression (lib/location.ml[264,8784+5]..lib/location.ml[264,8784+16])
                                                      Texp_ident "chars_valid/1156"
                                                    [
                                                      <arg>
                                                        Labelled "startchar"
                                                        expression (lib/location.ml[264,8784+18]..lib/location.ml[264,8784+27])
                                                          Texp_ident "startchar/1163"
                                                      <arg>
                                                        Labelled "endchar"
                                                        expression (lib/location.ml[264,8784+29]..lib/location.ml[264,8784+36])
                                                          Texp_ident "endchar/1164"
                                                    ]
                                                  expression (lib/location.ml[264,8784+42]..lib/location.ml[267,8920+3])
                                                    Texp_sequence
                                                    expression (lib/location.ml[265,8828+4]..lib/location.ml[265,8828+12])
                                                      Texp_apply
                                                      expression (lib/location.ml[265,8828+4]..lib/location.ml[265,8828+9])
                                                        Texp_ident "comma/1169"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[265,8828+10]..lib/location.ml[265,8828+12])
                                                            Texp_construct "()"
                                                            []
                                                      ]
                                                    expression (lib/location.ml[266,8842+4]..lib/location.ml[266,8842+77])
                                                      Texp_apply
                                                      expression (lib/location.ml[266,8842+4]..lib/location.ml[266,8842+18])
                                                        Texp_ident "Stdlib!.Format.fprintf"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[266,8842+19]..lib/location.ml[266,8842+22])
                                                            Texp_ident "ppf/1148"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33])
                                                            Texp_construct "CamlinternalFormatBasics.Format"
                                                            [
                                                              expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.String"
                                                                [
                                                                  expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                    []
                                                                  expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                    Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                    [
                                                                      expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                        Texp_constant Const_char 20
                                                                      expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                        Texp_construct "CamlinternalFormatBasics.Int"
                                                                        [
                                                                          expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.Int_i"
                                                                            []
                                                                          expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                            []
                                                                          expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                            []
                                                                          expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                            Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                            [
                                                                              expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                                Texp_constant Const_char 2d
                                                                              expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                                Texp_construct "CamlinternalFormatBasics.Int"
                                                                                [
                                                                                  expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.Int_i"
                                                                                    []
                                                                                  expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                                    []
                                                                                  expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.No_precision"
                                                                                    []
                                                                                  expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                    []
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                              expression (lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost
                                                                Texp_constant Const_string("%s %i-%i",(lib/location.ml[266,8842+23]..lib/location.ml[266,8842+33]) ghost,None)
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[266,8842+34]..lib/location.ml[266,8842+59])
                                                            Texp_apply
                                                            expression (lib/location.ml[266,8842+35]..lib/location.ml[266,8842+45])
                                                              Texp_ident "capitalize/1166"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/location.ml[266,8842+46]..lib/location.ml[266,8842+58])
                                                                  Texp_constant Const_string("characters",(lib/location.ml[266,8842+47]..lib/location.ml[266,8842+57]),None)
                                                            ]
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[266,8842+60]..lib/location.ml[266,8842+69])
                                                            Texp_ident "startchar/1163"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[266,8842+70]..lib/location.ml[266,8842+77])
                                                            Texp_ident "endchar/1164"
                                                      ]
                                                  None
                                                expression (lib/location.ml[269,8926+2]..lib/location.ml[269,8926+25])
                                                  Texp_apply
                                                  expression (lib/location.ml[269,8926+2]..lib/location.ml[269,8926+16])
                                                    Texp_ident "Stdlib!.Format.fprintf"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[269,8926+17]..lib/location.ml[269,8926+20])
                                                        Texp_ident "ppf/1148"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[269,8926+21]..lib/location.ml[269,8926+25])
                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                        [
                                                          expression (lib/location.ml[269,8926+21]..lib/location.ml[269,8926+25]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                            [
                                                              expression (lib/location.ml[269,8926+21]..lib/location.ml[269,8926+25]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.Close_tag"
                                                                []
                                                              expression (lib/location.ml[269,8926+21]..lib/location.ml[269,8926+25]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                          expression (lib/location.ml[269,8926+21]..lib/location.ml[269,8926+25]) ghost
                                                            Texp_constant Const_string("@}",(lib/location.ml[269,8926+21]..lib/location.ml[269,8926+25]) ghost,None)
                                                        ]
                                                  ]
    ]
  structure_item (lib/location.ml[272,9001+0]..lib/location.ml[274,9099+22])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[272,9001+4]..lib/location.ml[272,9001+14])
          Tpat_var "print_locs/1197"
        expression (lib/location.ml[272,9001+15]..lib/location.ml[274,9099+22]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[272,9001+15]..lib/location.ml[272,9001+18])
                Tpat_var "ppf/1199"
            Nolabel
            Param_pat
              pattern (lib/location.ml[272,9001+19]..lib/location.ml[272,9001+23])
                Tpat_var "locs/1200"
          ]
          Tfunction_body
            expression (lib/location.ml[273,9027+2]..lib/location.ml[274,9099+22])
              Texp_apply
              expression (lib/location.ml[273,9027+2]..lib/location.ml[273,9027+22])
                Texp_ident "Stdlib!.Format.pp_print_list"
              [
                <arg>
                  Optional "pp_sep"
                  expression (lib/location.ml[273,9027+31]..lib/location.ml[273,9027+71])
                    Texp_construct "Some"
                    [
                      expression (lib/location.ml[273,9027+31]..lib/location.ml[273,9027+71])
                        Texp_function
                        [
                          Nolabel
                          Param_pat
                            pattern (lib/location.ml[273,9027+36]..lib/location.ml[273,9027+39])
                              Tpat_var "ppf/1201"
                          Nolabel
                          Param_pat
                            pattern (lib/location.ml[273,9027+40]..lib/location.ml[273,9027+42])
                              Tpat_construct "()"
                              []
                              None
                        ]
                        Tfunction_body
                          expression (lib/location.ml[273,9027+46]..lib/location.ml[273,9027+70])
                            Texp_apply
                            expression (lib/location.ml[273,9027+46]..lib/location.ml[273,9027+60])
                              Texp_ident "Stdlib!.Format.fprintf"
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[273,9027+61]..lib/location.ml[273,9027+64])
                                  Texp_ident "ppf/1201"
                              <arg>
                                Nolabel
                                expression (lib/location.ml[273,9027+65]..lib/location.ml[273,9027+70])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (lib/location.ml[273,9027+65]..lib/location.ml[273,9027+70]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                      [
                                        expression (lib/location.ml[273,9027+65]..lib/location.ml[273,9027+70]) ghost
                                          Texp_constant Const_char 2c
                                        expression (lib/location.ml[273,9027+65]..lib/location.ml[273,9027+70]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                          [
                                            expression (lib/location.ml[273,9027+65]..lib/location.ml[273,9027+70]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Break"
                                              [
                                                expression (lib/location.ml[273,9027+65]..lib/location.ml[273,9027+70]) ghost
                                                  Texp_constant Const_string("@ ",(lib/location.ml[273,9027+65]..lib/location.ml[273,9027+70]) ghost,None)
                                                expression (lib/location.ml[273,9027+65]..lib/location.ml[273,9027+70]) ghost
                                                  Texp_constant Const_int 1
                                                expression (lib/location.ml[273,9027+65]..lib/location.ml[273,9027+70]) ghost
                                                  Texp_constant Const_int 0
                                              ]
                                            expression (lib/location.ml[273,9027+65]..lib/location.ml[273,9027+70]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                          ]
                                      ]
                                    expression (lib/location.ml[273,9027+65]..lib/location.ml[273,9027+70]) ghost
                                      Texp_constant Const_string(",@ ",(lib/location.ml[273,9027+65]..lib/location.ml[273,9027+70]) ghost,None)
                                  ]
                            ]
                    ]
                <arg>
                  Nolabel
                  expression (lib/location.ml[274,9099+4]..lib/location.ml[274,9099+13])
                    Texp_ident "print_loc/1146"
                <arg>
                  Nolabel
                  expression (lib/location.ml[274,9099+14]..lib/location.ml[274,9099+17])
                    Texp_ident "ppf/1199"
                <arg>
                  Nolabel
                  expression (lib/location.ml[274,9099+18]..lib/location.ml[274,9099+22])
                    Texp_ident "locs/1200"
              ]
    ]
  structure_item (lib/location.ml[288,9583+0]..lib/location.ml[356,11636+3])
    Tstr_module
    ISet/1279
      module_expr (lib/location.ml[288,9583+12]..lib/location.ml[356,11636+3])
        Tmod_constraint
        module_expr (lib/location.ml[303,9979+0]..lib/location.ml[356,11636+3])
          Tmod_structure
          [
            structure_item (lib/location.ml[304,9986+2]..lib/location.ml[304,9986+26])
              Tstr_type Rec
              [
                type_declaration bound/1203 (lib/location.ml[304,9986+2]..lib/location.ml[304,9986+26])
                  ptype_params =
                    [
                      core_type (lib/location.ml[304,9986+7]..lib/location.ml[304,9986+9])
                        Ttyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/location.ml[304,9986+18]..lib/location.ml[304,9986+26])
                        Ttyp_tuple
                        [
                          core_type (lib/location.ml[304,9986+18]..lib/location.ml[304,9986+20])
                            Ttyp_var a
                          core_type (lib/location.ml[304,9986+23]..lib/location.ml[304,9986+26])
                            Ttyp_constr "int/1!"
                            []
                        ]
              ]
            structure_item (lib/location.ml[307,10048+2]..lib/location.ml[307,10048+40])
              Tstr_type Rec
              [
                type_declaration t/1204 (lib/location.ml[307,10048+2]..lib/location.ml[307,10048+40])
                  ptype_params =
                    [
                      core_type (lib/location.ml[307,10048+7]..lib/location.ml[307,10048+9])
                        Ttyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/location.ml[307,10048+14]..lib/location.ml[307,10048+40])
                        Ttyp_constr "list/9!"
                        [
                          core_type (lib/location.ml[307,10048+15]..lib/location.ml[307,10048+34])
                            Ttyp_tuple
                            [
                              core_type (lib/location.ml[307,10048+15]..lib/location.ml[307,10048+23])
                                Ttyp_constr "bound/1203"
                                [
                                  core_type (lib/location.ml[307,10048+15]..lib/location.ml[307,10048+17])
                                    Ttyp_var a
                                ]
                              core_type (lib/location.ml[307,10048+26]..lib/location.ml[307,10048+34])
                                Ttyp_constr "bound/1203"
                                [
                                  core_type (lib/location.ml[307,10048+26]..lib/location.ml[307,10048+28])
                                    Ttyp_var a
                                ]
                            ]
                        ]
              ]
            structure_item (lib/location.ml[309,10090+2]..lib/location.ml[331,10958+16])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/location.ml[309,10090+6]..lib/location.ml[309,10090+18])
                    Tpat_var "of_intervals/1205"
                  expression (lib/location.ml[309,10090+19]..lib/location.ml[331,10958+16]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[309,10090+19]..lib/location.ml[309,10090+28])
                          Tpat_var "intervals/1207"
                    ]
                    Tfunction_body
                      expression (lib/location.ml[310,10121+4]..lib/location.ml[331,10958+16])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/location.ml[310,10121+8]..lib/location.ml[310,10121+11])
                              Tpat_var "pos/1208"
                            expression (lib/location.ml[311,10135+6]..lib/location.ml[319,10489+37])
                              Texp_apply
                              expression (lib/location.ml[315,10274+9]..lib/location.ml[319,10489+37])
                                Texp_apply
                                expression (lib/location.ml[315,10274+9]..lib/location.ml[315,10274+18])
                                  Texp_ident "Stdlib!.List.sort"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[315,10274+19]..lib/location.ml[319,10489+37])
                                      Texp_function
                                      [
                                        Nolabel
                                        Param_pat
                                          pattern (lib/location.ml[315,10274+24]..lib/location.ml[315,10274+35])
                                            Tpat_tuple
                                            [
                                              pattern (lib/location.ml[315,10274+25]..lib/location.ml[315,10274+31])
                                                Tpat_tuple
                                                [
                                                  pattern (lib/location.ml[315,10274+26]..lib/location.ml[315,10274+27])
                                                    Tpat_any
                                                  pattern (lib/location.ml[315,10274+29]..lib/location.ml[315,10274+30])
                                                    Tpat_var "x/1209"
                                                ]
                                              pattern (lib/location.ml[315,10274+33]..lib/location.ml[315,10274+34])
                                                Tpat_var "k/1210"
                                            ]
                                        Nolabel
                                        Param_pat
                                          pattern (lib/location.ml[315,10274+36]..lib/location.ml[315,10274+48])
                                            Tpat_tuple
                                            [
                                              pattern (lib/location.ml[315,10274+37]..lib/location.ml[315,10274+43])
                                                Tpat_tuple
                                                [
                                                  pattern (lib/location.ml[315,10274+38]..lib/location.ml[315,10274+39])
                                                    Tpat_any
                                                  pattern (lib/location.ml[315,10274+41]..lib/location.ml[315,10274+42])
                                                    Tpat_var "y/1211"
                                                ]
                                              pattern (lib/location.ml[315,10274+45]..lib/location.ml[315,10274+47])
                                                Tpat_var "k'/1212"
                                            ]
                                      ]
                                      Tfunction_body
                                        expression (lib/location.ml[318,10442+8]..lib/location.ml[319,10489+36])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/location.ml[318,10442+12]..lib/location.ml[318,10442+14])
                                                Tpat_var "kn/1213"
                                              expression (lib/location.ml[318,10442+17]..lib/location.ml[318,10442+43])
                                                Texp_function
                                                []
                                                Tfunction_cases (lib/location.ml[318,10442+17]..lib/location.ml[318,10442+43])
                                                  [
                                                    <case>
                                                      pattern (lib/location.ml[318,10442+26]..lib/location.ml[318,10442+28])
                                                        Tpat_variant "S"
                                                        None
                                                      expression (lib/location.ml[318,10442+32]..lib/location.ml[318,10442+33])
                                                        Texp_constant Const_int 0
                                                    <case>
                                                      pattern (lib/location.ml[318,10442+36]..lib/location.ml[318,10442+38])
                                                        Tpat_variant "E"
                                                        None
                                                      expression (lib/location.ml[318,10442+42]..lib/location.ml[318,10442+43])
                                                        Texp_constant Const_int 1
                                                  ]
                                          ]
                                          expression (lib/location.ml[319,10489+8]..lib/location.ml[319,10489+36])
                                            Texp_apply
                                            expression (lib/location.ml[319,10489+8]..lib/location.ml[319,10489+15])
                                              Texp_ident "Stdlib!.compare"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[319,10489+16]..lib/location.ml[319,10489+25])
                                                  Texp_tuple
                                                  [
                                                    expression (lib/location.ml[319,10489+17]..lib/location.ml[319,10489+18])
                                                      Texp_ident "x/1209"
                                                    expression (lib/location.ml[319,10489+20]..lib/location.ml[319,10489+24])
                                                      Texp_apply
                                                      expression (lib/location.ml[319,10489+20]..lib/location.ml[319,10489+22])
                                                        Texp_ident "kn/1213"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[319,10489+23]..lib/location.ml[319,10489+24])
                                                            Texp_ident "k/1210"
                                                      ]
                                                  ]
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[319,10489+26]..lib/location.ml[319,10489+36])
                                                  Texp_tuple
                                                  [
                                                    expression (lib/location.ml[319,10489+27]..lib/location.ml[319,10489+28])
                                                      Texp_ident "y/1211"
                                                    expression (lib/location.ml[319,10489+30]..lib/location.ml[319,10489+35])
                                                      Texp_apply
                                                      expression (lib/location.ml[319,10489+30]..lib/location.ml[319,10489+32])
                                                        Texp_ident "kn/1213"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[319,10489+33]..lib/location.ml[319,10489+35])
                                                            Texp_ident "k'/1212"
                                                      ]
                                                  ]
                                            ]
                                ]
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[311,10135+6]..lib/location.ml[314,10252+21])
                                    Texp_apply
                                    expression (lib/location.ml[314,10252+9]..lib/location.ml[314,10252+21])
                                      Texp_ident "Stdlib!.List.flatten"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[311,10135+6]..lib/location.ml[313,10234+17])
                                          Texp_apply
                                          expression (lib/location.ml[311,10135+6]..lib/location.ml[311,10135+14])
                                            Texp_ident "Stdlib!.List.map"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[311,10135+15]..lib/location.ml[313,10234+7])
                                                Texp_function
                                                [
                                                  Nolabel
                                                  Param_pat
                                                    pattern (lib/location.ml[311,10135+20]..lib/location.ml[311,10135+36])
                                                      Tpat_tuple
                                                      [
                                                        pattern (lib/location.ml[311,10135+21]..lib/location.ml[311,10135+27])
                                                          Tpat_tuple
                                                          [
                                                            pattern (lib/location.ml[311,10135+22]..lib/location.ml[311,10135+23])
                                                              Tpat_var "a/1218"
                                                            pattern (lib/location.ml[311,10135+25]..lib/location.ml[311,10135+26])
                                                              Tpat_var "x/1219"
                                                          ]
                                                        pattern (lib/location.ml[311,10135+29]..lib/location.ml[311,10135+35])
                                                          Tpat_tuple
                                                          [
                                                            pattern (lib/location.ml[311,10135+30]..lib/location.ml[311,10135+31])
                                                              Tpat_var "b/1220"
                                                            pattern (lib/location.ml[311,10135+33]..lib/location.ml[311,10135+34])
                                                              Tpat_var "y/1221"
                                                          ]
                                                      ]
                                                ]
                                                Tfunction_body
                                                  expression (lib/location.ml[312,10175+8]..lib/location.ml[312,10175+58])
                                                    Texp_ifthenelse
                                                    expression (lib/location.ml[312,10175+11]..lib/location.ml[312,10175+16])
                                                      Texp_apply
                                                      expression (lib/location.ml[312,10175+13]..lib/location.ml[312,10175+14])
                                                        Texp_ident "Stdlib!.>"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[312,10175+11]..lib/location.ml[312,10175+12])
                                                            Texp_ident "x/1219"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[312,10175+15]..lib/location.ml[312,10175+16])
                                                            Texp_ident "y/1221"
                                                      ]
                                                    expression (lib/location.ml[312,10175+22]..lib/location.ml[312,10175+24])
                                                      Texp_construct "[]"
                                                      []
                                                    Some
                                                      expression (lib/location.ml[312,10175+30]..lib/location.ml[312,10175+58])
                                                        Texp_construct "::"
                                                        [
                                                          expression (lib/location.ml[312,10175+31]..lib/location.ml[312,10175+43])
                                                            Texp_tuple
                                                            [
                                                              expression (lib/location.ml[312,10175+32]..lib/location.ml[312,10175+38])
                                                                Texp_tuple
                                                                [
                                                                  expression (lib/location.ml[312,10175+33]..lib/location.ml[312,10175+34])
                                                                    Texp_ident "a/1218"
                                                                  expression (lib/location.ml[312,10175+36]..lib/location.ml[312,10175+37])
                                                                    Texp_ident "x/1219"
                                                                ]
                                                              expression (lib/location.ml[312,10175+40]..lib/location.ml[312,10175+42])
                                                                Texp_variant "S"
                                                                None
                                                            ]
                                                          expression (lib/location.ml[312,10175+45]..lib/location.ml[312,10175+58]) ghost
                                                            Texp_construct "::"
                                                            [
                                                              expression (lib/location.ml[312,10175+45]..lib/location.ml[312,10175+57])
                                                                Texp_tuple
                                                                [
                                                                  expression (lib/location.ml[312,10175+46]..lib/location.ml[312,10175+52])
                                                                    Texp_tuple
                                                                    [
                                                                      expression (lib/location.ml[312,10175+47]..lib/location.ml[312,10175+48])
                                                                        Texp_ident "b/1220"
                                                                      expression (lib/location.ml[312,10175+50]..lib/location.ml[312,10175+51])
                                                                        Texp_ident "y/1221"
                                                                    ]
                                                                  expression (lib/location.ml[312,10175+54]..lib/location.ml[312,10175+56])
                                                                    Texp_variant "E"
                                                                    None
                                                                ]
                                                              expression (lib/location.ml[312,10175+57]..lib/location.ml[312,10175+58]) ghost
                                                                Texp_construct "[]"
                                                                []
                                                            ]
                                                        ]
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[313,10234+8]..lib/location.ml[313,10234+17])
                                                Texp_ident "intervals/1207"
                                          ]
                                    ]
                              ]
                        ]
                        expression (lib/location.ml[321,10534+4]..lib/location.ml[331,10958+16])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/location.ml[321,10534+8]..lib/location.ml[321,10534+20])
                                Tpat_tuple
                                [
                                  pattern (lib/location.ml[321,10534+8]..lib/location.ml[321,10534+15])
                                    Tpat_var "nesting/1223"
                                  pattern (lib/location.ml[321,10534+17]..lib/location.ml[321,10534+20])
                                    Tpat_var "acc/1224"
                                ]
                              expression (lib/location.ml[322,10557+6]..lib/location.ml[329,10895+26])
                                Texp_apply
                                expression (lib/location.ml[322,10557+6]..lib/location.ml[322,10557+20])
                                  Texp_ident "Stdlib!.List.fold_left"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[322,10557+21]..lib/location.ml[329,10895+7])
                                      Texp_function
                                      [
                                        Nolabel
                                        Param_pat
                                          pattern (lib/location.ml[322,10557+26]..lib/location.ml[322,10557+40])
                                            Tpat_tuple
                                            [
                                              pattern (lib/location.ml[322,10557+27]..lib/location.ml[322,10557+34])
                                                Tpat_var "nesting/1225"
                                              pattern (lib/location.ml[322,10557+36]..lib/location.ml[322,10557+39])
                                                Tpat_var "acc/1226"
                                            ]
                                        Nolabel
                                        Param_pat
                                          pattern (lib/location.ml[322,10557+41]..lib/location.ml[322,10557+50])
                                            Tpat_tuple
                                            [
                                              pattern (lib/location.ml[322,10557+42]..lib/location.ml[322,10557+43])
                                                Tpat_var "a/1227"
                                              pattern (lib/location.ml[322,10557+45]..lib/location.ml[322,10557+49])
                                                Tpat_var "kind/1228"
                                            ]
                                      ]
                                      Tfunction_body
                                        expression (lib/location.ml[323,10611+8]..lib/location.ml[328,10841+53])
                                          Texp_match
                                          expression (lib/location.ml[323,10611+14]..lib/location.ml[323,10611+27])
                                            Texp_tuple
                                            [
                                              expression (lib/location.ml[323,10611+14]..lib/location.ml[323,10611+18])
                                                Texp_ident "kind/1228"
                                              expression (lib/location.ml[323,10611+20]..lib/location.ml[323,10611+27])
                                                Texp_ident "nesting/1225"
                                            ]
                                          [
                                            <case>
                                              pattern (lib/location.ml[324,10644+10]..lib/location.ml[324,10644+22])
                                                Tpat_value
                                                pattern (lib/location.ml[324,10644+10]..lib/location.ml[324,10644+22])
                                                  Tpat_tuple
                                                  [
                                                    pattern (lib/location.ml[324,10644+10]..lib/location.ml[324,10644+12])
                                                      Tpat_variant "S"
                                                      None
                                                    pattern (lib/location.ml[324,10644+14]..lib/location.ml[324,10644+22])
                                                      Tpat_variant "Outside"
                                                      None
                                                  ]
                                              expression (lib/location.ml[324,10644+26]..lib/location.ml[324,10644+45])
                                                Texp_tuple
                                                [
                                                  expression (lib/location.ml[324,10644+26]..lib/location.ml[324,10644+40])
                                                    Texp_variant "Inside"
                                                    Some
                                                      expression (lib/location.ml[324,10644+34]..lib/location.ml[324,10644+40])
                                                        Texp_tuple
                                                        [
                                                          expression (lib/location.ml[324,10644+35]..lib/location.ml[324,10644+36])
                                                            Texp_ident "a/1227"
                                                          expression (lib/location.ml[324,10644+38]..lib/location.ml[324,10644+39])
                                                            Texp_constant Const_int 0
                                                        ]
                                                  expression (lib/location.ml[324,10644+42]..lib/location.ml[324,10644+45])
                                                    Texp_ident "acc/1226"
                                                ]
                                            <case>
                                              pattern (lib/location.ml[325,10690+10]..lib/location.ml[325,10690+28])
                                                Tpat_value
                                                pattern (lib/location.ml[325,10690+10]..lib/location.ml[325,10690+28])
                                                  Tpat_tuple
                                                  [
                                                    pattern (lib/location.ml[325,10690+10]..lib/location.ml[325,10690+12])
                                                      Tpat_variant "S"
                                                      None
                                                    pattern (lib/location.ml[325,10690+14]..lib/location.ml[325,10690+28])
                                                      Tpat_variant "Inside"
                                                      Some
                                                        pattern (lib/location.ml[325,10690+22]..lib/location.ml[325,10690+28])
                                                          Tpat_tuple
                                                          [
                                                            pattern (lib/location.ml[325,10690+23]..lib/location.ml[325,10690+24])
                                                              Tpat_var "s/1229"
                                                            pattern (lib/location.ml[325,10690+26]..lib/location.ml[325,10690+27])
                                                              Tpat_var "n/1230"
                                                          ]
                                                  ]
                                              expression (lib/location.ml[325,10690+32]..lib/location.ml[325,10690+53])
                                                Texp_tuple
                                                [
                                                  expression (lib/location.ml[325,10690+32]..lib/location.ml[325,10690+48])
                                                    Texp_variant "Inside"
                                                    Some
                                                      expression (lib/location.ml[325,10690+40]..lib/location.ml[325,10690+48])
                                                        Texp_tuple
                                                        [
                                                          expression (lib/location.ml[325,10690+41]..lib/location.ml[325,10690+42])
                                                            Texp_ident "s/1229"
                                                          expression (lib/location.ml[325,10690+44]..lib/location.ml[325,10690+47])
                                                            Texp_apply
                                                            expression (lib/location.ml[325,10690+45]..lib/location.ml[325,10690+46])
                                                              Texp_ident "Stdlib!.+"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/location.ml[325,10690+44]..lib/location.ml[325,10690+45])
                                                                  Texp_ident "n/1230"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/location.ml[325,10690+46]..lib/location.ml[325,10690+47])
                                                                  Texp_constant Const_int 1
                                                            ]
                                                        ]
                                                  expression (lib/location.ml[325,10690+50]..lib/location.ml[325,10690+53])
                                                    Texp_ident "acc/1226"
                                                ]
                                            <case>
                                              pattern (lib/location.ml[326,10744+10]..lib/location.ml[326,10744+22])
                                                Tpat_value
                                                pattern (lib/location.ml[326,10744+10]..lib/location.ml[326,10744+22])
                                                  Tpat_tuple
                                                  [
                                                    pattern (lib/location.ml[326,10744+10]..lib/location.ml[326,10744+12])
                                                      Tpat_variant "E"
                                                      None
                                                    pattern (lib/location.ml[326,10744+14]..lib/location.ml[326,10744+22])
                                                      Tpat_variant "Outside"
                                                      None
                                                  ]
                                              expression (lib/location.ml[326,10744+26]..lib/location.ml[326,10744+38])
                                                Texp_assert                                                expression (lib/location.ml[326,10744+33]..lib/location.ml[326,10744+38])
                                                  Texp_construct "false"
                                                  []
                                            <case>
                                              pattern (lib/location.ml[327,10783+10]..lib/location.ml[327,10783+28])
                                                Tpat_value
                                                pattern (lib/location.ml[327,10783+10]..lib/location.ml[327,10783+28])
                                                  Tpat_tuple
                                                  [
                                                    pattern (lib/location.ml[327,10783+10]..lib/location.ml[327,10783+12])
                                                      Tpat_variant "E"
                                                      None
                                                    pattern (lib/location.ml[327,10783+14]..lib/location.ml[327,10783+28])
                                                      Tpat_variant "Inside"
                                                      Some
                                                        pattern (lib/location.ml[327,10783+22]..lib/location.ml[327,10783+28])
                                                          Tpat_tuple
                                                          [
                                                            pattern (lib/location.ml[327,10783+23]..lib/location.ml[327,10783+24])
                                                              Tpat_var "s/1231"
                                                            pattern (lib/location.ml[327,10783+26]..lib/location.ml[327,10783+27])
                                                              Tpat_constant Const_int 0
                                                          ]
                                                  ]
                                              expression (lib/location.ml[327,10783+32]..lib/location.ml[327,10783+57])
                                                Texp_tuple
                                                [
                                                  expression (lib/location.ml[327,10783+32]..lib/location.ml[327,10783+40])
                                                    Texp_variant "Outside"
                                                    None
                                                  expression (lib/location.ml[327,10783+42]..lib/location.ml[327,10783+57])
                                                    Texp_construct "::"
                                                    [
                                                      expression (lib/location.ml[327,10783+43]..lib/location.ml[327,10783+49])
                                                        Texp_tuple
                                                        [
                                                          expression (lib/location.ml[327,10783+44]..lib/location.ml[327,10783+45])
                                                            Texp_ident "s/1231"
                                                          expression (lib/location.ml[327,10783+47]..lib/location.ml[327,10783+48])
                                                            Texp_ident "a/1227"
                                                        ]
                                                      expression (lib/location.ml[327,10783+53]..lib/location.ml[327,10783+56])
                                                        Texp_ident "acc/1226"
                                                    ]
                                                ]
                                            <case>
                                              pattern (lib/location.ml[328,10841+10]..lib/location.ml[328,10841+28])
                                                Tpat_value
                                                pattern (lib/location.ml[328,10841+10]..lib/location.ml[328,10841+28])
                                                  Tpat_tuple
                                                  [
                                                    pattern (lib/location.ml[328,10841+10]..lib/location.ml[328,10841+12])
                                                      Tpat_variant "E"
                                                      None
                                                    pattern (lib/location.ml[328,10841+14]..lib/location.ml[328,10841+28])
                                                      Tpat_variant "Inside"
                                                      Some
                                                        pattern (lib/location.ml[328,10841+22]..lib/location.ml[328,10841+28])
                                                          Tpat_tuple
                                                          [
                                                            pattern (lib/location.ml[328,10841+23]..lib/location.ml[328,10841+24])
                                                              Tpat_var "s/1232"
                                                            pattern (lib/location.ml[328,10841+26]..lib/location.ml[328,10841+27])
                                                              Tpat_var "n/1233"
                                                          ]
                                                  ]
                                              expression (lib/location.ml[328,10841+32]..lib/location.ml[328,10841+53])
                                                Texp_tuple
                                                [
                                                  expression (lib/location.ml[328,10841+32]..lib/location.ml[328,10841+48])
                                                    Texp_variant "Inside"
                                                    Some
                                                      expression (lib/location.ml[328,10841+40]..lib/location.ml[328,10841+48])
                                                        Texp_tuple
                                                        [
                                                          expression (lib/location.ml[328,10841+41]..lib/location.ml[328,10841+42])
                                                            Texp_ident "s/1232"
                                                          expression (lib/location.ml[328,10841+44]..lib/location.ml[328,10841+47])
                                                            Texp_apply
                                                            expression (lib/location.ml[328,10841+45]..lib/location.ml[328,10841+46])
                                                              Texp_ident "Stdlib!.-"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/location.ml[328,10841+44]..lib/location.ml[328,10841+45])
                                                                  Texp_ident "n/1233"
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/location.ml[328,10841+46]..lib/location.ml[328,10841+47])
                                                                  Texp_constant Const_int 1
                                                            ]
                                                        ]
                                                  expression (lib/location.ml[328,10841+50]..lib/location.ml[328,10841+53])
                                                    Texp_ident "acc/1226"
                                                ]
                                          ]
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[329,10895+8]..lib/location.ml[329,10895+22])
                                      Texp_tuple
                                      [
                                        expression (lib/location.ml[329,10895+9]..lib/location.ml[329,10895+17])
                                          Texp_variant "Outside"
                                          None
                                        expression (lib/location.ml[329,10895+19]..lib/location.ml[329,10895+21])
                                          Texp_construct "[]"
                                          []
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[329,10895+23]..lib/location.ml[329,10895+26])
                                      Texp_ident "pos/1208"
                                ]
                          ]
                          expression (lib/location.ml[330,10925+4]..lib/location.ml[331,10958+16])
                            Texp_sequence
                            expression (lib/location.ml[330,10925+4]..lib/location.ml[330,10925+31])
                              Texp_assert                              expression (lib/location.ml[330,10925+11]..lib/location.ml[330,10925+31])
                                Texp_apply
                                expression (lib/location.ml[330,10925+20]..lib/location.ml[330,10925+21])
                                  Texp_ident "Stdlib!.="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[330,10925+12]..lib/location.ml[330,10925+19])
                                      Texp_ident "nesting/1223"
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[330,10925+22]..lib/location.ml[330,10925+30])
                                      Texp_variant "Outside"
                                      None
                                ]
                            expression (lib/location.ml[331,10958+4]..lib/location.ml[331,10958+16])
                              Texp_apply
                              expression (lib/location.ml[331,10958+4]..lib/location.ml[331,10958+12])
                                Texp_ident "Stdlib!.List.rev"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[331,10958+13]..lib/location.ml[331,10958+16])
                                    Texp_ident "acc/1224"
                              ]
              ]
            structure_item (lib/location.ml[333,10976+2]..lib/location.ml[334,10998+67])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/location.ml[333,10976+6]..lib/location.ml[333,10976+9])
                    Tpat_var "mem/1236"
                  expression (lib/location.ml[333,10976+10]..lib/location.ml[334,10998+67]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[333,10976+10]..lib/location.ml[333,10976+14])
                          Tpat_var "iset/1238"
                      Labelled "pos"
                      Param_pat
                        pattern (lib/location.ml[333,10976+16]..lib/location.ml[333,10976+19])
                          Tpat_var "pos/1239"
                    ]
                    Tfunction_body
                      expression (lib/location.ml[334,10998+4]..lib/location.ml[334,10998+67])
                        Texp_apply
                        expression (lib/location.ml[334,10998+4]..lib/location.ml[334,10998+15])
                          Texp_ident "Stdlib!.List.exists"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[334,10998+16]..lib/location.ml[334,10998+62])
                              Texp_function
                              [
                                Nolabel
                                Param_pat
                                  pattern (lib/location.ml[334,10998+21]..lib/location.ml[334,10998+37])
                                    Tpat_tuple
                                    [
                                      pattern (lib/location.ml[334,10998+22]..lib/location.ml[334,10998+28])
                                        Tpat_tuple
                                        [
                                          pattern (lib/location.ml[334,10998+23]..lib/location.ml[334,10998+24])
                                            Tpat_any
                                          pattern (lib/location.ml[334,10998+26]..lib/location.ml[334,10998+27])
                                            Tpat_var "s/1240"
                                        ]
                                      pattern (lib/location.ml[334,10998+30]..lib/location.ml[334,10998+36])
                                        Tpat_tuple
                                        [
                                          pattern (lib/location.ml[334,10998+31]..lib/location.ml[334,10998+32])
                                            Tpat_any
                                          pattern (lib/location.ml[334,10998+34]..lib/location.ml[334,10998+35])
                                            Tpat_var "e/1241"
                                        ]
                                    ]
                              ]
                              Tfunction_body
                                expression (lib/location.ml[334,10998+41]..lib/location.ml[334,10998+61])
                                  Texp_apply
                                  expression (lib/location.ml[334,10998+50]..lib/location.ml[334,10998+52])
                                    Texp_ident "Stdlib!.&&"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[334,10998+41]..lib/location.ml[334,10998+49])
                                        Texp_apply
                                        expression (lib/location.ml[334,10998+43]..lib/location.ml[334,10998+45])
                                          Texp_ident "Stdlib!.<="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[334,10998+41]..lib/location.ml[334,10998+42])
                                              Texp_ident "s/1240"
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[334,10998+46]..lib/location.ml[334,10998+49])
                                              Texp_ident "pos/1239"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[334,10998+53]..lib/location.ml[334,10998+61])
                                        Texp_apply
                                        expression (lib/location.ml[334,10998+57]..lib/location.ml[334,10998+59])
                                          Texp_ident "Stdlib!.<="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[334,10998+53]..lib/location.ml[334,10998+56])
                                              Texp_ident "pos/1239"
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[334,10998+60]..lib/location.ml[334,10998+61])
                                              Texp_ident "e/1241"
                                        ]
                                  ]
                          <arg>
                            Nolabel
                            expression (lib/location.ml[334,10998+63]..lib/location.ml[334,10998+67])
                              Texp_ident "iset/1238"
                        ]
              ]
            structure_item (lib/location.ml[336,11067+2]..lib/location.ml[341,11280+10])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/location.ml[336,11067+6]..lib/location.ml[336,11067+19])
                    Tpat_var "find_bound_in/1243"
                  expression (lib/location.ml[336,11067+20]..lib/location.ml[341,11280+10]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[336,11067+20]..lib/location.ml[336,11067+24])
                          Tpat_var "iset/1245"
                      Labelled "range"
                      Param_pat
                        pattern (lib/location.ml[336,11067+32]..lib/location.ml[336,11067+45])
                          Tpat_tuple
                          [
                            pattern (lib/location.ml[336,11067+33]..lib/location.ml[336,11067+38])
                              Tpat_var "start/1246"
                            pattern (lib/location.ml[336,11067+40]..lib/location.ml[336,11067+44])
                              Tpat_var "end_/1247"
                          ]
                    ]
                    Tfunction_body
                      expression (lib/location.ml[337,11116+4]..lib/location.ml[341,11280+10])
                        Texp_apply
                        expression (lib/location.ml[337,11116+4]..lib/location.ml[337,11116+17])
                          Texp_ident "Stdlib!.List.find_map"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[337,11116+18]..lib/location.ml[341,11280+5])
                              Texp_function
                              [
                                Nolabel
                                Param_pat
                                  pattern (lib/location.ml[337,11116+23]..lib/location.ml[337,11116+39])
                                    Tpat_tuple
                                    [
                                      pattern (lib/location.ml[337,11116+24]..lib/location.ml[337,11116+30])
                                        Tpat_tuple
                                        [
                                          pattern (lib/location.ml[337,11116+25]..lib/location.ml[337,11116+26])
                                            Tpat_var "a/1248"
                                          pattern (lib/location.ml[337,11116+28]..lib/location.ml[337,11116+29])
                                            Tpat_var "x/1249"
                                        ]
                                      pattern (lib/location.ml[337,11116+32]..lib/location.ml[337,11116+38])
                                        Tpat_tuple
                                        [
                                          pattern (lib/location.ml[337,11116+33]..lib/location.ml[337,11116+34])
                                            Tpat_var "b/1250"
                                          pattern (lib/location.ml[337,11116+36]..lib/location.ml[337,11116+37])
                                            Tpat_var "y/1251"
                                        ]
                                    ]
                              ]
                              Tfunction_body
                                expression (lib/location.ml[338,11159+6]..lib/location.ml[340,11264+15])
                                  Texp_ifthenelse
                                  expression (lib/location.ml[338,11159+9]..lib/location.ml[338,11159+32])
                                    Texp_apply
                                    expression (lib/location.ml[338,11159+20]..lib/location.ml[338,11159+22])
                                      Texp_ident "Stdlib!.&&"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[338,11159+9]..lib/location.ml[338,11159+19])
                                          Texp_apply
                                          expression (lib/location.ml[338,11159+15]..lib/location.ml[338,11159+17])
                                            Texp_ident "Stdlib!.<="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[338,11159+9]..lib/location.ml[338,11159+14])
                                                Texp_ident "start/1246"
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[338,11159+18]..lib/location.ml[338,11159+19])
                                                Texp_ident "x/1249"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[338,11159+23]..lib/location.ml[338,11159+32])
                                          Texp_apply
                                          expression (lib/location.ml[338,11159+25]..lib/location.ml[338,11159+27])
                                            Texp_ident "Stdlib!.<="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[338,11159+23]..lib/location.ml[338,11159+24])
                                                Texp_ident "x/1249"
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[338,11159+28]..lib/location.ml[338,11159+32])
                                                Texp_ident "end_/1247"
                                          ]
                                    ]
                                  expression (lib/location.ml[338,11159+38]..lib/location.ml[338,11159+49])
                                    Texp_construct "Some"
                                    [
                                      expression (lib/location.ml[338,11159+43]..lib/location.ml[338,11159+49])
                                        Texp_tuple
                                        [
                                          expression (lib/location.ml[338,11159+44]..lib/location.ml[338,11159+45])
                                            Texp_ident "a/1248"
                                          expression (lib/location.ml[338,11159+47]..lib/location.ml[338,11159+48])
                                            Texp_ident "x/1249"
                                        ]
                                    ]
                                  Some
                                    expression (lib/location.ml[339,11209+11]..lib/location.ml[340,11264+15])
                                      Texp_ifthenelse
                                      expression (lib/location.ml[339,11209+14]..lib/location.ml[339,11209+37])
                                        Texp_apply
                                        expression (lib/location.ml[339,11209+25]..lib/location.ml[339,11209+27])
                                          Texp_ident "Stdlib!.&&"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[339,11209+14]..lib/location.ml[339,11209+24])
                                              Texp_apply
                                              expression (lib/location.ml[339,11209+20]..lib/location.ml[339,11209+22])
                                                Texp_ident "Stdlib!.<="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[339,11209+14]..lib/location.ml[339,11209+19])
                                                    Texp_ident "start/1246"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[339,11209+23]..lib/location.ml[339,11209+24])
                                                    Texp_ident "y/1251"
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[339,11209+28]..lib/location.ml[339,11209+37])
                                              Texp_apply
                                              expression (lib/location.ml[339,11209+30]..lib/location.ml[339,11209+32])
                                                Texp_ident "Stdlib!.<="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[339,11209+28]..lib/location.ml[339,11209+29])
                                                    Texp_ident "y/1251"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[339,11209+33]..lib/location.ml[339,11209+37])
                                                    Texp_ident "end_/1247"
                                              ]
                                        ]
                                      expression (lib/location.ml[339,11209+43]..lib/location.ml[339,11209+54])
                                        Texp_construct "Some"
                                        [
                                          expression (lib/location.ml[339,11209+48]..lib/location.ml[339,11209+54])
                                            Texp_tuple
                                            [
                                              expression (lib/location.ml[339,11209+49]..lib/location.ml[339,11209+50])
                                                Texp_ident "b/1250"
                                              expression (lib/location.ml[339,11209+52]..lib/location.ml[339,11209+53])
                                                Texp_ident "y/1251"
                                            ]
                                        ]
                                      Some
                                        expression (lib/location.ml[340,11264+11]..lib/location.ml[340,11264+15])
                                          Texp_construct "None"
                                          []
                          <arg>
                            Nolabel
                            expression (lib/location.ml[341,11280+6]..lib/location.ml[341,11280+10])
                              Texp_ident "iset/1245"
                        ]
              ]
            structure_item (lib/location.ml[343,11292+2]..lib/location.ml[346,11396+10])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/location.ml[343,11292+6]..lib/location.ml[343,11292+14])
                    Tpat_var "is_start/1254"
                  expression (lib/location.ml[343,11292+15]..lib/location.ml[346,11396+10]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[343,11292+15]..lib/location.ml[343,11292+19])
                          Tpat_var "iset/1256"
                      Labelled "pos"
                      Param_pat
                        pattern (lib/location.ml[343,11292+21]..lib/location.ml[343,11292+24])
                          Tpat_var "pos/1257"
                    ]
                    Tfunction_body
                      expression (lib/location.ml[344,11319+4]..lib/location.ml[346,11396+10])
                        Texp_apply
                        expression (lib/location.ml[344,11319+4]..lib/location.ml[344,11319+17])
                          Texp_ident "Stdlib!.List.find_map"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[344,11319+18]..lib/location.ml[346,11396+5])
                              Texp_function
                              [
                                Nolabel
                                Param_pat
                                  pattern (lib/location.ml[344,11319+23]..lib/location.ml[344,11319+34])
                                    Tpat_tuple
                                    [
                                      pattern (lib/location.ml[344,11319+24]..lib/location.ml[344,11319+30])
                                        Tpat_tuple
                                        [
                                          pattern (lib/location.ml[344,11319+25]..lib/location.ml[344,11319+26])
                                            Tpat_var "a/1258"
                                          pattern (lib/location.ml[344,11319+28]..lib/location.ml[344,11319+29])
                                            Tpat_var "x/1259"
                                        ]
                                      pattern (lib/location.ml[344,11319+32]..lib/location.ml[344,11319+33])
                                        Tpat_any
                                    ]
                              ]
                              Tfunction_body
                                expression (lib/location.ml[345,11357+6]..lib/location.ml[345,11357+38])
                                  Texp_ifthenelse
                                  expression (lib/location.ml[345,11357+9]..lib/location.ml[345,11357+16])
                                    Texp_apply
                                    expression (lib/location.ml[345,11357+13]..lib/location.ml[345,11357+14])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[345,11357+9]..lib/location.ml[345,11357+12])
                                          Texp_ident "pos/1257"
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[345,11357+15]..lib/location.ml[345,11357+16])
                                          Texp_ident "x/1259"
                                    ]
                                  expression (lib/location.ml[345,11357+22]..lib/location.ml[345,11357+28])
                                    Texp_construct "Some"
                                    [
                                      expression (lib/location.ml[345,11357+27]..lib/location.ml[345,11357+28])
                                        Texp_ident "a/1258"
                                    ]
                                  Some
                                    expression (lib/location.ml[345,11357+34]..lib/location.ml[345,11357+38])
                                      Texp_construct "None"
                                      []
                          <arg>
                            Nolabel
                            expression (lib/location.ml[346,11396+6]..lib/location.ml[346,11396+10])
                              Texp_ident "iset/1256"
                        ]
              ]
            structure_item (lib/location.ml[348,11408+2]..lib/location.ml[351,11510+10])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/location.ml[348,11408+6]..lib/location.ml[348,11408+12])
                    Tpat_var "is_end/1261"
                  expression (lib/location.ml[348,11408+13]..lib/location.ml[351,11510+10]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[348,11408+13]..lib/location.ml[348,11408+17])
                          Tpat_var "iset/1263"
                      Labelled "pos"
                      Param_pat
                        pattern (lib/location.ml[348,11408+19]..lib/location.ml[348,11408+22])
                          Tpat_var "pos/1264"
                    ]
                    Tfunction_body
                      expression (lib/location.ml[349,11433+4]..lib/location.ml[351,11510+10])
                        Texp_apply
                        expression (lib/location.ml[349,11433+4]..lib/location.ml[349,11433+17])
                          Texp_ident "Stdlib!.List.find_map"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[349,11433+18]..lib/location.ml[351,11510+5])
                              Texp_function
                              [
                                Nolabel
                                Param_pat
                                  pattern (lib/location.ml[349,11433+23]..lib/location.ml[349,11433+34])
                                    Tpat_tuple
                                    [
                                      pattern (lib/location.ml[349,11433+24]..lib/location.ml[349,11433+25])
                                        Tpat_any
                                      pattern (lib/location.ml[349,11433+27]..lib/location.ml[349,11433+33])
                                        Tpat_tuple
                                        [
                                          pattern (lib/location.ml[349,11433+28]..lib/location.ml[349,11433+29])
                                            Tpat_var "b/1265"
                                          pattern (lib/location.ml[349,11433+31]..lib/location.ml[349,11433+32])
                                            Tpat_var "y/1266"
                                        ]
                                    ]
                              ]
                              Tfunction_body
                                expression (lib/location.ml[350,11471+6]..lib/location.ml[350,11471+38])
                                  Texp_ifthenelse
                                  expression (lib/location.ml[350,11471+9]..lib/location.ml[350,11471+16])
                                    Texp_apply
                                    expression (lib/location.ml[350,11471+13]..lib/location.ml[350,11471+14])
                                      Texp_ident "Stdlib!.="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[350,11471+9]..lib/location.ml[350,11471+12])
                                          Texp_ident "pos/1264"
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[350,11471+15]..lib/location.ml[350,11471+16])
                                          Texp_ident "y/1266"
                                    ]
                                  expression (lib/location.ml[350,11471+22]..lib/location.ml[350,11471+28])
                                    Texp_construct "Some"
                                    [
                                      expression (lib/location.ml[350,11471+27]..lib/location.ml[350,11471+28])
                                        Texp_ident "b/1265"
                                    ]
                                  Some
                                    expression (lib/location.ml[350,11471+34]..lib/location.ml[350,11471+38])
                                      Texp_construct "None"
                                      []
                          <arg>
                            Nolabel
                            expression (lib/location.ml[351,11510+6]..lib/location.ml[351,11510+10])
                              Texp_ident "iset/1263"
                        ]
              ]
            structure_item (lib/location.ml[353,11522+2]..lib/location.ml[355,11570+65])
              Tstr_value Nonrec
              [
                <def>
                  pattern (lib/location.ml[353,11522+6]..lib/location.ml[353,11522+13])
                    Tpat_var "extrema/1268"
                  expression (lib/location.ml[353,11522+14]..lib/location.ml[355,11570+65]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[353,11522+14]..lib/location.ml[353,11522+18])
                          Tpat_var "iset/1270"
                    ]
                    Tfunction_body
                      expression (lib/location.ml[354,11543+4]..lib/location.ml[355,11570+65])
                        Texp_ifthenelse
                        expression (lib/location.ml[354,11543+7]..lib/location.ml[354,11543+16])
                          Texp_apply
                          expression (lib/location.ml[354,11543+12]..lib/location.ml[354,11543+13])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[354,11543+7]..lib/location.ml[354,11543+11])
                                Texp_ident "iset/1270"
                            <arg>
                              Nolabel
                              expression (lib/location.ml[354,11543+14]..lib/location.ml[354,11543+16])
                                Texp_construct "[]"
                                []
                          ]
                        expression (lib/location.ml[354,11543+22]..lib/location.ml[354,11543+26])
                          Texp_construct "None"
                          []
                        Some
                          expression (lib/location.ml[355,11570+9]..lib/location.ml[355,11570+65])
                            Texp_construct "Some"
                            [
                              expression (lib/location.ml[355,11570+14]..lib/location.ml[355,11570+65])
                                Texp_tuple
                                [
                                  expression (lib/location.ml[355,11570+15]..lib/location.ml[355,11570+33])
                                    Texp_apply
                                    expression (lib/location.ml[355,11570+15]..lib/location.ml[355,11570+18])
                                      Texp_ident "Stdlib!.fst"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[355,11570+19]..lib/location.ml[355,11570+33])
                                          Texp_apply
                                          expression (lib/location.ml[355,11570+20]..lib/location.ml[355,11570+27])
                                            Texp_ident "Stdlib!.List.hd"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[355,11570+28]..lib/location.ml[355,11570+32])
                                                Texp_ident "iset/1270"
                                          ]
                                    ]
                                  expression (lib/location.ml[355,11570+35]..lib/location.ml[355,11570+64])
                                    Texp_apply
                                    expression (lib/location.ml[355,11570+35]..lib/location.ml[355,11570+38])
                                      Texp_ident "Stdlib!.snd"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[355,11570+39]..lib/location.ml[355,11570+64])
                                          Texp_apply
                                          expression (lib/location.ml[355,11570+40]..lib/location.ml[355,11570+47])
                                            Texp_ident "Stdlib!.List.hd"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[355,11570+48]..lib/location.ml[355,11570+63])
                                                Texp_apply
                                                expression (lib/location.ml[355,11570+49]..lib/location.ml[355,11570+57])
                                                  Texp_ident "Stdlib!.List.rev"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[355,11570+58]..lib/location.ml[355,11570+62])
                                                      Texp_ident "iset/1270"
                                                ]
                                          ]
                                    ]
                                ]
                            ]
              ]
          ]
        module_type (lib/location.ml[288,9583+14]..lib/location.ml[301,9973+3])
          Tmty_signature
          [
            signature_item (lib/location.ml[289,9601+2]..lib/location.ml[289,9601+26])
              Tsig_type Rec
              [
                type_declaration bound/1271 (lib/location.ml[289,9601+2]..lib/location.ml[289,9601+26])
                  ptype_params =
                    [
                      core_type (lib/location.ml[289,9601+7]..lib/location.ml[289,9601+9])
                        Ttyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (lib/location.ml[289,9601+18]..lib/location.ml[289,9601+26])
                        Ttyp_tuple
                        [
                          core_type (lib/location.ml[289,9601+18]..lib/location.ml[289,9601+20])
                            Ttyp_var a
                          core_type (lib/location.ml[289,9601+23]..lib/location.ml[289,9601+26])
                            Ttyp_constr "int/1!"
                            []
                        ]
              ]
            signature_item (lib/location.ml[290,9628+2]..lib/location.ml[290,9628+11])
              Tsig_type Rec
              [
                type_declaration t/1272 (lib/location.ml[290,9628+2]..lib/location.ml[290,9628+11])
                  ptype_params =
                    [
                      core_type (lib/location.ml[290,9628+7]..lib/location.ml[290,9628+9])
                        Ttyp_var a
                    ]
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ttype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            signature_item (lib/location.ml[292,9668+2]..lib/location.ml[292,9668+55])
              Tsig_value
              value_description of_intervals/1273 (lib/location.ml[292,9668+2]..lib/location.ml[292,9668+55])
                core_type (lib/location.ml[292,9668+21]..lib/location.ml[292,9668+55])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/location.ml[292,9668+21]..lib/location.ml[292,9668+47])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/location.ml[292,9668+22]..lib/location.ml[292,9668+41])
                        Ttyp_tuple
                        [
                          core_type (lib/location.ml[292,9668+22]..lib/location.ml[292,9668+30])
                            Ttyp_constr "bound/1271"
                            [
                              core_type (lib/location.ml[292,9668+22]..lib/location.ml[292,9668+24])
                                Ttyp_var a
                            ]
                          core_type (lib/location.ml[292,9668+33]..lib/location.ml[292,9668+41])
                            Ttyp_constr "bound/1271"
                            [
                              core_type (lib/location.ml[292,9668+33]..lib/location.ml[292,9668+35])
                                Ttyp_var a
                            ]
                        ]
                    ]
                  core_type (lib/location.ml[292,9668+51]..lib/location.ml[292,9668+55])
                    Ttyp_constr "t/1272"
                    [
                      core_type (lib/location.ml[292,9668+51]..lib/location.ml[292,9668+53])
                        Ttyp_var a
                    ]
                []
            signature_item (lib/location.ml[294,9725+2]..lib/location.ml[294,9725+35])
              Tsig_value
              value_description mem/1274 (lib/location.ml[294,9725+2]..lib/location.ml[294,9725+35])
                core_type (lib/location.ml[294,9725+12]..lib/location.ml[294,9725+35])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/location.ml[294,9725+12]..lib/location.ml[294,9725+16])
                    Ttyp_constr "t/1272"
                    [
                      core_type (lib/location.ml[294,9725+12]..lib/location.ml[294,9725+14])
                        Ttyp_var a
                    ]
                  core_type (lib/location.ml[294,9725+20]..lib/location.ml[294,9725+35])
                    Ttyp_arrow
                    Labelled "pos"
                    core_type (lib/location.ml[294,9725+24]..lib/location.ml[294,9725+27])
                      Ttyp_constr "int/1!"
                      []
                    core_type (lib/location.ml[294,9725+31]..lib/location.ml[294,9725+35])
                      Ttyp_constr "bool/5!"
                      []
                []
            signature_item (lib/location.ml[295,9761+2]..lib/location.ml[295,9761+66])
              Tsig_value
              value_description find_bound_in/1275 (lib/location.ml[295,9761+2]..lib/location.ml[295,9761+66])
                core_type (lib/location.ml[295,9761+22]..lib/location.ml[295,9761+66])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/location.ml[295,9761+22]..lib/location.ml[295,9761+26])
                    Ttyp_constr "t/1272"
                    [
                      core_type (lib/location.ml[295,9761+22]..lib/location.ml[295,9761+24])
                        Ttyp_var a
                    ]
                  core_type (lib/location.ml[295,9761+30]..lib/location.ml[295,9761+66])
                    Ttyp_arrow
                    Labelled "range"
                    core_type (lib/location.ml[295,9761+37]..lib/location.ml[295,9761+46])
                      Ttyp_tuple
                      [
                        core_type (lib/location.ml[295,9761+37]..lib/location.ml[295,9761+40])
                          Ttyp_constr "int/1!"
                          []
                        core_type (lib/location.ml[295,9761+43]..lib/location.ml[295,9761+46])
                          Ttyp_constr "int/1!"
                          []
                      ]
                    core_type (lib/location.ml[295,9761+51]..lib/location.ml[295,9761+66])
                      Ttyp_constr "option/10!"
                      [
                        core_type (lib/location.ml[295,9761+51]..lib/location.ml[295,9761+59])
                          Ttyp_constr "bound/1271"
                          [
                            core_type (lib/location.ml[295,9761+51]..lib/location.ml[295,9761+53])
                              Ttyp_var a
                          ]
                      ]
                []
            signature_item (lib/location.ml[297,9829+2]..lib/location.ml[297,9829+45])
              Tsig_value
              value_description is_start/1276 (lib/location.ml[297,9829+2]..lib/location.ml[297,9829+45])
                core_type (lib/location.ml[297,9829+17]..lib/location.ml[297,9829+45])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/location.ml[297,9829+17]..lib/location.ml[297,9829+21])
                    Ttyp_constr "t/1272"
                    [
                      core_type (lib/location.ml[297,9829+17]..lib/location.ml[297,9829+19])
                        Ttyp_var a
                    ]
                  core_type (lib/location.ml[297,9829+25]..lib/location.ml[297,9829+45])
                    Ttyp_arrow
                    Labelled "pos"
                    core_type (lib/location.ml[297,9829+29]..lib/location.ml[297,9829+32])
                      Ttyp_constr "int/1!"
                      []
                    core_type (lib/location.ml[297,9829+36]..lib/location.ml[297,9829+45])
                      Ttyp_constr "option/10!"
                      [
                        core_type (lib/location.ml[297,9829+36]..lib/location.ml[297,9829+38])
                          Ttyp_var a
                      ]
                []
            signature_item (lib/location.ml[298,9875+2]..lib/location.ml[298,9875+43])
              Tsig_value
              value_description is_end/1277 (lib/location.ml[298,9875+2]..lib/location.ml[298,9875+43])
                core_type (lib/location.ml[298,9875+15]..lib/location.ml[298,9875+43])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/location.ml[298,9875+15]..lib/location.ml[298,9875+19])
                    Ttyp_constr "t/1272"
                    [
                      core_type (lib/location.ml[298,9875+15]..lib/location.ml[298,9875+17])
                        Ttyp_var a
                    ]
                  core_type (lib/location.ml[298,9875+23]..lib/location.ml[298,9875+43])
                    Ttyp_arrow
                    Labelled "pos"
                    core_type (lib/location.ml[298,9875+27]..lib/location.ml[298,9875+30])
                      Ttyp_constr "int/1!"
                      []
                    core_type (lib/location.ml[298,9875+34]..lib/location.ml[298,9875+43])
                      Ttyp_constr "option/10!"
                      [
                        core_type (lib/location.ml[298,9875+34]..lib/location.ml[298,9875+36])
                          Ttyp_var a
                      ]
                []
            signature_item (lib/location.ml[300,9920+2]..lib/location.ml[300,9920+52])
              Tsig_value
              value_description extrema/1278 (lib/location.ml[300,9920+2]..lib/location.ml[300,9920+52])
                core_type (lib/location.ml[300,9920+16]..lib/location.ml[300,9920+52])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/location.ml[300,9920+16]..lib/location.ml[300,9920+20])
                    Ttyp_constr "t/1272"
                    [
                      core_type (lib/location.ml[300,9920+16]..lib/location.ml[300,9920+18])
                        Ttyp_var a
                    ]
                  core_type (lib/location.ml[300,9920+24]..lib/location.ml[300,9920+52])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/location.ml[300,9920+25]..lib/location.ml[300,9920+44])
                        Ttyp_tuple
                        [
                          core_type (lib/location.ml[300,9920+25]..lib/location.ml[300,9920+33])
                            Ttyp_constr "bound/1271"
                            [
                              core_type (lib/location.ml[300,9920+25]..lib/location.ml[300,9920+27])
                                Ttyp_var a
                            ]
                          core_type (lib/location.ml[300,9920+36]..lib/location.ml[300,9920+44])
                            Ttyp_constr "bound/1271"
                            [
                              core_type (lib/location.ml[300,9920+36]..lib/location.ml[300,9920+38])
                                Ttyp_var a
                            ]
                        ]
                    ]
                []
          ]
  structure_item (lib/location.ml[365,11875+0]..lib/location.ml[397,13244+14])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[365,11875+4]..lib/location.ml[365,11875+22])
          Tpat_var "highlight_terminfo/1280"
        expression (lib/location.ml[365,11875+23]..lib/location.ml[397,13244+14]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[365,11875+23]..lib/location.ml[365,11875+25])
                Tpat_var "lb/1282"
            Nolabel
            Param_pat
              pattern (lib/location.ml[365,11875+26]..lib/location.ml[365,11875+29])
                Tpat_var "ppf/1283"
            Nolabel
            Param_pat
              pattern (lib/location.ml[365,11875+30]..lib/location.ml[365,11875+34])
                Tpat_var "locs/1284"
          ]
          Tfunction_body
            expression (lib/location.ml[366,11912+2]..lib/location.ml[397,13244+14])
              Texp_sequence
              expression (lib/location.ml[366,11912+2]..lib/location.ml[366,11912+30])
                Texp_apply
                expression (lib/location.ml[366,11912+2]..lib/location.ml[366,11912+23])
                  Texp_ident "Stdlib!.Format.pp_print_flush"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[366,11912+24]..lib/location.ml[366,11912+27])
                      Texp_ident "ppf/1283"
                  <arg>
                    Nolabel
                    expression (lib/location.ml[366,11912+28]..lib/location.ml[366,11912+30])
                      Texp_construct "()"
                      []
                ]
              expression (lib/location.ml[368,12051+2]..lib/location.ml[397,13244+14])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[368,12051+6]..lib/location.ml[368,12051+10])
                      Tpat_var "pos0/1285"
                    expression (lib/location.ml[368,12051+13]..lib/location.ml[368,12051+28])
                      Texp_apply
                      expression (lib/location.ml[368,12051+13]..lib/location.ml[368,12051+14])
                        Texp_ident "Stdlib!.~-"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[368,12051+14]..lib/location.ml[368,12051+28])
                            Texp_field
                            expression (lib/location.ml[368,12051+14]..lib/location.ml[368,12051+16])
                              Texp_ident "lb/1282"
                            "lex_abs_pos"
                      ]
                ]
                expression (lib/location.ml[370,12151+2]..lib/location.ml[397,13244+14])
                  Texp_sequence
                  expression (lib/location.ml[370,12151+2]..lib/location.ml[370,12151+29])
                    Texp_ifthenelse
                    expression (lib/location.ml[370,12151+5]..lib/location.ml[370,12151+13])
                      Texp_apply
                      expression (lib/location.ml[370,12151+10]..lib/location.ml[370,12151+11])
                        Texp_ident "Stdlib!.<"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[370,12151+5]..lib/location.ml[370,12151+9])
                            Texp_ident "pos0/1285"
                        <arg>
                          Nolabel
                          expression (lib/location.ml[370,12151+12]..lib/location.ml[370,12151+13])
                            Texp_constant Const_int 0
                      ]
                    expression (lib/location.ml[370,12151+19]..lib/location.ml[370,12151+29])
                      Texp_apply
                      expression (lib/location.ml[370,12151+19]..lib/location.ml[370,12151+24])
                        Texp_ident "Stdlib!.raise"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[370,12151+25]..lib/location.ml[370,12151+29])
                            Texp_construct "Exit"
                            []
                      ]
                    None
                  expression (lib/location.ml[372,12222+2]..lib/location.ml[397,13244+14])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/location.ml[372,12222+6]..lib/location.ml[372,12222+11])
                          Tpat_var "lines/1286"
                        expression (lib/location.ml[372,12222+14]..lib/location.ml[372,12222+32])
                          Texp_apply
                          expression (lib/location.ml[372,12222+14]..lib/location.ml[372,12222+17])
                            Texp_ident "Stdlib!.ref"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[372,12222+18]..lib/location.ml[372,12222+32])
                                Texp_apply
                                expression (lib/location.ml[372,12222+18]..lib/location.ml[372,12222+19])
                                  Texp_ident "Stdlib!.!"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[372,12222+19]..lib/location.ml[372,12222+32])
                                      Texp_ident "num_loc_lines/558"
                                ]
                          ]
                    ]
                    expression (lib/location.ml[373,12258+2]..lib/location.ml[397,13244+14])
                      Texp_sequence
                      expression (lib/location.ml[373,12258+2]..lib/location.ml[375,12357+6])
                        Texp_for "i/1287" Up
                        expression (lib/location.ml[373,12258+10]..lib/location.ml[373,12258+14])
                          Texp_ident "pos0/1285"
                        expression (lib/location.ml[373,12258+18]..lib/location.ml[373,12258+39])
                          Texp_apply
                          expression (lib/location.ml[373,12258+36]..lib/location.ml[373,12258+37])
                            Texp_ident "Stdlib!.-"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[373,12258+18]..lib/location.ml[373,12258+35])
                                Texp_field
                                expression (lib/location.ml[373,12258+18]..lib/location.ml[373,12258+20])
                                  Texp_ident "lb/1282"
                                "lex_buffer_len"
                            <arg>
                              Nolabel
                              expression (lib/location.ml[373,12258+38]..lib/location.ml[373,12258+39])
                                Texp_constant Const_int 1
                          ]
                        expression (lib/location.ml[374,12301+4]..lib/location.ml[374,12301+55])
                          Texp_ifthenelse
                          expression (lib/location.ml[374,12301+7]..lib/location.ml[374,12301+39])
                            Texp_apply
                            expression (lib/location.ml[374,12301+33]..lib/location.ml[374,12301+34])
                              Texp_ident "Stdlib!.="
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[374,12301+7]..lib/location.ml[374,12301+32])
                                  Texp_apply
                                  expression (lib/location.ml[374,12301+7]..lib/location.ml[374,12301+16])
                                    Texp_ident "Stdlib!.Bytes.get"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[374,12301+17]..lib/location.ml[374,12301+30])
                                        Texp_field
                                        expression (lib/location.ml[374,12301+17]..lib/location.ml[374,12301+19])
                                          Texp_ident "lb/1282"
                                        "lex_buffer"
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[374,12301+31]..lib/location.ml[374,12301+32])
                                        Texp_ident "i/1287"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/location.ml[374,12301+35]..lib/location.ml[374,12301+39])
                                  Texp_constant Const_char 0a
                            ]
                          expression (lib/location.ml[374,12301+45]..lib/location.ml[374,12301+55])
                            Texp_apply
                            expression (lib/location.ml[374,12301+45]..lib/location.ml[374,12301+49])
                              Texp_ident "Stdlib!.incr"
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[374,12301+50]..lib/location.ml[374,12301+55])
                                  Texp_ident "lines/1286"
                            ]
                          None
                      expression (lib/location.ml[377,12400+2]..lib/location.ml[397,13244+14])
                        Texp_sequence
                        expression (lib/location.ml[377,12400+2]..lib/location.ml[377,12400+60])
                          Texp_ifthenelse
                          expression (lib/location.ml[377,12400+5]..lib/location.ml[377,12400+44])
                            Texp_apply
                            expression (lib/location.ml[377,12400+12]..lib/location.ml[377,12400+14])
                              Texp_ident "Stdlib!.>="
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[377,12400+5]..lib/location.ml[377,12400+11])
                                  Texp_apply
                                  expression (lib/location.ml[377,12400+5]..lib/location.ml[377,12400+6])
                                    Texp_ident "Stdlib!.!"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[377,12400+6]..lib/location.ml[377,12400+11])
                                        Texp_ident "lines/1286"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/location.ml[377,12400+15]..lib/location.ml[377,12400+44])
                                  Texp_apply
                                  expression (lib/location.ml[377,12400+41]..lib/location.ml[377,12400+42])
                                    Texp_ident "Stdlib!.-"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[377,12400+15]..lib/location.ml[377,12400+40])
                                        Texp_apply
                                        expression (lib/location.ml[377,12400+15]..lib/location.ml[377,12400+33])
                                          Texp_ident "Ocaml_ocaml_types!.Terminfo.num_lines"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[377,12400+34]..lib/location.ml[377,12400+40])
                                              Texp_ident "Stdlib!.stdout"
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[377,12400+43]..lib/location.ml[377,12400+44])
                                        Texp_constant Const_int 2
                                  ]
                            ]
                          expression (lib/location.ml[377,12400+50]..lib/location.ml[377,12400+60])
                            Texp_apply
                            expression (lib/location.ml[377,12400+50]..lib/location.ml[377,12400+55])
                              Texp_ident "Stdlib!.raise"
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[377,12400+56]..lib/location.ml[377,12400+60])
                                  Texp_construct "Exit"
                                  []
                            ]
                          None
                        expression (lib/location.ml[379,12506+2]..lib/location.ml[397,13244+14])
                          Texp_sequence
                          expression (lib/location.ml[379,12506+2]..lib/location.ml[379,12506+14])
                            Texp_apply
                            expression (lib/location.ml[379,12506+2]..lib/location.ml[379,12506+7])
                              Texp_ident "Stdlib!.flush"
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[379,12506+8]..lib/location.ml[379,12506+14])
                                  Texp_ident "Stdlib!.stdout"
                            ]
                          expression (lib/location.ml[379,12506+16]..lib/location.ml[397,13244+14])
                            Texp_sequence
                            expression (lib/location.ml[379,12506+16]..lib/location.ml[379,12506+45])
                              Texp_apply
                              expression (lib/location.ml[379,12506+16]..lib/location.ml[379,12506+31])
                                Texp_ident "Ocaml_ocaml_types!.Terminfo.backup"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[379,12506+32]..lib/location.ml[379,12506+38])
                                    Texp_ident "Stdlib!.stdout"
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[379,12506+39]..lib/location.ml[379,12506+45])
                                    Texp_apply
                                    expression (lib/location.ml[379,12506+39]..lib/location.ml[379,12506+40])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[379,12506+40]..lib/location.ml[379,12506+45])
                                          Texp_ident "lines/1286"
                                    ]
                              ]
                            expression (lib/location.ml[381,12617+2]..lib/location.ml[397,13244+14])
                              Texp_let Nonrec
                              [
                                <def>
                                  pattern (lib/location.ml[381,12617+6]..lib/location.ml[381,12617+9])
                                    Tpat_var "bol/1385"
                                  expression (lib/location.ml[381,12617+12]..lib/location.ml[381,12617+21])
                                    Texp_apply
                                    expression (lib/location.ml[381,12617+12]..lib/location.ml[381,12617+15])
                                      Texp_ident "Stdlib!.ref"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[381,12617+16]..lib/location.ml[381,12617+21])
                                          Texp_construct "false"
                                          []
                                    ]
                              ]
                              expression (lib/location.ml[382,12642+2]..lib/location.ml[397,13244+14])
                                Texp_sequence
                                expression (lib/location.ml[382,12642+2]..lib/location.ml[382,12642+19])
                                  Texp_apply
                                  expression (lib/location.ml[382,12642+2]..lib/location.ml[382,12642+14])
                                    Texp_ident "Stdlib!.print_string"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[382,12642+15]..lib/location.ml[382,12642+19])
                                        Texp_constant Const_string("# ",(lib/location.ml[382,12642+16]..lib/location.ml[382,12642+18]),None)
                                  ]
                                expression (lib/location.ml[383,12663+2]..lib/location.ml[397,13244+14])
                                  Texp_sequence
                                  expression (lib/location.ml[383,12663+2]..lib/location.ml[392,13071+6])
                                    Texp_for "pos/1386" Up
                                    expression (lib/location.ml[383,12663+12]..lib/location.ml[383,12663+13])
                                      Texp_constant Const_int 0
                                    expression (lib/location.ml[383,12663+17]..lib/location.ml[383,12663+45])
                                      Texp_apply
                                      expression (lib/location.ml[383,12663+42]..lib/location.ml[383,12663+43])
                                        Texp_ident "Stdlib!.-"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[383,12663+17]..lib/location.ml[383,12663+41])
                                            Texp_apply
                                            expression (lib/location.ml[383,12663+35]..lib/location.ml[383,12663+36])
                                              Texp_ident "Stdlib!.-"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[383,12663+17]..lib/location.ml[383,12663+34])
                                                  Texp_field
                                                  expression (lib/location.ml[383,12663+17]..lib/location.ml[383,12663+19])
                                                    Texp_ident "lb/1282"
                                                  "lex_buffer_len"
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[383,12663+37]..lib/location.ml[383,12663+41])
                                                  Texp_ident "pos0/1285"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[383,12663+44]..lib/location.ml[383,12663+45])
                                            Texp_constant Const_int 1
                                      ]
                                    expression (lib/location.ml[384,12712+4]..lib/location.ml[391,13049+21])
                                      Texp_sequence
                                      expression (lib/location.ml[384,12712+4]..lib/location.ml[384,12712+50])
                                        Texp_ifthenelse
                                        expression (lib/location.ml[384,12712+7]..lib/location.ml[384,12712+11])
                                          Texp_apply
                                          expression (lib/location.ml[384,12712+7]..lib/location.ml[384,12712+8])
                                            Texp_ident "Stdlib!.!"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[384,12712+8]..lib/location.ml[384,12712+11])
                                                Texp_ident "bol/1385"
                                          ]
                                        expression (lib/location.ml[384,12712+17]..lib/location.ml[384,12712+50])
                                          Texp_sequence
                                          expression (lib/location.ml[384,12712+18]..lib/location.ml[384,12712+35])
                                            Texp_apply
                                            expression (lib/location.ml[384,12712+18]..lib/location.ml[384,12712+30])
                                              Texp_ident "Stdlib!.print_string"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[384,12712+31]..lib/location.ml[384,12712+35])
                                                  Texp_constant Const_string("  ",(lib/location.ml[384,12712+32]..lib/location.ml[384,12712+34]),None)
                                            ]
                                          expression (lib/location.ml[384,12712+37]..lib/location.ml[384,12712+49])
                                            Texp_apply
                                            expression (lib/location.ml[384,12712+41]..lib/location.ml[384,12712+43])
                                              Texp_ident "Stdlib!.:="
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[384,12712+37]..lib/location.ml[384,12712+40])
                                                  Texp_ident "bol/1385"
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[384,12712+44]..lib/location.ml[384,12712+49])
                                                  Texp_construct "false"
                                                  []
                                            ]
                                        None
                                      expression (lib/location.ml[385,12764+4]..lib/location.ml[391,13049+21])
                                        Texp_sequence
                                        expression (lib/location.ml[385,12764+4]..lib/location.ml[386,12835+35])
                                          Texp_ifthenelse
                                          expression (lib/location.ml[385,12764+7]..lib/location.ml[385,12764+65])
                                            Texp_apply
                                            expression (lib/location.ml[385,12764+7]..lib/location.ml[385,12764+18])
                                              Texp_ident "Stdlib!.List.exists"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[385,12764+19]..lib/location.ml[385,12764+60])
                                                  Texp_function
                                                  [
                                                    Nolabel
                                                    Param_pat
                                                      pattern (lib/location.ml[385,12764+24]..lib/location.ml[385,12764+27])
                                                        Tpat_var "loc/1387"
                                                  ]
                                                  Tfunction_body
                                                    expression (lib/location.ml[385,12764+31]..lib/location.ml[385,12764+59])
                                                      Texp_apply
                                                      expression (lib/location.ml[385,12764+35]..lib/location.ml[385,12764+36])
                                                        Texp_ident "Stdlib!.="
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[385,12764+31]..lib/location.ml[385,12764+34])
                                                            Texp_ident "pos/1386"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[385,12764+37]..lib/location.ml[385,12764+59])
                                                            Texp_field
                                                            expression (lib/location.ml[385,12764+37]..lib/location.ml[385,12764+50])
                                                              Texp_field
                                                              expression (lib/location.ml[385,12764+37]..lib/location.ml[385,12764+40])
                                                                Texp_ident "loc/1387"
                                                              "loc_start"
                                                            "pos_cnum"
                                                      ]
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[385,12764+61]..lib/location.ml[385,12764+65])
                                                  Texp_ident "locs/1284"
                                            ]
                                          expression (lib/location.ml[386,12835+6]..lib/location.ml[386,12835+35])
                                            Texp_apply
                                            expression (lib/location.ml[386,12835+6]..lib/location.ml[386,12835+23])
                                              Texp_ident "Ocaml_ocaml_types!.Terminfo.standout"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[386,12835+24]..lib/location.ml[386,12835+30])
                                                  Texp_ident "Stdlib!.stdout"
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[386,12835+31]..lib/location.ml[386,12835+35])
                                                  Texp_construct "true"
                                                  []
                                            ]
                                          None
                                        expression (lib/location.ml[387,12872+4]..lib/location.ml[391,13049+21])
                                          Texp_sequence
                                          expression (lib/location.ml[387,12872+4]..lib/location.ml[388,12941+36])
                                            Texp_ifthenelse
                                            expression (lib/location.ml[387,12872+7]..lib/location.ml[387,12872+63])
                                              Texp_apply
                                              expression (lib/location.ml[387,12872+7]..lib/location.ml[387,12872+18])
                                                Texp_ident "Stdlib!.List.exists"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[387,12872+19]..lib/location.ml[387,12872+58])
                                                    Texp_function
                                                    [
                                                      Nolabel
                                                      Param_pat
                                                        pattern (lib/location.ml[387,12872+24]..lib/location.ml[387,12872+27])
                                                          Tpat_var "loc/1388"
                                                    ]
                                                    Tfunction_body
                                                      expression (lib/location.ml[387,12872+31]..lib/location.ml[387,12872+57])
                                                        Texp_apply
                                                        expression (lib/location.ml[387,12872+35]..lib/location.ml[387,12872+36])
                                                          Texp_ident "Stdlib!.="
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[387,12872+31]..lib/location.ml[387,12872+34])
                                                              Texp_ident "pos/1386"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[387,12872+37]..lib/location.ml[387,12872+57])
                                                              Texp_field
                                                              expression (lib/location.ml[387,12872+37]..lib/location.ml[387,12872+48])
                                                                Texp_field
                                                                expression (lib/location.ml[387,12872+37]..lib/location.ml[387,12872+40])
                                                                  Texp_ident "loc/1388"
                                                                "loc_end"
                                                              "pos_cnum"
                                                        ]
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[387,12872+59]..lib/location.ml[387,12872+63])
                                                    Texp_ident "locs/1284"
                                              ]
                                            expression (lib/location.ml[388,12941+6]..lib/location.ml[388,12941+36])
                                              Texp_apply
                                              expression (lib/location.ml[388,12941+6]..lib/location.ml[388,12941+23])
                                                Texp_ident "Ocaml_ocaml_types!.Terminfo.standout"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[388,12941+24]..lib/location.ml[388,12941+30])
                                                    Texp_ident "Stdlib!.stdout"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[388,12941+31]..lib/location.ml[388,12941+36])
                                                    Texp_construct "false"
                                                    []
                                              ]
                                            None
                                          expression (lib/location.ml[389,12979+4]..lib/location.ml[391,13049+21])
                                            Texp_let Nonrec
                                            [
                                              <def>
                                                pattern (lib/location.ml[389,12979+8]..lib/location.ml[389,12979+9])
                                                  Tpat_var "c/1389"
                                                expression (lib/location.ml[389,12979+12]..lib/location.ml[389,12979+48])
                                                  Texp_apply
                                                  expression (lib/location.ml[389,12979+12]..lib/location.ml[389,12979+21])
                                                    Texp_ident "Stdlib!.Bytes.get"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[389,12979+22]..lib/location.ml[389,12979+35])
                                                        Texp_field
                                                        expression (lib/location.ml[389,12979+22]..lib/location.ml[389,12979+24])
                                                          Texp_ident "lb/1282"
                                                        "lex_buffer"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[389,12979+36]..lib/location.ml[389,12979+48])
                                                        Texp_apply
                                                        expression (lib/location.ml[389,12979+41]..lib/location.ml[389,12979+42])
                                                          Texp_ident "Stdlib!.+"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[389,12979+37]..lib/location.ml[389,12979+40])
                                                              Texp_ident "pos/1386"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[389,12979+43]..lib/location.ml[389,12979+47])
                                                              Texp_ident "pos0/1285"
                                                        ]
                                                  ]
                                            ]
                                            expression (lib/location.ml[390,13031+4]..lib/location.ml[391,13049+21])
                                              Texp_sequence
                                              expression (lib/location.ml[390,13031+4]..lib/location.ml[390,13031+16])
                                                Texp_apply
                                                expression (lib/location.ml[390,13031+4]..lib/location.ml[390,13031+14])
                                                  Texp_ident "Stdlib!.print_char"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[390,13031+15]..lib/location.ml[390,13031+16])
                                                      Texp_ident "c/1389"
                                                ]
                                              expression (lib/location.ml[391,13049+4]..lib/location.ml[391,13049+21])
                                                Texp_apply
                                                expression (lib/location.ml[391,13049+8]..lib/location.ml[391,13049+10])
                                                  Texp_ident "Stdlib!.:="
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[391,13049+4]..lib/location.ml[391,13049+7])
                                                      Texp_ident "bol/1385"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[391,13049+11]..lib/location.ml[391,13049+21])
                                                      Texp_apply
                                                      expression (lib/location.ml[391,13049+14]..lib/location.ml[391,13049+15])
                                                        Texp_ident "Stdlib!.="
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[391,13049+12]..lib/location.ml[391,13049+13])
                                                            Texp_ident "c/1389"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[391,13049+16]..lib/location.ml[391,13049+20])
                                                            Texp_constant Const_char 0a
                                                      ]
                                                ]
                                  expression (lib/location.ml[394,13119+2]..lib/location.ml[397,13244+14])
                                    Texp_sequence
                                    expression (lib/location.ml[394,13119+2]..lib/location.ml[394,13119+32])
                                      Texp_apply
                                      expression (lib/location.ml[394,13119+2]..lib/location.ml[394,13119+19])
                                        Texp_ident "Ocaml_ocaml_types!.Terminfo.standout"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[394,13119+20]..lib/location.ml[394,13119+26])
                                            Texp_ident "Stdlib!.stdout"
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[394,13119+27]..lib/location.ml[394,13119+32])
                                            Texp_construct "false"
                                            []
                                      ]
                                    expression (lib/location.ml[396,13203+2]..lib/location.ml[397,13244+14])
                                      Texp_sequence
                                      expression (lib/location.ml[396,13203+2]..lib/location.ml[396,13203+39])
                                        Texp_apply
                                        expression (lib/location.ml[396,13203+2]..lib/location.ml[396,13203+17])
                                          Texp_ident "Ocaml_ocaml_types!.Terminfo.resume"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[396,13203+18]..lib/location.ml[396,13203+24])
                                              Texp_ident "Stdlib!.stdout"
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[396,13203+25]..lib/location.ml[396,13203+39])
                                              Texp_apply
                                              expression (lib/location.ml[396,13203+25]..lib/location.ml[396,13203+26])
                                                Texp_ident "Stdlib!.!"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[396,13203+26]..lib/location.ml[396,13203+39])
                                                    Texp_ident "num_loc_lines/558"
                                              ]
                                        ]
                                      expression (lib/location.ml[397,13244+2]..lib/location.ml[397,13244+14])
                                        Texp_apply
                                        expression (lib/location.ml[397,13244+2]..lib/location.ml[397,13244+7])
                                          Texp_ident "Stdlib!.flush"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[397,13244+8]..lib/location.ml[397,13244+14])
                                              Texp_ident "Stdlib!.stdout"
                                        ]
    ]
  structure_item (lib/location.ml[399,13260+0]..lib/location.ml[401,13334+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[399,13260+4]..lib/location.ml[399,13260+22])
          Tpat_var "highlight_terminfo/1390"
        expression (lib/location.ml[399,13260+23]..lib/location.ml[401,13334+17]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[399,13260+23]..lib/location.ml[399,13260+25])
                Tpat_var "lb/1391"
            Nolabel
            Param_pat
              pattern (lib/location.ml[399,13260+26]..lib/location.ml[399,13260+29])
                Tpat_var "ppf/1392"
            Nolabel
            Param_pat
              pattern (lib/location.ml[399,13260+30]..lib/location.ml[399,13260+34])
                Tpat_var "locs/1393"
          ]
          Tfunction_body
            expression (lib/location.ml[400,13297+2]..lib/location.ml[401,13334+17])
              Texp_try
              expression (lib/location.ml[400,13297+6]..lib/location.ml[400,13297+36])
                Texp_apply
                expression (lib/location.ml[400,13297+6]..lib/location.ml[400,13297+24])
                  Texp_ident "highlight_terminfo/1280"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[400,13297+25]..lib/location.ml[400,13297+27])
                      Texp_ident "lb/1391"
                  <arg>
                    Nolabel
                    expression (lib/location.ml[400,13297+28]..lib/location.ml[400,13297+31])
                      Texp_ident "ppf/1392"
                  <arg>
                    Nolabel
                    expression (lib/location.ml[400,13297+32]..lib/location.ml[400,13297+36])
                      Texp_ident "locs/1393"
                ]
              [
                <case>
                  pattern (lib/location.ml[401,13334+7]..lib/location.ml[401,13334+11])
                    Tpat_construct "Exit"
                    []
                    None
                  expression (lib/location.ml[401,13334+15]..lib/location.ml[401,13334+17])
                    Texp_construct "()"
                    []
              ]
    ]
  structure_item (lib/location.ml[434,14001+0]..lib/location.ml[437,14057+1])
    Tstr_type Rec
    [
      type_declaration input_line/1394 (lib/location.ml[434,14001+0]..lib/location.ml[437,14057+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/location.ml[435,14021+2]..lib/location.ml[435,14021+16])
                Immutable
                text/1395                core_type (lib/location.ml[435,14021+9]..lib/location.ml[435,14021+15])
                  Ttyp_poly
                  core_type (lib/location.ml[435,14021+9]..lib/location.ml[435,14021+15])
                    Ttyp_constr "string/15!"
                    []
              (lib/location.ml[436,14038+2]..lib/location.ml[436,14038+18])
                Immutable
                start_pos/1396                core_type (lib/location.ml[436,14038+14]..lib/location.ml[436,14038+17])
                  Ttyp_poly
                  core_type (lib/location.ml[436,14038+14]..lib/location.ml[436,14038+17])
                    Ttyp_constr "int/1!"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/location.ml[446,14351+0]..lib/location.ml[462,14906+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[446,14351+4]..lib/location.ml[446,14351+22])
          Tpat_var "infer_line_numbers/1397"
        expression (lib/location.ml[447,14374+4]..lib/location.ml[462,14906+11]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[447,14374+5]..lib/location.ml[447,14374+10])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[447,14374+12]..lib/location.ml[447,14374+42])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/location.ml[447,14374+13]..lib/location.ml[447,14374+36])
                        Ttyp_tuple
                        [
                          core_type (lib/location.ml[447,14374+13]..lib/location.ml[447,14374+23])
                            Ttyp_constr "option/10!"
                            [
                              core_type (lib/location.ml[447,14374+13]..lib/location.ml[447,14374+16])
                                Ttyp_constr "int/1!"
                                []
                            ]
                          core_type (lib/location.ml[447,14374+26]..lib/location.ml[447,14374+36])
                            Ttyp_constr "input_line/1394"
                            []
                        ]
                    ]
                Tpat_alias "lines/1399"
                pattern (lib/location.ml[447,14374+5]..lib/location.ml[447,14374+10])
                  Tpat_any
          ]
          Tfunction_body
            expression (lib/location.ml[450,14456+2]..lib/location.ml[462,14906+11])
              extra
                Texp_constraint
                core_type (lib/location.ml[448,14419+2]..lib/location.ml[448,14419+32])
                  Ttyp_constr "list/9!"
                  [
                    core_type (lib/location.ml[448,14419+3]..lib/location.ml[448,14419+26])
                      Ttyp_tuple
                      [
                        core_type (lib/location.ml[448,14419+3]..lib/location.ml[448,14419+13])
                          Ttyp_constr "option/10!"
                          [
                            core_type (lib/location.ml[448,14419+3]..lib/location.ml[448,14419+6])
                              Ttyp_constr "int/1!"
                              []
                          ]
                        core_type (lib/location.ml[448,14419+16]..lib/location.ml[448,14419+26])
                          Ttyp_constr "input_line/1394"
                          []
                      ]
                  ]
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/location.ml[450,14456+6]..lib/location.ml[450,14456+29])
                    Tpat_tuple
                    [
                      pattern (lib/location.ml[450,14456+7]..lib/location.ml[450,14456+8])
                        Tpat_any
                      pattern (lib/location.ml[450,14456+10]..lib/location.ml[450,14456+16])
                        Tpat_var "offset/1400"
                      pattern (lib/location.ml[450,14456+18]..lib/location.ml[450,14456+28])
                        Tpat_var "consistent/1401"
                    ]
                  expression (lib/location.ml[451,14488+4]..lib/location.ml[456,14745+27])
                    Texp_apply
                    expression (lib/location.ml[451,14488+4]..lib/location.ml[451,14488+18])
                      Texp_ident "Stdlib!.List.fold_left"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[451,14488+19]..lib/location.ml[456,14745+5])
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/location.ml[451,14488+24]..lib/location.ml[451,14488+47])
                                Tpat_tuple
                                [
                                  pattern (lib/location.ml[451,14488+25]..lib/location.ml[451,14488+26])
                                    Tpat_var "i/1402"
                                  pattern (lib/location.ml[451,14488+28]..lib/location.ml[451,14488+34])
                                    Tpat_var "offset/1403"
                                  pattern (lib/location.ml[451,14488+36]..lib/location.ml[451,14488+46])
                                    Tpat_var "consistent/1404"
                                ]
                            Nolabel
                            Param_pat
                              pattern (lib/location.ml[451,14488+48]..lib/location.ml[451,14488+57])
                                Tpat_tuple
                                [
                                  pattern (lib/location.ml[451,14488+49]..lib/location.ml[451,14488+53])
                                    Tpat_var "lnum/1405"
                                  pattern (lib/location.ml[451,14488+55]..lib/location.ml[451,14488+56])
                                    Tpat_any
                                ]
                          ]
                          Tfunction_body
                            expression (lib/location.ml[452,14549+6]..lib/location.ml[455,14680+64])
                              Texp_match
                              expression (lib/location.ml[452,14549+12]..lib/location.ml[452,14549+24])
                                Texp_tuple
                                [
                                  expression (lib/location.ml[452,14549+12]..lib/location.ml[452,14549+16])
                                    Texp_ident "lnum/1405"
                                  expression (lib/location.ml[452,14549+18]..lib/location.ml[452,14549+24])
                                    Texp_ident "offset/1403"
                                ]
                              [
                                <case>
                                  pattern (lib/location.ml[453,14579+8]..lib/location.ml[453,14579+15])
                                    Tpat_value
                                    pattern (lib/location.ml[453,14579+8]..lib/location.ml[453,14579+15])
                                      Tpat_tuple
                                      [
                                        pattern (lib/location.ml[453,14579+8]..lib/location.ml[453,14579+12])
                                          Tpat_construct "None"
                                          []
                                          None
                                        pattern (lib/location.ml[453,14579+14]..lib/location.ml[453,14579+15])
                                          Tpat_any
                                      ]
                                  expression (lib/location.ml[453,14579+19]..lib/location.ml[453,14579+44])
                                    Texp_tuple
                                    [
                                      expression (lib/location.ml[453,14579+20]..lib/location.ml[453,14579+23])
                                        Texp_apply
                                        expression (lib/location.ml[453,14579+21]..lib/location.ml[453,14579+22])
                                          Texp_ident "Stdlib!.+"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[453,14579+20]..lib/location.ml[453,14579+21])
                                              Texp_ident "i/1402"
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[453,14579+22]..lib/location.ml[453,14579+23])
                                              Texp_constant Const_int 1
                                        ]
                                      expression (lib/location.ml[453,14579+25]..lib/location.ml[453,14579+31])
                                        Texp_ident "offset/1403"
                                      expression (lib/location.ml[453,14579+33]..lib/location.ml[453,14579+43])
                                        Texp_ident "consistent/1404"
                                    ]
                                <case>
                                  pattern (lib/location.ml[454,14624+8]..lib/location.ml[454,14624+20])
                                    Tpat_value
                                    pattern (lib/location.ml[454,14624+8]..lib/location.ml[454,14624+20])
                                      Tpat_tuple
                                      [
                                        pattern (lib/location.ml[454,14624+8]..lib/location.ml[454,14624+14])
                                          Tpat_construct "Some"
                                          [
                                            pattern (lib/location.ml[454,14624+13]..lib/location.ml[454,14624+14])
                                              Tpat_var "n/1406"
                                          ]
                                          None
                                        pattern (lib/location.ml[454,14624+16]..lib/location.ml[454,14624+20])
                                          Tpat_construct "None"
                                          []
                                          None
                                      ]
                                  expression (lib/location.ml[454,14624+24]..lib/location.ml[454,14624+55])
                                    Texp_tuple
                                    [
                                      expression (lib/location.ml[454,14624+25]..lib/location.ml[454,14624+28])
                                        Texp_apply
                                        expression (lib/location.ml[454,14624+26]..lib/location.ml[454,14624+27])
                                          Texp_ident "Stdlib!.+"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[454,14624+25]..lib/location.ml[454,14624+26])
                                              Texp_ident "i/1402"
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[454,14624+27]..lib/location.ml[454,14624+28])
                                              Texp_constant Const_int 1
                                        ]
                                      expression (lib/location.ml[454,14624+30]..lib/location.ml[454,14624+42])
                                        Texp_construct "Some"
                                        [
                                          expression (lib/location.ml[454,14624+35]..lib/location.ml[454,14624+42])
                                            Texp_apply
                                            expression (lib/location.ml[454,14624+38]..lib/location.ml[454,14624+39])
                                              Texp_ident "Stdlib!.-"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[454,14624+36]..lib/location.ml[454,14624+37])
                                                  Texp_ident "n/1406"
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[454,14624+40]..lib/location.ml[454,14624+41])
                                                  Texp_ident "i/1402"
                                            ]
                                        ]
                                      expression (lib/location.ml[454,14624+44]..lib/location.ml[454,14624+54])
                                        Texp_ident "consistent/1404"
                                    ]
                                <case>
                                  pattern (lib/location.ml[455,14680+8]..lib/location.ml[455,14680+22])
                                    Tpat_value
                                    pattern (lib/location.ml[455,14680+8]..lib/location.ml[455,14680+22])
                                      Tpat_tuple
                                      [
                                        pattern (lib/location.ml[455,14680+8]..lib/location.ml[455,14680+14])
                                          Tpat_construct "Some"
                                          [
                                            pattern (lib/location.ml[455,14680+13]..lib/location.ml[455,14680+14])
                                              Tpat_var "n/1407"
                                          ]
                                          None
                                        pattern (lib/location.ml[455,14680+16]..lib/location.ml[455,14680+22])
                                          Tpat_construct "Some"
                                          [
                                            pattern (lib/location.ml[455,14680+21]..lib/location.ml[455,14680+22])
                                              Tpat_var "m/1408"
                                          ]
                                          None
                                      ]
                                  expression (lib/location.ml[455,14680+26]..lib/location.ml[455,14680+64])
                                    Texp_tuple
                                    [
                                      expression (lib/location.ml[455,14680+27]..lib/location.ml[455,14680+30])
                                        Texp_apply
                                        expression (lib/location.ml[455,14680+28]..lib/location.ml[455,14680+29])
                                          Texp_ident "Stdlib!.+"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[455,14680+27]..lib/location.ml[455,14680+28])
                                              Texp_ident "i/1402"
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[455,14680+29]..lib/location.ml[455,14680+30])
                                              Texp_constant Const_int 1
                                        ]
                                      expression (lib/location.ml[455,14680+32]..lib/location.ml[455,14680+38])
                                        Texp_ident "offset/1403"
                                      expression (lib/location.ml[455,14680+40]..lib/location.ml[455,14680+63])
                                        Texp_apply
                                        expression (lib/location.ml[455,14680+51]..lib/location.ml[455,14680+53])
                                          Texp_ident "Stdlib!.&&"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[455,14680+40]..lib/location.ml[455,14680+50])
                                              Texp_ident "consistent/1404"
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[455,14680+54]..lib/location.ml[455,14680+63])
                                              Texp_apply
                                              expression (lib/location.ml[455,14680+56]..lib/location.ml[455,14680+57])
                                                Texp_ident "Stdlib!.="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[455,14680+54]..lib/location.ml[455,14680+55])
                                                    Texp_ident "n/1407"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[455,14680+58]..lib/location.ml[455,14680+63])
                                                    Texp_apply
                                                    expression (lib/location.ml[455,14680+60]..lib/location.ml[455,14680+61])
                                                      Texp_ident "Stdlib!.+"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/location.ml[455,14680+58]..lib/location.ml[455,14680+59])
                                                          Texp_ident "m/1408"
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/location.ml[455,14680+62]..lib/location.ml[455,14680+63])
                                                          Texp_ident "i/1402"
                                                    ]
                                              ]
                                        ]
                                    ]
                              ]
                      <arg>
                        Nolabel
                        expression (lib/location.ml[456,14745+6]..lib/location.ml[456,14745+21])
                          Texp_tuple
                          [
                            expression (lib/location.ml[456,14745+7]..lib/location.ml[456,14745+8])
                              Texp_constant Const_int 0
                            expression (lib/location.ml[456,14745+10]..lib/location.ml[456,14745+14])
                              Texp_construct "None"
                              []
                            expression (lib/location.ml[456,14745+16]..lib/location.ml[456,14745+20])
                              Texp_construct "true"
                              []
                          ]
                      <arg>
                        Nolabel
                        expression (lib/location.ml[456,14745+22]..lib/location.ml[456,14745+27])
                          Texp_ident "lines/1399"
                    ]
              ]
              expression (lib/location.ml[458,14778+2]..lib/location.ml[462,14906+11])
                Texp_match
                expression (lib/location.ml[458,14778+8]..lib/location.ml[458,14778+26])
                  Texp_tuple
                  [
                    expression (lib/location.ml[458,14778+8]..lib/location.ml[458,14778+14])
                      Texp_ident "offset/1400"
                    expression (lib/location.ml[458,14778+16]..lib/location.ml[458,14778+26])
                      Texp_ident "consistent/1401"
                  ]
                [
                  <case>
                    pattern (lib/location.ml[459,14810+4]..lib/location.ml[459,14810+16])
                      Tpat_value
                      pattern (lib/location.ml[459,14810+4]..lib/location.ml[459,14810+16])
                        Tpat_tuple
                        [
                          pattern (lib/location.ml[459,14810+4]..lib/location.ml[459,14810+10])
                            Tpat_construct "Some"
                            [
                              pattern (lib/location.ml[459,14810+9]..lib/location.ml[459,14810+10])
                                Tpat_var "m/1411"
                            ]
                            None
                          pattern (lib/location.ml[459,14810+12]..lib/location.ml[459,14810+16])
                            Tpat_construct "true"
                            []
                            None
                        ]
                    expression (lib/location.ml[460,14830+6]..lib/location.ml[460,14830+63])
                      Texp_apply
                      expression (lib/location.ml[460,14830+6]..lib/location.ml[460,14830+15])
                        Texp_ident "Stdlib!.List.mapi"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[460,14830+16]..lib/location.ml[460,14830+57])
                            Texp_function
                            [
                              Nolabel
                              Param_pat
                                pattern (lib/location.ml[460,14830+21]..lib/location.ml[460,14830+22])
                                  Tpat_var "i/1412"
                              Nolabel
                              Param_pat
                                pattern (lib/location.ml[460,14830+23]..lib/location.ml[460,14830+32])
                                  Tpat_tuple
                                  [
                                    pattern (lib/location.ml[460,14830+24]..lib/location.ml[460,14830+25])
                                      Tpat_any
                                    pattern (lib/location.ml[460,14830+27]..lib/location.ml[460,14830+31])
                                      Tpat_var "line/1413"
                                  ]
                            ]
                            Tfunction_body
                              expression (lib/location.ml[460,14830+36]..lib/location.ml[460,14830+56])
                                Texp_tuple
                                [
                                  expression (lib/location.ml[460,14830+37]..lib/location.ml[460,14830+49])
                                    Texp_construct "Some"
                                    [
                                      expression (lib/location.ml[460,14830+42]..lib/location.ml[460,14830+49])
                                        Texp_apply
                                        expression (lib/location.ml[460,14830+45]..lib/location.ml[460,14830+46])
                                          Texp_ident "Stdlib!.+"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[460,14830+43]..lib/location.ml[460,14830+44])
                                              Texp_ident "m/1411"
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[460,14830+47]..lib/location.ml[460,14830+48])
                                              Texp_ident "i/1412"
                                        ]
                                    ]
                                  expression (lib/location.ml[460,14830+51]..lib/location.ml[460,14830+55])
                                    Texp_ident "line/1413"
                                ]
                        <arg>
                          Nolabel
                          expression (lib/location.ml[460,14830+58]..lib/location.ml[460,14830+63])
                            Texp_ident "lines/1399"
                      ]
                  <case>
                    pattern (lib/location.ml[461,14894+4]..lib/location.ml[461,14894+8])
                      Tpat_value
                      pattern (lib/location.ml[461,14894+4]..lib/location.ml[461,14894+8])
                        Tpat_tuple
                        [
                          pattern (lib/location.ml[461,14894+4]..lib/location.ml[461,14894+5])
                            Tpat_any
                          pattern (lib/location.ml[461,14894+7]..lib/location.ml[461,14894+8])
                            Tpat_any
                        ]
                    expression (lib/location.ml[462,14906+6]..lib/location.ml[462,14906+11])
                      Texp_ident "lines/1399"
                ]
    ]
  structure_item (lib/location.ml[470,15135+0]..lib/location.ml[540,17836+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[470,15135+4]..lib/location.ml[470,15135+19])
          Tpat_var "highlight_quote/1415"
        expression (lib/location.ml[470,15135+20]..lib/location.ml[540,17836+27]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[470,15135+20]..lib/location.ml[470,15135+23])
                Tpat_var "ppf/1417"
            Labelled "get_lines"
            Param_pat
              pattern (lib/location.ml[471,15159+6]..lib/location.ml[471,15159+15])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[471,15159+17]..lib/location.ml[471,15159+74])
                    Ttyp_arrow
                    Labelled "start_pos"
                    core_type (lib/location.ml[471,15159+27]..lib/location.ml[471,15159+35])
                      Ttyp_constr "Stdlib!.Lexing.position"
                      []
                    core_type (lib/location.ml[471,15159+39]..lib/location.ml[471,15159+74])
                      Ttyp_arrow
                      Labelled "end_pos"
                      core_type (lib/location.ml[471,15159+47]..lib/location.ml[471,15159+55])
                        Ttyp_constr "Stdlib!.Lexing.position"
                        []
                      core_type (lib/location.ml[471,15159+59]..lib/location.ml[471,15159+74])
                        Ttyp_constr "list/9!"
                        [
                          core_type (lib/location.ml[471,15159+59]..lib/location.ml[471,15159+69])
                            Ttyp_constr "input_line/1394"
                            []
                        ]
                Tpat_alias "get_lines/1418"
                pattern (lib/location.ml[471,15159+6]..lib/location.ml[471,15159+15])
                  Tpat_any
            Optional "max_lines"
            Param_optional_default
              pattern (lib/location.ml[472,15235+6]..lib/location.ml[472,15235+15])
                Tpat_var "max_lines/1419"
              expression (lib/location.ml[472,15235+18]..lib/location.ml[472,15235+20])
                Texp_constant Const_int 10
            Nolabel
            Param_pat
              pattern (lib/location.ml[473,15257+4]..lib/location.ml[473,15257+17])
                Tpat_var "highlight_tag/1420"
            Nolabel
            Param_pat
              pattern (lib/location.ml[474,15275+4]..lib/location.ml[474,15275+8])
                Tpat_var "locs/1421"
          ]
          Tfunction_body
            expression (lib/location.ml[476,15288+2]..lib/location.ml[540,17836+27])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/location.ml[476,15288+6]..lib/location.ml[476,15288+10])
                    Tpat_var "iset/1422"
                  expression (lib/location.ml[476,15288+13]..lib/location.ml[480,15500+8])
                    Texp_apply
                    expression (lib/location.ml[476,15288+13]..lib/location.ml[476,15288+30])
                      Texp_ident "ISet/1279.of_intervals"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[476,15288+34]..lib/location.ml[480,15500+8])
                          Texp_apply
                          expression (lib/location.ml[476,15288+34]..lib/location.ml[476,15288+49])
                            Texp_ident "Stdlib!.List.filter_map"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[476,15288+50]..lib/location.ml[480,15500+3])
                                Texp_function
                                [
                                  Nolabel
                                  Param_pat
                                    pattern (lib/location.ml[476,15288+55]..lib/location.ml[476,15288+58])
                                      Tpat_var "loc/1423"
                                ]
                                Tfunction_body
                                  expression (lib/location.ml[477,15350+4]..lib/location.ml[479,15447+52])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/location.ml[477,15350+8]..lib/location.ml[477,15350+12])
                                          Tpat_tuple
                                          [
                                            pattern (lib/location.ml[477,15350+8]..lib/location.ml[477,15350+9])
                                              Tpat_var "s/1424"
                                            pattern (lib/location.ml[477,15350+11]..lib/location.ml[477,15350+12])
                                              Tpat_var "e/1425"
                                          ]
                                        expression (lib/location.ml[477,15350+15]..lib/location.ml[477,15350+41])
                                          Texp_tuple
                                          [
                                            expression (lib/location.ml[477,15350+15]..lib/location.ml[477,15350+28])
                                              Texp_field
                                              expression (lib/location.ml[477,15350+15]..lib/location.ml[477,15350+18])
                                                Texp_ident "loc/1423"
                                              "loc_start"
                                            expression (lib/location.ml[477,15350+30]..lib/location.ml[477,15350+41])
                                              Texp_field
                                              expression (lib/location.ml[477,15350+30]..lib/location.ml[477,15350+33])
                                                Texp_ident "loc/1423"
                                              "loc_end"
                                          ]
                                    ]
                                    expression (lib/location.ml[478,15395+4]..lib/location.ml[479,15447+52])
                                      Texp_ifthenelse
                                      expression (lib/location.ml[478,15395+7]..lib/location.ml[478,15395+41])
                                        Texp_apply
                                        expression (lib/location.ml[478,15395+23]..lib/location.ml[478,15395+25])
                                          Texp_ident "Stdlib!.||"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[478,15395+7]..lib/location.ml[478,15395+22])
                                              Texp_apply
                                              expression (lib/location.ml[478,15395+18]..lib/location.ml[478,15395+19])
                                                Texp_ident "Stdlib!.="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[478,15395+7]..lib/location.ml[478,15395+17])
                                                    Texp_field
                                                    expression (lib/location.ml[478,15395+7]..lib/location.ml[478,15395+8])
                                                      Texp_ident "s/1424"
                                                    "pos_cnum"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[478,15395+20]..lib/location.ml[478,15395+22])
                                                    Texp_constant Const_int -1
                                              ]
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[478,15395+26]..lib/location.ml[478,15395+41])
                                              Texp_apply
                                              expression (lib/location.ml[478,15395+37]..lib/location.ml[478,15395+38])
                                                Texp_ident "Stdlib!.="
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[478,15395+26]..lib/location.ml[478,15395+36])
                                                    Texp_field
                                                    expression (lib/location.ml[478,15395+26]..lib/location.ml[478,15395+27])
                                                      Texp_ident "e/1425"
                                                    "pos_cnum"
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[478,15395+39]..lib/location.ml[478,15395+41])
                                                    Texp_constant Const_int -1
                                              ]
                                        ]
                                      expression (lib/location.ml[478,15395+47]..lib/location.ml[478,15395+51])
                                        Texp_construct "None"
                                        []
                                      Some
                                        expression (lib/location.ml[479,15447+9]..lib/location.ml[479,15447+52])
                                          Texp_construct "Some"
                                          [
                                            expression (lib/location.ml[479,15447+14]..lib/location.ml[479,15447+52])
                                              Texp_tuple
                                              [
                                                expression (lib/location.ml[479,15447+15]..lib/location.ml[479,15447+30])
                                                  Texp_tuple
                                                  [
                                                    expression (lib/location.ml[479,15447+16]..lib/location.ml[479,15447+17])
                                                      Texp_ident "s/1424"
                                                    expression (lib/location.ml[479,15447+19]..lib/location.ml[479,15447+29])
                                                      Texp_field
                                                      expression (lib/location.ml[479,15447+19]..lib/location.ml[479,15447+20])
                                                        Texp_ident "s/1424"
                                                      "pos_cnum"
                                                  ]
                                                expression (lib/location.ml[479,15447+32]..lib/location.ml[479,15447+51])
                                                  Texp_tuple
                                                  [
                                                    expression (lib/location.ml[479,15447+33]..lib/location.ml[479,15447+34])
                                                      Texp_ident "e/1425"
                                                    expression (lib/location.ml[479,15447+36]..lib/location.ml[479,15447+50])
                                                      Texp_apply
                                                      expression (lib/location.ml[479,15447+47]..lib/location.ml[479,15447+48])
                                                        Texp_ident "Stdlib!.-"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[479,15447+36]..lib/location.ml[479,15447+46])
                                                            Texp_field
                                                            expression (lib/location.ml[479,15447+36]..lib/location.ml[479,15447+37])
                                                              Texp_ident "e/1425"
                                                            "pos_cnum"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[479,15447+49]..lib/location.ml[479,15447+50])
                                                            Texp_constant Const_int 1
                                                      ]
                                                  ]
                                              ]
                                          ]
                            <arg>
                              Nolabel
                              expression (lib/location.ml[480,15500+4]..lib/location.ml[480,15500+8])
                                Texp_ident "locs/1421"
                          ]
                    ]
              ]
              expression (lib/location.ml[481,15512+2]..lib/location.ml[540,17836+27])
                Texp_match
                expression (lib/location.ml[481,15512+8]..lib/location.ml[481,15512+25])
                  Texp_apply
                  expression (lib/location.ml[481,15512+8]..lib/location.ml[481,15512+20])
                    Texp_ident "ISet/1279.extrema"
                  [
                    <arg>
                      Nolabel
                      expression (lib/location.ml[481,15512+21]..lib/location.ml[481,15512+25])
                        Texp_ident "iset/1422"
                  ]
                [
                  <case>
                    pattern (lib/location.ml[482,15543+4]..lib/location.ml[482,15543+8])
                      Tpat_value
                      pattern (lib/location.ml[482,15543+4]..lib/location.ml[482,15543+8])
                        Tpat_construct "None"
                        []
                        None
                    expression (lib/location.ml[482,15543+12]..lib/location.ml[482,15543+14])
                      Texp_construct "()"
                      []
                  <case>
                    pattern (lib/location.ml[483,15558+4]..lib/location.ml[483,15558+40])
                      Tpat_value
                      pattern (lib/location.ml[483,15558+4]..lib/location.ml[483,15558+40])
                        Tpat_construct "Some"
                        [
                          pattern (lib/location.ml[483,15558+9]..lib/location.ml[483,15558+40])
                            Tpat_tuple
                            [
                              pattern (lib/location.ml[483,15558+10]..lib/location.ml[483,15558+23])
                                Tpat_tuple
                                [
                                  pattern (lib/location.ml[483,15558+11]..lib/location.ml[483,15558+19])
                                    Tpat_var "leftmost/1426"
                                  pattern (lib/location.ml[483,15558+21]..lib/location.ml[483,15558+22])
                                    Tpat_any
                                ]
                              pattern (lib/location.ml[483,15558+25]..lib/location.ml[483,15558+39])
                                Tpat_tuple
                                [
                                  pattern (lib/location.ml[483,15558+26]..lib/location.ml[483,15558+35])
                                    Tpat_var "rightmost/1427"
                                  pattern (lib/location.ml[483,15558+37]..lib/location.ml[483,15558+38])
                                    Tpat_any
                                ]
                            ]
                        ]
                        None
                    expression (lib/location.ml[484,15602+6]..lib/location.ml[540,17836+27])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/location.ml[484,15602+10]..lib/location.ml[484,15602+15])
                            Tpat_var "lines/1428"
                          expression (lib/location.ml[485,15620+8]..lib/location.ml[498,16169+22])
                            Texp_apply
                            expression (lib/location.ml[495,16038+11]..lib/location.ml[498,16169+22])
                              Texp_apply
                              expression (lib/location.ml[495,16038+11]..lib/location.ml[495,16038+19])
                                Texp_ident "Stdlib!.List.map"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[495,16038+20]..lib/location.ml[498,16169+22])
                                    Texp_function
                                    [
                                      Nolabel
                                      Param_pat
                                        pattern (lib/location.ml[495,16038+25]..lib/location.ml[495,16038+52])
                                          Tpat_tuple
                                          [
                                            pattern (lib/location.ml[495,16038+26]..lib/location.ml[495,16038+30])
                                              Tpat_var "lnum/1429"
                                            pattern (lib/location.ml[495,16038+32]..lib/location.ml[495,16038+51])
                                              Tpat_record
                                              [
                                                "text"
                                                  pattern (lib/location.ml[495,16038+34]..lib/location.ml[495,16038+38])
                                                    Tpat_var "text/1430"
                                                "start_pos"
                                                  pattern (lib/location.ml[495,16038+40]..lib/location.ml[495,16038+49])
                                                    Tpat_var "start_pos/1431"
                                              ]
                                          ]
                                    ]
                                    Tfunction_body
                                      expression (lib/location.ml[496,16094+10]..lib/location.ml[498,16169+21])
                                        Texp_tuple
                                        [
                                          expression (lib/location.ml[496,16094+11]..lib/location.ml[496,16094+15])
                                            Texp_ident "text/1430"
                                          expression (lib/location.ml[497,16111+11]..lib/location.ml[497,16111+56])
                                            Texp_apply
                                            expression (lib/location.ml[497,16111+11]..lib/location.ml[497,16111+22])
                                              Texp_ident "Stdlib!.Option.fold"
                                            [
                                              <arg>
                                                Labelled "none"
                                                expression (lib/location.ml[497,16111+49]..lib/location.ml[497,16111+51])
                                                  Texp_constant Const_string("",(lib/location.ml[497,16111+50]..lib/location.ml[497,16111+50]),None)
                                              <arg>
                                                Labelled "some"
                                                expression (lib/location.ml[497,16111+29]..lib/location.ml[497,16111+42])
                                                  Texp_ident "Stdlib!.Int.to_string"
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[497,16111+52]..lib/location.ml[497,16111+56])
                                                  Texp_ident "lnum/1429"
                                            ]
                                          expression (lib/location.ml[498,16169+11]..lib/location.ml[498,16169+20])
                                            Texp_ident "start_pos/1431"
                                        ]
                              ]
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[485,15620+8]..lib/location.ml[494,16008+29])
                                  Texp_apply
                                  expression (lib/location.ml[494,16008+11]..lib/location.ml[494,16008+29])
                                    Texp_ident "infer_line_numbers/1397"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[485,15620+8]..lib/location.ml[493,15981+26])
                                        Texp_apply
                                        expression (lib/location.ml[486,15677+11]..lib/location.ml[493,15981+26])
                                          Texp_apply
                                          expression (lib/location.ml[486,15677+11]..lib/location.ml[486,15677+19])
                                            Texp_ident "Stdlib!.List.map"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[486,15677+20]..lib/location.ml[493,15981+26])
                                                Texp_function
                                                [
                                                  Nolabel
                                                  Param_pat
                                                    pattern (lib/location.ml[486,15677+25]..lib/location.ml[486,15677+54])
                                                      Tpat_alias "line/1483"
                                                      pattern (lib/location.ml[486,15677+26]..lib/location.ml[486,15677+45])
                                                        Tpat_record
                                                        [
                                                          "text"
                                                            pattern (lib/location.ml[486,15677+28]..lib/location.ml[486,15677+32])
                                                              Tpat_var "text/1481"
                                                          "start_pos"
                                                            pattern (lib/location.ml[486,15677+34]..lib/location.ml[486,15677+43])
                                                              Tpat_var "start_pos/1482"
                                                        ]
                                                ]
                                                Tfunction_body
                                                  expression (lib/location.ml[487,15735+10]..lib/location.ml[493,15981+25])
                                                    Texp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lib/location.ml[487,15735+14]..lib/location.ml[487,15735+21])
                                                          Tpat_var "end_pos/1484"
                                                        expression (lib/location.ml[487,15735+24]..lib/location.ml[487,15735+58])
                                                          Texp_apply
                                                          expression (lib/location.ml[487,15735+55]..lib/location.ml[487,15735+56])
                                                            Texp_ident "Stdlib!.-"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/location.ml[487,15735+24]..lib/location.ml[487,15735+54])
                                                                Texp_apply
                                                                expression (lib/location.ml[487,15735+34]..lib/location.ml[487,15735+35])
                                                                  Texp_ident "Stdlib!.+"
                                                                [
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/location.ml[487,15735+24]..lib/location.ml[487,15735+33])
                                                                      Texp_ident "start_pos/1482"
                                                                  <arg>
                                                                    Nolabel
                                                                    expression (lib/location.ml[487,15735+36]..lib/location.ml[487,15735+54])
                                                                      Texp_apply
                                                                      expression (lib/location.ml[487,15735+36]..lib/location.ml[487,15735+49])
                                                                        Texp_ident "Stdlib!.String.length"
                                                                      [
                                                                        <arg>
                                                                          Nolabel
                                                                          expression (lib/location.ml[487,15735+50]..lib/location.ml[487,15735+54])
                                                                            Texp_ident "text/1481"
                                                                      ]
                                                                ]
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/location.ml[487,15735+57]..lib/location.ml[487,15735+58])
                                                                Texp_constant Const_int 1
                                                          ]
                                                    ]
                                                    expression (lib/location.ml[488,15797+10]..lib/location.ml[493,15981+25])
                                                      Texp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (lib/location.ml[488,15797+14]..lib/location.ml[488,15797+21])
                                                            Tpat_var "line_nb/1485"
                                                          expression (lib/location.ml[489,15821+12]..lib/location.ml[491,15923+44])
                                                            Texp_match
                                                            expression (lib/location.ml[489,15821+18]..lib/location.ml[489,15821+69])
                                                              Texp_apply
                                                              expression (lib/location.ml[489,15821+18]..lib/location.ml[489,15821+36])
                                                                Texp_ident "ISet/1279.find_bound_in"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/location.ml[489,15821+37]..lib/location.ml[489,15821+41])
                                                                    Texp_ident "iset/1422"
                                                                <arg>
                                                                  Labelled "range"
                                                                  expression (lib/location.ml[489,15821+49]..lib/location.ml[489,15821+69])
                                                                    Texp_tuple
                                                                    [
                                                                      expression (lib/location.ml[489,15821+50]..lib/location.ml[489,15821+59])
                                                                        Texp_ident "start_pos/1482"
                                                                      expression (lib/location.ml[489,15821+61]..lib/location.ml[489,15821+68])
                                                                        Texp_ident "end_pos/1484"
                                                                    ]
                                                              ]
                                                            [
                                                              <case>
                                                                pattern (lib/location.ml[490,15896+14]..lib/location.ml[490,15896+18])
                                                                  Tpat_value
                                                                  pattern (lib/location.ml[490,15896+14]..lib/location.ml[490,15896+18])
                                                                    Tpat_construct "None"
                                                                    []
                                                                    None
                                                                expression (lib/location.ml[490,15896+22]..lib/location.ml[490,15896+26])
                                                                  Texp_construct "None"
                                                                  []
                                                              <case>
                                                                pattern (lib/location.ml[491,15923+14]..lib/location.ml[491,15923+25])
                                                                  Tpat_value
                                                                  pattern (lib/location.ml[491,15923+14]..lib/location.ml[491,15923+25])
                                                                    Tpat_construct "Some"
                                                                    [
                                                                      pattern (lib/location.ml[491,15923+19]..lib/location.ml[491,15923+25])
                                                                        Tpat_tuple
                                                                        [
                                                                          pattern (lib/location.ml[491,15923+20]..lib/location.ml[491,15923+21])
                                                                            Tpat_var "p/1486"
                                                                          pattern (lib/location.ml[491,15923+23]..lib/location.ml[491,15923+24])
                                                                            Tpat_any
                                                                        ]
                                                                    ]
                                                                    None
                                                                expression (lib/location.ml[491,15923+29]..lib/location.ml[491,15923+44])
                                                                  Texp_construct "Some"
                                                                  [
                                                                    expression (lib/location.ml[491,15923+34]..lib/location.ml[491,15923+44])
                                                                      Texp_field
                                                                      expression (lib/location.ml[491,15923+34]..lib/location.ml[491,15923+35])
                                                                        Texp_ident "p/1486"
                                                                      "pos_lnum"
                                                                  ]
                                                            ]
                                                      ]
                                                      expression (lib/location.ml[493,15981+10]..lib/location.ml[493,15981+25])
                                                        Texp_tuple
                                                        [
                                                          expression (lib/location.ml[493,15981+11]..lib/location.ml[493,15981+18])
                                                            Texp_ident "line_nb/1485"
                                                          expression (lib/location.ml[493,15981+20]..lib/location.ml[493,15981+24])
                                                            Texp_ident "line/1483"
                                                        ]
                                          ]
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[485,15620+8]..lib/location.ml[485,15620+56])
                                              Texp_apply
                                              expression (lib/location.ml[485,15620+8]..lib/location.ml[485,15620+17])
                                                Texp_ident "get_lines/1418"
                                              [
                                                <arg>
                                                  Labelled "start_pos"
                                                  expression (lib/location.ml[485,15620+29]..lib/location.ml[485,15620+37])
                                                    Texp_ident "leftmost/1426"
                                                <arg>
                                                  Labelled "end_pos"
                                                  expression (lib/location.ml[485,15620+47]..lib/location.ml[485,15620+56])
                                                    Texp_ident "rightmost/1427"
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                      expression (lib/location.ml[500,16201+4]..lib/location.ml[540,17836+27])
                        Texp_sequence
                        expression (lib/location.ml[500,16201+4]..lib/location.ml[500,16201+30])
                          Texp_apply
                          expression (lib/location.ml[500,16201+4]..lib/location.ml[500,16201+18])
                            Texp_ident "Stdlib!.Format.fprintf"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[500,16201+19]..lib/location.ml[500,16201+22])
                                Texp_ident "ppf/1417"
                            <arg>
                              Nolabel
                              expression (lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30])
                                Texp_construct "CamlinternalFormatBasics.Format"
                                [
                                  expression (lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30]) ghost
                                    Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                    [
                                      expression (lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30]) ghost
                                        Texp_construct "CamlinternalFormatBasics.Open_box"
                                        [
                                          expression (lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30]) ghost
                                            Texp_construct "CamlinternalFormatBasics.Format"
                                            [
                                              expression (lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String_literal"
                                                [
                                                  expression (lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30]) ghost
                                                    Texp_constant Const_string("<v>",(lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30]) ghost,None)
                                                  expression (lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                    []
                                                ]
                                              expression (lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30]) ghost
                                                Texp_constant Const_string("<v>",(lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30]) ghost,None)
                                            ]
                                        ]
                                      expression (lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                  expression (lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30]) ghost
                                    Texp_constant Const_string("@[<v>",(lib/location.ml[500,16201+23]..lib/location.ml[500,16201+30]) ghost,None)
                                ]
                          ]
                        expression (lib/location.ml[501,16233+4]..lib/location.ml[540,17836+27])
                          Texp_sequence
                          expression (lib/location.ml[501,16233+4]..lib/location.ml[539,17827+7])
                            Texp_match
                            expression (lib/location.ml[501,16233+16]..lib/location.ml[501,16233+21])
                              Texp_ident "lines/1428"
                            [
                              <case>
                                pattern (lib/location.ml[502,16260+6]..lib/location.ml[502,16260+23])
                                  Tpat_or
                                  pattern (lib/location.ml[502,16260+6]..lib/location.ml[502,16260+8])
                                    Tpat_value
                                    pattern (lib/location.ml[502,16260+6]..lib/location.ml[502,16260+8])
                                      Tpat_construct "[]"
                                      []
                                      None
                                  pattern (lib/location.ml[502,16260+11]..lib/location.ml[502,16260+23])
                                    Tpat_value
                                    pattern (lib/location.ml[502,16260+11]..lib/location.ml[502,16260+23])
                                      Tpat_construct "::"
                                      [
                                        pattern (lib/location.ml[502,16260+12]..lib/location.ml[502,16260+22])
                                          Tpat_tuple
                                          [
                                            pattern (lib/location.ml[502,16260+13]..lib/location.ml[502,16260+15])
                                              Tpat_constant Const_string("",(lib/location.ml[502,16260+14]..lib/location.ml[502,16260+14]),None)
                                            pattern (lib/location.ml[502,16260+17]..lib/location.ml[502,16260+18])
                                              Tpat_any
                                            pattern (lib/location.ml[502,16260+20]..lib/location.ml[502,16260+21])
                                              Tpat_any
                                          ]
                                        pattern (lib/location.ml[502,16260+22]..lib/location.ml[502,16260+23]) ghost
                                          Tpat_construct "[]"
                                          []
                                          None
                                      ]
                                      None
                                expression (lib/location.ml[502,16260+27]..lib/location.ml[502,16260+29])
                                  Texp_construct "()"
                                  []
                              <case>
                                pattern (lib/location.ml[503,16290+6]..lib/location.ml[503,16290+40])
                                  Tpat_value
                                  pattern (lib/location.ml[503,16290+6]..lib/location.ml[503,16290+40])
                                    Tpat_construct "::"
                                    [
                                      pattern (lib/location.ml[503,16290+7]..lib/location.ml[503,16290+39])
                                        Tpat_tuple
                                        [
                                          pattern (lib/location.ml[503,16290+8]..lib/location.ml[503,16290+12])
                                            Tpat_var "line/1487"
                                          pattern (lib/location.ml[503,16290+14]..lib/location.ml[503,16290+21])
                                            Tpat_var "line_nb/1488"
                                          pattern (lib/location.ml[503,16290+23]..lib/location.ml[503,16290+38])
                                            Tpat_var "line_start_cnum/1489"
                                        ]
                                      pattern (lib/location.ml[503,16290+39]..lib/location.ml[503,16290+40]) ghost
                                        Tpat_construct "[]"
                                        []
                                        None
                                    ]
                                    None
                                expression (lib/location.ml[505,16366+8]..lib/location.ml[529,17455+33])
                                  Texp_sequence
                                  expression (lib/location.ml[505,16366+8]..lib/location.ml[505,16366+51])
                                    Texp_apply
                                    expression (lib/location.ml[505,16366+8]..lib/location.ml[505,16366+22])
                                      Texp_ident "Stdlib!.Format.fprintf"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[505,16366+23]..lib/location.ml[505,16366+26])
                                          Texp_ident "ppf/1417"
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38])
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String"
                                              [
                                                expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.No_padding"
                                                  []
                                                expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.String_literal"
                                                  [
                                                    expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                                      Texp_constant Const_string(" | ",(lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost,None)
                                                    expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String"
                                                      [
                                                        expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.No_padding"
                                                          []
                                                        expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                          [
                                                            expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.Break"
                                                              [
                                                                expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                                                  Texp_constant Const_string("@,",(lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost,None)
                                                                expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                                                  Texp_constant Const_int 0
                                                                expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                                                  Texp_constant Const_int 0
                                                              ]
                                                            expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                            expression (lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost
                                              Texp_constant Const_string("%s | %s@,",(lib/location.ml[505,16366+27]..lib/location.ml[505,16366+38]) ghost,None)
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[505,16366+39]..lib/location.ml[505,16366+46])
                                          Texp_ident "line_nb/1488"
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[505,16366+47]..lib/location.ml[505,16366+51])
                                          Texp_ident "line/1487"
                                    ]
                                  expression (lib/location.ml[506,16419+8]..lib/location.ml[529,17455+33])
                                    Texp_sequence
                                    expression (lib/location.ml[506,16419+8]..lib/location.ml[506,16419+62])
                                      Texp_apply
                                      expression (lib/location.ml[506,16419+8]..lib/location.ml[506,16419+22])
                                        Texp_ident "Stdlib!.Format.fprintf"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[506,16419+23]..lib/location.ml[506,16419+26])
                                            Texp_ident "ppf/1417"
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[506,16419+27]..lib/location.ml[506,16419+35])
                                            Texp_construct "CamlinternalFormatBasics.Format"
                                            [
                                              expression (lib/location.ml[506,16419+27]..lib/location.ml[506,16419+35]) ghost
                                                Texp_construct "CamlinternalFormatBasics.String"
                                                [
                                                  expression (lib/location.ml[506,16419+27]..lib/location.ml[506,16419+35]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.Arg_padding"
                                                    [
                                                      expression (lib/location.ml[506,16419+27]..lib/location.ml[506,16419+35]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.Right"
                                                        []
                                                    ]
                                                  expression (lib/location.ml[506,16419+27]..lib/location.ml[506,16419+35]) ghost
                                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                                    [
                                                      expression (lib/location.ml[506,16419+27]..lib/location.ml[506,16419+35]) ghost
                                                        Texp_constant Const_string("   ",(lib/location.ml[506,16419+27]..lib/location.ml[506,16419+35]) ghost,None)
                                                      expression (lib/location.ml[506,16419+27]..lib/location.ml[506,16419+35]) ghost
                                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                        []
                                                    ]
                                                ]
                                              expression (lib/location.ml[506,16419+27]..lib/location.ml[506,16419+35]) ghost
                                                Texp_constant Const_string("%*s   ",(lib/location.ml[506,16419+27]..lib/location.ml[506,16419+35]) ghost,None)
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[506,16419+36]..lib/location.ml[506,16419+59])
                                            Texp_apply
                                            expression (lib/location.ml[506,16419+37]..lib/location.ml[506,16419+50])
                                              Texp_ident "Stdlib!.String.length"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[506,16419+51]..lib/location.ml[506,16419+58])
                                                  Texp_ident "line_nb/1488"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[506,16419+60]..lib/location.ml[506,16419+62])
                                            Texp_constant Const_string("",(lib/location.ml[506,16419+61]..lib/location.ml[506,16419+61]),None)
                                      ]
                                    expression (lib/location.ml[515,16792+8]..lib/location.ml[529,17455+33])
                                      Texp_sequence
                                      expression (lib/location.ml[515,16792+8]..lib/location.ml[528,17441+12])
                                        Texp_for "i/1490" Up
                                        expression (lib/location.ml[515,16792+16]..lib/location.ml[515,16792+17])
                                          Texp_constant Const_int 0
                                        expression (lib/location.ml[515,16792+21]..lib/location.ml[515,16792+61])
                                          Texp_apply
                                          expression (lib/location.ml[515,16792+58]..lib/location.ml[515,16792+59])
                                            Texp_ident "Stdlib!.-"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[515,16792+21]..lib/location.ml[515,16792+57])
                                                Texp_apply
                                                expression (lib/location.ml[515,16792+40]..lib/location.ml[515,16792+41])
                                                  Texp_ident "Stdlib!.-"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[515,16792+21]..lib/location.ml[515,16792+39])
                                                      Texp_field
                                                      expression (lib/location.ml[515,16792+21]..lib/location.ml[515,16792+30])
                                                        Texp_ident "rightmost/1427"
                                                      "pos_cnum"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[515,16792+42]..lib/location.ml[515,16792+57])
                                                      Texp_ident "line_start_cnum/1489"
                                                ]
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[515,16792+60]..lib/location.ml[515,16792+61])
                                                Texp_constant Const_int 1
                                          ]
                                        expression (lib/location.ml[516,16857+10]..lib/location.ml[527,17405+35])
                                          Texp_let Nonrec
                                          [
                                            <def>
                                              pattern (lib/location.ml[516,16857+14]..lib/location.ml[516,16857+17])
                                                Tpat_var "pos/1491"
                                              expression (lib/location.ml[516,16857+20]..lib/location.ml[516,16857+39])
                                                Texp_apply
                                                expression (lib/location.ml[516,16857+36]..lib/location.ml[516,16857+37])
                                                  Texp_ident "Stdlib!.+"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[516,16857+20]..lib/location.ml[516,16857+35])
                                                      Texp_ident "line_start_cnum/1489"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[516,16857+38]..lib/location.ml[516,16857+39])
                                                      Texp_ident "i/1490"
                                                ]
                                          ]
                                          expression (lib/location.ml[517,16900+10]..lib/location.ml[527,17405+35])
                                            Texp_sequence
                                            expression (lib/location.ml[517,16900+10]..lib/location.ml[518,16950+53])
                                              Texp_ifthenelse
                                              expression (lib/location.ml[517,16900+13]..lib/location.ml[517,16900+44])
                                                Texp_apply
                                                expression (lib/location.ml[517,16900+37]..lib/location.ml[517,16900+39])
                                                  Texp_ident "Stdlib!.<>"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[517,16900+13]..lib/location.ml[517,16900+36])
                                                      Texp_apply
                                                      expression (lib/location.ml[517,16900+13]..lib/location.ml[517,16900+26])
                                                        Texp_ident "ISet/1279.is_start"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[517,16900+27]..lib/location.ml[517,16900+31])
                                                            Texp_ident "iset/1422"
                                                        <arg>
                                                          Labelled "pos"
                                                          expression (lib/location.ml[517,16900+33]..lib/location.ml[517,16900+36])
                                                            Texp_ident "pos/1491"
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[517,16900+40]..lib/location.ml[517,16900+44])
                                                      Texp_construct "None"
                                                      []
                                                ]
                                              expression (lib/location.ml[518,16950+12]..lib/location.ml[518,16950+53])
                                                Texp_apply
                                                expression (lib/location.ml[518,16950+12]..lib/location.ml[518,16950+26])
                                                  Texp_ident "Stdlib!.Format.fprintf"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[518,16950+27]..lib/location.ml[518,16950+30])
                                                      Texp_ident "ppf/1417"
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39])
                                                      Texp_construct "CamlinternalFormatBasics.Format"
                                                      [
                                                        expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                                          [
                                                            expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.Open_tag"
                                                              [
                                                                expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.Format"
                                                                  [
                                                                    expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                      [
                                                                        expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                                          Texp_constant Const_char 3c
                                                                        expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.String"
                                                                          [
                                                                            expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                                                              []
                                                                            expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                                              [
                                                                                expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                                                  Texp_constant Const_char 3e
                                                                                expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                  []
                                                                              ]
                                                                          ]
                                                                      ]
                                                                    expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                                      Texp_constant Const_string("<%s>",(lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost,None)
                                                                  ]
                                                              ]
                                                            expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                              []
                                                          ]
                                                        expression (lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost
                                                          Texp_constant Const_string("@{<%s>",(lib/location.ml[518,16950+31]..lib/location.ml[518,16950+39]) ghost,None)
                                                      ]
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[518,16950+40]..lib/location.ml[518,16950+53])
                                                      Texp_ident "highlight_tag/1420"
                                                ]
                                              None
                                            expression (lib/location.ml[519,17005+10]..lib/location.ml[527,17405+35])
                                              Texp_sequence
                                              expression (lib/location.ml[519,17005+10]..lib/location.ml[525,17342+13])
                                                Texp_ifthenelse
                                                expression (lib/location.ml[519,17005+13]..lib/location.ml[519,17005+31])
                                                  Texp_apply
                                                  expression (lib/location.ml[519,17005+13]..lib/location.ml[519,17005+21])
                                                    Texp_ident "ISet/1279.mem"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[519,17005+22]..lib/location.ml[519,17005+26])
                                                        Texp_ident "iset/1422"
                                                    <arg>
                                                      Labelled "pos"
                                                      expression (lib/location.ml[519,17005+28]..lib/location.ml[519,17005+31])
                                                        Texp_ident "pos/1491"
                                                  ]
                                                expression (lib/location.ml[519,17005+37]..lib/location.ml[519,17005+65])
                                                  Texp_apply
                                                  expression (lib/location.ml[519,17005+37]..lib/location.ml[519,17005+57])
                                                    Texp_ident "Stdlib!.Format.pp_print_char"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[519,17005+58]..lib/location.ml[519,17005+61])
                                                        Texp_ident "ppf/1417"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[519,17005+62]..lib/location.ml[519,17005+65])
                                                        Texp_constant Const_char 5e
                                                  ]
                                                Some
                                                  expression (lib/location.ml[520,17071+15]..lib/location.ml[525,17342+13])
                                                    Texp_ifthenelse
                                                    expression (lib/location.ml[520,17071+18]..lib/location.ml[520,17071+40])
                                                      Texp_apply
                                                      expression (lib/location.ml[520,17071+20]..lib/location.ml[520,17071+21])
                                                        Texp_ident "Stdlib!.<"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[520,17071+18]..lib/location.ml[520,17071+19])
                                                            Texp_ident "i/1490"
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[520,17071+22]..lib/location.ml[520,17071+40])
                                                            Texp_apply
                                                            expression (lib/location.ml[520,17071+22]..lib/location.ml[520,17071+35])
                                                              Texp_ident "Stdlib!.String.length"
                                                            [
                                                              <arg>
                                                                Nolabel
                                                                expression (lib/location.ml[520,17071+36]..lib/location.ml[520,17071+40])
                                                                  Texp_ident "line/1487"
                                                            ]
                                                      ]
                                                    expression (lib/location.ml[520,17071+46]..lib/location.ml[525,17342+13])
                                                      Texp_ifthenelse
                                                      expression (lib/location.ml[523,17230+15]..lib/location.ml[523,17230+30])
                                                        Texp_apply
                                                        expression (lib/location.ml[523,17230+24]..lib/location.ml[523,17230+25])
                                                          Texp_ident "Stdlib!.="
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[523,17230+15]..lib/location.ml[523,17230+23])
                                                              Texp_apply
                                                              expression (lib/location.ml[523,17230+15]..lib/location.ml[523,17230+23]) ghost
                                                                Texp_ident "Stdlib!.String.get"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/location.ml[523,17230+15]..lib/location.ml[523,17230+19])
                                                                    Texp_ident "line/1487"
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/location.ml[523,17230+21]..lib/location.ml[523,17230+22])
                                                                    Texp_ident "i/1490"
                                                              ]
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[523,17230+26]..lib/location.ml[523,17230+30])
                                                              Texp_constant Const_char 09
                                                        ]
                                                      expression (lib/location.ml[523,17230+36]..lib/location.ml[523,17230+65])
                                                        Texp_apply
                                                        expression (lib/location.ml[523,17230+36]..lib/location.ml[523,17230+56])
                                                          Texp_ident "Stdlib!.Format.pp_print_char"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[523,17230+57]..lib/location.ml[523,17230+60])
                                                              Texp_ident "ppf/1417"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[523,17230+61]..lib/location.ml[523,17230+65])
                                                              Texp_constant Const_char 09
                                                        ]
                                                      Some
                                                        expression (lib/location.ml[524,17296+17]..lib/location.ml[524,17296+45])
                                                          Texp_apply
                                                          expression (lib/location.ml[524,17296+17]..lib/location.ml[524,17296+37])
                                                            Texp_ident "Stdlib!.Format.pp_print_char"
                                                          [
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/location.ml[524,17296+38]..lib/location.ml[524,17296+41])
                                                                Texp_ident "ppf/1417"
                                                            <arg>
                                                              Nolabel
                                                              expression (lib/location.ml[524,17296+42]..lib/location.ml[524,17296+45])
                                                                Texp_constant Const_char 20
                                                          ]
                                                    None
                                              expression (lib/location.ml[526,17357+10]..lib/location.ml[527,17405+35])
                                                Texp_ifthenelse
                                                expression (lib/location.ml[526,17357+13]..lib/location.ml[526,17357+42])
                                                  Texp_apply
                                                  expression (lib/location.ml[526,17357+35]..lib/location.ml[526,17357+37])
                                                    Texp_ident "Stdlib!.<>"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[526,17357+13]..lib/location.ml[526,17357+34])
                                                        Texp_apply
                                                        expression (lib/location.ml[526,17357+13]..lib/location.ml[526,17357+24])
                                                          Texp_ident "ISet/1279.is_end"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[526,17357+25]..lib/location.ml[526,17357+29])
                                                              Texp_ident "iset/1422"
                                                          <arg>
                                                            Labelled "pos"
                                                            expression (lib/location.ml[526,17357+31]..lib/location.ml[526,17357+34])
                                                              Texp_ident "pos/1491"
                                                        ]
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[526,17357+38]..lib/location.ml[526,17357+42])
                                                        Texp_construct "None"
                                                        []
                                                  ]
                                                expression (lib/location.ml[527,17405+12]..lib/location.ml[527,17405+35])
                                                  Texp_apply
                                                  expression (lib/location.ml[527,17405+12]..lib/location.ml[527,17405+26])
                                                    Texp_ident "Stdlib!.Format.fprintf"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[527,17405+27]..lib/location.ml[527,17405+30])
                                                        Texp_ident "ppf/1417"
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[527,17405+31]..lib/location.ml[527,17405+35])
                                                        Texp_construct "CamlinternalFormatBasics.Format"
                                                        [
                                                          expression (lib/location.ml[527,17405+31]..lib/location.ml[527,17405+35]) ghost
                                                            Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                            [
                                                              expression (lib/location.ml[527,17405+31]..lib/location.ml[527,17405+35]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.Close_tag"
                                                                []
                                                              expression (lib/location.ml[527,17405+31]..lib/location.ml[527,17405+35]) ghost
                                                                Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                []
                                                            ]
                                                          expression (lib/location.ml[527,17405+31]..lib/location.ml[527,17405+35]) ghost
                                                            Texp_constant Const_string("@}",(lib/location.ml[527,17405+31]..lib/location.ml[527,17405+35]) ghost,None)
                                                        ]
                                                  ]
                                                None
                                      expression (lib/location.ml[529,17455+8]..lib/location.ml[529,17455+33])
                                        Texp_apply
                                        expression (lib/location.ml[529,17455+8]..lib/location.ml[529,17455+22])
                                          Texp_ident "Stdlib!.Format.fprintf"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[529,17455+23]..lib/location.ml[529,17455+26])
                                              Texp_ident "ppf/1417"
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[529,17455+27]..lib/location.ml[529,17455+33])
                                              Texp_construct "CamlinternalFormatBasics.Format"
                                              [
                                                expression (lib/location.ml[529,17455+27]..lib/location.ml[529,17455+33]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                  [
                                                    expression (lib/location.ml[529,17455+27]..lib/location.ml[529,17455+33]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Close_tag"
                                                      []
                                                    expression (lib/location.ml[529,17455+27]..lib/location.ml[529,17455+33]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                      [
                                                        expression (lib/location.ml[529,17455+27]..lib/location.ml[529,17455+33]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Break"
                                                          [
                                                            expression (lib/location.ml[529,17455+27]..lib/location.ml[529,17455+33]) ghost
                                                              Texp_constant Const_string("@,",(lib/location.ml[529,17455+27]..lib/location.ml[529,17455+33]) ghost,None)
                                                            expression (lib/location.ml[529,17455+27]..lib/location.ml[529,17455+33]) ghost
                                                              Texp_constant Const_int 0
                                                            expression (lib/location.ml[529,17455+27]..lib/location.ml[529,17455+33]) ghost
                                                              Texp_constant Const_int 0
                                                          ]
                                                        expression (lib/location.ml[529,17455+27]..lib/location.ml[529,17455+33]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                          []
                                                      ]
                                                  ]
                                                expression (lib/location.ml[529,17455+27]..lib/location.ml[529,17455+33]) ghost
                                                  Texp_constant Const_string("@}@,",(lib/location.ml[529,17455+27]..lib/location.ml[529,17455+33]) ghost,None)
                                              ]
                                        ]
                              <case>
                                pattern (lib/location.ml[530,17489+6]..lib/location.ml[530,17489+7])
                                  Tpat_value
                                  pattern (lib/location.ml[530,17489+6]..lib/location.ml[530,17489+7])
                                    Tpat_any
                                expression (lib/location.ml[532,17531+8]..lib/location.ml[538,17811+15])
                                  Texp_apply
                                  expression (lib/location.ml[532,17531+8]..lib/location.ml[532,17531+51])
                                    Texp_apply
                                    expression (lib/location.ml[532,17531+8]..lib/location.ml[532,17531+27])
                                      Texp_ident "Ocaml_ocaml_types!.Misc.pp_two_columns"
                                    [
                                      <arg>
                                        Optional "sep"
                                        expression (lib/location.ml[532,17531+33]..lib/location.ml[532,17531+36])
                                          Texp_construct "Some"
                                          [
                                            expression (lib/location.ml[532,17531+33]..lib/location.ml[532,17531+36])
                                              Texp_constant Const_string("|",(lib/location.ml[532,17531+34]..lib/location.ml[532,17531+35]),None)
                                          ]
                                      <arg>
                                        Optional "max_lines"
                                        expression (lib/location.ml[532,17531+38]..lib/location.ml[532,17531+47])
                                          Texp_construct "Some"
                                          [
                                            expression (lib/location.ml[532,17531+38]..lib/location.ml[532,17531+47])
                                              Texp_ident "max_lines/1419"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[532,17531+48]..lib/location.ml[532,17531+51])
                                          Texp_ident "ppf/1417"
                                    ]
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[533,17583+11]..lib/location.ml[538,17811+15])
                                        Texp_apply
                                        expression (lib/location.ml[533,17583+11]..lib/location.ml[533,17583+19])
                                          Texp_ident "Stdlib!.List.map"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[533,17583+20]..lib/location.ml[538,17811+9])
                                              Texp_function
                                              [
                                                Nolabel
                                                Param_pat
                                                  pattern (lib/location.ml[533,17583+25]..lib/location.ml[533,17583+57])
                                                    Tpat_tuple
                                                    [
                                                      pattern (lib/location.ml[533,17583+26]..lib/location.ml[533,17583+30])
                                                        Tpat_var "line/1492"
                                                      pattern (lib/location.ml[533,17583+32]..lib/location.ml[533,17583+39])
                                                        Tpat_var "line_nb/1493"
                                                      pattern (lib/location.ml[533,17583+41]..lib/location.ml[533,17583+56])
                                                        Tpat_var "line_start_cnum/1494"
                                                    ]
                                              ]
                                              Tfunction_body
                                                expression (lib/location.ml[534,17644+10]..lib/location.ml[537,17785+25])
                                                  Texp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lib/location.ml[534,17644+14]..lib/location.ml[534,17644+18])
                                                        Tpat_var "line/1495"
                                                      expression (lib/location.ml[534,17644+21]..lib/location.ml[536,17765+16])
                                                        Texp_apply
                                                        expression (lib/location.ml[534,17644+21]..lib/location.ml[534,17644+32])
                                                          Texp_ident "Stdlib!.String.mapi"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[534,17644+33]..lib/location.ml[536,17765+11])
                                                              Texp_function
                                                              [
                                                                Nolabel
                                                                Param_pat
                                                                  pattern (lib/location.ml[534,17644+38]..lib/location.ml[534,17644+39])
                                                                    Tpat_var "i/1496"
                                                                Nolabel
                                                                Param_pat
                                                                  pattern (lib/location.ml[534,17644+40]..lib/location.ml[534,17644+43])
                                                                    Tpat_var "car/1497"
                                                              ]
                                                              Tfunction_body
                                                                expression (lib/location.ml[535,17691+12]..lib/location.ml[535,17691+73])
                                                                  Texp_ifthenelse
                                                                  expression (lib/location.ml[535,17691+15]..lib/location.ml[535,17691+55])
                                                                    Texp_apply
                                                                    expression (lib/location.ml[535,17691+15]..lib/location.ml[535,17691+23])
                                                                      Texp_ident "ISet/1279.mem"
                                                                    [
                                                                      <arg>
                                                                        Nolabel
                                                                        expression (lib/location.ml[535,17691+24]..lib/location.ml[535,17691+28])
                                                                          Texp_ident "iset/1422"
                                                                      <arg>
                                                                        Labelled "pos"
                                                                        expression (lib/location.ml[535,17691+34]..lib/location.ml[535,17691+55])
                                                                          Texp_apply
                                                                          expression (lib/location.ml[535,17691+51]..lib/location.ml[535,17691+52])
                                                                            Texp_ident "Stdlib!.+"
                                                                          [
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/location.ml[535,17691+35]..lib/location.ml[535,17691+50])
                                                                                Texp_ident "line_start_cnum/1494"
                                                                            <arg>
                                                                              Nolabel
                                                                              expression (lib/location.ml[535,17691+53]..lib/location.ml[535,17691+54])
                                                                                Texp_ident "i/1496"
                                                                          ]
                                                                    ]
                                                                  expression (lib/location.ml[535,17691+61]..lib/location.ml[535,17691+64])
                                                                    Texp_ident "car/1497"
                                                                  Some
                                                                    expression (lib/location.ml[535,17691+70]..lib/location.ml[535,17691+73])
                                                                      Texp_constant Const_char 2e
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[536,17765+12]..lib/location.ml[536,17765+16])
                                                              Texp_ident "line/1492"
                                                        ]
                                                  ]
                                                  expression (lib/location.ml[537,17785+10]..lib/location.ml[537,17785+25])
                                                    Texp_tuple
                                                    [
                                                      expression (lib/location.ml[537,17785+11]..lib/location.ml[537,17785+18])
                                                        Texp_ident "line_nb/1493"
                                                      expression (lib/location.ml[537,17785+20]..lib/location.ml[537,17785+24])
                                                        Texp_ident "line/1495"
                                                    ]
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[538,17811+10]..lib/location.ml[538,17811+15])
                                              Texp_ident "lines/1428"
                                        ]
                                  ]
                            ]
                          expression (lib/location.ml[540,17836+4]..lib/location.ml[540,17836+27])
                            Texp_apply
                            expression (lib/location.ml[540,17836+4]..lib/location.ml[540,17836+18])
                              Texp_ident "Stdlib!.Format.fprintf"
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[540,17836+19]..lib/location.ml[540,17836+22])
                                  Texp_ident "ppf/1417"
                              <arg>
                                Nolabel
                                expression (lib/location.ml[540,17836+23]..lib/location.ml[540,17836+27])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (lib/location.ml[540,17836+23]..lib/location.ml[540,17836+27]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                      [
                                        expression (lib/location.ml[540,17836+23]..lib/location.ml[540,17836+27]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Close_box"
                                          []
                                        expression (lib/location.ml[540,17836+23]..lib/location.ml[540,17836+27]) ghost
                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                          []
                                      ]
                                    expression (lib/location.ml[540,17836+23]..lib/location.ml[540,17836+27]) ghost
                                      Texp_constant Const_string("@]",(lib/location.ml[540,17836+23]..lib/location.ml[540,17836+27]) ghost,None)
                                  ]
                            ]
                ]
    ]
  structure_item (lib/location.ml[544,17867+0]..lib/location.ml[579,18738+17])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[544,17867+4]..lib/location.ml[544,17867+16])
          Tpat_var "lines_around/1500"
        expression (lib/location.ml[545,17884+4]..lib/location.ml[579,18738+17]) ghost
          Texp_function
          [
            Labelled "start_pos"
            Param_pat
              pattern (lib/location.ml[545,17884+6]..lib/location.ml[545,17884+15])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[545,17884+17]..lib/location.ml[545,17884+25])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
                Tpat_alias "start_pos/1502"
                pattern (lib/location.ml[545,17884+6]..lib/location.ml[545,17884+15])
                  Tpat_any
            Labelled "end_pos"
            Param_pat
              pattern (lib/location.ml[545,17884+29]..lib/location.ml[545,17884+36])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[545,17884+38]..lib/location.ml[545,17884+46])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
                Tpat_alias "end_pos/1503"
                pattern (lib/location.ml[545,17884+29]..lib/location.ml[545,17884+36])
                  Tpat_any
            Labelled "seek"
            Param_pat
              pattern (lib/location.ml[546,17932+6]..lib/location.ml[546,17932+10])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[546,17932+12]..lib/location.ml[546,17932+23])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/location.ml[546,17932+12]..lib/location.ml[546,17932+15])
                      Ttyp_constr "int/1!"
                      []
                    core_type (lib/location.ml[546,17932+19]..lib/location.ml[546,17932+23])
                      Ttyp_constr "unit/6!"
                      []
                Tpat_alias "seek/1504"
                pattern (lib/location.ml[546,17932+6]..lib/location.ml[546,17932+10])
                  Tpat_any
            Labelled "read_char"
            Param_pat
              pattern (lib/location.ml[547,17957+6]..lib/location.ml[547,17957+15])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[547,17957+17]..lib/location.ml[547,17957+36])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/location.ml[547,17957+17]..lib/location.ml[547,17957+21])
                      Ttyp_constr "unit/6!"
                      []
                    core_type (lib/location.ml[547,17957+25]..lib/location.ml[547,17957+36])
                      Ttyp_constr "option/10!"
                      [
                        core_type (lib/location.ml[547,17957+25]..lib/location.ml[547,17957+29])
                          Ttyp_constr "char/2!"
                          []
                      ]
                Tpat_alias "read_char/1505"
                pattern (lib/location.ml[547,17957+6]..lib/location.ml[547,17957+15])
                  Tpat_any
          ]
          Tfunction_body
            expression (lib/location.ml[550,18018+2]..lib/location.ml[579,18738+17])
              extra
                Texp_constraint
                core_type (lib/location.ml[548,17996+2]..lib/location.ml[548,17996+17])
                  Ttyp_constr "list/9!"
                  [
                    core_type (lib/location.ml[548,17996+2]..lib/location.ml[548,17996+12])
                      Ttyp_constr "input_line/1394"
                      []
                  ]
              Texp_sequence
              expression (lib/location.ml[550,18018+2]..lib/location.ml[550,18018+24])
                Texp_apply
                expression (lib/location.ml[550,18018+2]..lib/location.ml[550,18018+6])
                  Texp_ident "seek/1504"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[550,18018+7]..lib/location.ml[550,18018+24])
                      Texp_field
                      expression (lib/location.ml[550,18018+7]..lib/location.ml[550,18018+16])
                        Texp_ident "start_pos/1502"
                      "pos_bol"
                ]
              expression (lib/location.ml[551,18044+2]..lib/location.ml[579,18738+17])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[551,18044+6]..lib/location.ml[551,18044+11])
                      Tpat_var "lines/1506"
                    expression (lib/location.ml[551,18044+14]..lib/location.ml[551,18044+20])
                      Texp_apply
                      expression (lib/location.ml[551,18044+14]..lib/location.ml[551,18044+17])
                        Texp_ident "Stdlib!.ref"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[551,18044+18]..lib/location.ml[551,18044+20])
                            Texp_construct "[]"
                            []
                      ]
                ]
                expression (lib/location.ml[552,18068+2]..lib/location.ml[579,18738+17])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/location.ml[552,18068+6]..lib/location.ml[552,18068+9])
                        Tpat_var "bol/1507"
                      expression (lib/location.ml[552,18068+12]..lib/location.ml[552,18068+33])
                        Texp_apply
                        expression (lib/location.ml[552,18068+12]..lib/location.ml[552,18068+15])
                          Texp_ident "Stdlib!.ref"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[552,18068+16]..lib/location.ml[552,18068+33])
                              Texp_field
                              expression (lib/location.ml[552,18068+16]..lib/location.ml[552,18068+25])
                                Texp_ident "start_pos/1502"
                              "pos_bol"
                        ]
                  ]
                  expression (lib/location.ml[553,18105+2]..lib/location.ml[579,18738+17])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/location.ml[553,18105+6]..lib/location.ml[553,18105+9])
                          Tpat_var "cur/1508"
                        expression (lib/location.ml[553,18105+12]..lib/location.ml[553,18105+33])
                          Texp_apply
                          expression (lib/location.ml[553,18105+12]..lib/location.ml[553,18105+15])
                            Texp_ident "Stdlib!.ref"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[553,18105+16]..lib/location.ml[553,18105+33])
                                Texp_field
                                expression (lib/location.ml[553,18105+16]..lib/location.ml[553,18105+25])
                                  Texp_ident "start_pos/1502"
                                "pos_bol"
                          ]
                    ]
                    expression (lib/location.ml[554,18142+2]..lib/location.ml[579,18738+17])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/location.ml[554,18142+6]..lib/location.ml[554,18142+7])
                            Tpat_var "b/1509"
                          expression (lib/location.ml[554,18142+10]..lib/location.ml[554,18142+26])
                            Texp_apply
                            expression (lib/location.ml[554,18142+10]..lib/location.ml[554,18142+23])
                              Texp_ident "Stdlib!.Buffer.create"
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[554,18142+24]..lib/location.ml[554,18142+26])
                                  Texp_constant Const_int 80
                            ]
                      ]
                      expression (lib/location.ml[555,18172+2]..lib/location.ml[579,18738+17])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/location.ml[555,18172+6]..lib/location.ml[555,18172+14])
                              Tpat_var "add_line/1551"
                            expression (lib/location.ml[555,18172+15]..lib/location.ml[561,18353+7]) ghost
                              Texp_function
                              [
                                Nolabel
                                Param_pat
                                  pattern (lib/location.ml[555,18172+15]..lib/location.ml[555,18172+17])
                                    Tpat_construct "()"
                                    []
                                    None
                              ]
                              Tfunction_body
                                expression (lib/location.ml[556,18192+4]..lib/location.ml[561,18353+7])
                                  Texp_ifthenelse
                                  expression (lib/location.ml[556,18192+7]..lib/location.ml[556,18192+18])
                                    Texp_apply
                                    expression (lib/location.ml[556,18192+12]..lib/location.ml[556,18192+13])
                                      Texp_ident "Stdlib!.<"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[556,18192+7]..lib/location.ml[556,18192+11])
                                          Texp_apply
                                          expression (lib/location.ml[556,18192+7]..lib/location.ml[556,18192+8])
                                            Texp_ident "Stdlib!.!"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[556,18192+8]..lib/location.ml[556,18192+11])
                                                Texp_ident "bol/1507"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[556,18192+14]..lib/location.ml[556,18192+18])
                                          Texp_apply
                                          expression (lib/location.ml[556,18192+14]..lib/location.ml[556,18192+15])
                                            Texp_ident "Stdlib!.!"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[556,18192+15]..lib/location.ml[556,18192+18])
                                                Texp_ident "cur/1508"
                                          ]
                                    ]
                                  expression (lib/location.ml[556,18192+24]..lib/location.ml[561,18353+7])
                                    Texp_let Nonrec
                                    [
                                      <def>
                                        pattern (lib/location.ml[557,18222+10]..lib/location.ml[557,18222+14])
                                          Tpat_var "text/1553"
                                        expression (lib/location.ml[557,18222+17]..lib/location.ml[557,18222+34])
                                          Texp_apply
                                          expression (lib/location.ml[557,18222+17]..lib/location.ml[557,18222+32])
                                            Texp_ident "Stdlib!.Buffer.contents"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[557,18222+33]..lib/location.ml[557,18222+34])
                                                Texp_ident "b/1509"
                                          ]
                                    ]
                                    expression (lib/location.ml[558,18260+6]..lib/location.ml[560,18335+17])
                                      Texp_sequence
                                      expression (lib/location.ml[558,18260+6]..lib/location.ml[558,18260+20])
                                        Texp_apply
                                        expression (lib/location.ml[558,18260+6]..lib/location.ml[558,18260+18])
                                          Texp_ident "Stdlib!.Buffer.clear"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[558,18260+19]..lib/location.ml[558,18260+20])
                                              Texp_ident "b/1509"
                                        ]
                                      expression (lib/location.ml[559,18282+6]..lib/location.ml[560,18335+17])
                                        Texp_sequence
                                        expression (lib/location.ml[559,18282+6]..lib/location.ml[559,18282+51])
                                          Texp_apply
                                          expression (lib/location.ml[559,18282+12]..lib/location.ml[559,18282+14])
                                            Texp_ident "Stdlib!.:="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[559,18282+6]..lib/location.ml[559,18282+11])
                                                Texp_ident "lines/1506"
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[559,18282+15]..lib/location.ml[559,18282+51])
                                                Texp_construct "::"
                                                [
                                                  expression (lib/location.ml[559,18282+15]..lib/location.ml[559,18282+41])
                                                    Texp_record
                                                      fields =
                                                        [
                                                          "text"
                                                            expression (lib/location.ml[559,18282+17]..lib/location.ml[559,18282+21])
                                                              Texp_ident "text/1553"
                                                          "start_pos"
                                                            expression (lib/location.ml[559,18282+35]..lib/location.ml[559,18282+39])
                                                              Texp_apply
                                                              expression (lib/location.ml[559,18282+35]..lib/location.ml[559,18282+36])
                                                                Texp_ident "Stdlib!.!"
                                                              [
                                                                <arg>
                                                                  Nolabel
                                                                  expression (lib/location.ml[559,18282+36]..lib/location.ml[559,18282+39])
                                                                    Texp_ident "bol/1507"
                                                              ]
                                                        ]
                                                      representation =
                                                        Record_regular
                                                      extended_expression =
                                                        None
                                                  expression (lib/location.ml[559,18282+45]..lib/location.ml[559,18282+51])
                                                    Texp_apply
                                                    expression (lib/location.ml[559,18282+45]..lib/location.ml[559,18282+46])
                                                      Texp_ident "Stdlib!.!"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/location.ml[559,18282+46]..lib/location.ml[559,18282+51])
                                                          Texp_ident "lines/1506"
                                                    ]
                                                ]
                                          ]
                                        expression (lib/location.ml[560,18335+6]..lib/location.ml[560,18335+17])
                                          Texp_apply
                                          expression (lib/location.ml[560,18335+10]..lib/location.ml[560,18335+12])
                                            Texp_ident "Stdlib!.:="
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[560,18335+6]..lib/location.ml[560,18335+9])
                                                Texp_ident "bol/1507"
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[560,18335+13]..lib/location.ml[560,18335+17])
                                                Texp_apply
                                                expression (lib/location.ml[560,18335+13]..lib/location.ml[560,18335+14])
                                                  Texp_ident "Stdlib!.!"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[560,18335+14]..lib/location.ml[560,18335+17])
                                                      Texp_ident "cur/1508"
                                                ]
                                          ]
                                  None
                        ]
                        expression (lib/location.ml[563,18366+2]..lib/location.ml[579,18738+17])
                          Texp_let Rec
                          [
                            <def>
                              pattern (lib/location.ml[563,18366+10]..lib/location.ml[563,18366+14])
                                Tpat_var "loop/1555"
                              expression (lib/location.ml[563,18366+15]..lib/location.ml[576,18714+7]) ghost
                                Texp_function
                                [
                                  Nolabel
                                  Param_pat
                                    pattern (lib/location.ml[563,18366+15]..lib/location.ml[563,18366+17])
                                      Tpat_construct "()"
                                      []
                                      None
                                ]
                                Tfunction_body
                                  expression (lib/location.ml[564,18386+4]..lib/location.ml[576,18714+7])
                                    Texp_ifthenelse
                                    expression (lib/location.ml[564,18386+7]..lib/location.ml[564,18386+31])
                                      Texp_apply
                                      expression (lib/location.ml[564,18386+12]..lib/location.ml[564,18386+14])
                                        Texp_ident "Stdlib!.>="
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[564,18386+7]..lib/location.ml[564,18386+11])
                                            Texp_apply
                                            expression (lib/location.ml[564,18386+7]..lib/location.ml[564,18386+8])
                                              Texp_ident "Stdlib!.!"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[564,18386+8]..lib/location.ml[564,18386+11])
                                                  Texp_ident "bol/1507"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[564,18386+15]..lib/location.ml[564,18386+31])
                                            Texp_field
                                            expression (lib/location.ml[564,18386+15]..lib/location.ml[564,18386+22])
                                              Texp_ident "end_pos/1503"
                                            "pos_cnum"
                                      ]
                                    expression (lib/location.ml[564,18386+37]..lib/location.ml[564,18386+39])
                                      Texp_construct "()"
                                      []
                                    Some
                                      expression (lib/location.ml[565,18426+9]..lib/location.ml[576,18714+7])
                                        Texp_match
                                        expression (lib/location.ml[566,18441+12]..lib/location.ml[566,18441+24])
                                          Texp_apply
                                          expression (lib/location.ml[566,18441+12]..lib/location.ml[566,18441+21])
                                            Texp_ident "read_char/1505"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[566,18441+22]..lib/location.ml[566,18441+24])
                                                Texp_construct "()"
                                                []
                                          ]
                                        [
                                          <case>
                                            pattern (lib/location.ml[567,18471+8]..lib/location.ml[567,18471+12])
                                              Tpat_value
                                              pattern (lib/location.ml[567,18471+8]..lib/location.ml[567,18471+12])
                                                Tpat_construct "None"
                                                []
                                                None
                                            expression (lib/location.ml[569,18516+10]..lib/location.ml[569,18516+21])
                                              Texp_apply
                                              expression (lib/location.ml[569,18516+10]..lib/location.ml[569,18516+18])
                                                Texp_ident "add_line/1551"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/location.ml[569,18516+19]..lib/location.ml[569,18516+21])
                                                    Texp_construct "()"
                                                    []
                                              ]
                                          <case>
                                            pattern (lib/location.ml[570,18538+8]..lib/location.ml[570,18538+14])
                                              Tpat_value
                                              pattern (lib/location.ml[570,18538+8]..lib/location.ml[570,18538+14])
                                                Tpat_construct "Some"
                                                [
                                                  pattern (lib/location.ml[570,18538+13]..lib/location.ml[570,18538+14])
                                                    Tpat_var "c/1556"
                                                ]
                                                None
                                            expression (lib/location.ml[571,18556+10]..lib/location.ml[575,18668+45])
                                              Texp_sequence
                                              expression (lib/location.ml[571,18556+10]..lib/location.ml[571,18556+18])
                                                Texp_apply
                                                expression (lib/location.ml[571,18556+10]..lib/location.ml[571,18556+14])
                                                  Texp_ident "Stdlib!.incr"
                                                [
                                                  <arg>
                                                    Nolabel
                                                    expression (lib/location.ml[571,18556+15]..lib/location.ml[571,18556+18])
                                                      Texp_ident "cur/1508"
                                                ]
                                              expression (lib/location.ml[572,18576+10]..lib/location.ml[575,18668+45])
                                                Texp_match
                                                expression (lib/location.ml[572,18576+16]..lib/location.ml[572,18576+17])
                                                  Texp_ident "c/1556"
                                                [
                                                  <case>
                                                    pattern (lib/location.ml[573,18599+12]..lib/location.ml[573,18599+16])
                                                      Tpat_value
                                                      pattern (lib/location.ml[573,18599+12]..lib/location.ml[573,18599+16])
                                                        Tpat_constant Const_char 0d
                                                    expression (lib/location.ml[573,18599+20]..lib/location.ml[573,18599+27])
                                                      Texp_apply
                                                      expression (lib/location.ml[573,18599+20]..lib/location.ml[573,18599+24])
                                                        Texp_ident "loop/1555"
                                                      [
                                                        <arg>
                                                          Nolabel
                                                          expression (lib/location.ml[573,18599+25]..lib/location.ml[573,18599+27])
                                                            Texp_construct "()"
                                                            []
                                                      ]
                                                  <case>
                                                    pattern (lib/location.ml[574,18627+12]..lib/location.ml[574,18627+16])
                                                      Tpat_value
                                                      pattern (lib/location.ml[574,18627+12]..lib/location.ml[574,18627+16])
                                                        Tpat_constant Const_char 0a
                                                    expression (lib/location.ml[574,18627+20]..lib/location.ml[574,18627+40])
                                                      Texp_sequence
                                                      expression (lib/location.ml[574,18627+20]..lib/location.ml[574,18627+31])
                                                        Texp_apply
                                                        expression (lib/location.ml[574,18627+20]..lib/location.ml[574,18627+28])
                                                          Texp_ident "add_line/1551"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[574,18627+29]..lib/location.ml[574,18627+31])
                                                              Texp_construct "()"
                                                              []
                                                        ]
                                                      expression (lib/location.ml[574,18627+33]..lib/location.ml[574,18627+40])
                                                        Texp_apply
                                                        expression (lib/location.ml[574,18627+33]..lib/location.ml[574,18627+37])
                                                          Texp_ident "loop/1555"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[574,18627+38]..lib/location.ml[574,18627+40])
                                                              Texp_construct "()"
                                                              []
                                                        ]
                                                  <case>
                                                    pattern (lib/location.ml[575,18668+12]..lib/location.ml[575,18668+13])
                                                      Tpat_value
                                                      pattern (lib/location.ml[575,18668+12]..lib/location.ml[575,18668+13])
                                                        Tpat_any
                                                    expression (lib/location.ml[575,18668+17]..lib/location.ml[575,18668+45])
                                                      Texp_sequence
                                                      expression (lib/location.ml[575,18668+17]..lib/location.ml[575,18668+36])
                                                        Texp_apply
                                                        expression (lib/location.ml[575,18668+17]..lib/location.ml[575,18668+32])
                                                          Texp_ident "Stdlib!.Buffer.add_char"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[575,18668+33]..lib/location.ml[575,18668+34])
                                                              Texp_ident "b/1509"
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[575,18668+35]..lib/location.ml[575,18668+36])
                                                              Texp_ident "c/1556"
                                                        ]
                                                      expression (lib/location.ml[575,18668+38]..lib/location.ml[575,18668+45])
                                                        Texp_apply
                                                        expression (lib/location.ml[575,18668+38]..lib/location.ml[575,18668+42])
                                                          Texp_ident "loop/1555"
                                                        [
                                                          <arg>
                                                            Nolabel
                                                            expression (lib/location.ml[575,18668+43]..lib/location.ml[575,18668+45])
                                                              Texp_construct "()"
                                                              []
                                                        ]
                                                ]
                                        ]
                          ]
                          expression (lib/location.ml[578,18727+2]..lib/location.ml[579,18738+17])
                            Texp_sequence
                            expression (lib/location.ml[578,18727+2]..lib/location.ml[578,18727+9])
                              Texp_apply
                              expression (lib/location.ml[578,18727+2]..lib/location.ml[578,18727+6])
                                Texp_ident "loop/1555"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[578,18727+7]..lib/location.ml[578,18727+9])
                                    Texp_construct "()"
                                    []
                              ]
                            expression (lib/location.ml[579,18738+2]..lib/location.ml[579,18738+17])
                              Texp_apply
                              expression (lib/location.ml[579,18738+2]..lib/location.ml[579,18738+10])
                                Texp_ident "Stdlib!.List.rev"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[579,18738+11]..lib/location.ml[579,18738+17])
                                    Texp_apply
                                    expression (lib/location.ml[579,18738+11]..lib/location.ml[579,18738+12])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[579,18738+12]..lib/location.ml[579,18738+17])
                                          Texp_ident "lines/1506"
                                    ]
                              ]
    ]
  structure_item (lib/location.ml[582,18808+0]..lib/location.ml[603,19536+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[582,18808+4]..lib/location.ml[582,18808+28])
          Tpat_var "lines_around_from_lexbuf/1558"
        expression (lib/location.ml[583,18837+4]..lib/location.ml[603,19536+5]) ghost
          Texp_function
          [
            Labelled "start_pos"
            Param_pat
              pattern (lib/location.ml[583,18837+6]..lib/location.ml[583,18837+15])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[583,18837+17]..lib/location.ml[583,18837+25])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
                Tpat_alias "start_pos/1560"
                pattern (lib/location.ml[583,18837+6]..lib/location.ml[583,18837+15])
                  Tpat_any
            Labelled "end_pos"
            Param_pat
              pattern (lib/location.ml[583,18837+29]..lib/location.ml[583,18837+36])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[583,18837+38]..lib/location.ml[583,18837+46])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
                Tpat_alias "end_pos/1561"
                pattern (lib/location.ml[583,18837+29]..lib/location.ml[583,18837+36])
                  Tpat_any
            Nolabel
            Param_pat
              pattern (lib/location.ml[584,18885+5]..lib/location.ml[584,18885+7])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[584,18885+9]..lib/location.ml[584,18885+15])
                    Ttyp_constr "Stdlib!.Lexing.lexbuf"
                    []
                Tpat_alias "lb/1562"
                pattern (lib/location.ml[584,18885+5]..lib/location.ml[584,18885+7])
                  Tpat_any
          ]
          Tfunction_body
            expression (lib/location.ml[588,19005+2]..lib/location.ml[603,19536+5])
              extra
                Texp_constraint
                core_type (lib/location.ml[585,18903+2]..lib/location.ml[585,18903+17])
                  Ttyp_constr "list/9!"
                  [
                    core_type (lib/location.ml[585,18903+2]..lib/location.ml[585,18903+12])
                      Ttyp_constr "input_line/1394"
                      []
                  ]
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/location.ml[588,19005+6]..lib/location.ml[588,19005+9])
                    Tpat_var "rel/1563"
                  expression (lib/location.ml[588,19005+10]..lib/location.ml[588,19005+32]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[588,19005+10]..lib/location.ml[588,19005+11])
                          Tpat_var "n/1565"
                    ]
                    Tfunction_body
                      expression (lib/location.ml[588,19005+14]..lib/location.ml[588,19005+32])
                        Texp_apply
                        expression (lib/location.ml[588,19005+16]..lib/location.ml[588,19005+17])
                          Texp_ident "Stdlib!.-"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[588,19005+14]..lib/location.ml[588,19005+15])
                              Texp_ident "n/1565"
                          <arg>
                            Nolabel
                            expression (lib/location.ml[588,19005+18]..lib/location.ml[588,19005+32])
                              Texp_field
                              expression (lib/location.ml[588,19005+18]..lib/location.ml[588,19005+20])
                                Texp_ident "lb/1562"
                              "lex_abs_pos"
                        ]
              ]
              expression (lib/location.ml[589,19041+2]..lib/location.ml[603,19536+5])
                Texp_ifthenelse
                expression (lib/location.ml[589,19041+5]..lib/location.ml[589,19041+30])
                  Texp_apply
                  expression (lib/location.ml[589,19041+27]..lib/location.ml[589,19041+28])
                    Texp_ident "Stdlib!.<"
                  [
                    <arg>
                      Nolabel
                      expression (lib/location.ml[589,19041+5]..lib/location.ml[589,19041+26])
                        Texp_apply
                        expression (lib/location.ml[589,19041+5]..lib/location.ml[589,19041+8])
                          Texp_ident "rel/1563"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[589,19041+9]..lib/location.ml[589,19041+26])
                              Texp_field
                              expression (lib/location.ml[589,19041+9]..lib/location.ml[589,19041+18])
                                Texp_ident "start_pos/1560"
                              "pos_bol"
                        ]
                    <arg>
                      Nolabel
                      expression (lib/location.ml[589,19041+29]..lib/location.ml[589,19041+30])
                        Texp_constant Const_int 0
                  ]
                expression (lib/location.ml[589,19041+36]..lib/location.ml[593,19206+5])
                  Texp_construct "[]"
                  []
                Some
                  expression (lib/location.ml[593,19206+11]..lib/location.ml[603,19536+5])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/location.ml[594,19223+8]..lib/location.ml[594,19223+11])
                          Tpat_var "pos/1566"
                        expression (lib/location.ml[594,19223+14]..lib/location.ml[594,19223+19])
                          Texp_apply
                          expression (lib/location.ml[594,19223+14]..lib/location.ml[594,19223+17])
                            Texp_ident "Stdlib!.ref"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[594,19223+18]..lib/location.ml[594,19223+19])
                                Texp_constant Const_int 0
                          ]
                    ]
                    expression (lib/location.ml[595,19270+4]..lib/location.ml[602,19482+53])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/location.ml[595,19270+8]..lib/location.ml[595,19270+12])
                            Tpat_var "seek/1567"
                          expression (lib/location.ml[595,19270+13]..lib/location.ml[595,19270+29]) ghost
                            Texp_function
                            [
                              Nolabel
                              Param_pat
                                pattern (lib/location.ml[595,19270+13]..lib/location.ml[595,19270+14])
                                  Tpat_var "n/1569"
                            ]
                            Tfunction_body
                              expression (lib/location.ml[595,19270+17]..lib/location.ml[595,19270+29])
                                Texp_apply
                                expression (lib/location.ml[595,19270+21]..lib/location.ml[595,19270+23])
                                  Texp_ident "Stdlib!.:="
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[595,19270+17]..lib/location.ml[595,19270+20])
                                      Texp_ident "pos/1566"
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[595,19270+24]..lib/location.ml[595,19270+29])
                                      Texp_apply
                                      expression (lib/location.ml[595,19270+24]..lib/location.ml[595,19270+27])
                                        Texp_ident "rel/1563"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[595,19270+28]..lib/location.ml[595,19270+29])
                                            Texp_ident "n/1569"
                                      ]
                                ]
                      ]
                      expression (lib/location.ml[596,19303+4]..lib/location.ml[602,19482+53])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/location.ml[596,19303+8]..lib/location.ml[596,19303+17])
                              Tpat_var "read_char/1570"
                            expression (lib/location.ml[596,19303+18]..lib/location.ml[600,19450+24]) ghost
                              Texp_function
                              [
                                Nolabel
                                Param_pat
                                  pattern (lib/location.ml[596,19303+18]..lib/location.ml[596,19303+20])
                                    Tpat_construct "()"
                                    []
                                    None
                              ]
                              Tfunction_body
                                expression (lib/location.ml[597,19326+6]..lib/location.ml[600,19450+24])
                                  Texp_ifthenelse
                                  expression (lib/location.ml[597,19326+9]..lib/location.ml[597,19326+34])
                                    Texp_apply
                                    expression (lib/location.ml[597,19326+14]..lib/location.ml[597,19326+16])
                                      Texp_ident "Stdlib!.>="
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[597,19326+9]..lib/location.ml[597,19326+13])
                                          Texp_apply
                                          expression (lib/location.ml[597,19326+9]..lib/location.ml[597,19326+10])
                                            Texp_ident "Stdlib!.!"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[597,19326+10]..lib/location.ml[597,19326+13])
                                                Texp_ident "pos/1566"
                                          ]
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[597,19326+17]..lib/location.ml[597,19326+34])
                                          Texp_field
                                          expression (lib/location.ml[597,19326+17]..lib/location.ml[597,19326+19])
                                            Texp_ident "lb/1562"
                                          "lex_buffer_len"
                                    ]
                                  expression (lib/location.ml[597,19326+60]..lib/location.ml[597,19326+64])
                                    Texp_construct "None"
                                    []
                                  Some
                                    expression (lib/location.ml[599,19402+8]..lib/location.ml[600,19450+24])
                                      Texp_let Nonrec
                                      [
                                        <def>
                                          pattern (lib/location.ml[599,19402+12]..lib/location.ml[599,19402+13])
                                            Tpat_var "c/1572"
                                          expression (lib/location.ml[599,19402+16]..lib/location.ml[599,19402+44])
                                            Texp_apply
                                            expression (lib/location.ml[599,19402+16]..lib/location.ml[599,19402+25])
                                              Texp_ident "Stdlib!.Bytes.get"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[599,19402+26]..lib/location.ml[599,19402+39])
                                                  Texp_field
                                                  expression (lib/location.ml[599,19402+26]..lib/location.ml[599,19402+28])
                                                    Texp_ident "lb/1562"
                                                  "lex_buffer"
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[599,19402+40]..lib/location.ml[599,19402+44])
                                                  Texp_apply
                                                  expression (lib/location.ml[599,19402+40]..lib/location.ml[599,19402+41])
                                                    Texp_ident "Stdlib!.!"
                                                  [
                                                    <arg>
                                                      Nolabel
                                                      expression (lib/location.ml[599,19402+41]..lib/location.ml[599,19402+44])
                                                        Texp_ident "pos/1566"
                                                  ]
                                            ]
                                      ]
                                      expression (lib/location.ml[600,19450+8]..lib/location.ml[600,19450+24])
                                        Texp_sequence
                                        expression (lib/location.ml[600,19450+8]..lib/location.ml[600,19450+16])
                                          Texp_apply
                                          expression (lib/location.ml[600,19450+8]..lib/location.ml[600,19450+12])
                                            Texp_ident "Stdlib!.incr"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/location.ml[600,19450+13]..lib/location.ml[600,19450+16])
                                                Texp_ident "pos/1566"
                                          ]
                                        expression (lib/location.ml[600,19450+18]..lib/location.ml[600,19450+24])
                                          Texp_construct "Some"
                                          [
                                            expression (lib/location.ml[600,19450+23]..lib/location.ml[600,19450+24])
                                              Texp_ident "c/1572"
                                          ]
                        ]
                        expression (lib/location.ml[602,19482+4]..lib/location.ml[602,19482+53])
                          Texp_apply
                          expression (lib/location.ml[602,19482+4]..lib/location.ml[602,19482+16])
                            Texp_ident "lines_around/1500"
                          [
                            <arg>
                              Labelled "start_pos"
                              expression (lib/location.ml[602,19482+18]..lib/location.ml[602,19482+27])
                                Texp_ident "start_pos/1560"
                            <arg>
                              Labelled "end_pos"
                              expression (lib/location.ml[602,19482+29]..lib/location.ml[602,19482+36])
                                Texp_ident "end_pos/1561"
                            <arg>
                              Labelled "seek"
                              expression (lib/location.ml[602,19482+38]..lib/location.ml[602,19482+42])
                                Texp_ident "seek/1567"
                            <arg>
                              Labelled "read_char"
                              expression (lib/location.ml[602,19482+44]..lib/location.ml[602,19482+53])
                                Texp_ident "read_char/1570"
                          ]
    ]
  structure_item (lib/location.ml[606,19593+0]..lib/location.ml[620,19913+51])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[606,19593+4]..lib/location.ml[606,19593+31])
          Tpat_var "lines_around_from_phrasebuf/1574"
        expression (lib/location.ml[607,19625+4]..lib/location.ml[620,19913+51]) ghost
          Texp_function
          [
            Labelled "start_pos"
            Param_pat
              pattern (lib/location.ml[607,19625+6]..lib/location.ml[607,19625+15])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[607,19625+17]..lib/location.ml[607,19625+25])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
                Tpat_alias "start_pos/1576"
                pattern (lib/location.ml[607,19625+6]..lib/location.ml[607,19625+15])
                  Tpat_any
            Labelled "end_pos"
            Param_pat
              pattern (lib/location.ml[607,19625+29]..lib/location.ml[607,19625+36])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[607,19625+38]..lib/location.ml[607,19625+46])
                    Ttyp_constr "Stdlib!.Lexing.position"
                    []
                Tpat_alias "end_pos/1577"
                pattern (lib/location.ml[607,19625+29]..lib/location.ml[607,19625+36])
                  Tpat_any
            Nolabel
            Param_pat
              pattern (lib/location.ml[608,19673+5]..lib/location.ml[608,19673+7])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[608,19673+9]..lib/location.ml[608,19673+17])
                    Ttyp_constr "Stdlib!.Buffer.t"
                    []
                Tpat_alias "pb/1578"
                pattern (lib/location.ml[608,19673+5]..lib/location.ml[608,19673+7])
                  Tpat_any
          ]
          Tfunction_body
            expression (lib/location.ml[611,19715+2]..lib/location.ml[620,19913+51])
              extra
                Texp_constraint
                core_type (lib/location.ml[609,19693+2]..lib/location.ml[609,19693+17])
                  Ttyp_constr "list/9!"
                  [
                    core_type (lib/location.ml[609,19693+2]..lib/location.ml[609,19693+12])
                      Ttyp_constr "input_line/1394"
                      []
                  ]
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/location.ml[611,19715+6]..lib/location.ml[611,19715+9])
                    Tpat_var "pos/1579"
                  expression (lib/location.ml[611,19715+12]..lib/location.ml[611,19715+17])
                    Texp_apply
                    expression (lib/location.ml[611,19715+12]..lib/location.ml[611,19715+15])
                      Texp_ident "Stdlib!.ref"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[611,19715+16]..lib/location.ml[611,19715+17])
                          Texp_constant Const_int 0
                    ]
              ]
              expression (lib/location.ml[612,19736+2]..lib/location.ml[620,19913+51])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[612,19736+6]..lib/location.ml[612,19736+10])
                      Tpat_var "seek/1580"
                    expression (lib/location.ml[612,19736+11]..lib/location.ml[612,19736+23]) ghost
                      Texp_function
                      [
                        Nolabel
                        Param_pat
                          pattern (lib/location.ml[612,19736+11]..lib/location.ml[612,19736+12])
                            Tpat_var "n/1582"
                      ]
                      Tfunction_body
                        expression (lib/location.ml[612,19736+15]..lib/location.ml[612,19736+23])
                          Texp_apply
                          expression (lib/location.ml[612,19736+19]..lib/location.ml[612,19736+21])
                            Texp_ident "Stdlib!.:="
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[612,19736+15]..lib/location.ml[612,19736+18])
                                Texp_ident "pos/1579"
                            <arg>
                              Nolabel
                              expression (lib/location.ml[612,19736+22]..lib/location.ml[612,19736+23])
                                Texp_ident "n/1582"
                          ]
                ]
                expression (lib/location.ml[613,19763+2]..lib/location.ml[620,19913+51])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/location.ml[613,19763+6]..lib/location.ml[613,19763+15])
                        Tpat_var "read_char/1583"
                      expression (lib/location.ml[613,19763+16]..lib/location.ml[618,19900+7]) ghost
                        Texp_function
                        [
                          Nolabel
                          Param_pat
                            pattern (lib/location.ml[613,19763+16]..lib/location.ml[613,19763+18])
                              Tpat_construct "()"
                              []
                              None
                        ]
                        Tfunction_body
                          expression (lib/location.ml[614,19784+4]..lib/location.ml[618,19900+7])
                            Texp_ifthenelse
                            expression (lib/location.ml[614,19784+7]..lib/location.ml[614,19784+31])
                              Texp_apply
                              expression (lib/location.ml[614,19784+12]..lib/location.ml[614,19784+14])
                                Texp_ident "Stdlib!.>="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[614,19784+7]..lib/location.ml[614,19784+11])
                                    Texp_apply
                                    expression (lib/location.ml[614,19784+7]..lib/location.ml[614,19784+8])
                                      Texp_ident "Stdlib!.!"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[614,19784+8]..lib/location.ml[614,19784+11])
                                          Texp_ident "pos/1579"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[614,19784+15]..lib/location.ml[614,19784+31])
                                    Texp_apply
                                    expression (lib/location.ml[614,19784+15]..lib/location.ml[614,19784+28])
                                      Texp_ident "Stdlib!.Buffer.length"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[614,19784+29]..lib/location.ml[614,19784+31])
                                          Texp_ident "pb/1578"
                                    ]
                              ]
                            expression (lib/location.ml[614,19784+37]..lib/location.ml[614,19784+41])
                              Texp_construct "None"
                              []
                            Some
                              expression (lib/location.ml[615,19826+9]..lib/location.ml[618,19900+7])
                                Texp_let Nonrec
                                [
                                  <def>
                                    pattern (lib/location.ml[616,19841+10]..lib/location.ml[616,19841+11])
                                      Tpat_var "c/1585"
                                    expression (lib/location.ml[616,19841+14]..lib/location.ml[616,19841+32])
                                      Texp_apply
                                      expression (lib/location.ml[616,19841+14]..lib/location.ml[616,19841+24])
                                        Texp_ident "Stdlib!.Buffer.nth"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[616,19841+25]..lib/location.ml[616,19841+27])
                                            Texp_ident "pb/1578"
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[616,19841+28]..lib/location.ml[616,19841+32])
                                            Texp_apply
                                            expression (lib/location.ml[616,19841+28]..lib/location.ml[616,19841+29])
                                              Texp_ident "Stdlib!.!"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[616,19841+29]..lib/location.ml[616,19841+32])
                                                  Texp_ident "pos/1579"
                                            ]
                                      ]
                                ]
                                expression (lib/location.ml[617,19877+6]..lib/location.ml[617,19877+22])
                                  Texp_sequence
                                  expression (lib/location.ml[617,19877+6]..lib/location.ml[617,19877+14])
                                    Texp_apply
                                    expression (lib/location.ml[617,19877+6]..lib/location.ml[617,19877+10])
                                      Texp_ident "Stdlib!.incr"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[617,19877+11]..lib/location.ml[617,19877+14])
                                          Texp_ident "pos/1579"
                                    ]
                                  expression (lib/location.ml[617,19877+16]..lib/location.ml[617,19877+22])
                                    Texp_construct "Some"
                                    [
                                      expression (lib/location.ml[617,19877+21]..lib/location.ml[617,19877+22])
                                        Texp_ident "c/1585"
                                    ]
                  ]
                  expression (lib/location.ml[620,19913+2]..lib/location.ml[620,19913+51])
                    Texp_apply
                    expression (lib/location.ml[620,19913+2]..lib/location.ml[620,19913+14])
                      Texp_ident "lines_around/1500"
                    [
                      <arg>
                        Labelled "start_pos"
                        expression (lib/location.ml[620,19913+16]..lib/location.ml[620,19913+25])
                          Texp_ident "start_pos/1576"
                      <arg>
                        Labelled "end_pos"
                        expression (lib/location.ml[620,19913+27]..lib/location.ml[620,19913+34])
                          Texp_ident "end_pos/1577"
                      <arg>
                        Labelled "seek"
                        expression (lib/location.ml[620,19913+36]..lib/location.ml[620,19913+40])
                          Texp_ident "seek/1580"
                      <arg>
                        Labelled "read_char"
                        expression (lib/location.ml[620,19913+42]..lib/location.ml[620,19913+51])
                          Texp_ident "read_char/1583"
                    ]
    ]
  structure_item (lib/location.ml[624,20055+0]..lib/location.ml[631,20359+8])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[624,20055+4]..lib/location.ml[624,20055+35])
          Tpat_var "lines_around_from_current_input/1587"
        expression (lib/location.ml[624,20055+36]..lib/location.ml[631,20359+8]) ghost
          Texp_function
          [
            Labelled "start_pos"
            Param_pat
              pattern (lib/location.ml[624,20055+37]..lib/location.ml[624,20055+46])
                Tpat_var "start_pos/1589"
            Labelled "end_pos"
            Param_pat
              pattern (lib/location.ml[624,20055+48]..lib/location.ml[624,20055+55])
                Tpat_var "end_pos/1590"
          ]
          Tfunction_body
            expression (lib/location.ml[625,20113+2]..lib/location.ml[631,20359+8])
              Texp_match
              expression (lib/location.ml[625,20113+8]..lib/location.ml[625,20113+56])
                Texp_tuple
                [
                  expression (lib/location.ml[625,20113+8]..lib/location.ml[625,20113+21])
                    Texp_apply
                    expression (lib/location.ml[625,20113+8]..lib/location.ml[625,20113+9])
                      Texp_ident "Stdlib!.!"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[625,20113+9]..lib/location.ml[625,20113+21])
                          Texp_ident "input_lexbuf/495"
                    ]
                  expression (lib/location.ml[625,20113+23]..lib/location.ml[625,20113+43])
                    Texp_apply
                    expression (lib/location.ml[625,20113+23]..lib/location.ml[625,20113+24])
                      Texp_ident "Stdlib!.!"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[625,20113+24]..lib/location.ml[625,20113+43])
                          Texp_ident "input_phrase_buffer/496"
                    ]
                  expression (lib/location.ml[625,20113+45]..lib/location.ml[625,20113+56])
                    Texp_apply
                    expression (lib/location.ml[625,20113+45]..lib/location.ml[625,20113+46])
                      Texp_ident "Stdlib!.!"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[625,20113+46]..lib/location.ml[625,20113+56])
                          Texp_ident "input_name/494"
                    ]
                ]
              [
                <case>
                  pattern (lib/location.ml[626,20175+4]..lib/location.ml[626,20175+30])
                    Tpat_value
                    pattern (lib/location.ml[626,20175+4]..lib/location.ml[626,20175+30])
                      Tpat_tuple
                      [
                        pattern (lib/location.ml[626,20175+4]..lib/location.ml[626,20175+5])
                          Tpat_any
                        pattern (lib/location.ml[626,20175+7]..lib/location.ml[626,20175+14])
                          Tpat_construct "Some"
                          [
                            pattern (lib/location.ml[626,20175+12]..lib/location.ml[626,20175+14])
                              Tpat_var "pb/1591"
                          ]
                          None
                        pattern (lib/location.ml[626,20175+16]..lib/location.ml[626,20175+30])
                          Tpat_constant Const_string("//toplevel//",(lib/location.ml[626,20175+17]..lib/location.ml[626,20175+29]),None)
                      ]
                  expression (lib/location.ml[627,20209+6]..lib/location.ml[627,20209+56])
                    Texp_apply
                    expression (lib/location.ml[627,20209+6]..lib/location.ml[627,20209+33])
                      Texp_ident "lines_around_from_phrasebuf/1574"
                    [
                      <arg>
                        Labelled "start_pos"
                        expression (lib/location.ml[627,20209+38]..lib/location.ml[627,20209+47])
                          Texp_ident "start_pos/1589"
                      <arg>
                        Labelled "end_pos"
                        expression (lib/location.ml[627,20209+49]..lib/location.ml[627,20209+56])
                          Texp_ident "end_pos/1590"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[627,20209+34]..lib/location.ml[627,20209+36])
                          Texp_ident "pb/1591"
                    ]
                <case>
                  pattern (lib/location.ml[628,20266+4]..lib/location.ml[628,20266+17])
                    Tpat_value
                    pattern (lib/location.ml[628,20266+4]..lib/location.ml[628,20266+17])
                      Tpat_tuple
                      [
                        pattern (lib/location.ml[628,20266+4]..lib/location.ml[628,20266+11])
                          Tpat_construct "Some"
                          [
                            pattern (lib/location.ml[628,20266+9]..lib/location.ml[628,20266+11])
                              Tpat_var "lb/1592"
                          ]
                          None
                        pattern (lib/location.ml[628,20266+13]..lib/location.ml[628,20266+14])
                          Tpat_any
                        pattern (lib/location.ml[628,20266+16]..lib/location.ml[628,20266+17])
                          Tpat_any
                      ]
                  expression (lib/location.ml[629,20287+6]..lib/location.ml[629,20287+53])
                    Texp_apply
                    expression (lib/location.ml[629,20287+6]..lib/location.ml[629,20287+30])
                      Texp_ident "lines_around_from_lexbuf/1558"
                    [
                      <arg>
                        Labelled "start_pos"
                        expression (lib/location.ml[629,20287+35]..lib/location.ml[629,20287+44])
                          Texp_ident "start_pos/1589"
                      <arg>
                        Labelled "end_pos"
                        expression (lib/location.ml[629,20287+46]..lib/location.ml[629,20287+53])
                          Texp_ident "end_pos/1590"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[629,20287+31]..lib/location.ml[629,20287+33])
                          Texp_ident "lb/1592"
                    ]
                <case>
                  pattern (lib/location.ml[630,20341+4]..lib/location.ml[630,20341+14])
                    Tpat_value
                    pattern (lib/location.ml[630,20341+4]..lib/location.ml[630,20341+14])
                      Tpat_tuple
                      [
                        pattern (lib/location.ml[630,20341+4]..lib/location.ml[630,20341+8])
                          Tpat_construct "None"
                          []
                          None
                        pattern (lib/location.ml[630,20341+10]..lib/location.ml[630,20341+11])
                          Tpat_any
                        pattern (lib/location.ml[630,20341+13]..lib/location.ml[630,20341+14])
                          Tpat_any
                      ]
                  expression (lib/location.ml[631,20359+6]..lib/location.ml[631,20359+8])
                    Texp_construct "[]"
                    []
              ]
    ]
  structure_item (lib/location.ml[636,20487+0]..lib/location.ml[636,20487+41])
    Tstr_type Rec
    [
      type_declaration msg/1593 (lib/location.ml[636,20487+0]..lib/location.ml[636,20487+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/location.ml[636,20487+11]..lib/location.ml[636,20487+41])
              Ttyp_constr "loc/484"
              [
                core_type (lib/location.ml[636,20487+12]..lib/location.ml[636,20487+36])
                  Ttyp_arrow
                  Nolabel
                  core_type (lib/location.ml[636,20487+12]..lib/location.ml[636,20487+28])
                    Ttyp_constr "Stdlib!.Format.formatter"
                    []
                  core_type (lib/location.ml[636,20487+32]..lib/location.ml[636,20487+36])
                    Ttyp_constr "unit/6!"
                    []
              ]
    ]
  structure_item (lib/location.ml[638,20530+0]..lib/location.ml[639,20558+47])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[638,20530+4]..lib/location.ml[638,20530+7])
          Tpat_var "msg/1594"
        expression (lib/location.ml[638,20530+8]..lib/location.ml[639,20558+47]) ghost
          Texp_function
          [
            Optional "loc"
            Param_optional_default
              pattern (lib/location.ml[638,20530+10]..lib/location.ml[638,20530+13])
                Tpat_var "loc/1596"
              expression (lib/location.ml[638,20530+16]..lib/location.ml[638,20530+20])
                Texp_ident "none/439"
            Nolabel
            Param_pat
              pattern (lib/location.ml[638,20530+22]..lib/location.ml[638,20530+25])
                Tpat_var "fmt/1597"
          ]
          Tfunction_body
            expression (lib/location.ml[639,20558+2]..lib/location.ml[639,20558+47])
              Texp_apply
              expression (lib/location.ml[639,20558+2]..lib/location.ml[639,20558+17])
                Texp_ident "Stdlib!.Format.kdprintf"
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[639,20558+18]..lib/location.ml[639,20558+43])
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[639,20558+23]..lib/location.ml[639,20558+26])
                          Tpat_var "txt/1598"
                    ]
                    Tfunction_body
                      expression (lib/location.ml[639,20558+30]..lib/location.ml[639,20558+42])
                        Texp_record
                          fields =
                            [
                              "txt"
                                expression (lib/location.ml[639,20558+37]..lib/location.ml[639,20558+40])
                                  Texp_ident "txt/1598"
                              "loc"
                                expression (lib/location.ml[639,20558+32]..lib/location.ml[639,20558+35])
                                  Texp_ident "loc/1596"
                            ]
                          representation =
                            Record_regular
                          extended_expression =
                            None
                <arg>
                  Nolabel
                  expression (lib/location.ml[639,20558+44]..lib/location.ml[639,20558+47])
                    Texp_ident "fmt/1597"
              ]
    ]
  structure_item (lib/location.ml[641,20607+0]..lib/location.ml[646,20737+35])
    Tstr_type Rec
    [
      type_declaration report_kind/1600 (lib/location.ml[641,20607+0]..lib/location.ml[646,20737+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/location.ml[642,20626+2]..lib/location.ml[642,20626+16])
                Report_error/1601
                []
                None
              (lib/location.ml[643,20643+2]..lib/location.ml[643,20643+28])
                Report_warning/1602
                [
                  core_type (lib/location.ml[643,20643+22]..lib/location.ml[643,20643+28])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/location.ml[644,20672+2]..lib/location.ml[644,20672+37])
                Report_warning_as_error/1603
                [
                  core_type (lib/location.ml[644,20672+31]..lib/location.ml[644,20672+37])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/location.ml[645,20710+2]..lib/location.ml[645,20710+26])
                Report_alert/1604
                [
                  core_type (lib/location.ml[645,20710+20]..lib/location.ml[645,20710+26])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/location.ml[646,20737+2]..lib/location.ml[646,20737+35])
                Report_alert_as_error/1605
                [
                  core_type (lib/location.ml[646,20737+29]..lib/location.ml[646,20737+35])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/location.ml[648,20774+0]..lib/location.ml[652,20844+1])
    Tstr_type Rec
    [
      type_declaration report/1606 (lib/location.ml[648,20774+0]..lib/location.ml[652,20844+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/location.ml[649,20790+2]..lib/location.ml[649,20790+21])
                Immutable
                kind/1607                core_type (lib/location.ml[649,20790+9]..lib/location.ml[649,20790+20])
                  Ttyp_poly
                  core_type (lib/location.ml[649,20790+9]..lib/location.ml[649,20790+20])
                    Ttyp_constr "report_kind/1600"
                    []
              (lib/location.ml[650,20812+2]..lib/location.ml[650,20812+13])
                Immutable
                main/1608                core_type (lib/location.ml[650,20812+9]..lib/location.ml[650,20812+12])
                  Ttyp_poly
                  core_type (lib/location.ml[650,20812+9]..lib/location.ml[650,20812+12])
                    Ttyp_constr "msg/1593"
                    []
              (lib/location.ml[651,20826+2]..lib/location.ml[651,20826+17])
                Immutable
                sub/1609                core_type (lib/location.ml[651,20826+8]..lib/location.ml[651,20826+16])
                  Ttyp_poly
                  core_type (lib/location.ml[651,20826+8]..lib/location.ml[651,20826+16])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/location.ml[651,20826+8]..lib/location.ml[651,20826+11])
                        Ttyp_constr "msg/1593"
                        []
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/location.ml[654,20847+0]..lib/location.ml[673,21587+1])
    Tstr_type Rec
    [
      type_declaration report_printer/1610 (lib/location.ml[654,20847+0]..lib/location.ml[673,21587+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/location.ml[656,20895+2]..lib/location.ml[657,20920+39])
                Immutable
                pp/1611                core_type (lib/location.ml[656,20895+7]..lib/location.ml[657,20920+38])
                  Ttyp_poly
                  core_type (lib/location.ml[656,20895+7]..lib/location.ml[657,20920+38])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/location.ml[656,20895+7]..lib/location.ml[656,20895+21])
                      Ttyp_constr "report_printer/1610"
                      []
                    core_type (lib/location.ml[657,20920+4]..lib/location.ml[657,20920+38])
                      Ttyp_arrow
                      Nolabel
                      core_type (lib/location.ml[657,20920+4]..lib/location.ml[657,20920+20])
                        Ttyp_constr "Stdlib!.Format.formatter"
                        []
                      core_type (lib/location.ml[657,20920+24]..lib/location.ml[657,20920+38])
                        Ttyp_arrow
                        Nolabel
                        core_type (lib/location.ml[657,20920+24]..lib/location.ml[657,20920+30])
                          Ttyp_constr "report/1606"
                          []
                        core_type (lib/location.ml[657,20920+34]..lib/location.ml[657,20920+38])
                          Ttyp_constr "unit/6!"
                          []
              (lib/location.ml[659,20961+2]..lib/location.ml[660,21008+44])
                Immutable
                pp_report_kind/1612                core_type (lib/location.ml[659,20961+19]..lib/location.ml[660,21008+43])
                  Ttyp_poly
                  core_type (lib/location.ml[659,20961+19]..lib/location.ml[660,21008+43])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/location.ml[659,20961+19]..lib/location.ml[659,20961+33])
                      Ttyp_constr "report_printer/1610"
                      []
                    core_type (lib/location.ml[659,20961+37]..lib/location.ml[660,21008+43])
                      Ttyp_arrow
                      Nolabel
                      core_type (lib/location.ml[659,20961+37]..lib/location.ml[659,20961+43])
                        Ttyp_constr "report/1606"
                        []
                      core_type (lib/location.ml[660,21008+4]..lib/location.ml[660,21008+43])
                        Ttyp_arrow
                        Nolabel
                        core_type (lib/location.ml[660,21008+4]..lib/location.ml[660,21008+20])
                          Ttyp_constr "Stdlib!.Format.formatter"
                          []
                        core_type (lib/location.ml[660,21008+24]..lib/location.ml[660,21008+43])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/location.ml[660,21008+24]..lib/location.ml[660,21008+35])
                            Ttyp_constr "report_kind/1600"
                            []
                          core_type (lib/location.ml[660,21008+39]..lib/location.ml[660,21008+43])
                            Ttyp_constr "unit/6!"
                            []
              (lib/location.ml[661,21053+2]..lib/location.ml[662,21097+34])
                Immutable
                pp_main_loc/1613                core_type (lib/location.ml[661,21053+16]..lib/location.ml[662,21097+33])
                  Ttyp_poly
                  core_type (lib/location.ml[661,21053+16]..lib/location.ml[662,21097+33])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/location.ml[661,21053+16]..lib/location.ml[661,21053+30])
                      Ttyp_constr "report_printer/1610"
                      []
                    core_type (lib/location.ml[661,21053+34]..lib/location.ml[662,21097+33])
                      Ttyp_arrow
                      Nolabel
                      core_type (lib/location.ml[661,21053+34]..lib/location.ml[661,21053+40])
                        Ttyp_constr "report/1606"
                        []
                      core_type (lib/location.ml[662,21097+4]..lib/location.ml[662,21097+33])
                        Ttyp_arrow
                        Nolabel
                        core_type (lib/location.ml[662,21097+4]..lib/location.ml[662,21097+20])
                          Ttyp_constr "Stdlib!.Format.formatter"
                          []
                        core_type (lib/location.ml[662,21097+24]..lib/location.ml[662,21097+33])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/location.ml[662,21097+24]..lib/location.ml[662,21097+25])
                            Ttyp_constr "t/320"
                            []
                          core_type (lib/location.ml[662,21097+29]..lib/location.ml[662,21097+33])
                            Ttyp_constr "unit/6!"
                            []
              (lib/location.ml[663,21132+2]..lib/location.ml[664,21176+59])
                Immutable
                pp_main_txt/1614                core_type (lib/location.ml[663,21132+16]..lib/location.ml[664,21176+58])
                  Ttyp_poly
                  core_type (lib/location.ml[663,21132+16]..lib/location.ml[664,21176+58])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/location.ml[663,21132+16]..lib/location.ml[663,21132+30])
                      Ttyp_constr "report_printer/1610"
                      []
                    core_type (lib/location.ml[663,21132+34]..lib/location.ml[664,21176+58])
                      Ttyp_arrow
                      Nolabel
                      core_type (lib/location.ml[663,21132+34]..lib/location.ml[663,21132+40])
                        Ttyp_constr "report/1606"
                        []
                      core_type (lib/location.ml[664,21176+4]..lib/location.ml[664,21176+58])
                        Ttyp_arrow
                        Nolabel
                        core_type (lib/location.ml[664,21176+4]..lib/location.ml[664,21176+20])
                          Ttyp_constr "Stdlib!.Format.formatter"
                          []
                        core_type (lib/location.ml[664,21176+24]..lib/location.ml[664,21176+58])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/location.ml[664,21176+25]..lib/location.ml[664,21176+49])
                            Ttyp_arrow
                            Nolabel
                            core_type (lib/location.ml[664,21176+25]..lib/location.ml[664,21176+41])
                              Ttyp_constr "Stdlib!.Format.formatter"
                              []
                            core_type (lib/location.ml[664,21176+45]..lib/location.ml[664,21176+49])
                              Ttyp_constr "unit/6!"
                              []
                          core_type (lib/location.ml[664,21176+54]..lib/location.ml[664,21176+58])
                            Ttyp_constr "unit/6!"
                            []
              (lib/location.ml[665,21236+2]..lib/location.ml[666,21279+41])
                Immutable
                pp_submsgs/1615                core_type (lib/location.ml[665,21236+15]..lib/location.ml[666,21279+40])
                  Ttyp_poly
                  core_type (lib/location.ml[665,21236+15]..lib/location.ml[666,21279+40])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/location.ml[665,21236+15]..lib/location.ml[665,21236+29])
                      Ttyp_constr "report_printer/1610"
                      []
                    core_type (lib/location.ml[665,21236+33]..lib/location.ml[666,21279+40])
                      Ttyp_arrow
                      Nolabel
                      core_type (lib/location.ml[665,21236+33]..lib/location.ml[665,21236+39])
                        Ttyp_constr "report/1606"
                        []
                      core_type (lib/location.ml[666,21279+4]..lib/location.ml[666,21279+40])
                        Ttyp_arrow
                        Nolabel
                        core_type (lib/location.ml[666,21279+4]..lib/location.ml[666,21279+20])
                          Ttyp_constr "Stdlib!.Format.formatter"
                          []
                        core_type (lib/location.ml[666,21279+24]..lib/location.ml[666,21279+40])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/location.ml[666,21279+24]..lib/location.ml[666,21279+32])
                            Ttyp_constr "list/9!"
                            [
                              core_type (lib/location.ml[666,21279+24]..lib/location.ml[666,21279+27])
                                Ttyp_constr "msg/1593"
                                []
                            ]
                          core_type (lib/location.ml[666,21279+36]..lib/location.ml[666,21279+40])
                            Ttyp_constr "unit/6!"
                            []
              (lib/location.ml[667,21321+2]..lib/location.ml[668,21363+36])
                Immutable
                pp_submsg/1616                core_type (lib/location.ml[667,21321+14]..lib/location.ml[668,21363+35])
                  Ttyp_poly
                  core_type (lib/location.ml[667,21321+14]..lib/location.ml[668,21363+35])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/location.ml[667,21321+14]..lib/location.ml[667,21321+28])
                      Ttyp_constr "report_printer/1610"
                      []
                    core_type (lib/location.ml[667,21321+32]..lib/location.ml[668,21363+35])
                      Ttyp_arrow
                      Nolabel
                      core_type (lib/location.ml[667,21321+32]..lib/location.ml[667,21321+38])
                        Ttyp_constr "report/1606"
                        []
                      core_type (lib/location.ml[668,21363+4]..lib/location.ml[668,21363+35])
                        Ttyp_arrow
                        Nolabel
                        core_type (lib/location.ml[668,21363+4]..lib/location.ml[668,21363+20])
                          Ttyp_constr "Stdlib!.Format.formatter"
                          []
                        core_type (lib/location.ml[668,21363+24]..lib/location.ml[668,21363+35])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/location.ml[668,21363+24]..lib/location.ml[668,21363+27])
                            Ttyp_constr "msg/1593"
                            []
                          core_type (lib/location.ml[668,21363+31]..lib/location.ml[668,21363+35])
                            Ttyp_constr "unit/6!"
                            []
              (lib/location.ml[669,21400+2]..lib/location.ml[670,21446+34])
                Immutable
                pp_submsg_loc/1617                core_type (lib/location.ml[669,21400+18]..lib/location.ml[670,21446+33])
                  Ttyp_poly
                  core_type (lib/location.ml[669,21400+18]..lib/location.ml[670,21446+33])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/location.ml[669,21400+18]..lib/location.ml[669,21400+32])
                      Ttyp_constr "report_printer/1610"
                      []
                    core_type (lib/location.ml[669,21400+36]..lib/location.ml[670,21446+33])
                      Ttyp_arrow
                      Nolabel
                      core_type (lib/location.ml[669,21400+36]..lib/location.ml[669,21400+42])
                        Ttyp_constr "report/1606"
                        []
                      core_type (lib/location.ml[670,21446+4]..lib/location.ml[670,21446+33])
                        Ttyp_arrow
                        Nolabel
                        core_type (lib/location.ml[670,21446+4]..lib/location.ml[670,21446+20])
                          Ttyp_constr "Stdlib!.Format.formatter"
                          []
                        core_type (lib/location.ml[670,21446+24]..lib/location.ml[670,21446+33])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/location.ml[670,21446+24]..lib/location.ml[670,21446+25])
                            Ttyp_constr "t/320"
                            []
                          core_type (lib/location.ml[670,21446+29]..lib/location.ml[670,21446+33])
                            Ttyp_constr "unit/6!"
                            []
              (lib/location.ml[671,21481+2]..lib/location.ml[672,21527+59])
                Immutable
                pp_submsg_txt/1618                core_type (lib/location.ml[671,21481+18]..lib/location.ml[672,21527+58])
                  Ttyp_poly
                  core_type (lib/location.ml[671,21481+18]..lib/location.ml[672,21527+58])
                    Ttyp_arrow
                    Nolabel
                    core_type (lib/location.ml[671,21481+18]..lib/location.ml[671,21481+32])
                      Ttyp_constr "report_printer/1610"
                      []
                    core_type (lib/location.ml[671,21481+36]..lib/location.ml[672,21527+58])
                      Ttyp_arrow
                      Nolabel
                      core_type (lib/location.ml[671,21481+36]..lib/location.ml[671,21481+42])
                        Ttyp_constr "report/1606"
                        []
                      core_type (lib/location.ml[672,21527+4]..lib/location.ml[672,21527+58])
                        Ttyp_arrow
                        Nolabel
                        core_type (lib/location.ml[672,21527+4]..lib/location.ml[672,21527+20])
                          Ttyp_constr "Stdlib!.Format.formatter"
                          []
                        core_type (lib/location.ml[672,21527+24]..lib/location.ml[672,21527+58])
                          Ttyp_arrow
                          Nolabel
                          core_type (lib/location.ml[672,21527+25]..lib/location.ml[672,21527+49])
                            Ttyp_arrow
                            Nolabel
                            core_type (lib/location.ml[672,21527+25]..lib/location.ml[672,21527+41])
                              Ttyp_constr "Stdlib!.Format.formatter"
                              []
                            core_type (lib/location.ml[672,21527+45]..lib/location.ml[672,21527+49])
                              Ttyp_constr "unit/6!"
                              []
                          core_type (lib/location.ml[672,21527+54]..lib/location.ml[672,21527+58])
                            Ttyp_constr "unit/6!"
                            []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/location.ml[675,21590+0]..lib/location.ml[681,21943+58])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[675,21590+4]..lib/location.ml[675,21590+16])
          Tpat_var "is_dummy_loc/1619"
        expression (lib/location.ml[675,21590+17]..lib/location.ml[681,21943+58]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[675,21590+17]..lib/location.ml[675,21590+20])
                Tpat_var "loc/1621"
          ]
          Tfunction_body
            expression (lib/location.ml[681,21943+2]..lib/location.ml[681,21943+58])
              Texp_apply
              expression (lib/location.ml[681,21943+30]..lib/location.ml[681,21943+32])
                Texp_ident "Stdlib!.||"
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[681,21943+2]..lib/location.ml[681,21943+29])
                    Texp_apply
                    expression (lib/location.ml[681,21943+25]..lib/location.ml[681,21943+26])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[681,21943+2]..lib/location.ml[681,21943+24])
                          Texp_field
                          expression (lib/location.ml[681,21943+2]..lib/location.ml[681,21943+15])
                            Texp_field
                            expression (lib/location.ml[681,21943+2]..lib/location.ml[681,21943+5])
                              Texp_ident "loc/1621"
                            "loc_start"
                          "pos_cnum"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[681,21943+27]..lib/location.ml[681,21943+29])
                          Texp_constant Const_int -1
                    ]
                <arg>
                  Nolabel
                  expression (lib/location.ml[681,21943+33]..lib/location.ml[681,21943+58])
                    Texp_apply
                    expression (lib/location.ml[681,21943+54]..lib/location.ml[681,21943+55])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[681,21943+33]..lib/location.ml[681,21943+53])
                          Texp_field
                          expression (lib/location.ml[681,21943+33]..lib/location.ml[681,21943+44])
                            Texp_field
                            expression (lib/location.ml[681,21943+33]..lib/location.ml[681,21943+36])
                              Texp_ident "loc/1621"
                            "loc_end"
                          "pos_cnum"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[681,21943+56]..lib/location.ml[681,21943+58])
                          Texp_constant Const_int -1
                    ]
              ]
    ]
  structure_item (lib/location.ml[699,22717+0]..lib/location.ml[702,22811+40])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[699,22717+4]..lib/location.ml[699,22717+19])
          Tpat_var "is_quotable_loc/1622"
        expression (lib/location.ml[699,22717+20]..lib/location.ml[702,22811+40]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[699,22717+20]..lib/location.ml[699,22717+23])
                Tpat_var "loc/1624"
          ]
          Tfunction_body
            expression (lib/location.ml[700,22743+2]..lib/location.ml[702,22811+40])
              Texp_apply
              expression (lib/location.ml[701,22768+2]..lib/location.ml[701,22768+4])
                Texp_ident "Stdlib!.&&"
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[700,22743+2]..lib/location.ml[700,22743+24])
                    Texp_apply
                    expression (lib/location.ml[700,22743+2]..lib/location.ml[700,22743+5])
                      Texp_ident "Stdlib!.not"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[700,22743+6]..lib/location.ml[700,22743+24])
                          Texp_apply
                          expression (lib/location.ml[700,22743+7]..lib/location.ml[700,22743+19])
                            Texp_ident "is_dummy_loc/1619"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[700,22743+20]..lib/location.ml[700,22743+23])
                                Texp_ident "loc/1624"
                          ]
                    ]
                <arg>
                  Nolabel
                  expression (lib/location.ml[701,22768+5]..lib/location.ml[702,22811+40])
                    Texp_apply
                    expression (lib/location.ml[702,22811+2]..lib/location.ml[702,22811+4])
                      Texp_ident "Stdlib!.&&"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[701,22768+5]..lib/location.ml[701,22768+42])
                          Texp_apply
                          expression (lib/location.ml[701,22768+29]..lib/location.ml[701,22768+30])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[701,22768+5]..lib/location.ml[701,22768+28])
                                Texp_field
                                expression (lib/location.ml[701,22768+5]..lib/location.ml[701,22768+18])
                                  Texp_field
                                  expression (lib/location.ml[701,22768+5]..lib/location.ml[701,22768+8])
                                    Texp_ident "loc/1624"
                                  "loc_start"
                                "pos_fname"
                            <arg>
                              Nolabel
                              expression (lib/location.ml[701,22768+31]..lib/location.ml[701,22768+42])
                                Texp_apply
                                expression (lib/location.ml[701,22768+31]..lib/location.ml[701,22768+32])
                                  Texp_ident "Stdlib!.!"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[701,22768+32]..lib/location.ml[701,22768+42])
                                      Texp_ident "input_name/494"
                                ]
                          ]
                      <arg>
                        Nolabel
                        expression (lib/location.ml[702,22811+5]..lib/location.ml[702,22811+40])
                          Texp_apply
                          expression (lib/location.ml[702,22811+27]..lib/location.ml[702,22811+28])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[702,22811+5]..lib/location.ml[702,22811+26])
                                Texp_field
                                expression (lib/location.ml[702,22811+5]..lib/location.ml[702,22811+16])
                                  Texp_field
                                  expression (lib/location.ml[702,22811+5]..lib/location.ml[702,22811+8])
                                    Texp_ident "loc/1624"
                                  "loc_end"
                                "pos_fname"
                            <arg>
                              Nolabel
                              expression (lib/location.ml[702,22811+29]..lib/location.ml[702,22811+40])
                                Texp_apply
                                expression (lib/location.ml[702,22811+29]..lib/location.ml[702,22811+30])
                                  Texp_ident "Stdlib!.!"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[702,22811+30]..lib/location.ml[702,22811+40])
                                      Texp_ident "input_name/494"
                                ]
                          ]
                    ]
              ]
    ]
  structure_item (lib/location.ml[826,27703+0]..lib/location.ml[826,27703+19])
    Tstr_type Rec
    [
      type_declaration error/1625 (lib/location.ml[826,27703+0]..lib/location.ml[826,27703+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/location.ml[826,27703+13]..lib/location.ml[826,27703+19])
              Ttyp_constr "report/1606"
              []
    ]
  structure_item (lib/location.ml[828,27724+0]..lib/location.ml[828,27724+28])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[828,27724+4]..lib/location.ml[828,27724+16])
          Tpat_var "report_error/1626"
        expression (lib/location.ml[828,27724+17]..lib/location.ml[828,27724+28]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[828,27724+17]..lib/location.ml[828,27724+20])
                Tpat_var "ppf/1628"
            Nolabel
            Param_pat
              pattern (lib/location.ml[828,27724+21]..lib/location.ml[828,27724+24])
                Tpat_var "err/1629"
          ]
          Tfunction_body
            expression (lib/location.ml[828,27724+26]..lib/location.ml[828,27724+28])
              Texp_construct "()"
              []
    ]
  structure_item (lib/location.ml[831,27783+0]..lib/location.ml[832,27809+51])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[831,27783+4]..lib/location.ml[831,27783+11])
          Tpat_var "mkerror/1630"
        expression (lib/location.ml[831,27783+12]..lib/location.ml[832,27809+51]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[831,27783+12]..lib/location.ml[831,27783+15])
                Tpat_var "loc/1632"
            Nolabel
            Param_pat
              pattern (lib/location.ml[831,27783+16]..lib/location.ml[831,27783+19])
                Tpat_var "sub/1633"
            Nolabel
            Param_pat
              pattern (lib/location.ml[831,27783+20]..lib/location.ml[831,27783+23])
                Tpat_var "txt/1634"
          ]
          Tfunction_body
            expression (lib/location.ml[832,27809+2]..lib/location.ml[832,27809+51])
              Texp_record
                fields =
                  [
                    "kind"
                      expression (lib/location.ml[832,27809+11]..lib/location.ml[832,27809+23])
                        Texp_construct "Report_error"
                        []
                    "main"
                      expression (lib/location.ml[832,27809+32]..lib/location.ml[832,27809+44])
                        Texp_record
                          fields =
                            [
                              "txt"
                                expression (lib/location.ml[832,27809+39]..lib/location.ml[832,27809+42])
                                  Texp_ident "txt/1634"
                              "loc"
                                expression (lib/location.ml[832,27809+34]..lib/location.ml[832,27809+37])
                                  Texp_ident "loc/1632"
                            ]
                          representation =
                            Record_regular
                          extended_expression =
                            None
                    "sub"
                      expression (lib/location.ml[832,27809+46]..lib/location.ml[832,27809+49])
                        Texp_ident "sub/1633"
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/location.ml[834,27862+0]..lib/location.ml[835,27901+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[834,27862+4]..lib/location.ml[834,27862+10])
          Tpat_var "errorf/1635"
        expression (lib/location.ml[834,27862+11]..lib/location.ml[835,27901+35]) ghost
          Texp_function
          [
            Optional "loc"
            Param_optional_default
              pattern (lib/location.ml[834,27862+13]..lib/location.ml[834,27862+16])
                Tpat_var "loc/1637"
              expression (lib/location.ml[834,27862+19]..lib/location.ml[834,27862+23])
                Texp_ident "none/439"
            Optional "sub"
            Param_optional_default
              pattern (lib/location.ml[834,27862+27]..lib/location.ml[834,27862+30])
                Tpat_var "sub/1638"
              expression (lib/location.ml[834,27862+33]..lib/location.ml[834,27862+35])
                Texp_construct "[]"
                []
          ]
          Tfunction_body
            expression (lib/location.ml[835,27901+2]..lib/location.ml[835,27901+35])
              Texp_apply
              expression (lib/location.ml[835,27901+2]..lib/location.ml[835,27901+17])
                Texp_ident "Stdlib!.Format.kdprintf"
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[835,27901+18]..lib/location.ml[835,27901+35])
                    Texp_apply
                    expression (lib/location.ml[835,27901+19]..lib/location.ml[835,27901+26])
                      Texp_ident "mkerror/1630"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[835,27901+27]..lib/location.ml[835,27901+30])
                          Texp_ident "loc/1637"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[835,27901+31]..lib/location.ml[835,27901+34])
                          Texp_ident "sub/1638"
                    ]
              ]
    ]
  structure_item (lib/location.ml[837,27938+0]..lib/location.ml[838,27984+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[837,27938+4]..lib/location.ml[837,27938+9])
          Tpat_var "error/1641"
        expression (lib/location.ml[837,27938+10]..lib/location.ml[838,27984+65]) ghost
          Texp_function
          [
            Optional "loc"
            Param_optional_default
              pattern (lib/location.ml[837,27938+12]..lib/location.ml[837,27938+15])
                Tpat_var "loc/1643"
              expression (lib/location.ml[837,27938+18]..lib/location.ml[837,27938+22])
                Texp_ident "none/439"
            Optional "sub"
            Param_optional_default
              pattern (lib/location.ml[837,27938+26]..lib/location.ml[837,27938+29])
                Tpat_var "sub/1644"
              expression (lib/location.ml[837,27938+32]..lib/location.ml[837,27938+34])
                Texp_construct "[]"
                []
            Nolabel
            Param_pat
              pattern (lib/location.ml[837,27938+36]..lib/location.ml[837,27938+43])
                Tpat_var "msg_str/1645"
          ]
          Tfunction_body
            expression (lib/location.ml[838,27984+2]..lib/location.ml[838,27984+65])
              Texp_apply
              expression (lib/location.ml[838,27984+2]..lib/location.ml[838,27984+9])
                Texp_ident "mkerror/1630"
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[838,27984+10]..lib/location.ml[838,27984+13])
                    Texp_ident "loc/1643"
                <arg>
                  Nolabel
                  expression (lib/location.ml[838,27984+14]..lib/location.ml[838,27984+17])
                    Texp_ident "sub/1644"
                <arg>
                  Nolabel
                  expression (lib/location.ml[838,27984+18]..lib/location.ml[838,27984+65])
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[838,27984+23]..lib/location.ml[838,27984+26])
                          Tpat_var "ppf/1646"
                    ]
                    Tfunction_body
                      expression (lib/location.ml[838,27984+30]..lib/location.ml[838,27984+64])
                        Texp_apply
                        expression (lib/location.ml[838,27984+30]..lib/location.ml[838,27984+52])
                          Texp_ident "Stdlib!.Format.pp_print_string"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[838,27984+53]..lib/location.ml[838,27984+56])
                              Texp_ident "ppf/1646"
                          <arg>
                            Nolabel
                            expression (lib/location.ml[838,27984+57]..lib/location.ml[838,27984+64])
                              Texp_ident "msg_str/1645"
                        ]
              ]
    ]
  structure_item (lib/location.ml[840,28051+0]..lib/location.ml[841,28105+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[840,28051+4]..lib/location.ml[840,28051+20])
          Tpat_var "error_of_printer/1649"
        expression (lib/location.ml[840,28051+21]..lib/location.ml[841,28105+39]) ghost
          Texp_function
          [
            Optional "loc"
            Param_optional_default
              pattern (lib/location.ml[840,28051+23]..lib/location.ml[840,28051+26])
                Tpat_var "loc/1651"
              expression (lib/location.ml[840,28051+29]..lib/location.ml[840,28051+33])
                Texp_ident "none/439"
            Optional "sub"
            Param_optional_default
              pattern (lib/location.ml[840,28051+37]..lib/location.ml[840,28051+40])
                Tpat_var "sub/1652"
              expression (lib/location.ml[840,28051+43]..lib/location.ml[840,28051+45])
                Texp_construct "[]"
                []
            Nolabel
            Param_pat
              pattern (lib/location.ml[840,28051+47]..lib/location.ml[840,28051+49])
                Tpat_var "pp/1653"
            Nolabel
            Param_pat
              pattern (lib/location.ml[840,28051+50]..lib/location.ml[840,28051+51])
                Tpat_var "x/1654"
          ]
          Tfunction_body
            expression (lib/location.ml[841,28105+2]..lib/location.ml[841,28105+39])
              Texp_apply
              expression (lib/location.ml[841,28105+2]..lib/location.ml[841,28105+9])
                Texp_ident "mkerror/1630"
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[841,28105+10]..lib/location.ml[841,28105+13])
                    Texp_ident "loc/1651"
                <arg>
                  Nolabel
                  expression (lib/location.ml[841,28105+14]..lib/location.ml[841,28105+17])
                    Texp_ident "sub/1652"
                <arg>
                  Nolabel
                  expression (lib/location.ml[841,28105+18]..lib/location.ml[841,28105+39])
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[841,28105+23]..lib/location.ml[841,28105+26])
                          Tpat_var "ppf/1655"
                    ]
                    Tfunction_body
                      expression (lib/location.ml[841,28105+30]..lib/location.ml[841,28105+38])
                        Texp_apply
                        expression (lib/location.ml[841,28105+30]..lib/location.ml[841,28105+32])
                          Texp_ident "pp/1653"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[841,28105+33]..lib/location.ml[841,28105+36])
                              Texp_ident "ppf/1655"
                          <arg>
                            Nolabel
                            expression (lib/location.ml[841,28105+37]..lib/location.ml[841,28105+38])
                              Texp_ident "x/1654"
                        ]
              ]
    ]
  structure_item (lib/location.ml[843,28146+0]..lib/location.ml[844,28182+53])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[843,28146+4]..lib/location.ml[843,28146+25])
          Tpat_var "error_of_printer_file/1658"
        expression (lib/location.ml[843,28146+26]..lib/location.ml[844,28182+53]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[843,28146+26]..lib/location.ml[843,28146+31])
                Tpat_var "print/1660"
            Nolabel
            Param_pat
              pattern (lib/location.ml[843,28146+32]..lib/location.ml[843,28146+33])
                Tpat_var "x/1661"
          ]
          Tfunction_body
            expression (lib/location.ml[844,28182+2]..lib/location.ml[844,28182+53])
              Texp_apply
              expression (lib/location.ml[844,28182+2]..lib/location.ml[844,28182+18])
                Texp_ident "error_of_printer/1649"
              [
                <arg>
                  Optional "loc"
                  expression (lib/location.ml[844,28182+24]..lib/location.ml[844,28182+45])
                    Texp_construct "Some"
                    [
                      expression (lib/location.ml[844,28182+24]..lib/location.ml[844,28182+45])
                        Texp_apply
                        expression (lib/location.ml[844,28182+25]..lib/location.ml[844,28182+32])
                          Texp_ident "in_file/438"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[844,28182+33]..lib/location.ml[844,28182+44])
                              Texp_apply
                              expression (lib/location.ml[844,28182+33]..lib/location.ml[844,28182+34])
                                Texp_ident "Stdlib!.!"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[844,28182+34]..lib/location.ml[844,28182+44])
                                    Texp_ident "input_name/494"
                              ]
                        ]
                    ]
                <arg>
                  Optional "sub"
                  expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                    Texp_construct "None"
                    []
                <arg>
                  Nolabel
                  expression (lib/location.ml[844,28182+46]..lib/location.ml[844,28182+51])
                    Texp_ident "print/1660"
                <arg>
                  Nolabel
                  expression (lib/location.ml[844,28182+52]..lib/location.ml[844,28182+53])
                    Texp_ident "x/1661"
              ]
    ]
  structure_item (lib/location.ml[850,28451+0]..lib/location.ml[860,28908+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[850,28451+4]..lib/location.ml[850,28451+34])
          Tpat_var "default_warning_alert_reporter/1662"
        expression (lib/location.ml[850,28451+35]..lib/location.ml[860,28908+30]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[850,28451+35]..lib/location.ml[850,28451+41])
                Tpat_var "report/1664"
            Nolabel
            Param_pat
              pattern (lib/location.ml[850,28451+42]..lib/location.ml[850,28451+44])
                Tpat_var "mk/1665"
            Nolabel
            Param_pat
              pattern (lib/location.ml[850,28451+46]..lib/location.ml[850,28451+49])
                extra
                  Tpat_extra_constraint
                  core_type (lib/location.ml[850,28451+51]..lib/location.ml[850,28451+52])
                    Ttyp_constr "t/320"
                    []
                Tpat_alias "loc/1666"
                pattern (lib/location.ml[850,28451+46]..lib/location.ml[850,28451+49])
                  Tpat_any
            Nolabel
            Param_pat
              pattern (lib/location.ml[850,28451+54]..lib/location.ml[850,28451+55])
                Tpat_var "w/1667"
          ]
          Tfunction_body
            expression (lib/location.ml[851,28525+2]..lib/location.ml[860,28908+30])
              extra
                Texp_constraint
                core_type (lib/location.ml[850,28451+58]..lib/location.ml[850,28451+71])
                  Ttyp_constr "option/10!"
                  [
                    core_type (lib/location.ml[850,28451+58]..lib/location.ml[850,28451+64])
                      Ttyp_constr "report/1606"
                      []
                  ]
              Texp_match
              expression (lib/location.ml[851,28525+8]..lib/location.ml[851,28525+16])
                Texp_apply
                expression (lib/location.ml[851,28525+8]..lib/location.ml[851,28525+14])
                  Texp_ident "report/1664"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[851,28525+15]..lib/location.ml[851,28525+16])
                      Texp_ident "w/1667"
                ]
              [
                <case>
                  pattern (lib/location.ml[852,28547+4]..lib/location.ml[852,28547+13])
                    Tpat_value
                    pattern (lib/location.ml[852,28547+4]..lib/location.ml[852,28547+13])
                      Tpat_variant "Inactive"
                      None
                  expression (lib/location.ml[852,28547+17]..lib/location.ml[852,28547+21])
                    Texp_construct "None"
                    []
                <case>
                  pattern (lib/location.ml[853,28569+4]..lib/location.ml[853,28569+56])
                    Tpat_value
                    pattern (lib/location.ml[853,28569+4]..lib/location.ml[853,28569+56])
                      Tpat_variant "Active"
                      Some
                        pattern (lib/location.ml[853,28569+12]..lib/location.ml[853,28569+56])
                          Tpat_record
                          [
                            "Warnings.id"
                              pattern (lib/location.ml[853,28569+14]..lib/location.ml[853,28569+25])
                                Tpat_var "id/1668"
                            "message"
                              pattern (lib/location.ml[853,28569+27]..lib/location.ml[853,28569+34])
                                Tpat_var "message/1669"
                            "is_error"
                              pattern (lib/location.ml[853,28569+36]..lib/location.ml[853,28569+44])
                                Tpat_var "is_error/1670"
                            "sub_locs"
                              pattern (lib/location.ml[853,28569+46]..lib/location.ml[853,28569+54])
                                Tpat_var "sub_locs/1671"
                          ]
                  expression (lib/location.ml[854,28629+6]..lib/location.ml[860,28908+30])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/location.ml[854,28629+10]..lib/location.ml[854,28629+20])
                          Tpat_var "msg_of_str/1672"
                        expression (lib/location.ml[854,28629+21]..lib/location.ml[854,28629+68]) ghost
                          Texp_function
                          [
                            Nolabel
                            Param_pat
                              pattern (lib/location.ml[854,28629+21]..lib/location.ml[854,28629+24])
                                Tpat_var "str/1674"
                          ]
                          Tfunction_body
                            expression (lib/location.ml[854,28629+27]..lib/location.ml[854,28629+68])
                              Texp_function
                              [
                                Nolabel
                                Param_pat
                                  pattern (lib/location.ml[854,28629+31]..lib/location.ml[854,28629+34])
                                    Tpat_var "ppf/1675"
                              ]
                              Tfunction_body
                                expression (lib/location.ml[854,28629+38]..lib/location.ml[854,28629+68])
                                  Texp_apply
                                  expression (lib/location.ml[854,28629+38]..lib/location.ml[854,28629+60])
                                    Texp_ident "Stdlib!.Format.pp_print_string"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[854,28629+61]..lib/location.ml[854,28629+64])
                                        Texp_ident "ppf/1675"
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[854,28629+65]..lib/location.ml[854,28629+68])
                                        Texp_ident "str/1674"
                                  ]
                    ]
                    expression (lib/location.ml[855,28701+6]..lib/location.ml[860,28908+30])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/location.ml[855,28701+10]..lib/location.ml[855,28701+14])
                            Tpat_var "kind/1676"
                          expression (lib/location.ml[855,28701+17]..lib/location.ml[855,28701+31])
                            Texp_apply
                            expression (lib/location.ml[855,28701+17]..lib/location.ml[855,28701+19])
                              Texp_ident "mk/1665"
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[855,28701+20]..lib/location.ml[855,28701+28])
                                  Texp_ident "is_error/1670"
                              <arg>
                                Nolabel
                                expression (lib/location.ml[855,28701+29]..lib/location.ml[855,28701+31])
                                  Texp_ident "id/1668"
                            ]
                      ]
                      expression (lib/location.ml[856,28736+6]..lib/location.ml[860,28908+30])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/location.ml[856,28736+10]..lib/location.ml[856,28736+14])
                              Tpat_var "main/1677"
                            expression (lib/location.ml[856,28736+17]..lib/location.ml[856,28736+50])
                              Texp_record
                                fields =
                                  [
                                    "txt"
                                      expression (lib/location.ml[856,28736+30]..lib/location.ml[856,28736+48])
                                        Texp_apply
                                        expression (lib/location.ml[856,28736+30]..lib/location.ml[856,28736+40])
                                          Texp_ident "msg_of_str/1672"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[856,28736+41]..lib/location.ml[856,28736+48])
                                              Texp_ident "message/1669"
                                        ]
                                    "loc"
                                      expression (lib/location.ml[856,28736+19]..lib/location.ml[856,28736+22])
                                        Texp_ident "loc/1666"
                                  ]
                                representation =
                                  Record_regular
                                extended_expression =
                                  None
                        ]
                        expression (lib/location.ml[857,28790+6]..lib/location.ml[860,28908+30])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/location.ml[857,28790+10]..lib/location.ml[857,28790+13])
                                Tpat_var "sub/1678"
                              expression (lib/location.ml[857,28790+16]..lib/location.ml[859,28888+16])
                                Texp_apply
                                expression (lib/location.ml[857,28790+16]..lib/location.ml[857,28790+24])
                                  Texp_ident "Stdlib!.List.map"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[857,28790+25]..lib/location.ml[859,28888+7])
                                      Texp_function
                                      [
                                        Nolabel
                                        Param_pat
                                          pattern (lib/location.ml[857,28790+30]..lib/location.ml[857,28790+48])
                                            Tpat_tuple
                                            [
                                              pattern (lib/location.ml[857,28790+31]..lib/location.ml[857,28790+34])
                                                Tpat_var "loc/1679"
                                              pattern (lib/location.ml[857,28790+36]..lib/location.ml[857,28790+47])
                                                Tpat_var "sub_message/1680"
                                            ]
                                      ]
                                      Tfunction_body
                                        expression (lib/location.ml[858,28842+8]..lib/location.ml[858,28842+45])
                                          Texp_record
                                            fields =
                                              [
                                                "txt"
                                                  expression (lib/location.ml[858,28842+21]..lib/location.ml[858,28842+43])
                                                    Texp_apply
                                                    expression (lib/location.ml[858,28842+21]..lib/location.ml[858,28842+31])
                                                      Texp_ident "msg_of_str/1672"
                                                    [
                                                      <arg>
                                                        Nolabel
                                                        expression (lib/location.ml[858,28842+32]..lib/location.ml[858,28842+43])
                                                          Texp_ident "sub_message/1680"
                                                    ]
                                                "loc"
                                                  expression (lib/location.ml[858,28842+10]..lib/location.ml[858,28842+13])
                                                    Texp_ident "loc/1679"
                                              ]
                                            representation =
                                              Record_regular
                                            extended_expression =
                                              None
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[859,28888+8]..lib/location.ml[859,28888+16])
                                      Texp_ident "sub_locs/1671"
                                ]
                          ]
                          expression (lib/location.ml[860,28908+6]..lib/location.ml[860,28908+30])
                            Texp_construct "Some"
                            [
                              expression (lib/location.ml[860,28908+11]..lib/location.ml[860,28908+30])
                                Texp_record
                                  fields =
                                    [
                                      "kind"
                                        expression (lib/location.ml[860,28908+13]..lib/location.ml[860,28908+17])
                                          Texp_ident "kind/1676"
                                      "main"
                                        expression (lib/location.ml[860,28908+19]..lib/location.ml[860,28908+23])
                                          Texp_ident "main/1677"
                                      "sub"
                                        expression (lib/location.ml[860,28908+25]..lib/location.ml[860,28908+28])
                                          Texp_ident "sub/1678"
                                    ]
                                  representation =
                                    Record_regular
                                  extended_expression =
                                    None
                            ]
              ]
    ]
  structure_item (lib/location.ml[863,28941+0]..lib/location.ml[869,29130+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[863,28941+4]..lib/location.ml[863,28941+28])
          Tpat_var "default_warning_reporter/1682"
        expression (lib/location.ml[864,28972+2]..lib/location.ml[869,29130+5])
          Texp_apply
          expression (lib/location.ml[864,28972+2]..lib/location.ml[864,28972+32])
            Texp_ident "default_warning_alert_reporter/1662"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[865,29005+4]..lib/location.ml[865,29005+19])
                Texp_ident "Ocaml_ocaml_types!.Warnings.report"
            <arg>
              Nolabel
              expression (lib/location.ml[866,29025+4]..lib/location.ml[869,29130+5])
                Texp_function
                [
                  Nolabel
                  Param_pat
                    pattern (lib/location.ml[866,29025+9]..lib/location.ml[866,29025+17])
                      Tpat_var "is_error/1683"
                  Nolabel
                  Param_pat
                    pattern (lib/location.ml[866,29025+18]..lib/location.ml[866,29025+20])
                      Tpat_var "id/1684"
                ]
                Tfunction_body
                  expression (lib/location.ml[867,29049+7]..lib/location.ml[868,29100+29])
                    Texp_ifthenelse
                    expression (lib/location.ml[867,29049+10]..lib/location.ml[867,29049+18])
                      Texp_ident "is_error/1683"
                    expression (lib/location.ml[867,29049+24]..lib/location.ml[867,29049+50])
                      Texp_construct "Report_warning_as_error"
                      [
                        expression (lib/location.ml[867,29049+48]..lib/location.ml[867,29049+50])
                          Texp_ident "id/1684"
                      ]
                    Some
                      expression (lib/location.ml[868,29100+12]..lib/location.ml[868,29100+29])
                        Texp_construct "Report_warning"
                        [
                          expression (lib/location.ml[868,29100+27]..lib/location.ml[868,29100+29])
                            Texp_ident "id/1684"
                        ]
          ]
    ]
  structure_item (lib/location.ml[871,29137+0]..lib/location.ml[871,29137+51])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[871,29137+4]..lib/location.ml[871,29137+20])
          Tpat_var "warning_reporter/1685"
        expression (lib/location.ml[871,29137+23]..lib/location.ml[871,29137+51])
          Texp_apply
          expression (lib/location.ml[871,29137+23]..lib/location.ml[871,29137+26])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[871,29137+27]..lib/location.ml[871,29137+51])
                Texp_ident "default_warning_reporter/1682"
          ]
    ]
  structure_item (lib/location.ml[872,29189+0]..lib/location.ml[872,29189+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[872,29189+4]..lib/location.ml[872,29189+18])
          Tpat_var "report_warning/1686"
        expression (lib/location.ml[872,29189+19]..lib/location.ml[872,29189+50]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[872,29189+19]..lib/location.ml[872,29189+22])
                Tpat_var "loc/1688"
            Nolabel
            Param_pat
              pattern (lib/location.ml[872,29189+23]..lib/location.ml[872,29189+24])
                Tpat_var "w/1689"
          ]
          Tfunction_body
            expression (lib/location.ml[872,29189+27]..lib/location.ml[872,29189+50])
              Texp_apply
              expression (lib/location.ml[872,29189+27]..lib/location.ml[872,29189+44])
                Texp_apply
                expression (lib/location.ml[872,29189+27]..lib/location.ml[872,29189+28])
                  Texp_ident "Stdlib!.!"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[872,29189+28]..lib/location.ml[872,29189+44])
                      Texp_ident "warning_reporter/1685"
                ]
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[872,29189+45]..lib/location.ml[872,29189+48])
                    Texp_ident "loc/1688"
                <arg>
                  Nolabel
                  expression (lib/location.ml[872,29189+49]..lib/location.ml[872,29189+50])
                    Texp_ident "w/1689"
              ]
    ]
  structure_item (lib/location.ml[874,29241+0]..lib/location.ml[874,29241+53])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[874,29241+4]..lib/location.ml[874,29241+26])
          Tpat_var "formatter_for_warnings/1690"
        expression (lib/location.ml[874,29241+29]..lib/location.ml[874,29241+53])
          Texp_apply
          expression (lib/location.ml[874,29241+29]..lib/location.ml[874,29241+32])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[874,29241+33]..lib/location.ml[874,29241+53])
                Texp_ident "Stdlib!.Format.err_formatter"
          ]
    ]
  structure_item (lib/location.ml[876,29296+0]..lib/location.ml[876,29296+31])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[876,29296+4]..lib/location.ml[876,29296+17])
          Tpat_var "print_warning/1691"
        expression (lib/location.ml[876,29296+18]..lib/location.ml[876,29296+31]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[876,29296+18]..lib/location.ml[876,29296+21])
                Tpat_var "loc/1693"
            Nolabel
            Param_pat
              pattern (lib/location.ml[876,29296+22]..lib/location.ml[876,29296+25])
                Tpat_var "ppf/1694"
            Nolabel
            Param_pat
              pattern (lib/location.ml[876,29296+26]..lib/location.ml[876,29296+27])
                Tpat_var "w/1695"
          ]
          Tfunction_body
            expression (lib/location.ml[876,29296+29]..lib/location.ml[876,29296+31])
              Texp_construct "()"
              []
    ]
  structure_item (lib/location.ml[881,29439+0]..lib/location.ml[881,29439+69])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[881,29439+4]..lib/location.ml[881,29439+17])
          Tpat_var "prerr_warning/1696"
        expression (lib/location.ml[881,29439+18]..lib/location.ml[881,29439+69]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[881,29439+18]..lib/location.ml[881,29439+21])
                Tpat_var "loc/1698"
            Nolabel
            Param_pat
              pattern (lib/location.ml[881,29439+22]..lib/location.ml[881,29439+23])
                Tpat_var "w/1699"
          ]
          Tfunction_body
            expression (lib/location.ml[881,29439+26]..lib/location.ml[881,29439+69])
              Texp_apply
              expression (lib/location.ml[881,29439+26]..lib/location.ml[881,29439+39])
                Texp_ident "print_warning/1691"
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[881,29439+40]..lib/location.ml[881,29439+43])
                    Texp_ident "loc/1698"
                <arg>
                  Nolabel
                  expression (lib/location.ml[881,29439+44]..lib/location.ml[881,29439+67])
                    Texp_apply
                    expression (lib/location.ml[881,29439+44]..lib/location.ml[881,29439+45])
                      Texp_ident "Stdlib!.!"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[881,29439+45]..lib/location.ml[881,29439+67])
                          Texp_ident "formatter_for_warnings/1690"
                    ]
                <arg>
                  Nolabel
                  expression (lib/location.ml[881,29439+68]..lib/location.ml[881,29439+69])
                    Texp_ident "w/1699"
              ]
    ]
  structure_item (lib/location.ml[883,29510+0]..lib/location.ml[889,29699+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[883,29510+4]..lib/location.ml[883,29510+26])
          Tpat_var "default_alert_reporter/1700"
        expression (lib/location.ml[884,29539+2]..lib/location.ml[889,29699+5])
          Texp_apply
          expression (lib/location.ml[884,29539+2]..lib/location.ml[884,29539+32])
            Texp_ident "default_warning_alert_reporter/1662"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[885,29572+4]..lib/location.ml[885,29572+25])
                Texp_ident "Ocaml_ocaml_types!.Warnings.report_alert"
            <arg>
              Nolabel
              expression (lib/location.ml[886,29598+4]..lib/location.ml[889,29699+5])
                Texp_function
                [
                  Nolabel
                  Param_pat
                    pattern (lib/location.ml[886,29598+9]..lib/location.ml[886,29598+17])
                      Tpat_var "is_error/1701"
                  Nolabel
                  Param_pat
                    pattern (lib/location.ml[886,29598+18]..lib/location.ml[886,29598+20])
                      Tpat_var "id/1702"
                ]
                Tfunction_body
                  expression (lib/location.ml[887,29622+7]..lib/location.ml[888,29671+27])
                    Texp_ifthenelse
                    expression (lib/location.ml[887,29622+10]..lib/location.ml[887,29622+18])
                      Texp_ident "is_error/1701"
                    expression (lib/location.ml[887,29622+24]..lib/location.ml[887,29622+48])
                      Texp_construct "Report_alert_as_error"
                      [
                        expression (lib/location.ml[887,29622+46]..lib/location.ml[887,29622+48])
                          Texp_ident "id/1702"
                      ]
                    Some
                      expression (lib/location.ml[888,29671+12]..lib/location.ml[888,29671+27])
                        Texp_construct "Report_alert"
                        [
                          expression (lib/location.ml[888,29671+25]..lib/location.ml[888,29671+27])
                            Texp_ident "id/1702"
                        ]
          ]
    ]
  structure_item (lib/location.ml[891,29706+0]..lib/location.ml[891,29706+47])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[891,29706+4]..lib/location.ml[891,29706+18])
          Tpat_var "alert_reporter/1703"
        expression (lib/location.ml[891,29706+21]..lib/location.ml[891,29706+47])
          Texp_apply
          expression (lib/location.ml[891,29706+21]..lib/location.ml[891,29706+24])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[891,29706+25]..lib/location.ml[891,29706+47])
                Texp_ident "default_alert_reporter/1700"
          ]
    ]
  structure_item (lib/location.ml[892,29754+0]..lib/location.ml[892,29754+46])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[892,29754+4]..lib/location.ml[892,29754+16])
          Tpat_var "report_alert/1704"
        expression (lib/location.ml[892,29754+17]..lib/location.ml[892,29754+46]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[892,29754+17]..lib/location.ml[892,29754+20])
                Tpat_var "loc/1706"
            Nolabel
            Param_pat
              pattern (lib/location.ml[892,29754+21]..lib/location.ml[892,29754+22])
                Tpat_var "w/1707"
          ]
          Tfunction_body
            expression (lib/location.ml[892,29754+25]..lib/location.ml[892,29754+46])
              Texp_apply
              expression (lib/location.ml[892,29754+25]..lib/location.ml[892,29754+40])
                Texp_apply
                expression (lib/location.ml[892,29754+25]..lib/location.ml[892,29754+26])
                  Texp_ident "Stdlib!.!"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[892,29754+26]..lib/location.ml[892,29754+40])
                      Texp_ident "alert_reporter/1703"
                ]
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[892,29754+41]..lib/location.ml[892,29754+44])
                    Texp_ident "loc/1706"
                <arg>
                  Nolabel
                  expression (lib/location.ml[892,29754+45]..lib/location.ml[892,29754+46])
                    Texp_ident "w/1707"
              ]
    ]
  structure_item (lib/location.ml[894,29802+0]..lib/location.ml[894,29802+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[894,29802+4]..lib/location.ml[894,29802+15])
          Tpat_var "print_alert/1708"
        expression (lib/location.ml[894,29802+16]..lib/location.ml[894,29802+29]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[894,29802+16]..lib/location.ml[894,29802+19])
                Tpat_var "loc/1710"
            Nolabel
            Param_pat
              pattern (lib/location.ml[894,29802+20]..lib/location.ml[894,29802+23])
                Tpat_var "ppf/1711"
            Nolabel
            Param_pat
              pattern (lib/location.ml[894,29802+24]..lib/location.ml[894,29802+25])
                Tpat_var "w/1712"
          ]
          Tfunction_body
            expression (lib/location.ml[894,29802+27]..lib/location.ml[894,29802+29])
              Texp_construct "()"
              []
    ]
  structure_item (lib/location.ml[899,29941+0]..lib/location.ml[899,29941+65])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[899,29941+4]..lib/location.ml[899,29941+15])
          Tpat_var "prerr_alert/1713"
        expression (lib/location.ml[899,29941+16]..lib/location.ml[899,29941+65]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[899,29941+16]..lib/location.ml[899,29941+19])
                Tpat_var "loc/1715"
            Nolabel
            Param_pat
              pattern (lib/location.ml[899,29941+20]..lib/location.ml[899,29941+21])
                Tpat_var "w/1716"
          ]
          Tfunction_body
            expression (lib/location.ml[899,29941+24]..lib/location.ml[899,29941+65])
              Texp_apply
              expression (lib/location.ml[899,29941+24]..lib/location.ml[899,29941+35])
                Texp_ident "print_alert/1708"
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[899,29941+36]..lib/location.ml[899,29941+39])
                    Texp_ident "loc/1715"
                <arg>
                  Nolabel
                  expression (lib/location.ml[899,29941+40]..lib/location.ml[899,29941+63])
                    Texp_apply
                    expression (lib/location.ml[899,29941+40]..lib/location.ml[899,29941+41])
                      Texp_ident "Stdlib!.!"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[899,29941+41]..lib/location.ml[899,29941+63])
                          Texp_ident "formatter_for_warnings/1690"
                    ]
                <arg>
                  Nolabel
                  expression (lib/location.ml[899,29941+64]..lib/location.ml[899,29941+65])
                    Texp_ident "w/1716"
              ]
    ]
  structure_item (lib/location.ml[901,30008+0]..lib/location.ml[902,30066+52])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[901,30008+4]..lib/location.ml[901,30008+9])
          Tpat_var "alert/1717"
        expression (lib/location.ml[901,30008+10]..lib/location.ml[902,30066+52]) ghost
          Texp_function
          [
            Optional "def"
            Param_optional_default
              pattern (lib/location.ml[901,30008+12]..lib/location.ml[901,30008+15])
                Tpat_var "def/1719"
              expression (lib/location.ml[901,30008+18]..lib/location.ml[901,30008+22])
                Texp_ident "none/439"
            Optional "use"
            Param_optional_default
              pattern (lib/location.ml[901,30008+26]..lib/location.ml[901,30008+29])
                Tpat_var "use/1720"
              expression (lib/location.ml[901,30008+32]..lib/location.ml[901,30008+36])
                Texp_ident "none/439"
            Labelled "kind"
            Param_pat
              pattern (lib/location.ml[901,30008+39]..lib/location.ml[901,30008+43])
                Tpat_var "kind/1721"
            Nolabel
            Param_pat
              pattern (lib/location.ml[901,30008+44]..lib/location.ml[901,30008+47])
                Tpat_var "loc/1722"
            Nolabel
            Param_pat
              pattern (lib/location.ml[901,30008+48]..lib/location.ml[901,30008+55])
                Tpat_var "message/1723"
          ]
          Tfunction_body
            expression (lib/location.ml[902,30066+2]..lib/location.ml[902,30066+52])
              Texp_apply
              expression (lib/location.ml[902,30066+2]..lib/location.ml[902,30066+13])
                Texp_ident "prerr_alert/1713"
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[902,30066+14]..lib/location.ml[902,30066+17])
                    Texp_ident "loc/1722"
                <arg>
                  Nolabel
                  expression (lib/location.ml[902,30066+18]..lib/location.ml[902,30066+52])
                    Texp_record
                      fields =
                        [
                          "Warnings.kind"
                            expression (lib/location.ml[902,30066+19]..lib/location.ml[902,30066+32])
                              Texp_ident "kind/1721"
                          "message"
                            expression (lib/location.ml[902,30066+34]..lib/location.ml[902,30066+41])
                              Texp_ident "message/1723"
                          "def"
                            expression (lib/location.ml[902,30066+43]..lib/location.ml[902,30066+46])
                              Texp_ident "def/1719"
                          "use"
                            expression (lib/location.ml[902,30066+48]..lib/location.ml[902,30066+51])
                              Texp_ident "use/1720"
                        ]
                      representation =
                        Record_regular
                      extended_expression =
                        None
              ]
    ]
  structure_item (lib/location.ml[904,30120+0]..lib/location.ml[905,30159+48])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[904,30120+4]..lib/location.ml[904,30120+14])
          Tpat_var "deprecated/1726"
        expression (lib/location.ml[904,30120+15]..lib/location.ml[905,30159+48]) ghost
          Texp_function
          [
            Optional "def"
            Param_pat
              pattern (lib/location.ml[904,30120+16]..lib/location.ml[904,30120+19])
                Tpat_var "def/1728"
            Optional "use"
            Param_pat
              pattern (lib/location.ml[904,30120+21]..lib/location.ml[904,30120+24])
                Tpat_var "use/1729"
            Nolabel
            Param_pat
              pattern (lib/location.ml[904,30120+25]..lib/location.ml[904,30120+28])
                Tpat_var "loc/1730"
            Nolabel
            Param_pat
              pattern (lib/location.ml[904,30120+29]..lib/location.ml[904,30120+36])
                Tpat_var "message/1731"
          ]
          Tfunction_body
            expression (lib/location.ml[905,30159+2]..lib/location.ml[905,30159+48])
              Texp_apply
              expression (lib/location.ml[905,30159+2]..lib/location.ml[905,30159+7])
                Texp_ident "alert/1717"
              [
                <arg>
                  Optional "def"
                  expression (lib/location.ml[905,30159+9]..lib/location.ml[905,30159+12])
                    Texp_ident "def/1728"
                <arg>
                  Optional "use"
                  expression (lib/location.ml[905,30159+14]..lib/location.ml[905,30159+17])
                    Texp_ident "use/1729"
                <arg>
                  Labelled "kind"
                  expression (lib/location.ml[905,30159+24]..lib/location.ml[905,30159+36])
                    Texp_constant Const_string("deprecated",(lib/location.ml[905,30159+25]..lib/location.ml[905,30159+35]),None)
                <arg>
                  Nolabel
                  expression (lib/location.ml[905,30159+37]..lib/location.ml[905,30159+40])
                    Texp_ident "loc/1730"
                <arg>
                  Nolabel
                  expression (lib/location.ml[905,30159+41]..lib/location.ml[905,30159+48])
                    Texp_ident "message/1731"
              ]
    ]
  structure_item (lib/location.ml[907,30209+0]..lib/location.ml[907,30209+25])
    Tstr_module
    Style/1732
      module_expr (lib/location.ml[907,30209+15]..lib/location.ml[907,30209+25])
        Tmod_ident "Ocaml_ocaml_types!.Misc.Style"
  structure_item (lib/location.ml[909,30236+0]..lib/location.ml[926,31017+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[909,30236+4]..lib/location.ml[909,30236+22])
          Tpat_var "auto_include_alert/1733"
        expression (lib/location.ml[909,30236+23]..lib/location.ml[926,31017+24]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[909,30236+23]..lib/location.ml[909,30236+26])
                Tpat_var "lib/1735"
          ]
          Tfunction_body
            expression (lib/location.ml[910,30265+2]..lib/location.ml[926,31017+24])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/location.ml[910,30265+6]..lib/location.ml[910,30265+13])
                    Tpat_var "message/1736"
                  expression (lib/location.ml[910,30265+16]..lib/location.ml[921,30806+43])
                    Texp_apply
                    expression (lib/location.ml[910,30265+16]..lib/location.ml[910,30265+31])
                      Texp_ident "Stdlib!.Format.asprintf"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44])
                          Texp_construct "CamlinternalFormatBasics.Format"
                          [
                            expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                              Texp_construct "CamlinternalFormatBasics.String_literal"
                              [
                                expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                  Texp_constant Const_string("OCaml's lib directory layout changed in 5.0. The ",(lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost,None)
                                expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                  Texp_construct "CamlinternalFormatBasics.Alpha"
                                  [
                                    expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                          Texp_constant Const_string(" subdirectory has been automatically added to the search path, but you should add ",(lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost,None)
                                        expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Alpha"
                                          [
                                            expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                              [
                                                expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                  Texp_constant Const_string(" to the command-line to silence this alert (e.g. by adding ",(lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost,None)
                                                expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Alpha"
                                                  [
                                                    expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                      [
                                                        expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                          Texp_constant Const_string(" to the list of libraries in your dune file, or adding ",(lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost,None)
                                                        expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Alpha"
                                                          [
                                                            expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                              [
                                                                expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                                  Texp_constant Const_string(" to your ",(lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost,None)
                                                                expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.Alpha"
                                                                  [
                                                                    expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                      [
                                                                        expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                                          Texp_constant Const_string(" file for ocamlbuild, or using ",(lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost,None)
                                                                        expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                                          Texp_construct "CamlinternalFormatBasics.Alpha"
                                                                          [
                                                                            expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                                                              [
                                                                                expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                                                  Texp_constant Const_string(" for ocamlfind).",(lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost,None)
                                                                                expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                                  []
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                  ]
                              ]
                            expression (lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost
                              Texp_constant Const_string("OCaml's lib directory layout changed in 5.0. The %a subdirectory has been automatically added to the search path, but you should add %a to the command-line to silence this alert (e.g. by adding %a to the list of libraries in your dune file, or adding %a to your %a file for ocamlbuild, or using %a for ocamlfind).",(lib/location.ml[910,30265+32]..lib/location.ml[915,30598+44]) ghost,None)
                          ]
                      <arg>
                        Nolabel
                        expression (lib/location.ml[916,30643+6]..lib/location.ml[916,30643+23])
                          Texp_ident "Style/1732.inline_code"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[916,30643+24]..lib/location.ml[916,30643+27])
                          Texp_ident "lib/1735"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[917,30671+6]..lib/location.ml[917,30671+23])
                          Texp_ident "Style/1732.inline_code"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[917,30671+24]..lib/location.ml[917,30671+37])
                          Texp_apply
                          expression (lib/location.ml[917,30671+32]..lib/location.ml[917,30671+33])
                            Texp_ident "Stdlib!.^"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[917,30671+25]..lib/location.ml[917,30671+31])
                                Texp_constant Const_string("-I +",(lib/location.ml[917,30671+26]..lib/location.ml[917,30671+30]),None)
                            <arg>
                              Nolabel
                              expression (lib/location.ml[917,30671+33]..lib/location.ml[917,30671+36])
                                Texp_ident "lib/1735"
                          ]
                      <arg>
                        Nolabel
                        expression (lib/location.ml[918,30709+6]..lib/location.ml[918,30709+23])
                          Texp_ident "Style/1732.inline_code"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[918,30709+24]..lib/location.ml[918,30709+27])
                          Texp_ident "lib/1735"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[919,30737+6]..lib/location.ml[919,30737+23])
                          Texp_ident "Style/1732.inline_code"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[919,30737+24]..lib/location.ml[919,30737+36])
                          Texp_apply
                          expression (lib/location.ml[919,30737+31]..lib/location.ml[919,30737+32])
                            Texp_ident "Stdlib!.^"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[919,30737+25]..lib/location.ml[919,30737+31])
                                Texp_constant Const_string("use_",(lib/location.ml[919,30737+26]..lib/location.ml[919,30737+30]),None)
                            <arg>
                              Nolabel
                              expression (lib/location.ml[919,30737+32]..lib/location.ml[919,30737+35])
                                Texp_ident "lib/1735"
                          ]
                      <arg>
                        Nolabel
                        expression (lib/location.ml[920,30774+6]..lib/location.ml[920,30774+23])
                          Texp_ident "Style/1732.inline_code"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[920,30774+24]..lib/location.ml[920,30774+31])
                          Texp_constant Const_string("_tags",(lib/location.ml[920,30774+25]..lib/location.ml[920,30774+30]),None)
                      <arg>
                        Nolabel
                        expression (lib/location.ml[921,30806+6]..lib/location.ml[921,30806+23])
                          Texp_ident "Style/1732.inline_code"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[921,30806+24]..lib/location.ml[921,30806+43])
                          Texp_apply
                          expression (lib/location.ml[921,30806+37]..lib/location.ml[921,30806+38])
                            Texp_ident "Stdlib!.^"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[921,30806+25]..lib/location.ml[921,30806+36])
                                Texp_constant Const_string("-package ",(lib/location.ml[921,30806+26]..lib/location.ml[921,30806+35]),None)
                            <arg>
                              Nolabel
                              expression (lib/location.ml[921,30806+39]..lib/location.ml[921,30806+42])
                                Texp_ident "lib/1735"
                          ]
                    ]
              ]
              expression (lib/location.ml[922,30853+2]..lib/location.ml[926,31017+24])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[922,30853+6]..lib/location.ml[922,30853+11])
                      Tpat_var "alert/1832"
                    expression (lib/location.ml[923,30867+4]..lib/location.ml[924,30939+72])
                      Texp_record
                        fields =
                          [
                            "Warnings.kind"
                              expression (lib/location.ml[923,30867+19]..lib/location.ml[923,30867+50])
                                Texp_constant Const_string("ocaml_deprecated_auto_include",(lib/location.ml[923,30867+20]..lib/location.ml[923,30867+49]),None)
                            "message"
                              expression (lib/location.ml[924,30939+15]..lib/location.ml[924,30939+71])
                                Texp_apply
                                expression (lib/location.ml[924,30939+15]..lib/location.ml[924,30939+30])
                                  Texp_ident "Stdlib!.Format.asprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                          [
                                            expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Open_box"
                                              [
                                                expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Format"
                                                  [
                                                    expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                    expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost
                                                      Texp_constant Const_string("",(lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost,None)
                                                  ]
                                              ]
                                            expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                              [
                                                expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Force_newline"
                                                  []
                                                expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Alpha"
                                                  [
                                                    expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                      [
                                                        expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Close_box"
                                                          []
                                                        expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                          []
                                                      ]
                                                  ]
                                              ]
                                          ]
                                        expression (lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost
                                          Texp_constant Const_string("@[@\n%a@]",(lib/location.ml[924,30939+31]..lib/location.ml[924,30939+42]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[924,30939+43]..lib/location.ml[924,30939+63])
                                      Texp_ident "Stdlib!.Format.pp_print_text"
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[924,30939+64]..lib/location.ml[924,30939+71])
                                      Texp_ident "message/1736"
                                ]
                            "def"
                              expression (lib/location.ml[923,30867+66]..lib/location.ml[923,30867+70])
                                Texp_ident "none/439"
                            "use"
                              expression (lib/location.ml[923,30867+56]..lib/location.ml[923,30867+60])
                                Texp_ident "none/439"
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
                ]
                expression (lib/location.ml[926,31017+2]..lib/location.ml[926,31017+24])
                  Texp_apply
                  expression (lib/location.ml[926,31017+2]..lib/location.ml[926,31017+13])
                    Texp_ident "prerr_alert/1713"
                  [
                    <arg>
                      Nolabel
                      expression (lib/location.ml[926,31017+14]..lib/location.ml[926,31017+18])
                        Texp_ident "none/439"
                    <arg>
                      Nolabel
                      expression (lib/location.ml[926,31017+19]..lib/location.ml[926,31017+24])
                        Texp_ident "alert/1832"
                  ]
    ]
  structure_item (lib/location.ml[928,31043+0]..lib/location.ml[942,31645+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[928,31043+4]..lib/location.ml[928,31043+27])
          Tpat_var "deprecated_script_alert/1833"
        expression (lib/location.ml[928,31043+28]..lib/location.ml[942,31645+24]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[928,31043+28]..lib/location.ml[928,31043+35])
                Tpat_var "program/1835"
          ]
          Tfunction_body
            expression (lib/location.ml[929,31081+2]..lib/location.ml[942,31645+24])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/location.ml[929,31081+6]..lib/location.ml[929,31081+13])
                    Tpat_var "message/1836"
                  expression (lib/location.ml[929,31081+16]..lib/location.ml[936,31432+52])
                    Texp_apply
                    expression (lib/location.ml[929,31081+16]..lib/location.ml[929,31081+31])
                      Texp_ident "Stdlib!.Format.asprintf"
                    [
                      <arg>
                        Nolabel
                        expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38])
                          Texp_construct "CamlinternalFormatBasics.Format"
                          [
                            expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                              Texp_construct "CamlinternalFormatBasics.String_literal"
                              [
                                expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                  Texp_constant Const_string("Running ",(lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost,None)
                                expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                  Texp_construct "CamlinternalFormatBasics.Alpha"
                                  [
                                    expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                          Texp_constant Const_string(" where the first argument is an implicit basename with no extension (e.g. ",(lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost,None)
                                        expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Alpha"
                                          [
                                            expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                              Texp_construct "CamlinternalFormatBasics.String_literal"
                                              [
                                                expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                                  Texp_constant Const_string(") is deprecated. Either rename the script (",(lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost,None)
                                                expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Alpha"
                                                  [
                                                    expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                                      [
                                                        expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                                          Texp_constant Const_string(") or qualify the basename (",(lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost,None)
                                                        expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Alpha"
                                                          [
                                                            expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                                              [
                                                                expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                                                  Texp_constant Const_char 29
                                                                expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                                  []
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                  ]
                              ]
                            expression (lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost
                              Texp_constant Const_string("Running %a where the first argument is an implicit basename with no extension (e.g. %a) is deprecated. Either rename the script (%a) or qualify the basename (%a)",(lib/location.ml[929,31081+32]..lib/location.ml[932,31256+38]) ghost,None)
                          ]
                      <arg>
                        Nolabel
                        expression (lib/location.ml[933,31295+6]..lib/location.ml[933,31295+23])
                          Texp_ident "Style/1732.inline_code"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[933,31295+24]..lib/location.ml[933,31295+31])
                          Texp_ident "program/1835"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[934,31327+6]..lib/location.ml[934,31327+23])
                          Texp_ident "Style/1732.inline_code"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[934,31327+24]..lib/location.ml[934,31327+50])
                          Texp_apply
                          expression (lib/location.ml[934,31327+33]..lib/location.ml[934,31327+34])
                            Texp_ident "Stdlib!.^"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[934,31327+25]..lib/location.ml[934,31327+32])
                                Texp_ident "program/1835"
                            <arg>
                              Nolabel
                              expression (lib/location.ml[934,31327+35]..lib/location.ml[934,31327+49])
                                Texp_constant Const_string(" script-file",(lib/location.ml[934,31327+36]..lib/location.ml[934,31327+48]),None)
                          ]
                      <arg>
                        Nolabel
                        expression (lib/location.ml[935,31378+6]..lib/location.ml[935,31378+23])
                          Texp_ident "Style/1732.inline_code"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[935,31378+24]..lib/location.ml[935,31378+53])
                          Texp_apply
                          expression (lib/location.ml[935,31378+33]..lib/location.ml[935,31378+34])
                            Texp_ident "Stdlib!.^"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[935,31378+25]..lib/location.ml[935,31378+32])
                                Texp_ident "program/1835"
                            <arg>
                              Nolabel
                              expression (lib/location.ml[935,31378+35]..lib/location.ml[935,31378+52])
                                Texp_constant Const_string(" script-file.ml",(lib/location.ml[935,31378+36]..lib/location.ml[935,31378+51]),None)
                          ]
                      <arg>
                        Nolabel
                        expression (lib/location.ml[936,31432+6]..lib/location.ml[936,31432+23])
                          Texp_ident "Style/1732.inline_code"
                      <arg>
                        Nolabel
                        expression (lib/location.ml[936,31432+24]..lib/location.ml[936,31432+52])
                          Texp_apply
                          expression (lib/location.ml[936,31432+33]..lib/location.ml[936,31432+34])
                            Texp_ident "Stdlib!.^"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[936,31432+25]..lib/location.ml[936,31432+32])
                                Texp_ident "program/1835"
                            <arg>
                              Nolabel
                              expression (lib/location.ml[936,31432+35]..lib/location.ml[936,31432+51])
                                Texp_constant Const_string(" ./script-file",(lib/location.ml[936,31432+36]..lib/location.ml[936,31432+50]),None)
                          ]
                    ]
              ]
              expression (lib/location.ml[938,31490+2]..lib/location.ml[942,31645+24])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/location.ml[938,31490+6]..lib/location.ml[938,31490+11])
                      Tpat_var "alert/1837"
                    expression (lib/location.ml[939,31504+4]..lib/location.ml[940,31567+72])
                      Texp_record
                        fields =
                          [
                            "Warnings.kind"
                              expression (lib/location.ml[939,31504+19]..lib/location.ml[939,31504+41])
                                Texp_constant Const_string("ocaml_deprecated_cli",(lib/location.ml[939,31504+20]..lib/location.ml[939,31504+40]),None)
                            "message"
                              expression (lib/location.ml[940,31567+15]..lib/location.ml[940,31567+71])
                                Texp_apply
                                expression (lib/location.ml[940,31567+15]..lib/location.ml[940,31567+30])
                                  Texp_ident "Stdlib!.Format.asprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                          [
                                            expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Open_box"
                                              [
                                                expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Format"
                                                  [
                                                    expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                    expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost
                                                      Texp_constant Const_string("",(lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost,None)
                                                  ]
                                              ]
                                            expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                              [
                                                expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Force_newline"
                                                  []
                                                expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Alpha"
                                                  [
                                                    expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                      [
                                                        expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.Close_box"
                                                          []
                                                        expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost
                                                          Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                          []
                                                      ]
                                                  ]
                                              ]
                                          ]
                                        expression (lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost
                                          Texp_constant Const_string("@[@\n%a@]",(lib/location.ml[940,31567+31]..lib/location.ml[940,31567+42]) ghost,None)
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[940,31567+43]..lib/location.ml[940,31567+63])
                                      Texp_ident "Stdlib!.Format.pp_print_text"
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[940,31567+64]..lib/location.ml[940,31567+71])
                                      Texp_ident "message/1836"
                                ]
                            "def"
                              expression (lib/location.ml[939,31504+57]..lib/location.ml[939,31504+61])
                                Texp_ident "none/439"
                            "use"
                              expression (lib/location.ml[939,31504+47]..lib/location.ml[939,31504+51])
                                Texp_ident "none/439"
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
                ]
                expression (lib/location.ml[942,31645+2]..lib/location.ml[942,31645+24])
                  Texp_apply
                  expression (lib/location.ml[942,31645+2]..lib/location.ml[942,31645+13])
                    Texp_ident "prerr_alert/1713"
                  [
                    <arg>
                      Nolabel
                      expression (lib/location.ml[942,31645+14]..lib/location.ml[942,31645+18])
                        Texp_ident "none/439"
                    <arg>
                      Nolabel
                      expression (lib/location.ml[942,31645+19]..lib/location.ml[942,31645+24])
                        Texp_ident "alert/1837"
                  ]
    ]
  structure_item (lib/location.ml[947,31790+0]..lib/location.ml[947,31790+58])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[947,31790+4]..lib/location.ml[947,31790+16])
          extra
            Tpat_extra_constraint
            core_type (lib/location.ml[947,31790+19]..lib/location.ml[947,31790+49])
              Ttyp_constr "Stdlib!.ref"
              [
                core_type (lib/location.ml[947,31790+19]..lib/location.ml[947,31790+45])
                  Ttyp_constr "list/9!"
                  [
                    core_type (lib/location.ml[947,31790+20]..lib/location.ml[947,31790+39])
                      Ttyp_arrow
                      Nolabel
                      core_type (lib/location.ml[947,31790+20]..lib/location.ml[947,31790+23])
                        Ttyp_constr "exn/7!"
                        []
                      core_type (lib/location.ml[947,31790+27]..lib/location.ml[947,31790+39])
                        Ttyp_constr "option/10!"
                        [
                          core_type (lib/location.ml[947,31790+27]..lib/location.ml[947,31790+32])
                            Ttyp_constr "error/1625"
                            []
                        ]
                  ]
              ]
          Tpat_alias "error_of_exn/1838"
          pattern (lib/location.ml[947,31790+4]..lib/location.ml[947,31790+16])
            Tpat_any
        expression (lib/location.ml[947,31790+52]..lib/location.ml[947,31790+58])
          extra
            Texp_constraint
            core_type (lib/location.ml[947,31790+19]..lib/location.ml[947,31790+49])
              Ttyp_constr "Stdlib!.ref"
              [
                core_type (lib/location.ml[947,31790+19]..lib/location.ml[947,31790+45])
                  Ttyp_constr "list/9!"
                  [
                    core_type (lib/location.ml[947,31790+20]..lib/location.ml[947,31790+39])
                      Ttyp_arrow
                      Nolabel
                      core_type (lib/location.ml[947,31790+20]..lib/location.ml[947,31790+23])
                        Ttyp_constr "exn/7!"
                        []
                      core_type (lib/location.ml[947,31790+27]..lib/location.ml[947,31790+39])
                        Ttyp_constr "option/10!"
                        [
                          core_type (lib/location.ml[947,31790+27]..lib/location.ml[947,31790+32])
                            Ttyp_constr "error/1625"
                            []
                        ]
                  ]
              ]
          Texp_apply
          expression (lib/location.ml[947,31790+52]..lib/location.ml[947,31790+55])
            Texp_ident "Stdlib!.ref"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[947,31790+56]..lib/location.ml[947,31790+58])
                Texp_construct "[]"
                []
          ]
    ]
  structure_item (lib/location.ml[949,31850+0]..lib/location.ml[949,31850+64])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[949,31850+4]..lib/location.ml[949,31850+25])
          Tpat_var "register_error_of_exn/1839"
        expression (lib/location.ml[949,31850+26]..lib/location.ml[949,31850+64]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[949,31850+26]..lib/location.ml[949,31850+27])
                Tpat_var "f/1841"
          ]
          Tfunction_body
            expression (lib/location.ml[949,31850+30]..lib/location.ml[949,31850+64])
              Texp_apply
              expression (lib/location.ml[949,31850+43]..lib/location.ml[949,31850+45])
                Texp_ident "Stdlib!.:="
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[949,31850+30]..lib/location.ml[949,31850+42])
                    Texp_ident "error_of_exn/1838"
                <arg>
                  Nolabel
                  expression (lib/location.ml[949,31850+46]..lib/location.ml[949,31850+64])
                    Texp_construct "::"
                    [
                      expression (lib/location.ml[949,31850+46]..lib/location.ml[949,31850+47])
                        Texp_ident "f/1841"
                      expression (lib/location.ml[949,31850+51]..lib/location.ml[949,31850+64])
                        Texp_apply
                        expression (lib/location.ml[949,31850+51]..lib/location.ml[949,31850+52])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[949,31850+52]..lib/location.ml[949,31850+64])
                              Texp_ident "error_of_exn/1838"
                        ]
                    ]
              ]
    ]
  structure_item (lib/location.ml[951,31916+0]..lib/location.ml[951,31916+51])
    Tstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (lib/location.ml[951,31916+0]..lib/location.ml[951,31916+51])
          pext_name = "Already_displayed_error/1842"
          pext_kind =
            Text_rebind
              "Ocaml_ocaml_types!.Warnings.Errors"
  structure_item (lib/location.ml[953,31969+0]..lib/location.ml[964,32252+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[953,31969+4]..lib/location.ml[953,31969+16])
          Tpat_var "error_of_exn/1843"
        expression (lib/location.ml[953,31969+17]..lib/location.ml[964,32252+23]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[953,31969+17]..lib/location.ml[953,31969+20])
                Tpat_var "exn/1844"
          ]
          Tfunction_body
            expression (lib/location.ml[954,31992+2]..lib/location.ml[964,32252+23])
              Texp_match
              expression (lib/location.ml[954,31992+8]..lib/location.ml[954,31992+11])
                Texp_ident "exn/1844"
              [
                <case>
                  pattern (lib/location.ml[955,32009+4]..lib/location.ml[955,32009+27])
                    Tpat_value
                    pattern (lib/location.ml[955,32009+4]..lib/location.ml[955,32009+27])
                      Tpat_construct "Already_displayed_error"
                      []
                      None
                  expression (lib/location.ml[955,32009+31]..lib/location.ml[955,32009+54])
                    Texp_construct "Some"
                    [
                      expression (lib/location.ml[955,32009+36]..lib/location.ml[955,32009+54])
                        Texp_variant "Already_displayed"
                        None
                    ]
                <case>
                  pattern (lib/location.ml[956,32064+4]..lib/location.ml[956,32064+5])
                    Tpat_value
                    pattern (lib/location.ml[956,32064+4]..lib/location.ml[956,32064+5])
                      Tpat_any
                  expression (lib/location.ml[957,32073+5]..lib/location.ml[964,32252+23])
                    Texp_let Rec
                    [
                      <def>
                        pattern (lib/location.ml[957,32073+13]..lib/location.ml[957,32073+17])
                          Tpat_var "loop/1845"
                        expression (lib/location.ml[957,32073+20]..lib/location.ml[962,32214+29])
                          Texp_function
                          []
                          Tfunction_cases (lib/location.ml[957,32073+20]..lib/location.ml[962,32214+29])
                            [
                              <case>
                                pattern (lib/location.ml[958,32102+9]..lib/location.ml[958,32102+11])
                                  Tpat_construct "[]"
                                  []
                                  None
                                expression (lib/location.ml[958,32102+15]..lib/location.ml[958,32102+19])
                                  Texp_construct "None"
                                  []
                              <case>
                                pattern (lib/location.ml[959,32122+9]..lib/location.ml[959,32122+18])
                                  Tpat_construct "::"
                                  [
                                    pattern (lib/location.ml[959,32122+9]..lib/location.ml[959,32122+10])
                                      Tpat_var "f/1846"
                                    pattern (lib/location.ml[959,32122+14]..lib/location.ml[959,32122+18])
                                      Tpat_var "rest/1847"
                                  ]
                                  None
                                expression (lib/location.ml[960,32144+10]..lib/location.ml[962,32214+29])
                                  Texp_match
                                  expression (lib/location.ml[960,32144+16]..lib/location.ml[960,32144+21])
                                    Texp_apply
                                    expression (lib/location.ml[960,32144+16]..lib/location.ml[960,32144+17])
                                      Texp_ident "f/1846"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[960,32144+18]..lib/location.ml[960,32144+21])
                                          Texp_ident "exn/1844"
                                    ]
                                  [
                                    <case>
                                      pattern (lib/location.ml[961,32171+12]..lib/location.ml[961,32171+22])
                                        Tpat_value
                                        pattern (lib/location.ml[961,32171+12]..lib/location.ml[961,32171+22])
                                          Tpat_construct "Some"
                                          [
                                            pattern (lib/location.ml[961,32171+17]..lib/location.ml[961,32171+22])
                                              Tpat_var "error/1848"
                                          ]
                                          None
                                      expression (lib/location.ml[961,32171+26]..lib/location.ml[961,32171+42])
                                        Texp_construct "Some"
                                        [
                                          expression (lib/location.ml[961,32171+31]..lib/location.ml[961,32171+42])
                                            Texp_variant "Ok"
                                            Some
                                              expression (lib/location.ml[961,32171+36]..lib/location.ml[961,32171+41])
                                                Texp_ident "error/1848"
                                        ]
                                    <case>
                                      pattern (lib/location.ml[962,32214+12]..lib/location.ml[962,32214+16])
                                        Tpat_value
                                        pattern (lib/location.ml[962,32214+12]..lib/location.ml[962,32214+16])
                                          Tpat_construct "None"
                                          []
                                          None
                                      expression (lib/location.ml[962,32214+20]..lib/location.ml[962,32214+29])
                                        Texp_apply
                                        expression (lib/location.ml[962,32214+20]..lib/location.ml[962,32214+24])
                                          Texp_ident "loop/1845"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/location.ml[962,32214+25]..lib/location.ml[962,32214+29])
                                              Texp_ident "rest/1847"
                                        ]
                                  ]
                            ]
                    ]
                    expression (lib/location.ml[964,32252+5]..lib/location.ml[964,32252+23])
                      Texp_apply
                      expression (lib/location.ml[964,32252+5]..lib/location.ml[964,32252+9])
                        Texp_ident "loop/1845"
                      [
                        <arg>
                          Nolabel
                          expression (lib/location.ml[964,32252+10]..lib/location.ml[964,32252+23])
                            Texp_apply
                            expression (lib/location.ml[964,32252+10]..lib/location.ml[964,32252+11])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (lib/location.ml[964,32252+11]..lib/location.ml[964,32252+23])
                                  Texp_ident "error_of_exn/1838"
                            ]
                      ]
              ]
    ]
  structure_item (lib/location.ml[966,32277+0]..lib/location.ml[972,32438+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[966,32277+4]..lib/location.ml[966,32277+6])
          Tpat_construct "()"
          []
          None
        expression (lib/location.ml[967,32286+2]..lib/location.ml[972,32438+5])
          Texp_apply
          expression (lib/location.ml[967,32286+2]..lib/location.ml[967,32286+23])
            Texp_ident "register_error_of_exn/1839"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[968,32310+4]..lib/location.ml[972,32438+5])
                Texp_function
                []
                Tfunction_cases (lib/location.ml[968,32310+5]..lib/location.ml[971,32420+17])
                  [
                    <case>
                      pattern (lib/location.ml[969,32324+8]..lib/location.ml[969,32324+21])
                        Tpat_construct "Sys_error"
                        [
                          pattern (lib/location.ml[969,32324+18]..lib/location.ml[969,32324+21])
                            Tpat_var "msg/1850"
                        ]
                        None
                      expression (lib/location.ml[970,32349+10]..lib/location.ml[970,32349+70])
                        Texp_construct "Some"
                        [
                          expression (lib/location.ml[970,32349+15]..lib/location.ml[970,32349+70])
                            Texp_apply
                            expression (lib/location.ml[970,32349+16]..lib/location.ml[970,32349+22])
                              Texp_ident "errorf/1635"
                            [
                              <arg>
                                Optional "loc"
                                expression (lib/location.ml[970,32349+28]..lib/location.ml[970,32349+49])
                                  Texp_construct "Some"
                                  [
                                    expression (lib/location.ml[970,32349+28]..lib/location.ml[970,32349+49])
                                      Texp_apply
                                      expression (lib/location.ml[970,32349+29]..lib/location.ml[970,32349+36])
                                        Texp_ident "in_file/438"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/location.ml[970,32349+37]..lib/location.ml[970,32349+48])
                                            Texp_apply
                                            expression (lib/location.ml[970,32349+37]..lib/location.ml[970,32349+38])
                                              Texp_ident "Stdlib!.!"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/location.ml[970,32349+38]..lib/location.ml[970,32349+48])
                                                  Texp_ident "input_name/494"
                                            ]
                                      ]
                                  ]
                              <arg>
                                Optional "sub"
                                expression (_none_[0,0+-1].._none_[0,0+-1]) ghost
                                  Texp_construct "None"
                                  []
                              <arg>
                                Nolabel
                                expression (lib/location.ml[970,32349+50]..lib/location.ml[970,32349+65])
                                  Texp_construct "CamlinternalFormatBasics.Format"
                                  [
                                    expression (lib/location.ml[970,32349+50]..lib/location.ml[970,32349+65]) ghost
                                      Texp_construct "CamlinternalFormatBasics.String_literal"
                                      [
                                        expression (lib/location.ml[970,32349+50]..lib/location.ml[970,32349+65]) ghost
                                          Texp_constant Const_string("I/O error: ",(lib/location.ml[970,32349+50]..lib/location.ml[970,32349+65]) ghost,None)
                                        expression (lib/location.ml[970,32349+50]..lib/location.ml[970,32349+65]) ghost
                                          Texp_construct "CamlinternalFormatBasics.String"
                                          [
                                            expression (lib/location.ml[970,32349+50]..lib/location.ml[970,32349+65]) ghost
                                              Texp_construct "CamlinternalFormatBasics.No_padding"
                                              []
                                            expression (lib/location.ml[970,32349+50]..lib/location.ml[970,32349+65]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                          ]
                                      ]
                                    expression (lib/location.ml[970,32349+50]..lib/location.ml[970,32349+65]) ghost
                                      Texp_constant Const_string("I/O error: %s",(lib/location.ml[970,32349+50]..lib/location.ml[970,32349+65]) ghost,None)
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/location.ml[970,32349+66]..lib/location.ml[970,32349+69])
                                  Texp_ident "msg/1850"
                            ]
                        ]
                    <case>
                      pattern (lib/location.ml[971,32420+8]..lib/location.ml[971,32420+9])
                        Tpat_any
                      expression (lib/location.ml[971,32420+13]..lib/location.ml[971,32420+17])
                        Texp_construct "None"
                        []
                  ]
          ]
    ]
  structure_item (lib/location.ml[974,32445+0]..lib/location.ml[974,32445+41])
    Tstr_primitive
    value_description reraise/1852 (lib/location.ml[974,32445+0]..lib/location.ml[974,32445+41])
      core_type (lib/location.ml[974,32445+19]..lib/location.ml[974,32445+28])
        Ttyp_arrow
        Nolabel
        core_type (lib/location.ml[974,32445+19]..lib/location.ml[974,32445+22])
          Ttyp_constr "exn/7!"
          []
        core_type (lib/location.ml[974,32445+26]..lib/location.ml[974,32445+28])
          Ttyp_var a
      [
        "%reraise"
      ]
  structure_item (lib/location.ml[976,32488+0]..lib/location.ml[984,32735+12])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[976,32488+4]..lib/location.ml[976,32488+20])
          Tpat_var "report_exception/1853"
        expression (lib/location.ml[976,32488+21]..lib/location.ml[984,32735+12]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/location.ml[976,32488+21]..lib/location.ml[976,32488+24])
                Tpat_var "ppf/1855"
            Nolabel
            Param_pat
              pattern (lib/location.ml[976,32488+25]..lib/location.ml[976,32488+28])
                Tpat_var "exn/1856"
          ]
          Tfunction_body
            expression (lib/location.ml[977,32519+2]..lib/location.ml[984,32735+12])
              Texp_let Rec
              [
                <def>
                  pattern (lib/location.ml[977,32519+10]..lib/location.ml[977,32519+14])
                    Tpat_var "loop/1857"
                  expression (lib/location.ml[977,32519+15]..lib/location.ml[982,32681+48]) ghost
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[977,32519+15]..lib/location.ml[977,32519+16])
                          Tpat_var "n/1858"
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[977,32519+17]..lib/location.ml[977,32519+20])
                          Tpat_var "exn/1859"
                    ]
                    Tfunction_body
                      expression (lib/location.ml[978,32542+4]..lib/location.ml[982,32681+48])
                        Texp_match
                        expression (lib/location.ml[978,32542+10]..lib/location.ml[978,32542+26])
                          Texp_apply
                          expression (lib/location.ml[978,32542+10]..lib/location.ml[978,32542+22])
                            Texp_ident "error_of_exn/1843"
                          [
                            <arg>
                              Nolabel
                              expression (lib/location.ml[978,32542+23]..lib/location.ml[978,32542+26])
                                Texp_ident "exn/1859"
                          ]
                        [
                          <case>
                            pattern (lib/location.ml[979,32574+6]..lib/location.ml[979,32574+10])
                              Tpat_value
                              pattern (lib/location.ml[979,32574+6]..lib/location.ml[979,32574+10])
                                Tpat_construct "None"
                                []
                                None
                            expression (lib/location.ml[979,32574+14]..lib/location.ml[979,32574+25])
                              Texp_apply
                              expression (lib/location.ml[979,32574+14]..lib/location.ml[979,32574+21])
                                Texp_ident "reraise/1852"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[979,32574+22]..lib/location.ml[979,32574+25])
                                    Texp_ident "exn/1859"
                              ]
                          <case>
                            pattern (lib/location.ml[980,32600+6]..lib/location.ml[980,32600+29])
                              Tpat_value
                              pattern (lib/location.ml[980,32600+6]..lib/location.ml[980,32600+29])
                                Tpat_construct "Some"
                                [
                                  pattern (lib/location.ml[980,32600+11]..lib/location.ml[980,32600+29])
                                    Tpat_variant "Already_displayed"
                                    None
                                ]
                                None
                            expression (lib/location.ml[980,32600+33]..lib/location.ml[980,32600+35])
                              Texp_construct "()"
                              []
                          <case>
                            pattern (lib/location.ml[981,32636+6]..lib/location.ml[981,32636+20])
                              Tpat_value
                              pattern (lib/location.ml[981,32636+6]..lib/location.ml[981,32636+20])
                                Tpat_construct "Some"
                                [
                                  pattern (lib/location.ml[981,32636+11]..lib/location.ml[981,32636+20])
                                    Tpat_variant "Ok"
                                    Some
                                      pattern (lib/location.ml[981,32636+16]..lib/location.ml[981,32636+19])
                                        Tpat_var "err/1860"
                                ]
                                None
                            expression (lib/location.ml[981,32636+24]..lib/location.ml[981,32636+44])
                              Texp_apply
                              expression (lib/location.ml[981,32636+24]..lib/location.ml[981,32636+36])
                                Texp_ident "report_error/1626"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[981,32636+37]..lib/location.ml[981,32636+40])
                                    Texp_ident "ppf/1855"
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[981,32636+41]..lib/location.ml[981,32636+44])
                                    Texp_ident "err/1860"
                              ]
                          <case>
                            pattern (lib/location.ml[982,32681+6]..lib/location.ml[982,32681+19])
                              Tpat_exception
                              pattern (lib/location.ml[982,32681+16]..lib/location.ml[982,32681+19])
                                Tpat_var "exn/1861"
                            <when>
                              expression (lib/location.ml[982,32681+25]..lib/location.ml[982,32681+30])
                                Texp_apply
                                expression (lib/location.ml[982,32681+27]..lib/location.ml[982,32681+28])
                                  Texp_ident "Stdlib!.>"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[982,32681+25]..lib/location.ml[982,32681+26])
                                      Texp_ident "n/1858"
                                  <arg>
                                    Nolabel
                                    expression (lib/location.ml[982,32681+29]..lib/location.ml[982,32681+30])
                                      Texp_constant Const_int 0
                                ]
                            expression (lib/location.ml[982,32681+34]..lib/location.ml[982,32681+48])
                              Texp_apply
                              expression (lib/location.ml[982,32681+34]..lib/location.ml[982,32681+38])
                                Texp_ident "loop/1857"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[982,32681+39]..lib/location.ml[982,32681+44])
                                    Texp_apply
                                    expression (lib/location.ml[982,32681+41]..lib/location.ml[982,32681+42])
                                      Texp_ident "Stdlib!.-"
                                    [
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[982,32681+40]..lib/location.ml[982,32681+41])
                                          Texp_ident "n/1858"
                                      <arg>
                                        Nolabel
                                        expression (lib/location.ml[982,32681+42]..lib/location.ml[982,32681+43])
                                          Texp_constant Const_int 1
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/location.ml[982,32681+45]..lib/location.ml[982,32681+48])
                                    Texp_ident "exn/1861"
                              ]
                        ]
              ]
              expression (lib/location.ml[984,32735+2]..lib/location.ml[984,32735+12])
                Texp_apply
                expression (lib/location.ml[984,32735+2]..lib/location.ml[984,32735+6])
                  Texp_ident "loop/1857"
                [
                  <arg>
                    Nolabel
                    expression (lib/location.ml[984,32735+7]..lib/location.ml[984,32735+8])
                      Texp_constant Const_int 5
                  <arg>
                    Nolabel
                    expression (lib/location.ml[984,32735+9]..lib/location.ml[984,32735+12])
                      Texp_ident "exn/1856"
                ]
    ]
  structure_item (lib/location.ml[986,32749+0]..lib/location.ml[986,32749+24])
    Tstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (lib/location.ml[986,32749+0]..lib/location.ml[986,32749+24])
          pext_name = "Error/1862"
          pext_kind =
            Text_decl
              [
                core_type (lib/location.ml[986,32749+19]..lib/location.ml[986,32749+24])
                  Ttyp_constr "error/1625"
                  []
              ]
              None
  structure_item (lib/location.ml[988,32775+0]..lib/location.ml[993,32866+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[988,32775+4]..lib/location.ml[988,32775+6])
          Tpat_construct "()"
          []
          None
        expression (lib/location.ml[989,32784+2]..lib/location.ml[993,32866+5])
          Texp_apply
          expression (lib/location.ml[989,32784+2]..lib/location.ml[989,32784+23])
            Texp_ident "register_error_of_exn/1839"
          [
            <arg>
              Nolabel
              expression (lib/location.ml[990,32808+4]..lib/location.ml[993,32866+5])
                Texp_function
                []
                Tfunction_cases (lib/location.ml[990,32808+5]..lib/location.ml[992,32848+17])
                  [
                    <case>
                      pattern (lib/location.ml[991,32822+8]..lib/location.ml[991,32822+15])
                        Tpat_construct "Error"
                        [
                          pattern (lib/location.ml[991,32822+14]..lib/location.ml[991,32822+15])
                            Tpat_var "e/1863"
                        ]
                        None
                      expression (lib/location.ml[991,32822+19]..lib/location.ml[991,32822+25])
                        Texp_construct "Some"
                        [
                          expression (lib/location.ml[991,32822+24]..lib/location.ml[991,32822+25])
                            Texp_ident "e/1863"
                        ]
                    <case>
                      pattern (lib/location.ml[992,32848+8]..lib/location.ml[992,32848+9])
                        Tpat_any
                      expression (lib/location.ml[992,32848+13]..lib/location.ml[992,32848+17])
                        Texp_construct "None"
                        []
                  ]
          ]
    ]
  structure_item (lib/location.ml[995,32873+0]..lib/location.ml[996,32918+66])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/location.ml[995,32873+4]..lib/location.ml[995,32873+16])
          Tpat_var "raise_errorf/1865"
        expression (lib/location.ml[995,32873+17]..lib/location.ml[996,32918+66]) ghost
          Texp_function
          [
            Optional "loc"
            Param_optional_default
              pattern (lib/location.ml[995,32873+19]..lib/location.ml[995,32873+22])
                Tpat_var "loc/1867"
              expression (lib/location.ml[995,32873+25]..lib/location.ml[995,32873+29])
                Texp_ident "none/439"
            Optional "sub"
            Param_optional_default
              pattern (lib/location.ml[995,32873+33]..lib/location.ml[995,32873+36])
                Tpat_var "sub/1868"
              expression (lib/location.ml[995,32873+39]..lib/location.ml[995,32873+41])
                Texp_construct "[]"
                []
          ]
          Tfunction_body
            expression (lib/location.ml[996,32918+2]..lib/location.ml[996,32918+66])
              Texp_apply
              expression (lib/location.ml[996,32918+2]..lib/location.ml[996,32918+17])
                Texp_ident "Stdlib!.Format.kdprintf"
              [
                <arg>
                  Nolabel
                  expression (lib/location.ml[996,32918+18]..lib/location.ml[996,32918+66])
                    Texp_function
                    [
                      Nolabel
                      Param_pat
                        pattern (lib/location.ml[996,32918+23]..lib/location.ml[996,32918+26])
                          Tpat_var "txt/1869"
                    ]
                    Tfunction_body
                      expression (lib/location.ml[996,32918+30]..lib/location.ml[996,32918+65])
                        Texp_apply
                        expression (lib/location.ml[996,32918+30]..lib/location.ml[996,32918+35])
                          Texp_ident "Stdlib!.raise"
                        [
                          <arg>
                            Nolabel
                            expression (lib/location.ml[996,32918+36]..lib/location.ml[996,32918+65])
                              Texp_construct "Error"
                              [
                                expression (lib/location.ml[996,32918+43]..lib/location.ml[996,32918+64])
                                  Texp_apply
                                  expression (lib/location.ml[996,32918+44]..lib/location.ml[996,32918+51])
                                    Texp_ident "mkerror/1630"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[996,32918+52]..lib/location.ml[996,32918+55])
                                        Texp_ident "loc/1867"
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[996,32918+56]..lib/location.ml[996,32918+59])
                                        Texp_ident "sub/1868"
                                    <arg>
                                      Nolabel
                                      expression (lib/location.ml[996,32918+60]..lib/location.ml[996,32918+63])
                                        Texp_ident "txt/1869"
                                  ]
                              ]
                        ]
              ]
    ]
]

{<Ocaml_ocaml_types__Location>
 "Already_displayed_error"[extension constructor] ->
   <Ocaml_ocaml_types__Location.370>;
 "Error"[extension constructor] -> <Ocaml_ocaml_types__Location.387>;
 "ISet"[module] ->
   {<Ocaml_ocaml_types__Location.143>
    "bound"[type] -> <Ocaml_ocaml_types__Location.85>;
    "extrema"[value] -> <Ocaml_ocaml_types__Location.133>;
    "find_bound_in"[value] -> <Ocaml_ocaml_types__Location.115>;
    "is_end"[value] -> <Ocaml_ocaml_types__Location.128>;
    "is_start"[value] -> <Ocaml_ocaml_types__Location.123>;
    "mem"[value] -> <Ocaml_ocaml_types__Location.110>;
    "of_intervals"[value] -> <Ocaml_ocaml_types__Location.87>;
    "t"[type] -> <Ocaml_ocaml_types__Location.86>;
    };
 "Style"[module] ->
   (CU Ocaml_ocaml_types . "Misc"[module] .
   "Style"[module])<Ocaml_ocaml_types__Location.358>;
 "alert"[value] -> <Ocaml_ocaml_types__Location.347>;
 "alert_reporter"[value] -> <Ocaml_ocaml_types__Location.336>;
 "auto_include_alert"[value] -> <Ocaml_ocaml_types__Location.359>;
 "curr"[value] -> <Ocaml_ocaml_types__Location.8>;
 "default_alert_reporter"[value] -> <Ocaml_ocaml_types__Location.333>;
 "default_warning_alert_reporter"[value] ->
   <Ocaml_ocaml_types__Location.301>;
 "default_warning_reporter"[value] -> <Ocaml_ocaml_types__Location.318>;
 "deprecated"[value] -> <Ocaml_ocaml_types__Location.353>;
 "deprecated_script_alert"[value] -> <Ocaml_ocaml_types__Location.363>;
 "echo_eof"[value] -> <Ocaml_ocaml_types__Location.38>;
 "error"[value] -> <Ocaml_ocaml_types__Location.287>;
 "error"[type] -> <Ocaml_ocaml_types__Location.276>;
 "error_of_exn"[value] -> <Ocaml_ocaml_types__Location.371>;
 "error_of_printer"[value] -> <Ocaml_ocaml_types__Location.292>;
 "error_of_printer_file"[value] -> <Ocaml_ocaml_types__Location.298>;
 "errorf"[value] -> <Ocaml_ocaml_types__Location.284>;
 "formatter_for_warnings"[value] -> <Ocaml_ocaml_types__Location.325>;
 "get_pos_info"[value] -> <Ocaml_ocaml_types__Location.20>;
 "highlight_quote"[value] -> <Ocaml_ocaml_types__Location.177>;
 "highlight_terminfo"[value] -> <Ocaml_ocaml_types__Location.156>;
 "in_file"[value] -> <Ocaml_ocaml_types__Location.4>;
 "infer_line_numbers"[value] -> <Ocaml_ocaml_types__Location.163>;
 "init"[value] -> <Ocaml_ocaml_types__Location.10>;
 "input_lexbuf"[value] -> <Ocaml_ocaml_types__Location.31>;
 "input_line"[type] -> <Ocaml_ocaml_types__Location.160>;
 "input_name"[value] -> <Ocaml_ocaml_types__Location.30>;
 "input_phrase_buffer"[value] -> <Ocaml_ocaml_types__Location.32>;
 "is_dummy_loc"[value] -> <Ocaml_ocaml_types__Location.272>;
 "is_first_message"[value] -> <Ocaml_ocaml_types__Location.36>;
 "is_none"[value] -> <Ocaml_ocaml_types__Location.6>;
 "is_quotable_loc"[value] -> <Ocaml_ocaml_types__Location.274>;
 "lines_around"[value] -> <Ocaml_ocaml_types__Location.210>;
 "lines_around_from_current_input"[value] ->
   <Ocaml_ocaml_types__Location.243>;
 "lines_around_from_lexbuf"[value] -> <Ocaml_ocaml_types__Location.223>;
 "lines_around_from_phrasebuf"[value] -> <Ocaml_ocaml_types__Location.234>;
 "loc"[type] -> <Ocaml_ocaml_types__Location.22>;
 "mkerror"[value] -> <Ocaml_ocaml_types__Location.280>;
 "mkloc"[value] -> <Ocaml_ocaml_types__Location.25>;
 "mknoloc"[value] -> <Ocaml_ocaml_types__Location.28>;
 "msg"[value] -> <Ocaml_ocaml_types__Location.249>;
 "msg"[type] -> <Ocaml_ocaml_types__Location.248>;
 "none"[value] -> <Ocaml_ocaml_types__Location.5>;
 "num_loc_lines"[value] -> <Ocaml_ocaml_types__Location.35>;
 "prerr_alert"[value] -> <Ocaml_ocaml_types__Location.344>;
 "prerr_warning"[value] -> <Ocaml_ocaml_types__Location.330>;
 "print_alert"[value] -> <Ocaml_ocaml_types__Location.340>;
 "print_loc"[value] -> <Ocaml_ocaml_types__Location.61>;
 "print_locs"[value] -> <Ocaml_ocaml_types__Location.81>;
 "print_updating_num_loc_lines"[value] -> <Ocaml_ocaml_types__Location.41>;
 "print_warning"[value] -> <Ocaml_ocaml_types__Location.326>;
 "raise_errorf"[value] -> <Ocaml_ocaml_types__Location.389>;
 "register_error_of_exn"[value] -> <Ocaml_ocaml_types__Location.368>;
 "report"[type] -> <Ocaml_ocaml_types__Location.259>;
 "report_alert"[value] -> <Ocaml_ocaml_types__Location.337>;
 "report_error"[value] -> <Ocaml_ocaml_types__Location.277>;
 "report_exception"[value] -> <Ocaml_ocaml_types__Location.379>;
 "report_kind"[type] -> <Ocaml_ocaml_types__Location.253>;
 "report_printer"[type] -> <Ocaml_ocaml_types__Location.263>;
 "report_warning"[value] -> <Ocaml_ocaml_types__Location.322>;
 "reraise"[value] -> <Ocaml_ocaml_types__Location.378>;
 "reset"[value] -> <Ocaml_ocaml_types__Location.37>;
 "rewrite_absolute_path"[value] -> <Ocaml_ocaml_types__Location.54>;
 "rewrite_find_first_existing"[value] -> <Ocaml_ocaml_types__Location.57>;
 "rhs_interval"[value] -> <Ocaml_ocaml_types__Location.17>;
 "rhs_loc"[value] -> <Ocaml_ocaml_types__Location.15>;
 "separate_new_message"[value] -> <Ocaml_ocaml_types__Location.39>;
 "setup_tags"[value] -> <Ocaml_ocaml_types__Location.53>;
 "setup_terminal"[value] -> <Ocaml_ocaml_types__Location.34>;
 "status"[value] -> <Ocaml_ocaml_types__Location.33>;
 "symbol_gloc"[value] -> <Ocaml_ocaml_types__Location.14>;
 "symbol_rloc"[value] -> <Ocaml_ocaml_types__Location.13>;
 "t"[type] -> <Ocaml_ocaml_types__Location.0>;
 "warning_reporter"[value] -> <Ocaml_ocaml_types__Location.321>;
 }

(seq
  (let (in_file/438 = (field_imm 18 (global Ocaml_ocaml_types__Warnings!)))
    (setfield_ptr(root-init) 0 (global Ocaml_ocaml_types__Location!)
      in_file/438))
  (let
    (none/439 =
       (apply (field_imm 0 (global Ocaml_ocaml_types__Location!)) "_none_"))
    (setfield_ptr(root-init) 1 (global Ocaml_ocaml_types__Location!)
      none/439))
  (let
    (is_none/440 =
       (function l/442 : int
         (caml_equal l/442
           (field_imm 1 (global Ocaml_ocaml_types__Location!)))))
    (setfield_ptr(root-init) 2 (global Ocaml_ocaml_types__Location!)
      is_none/440))
  (let
    (curr/443 =
       (function lexbuf/445
         (makeblock 0 (*,*,int) (field_mut 10 lexbuf/445)
           (field_mut 11 lexbuf/445) 0)))
    (setfield_ptr(root-init) 3 (global Ocaml_ocaml_types__Location!)
      curr/443))
  (let
    (init/446 =
       (function lexbuf/448 fname/449 : int
         (setfield_ptr 11 lexbuf/448
           (makeblock 0 (*,int,int,int) fname/449 1 0 0))))
    (setfield_ptr(root-init) 4 (global Ocaml_ocaml_types__Location!)
      init/446))
  (let
    (symbol_rloc/450 =
       (function param/470[int]
         (makeblock 0 (*,*,int)
           (apply (field_imm 4 (global Stdlib__Parsing!)) 0)
           (apply (field_imm 5 (global Stdlib__Parsing!)) 0) 0)))
    (setfield_ptr(root-init) 5 (global Ocaml_ocaml_types__Location!)
      symbol_rloc/450))
  (let
    (symbol_gloc/471 =
       (function param/473[int]
         (makeblock 0 (*,*,int)
           (apply (field_imm 4 (global Stdlib__Parsing!)) 0)
           (apply (field_imm 5 (global Stdlib__Parsing!)) 0) 1)))
    (setfield_ptr(root-init) 6 (global Ocaml_ocaml_types__Location!)
      symbol_gloc/471))
  (let
    (rhs_loc/474 =
       (function n/476[int]
         (makeblock 0 (*,*,int)
           (apply (field_imm 6 (global Stdlib__Parsing!)) n/476)
           (apply (field_imm 7 (global Stdlib__Parsing!)) n/476) 0)))
    (setfield_ptr(root-init) 7 (global Ocaml_ocaml_types__Location!)
      rhs_loc/474))
  (let
    (rhs_interval/477 =
       (function m/479[int] n/480[int]
         (makeblock 0 (*,*,int)
           (apply (field_imm 6 (global Stdlib__Parsing!)) m/479)
           (apply (field_imm 7 (global Stdlib__Parsing!)) n/480) 0)))
    (setfield_ptr(root-init) 8 (global Ocaml_ocaml_types__Location!)
      rhs_interval/477))
  (let
    (get_pos_info/481 =
       (function pos/483
         (makeblock 0 (*,int,int) (field_imm 0 pos/483) (field_int 1 pos/483)
           (- (field_int 3 pos/483) (field_int 2 pos/483)))))
    (setfield_ptr(root-init) 9 (global Ocaml_ocaml_types__Location!)
      get_pos_info/481))
  (let (mkloc/487 = (function txt/489 loc/490 (makeblock 0 txt/489 loc/490)))
    (setfield_ptr(root-init) 10 (global Ocaml_ocaml_types__Location!)
      mkloc/487))
  (let
    (mknoloc/491 =
       (function txt/493
         (apply (field_imm 10 (global Ocaml_ocaml_types__Location!)) txt/493
           (field_imm 1 (global Ocaml_ocaml_types__Location!)))))
    (setfield_ptr(root-init) 11 (global Ocaml_ocaml_types__Location!)
      mknoloc/491))
  (let (input_name/494 = (makemutable 0 "_none_"))
    (setfield_ptr(root-init) 12 (global Ocaml_ocaml_types__Location!)
      input_name/494))
  (let (input_lexbuf/495 = (makemutable 0 0))
    (setfield_ptr(root-init) 13 (global Ocaml_ocaml_types__Location!)
      input_lexbuf/495))
  (let (input_phrase_buffer/496 = (makemutable 0 0))
    (setfield_ptr(root-init) 14 (global Ocaml_ocaml_types__Location!)
      input_phrase_buffer/496))
  (let (status/538 = (makemutable 0 (int) 0))
    (setfield_ptr(root-init) 15 (global Ocaml_ocaml_types__Location!)
      status/538))
  (let
    (setup_terminal/547 =
       (function param/557[int] : int
         (if
           (==
             (field_int 0
               (field_imm 15 (global Ocaml_ocaml_types__Location!)))
             0)
           (setfield_imm 0
             (field_imm 15 (global Ocaml_ocaml_types__Location!))
             (apply (field_imm 0 (global Ocaml_ocaml_types__Terminfo!))
               (field_imm 38 (global Stdlib!))))
           0)))
    (setfield_ptr(root-init) 16 (global Ocaml_ocaml_types__Location!)
      setup_terminal/547))
  (let (num_loc_lines/558 = (makemutable 0 (int) 0))
    (setfield_ptr(root-init) 17 (global Ocaml_ocaml_types__Location!)
      num_loc_lines/558))
  (let
    (is_first_message/559 =
       (function param/561[int] : int
         (==
           (field_int 0 (field_imm 17 (global Ocaml_ocaml_types__Location!)))
           0)))
    (setfield_ptr(root-init) 18 (global Ocaml_ocaml_types__Location!)
      is_first_message/559))
  (let
    (reset/562 =
       (function param/564[int] : int
         (setfield_imm 0 (field_imm 17 (global Ocaml_ocaml_types__Location!))
           0)))
    (setfield_ptr(root-init) 19 (global Ocaml_ocaml_types__Location!)
      reset/562))
  (let
    (echo_eof/565 =
       (function param/567[int] : int
         (seq (apply (field_imm 46 (global Stdlib!)) 0)
           (+:=1 (field_imm 17 (global Ocaml_ocaml_types__Location!))))))
    (setfield_ptr(root-init) 20 (global Ocaml_ocaml_types__Location!)
      echo_eof/565))
  (let
    (separate_new_message/568 =
       (function ppf/570 : int
         (if
           (not
             (apply (field_imm 18 (global Ocaml_ocaml_types__Location!)) 0))
           (seq (apply (field_imm 40 (global Stdlib__Format!)) ppf/570 0)
             (+:=1 (field_imm 17 (global Ocaml_ocaml_types__Location!))))
           0)))
    (setfield_ptr(root-init) 21 (global Ocaml_ocaml_types__Location!)
      separate_new_message/568))
  (let
    (print_updating_num_loc_lines/887 =
       (function ppf/889 f/890 arg/891 : int
         (let
           (out_functions/892 =
              (apply (field_imm 103 (global Stdlib__Format!)) ppf/889 0)
            out_string/893 =
              (function str/895 start/896[int] len/897[int] : int
                (letrec
                  (count/898
                     (function i/899[int] c/900[int] : int
                       (if (== i/899 (+ start/896 len/897)) c/900
                         (if (== (string.get str/895 i/899) '\n')
                           (apply count/898 (1+ i/899) (1+ c/900))
                           (apply count/898 (1+ i/899) c/900)))))
                  (seq
                    (setfield_imm 0
                      (field_imm 17 (global Ocaml_ocaml_types__Location!))
                      (+
                        (field_int 0
                          (field_imm 17
                            (global Ocaml_ocaml_types__Location!)))
                        (apply count/898 start/896 0)))
                    (apply (field_imm 0 out_functions/892) str/895 start/896
                      len/897)))))
           (seq
             (apply (field_imm 101 (global Stdlib__Format!)) ppf/889
               (let (init/3132 = out_functions/892)
                 (makeblock 0 out_string/893 (field_imm 1 init/3132)
                   (field_imm 2 init/3132) (field_imm 3 init/3132)
                   (field_imm 4 init/3132))))
             (apply f/890 ppf/889 arg/891)
             (apply (field_imm 38 (global Stdlib__Format!)) ppf/889 0)
             (apply (field_imm 101 (global Stdlib__Format!)) ppf/889
               out_functions/892)))))
    (setfield_ptr(root-init) 22 (global Ocaml_ocaml_types__Location!)
      print_updating_num_loc_lines/887))
  (let (setup_tags/970 = (function param/972[int] : int 0))
    (setfield_ptr(root-init) 23 (global Ocaml_ocaml_types__Location!)
      setup_tags/970))
  (let
    (rewrite_absolute_path/973 =
       (function path/975
         (let
           (*match*/3133 =
              (apply (field_imm 65 (global Ocaml_ocaml_types__Misc!)) 0))
           (if (isint *match*/3133) path/975
             (let (map/1051 =a (field_imm 0 *match*/3133))
               (apply
                 (field_imm 10
                   (global Ocaml_ocaml_types__Build_path_prefix_map!))
                 map/1051 path/975))))))
    (setfield_ptr(root-init) 24 (global Ocaml_ocaml_types__Location!)
      rewrite_absolute_path/973))
  (let
    (rewrite_find_first_existing/1068 =
       (function path/1070
         (let
           (*match*/3134 =
              (apply (field_imm 65 (global Ocaml_ocaml_types__Misc!)) 0))
           (if (isint *match*/3134)
             (if
               (apply (field_imm 0 (global Ocaml_ocaml_types__Sys!))
                 path/1070)
               (makeblock 0 path/1070) 0)
             (let
               (prefix_map/1071 =a (field_imm 0 *match*/3134)
                matches/1079 =
                  (apply
                    (field_imm 9
                      (global Ocaml_ocaml_types__Build_path_prefix_map!))
                    prefix_map/1071 path/1070))
               (catch
                 (if (isint matches/1079)
                   (if
                     (apply (field_imm 0 (global Ocaml_ocaml_types__Sys!))
                       path/1070)
                     (makeblock 0 path/1070) 0)
                   (exit 1))
                with (1)
                 (makeblock 0
                   (apply (field_imm 38 (global Stdlib__List!))
                     (field_imm 0 (global Ocaml_ocaml_types__Sys!))
                     matches/1079))))))))
    (setfield_ptr(root-init) 25 (global Ocaml_ocaml_types__Location!)
      rewrite_find_first_existing/1068))
  (let
    (print_loc/1146 =
       (function ppf/1148 loc/1149 : int
         (seq (apply (field_imm 23 (global Ocaml_ocaml_types__Location!)) 0)
           (let
             (file_valid/1150 =
                (function param/1152 : int
                  (catch
                    (catch
                      (stringswitch param/1152
                       case "": (exit 2)
                       case "//toplevel//": (exit 2)
                       case "_none_": 1
                       default: (exit 3))
                     with (3) 1)
                   with (2) 0))
              line_valid/1153 =
                (function line/1155[int] : int (> line/1155 0))
              chars_valid/1156 =
                (function startchar/1158[int] endchar/1159[int] : int
                  (&& (!= startchar/1158 -1) (!= endchar/1159 -1)))
              file/1160 =
                (if
                  (caml_string_equal (field_imm 0 (field_imm 0 loc/1149)) "")
                  (field_mut 0
                    (field_imm 12 (global Ocaml_ocaml_types__Location!)))
                  (field_imm 0 (field_imm 0 loc/1149)))
              startline/1161 =[int] (field_int 1 (field_imm 0 loc/1149))
              endline/1162 =[int] (field_int 1 (field_imm 1 loc/1149))
              startchar/1163 =[int]
                (- (field_int 3 (field_imm 0 loc/1149))
                  (field_int 2 (field_imm 0 loc/1149)))
              endchar/1164 =[int]
                (- (field_int 3 (field_imm 1 loc/1149))
                  (field_int 2 (field_imm 1 loc/1149)))
              first/1165 = (makemutable 0 (int) 1)
              capitalize/1166 =
                (function s/1168
                  (if (field_int 0 first/1165)
                    (seq (setfield_imm 0 first/1165 0)
                      (apply (field_imm 27 (global Stdlib__String!)) s/1168))
                    s/1168))
              comma/1169 =
                (function param/1194[int] : int
                  (if (field_int 0 first/1165) 0
                    (apply (field_imm 138 (global Stdlib__Format!)) ppf/1148
                      [0: [11: ", " 0] ", "]))))
             (seq
               (apply (field_imm 138 (global Stdlib__Format!)) ppf/1148
                 [0: [18: [0: [0: [11: "<loc>" 0] "<loc>"]] 0] "@{<loc>"])
               (apply comma/1169 0)
               (let
                 (startline/1195 =[int]
                    (if (apply line_valid/1153 startline/1161) startline/1161
                      1)
                  endline/1196 =[int]
                    (if (apply line_valid/1153 endline/1162) endline/1162
                      startline/1195))
                 (seq
                   (if (== startline/1195 endline/1196)
                     (apply (field_imm 138 (global Stdlib__Format!)) ppf/1148
                       [0: [2: 0 [12: ' ' [4: 3 0 0 0]]] "%s %i"]
                       (apply capitalize/1166 "line") startline/1195)
                     (apply (field_imm 138 (global Stdlib__Format!)) ppf/1148
                       [0:
                        [2: 0 [12: ' ' [4: 3 0 0 [12: '-' [4: 3 0 0 0]]]]]
                        "%s %i-%i"]
                       (apply capitalize/1166 "lines") startline/1195
                       endline/1196))
                   (if (apply chars_valid/1156 startchar/1163 endchar/1164)
                     (seq (apply comma/1169 0)
                       (apply (field_imm 138 (global Stdlib__Format!))
                         ppf/1148
                         [0:
                          [2: 0 [12: ' ' [4: 3 0 0 [12: '-' [4: 3 0 0 0]]]]]
                          "%s %i-%i"]
                         (apply capitalize/1166 "characters") startchar/1163
                         endchar/1164))
                     0)
                   (apply (field_imm 138 (global Stdlib__Format!)) ppf/1148
                     [0: [17: 1 0] "@}"]))))))))
    (setfield_ptr(root-init) 26 (global Ocaml_ocaml_types__Location!)
      print_loc/1146))
  (let
    (print_locs/1197 =
       (function ppf/1199 locs/1200 : int
         (apply (field_imm 131 (global Stdlib__Format!))
           (makeblock 0
             (function ppf/1201 param/1202[int] : int
               (apply (field_imm 138 (global Stdlib__Format!)) ppf/1201
                 [0: [12: ',' [17: [0: "@ " 1 0] 0]] ",@ "])))
           (field_imm 26 (global Ocaml_ocaml_types__Location!)) ppf/1199
           locs/1200)))
    (setfield_ptr(root-init) 27 (global Ocaml_ocaml_types__Location!)
      print_locs/1197))
  (let
    (ISet/1279 =
       (let
         (of_intervals/1205 =
            (function intervals/1207
              (let
                (pos/1208 =
                   (apply (field_imm 58 (global Stdlib__List!))
                     (function param/1217 param/1216 : int
                       (let
                         (k'/1212 =a (field_imm 1 param/1216)
                          *match*/3142 =a (field_imm 0 param/1216)
                          y/1211 =a (field_imm 1 *match*/3142)
                          *match*/3143 =a (field_imm 0 *match*/3142)
                          k/1210 =a (field_imm 1 param/1217)
                          *match*/3144 =a (field_imm 0 param/1217)
                          x/1209 =a (field_imm 1 *match*/3144)
                          *match*/3145 =a (field_imm 0 *match*/3144)
                          kn/1213 =
                            (function param/1215[int] : int
                              (if (>= param/1215 83) 0 1)))
                         (caml_compare
                           (makeblock 0 (*,int) x/1209
                             (apply kn/1213 k/1210))
                           (makeblock 0 (*,int) y/1211
                             (apply kn/1213 k'/1212)))))
                     (apply (field_imm 14 (global Stdlib__List!))
                       (apply (field_imm 19 (global Stdlib__List!))
                         (function (param/3146, param/3147)
                           (let
                             (y/1221 =a (field_imm 1 param/3147)
                              x/1219 =a (field_imm 1 param/3146))
                             (if (caml_greaterthan x/1219 y/1221) 0
                               (let
                                 (b/1220 =a (field_imm 0 param/3147)
                                  a/1218 =a (field_imm 0 param/3146))
                                 (makeblock 0
                                   (makeblock 0 (*,int)
                                     (makeblock 0 a/1218 x/1219) 83)
                                   (makeblock 0
                                     (makeblock 0 (*,int)
                                       (makeblock 0 b/1220 y/1221) 69)
                                     0))))))
                         intervals/1207)))
                 *match*/3141 =
                   (apply (field_imm 25 (global Stdlib__List!))
                     (function param/1235 param/1234
                       (let
                         (kind/1228 =a (field_imm 1 param/1234)
                          a/1227 =a (field_imm 0 param/1234)
                          acc/1226 =a (field_imm 1 param/1235)
                          nesting/1225 =a (field_imm 0 param/1235))
                         (if (>= kind/1228 83)
                           (if (isint nesting/1225)
                             (makeblock 0
                               (makeblock 0 -764103652
                                 (makeblock 0 (*,int) a/1227 0))
                               acc/1226)
                             (let
                               (*match*/3135 =a (field_imm 1 nesting/1225)
                                n/1230 =a (field_imm 1 *match*/3135)
                                s/1229 =a (field_imm 0 *match*/3135))
                               (makeblock 0
                                 (makeblock 0 -764103652
                                   (makeblock 0 (*,int) s/1229 (+ n/1230 1)))
                                 acc/1226)))
                           (if (isint nesting/1225)
                             (raise
                               (makeblock 0 (global Assert_failure/28!)
                                 [0: "lib/location.ml" 326 26]))
                             (let
                               (*match*/3136 =a (field_imm 1 nesting/1225)
                                s/1231 =a (field_imm 0 *match*/3136))
                               (catch
                                 (let
                                   (*match*/3137 =a
                                      (field_imm 1 *match*/3136))
                                   (if (!= *match*/3137 0) (exit 4)
                                     (makeblock 0 867153157
                                       (makeblock 0
                                         (makeblock 0 s/1231 a/1227)
                                         acc/1226))))
                                with (4)
                                 (let
                                   (s/1232 =a s/1231
                                    n/1233 =a (field_imm 1 *match*/3136))
                                   (makeblock 0
                                     (makeblock 0 -764103652
                                       (makeblock 0 (*,int) s/1232
                                         (- n/1233 1)))
                                     acc/1226))))))))
                     [0: 867153157 0] pos/1208)
                 acc/1224 =a (field_imm 1 *match*/3141)
                 nesting/1223 =a (field_imm 0 *match*/3141))
                (seq
                  (if (== nesting/1223 867153157) 0
                    (raise
                      (makeblock 0 (global Assert_failure/28!)
                        [0: "lib/location.ml" 330 4])))
                  (apply (field_imm 9 (global Stdlib__List!)) acc/1224))))
          mem/1236 =
            (function iset/1238 pos/1239 : int
              (apply (field_imm 33 (global Stdlib__List!))
                (function (param/3148, param/3149) : int
                  (let
                    (e/1241 =a (field_imm 1 param/3149)
                     *match*/3151 =a (field_imm 0 param/3149)
                     s/1240 =a (field_imm 1 param/3148)
                     *match*/3150 =a (field_imm 0 param/3148))
                    (&& (caml_lessequal s/1240 pos/1239)
                      (caml_lessequal pos/1239 e/1241))))
                iset/1238))
          find_bound_in/1243 =
            (function iset/1245 param/1253
              (let
                (end_/1247 =a (field_imm 1 param/1253)
                 start/1246 =a (field_imm 0 param/1253))
                (apply (field_imm 41 (global Stdlib__List!))
                  (function (param/3152, param/3153)
                    (let
                      (x/1249 =a (field_imm 1 param/3152)
                       a/1248 =a (field_imm 0 param/3152))
                      (if
                        (&& (caml_lessequal start/1246 x/1249)
                          (caml_lessequal x/1249 end_/1247))
                        (makeblock 0 (makeblock 0 a/1248 x/1249))
                        (let (y/1251 =a (field_imm 1 param/3153))
                          (if
                            (&& (caml_lessequal start/1246 y/1251)
                              (caml_lessequal y/1251 end_/1247))
                            (let (b/1250 =a (field_imm 0 param/3153))
                              (makeblock 0 (makeblock 0 b/1250 y/1251)))
                            0)))))
                  iset/1245)))
          is_start/1254 =
            (function iset/1256 pos/1257
              (apply (field_imm 41 (global Stdlib__List!))
                (function (param/3154, param/3155)
                  (let (x/1259 =a (field_imm 1 param/3154))
                    (if (caml_equal pos/1257 x/1259)
                      (let (a/1258 =a (field_imm 0 param/3154))
                        (makeblock 0 a/1258))
                      0)))
                iset/1256))
          is_end/1261 =
            (function iset/1263 pos/1264
              (apply (field_imm 41 (global Stdlib__List!))
                (function (param/3156, param/3157)
                  (let (y/1266 =a (field_imm 1 param/3157))
                    (if (caml_equal pos/1264 y/1266)
                      (let (b/1265 =a (field_imm 0 param/3157))
                        (makeblock 0 b/1265))
                      0)))
                iset/1263))
          extrema/1268 =
            (function iset/1270
              (if (== iset/1270 0) 0
                (makeblock 0
                  (makeblock 0
                    (field_mut 0
                      (apply (field_imm 5 (global Stdlib__List!)) iset/1270))
                    (field_mut 1
                      (apply (field_imm 5 (global Stdlib__List!))
                        (apply (field_imm 9 (global Stdlib__List!))
                          iset/1270))))))))
         (makeblock 0 of_intervals/1205 mem/1236 find_bound_in/1243
           is_start/1254 is_end/1261 extrema/1268)))
    (seq
      (setfield_ptr(root-init) 28 (global Ocaml_ocaml_types__Location!)
        ISet/1279)
      (let
        (highlight_terminfo/1280 =
           (function lb/1282 ppf/1283 locs/1284 : int
             (seq (apply (field_imm 38 (global Stdlib__Format!)) ppf/1283 0)
               (let (pos0/1285 =[int] (~ (field_int 3 lb/1282)))
                 (seq
                   (if (< pos0/1285 0) (raise (field_imm 2 (global Stdlib!)))
                     0)
                   (let
                     (lines/1286 =
                        (makemutable 0 (int)
                          (field_int 0
                            (field_imm 17
                              (global Ocaml_ocaml_types__Location!)))))
                     (seq
                       (for i/1287 pos0/1285 to (- (field_int 2 lb/1282) 1)
                         (if
                           (== (bytes.get (field_mut 1 lb/1282) i/1287) '\n')
                           (+:=1 lines/1286) 0))
                       (if
                         (>= (field_int 0 lines/1286)
                           (-
                             (apply
                               (field_imm 1
                                 (global Ocaml_ocaml_types__Terminfo!))
                               (field_imm 38 (global Stdlib!)))
                             2))
                         (raise (field_imm 2 (global Stdlib!))) 0)
                       (apply (field_imm 62 (global Stdlib!))
                         (field_imm 38 (global Stdlib!)))
                       (apply
                         (field_imm 2 (global Ocaml_ocaml_types__Terminfo!))
                         (field_imm 38 (global Stdlib!))
                         (field_int 0 lines/1286))
                       (let (bol/1385 = (makemutable 0 (int) 0))
                         (seq (apply (field_imm 41 (global Stdlib!)) "# ")
                           (for pos/1386 0 to
                             (- (- (field_int 2 lb/1282) pos0/1285) 1)
                             (seq
                               (if (field_int 0 bol/1385)
                                 (seq
                                   (apply (field_imm 41 (global Stdlib!))
                                     "  ")
                                   (setfield_imm 0 bol/1385 0))
                                 0)
                               (if
                                 (apply (field_imm 33 (global Stdlib__List!))
                                   (function loc/1387 : int
                                     (== pos/1386
                                       (field_int 3 (field_imm 0 loc/1387))))
                                   locs/1284)
                                 (apply
                                   (field_imm 4
                                     (global Ocaml_ocaml_types__Terminfo!))
                                   (field_imm 38 (global Stdlib!)) 1)
                                 0)
                               (if
                                 (apply (field_imm 33 (global Stdlib__List!))
                                   (function loc/1388 : int
                                     (== pos/1386
                                       (field_int 3 (field_imm 1 loc/1388))))
                                   locs/1284)
                                 (apply
                                   (field_imm 4
                                     (global Ocaml_ocaml_types__Terminfo!))
                                   (field_imm 38 (global Stdlib!)) 0)
                                 0)
                               (let
                                 (c/1389 =[int]
                                    (bytes.get (field_mut 1 lb/1282)
                                      (+ pos/1386 pos0/1285)))
                                 (seq
                                   (apply (field_imm 40 (global Stdlib!))
                                     c/1389)
                                   (setfield_imm 0 bol/1385 (== c/1389 '\n'))))))
                           (apply
                             (field_imm 4
                               (global Ocaml_ocaml_types__Terminfo!))
                             (field_imm 38 (global Stdlib!)) 0)
                           (apply
                             (field_imm 3
                               (global Ocaml_ocaml_types__Terminfo!))
                             (field_imm 38 (global Stdlib!))
                             (field_int 0
                               (field_imm 17
                                 (global Ocaml_ocaml_types__Location!))))
                           (apply (field_imm 62 (global Stdlib!))
                             (field_imm 38 (global Stdlib!))))))))))))
        (setfield_ptr(root-init) 67 (global Ocaml_ocaml_types__Location!)
          highlight_terminfo/1280))
      (let
        (highlight_terminfo/1390 =
           (function lb/1391 ppf/1392 locs/1393 : int
             (try
               (apply (field_imm 67 (global Ocaml_ocaml_types__Location!))
                 lb/1391 ppf/1392 locs/1393)
              with exn/3158
               (catch
                 (if (== exn/3158 (field_imm 2 (global Stdlib!))) 0 (exit 8))
                with (8) (reraise exn/3158)))))
        (setfield_ptr(root-init) 29 (global Ocaml_ocaml_types__Location!)
          highlight_terminfo/1390))
      (let
        (infer_line_numbers/1397 =
           (function lines/1399
             (let
               (*match*/3165 =
                  (apply (field_imm 25 (global Stdlib__List!))
                    (function param/1410 param/1409
                      (let
                        (lnum/1405 =a (field_imm 0 param/1409)
                         consistent/1404 =a (field_imm 2 param/1410)
                         offset/1403 =a (field_imm 1 param/1410)
                         i/1402 =a (field_imm 0 param/1410))
                        (if (isint lnum/1405)
                          (makeblock 0 (int,*,int) (+ i/1402 1) offset/1403
                            consistent/1404)
                          (let (n/1406 =a (field_imm 0 lnum/1405))
                            (if (isint offset/1403)
                              (makeblock 0 (int,*,int) (+ i/1402 1)
                                (makeblock 0 (int) (- n/1406 i/1402))
                                consistent/1404)
                              (let
                                (n/1407 =a n/1406
                                 m/1408 =a (field_imm 0 offset/1403))
                                (makeblock 0 (int,*,int) (+ i/1402 1)
                                  offset/1403
                                  (&& consistent/1404
                                    (== n/1407 (+ m/1408 i/1402))))))))))
                    [0: 0 0 1] lines/1399)
                consistent/1401 =a (field_imm 2 *match*/3165)
                offset/1400 =a (field_imm 1 *match*/3165)
                *match*/3166 =a (field_imm 0 *match*/3165))
               (catch
                 (if (isint offset/1400) (exit 9)
                   (if consistent/1401
                     (let (m/1411 =a (field_imm 0 offset/1400))
                       (apply (field_imm 20 (global Stdlib__List!))
                         (function i/1412[int] param/1414
                           (let
                             (line/1413 =a (field_imm 1 param/1414)
                              *match*/3159 =a (field_imm 0 param/1414))
                             (makeblock 0
                               (makeblock 0 (int) (+ m/1411 i/1412))
                               line/1413)))
                         lines/1399))
                     (exit 9)))
                with (9) lines/1399))))
        (setfield_ptr(root-init) 30 (global Ocaml_ocaml_types__Location!)
          infer_line_numbers/1397))
      (let
        (highlight_quote/1415 =
           (function ppf/1417 get_lines/1418 *opt*/1499 highlight_tag/1420
             locs/1421 : int
             (let
               (max_lines/1419 =[int]
                  (if (isint *opt*/1499) 10 (field_imm 0 *opt*/1499))
                iset/1422 =
                  (apply
                    (field_imm 0
                      (field_imm 28 (global Ocaml_ocaml_types__Location!)))
                    (apply (field_imm 22 (global Stdlib__List!))
                      (function loc/1423
                        (catch
                          (let
                            (e/3187 = (field_imm 1 loc/1423)
                             s/3186 = (field_imm 0 loc/1423))
                            (exit 16 s/3186 e/3187))
                         with (16 s/1424 e/1425)
                          (if
                            (|| (== (field_int 3 s/1424) -1)
                              (== (field_int 3 e/1425) -1))
                            0
                            (makeblock 0
                              (makeblock 0
                                (makeblock 0 (*,int) s/1424
                                  (field_int 3 s/1424))
                                (makeblock 0 (*,int) e/1425
                                  (- (field_int 3 e/1425) 1)))))))
                      locs/1421))
                *match*/3180 =
                  (apply
                    (field_imm 5
                      (field_imm 28 (global Ocaml_ocaml_types__Location!)))
                    iset/1422))
               (if (isint *match*/3180) 0
                 (let
                   (*match*/3181 =a (field_imm 0 *match*/3180)
                    *match*/3184 =a (field_imm 1 *match*/3181)
                    *match*/3185 =a (field_imm 1 *match*/3184)
                    rightmost/1427 =a (field_imm 0 *match*/3184)
                    *match*/3182 =a (field_imm 0 *match*/3181)
                    *match*/3183 =a (field_imm 1 *match*/3182)
                    leftmost/1426 =a (field_imm 0 *match*/3182)
                    lines/1428 =
                      (apply (field_imm 19 (global Stdlib__List!))
                        (function (param/3175, param/3176)
                          (let
                            (lnum/1429 =a param/3175
                             start_pos/1431 =a (field_int 1 param/3176)
                             text/1430 =a (field_imm 0 param/3176))
                            (makeblock 0 (*,*,int) text/1430
                              (apply (field_imm 7 (global Stdlib__Option!))
                                "" (field_imm 11 (global Stdlib__Int!))
                                lnum/1429)
                              start_pos/1431)))
                        (apply
                          (field_imm 30
                            (global Ocaml_ocaml_types__Location!))
                          (apply (field_imm 19 (global Stdlib__List!))
                            (function line/1483
                              (let
                                (start_pos/1482 =a (field_int 1 line/1483)
                                 text/1481 =a (field_imm 0 line/1483)
                                 end_pos/1484 =[int]
                                   (-
                                     (+ start_pos/1482
                                       (string.length text/1481))
                                     1)
                                 line_nb/1485 =
                                   (let
                                     (*match*/3177 =
                                        (apply
                                          (field_imm 2
                                            (field_imm 28
                                              (global Ocaml_ocaml_types__Location!)))
                                          iset/1422
                                          (makeblock 0 (int,int)
                                            start_pos/1482 end_pos/1484)))
                                     (if (isint *match*/3177) 0
                                       (let
                                         (*match*/3178 =a
                                            (field_imm 0 *match*/3177)
                                          *match*/3179 =a
                                            (field_imm 1 *match*/3178)
                                          p/1486 =a
                                            (field_imm 0 *match*/3178))
                                         (makeblock 0 (int)
                                           (field_int 1 p/1486))))))
                                (makeblock 0 line_nb/1485 line/1483)))
                            (apply get_lines/1418 leftmost/1426
                              rightmost/1427)))))
                   (seq
                     (apply (field_imm 138 (global Stdlib__Format!)) ppf/1417
                       [0: [18: [1: [0: [11: "<v>" 0] "<v>"]] 0] "@[<v>"])
                     (catch
                       (catch
                         (if (isint lines/1428) (exit 13)
                           (let
                             (*match*/3170 =a (field_imm 0 lines/1428)
                              line/1487 =a (field_imm 0 *match*/3170))
                             (catch
                               (stringswitch line/1487
                                case "":
                                 (let
                                   (*match*/3173 =a (field_imm 1 lines/1428))
                                   (if (isint *match*/3173) (exit 13)
                                     (exit 14)))
                                default: (exit 15))
                              with (15)
                               (let
                                 (*match*/3174 =a (field_imm 1 lines/1428))
                                 (if (isint *match*/3174)
                                   (let
                                     (line_start_cnum/1489 =a
                                        (field_imm 2 *match*/3170)
                                      line_nb/1488 =a
                                        (field_imm 1 *match*/3170))
                                     (seq
                                       (apply
                                         (field_imm 138
                                           (global Stdlib__Format!))
                                         ppf/1417
                                         [0:
                                          [2:
                                           0
                                           [11:
                                            " | "
                                            [2: 0 [17: [0: "@," 0 0] 0]]]]
                                          "%s | %s@,"]
                                         line_nb/1488 line/1487)
                                       (apply
                                         (field_imm 138
                                           (global Stdlib__Format!))
                                         ppf/1417
                                         [0:
                                          [2: [1: 1] [11: "   " 0]] "%*s   "]
                                         (string.length line_nb/1488) "")
                                       (for i/1490 0 to
                                         (-
                                           (- (field_int 3 rightmost/1427)
                                             line_start_cnum/1489)
                                           1)
                                         (let
                                           (pos/1491 =[int]
                                              (+ line_start_cnum/1489 i/1490))
                                           (seq
                                             (if
                                               (!=
                                                 (apply
                                                   (field_imm 3
                                                     (field_imm 28
                                                       (global Ocaml_ocaml_types__Location!)))
                                                   iset/1422 pos/1491)
                                                 0)
                                               (apply
                                                 (field_imm 138
                                                   (global Stdlib__Format!))
                                                 ppf/1417
                                                 [0:
                                                  [18:
                                                   [0:
                                                    [0:
                                                     [12:
                                                      '<' [2: 0 [12: '>' 0]]]
                                                     "<%s>"]]
                                                   0]
                                                  "@{<%s>"]
                                                 highlight_tag/1420)
                                               0)
                                             (if
                                               (apply
                                                 (field_imm 1
                                                   (field_imm 28
                                                     (global Ocaml_ocaml_types__Location!)))
                                                 iset/1422 pos/1491)
                                               (apply
                                                 (field_imm 22
                                                   (global Stdlib__Format!))
                                                 ppf/1417 '^')
                                               (if
                                                 (< i/1490
                                                   (string.length line/1487))
                                                 (if
                                                   (==
                                                     (string.get line/1487
                                                       i/1490)
                                                     '\t')
                                                   (apply
                                                     (field_imm 22
                                                       (global Stdlib__Format!))
                                                     ppf/1417 '\t')
                                                   (apply
                                                     (field_imm 22
                                                       (global Stdlib__Format!))
                                                     ppf/1417 ' '))
                                                 0))
                                             (if
                                               (!=
                                                 (apply
                                                   (field_imm 4
                                                     (field_imm 28
                                                       (global Ocaml_ocaml_types__Location!)))
                                                   iset/1422 pos/1491)
                                                 0)
                                               (apply
                                                 (field_imm 138
                                                   (global Stdlib__Format!))
                                                 ppf/1417
                                                 [0: [17: 1 0] "@}"])
                                               0))))
                                       (apply
                                         (field_imm 138
                                           (global Stdlib__Format!))
                                         ppf/1417
                                         [0:
                                          [17: 1 [17: [0: "@," 0 0] 0]]
                                          "@}@,"])))
                                   (exit 14))))))
                        with (14)
                         (apply
                           (field_imm 62 (global Ocaml_ocaml_types__Misc!))
                           [0: "|"] (makeblock 0 (int) max_lines/1419)
                           ppf/1417
                           (apply (field_imm 19 (global Stdlib__List!))
                             (function (param/3167, param/3168,
                               param/3169[int])
                               (let
                                 (line_start_cnum/1494 =a param/3169
                                  line_nb/1493 =a param/3168
                                  line/1492 =a param/3167
                                  line/1495 =
                                    (apply
                                      (field_imm 18 (global Stdlib__String!))
                                      (function i/1496[int] car/1497[int]
                                        : int
                                        (if
                                          (apply
                                            (field_imm 1
                                              (field_imm 28
                                                (global Ocaml_ocaml_types__Location!)))
                                            iset/1422
                                            (+ line_start_cnum/1494 i/1496))
                                          car/1497 '.'))
                                      line/1492))
                                 (makeblock 0 line_nb/1493 line/1495)))
                             lines/1428)))
                      with (13) 0)
                     (apply (field_imm 138 (global Stdlib__Format!)) ppf/1417
                       [0: [17: 0 0] "@]"])))))))
        (setfield_ptr(root-init) 31 (global Ocaml_ocaml_types__Location!)
          highlight_quote/1415))
      (let
        (lines_around/1500 =
           (function start_pos/1502 end_pos/1503 seek/1504 read_char/1505
             (seq (apply seek/1504 (field_int 2 start_pos/1502))
               (let
                 (lines/1506 = (makemutable 0 0)
                  bol/1507 =
                    (makemutable 0 (int) (field_int 2 start_pos/1502))
                  cur/1508 =
                    (makemutable 0 (int) (field_int 2 start_pos/1502))
                  b/1509 = (apply (field_imm 0 (global Stdlib__Buffer!)) 80)
                  add_line/1551 =
                    (function param/1554[int] : int
                      (if (< (field_int 0 bol/1507) (field_int 0 cur/1508))
                        (let
                          (text/1553 =
                             (apply (field_imm 1 (global Stdlib__Buffer!))
                               b/1509))
                          (seq
                            (apply (field_imm 7 (global Stdlib__Buffer!))
                              b/1509)
                            (setfield_ptr 0 lines/1506
                              (makeblock 0
                                (makeblock 0 (*,int) text/1553
                                  (field_int 0 bol/1507))
                                (field_mut 0 lines/1506)))
                            (setfield_imm 0 bol/1507 (field_int 0 cur/1508))))
                        0)))
                 (letrec
                   (loop/1555
                      (function param/1557[int] : int
                        (if
                          (>= (field_int 0 bol/1507)
                            (field_int 3 end_pos/1503))
                          0
                          (let (*match*/3188 = (apply read_char/1505 0))
                            (if (isint *match*/3188) (apply add_line/1551 0)
                              (let (c/1556 =a (field_imm 0 *match*/3188))
                                (seq (+:=1 cur/1508)
                                  (catch
                                    (if (!= c/1556 10)
                                      (if (!= c/1556 13) (exit 19)
                                        (apply loop/1555 0))
                                      (seq (apply add_line/1551 0)
                                        (apply loop/1555 0)))
                                   with (19)
                                    (seq
                                      (apply
                                        (field_imm 11
                                          (global Stdlib__Buffer!))
                                        b/1509 c/1556)
                                      (apply loop/1555 0))))))))))
                   (seq (apply loop/1555 0)
                     (apply (field_imm 9 (global Stdlib__List!))
                       (field_mut 0 lines/1506))))))))
        (setfield_ptr(root-init) 32 (global Ocaml_ocaml_types__Location!)
          lines_around/1500))
      (let
        (lines_around_from_lexbuf/1558 =
           (function start_pos/1560 end_pos/1561 lb/1562
             (let
               (rel/1563 =
                  (function n/1565[int] : int
                    (- n/1565 (field_int 3 lb/1562))))
               (if (< (apply rel/1563 (field_int 2 start_pos/1560)) 0) 0
                 (let
                   (pos/1566 = (makemutable 0 (int) 0)
                    seek/1567 =
                      (function n/1569[int] : int
                        (setfield_imm 0 pos/1566 (apply rel/1563 n/1569)))
                    read_char/1570 =
                      (function param/1573[int]
                        (if (>= (field_int 0 pos/1566) (field_int 2 lb/1562))
                          0
                          (let
                            (c/1572 =[int]
                               (bytes.get (field_mut 1 lb/1562)
                                 (field_int 0 pos/1566)))
                            (seq (+:=1 pos/1566) (makeblock 0 (int) c/1572))))))
                   (apply
                     (field_imm 32 (global Ocaml_ocaml_types__Location!))
                     start_pos/1560 end_pos/1561 seek/1567 read_char/1570))))))
        (setfield_ptr(root-init) 33 (global Ocaml_ocaml_types__Location!)
          lines_around_from_lexbuf/1558))
      (let
        (lines_around_from_phrasebuf/1574 =
           (function start_pos/1576 end_pos/1577 pb/1578
             (let
               (pos/1579 = (makemutable 0 (int) 0)
                seek/1580 =
                  (function n/1582[int] : int
                    (setfield_imm 0 pos/1579 n/1582))
                read_char/1583 =
                  (function param/1586[int]
                    (if
                      (>= (field_int 0 pos/1579)
                        (apply (field_imm 6 (global Stdlib__Buffer!))
                          pb/1578))
                      0
                      (let
                        (c/1585 =[int]
                           (apply (field_imm 5 (global Stdlib__Buffer!))
                             pb/1578 (field_int 0 pos/1579)))
                        (seq (+:=1 pos/1579) (makeblock 0 (int) c/1585))))))
               (apply (field_imm 32 (global Ocaml_ocaml_types__Location!))
                 start_pos/1576 end_pos/1577 seek/1580 read_char/1583))))
        (setfield_ptr(root-init) 34 (global Ocaml_ocaml_types__Location!)
          lines_around_from_phrasebuf/1574))
      (let
        (lines_around_from_current_input/1587 =
           (function start_pos/1589 end_pos/1590
             (let
               (*match*/3190 =
                  (field_mut 0
                    (field_imm 13 (global Ocaml_ocaml_types__Location!)))
                *match*/3191 =
                  (field_mut 0
                    (field_imm 14 (global Ocaml_ocaml_types__Location!)))
                *match*/3192 =
                  (field_mut 0
                    (field_imm 12 (global Ocaml_ocaml_types__Location!))))
               (catch
                 (if (isint *match*/3191) (exit 20)
                   (let (pb/1591 =a (field_imm 0 *match*/3191))
                     (stringswitch *match*/3192
                      case "//toplevel//":
                       (apply
                         (field_imm 34 (global Ocaml_ocaml_types__Location!))
                         start_pos/1589 end_pos/1590 pb/1591)
                      default: (exit 20))))
                with (20)
                 (if (isint *match*/3190) 0
                   (let (lb/1592 =a (field_imm 0 *match*/3190))
                     (apply
                       (field_imm 33 (global Ocaml_ocaml_types__Location!))
                       start_pos/1589 end_pos/1590 lb/1592)))))))
        (setfield_ptr(root-init) 35 (global Ocaml_ocaml_types__Location!)
          lines_around_from_current_input/1587))
      (let
        (msg/1594 =
           (function *opt*/1599 fmt/1597
             (let
               (loc/1596 =
                  (if (isint *opt*/1599)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1599)))
               (apply (field_imm 146 (global Stdlib__Format!))
                 (function txt/1598 (makeblock 0 txt/1598 loc/1596))
                 fmt/1597))))
        (setfield_ptr(root-init) 36 (global Ocaml_ocaml_types__Location!)
          msg/1594))
      (let
        (is_dummy_loc/1619 =
           (function loc/1621 : int
             (|| (== (field_int 3 (field_imm 0 loc/1621)) -1)
               (== (field_int 3 (field_imm 1 loc/1621)) -1))))
        (setfield_ptr(root-init) 37 (global Ocaml_ocaml_types__Location!)
          is_dummy_loc/1619))
      (let
        (is_quotable_loc/1622 =
           (function loc/1624 : int
             (&&
               (not
                 (apply (field_imm 37 (global Ocaml_ocaml_types__Location!))
                   loc/1624))
               (&&
                 (caml_string_equal (field_imm 0 (field_imm 0 loc/1624))
                   (field_mut 0
                     (field_imm 12 (global Ocaml_ocaml_types__Location!))))
                 (caml_string_equal (field_imm 0 (field_imm 1 loc/1624))
                   (field_mut 0
                     (field_imm 12 (global Ocaml_ocaml_types__Location!))))))))
        (setfield_ptr(root-init) 38 (global Ocaml_ocaml_types__Location!)
          is_quotable_loc/1622))
      (let (report_error/1626 = (function ppf/1628 err/1629 : int 0))
        (setfield_ptr(root-init) 39 (global Ocaml_ocaml_types__Location!)
          report_error/1626))
      (let
        (mkerror/1630 =
           (function loc/1632 sub/1633 txt/1634
             (makeblock 0 0 (makeblock 0 txt/1634 loc/1632) sub/1633)))
        (setfield_ptr(root-init) 40 (global Ocaml_ocaml_types__Location!)
          mkerror/1630))
      (let
        (errorf/1635 =
           (function *opt*/1640 *opt*/1639
             (let
               (loc/1637 =
                  (if (isint *opt*/1640)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1640))
                sub/1638 = (if (isint *opt*/1639) 0 (field_imm 0 *opt*/1639)))
               (apply (field_imm 146 (global Stdlib__Format!))
                 (apply (field_imm 40 (global Ocaml_ocaml_types__Location!))
                   loc/1637 sub/1638)))))
        (setfield_ptr(root-init) 41 (global Ocaml_ocaml_types__Location!)
          errorf/1635))
      (let
        (error/1641 =
           (function *opt*/1648 *opt*/1647 msg_str/1645
             (let
               (loc/1643 =
                  (if (isint *opt*/1648)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1648))
                sub/1644 = (if (isint *opt*/1647) 0 (field_imm 0 *opt*/1647)))
               (apply (field_imm 40 (global Ocaml_ocaml_types__Location!))
                 loc/1643 sub/1644
                 (function ppf/1646 : int
                   (apply (field_imm 12 (global Stdlib__Format!)) ppf/1646
                     msg_str/1645))))))
        (setfield_ptr(root-init) 42 (global Ocaml_ocaml_types__Location!)
          error/1641))
      (let
        (error_of_printer/1649 =
           (function *opt*/1657 *opt*/1656 pp/1653 x/1654
             (let
               (loc/1651 =
                  (if (isint *opt*/1657)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1657))
                sub/1652 = (if (isint *opt*/1656) 0 (field_imm 0 *opt*/1656)))
               (apply (field_imm 40 (global Ocaml_ocaml_types__Location!))
                 loc/1651 sub/1652
                 (function ppf/1655 : int (apply pp/1653 ppf/1655 x/1654))))))
        (setfield_ptr(root-init) 43 (global Ocaml_ocaml_types__Location!)
          error_of_printer/1649))
      (let
        (error_of_printer_file/1658 =
           (function print/1660 x/1661
             (apply (field_imm 43 (global Ocaml_ocaml_types__Location!))
               (makeblock 0
                 (apply (field_imm 0 (global Ocaml_ocaml_types__Location!))
                   (field_mut 0
                     (field_imm 12 (global Ocaml_ocaml_types__Location!)))))
               0 print/1660 x/1661)))
        (setfield_ptr(root-init) 44 (global Ocaml_ocaml_types__Location!)
          error_of_printer_file/1658))
      (let
        (default_warning_alert_reporter/1662 =
           (function report/1664 mk/1665 loc/1666 w/1667
             (let (*match*/3201 = (apply report/1664 w/1667))
               (if (isint *match*/3201) 0
                 (let
                   (*match*/3202 =a (field_imm 1 *match*/3201)
                    sub_locs/1671 =a (field_imm 3 *match*/3202)
                    is_error/1670 =a (field_int 2 *match*/3202)
                    message/1669 =a (field_imm 1 *match*/3202)
                    id/1668 =a (field_imm 0 *match*/3202)
                    msg_of_str/1672 =
                      (function str/1674
                        (function ppf/1675 : int
                          (apply (field_imm 12 (global Stdlib__Format!))
                            ppf/1675 str/1674)))
                    kind/1676 = (apply mk/1665 is_error/1670 id/1668)
                    main/1677 =
                      (makeblock 0 (apply msg_of_str/1672 message/1669)
                        loc/1666)
                    sub/1678 =
                      (apply (field_imm 19 (global Stdlib__List!))
                        (function (param/3197, param/3198)
                          (let
                            (sub_message/1680 =a param/3198
                             loc/1679 =a param/3197)
                            (makeblock 0
                              (apply msg_of_str/1672 sub_message/1680)
                              loc/1679)))
                        sub_locs/1671))
                   (makeblock 0 (makeblock 0 kind/1676 main/1677 sub/1678)))))))
        (setfield_ptr(root-init) 45 (global Ocaml_ocaml_types__Location!)
          default_warning_alert_reporter/1662))
      (let
        (default_warning_reporter/1682 =
           (apply (field_imm 45 (global Ocaml_ocaml_types__Location!))
             (field_imm 29 (global Ocaml_ocaml_types__Warnings!))
             (function is_error/1683[int] id/1684
               (if is_error/1683 (makeblock 1 id/1684) (makeblock 0 id/1684)))))
        (setfield_ptr(root-init) 46 (global Ocaml_ocaml_types__Location!)
          default_warning_reporter/1682))
      (let
        (warning_reporter/1685 =
           (makemutable 0
             (field_imm 46 (global Ocaml_ocaml_types__Location!))))
        (setfield_ptr(root-init) 47 (global Ocaml_ocaml_types__Location!)
          warning_reporter/1685))
      (let
        (report_warning/1686 =
           (function loc/1688 w/1689
             (apply
               (field_mut 0
                 (field_imm 47 (global Ocaml_ocaml_types__Location!)))
               loc/1688 w/1689)))
        (setfield_ptr(root-init) 48 (global Ocaml_ocaml_types__Location!)
          report_warning/1686))
      (let
        (formatter_for_warnings/1690 =
           (makemutable 0 (field_imm 113 (global Stdlib__Format!))))
        (setfield_ptr(root-init) 49 (global Ocaml_ocaml_types__Location!)
          formatter_for_warnings/1690))
      (let (print_warning/1691 = (function loc/1693 ppf/1694 w/1695 : int 0))
        (setfield_ptr(root-init) 50 (global Ocaml_ocaml_types__Location!)
          print_warning/1691))
      (let
        (prerr_warning/1696 =
           (function loc/1698 w/1699 : int
             (apply (field_imm 50 (global Ocaml_ocaml_types__Location!))
               loc/1698
               (field_mut 0
                 (field_imm 49 (global Ocaml_ocaml_types__Location!)))
               w/1699)))
        (setfield_ptr(root-init) 51 (global Ocaml_ocaml_types__Location!)
          prerr_warning/1696))
      (let
        (default_alert_reporter/1700 =
           (apply (field_imm 45 (global Ocaml_ocaml_types__Location!))
             (field_imm 30 (global Ocaml_ocaml_types__Warnings!))
             (function is_error/1701[int] id/1702
               (if is_error/1701 (makeblock 3 id/1702) (makeblock 2 id/1702)))))
        (setfield_ptr(root-init) 52 (global Ocaml_ocaml_types__Location!)
          default_alert_reporter/1700))
      (let
        (alert_reporter/1703 =
           (makemutable 0
             (field_imm 52 (global Ocaml_ocaml_types__Location!))))
        (setfield_ptr(root-init) 53 (global Ocaml_ocaml_types__Location!)
          alert_reporter/1703))
      (let
        (report_alert/1704 =
           (function loc/1706 w/1707
             (apply
               (field_mut 0
                 (field_imm 53 (global Ocaml_ocaml_types__Location!)))
               loc/1706 w/1707)))
        (setfield_ptr(root-init) 54 (global Ocaml_ocaml_types__Location!)
          report_alert/1704))
      (let (print_alert/1708 = (function loc/1710 ppf/1711 w/1712 : int 0))
        (setfield_ptr(root-init) 55 (global Ocaml_ocaml_types__Location!)
          print_alert/1708))
      (let
        (prerr_alert/1713 =
           (function loc/1715 w/1716 : int
             (apply (field_imm 55 (global Ocaml_ocaml_types__Location!))
               loc/1715
               (field_mut 0
                 (field_imm 49 (global Ocaml_ocaml_types__Location!)))
               w/1716)))
        (setfield_ptr(root-init) 56 (global Ocaml_ocaml_types__Location!)
          prerr_alert/1713))
      (let
        (alert/1717 =
           (function *opt*/1725 *opt*/1724 kind/1721 loc/1722 message/1723
             : int
             (let
               (def/1719 =
                  (if (isint *opt*/1725)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1725))
                use/1720 =
                  (if (isint *opt*/1724)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1724)))
               (apply (field_imm 56 (global Ocaml_ocaml_types__Location!))
                 loc/1722
                 (makeblock 0 kind/1721 message/1723 def/1719 use/1720)))))
        (setfield_ptr(root-init) 57 (global Ocaml_ocaml_types__Location!)
          alert/1717))
      (let
        (deprecated/1726 =
           (function def/1728 use/1729 loc/1730 message/1731 : int
             (apply (field_imm 57 (global Ocaml_ocaml_types__Location!))
               def/1728 use/1729 "deprecated" loc/1730 message/1731)))
        (setfield_ptr(root-init) 58 (global Ocaml_ocaml_types__Location!)
          deprecated/1726))
      (let
        (auto_include_alert/1733 =
           (function lib/1735 : int
             (let
               (message/1736 =
                  (apply (field_imm 142 (global Stdlib__Format!))
                    [0:
                     [11:
                      "OCaml's lib directory layout changed in 5.0. The "
                      [15:
                       [11:
                        " subdirectory has been automatically added to the search path, but you should add "
                        [15:
                         [11:
                          " to the command-line to silence this alert (e.g. by adding "
                          [15:
                           [11:
                            " to the list of libraries in your dune file, or adding "
                            [15:
                             [11:
                              " to your "
                              [15:
                               [11:
                                " file for ocamlbuild, or using "
                                [15: [11: " for ocamlfind)." 0]]]]]]]]]]]]]
                     "OCaml's lib directory layout changed in 5.0. The %a subdirectory has been automatically added to the search path, but you should add %a to the command-line to silence this alert (e.g. by adding %a to the list of libraries in your dune file, or adding %a to your %a file for ocamlbuild, or using %a for ocamlfind)."]
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    lib/1735
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    (apply (field_imm 27 (global Stdlib!)) "-I +" lib/1735)
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    lib/1735
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    (apply (field_imm 27 (global Stdlib!)) "use_" lib/1735)
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    "_tags"
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    (apply (field_imm 27 (global Stdlib!)) "-package "
                      lib/1735))
                alert/1832 =
                  (makeblock 0 "ocaml_deprecated_auto_include"
                    (apply (field_imm 142 (global Stdlib__Format!))
                      [0:
                       [18: [1: [0: 0 ""]] [17: 3 [15: [17: 0 0]]]]
                       "@[@\n%a@]"]
                      (field_imm 134 (global Stdlib__Format!)) message/1736)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))))
               (apply (field_imm 56 (global Ocaml_ocaml_types__Location!))
                 (field_imm 1 (global Ocaml_ocaml_types__Location!))
                 alert/1832))))
        (setfield_ptr(root-init) 59 (global Ocaml_ocaml_types__Location!)
          auto_include_alert/1733))
      (let
        (deprecated_script_alert/1833 =
           (function program/1835 : int
             (let
               (message/1836 =
                  (apply (field_imm 142 (global Stdlib__Format!))
                    [0:
                     [11:
                      "Running "
                      [15:
                       [11:
                        " where the first argument is an implicit basename with no extension (e.g. "
                        [15:
                         [11:
                          ") is deprecated. Either rename the script ("
                          [15:
                           [11:
                            ") or qualify the basename (" [15: [12: ')' 0]]]]]]]]]
                     "Running %a where the first argument is an implicit basename with no extension (e.g. %a) is deprecated. Either rename the script (%a) or qualify the basename (%a)"]
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    program/1835
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    (apply (field_imm 27 (global Stdlib!)) program/1835
                      " script-file")
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    (apply (field_imm 27 (global Stdlib!)) program/1835
                      " script-file.ml")
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    (apply (field_imm 27 (global Stdlib!)) program/1835
                      " ./script-file"))
                alert/1837 =
                  (makeblock 0 "ocaml_deprecated_cli"
                    (apply (field_imm 142 (global Stdlib__Format!))
                      [0:
                       [18: [1: [0: 0 ""]] [17: 3 [15: [17: 0 0]]]]
                       "@[@\n%a@]"]
                      (field_imm 134 (global Stdlib__Format!)) message/1836)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))))
               (apply (field_imm 56 (global Ocaml_ocaml_types__Location!))
                 (field_imm 1 (global Ocaml_ocaml_types__Location!))
                 alert/1837))))
        (setfield_ptr(root-init) 60 (global Ocaml_ocaml_types__Location!)
          deprecated_script_alert/1833))
      (let (error_of_exn/1838 = (makemutable 0 0))
        (setfield_ptr(root-init) 68 (global Ocaml_ocaml_types__Location!)
          error_of_exn/1838))
      (let
        (register_error_of_exn/1839 =
           (function f/1841 : int
             (setfield_ptr 0
               (field_imm 68 (global Ocaml_ocaml_types__Location!))
               (makeblock 0 f/1841
                 (field_mut 0
                   (field_imm 68 (global Ocaml_ocaml_types__Location!)))))))
        (setfield_ptr(root-init) 61 (global Ocaml_ocaml_types__Location!)
          register_error_of_exn/1839))
      (let
        (Already_displayed_error/1842 =
           (field_imm 31 (global Ocaml_ocaml_types__Warnings!)))
        (setfield_ptr(root-init) 62 (global Ocaml_ocaml_types__Location!)
          Already_displayed_error/1842))
      (let
        (error_of_exn/1843 =
           (function exn/1844
             (catch
               (if
                 (== exn/1844
                   (field_imm 62 (global Ocaml_ocaml_types__Location!)))
                 [0: 301815898] (exit 21))
              with (21)
               (letrec
                 (loop/1845
                    (function param/1849
                      (if (isint param/1849) 0
                        (let
                          (rest/1847 =a (field_imm 1 param/1849)
                           f/1846 =a (field_imm 0 param/1849)
                           *match*/3206 = (apply f/1846 exn/1844))
                          (if (isint *match*/3206)
                            (apply loop/1845 rest/1847)
                            (let (error/1848 =a (field_imm 0 *match*/3206))
                              (makeblock 0 (makeblock 0 17724 error/1848))))))))
                 (apply loop/1845
                   (field_mut 0
                     (field_imm 68 (global Ocaml_ocaml_types__Location!))))))))
        (setfield_ptr(root-init) 63 (global Ocaml_ocaml_types__Location!)
          error_of_exn/1843))
      (let
        (*match*/3209 =
           (apply (field_imm 61 (global Ocaml_ocaml_types__Location!))
             (function param/1851
               (catch
                 (let (tag/3207 =a (field_imm 0 param/1851))
                   (if (== tag/3207 (field_imm 10 (global Stdlib!)))
                     (let (msg/1850 =a (field_imm 1 param/1851))
                       (makeblock 0
                         (apply
                           (field_imm 41
                             (global Ocaml_ocaml_types__Location!))
                           (makeblock 0
                             (apply
                               (field_imm 0
                                 (global Ocaml_ocaml_types__Location!))
                               (field_mut 0
                                 (field_imm 12
                                   (global Ocaml_ocaml_types__Location!)))))
                           0
                           [0: [11: "I/O error: " [2: 0 0]] "I/O error: %s"]
                           msg/1850)))
                     (exit 22)))
                with (22) 0))))
        0)
      (let
        (report_exception/1853 =
           (function ppf/1855 exn/1856 : int
             (letrec
               (loop/1857
                  (function n/1858[int] exn/1859 : int
                    (catch
                      (try
                        (exit 26
                          (apply
                            (field_imm 63
                              (global Ocaml_ocaml_types__Location!))
                            exn/1859))
                       with exn/1861
                        (catch
                          (if (> n/1858 0)
                            (apply loop/1857 (- n/1858 1) exn/1861)
                            (exit 27))
                         with (27) (reraise exn/1861)))
                     with (26 val/3210)
                      (if (isint val/3210) (reraise exn/1859)
                        (let (*match*/3211 =a (field_imm 0 val/3210))
                          (if (isint *match*/3211) 0
                            (let (err/1860 =a (field_imm 1 *match*/3211))
                              (apply
                                (field_imm 39
                                  (global Ocaml_ocaml_types__Location!))
                                ppf/1855 err/1860))))))))
               (apply loop/1857 5 exn/1856))))
        (setfield_ptr(root-init) 64 (global Ocaml_ocaml_types__Location!)
          report_exception/1853))
      (let
        (Error/1862 =
           (makeblock 248 "Ocaml_ocaml_types.Location.Error"
             (caml_fresh_oo_id 0)))
        (setfield_ptr(root-init) 65 (global Ocaml_ocaml_types__Location!)
          Error/1862))
      (let
        (*match*/3214 =
           (apply (field_imm 61 (global Ocaml_ocaml_types__Location!))
             (function param/1864
               (catch
                 (let (tag/3212 =a (field_imm 0 param/1864))
                   (if
                     (== tag/3212
                       (field_imm 65 (global Ocaml_ocaml_types__Location!)))
                     (let (e/1863 =a (field_imm 1 param/1864))
                       (makeblock 0 e/1863))
                     (exit 28)))
                with (28) 0))))
        0)
      (let
        (raise_errorf/1865 =
           (function *opt*/1871 *opt*/1870
             (let
               (loc/1867 =
                  (if (isint *opt*/1871)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1871))
                sub/1868 = (if (isint *opt*/1870) 0 (field_imm 0 *opt*/1870)))
               (apply (field_imm 146 (global Stdlib__Format!))
                 (function txt/1869
                   (raise
                     (makeblock 0
                       (field_imm 65 (global Ocaml_ocaml_types__Location!))
                       (apply
                         (field_imm 40 (global Ocaml_ocaml_types__Location!))
                         loc/1867 sub/1868 txt/1869))))))))
        (setfield_ptr(root-init) 66 (global Ocaml_ocaml_types__Location!)
          raise_errorf/1865))
      0)))
(seq
  (let (in_file/438 = (field_imm 18 (global Ocaml_ocaml_types__Warnings!)))
    (setfield_ptr(root-init) 0 (global Ocaml_ocaml_types__Location!)
      in_file/438))
  (let
    (none/439 =
       (apply (field_imm 0 (global Ocaml_ocaml_types__Location!)) "_none_"))
    (setfield_ptr(root-init) 1 (global Ocaml_ocaml_types__Location!)
      none/439))
  (let
    (is_none/440 =
       (function l/442 : int
         (caml_equal l/442
           (field_imm 1 (global Ocaml_ocaml_types__Location!)))))
    (setfield_ptr(root-init) 2 (global Ocaml_ocaml_types__Location!)
      is_none/440))
  (let
    (curr/443 =
       (function lexbuf/445
         (makeblock 0 (*,*,int) (field_mut 10 lexbuf/445)
           (field_mut 11 lexbuf/445) 0)))
    (setfield_ptr(root-init) 3 (global Ocaml_ocaml_types__Location!)
      curr/443))
  (let
    (init/446 =
       (function lexbuf/448 fname/449 : int
         (setfield_ptr 11 lexbuf/448
           (makeblock 0 (*,int,int,int) fname/449 1 0 0))))
    (setfield_ptr(root-init) 4 (global Ocaml_ocaml_types__Location!)
      init/446))
  (let
    (symbol_rloc/450 =
       (function param/470[int]
         (makeblock 0 (*,*,int)
           (apply (field_imm 4 (global Stdlib__Parsing!)) 0)
           (apply (field_imm 5 (global Stdlib__Parsing!)) 0) 0)))
    (setfield_ptr(root-init) 5 (global Ocaml_ocaml_types__Location!)
      symbol_rloc/450))
  (let
    (symbol_gloc/471 =
       (function param/473[int]
         (makeblock 0 (*,*,int)
           (apply (field_imm 4 (global Stdlib__Parsing!)) 0)
           (apply (field_imm 5 (global Stdlib__Parsing!)) 0) 1)))
    (setfield_ptr(root-init) 6 (global Ocaml_ocaml_types__Location!)
      symbol_gloc/471))
  (let
    (rhs_loc/474 =
       (function n/476[int]
         (makeblock 0 (*,*,int)
           (apply (field_imm 6 (global Stdlib__Parsing!)) n/476)
           (apply (field_imm 7 (global Stdlib__Parsing!)) n/476) 0)))
    (setfield_ptr(root-init) 7 (global Ocaml_ocaml_types__Location!)
      rhs_loc/474))
  (let
    (rhs_interval/477 =
       (function m/479[int] n/480[int]
         (makeblock 0 (*,*,int)
           (apply (field_imm 6 (global Stdlib__Parsing!)) m/479)
           (apply (field_imm 7 (global Stdlib__Parsing!)) n/480) 0)))
    (setfield_ptr(root-init) 8 (global Ocaml_ocaml_types__Location!)
      rhs_interval/477))
  (let
    (get_pos_info/481 =
       (function pos/483
         (makeblock 0 (*,int,int) (field_imm 0 pos/483) (field_int 1 pos/483)
           (- (field_int 3 pos/483) (field_int 2 pos/483)))))
    (setfield_ptr(root-init) 9 (global Ocaml_ocaml_types__Location!)
      get_pos_info/481))
  (let (mkloc/487 = (function txt/489 loc/490 (makeblock 0 txt/489 loc/490)))
    (setfield_ptr(root-init) 10 (global Ocaml_ocaml_types__Location!)
      mkloc/487))
  (let
    (mknoloc/491 =
       (function txt/493
         (apply (field_imm 10 (global Ocaml_ocaml_types__Location!)) txt/493
           (field_imm 1 (global Ocaml_ocaml_types__Location!)))))
    (setfield_ptr(root-init) 11 (global Ocaml_ocaml_types__Location!)
      mknoloc/491))
  (let (input_name/494 = (makemutable 0 "_none_"))
    (setfield_ptr(root-init) 12 (global Ocaml_ocaml_types__Location!)
      input_name/494))
  (let (input_lexbuf/495 = (makemutable 0 0))
    (setfield_ptr(root-init) 13 (global Ocaml_ocaml_types__Location!)
      input_lexbuf/495))
  (let (input_phrase_buffer/496 = (makemutable 0 0))
    (setfield_ptr(root-init) 14 (global Ocaml_ocaml_types__Location!)
      input_phrase_buffer/496))
  (let (status/538 = (makemutable 0 (int) 0))
    (setfield_ptr(root-init) 15 (global Ocaml_ocaml_types__Location!)
      status/538))
  (let
    (setup_terminal/547 =
       (function param/557[int] : int
         (if
           (==
             (field_int 0
               (field_imm 15 (global Ocaml_ocaml_types__Location!)))
             0)
           (setfield_imm 0
             (field_imm 15 (global Ocaml_ocaml_types__Location!))
             (apply (field_imm 0 (global Ocaml_ocaml_types__Terminfo!))
               (field_imm 38 (global Stdlib!))))
           0)))
    (setfield_ptr(root-init) 16 (global Ocaml_ocaml_types__Location!)
      setup_terminal/547))
  (let (num_loc_lines/558 = (makemutable 0 (int) 0))
    (setfield_ptr(root-init) 17 (global Ocaml_ocaml_types__Location!)
      num_loc_lines/558))
  (let
    (is_first_message/559 =
       (function param/561[int] : int
         (==
           (field_int 0 (field_imm 17 (global Ocaml_ocaml_types__Location!)))
           0)))
    (setfield_ptr(root-init) 18 (global Ocaml_ocaml_types__Location!)
      is_first_message/559))
  (let
    (reset/562 =
       (function param/564[int] : int
         (setfield_imm 0 (field_imm 17 (global Ocaml_ocaml_types__Location!))
           0)))
    (setfield_ptr(root-init) 19 (global Ocaml_ocaml_types__Location!)
      reset/562))
  (let
    (echo_eof/565 =
       (function param/567[int] : int
         (seq (apply (field_imm 46 (global Stdlib!)) 0)
           (+:=1 (field_imm 17 (global Ocaml_ocaml_types__Location!))))))
    (setfield_ptr(root-init) 20 (global Ocaml_ocaml_types__Location!)
      echo_eof/565))
  (let
    (separate_new_message/568 =
       (function ppf/570 : int
         (if
           (not
             (apply (field_imm 18 (global Ocaml_ocaml_types__Location!)) 0))
           (seq (apply (field_imm 40 (global Stdlib__Format!)) ppf/570 0)
             (+:=1 (field_imm 17 (global Ocaml_ocaml_types__Location!))))
           0)))
    (setfield_ptr(root-init) 21 (global Ocaml_ocaml_types__Location!)
      separate_new_message/568))
  (let
    (print_updating_num_loc_lines/887 =
       (function ppf/889 f/890 arg/891 : int
         (let
           (out_functions/892 =
              (apply (field_imm 103 (global Stdlib__Format!)) ppf/889 0)
            out_string/893 =
              (function str/895 start/896[int] len/897[int] : int
                (letrec
                  (count/898
                     (function i/899[int] c/900[int] : int
                       (if (== i/899 (+ start/896 len/897)) c/900
                         (if (== (string.get str/895 i/899) '\n')
                           (apply count/898 (1+ i/899) (1+ c/900))
                           (apply count/898 (1+ i/899) c/900)))))
                  (seq
                    (setfield_imm 0
                      (field_imm 17 (global Ocaml_ocaml_types__Location!))
                      (+
                        (field_int 0
                          (field_imm 17
                            (global Ocaml_ocaml_types__Location!)))
                        (apply count/898 start/896 0)))
                    (apply (field_imm 0 out_functions/892) str/895 start/896
                      len/897)))))
           (seq
             (apply (field_imm 101 (global Stdlib__Format!)) ppf/889
               (makeblock 0 out_string/893 (field_imm 1 out_functions/892)
                 (field_imm 2 out_functions/892)
                 (field_imm 3 out_functions/892)
                 (field_imm 4 out_functions/892)))
             (apply f/890 ppf/889 arg/891)
             (apply (field_imm 38 (global Stdlib__Format!)) ppf/889 0)
             (apply (field_imm 101 (global Stdlib__Format!)) ppf/889
               out_functions/892)))))
    (setfield_ptr(root-init) 22 (global Ocaml_ocaml_types__Location!)
      print_updating_num_loc_lines/887))
  (let (setup_tags/970 = (function param/972[int] : int 0))
    (setfield_ptr(root-init) 23 (global Ocaml_ocaml_types__Location!)
      setup_tags/970))
  (let
    (rewrite_absolute_path/973 =
       (function path/975
         (let
           (*match*/3133 =
              (apply (field_imm 65 (global Ocaml_ocaml_types__Misc!)) 0))
           (if (isint *match*/3133) path/975
             (apply
               (field_imm 10
                 (global Ocaml_ocaml_types__Build_path_prefix_map!))
               (field_imm 0 *match*/3133) path/975)))))
    (setfield_ptr(root-init) 24 (global Ocaml_ocaml_types__Location!)
      rewrite_absolute_path/973))
  (let
    (rewrite_find_first_existing/1068 =
       (function path/1070
         (let
           (*match*/3134 =
              (apply (field_imm 65 (global Ocaml_ocaml_types__Misc!)) 0))
           (if (isint *match*/3134)
             (if
               (apply (field_imm 0 (global Ocaml_ocaml_types__Sys!))
                 path/1070)
               (makeblock 0 path/1070) 0)
             (let
               (matches/1079 =
                  (apply
                    (field_imm 9
                      (global Ocaml_ocaml_types__Build_path_prefix_map!))
                    (field_imm 0 *match*/3134) path/1070))
               (if (isint matches/1079)
                 (if
                   (apply (field_imm 0 (global Ocaml_ocaml_types__Sys!))
                     path/1070)
                   (makeblock 0 path/1070) 0)
                 (makeblock 0
                   (apply (field_imm 38 (global Stdlib__List!))
                     (field_imm 0 (global Ocaml_ocaml_types__Sys!))
                     matches/1079))))))))
    (setfield_ptr(root-init) 25 (global Ocaml_ocaml_types__Location!)
      rewrite_find_first_existing/1068))
  (let
    (print_loc/1146 =
       (function ppf/1148 loc/1149 : int
         (seq (apply (field_imm 23 (global Ocaml_ocaml_types__Location!)) 0)
           (let
             (file_valid/1150 =
                (function param/1152 : int
                  (catch
                    (catch
                      (stringswitch param/1152
                       case "": (exit 2)
                       case "//toplevel//": (exit 2)
                       case "_none_": 1
                       default: (exit 3))
                     with (3) 1)
                   with (2) 0))
              line_valid/1153 =
                (function line/1155[int] : int (> line/1155 0))
              file/1160 =
                (if
                  (caml_string_equal (field_imm 0 (field_imm 0 loc/1149)) "")
                  (field_mut 0
                    (field_imm 12 (global Ocaml_ocaml_types__Location!)))
                  (field_imm 0 (field_imm 0 loc/1149)))
              startline/1161 =[int] (field_int 1 (field_imm 0 loc/1149))
              endline/1162 =[int] (field_int 1 (field_imm 1 loc/1149))
              startchar/1163 =[int]
                (- (field_int 3 (field_imm 0 loc/1149))
                  (field_int 2 (field_imm 0 loc/1149)))
              endchar/1164 =[int]
                (- (field_int 3 (field_imm 1 loc/1149))
                  (field_int 2 (field_imm 1 loc/1149)))
              first/1165 = (makemutable 0 (int) 1)
              capitalize/1166 =
                (function s/1168
                  (if (field_int 0 first/1165)
                    (seq (setfield_imm 0 first/1165 0)
                      (apply (field_imm 27 (global Stdlib__String!)) s/1168))
                    s/1168))
              comma/1169 =
                (function param/1194[int] : int
                  (if (field_int 0 first/1165) 0
                    (apply (field_imm 138 (global Stdlib__Format!)) ppf/1148
                      [0: [11: ", " 0] ", "]))))
             (seq
               (apply (field_imm 138 (global Stdlib__Format!)) ppf/1148
                 [0: [18: [0: [0: [11: "<loc>" 0] "<loc>"]] 0] "@{<loc>"])
               (apply comma/1169 0)
               (let
                 (startline/1195 =[int]
                    (if (apply line_valid/1153 startline/1161) startline/1161
                      1)
                  endline/1196 =[int]
                    (if (apply line_valid/1153 endline/1162) endline/1162
                      startline/1195))
                 (seq
                   (if (== startline/1195 endline/1196)
                     (apply (field_imm 138 (global Stdlib__Format!)) ppf/1148
                       [0: [2: 0 [12: ' ' [4: 3 0 0 0]]] "%s %i"]
                       (apply capitalize/1166 "line") startline/1195)
                     (apply (field_imm 138 (global Stdlib__Format!)) ppf/1148
                       [0:
                        [2: 0 [12: ' ' [4: 3 0 0 [12: '-' [4: 3 0 0 0]]]]]
                        "%s %i-%i"]
                       (apply capitalize/1166 "lines") startline/1195
                       endline/1196))
                   (if (&& (!= startchar/1163 -1) (!= endchar/1164 -1))
                     (seq (apply comma/1169 0)
                       (apply (field_imm 138 (global Stdlib__Format!))
                         ppf/1148
                         [0:
                          [2: 0 [12: ' ' [4: 3 0 0 [12: '-' [4: 3 0 0 0]]]]]
                          "%s %i-%i"]
                         (apply capitalize/1166 "characters") startchar/1163
                         endchar/1164))
                     0)
                   (apply (field_imm 138 (global Stdlib__Format!)) ppf/1148
                     [0: [17: 1 0] "@}"]))))))))
    (setfield_ptr(root-init) 26 (global Ocaml_ocaml_types__Location!)
      print_loc/1146))
  (let
    (print_locs/1197 =
       (function ppf/1199 locs/1200 : int
         (apply (field_imm 131 (global Stdlib__Format!))
           (makeblock 0
             (function ppf/1201 param/1202[int] : int
               (apply (field_imm 138 (global Stdlib__Format!)) ppf/1201
                 [0: [12: ',' [17: [0: "@ " 1 0] 0]] ",@ "])))
           (field_imm 26 (global Ocaml_ocaml_types__Location!)) ppf/1199
           locs/1200)))
    (setfield_ptr(root-init) 27 (global Ocaml_ocaml_types__Location!)
      print_locs/1197))
  (let
    (ISet/1279 =
       (let
         (of_intervals/1205 =
            (function intervals/1207
              (let
                (pos/1208 =
                   (apply (field_imm 58 (global Stdlib__List!))
                     (function param/1217 param/1216 : int
                       (let
                         (kn/1213 =
                            (function param/1215[int] : int
                              (if (>= param/1215 83) 0 1)))
                         (caml_compare
                           (makeblock 0 (*,int)
                             (field_imm 1 (field_imm 0 param/1217))
                             (apply kn/1213 (field_imm 1 param/1217)))
                           (makeblock 0 (*,int)
                             (field_imm 1 (field_imm 0 param/1216))
                             (apply kn/1213 (field_imm 1 param/1216))))))
                     (apply (field_imm 14 (global Stdlib__List!))
                       (apply (field_imm 19 (global Stdlib__List!))
                         (function (param/3146, param/3147)
                           (let
                             (y/1221 =a (field_imm 1 param/3147)
                              x/1219 =a (field_imm 1 param/3146))
                             (if (caml_greaterthan x/1219 y/1221) 0
                               (makeblock 0
                                 (makeblock 0 (*,int)
                                   (makeblock 0 (field_imm 0 param/3146)
                                     x/1219)
                                   83)
                                 (makeblock 0
                                   (makeblock 0 (*,int)
                                     (makeblock 0 (field_imm 0 param/3147)
                                       y/1221)
                                     69)
                                   0)))))
                         intervals/1207)))
                 *match*/3141 =
                   (apply (field_imm 25 (global Stdlib__List!))
                     (function param/1235 param/1234
                       (let
                         (a/1227 =a (field_imm 0 param/1234)
                          acc/1226 =a (field_imm 1 param/1235)
                          nesting/1225 =a (field_imm 0 param/1235))
                         (if (>= (field_imm 1 param/1234) 83)
                           (if (isint nesting/1225)
                             (makeblock 0
                               (makeblock 0 -764103652
                                 (makeblock 0 (*,int) a/1227 0))
                               acc/1226)
                             (let
                               (*match*/3135 =a (field_imm 1 nesting/1225))
                               (makeblock 0
                                 (makeblock 0 -764103652
                                   (makeblock 0 (*,int)
                                     (field_imm 0 *match*/3135)
                                     (+ (field_imm 1 *match*/3135) 1)))
                                 acc/1226)))
                           (if (isint nesting/1225)
                             (raise
                               (makeblock 0 (global Assert_failure/28!)
                                 [0: "lib/location.ml" 326 26]))
                             (let
                               (*match*/3136 =a (field_imm 1 nesting/1225)
                                s/1231 =a (field_imm 0 *match*/3136))
                               (if (!= (field_imm 1 *match*/3136) 0)
                                 (makeblock 0
                                   (makeblock 0 -764103652
                                     (makeblock 0 (*,int) s/1231
                                       (- (field_imm 1 *match*/3136) 1)))
                                   acc/1226)
                                 (makeblock 0 867153157
                                   (makeblock 0 (makeblock 0 s/1231 a/1227)
                                     acc/1226))))))))
                     [0: 867153157 0] pos/1208))
                (seq
                  (if (== (field_imm 0 *match*/3141) 867153157) 0
                    (raise
                      (makeblock 0 (global Assert_failure/28!)
                        [0: "lib/location.ml" 330 4])))
                  (apply (field_imm 9 (global Stdlib__List!))
                    (field_imm 1 *match*/3141)))))
          mem/1236 =
            (function iset/1238 pos/1239 : int
              (apply (field_imm 33 (global Stdlib__List!))
                (function (param/3148, param/3149) : int
                  (&& (caml_lessequal (field_imm 1 param/3148) pos/1239)
                    (caml_lessequal pos/1239 (field_imm 1 param/3149))))
                iset/1238))
          find_bound_in/1243 =
            (function iset/1245 param/1253
              (let
                (end_/1247 =a (field_imm 1 param/1253)
                 start/1246 =a (field_imm 0 param/1253))
                (apply (field_imm 41 (global Stdlib__List!))
                  (function (param/3152, param/3153)
                    (let (x/1249 =a (field_imm 1 param/3152))
                      (if
                        (&& (caml_lessequal start/1246 x/1249)
                          (caml_lessequal x/1249 end_/1247))
                        (makeblock 0
                          (makeblock 0 (field_imm 0 param/3152) x/1249))
                        (let (y/1251 =a (field_imm 1 param/3153))
                          (if
                            (&& (caml_lessequal start/1246 y/1251)
                              (caml_lessequal y/1251 end_/1247))
                            (makeblock 0
                              (makeblock 0 (field_imm 0 param/3153) y/1251))
                            0)))))
                  iset/1245)))
          is_start/1254 =
            (function iset/1256 pos/1257
              (apply (field_imm 41 (global Stdlib__List!))
                (function (param/3154, param/3155)
                  (if (caml_equal pos/1257 (field_imm 1 param/3154))
                    (makeblock 0 (field_imm 0 param/3154)) 0))
                iset/1256))
          is_end/1261 =
            (function iset/1263 pos/1264
              (apply (field_imm 41 (global Stdlib__List!))
                (function (param/3156, param/3157)
                  (if (caml_equal pos/1264 (field_imm 1 param/3157))
                    (makeblock 0 (field_imm 0 param/3157)) 0))
                iset/1263))
          extrema/1268 =
            (function iset/1270
              (if (== iset/1270 0) 0
                (makeblock 0
                  (makeblock 0
                    (field_mut 0
                      (apply (field_imm 5 (global Stdlib__List!)) iset/1270))
                    (field_mut 1
                      (apply (field_imm 5 (global Stdlib__List!))
                        (apply (field_imm 9 (global Stdlib__List!))
                          iset/1270))))))))
         (makeblock 0 of_intervals/1205 mem/1236 find_bound_in/1243
           is_start/1254 is_end/1261 extrema/1268)))
    (seq
      (setfield_ptr(root-init) 28 (global Ocaml_ocaml_types__Location!)
        ISet/1279)
      (let
        (highlight_terminfo/1280 =
           (function lb/1282 ppf/1283 locs/1284 : int
             (seq (apply (field_imm 38 (global Stdlib__Format!)) ppf/1283 0)
               (let (pos0/1285 =[int] (~ (field_int 3 lb/1282)))
                 (seq
                   (if (< pos0/1285 0) (raise (field_imm 2 (global Stdlib!)))
                     0)
                   (let
                     (lines/1286 =mut[int]
                        (field_int 0
                          (field_imm 17
                            (global Ocaml_ocaml_types__Location!))))
                     (seq
                       (for i/1287 pos0/1285 to (- (field_int 2 lb/1282) 1)
                         (if
                           (== (bytes.get (field_mut 1 lb/1282) i/1287) '\n')
                           (assign lines/1286 (1+ *lines/1286)) 0))
                       (if
                         (>= *lines/1286
                           (-
                             (apply
                               (field_imm 1
                                 (global Ocaml_ocaml_types__Terminfo!))
                               (field_imm 38 (global Stdlib!)))
                             2))
                         (raise (field_imm 2 (global Stdlib!))) 0)
                       (apply (field_imm 62 (global Stdlib!))
                         (field_imm 38 (global Stdlib!)))
                       (apply
                         (field_imm 2 (global Ocaml_ocaml_types__Terminfo!))
                         (field_imm 38 (global Stdlib!)) *lines/1286)
                       (let (bol/1385 =mut[int] 0)
                         (seq (apply (field_imm 41 (global Stdlib!)) "# ")
                           (for pos/1386 0 to
                             (- (- (field_int 2 lb/1282) pos0/1285) 1)
                             (seq
                               (if *bol/1385
                                 (seq
                                   (apply (field_imm 41 (global Stdlib!))
                                     "  ")
                                   (assign bol/1385 0))
                                 0)
                               (if
                                 (apply (field_imm 33 (global Stdlib__List!))
                                   (function loc/1387 : int
                                     (== pos/1386
                                       (field_int 3 (field_imm 0 loc/1387))))
                                   locs/1284)
                                 (apply
                                   (field_imm 4
                                     (global Ocaml_ocaml_types__Terminfo!))
                                   (field_imm 38 (global Stdlib!)) 1)
                                 0)
                               (if
                                 (apply (field_imm 33 (global Stdlib__List!))
                                   (function loc/1388 : int
                                     (== pos/1386
                                       (field_int 3 (field_imm 1 loc/1388))))
                                   locs/1284)
                                 (apply
                                   (field_imm 4
                                     (global Ocaml_ocaml_types__Terminfo!))
                                   (field_imm 38 (global Stdlib!)) 0)
                                 0)
                               (let
                                 (c/1389 =[int]
                                    (bytes.get (field_mut 1 lb/1282)
                                      (+ pos/1386 pos0/1285)))
                                 (seq
                                   (apply (field_imm 40 (global Stdlib!))
                                     c/1389)
                                   (assign bol/1385 (== c/1389 '\n'))))))
                           (apply
                             (field_imm 4
                               (global Ocaml_ocaml_types__Terminfo!))
                             (field_imm 38 (global Stdlib!)) 0)
                           (apply
                             (field_imm 3
                               (global Ocaml_ocaml_types__Terminfo!))
                             (field_imm 38 (global Stdlib!))
                             (field_int 0
                               (field_imm 17
                                 (global Ocaml_ocaml_types__Location!))))
                           (apply (field_imm 62 (global Stdlib!))
                             (field_imm 38 (global Stdlib!))))))))))))
        (setfield_ptr(root-init) 67 (global Ocaml_ocaml_types__Location!)
          highlight_terminfo/1280))
      (let
        (highlight_terminfo/1390 =
           (function lb/1391 ppf/1392 locs/1393 : int
             (try
               (apply (field_imm 67 (global Ocaml_ocaml_types__Location!))
                 lb/1391 ppf/1392 locs/1393)
              with exn/3158
               (if (== exn/3158 (field_imm 2 (global Stdlib!))) 0
                 (reraise exn/3158)))))
        (setfield_ptr(root-init) 29 (global Ocaml_ocaml_types__Location!)
          highlight_terminfo/1390))
      (let
        (infer_line_numbers/1397 =
           (function lines/1399
             (let
               (*match*/3165 =
                  (apply (field_imm 25 (global Stdlib__List!))
                    (function param/1410 param/1409
                      (let
                        (lnum/1405 =a (field_imm 0 param/1409)
                         consistent/1404 =a (field_imm 2 param/1410)
                         offset/1403 =a (field_imm 1 param/1410)
                         i/1402 =a (field_imm 0 param/1410))
                        (if (isint lnum/1405)
                          (makeblock 0 (int,*,int) (+ i/1402 1) offset/1403
                            consistent/1404)
                          (let (n/1406 =a (field_imm 0 lnum/1405))
                            (if (isint offset/1403)
                              (makeblock 0 (int,*,int) (+ i/1402 1)
                                (makeblock 0 (int) (- n/1406 i/1402))
                                consistent/1404)
                              (makeblock 0 (int,*,int) (+ i/1402 1)
                                offset/1403
                                (&& consistent/1404
                                  (== n/1406
                                    (+ (field_imm 0 offset/1403) i/1402)))))))))
                    [0: 0 0 1] lines/1399)
                offset/1400 =a (field_imm 1 *match*/3165))
               (catch
                 (if (isint offset/1400) (exit 9)
                   (if (field_imm 2 *match*/3165)
                     (let (m/1411 =a (field_imm 0 offset/1400))
                       (apply (field_imm 20 (global Stdlib__List!))
                         (function i/1412[int] param/1414
                           (makeblock 0 (makeblock 0 (int) (+ m/1411 i/1412))
                             (field_imm 1 param/1414)))
                         lines/1399))
                     (exit 9)))
                with (9) lines/1399))))
        (setfield_ptr(root-init) 30 (global Ocaml_ocaml_types__Location!)
          infer_line_numbers/1397))
      (let
        (highlight_quote/1415 =
           (function ppf/1417 get_lines/1418 *opt*/1499 highlight_tag/1420
             locs/1421 : int
             (let
               (max_lines/1419 =[int]
                  (if (isint *opt*/1499) 10 (field_imm 0 *opt*/1499))
                iset/1422 =
                  (apply
                    (field_imm 0
                      (field_imm 28 (global Ocaml_ocaml_types__Location!)))
                    (apply (field_imm 22 (global Stdlib__List!))
                      (function loc/1423
                        (let
                          (e/3187 = (field_imm 1 loc/1423)
                           s/3186 = (field_imm 0 loc/1423))
                          (if
                            (|| (== (field_int 3 s/3186) -1)
                              (== (field_int 3 e/3187) -1))
                            0
                            (makeblock 0
                              (makeblock 0
                                (makeblock 0 (*,int) s/3186
                                  (field_int 3 s/3186))
                                (makeblock 0 (*,int) e/3187
                                  (- (field_int 3 e/3187) 1)))))))
                      locs/1421))
                *match*/3180 =
                  (apply
                    (field_imm 5
                      (field_imm 28 (global Ocaml_ocaml_types__Location!)))
                    iset/1422))
               (if (isint *match*/3180) 0
                 (let
                   (*match*/3181 =a (field_imm 0 *match*/3180)
                    rightmost/1427 =a
                      (field_imm 0 (field_imm 1 *match*/3181))
                    lines/1428 =
                      (apply (field_imm 19 (global Stdlib__List!))
                        (function (param/3175, param/3176)
                          (makeblock 0 (*,*,int) (field_imm 0 param/3176)
                            (apply (field_imm 7 (global Stdlib__Option!)) ""
                              (field_imm 11 (global Stdlib__Int!))
                              param/3175)
                            (field_int 1 param/3176)))
                        (apply
                          (field_imm 30
                            (global Ocaml_ocaml_types__Location!))
                          (apply (field_imm 19 (global Stdlib__List!))
                            (function line/1483
                              (let
                                (start_pos/1482 =a (field_int 1 line/1483)
                                 end_pos/1484 =[int]
                                   (-
                                     (+ start_pos/1482
                                       (string.length
                                         (field_imm 0 line/1483)))
                                     1)
                                 line_nb/1485 =
                                   (let
                                     (*match*/3177 =
                                        (apply
                                          (field_imm 2
                                            (field_imm 28
                                              (global Ocaml_ocaml_types__Location!)))
                                          iset/1422
                                          (makeblock 0 (int,int)
                                            start_pos/1482 end_pos/1484)))
                                     (if (isint *match*/3177) 0
                                       (makeblock 0 (int)
                                         (field_int 1
                                           (field_imm 0
                                             (field_imm 0 *match*/3177)))))))
                                (makeblock 0 line_nb/1485 line/1483)))
                            (apply get_lines/1418
                              (field_imm 0 (field_imm 0 *match*/3181))
                              rightmost/1427)))))
                   (seq
                     (apply (field_imm 138 (global Stdlib__Format!)) ppf/1417
                       [0: [18: [1: [0: [11: "<v>" 0] "<v>"]] 0] "@[<v>"])
                     (catch
                       (catch
                         (if (isint lines/1428) (exit 13)
                           (let
                             (*match*/3170 =a (field_imm 0 lines/1428)
                              line/1487 =a (field_imm 0 *match*/3170))
                             (stringswitch line/1487
                              case "":
                               (if (isint (field_imm 1 lines/1428)) (exit 13)
                                 (exit 14))
                              default:
                               (if (isint (field_imm 1 lines/1428))
                                 (let
                                   (line_start_cnum/1489 =a
                                      (field_imm 2 *match*/3170)
                                    line_nb/1488 =a
                                      (field_imm 1 *match*/3170))
                                   (seq
                                     (apply
                                       (field_imm 138
                                         (global Stdlib__Format!))
                                       ppf/1417
                                       [0:
                                        [2:
                                         0
                                         [11:
                                          " | " [2: 0 [17: [0: "@," 0 0] 0]]]]
                                        "%s | %s@,"]
                                       line_nb/1488 line/1487)
                                     (apply
                                       (field_imm 138
                                         (global Stdlib__Format!))
                                       ppf/1417
                                       [0:
                                        [2: [1: 1] [11: "   " 0]] "%*s   "]
                                       (string.length line_nb/1488) "")
                                     (for i/1490 0 to
                                       (-
                                         (- (field_int 3 rightmost/1427)
                                           line_start_cnum/1489)
                                         1)
                                       (let
                                         (pos/1491 =[int]
                                            (+ line_start_cnum/1489 i/1490))
                                         (seq
                                           (if
                                             (!=
                                               (apply
                                                 (field_imm 3
                                                   (field_imm 28
                                                     (global Ocaml_ocaml_types__Location!)))
                                                 iset/1422 pos/1491)
                                               0)
                                             (apply
                                               (field_imm 138
                                                 (global Stdlib__Format!))
                                               ppf/1417
                                               [0:
                                                [18:
                                                 [0:
                                                  [0:
                                                   [12:
                                                    '<' [2: 0 [12: '>' 0]]]
                                                   "<%s>"]]
                                                 0]
                                                "@{<%s>"]
                                               highlight_tag/1420)
                                             0)
                                           (if
                                             (apply
                                               (field_imm 1
                                                 (field_imm 28
                                                   (global Ocaml_ocaml_types__Location!)))
                                               iset/1422 pos/1491)
                                             (apply
                                               (field_imm 22
                                                 (global Stdlib__Format!))
                                               ppf/1417 '^')
                                             (if
                                               (< i/1490
                                                 (string.length line/1487))
                                               (if
                                                 (==
                                                   (string.get line/1487
                                                     i/1490)
                                                   '\t')
                                                 (apply
                                                   (field_imm 22
                                                     (global Stdlib__Format!))
                                                   ppf/1417 '\t')
                                                 (apply
                                                   (field_imm 22
                                                     (global Stdlib__Format!))
                                                   ppf/1417 ' '))
                                               0))
                                           (if
                                             (!=
                                               (apply
                                                 (field_imm 4
                                                   (field_imm 28
                                                     (global Ocaml_ocaml_types__Location!)))
                                                 iset/1422 pos/1491)
                                               0)
                                             (apply
                                               (field_imm 138
                                                 (global Stdlib__Format!))
                                               ppf/1417 [0: [17: 1 0] "@}"])
                                             0))))
                                     (apply
                                       (field_imm 138
                                         (global Stdlib__Format!))
                                       ppf/1417
                                       [0:
                                        [17: 1 [17: [0: "@," 0 0] 0]] "@}@,"])))
                                 (exit 14)))))
                        with (14)
                         (apply
                           (field_imm 62 (global Ocaml_ocaml_types__Misc!))
                           [0: "|"] (makeblock 0 (int) max_lines/1419)
                           ppf/1417
                           (apply (field_imm 19 (global Stdlib__List!))
                             (function (param/3167, param/3168,
                               param/3169[int])
                               (let
                                 (line/1495 =
                                    (apply
                                      (field_imm 18 (global Stdlib__String!))
                                      (function i/1496[int] car/1497[int]
                                        : int
                                        (if
                                          (apply
                                            (field_imm 1
                                              (field_imm 28
                                                (global Ocaml_ocaml_types__Location!)))
                                            iset/1422 (+ param/3169 i/1496))
                                          car/1497 '.'))
                                      param/3167))
                                 (makeblock 0 param/3168 line/1495)))
                             lines/1428)))
                      with (13) 0)
                     (apply (field_imm 138 (global Stdlib__Format!)) ppf/1417
                       [0: [17: 0 0] "@]"])))))))
        (setfield_ptr(root-init) 31 (global Ocaml_ocaml_types__Location!)
          highlight_quote/1415))
      (let
        (lines_around/1500 =
           (function start_pos/1502 end_pos/1503 seek/1504 read_char/1505
             (seq (apply seek/1504 (field_int 2 start_pos/1502))
               (let
                 (lines/1506 = (makemutable 0 0)
                  bol/1507 =
                    (makemutable 0 (int) (field_int 2 start_pos/1502))
                  cur/1508 =
                    (makemutable 0 (int) (field_int 2 start_pos/1502))
                  b/1509 = (apply (field_imm 0 (global Stdlib__Buffer!)) 80)
                  add_line/1551 =
                    (function param/1554[int] : int
                      (if (< (field_int 0 bol/1507) (field_int 0 cur/1508))
                        (let
                          (text/1553 =
                             (apply (field_imm 1 (global Stdlib__Buffer!))
                               b/1509))
                          (seq
                            (apply (field_imm 7 (global Stdlib__Buffer!))
                              b/1509)
                            (setfield_ptr 0 lines/1506
                              (makeblock 0
                                (makeblock 0 (*,int) text/1553
                                  (field_int 0 bol/1507))
                                (field_mut 0 lines/1506)))
                            (setfield_imm 0 bol/1507 (field_int 0 cur/1508))))
                        0)))
                 (letrec
                   (loop/1555
                      (function param/1557[int] : int
                        (if
                          (>= (field_int 0 bol/1507)
                            (field_int 3 end_pos/1503))
                          0
                          (let (*match*/3188 = (apply read_char/1505 0))
                            (if (isint *match*/3188) (apply add_line/1551 0)
                              (let (c/1556 =a (field_imm 0 *match*/3188))
                                (seq (+:=1 cur/1508)
                                  (if (!= c/1556 10)
                                    (if (!= c/1556 13)
                                      (seq
                                        (apply
                                          (field_imm 11
                                            (global Stdlib__Buffer!))
                                          b/1509 c/1556)
                                        (apply loop/1555 0))
                                      (apply loop/1555 0))
                                    (seq (apply add_line/1551 0)
                                      (apply loop/1555 0))))))))))
                   (seq (apply loop/1555 0)
                     (apply (field_imm 9 (global Stdlib__List!))
                       (field_mut 0 lines/1506))))))))
        (setfield_ptr(root-init) 32 (global Ocaml_ocaml_types__Location!)
          lines_around/1500))
      (let
        (lines_around_from_lexbuf/1558 =
           (function start_pos/1560 end_pos/1561 lb/1562
             (let
               (rel/1563 =
                  (function n/1565[int] : int
                    (- n/1565 (field_int 3 lb/1562))))
               (if (< (apply rel/1563 (field_int 2 start_pos/1560)) 0) 0
                 (let
                   (pos/1566 = (makemutable 0 (int) 0)
                    seek/1567 =
                      (function n/1569[int] : int
                        (setfield_imm 0 pos/1566 (apply rel/1563 n/1569)))
                    read_char/1570 =
                      (function param/1573[int]
                        (if (>= (field_int 0 pos/1566) (field_int 2 lb/1562))
                          0
                          (let
                            (c/1572 =[int]
                               (bytes.get (field_mut 1 lb/1562)
                                 (field_int 0 pos/1566)))
                            (seq (+:=1 pos/1566) (makeblock 0 (int) c/1572))))))
                   (apply
                     (field_imm 32 (global Ocaml_ocaml_types__Location!))
                     start_pos/1560 end_pos/1561 seek/1567 read_char/1570))))))
        (setfield_ptr(root-init) 33 (global Ocaml_ocaml_types__Location!)
          lines_around_from_lexbuf/1558))
      (let
        (lines_around_from_phrasebuf/1574 =
           (function start_pos/1576 end_pos/1577 pb/1578
             (let
               (pos/1579 = (makemutable 0 (int) 0)
                seek/1580 =
                  (function n/1582[int] : int
                    (setfield_imm 0 pos/1579 n/1582))
                read_char/1583 =
                  (function param/1586[int]
                    (if
                      (>= (field_int 0 pos/1579)
                        (apply (field_imm 6 (global Stdlib__Buffer!))
                          pb/1578))
                      0
                      (let
                        (c/1585 =[int]
                           (apply (field_imm 5 (global Stdlib__Buffer!))
                             pb/1578 (field_int 0 pos/1579)))
                        (seq (+:=1 pos/1579) (makeblock 0 (int) c/1585))))))
               (apply (field_imm 32 (global Ocaml_ocaml_types__Location!))
                 start_pos/1576 end_pos/1577 seek/1580 read_char/1583))))
        (setfield_ptr(root-init) 34 (global Ocaml_ocaml_types__Location!)
          lines_around_from_phrasebuf/1574))
      (let
        (lines_around_from_current_input/1587 =
           (function start_pos/1589 end_pos/1590
             (let
               (*match*/3190 =
                  (field_mut 0
                    (field_imm 13 (global Ocaml_ocaml_types__Location!)))
                *match*/3191 =
                  (field_mut 0
                    (field_imm 14 (global Ocaml_ocaml_types__Location!)))
                *match*/3192 =
                  (field_mut 0
                    (field_imm 12 (global Ocaml_ocaml_types__Location!))))
               (catch
                 (if (isint *match*/3191) (exit 20)
                   (stringswitch *match*/3192
                    case "//toplevel//":
                     (apply
                       (field_imm 34 (global Ocaml_ocaml_types__Location!))
                       start_pos/1589 end_pos/1590
                       (field_imm 0 *match*/3191))
                    default: (exit 20)))
                with (20)
                 (if (isint *match*/3190) 0
                   (apply
                     (field_imm 33 (global Ocaml_ocaml_types__Location!))
                     start_pos/1589 end_pos/1590 (field_imm 0 *match*/3190)))))))
        (setfield_ptr(root-init) 35 (global Ocaml_ocaml_types__Location!)
          lines_around_from_current_input/1587))
      (let
        (msg/1594 =
           (function *opt*/1599 fmt/1597
             (let
               (loc/1596 =
                  (if (isint *opt*/1599)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1599)))
               (apply (field_imm 146 (global Stdlib__Format!))
                 (function txt/1598 (makeblock 0 txt/1598 loc/1596))
                 fmt/1597))))
        (setfield_ptr(root-init) 36 (global Ocaml_ocaml_types__Location!)
          msg/1594))
      (let
        (is_dummy_loc/1619 =
           (function loc/1621 : int
             (|| (== (field_int 3 (field_imm 0 loc/1621)) -1)
               (== (field_int 3 (field_imm 1 loc/1621)) -1))))
        (setfield_ptr(root-init) 37 (global Ocaml_ocaml_types__Location!)
          is_dummy_loc/1619))
      (let
        (is_quotable_loc/1622 =
           (function loc/1624 : int
             (&&
               (not
                 (apply (field_imm 37 (global Ocaml_ocaml_types__Location!))
                   loc/1624))
               (&&
                 (caml_string_equal (field_imm 0 (field_imm 0 loc/1624))
                   (field_mut 0
                     (field_imm 12 (global Ocaml_ocaml_types__Location!))))
                 (caml_string_equal (field_imm 0 (field_imm 1 loc/1624))
                   (field_mut 0
                     (field_imm 12 (global Ocaml_ocaml_types__Location!))))))))
        (setfield_ptr(root-init) 38 (global Ocaml_ocaml_types__Location!)
          is_quotable_loc/1622))
      (let (report_error/1626 = (function ppf/1628 err/1629 : int 0))
        (setfield_ptr(root-init) 39 (global Ocaml_ocaml_types__Location!)
          report_error/1626))
      (let
        (mkerror/1630 =
           (function loc/1632 sub/1633 txt/1634
             (makeblock 0 0 (makeblock 0 txt/1634 loc/1632) sub/1633)))
        (setfield_ptr(root-init) 40 (global Ocaml_ocaml_types__Location!)
          mkerror/1630))
      (let
        (errorf/1635 =
           (function *opt*/1640 *opt*/1639
             (let
               (loc/1637 =
                  (if (isint *opt*/1640)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1640))
                sub/1638 = (if (isint *opt*/1639) 0 (field_imm 0 *opt*/1639)))
               (apply (field_imm 146 (global Stdlib__Format!))
                 (apply (field_imm 40 (global Ocaml_ocaml_types__Location!))
                   loc/1637 sub/1638)))))
        (setfield_ptr(root-init) 41 (global Ocaml_ocaml_types__Location!)
          errorf/1635))
      (let
        (error/1641 =
           (function *opt*/1648 *opt*/1647 msg_str/1645
             (let
               (loc/1643 =
                  (if (isint *opt*/1648)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1648))
                sub/1644 = (if (isint *opt*/1647) 0 (field_imm 0 *opt*/1647)))
               (apply (field_imm 40 (global Ocaml_ocaml_types__Location!))
                 loc/1643 sub/1644
                 (function ppf/1646 : int
                   (apply (field_imm 12 (global Stdlib__Format!)) ppf/1646
                     msg_str/1645))))))
        (setfield_ptr(root-init) 42 (global Ocaml_ocaml_types__Location!)
          error/1641))
      (let
        (error_of_printer/1649 =
           (function *opt*/1657 *opt*/1656 pp/1653 x/1654
             (let
               (loc/1651 =
                  (if (isint *opt*/1657)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1657))
                sub/1652 = (if (isint *opt*/1656) 0 (field_imm 0 *opt*/1656)))
               (apply (field_imm 40 (global Ocaml_ocaml_types__Location!))
                 loc/1651 sub/1652
                 (function ppf/1655 : int (apply pp/1653 ppf/1655 x/1654))))))
        (setfield_ptr(root-init) 43 (global Ocaml_ocaml_types__Location!)
          error_of_printer/1649))
      (let
        (error_of_printer_file/1658 =
           (function print/1660 x/1661
             (apply (field_imm 43 (global Ocaml_ocaml_types__Location!))
               (makeblock 0
                 (apply (field_imm 0 (global Ocaml_ocaml_types__Location!))
                   (field_mut 0
                     (field_imm 12 (global Ocaml_ocaml_types__Location!)))))
               0 print/1660 x/1661)))
        (setfield_ptr(root-init) 44 (global Ocaml_ocaml_types__Location!)
          error_of_printer_file/1658))
      (let
        (default_warning_alert_reporter/1662 =
           (function report/1664 mk/1665 loc/1666 w/1667
             (let (*match*/3201 = (apply report/1664 w/1667))
               (if (isint *match*/3201) 0
                 (let
                   (*match*/3202 =a (field_imm 1 *match*/3201)
                    msg_of_str/1672 =
                      (function str/1674
                        (function ppf/1675 : int
                          (apply (field_imm 12 (global Stdlib__Format!))
                            ppf/1675 str/1674)))
                    kind/1676 =
                      (apply mk/1665 (field_int 2 *match*/3202)
                        (field_imm 0 *match*/3202))
                    main/1677 =
                      (makeblock 0
                        (apply msg_of_str/1672 (field_imm 1 *match*/3202))
                        loc/1666)
                    sub/1678 =
                      (apply (field_imm 19 (global Stdlib__List!))
                        (function (param/3197, param/3198)
                          (makeblock 0 (apply msg_of_str/1672 param/3198)
                            param/3197))
                        (field_imm 3 *match*/3202)))
                   (makeblock 0 (makeblock 0 kind/1676 main/1677 sub/1678)))))))
        (setfield_ptr(root-init) 45 (global Ocaml_ocaml_types__Location!)
          default_warning_alert_reporter/1662))
      (let
        (default_warning_reporter/1682 =
           (apply (field_imm 45 (global Ocaml_ocaml_types__Location!))
             (field_imm 29 (global Ocaml_ocaml_types__Warnings!))
             (function is_error/1683[int] id/1684
               (if is_error/1683 (makeblock 1 id/1684) (makeblock 0 id/1684)))))
        (setfield_ptr(root-init) 46 (global Ocaml_ocaml_types__Location!)
          default_warning_reporter/1682))
      (let
        (warning_reporter/1685 =
           (makemutable 0
             (field_imm 46 (global Ocaml_ocaml_types__Location!))))
        (setfield_ptr(root-init) 47 (global Ocaml_ocaml_types__Location!)
          warning_reporter/1685))
      (let
        (report_warning/1686 =
           (function loc/1688 w/1689
             (apply
               (field_mut 0
                 (field_imm 47 (global Ocaml_ocaml_types__Location!)))
               loc/1688 w/1689)))
        (setfield_ptr(root-init) 48 (global Ocaml_ocaml_types__Location!)
          report_warning/1686))
      (let
        (formatter_for_warnings/1690 =
           (makemutable 0 (field_imm 113 (global Stdlib__Format!))))
        (setfield_ptr(root-init) 49 (global Ocaml_ocaml_types__Location!)
          formatter_for_warnings/1690))
      (let (print_warning/1691 = (function loc/1693 ppf/1694 w/1695 : int 0))
        (setfield_ptr(root-init) 50 (global Ocaml_ocaml_types__Location!)
          print_warning/1691))
      (let
        (prerr_warning/1696 =
           (function loc/1698 w/1699 : int
             (apply (field_imm 50 (global Ocaml_ocaml_types__Location!))
               loc/1698
               (field_mut 0
                 (field_imm 49 (global Ocaml_ocaml_types__Location!)))
               w/1699)))
        (setfield_ptr(root-init) 51 (global Ocaml_ocaml_types__Location!)
          prerr_warning/1696))
      (let
        (default_alert_reporter/1700 =
           (apply (field_imm 45 (global Ocaml_ocaml_types__Location!))
             (field_imm 30 (global Ocaml_ocaml_types__Warnings!))
             (function is_error/1701[int] id/1702
               (if is_error/1701 (makeblock 3 id/1702) (makeblock 2 id/1702)))))
        (setfield_ptr(root-init) 52 (global Ocaml_ocaml_types__Location!)
          default_alert_reporter/1700))
      (let
        (alert_reporter/1703 =
           (makemutable 0
             (field_imm 52 (global Ocaml_ocaml_types__Location!))))
        (setfield_ptr(root-init) 53 (global Ocaml_ocaml_types__Location!)
          alert_reporter/1703))
      (let
        (report_alert/1704 =
           (function loc/1706 w/1707
             (apply
               (field_mut 0
                 (field_imm 53 (global Ocaml_ocaml_types__Location!)))
               loc/1706 w/1707)))
        (setfield_ptr(root-init) 54 (global Ocaml_ocaml_types__Location!)
          report_alert/1704))
      (let (print_alert/1708 = (function loc/1710 ppf/1711 w/1712 : int 0))
        (setfield_ptr(root-init) 55 (global Ocaml_ocaml_types__Location!)
          print_alert/1708))
      (let
        (prerr_alert/1713 =
           (function loc/1715 w/1716 : int
             (apply (field_imm 55 (global Ocaml_ocaml_types__Location!))
               loc/1715
               (field_mut 0
                 (field_imm 49 (global Ocaml_ocaml_types__Location!)))
               w/1716)))
        (setfield_ptr(root-init) 56 (global Ocaml_ocaml_types__Location!)
          prerr_alert/1713))
      (let
        (alert/1717 =
           (function *opt*/1725 *opt*/1724 kind/1721 loc/1722 message/1723
             : int
             (let
               (def/1719 =
                  (if (isint *opt*/1725)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1725))
                use/1720 =
                  (if (isint *opt*/1724)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1724)))
               (apply (field_imm 56 (global Ocaml_ocaml_types__Location!))
                 loc/1722
                 (makeblock 0 kind/1721 message/1723 def/1719 use/1720)))))
        (setfield_ptr(root-init) 57 (global Ocaml_ocaml_types__Location!)
          alert/1717))
      (let
        (deprecated/1726 =
           (function def/1728 use/1729 loc/1730 message/1731 : int
             (apply (field_imm 57 (global Ocaml_ocaml_types__Location!))
               def/1728 use/1729 "deprecated" loc/1730 message/1731)))
        (setfield_ptr(root-init) 58 (global Ocaml_ocaml_types__Location!)
          deprecated/1726))
      (let
        (auto_include_alert/1733 =
           (function lib/1735 : int
             (let
               (message/1736 =
                  (apply (field_imm 142 (global Stdlib__Format!))
                    [0:
                     [11:
                      "OCaml's lib directory layout changed in 5.0. The "
                      [15:
                       [11:
                        " subdirectory has been automatically added to the search path, but you should add "
                        [15:
                         [11:
                          " to the command-line to silence this alert (e.g. by adding "
                          [15:
                           [11:
                            " to the list of libraries in your dune file, or adding "
                            [15:
                             [11:
                              " to your "
                              [15:
                               [11:
                                " file for ocamlbuild, or using "
                                [15: [11: " for ocamlfind)." 0]]]]]]]]]]]]]
                     "OCaml's lib directory layout changed in 5.0. The %a subdirectory has been automatically added to the search path, but you should add %a to the command-line to silence this alert (e.g. by adding %a to the list of libraries in your dune file, or adding %a to your %a file for ocamlbuild, or using %a for ocamlfind)."]
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    lib/1735
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    (apply (field_imm 27 (global Stdlib!)) "-I +" lib/1735)
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    lib/1735
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    (apply (field_imm 27 (global Stdlib!)) "use_" lib/1735)
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    "_tags"
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    (apply (field_imm 27 (global Stdlib!)) "-package "
                      lib/1735))
                alert/1832 =
                  (makeblock 0 "ocaml_deprecated_auto_include"
                    (apply (field_imm 142 (global Stdlib__Format!))
                      [0:
                       [18: [1: [0: 0 ""]] [17: 3 [15: [17: 0 0]]]]
                       "@[@\n%a@]"]
                      (field_imm 134 (global Stdlib__Format!)) message/1736)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))))
               (apply (field_imm 56 (global Ocaml_ocaml_types__Location!))
                 (field_imm 1 (global Ocaml_ocaml_types__Location!))
                 alert/1832))))
        (setfield_ptr(root-init) 59 (global Ocaml_ocaml_types__Location!)
          auto_include_alert/1733))
      (let
        (deprecated_script_alert/1833 =
           (function program/1835 : int
             (let
               (message/1836 =
                  (apply (field_imm 142 (global Stdlib__Format!))
                    [0:
                     [11:
                      "Running "
                      [15:
                       [11:
                        " where the first argument is an implicit basename with no extension (e.g. "
                        [15:
                         [11:
                          ") is deprecated. Either rename the script ("
                          [15:
                           [11:
                            ") or qualify the basename (" [15: [12: ')' 0]]]]]]]]]
                     "Running %a where the first argument is an implicit basename with no extension (e.g. %a) is deprecated. Either rename the script (%a) or qualify the basename (%a)"]
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    program/1835
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    (apply (field_imm 27 (global Stdlib!)) program/1835
                      " script-file")
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    (apply (field_imm 27 (global Stdlib!)) program/1835
                      " script-file.ml")
                    (field_imm 11
                      (field_imm 55 (global Ocaml_ocaml_types__Misc!)))
                    (apply (field_imm 27 (global Stdlib!)) program/1835
                      " ./script-file"))
                alert/1837 =
                  (makeblock 0 "ocaml_deprecated_cli"
                    (apply (field_imm 142 (global Stdlib__Format!))
                      [0:
                       [18: [1: [0: 0 ""]] [17: 3 [15: [17: 0 0]]]]
                       "@[@\n%a@]"]
                      (field_imm 134 (global Stdlib__Format!)) message/1836)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))))
               (apply (field_imm 56 (global Ocaml_ocaml_types__Location!))
                 (field_imm 1 (global Ocaml_ocaml_types__Location!))
                 alert/1837))))
        (setfield_ptr(root-init) 60 (global Ocaml_ocaml_types__Location!)
          deprecated_script_alert/1833))
      (let (error_of_exn/1838 = (makemutable 0 0))
        (setfield_ptr(root-init) 68 (global Ocaml_ocaml_types__Location!)
          error_of_exn/1838))
      (let
        (register_error_of_exn/1839 =
           (function f/1841 : int
             (setfield_ptr 0
               (field_imm 68 (global Ocaml_ocaml_types__Location!))
               (makeblock 0 f/1841
                 (field_mut 0
                   (field_imm 68 (global Ocaml_ocaml_types__Location!)))))))
        (setfield_ptr(root-init) 61 (global Ocaml_ocaml_types__Location!)
          register_error_of_exn/1839))
      (let
        (Already_displayed_error/1842 =
           (field_imm 31 (global Ocaml_ocaml_types__Warnings!)))
        (setfield_ptr(root-init) 62 (global Ocaml_ocaml_types__Location!)
          Already_displayed_error/1842))
      (let
        (error_of_exn/1843 =
           (function exn/1844
             (if
               (== exn/1844
                 (field_imm 62 (global Ocaml_ocaml_types__Location!)))
               [0: 301815898]
               (letrec
                 (loop/1845
                    (function param/1849
                      (if (isint param/1849) 0
                        (let
                          (*match*/3206 =
                             (apply (field_imm 0 param/1849) exn/1844))
                          (if (isint *match*/3206)
                            (apply loop/1845 (field_imm 1 param/1849))
                            (makeblock 0
                              (makeblock 0 17724 (field_imm 0 *match*/3206))))))))
                 (apply loop/1845
                   (field_mut 0
                     (field_imm 68 (global Ocaml_ocaml_types__Location!))))))))
        (setfield_ptr(root-init) 63 (global Ocaml_ocaml_types__Location!)
          error_of_exn/1843))
      (let
        (*match*/3209 =
           (apply (field_imm 61 (global Ocaml_ocaml_types__Location!))
             (function param/1851
               (if
                 (== (field_imm 0 param/1851)
                   (field_imm 10 (global Stdlib!)))
                 (makeblock 0
                   (apply
                     (field_imm 41 (global Ocaml_ocaml_types__Location!))
                     (makeblock 0
                       (apply
                         (field_imm 0 (global Ocaml_ocaml_types__Location!))
                         (field_mut 0
                           (field_imm 12
                             (global Ocaml_ocaml_types__Location!)))))
                     0 [0: [11: "I/O error: " [2: 0 0]] "I/O error: %s"]
                     (field_imm 1 param/1851)))
                 0))))
        0)
      (let
        (report_exception/1853 =
           (function ppf/1855 exn/1856 : int
             (letrec
               (loop/1857
                  (function n/1858[int] exn/1859 : int
                    (catch
                      (try
                        (exit 26
                          (apply
                            (field_imm 63
                              (global Ocaml_ocaml_types__Location!))
                            exn/1859))
                       with exn/1861
                        (if (> n/1858 0)
                          (apply loop/1857 (- n/1858 1) exn/1861)
                          (reraise exn/1861)))
                     with (26 val/3210)
                      (if (isint val/3210) (reraise exn/1859)
                        (let (*match*/3211 =a (field_imm 0 val/3210))
                          (if (isint *match*/3211) 0
                            (apply
                              (field_imm 39
                                (global Ocaml_ocaml_types__Location!))
                              ppf/1855 (field_imm 1 *match*/3211))))))))
               (apply loop/1857 5 exn/1856))))
        (setfield_ptr(root-init) 64 (global Ocaml_ocaml_types__Location!)
          report_exception/1853))
      (let
        (Error/1862 =
           (makeblock 248 "Ocaml_ocaml_types.Location.Error"
             (caml_fresh_oo_id 0)))
        (setfield_ptr(root-init) 65 (global Ocaml_ocaml_types__Location!)
          Error/1862))
      (let
        (*match*/3214 =
           (apply (field_imm 61 (global Ocaml_ocaml_types__Location!))
             (function param/1864
               (if
                 (== (field_imm 0 param/1864)
                   (field_imm 65 (global Ocaml_ocaml_types__Location!)))
                 (makeblock 0 (field_imm 1 param/1864)) 0))))
        0)
      (let
        (raise_errorf/1865 =
           (function *opt*/1871 *opt*/1870
             (let
               (loc/1867 =
                  (if (isint *opt*/1871)
                    (field_imm 1 (global Ocaml_ocaml_types__Location!))
                    (field_imm 0 *opt*/1871))
                sub/1868 = (if (isint *opt*/1870) 0 (field_imm 0 *opt*/1870)))
               (apply (field_imm 146 (global Stdlib__Format!))
                 (function txt/1869
                   (raise
                     (makeblock 0
                       (field_imm 65 (global Ocaml_ocaml_types__Location!))
                       (apply
                         (field_imm 40 (global Ocaml_ocaml_types__Location!))
                         loc/1867 sub/1868 txt/1869))))))))
        (setfield_ptr(root-init) 66 (global Ocaml_ocaml_types__Location!)
          raise_errorf/1865))
      0)))
