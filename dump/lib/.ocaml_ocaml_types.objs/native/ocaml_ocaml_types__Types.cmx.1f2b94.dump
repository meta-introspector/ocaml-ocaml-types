[
  structure_item (lib/types.ml[18,1127+0]..[18,1127+13])
    Pstr_open Fresh
    module_expr (lib/types.ml[18,1127+5]..[18,1127+13])
      Pmod_ident "Asttypes" (lib/types.ml[18,1127+5]..[18,1127+13])
  structure_item (lib/types.ml[22,1188+0]..[81,3206+73])
    Pstr_type Rec
    [
      type_declaration "transient_expr" (lib/types.ml[22,1188+5]..[22,1188+19]) (lib/types.ml[22,1188+0]..[26,1287+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[23,1210+4]..[23,1210+28])
                Mutable
                "desc" (lib/types.ml[23,1210+12]..[23,1210+16])                core_type (lib/types.ml[23,1210+18]..[23,1210+27])
                  Ptyp_constr "type_desc" (lib/types.ml[23,1210+18]..[23,1210+27])
                  []
              (lib/types.ml[24,1239+4]..[24,1239+23])
                Mutable
                "level" (lib/types.ml[24,1239+12]..[24,1239+17])                core_type (lib/types.ml[24,1239+19]..[24,1239+22])
                  Ptyp_constr "int" (lib/types.ml[24,1239+19]..[24,1239+22])
                  []
              (lib/types.ml[25,1263+4]..[25,1263+23])
                Mutable
                "scope" (lib/types.ml[25,1263+12]..[25,1263+17])                core_type (lib/types.ml[25,1263+19]..[25,1263+22])
                  Ptyp_constr "int" (lib/types.ml[25,1263+19]..[25,1263+22])
                  []
              (lib/types.ml[26,1287+4]..[26,1287+11])
                Immutable
                "id" (lib/types.ml[26,1287+4]..[26,1287+6])                core_type (lib/types.ml[26,1287+8]..[26,1287+11])
                  Ptyp_constr "int" (lib/types.ml[26,1287+8]..[26,1287+11])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_expr" (lib/types.ml[28,1302+4]..[28,1302+13]) (lib/types.ml[28,1302+0]..[28,1302+30])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[28,1302+16]..[28,1302+30])
              Ptyp_constr "transient_expr" (lib/types.ml[28,1302+16]..[28,1302+30])
              []
      type_declaration "type_desc" (lib/types.ml[30,1334+4]..[30,1334+13]) (lib/types.ml[30,1334+0]..[43,1814+55])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[31,1350+4]..[31,1350+25])
                "Tvar" (lib/types.ml[31,1350+4]..[31,1350+8])
                [
                  core_type (lib/types.ml[31,1350+12]..[31,1350+25])
                    Ptyp_constr "option" (lib/types.ml[31,1350+19]..[31,1350+25])
                    [
                      core_type (lib/types.ml[31,1350+12]..[31,1350+18])
                        Ptyp_constr "string" (lib/types.ml[31,1350+12]..[31,1350+18])
                        []
                    ]
                ]
                None
              (lib/types.ml[32,1376+2]..[32,1376+60])
                "Tarrow" (lib/types.ml[32,1376+4]..[32,1376+10])
                [
                  core_type (lib/types.ml[32,1376+14]..[32,1376+23])
                    Ptyp_constr "arg_label" (lib/types.ml[32,1376+14]..[32,1376+23])
                    []
                  core_type (lib/types.ml[32,1376+26]..[32,1376+35])
                    Ptyp_constr "type_expr" (lib/types.ml[32,1376+26]..[32,1376+35])
                    []
                  core_type (lib/types.ml[32,1376+38]..[32,1376+47])
                    Ptyp_constr "type_expr" (lib/types.ml[32,1376+38]..[32,1376+47])
                    []
                  core_type (lib/types.ml[32,1376+50]..[32,1376+60])
                    Ptyp_constr "commutable" (lib/types.ml[32,1376+50]..[32,1376+60])
                    []
                ]
                None
              (lib/types.ml[33,1437+2]..[33,1437+28])
                "Ttuple" (lib/types.ml[33,1437+4]..[33,1437+10])
                [
                  core_type (lib/types.ml[33,1437+14]..[33,1437+28])
                    Ptyp_constr "list" (lib/types.ml[33,1437+24]..[33,1437+28])
                    [
                      core_type (lib/types.ml[33,1437+14]..[33,1437+23])
                        Ptyp_constr "type_expr" (lib/types.ml[33,1437+14]..[33,1437+23])
                        []
                    ]
                ]
                None
              (lib/types.ml[34,1466+2]..[34,1466+56])
                "Tconstr" (lib/types.ml[34,1466+4]..[34,1466+11])
                [
                  core_type (lib/types.ml[34,1466+15]..[34,1466+21])
                    Ptyp_constr "Path.t" (lib/types.ml[34,1466+15]..[34,1466+21])
                    []
                  core_type (lib/types.ml[34,1466+24]..[34,1466+38])
                    Ptyp_constr "list" (lib/types.ml[34,1466+34]..[34,1466+38])
                    [
                      core_type (lib/types.ml[34,1466+24]..[34,1466+33])
                        Ptyp_constr "type_expr" (lib/types.ml[34,1466+24]..[34,1466+33])
                        []
                    ]
                  core_type (lib/types.ml[34,1466+41]..[34,1466+56])
                    Ptyp_constr "ref" (lib/types.ml[34,1466+53]..[34,1466+56])
                    [
                      core_type (lib/types.ml[34,1466+41]..[34,1466+52])
                        Ptyp_constr "abbrev_memo" (lib/types.ml[34,1466+41]..[34,1466+52])
                        []
                    ]
                ]
                None
              (lib/types.ml[35,1523+2]..[35,1523+63])
                "Tobject" (lib/types.ml[35,1523+4]..[35,1523+11])
                [
                  core_type (lib/types.ml[35,1523+15]..[35,1523+24])
                    Ptyp_constr "type_expr" (lib/types.ml[35,1523+15]..[35,1523+24])
                    []
                  core_type (lib/types.ml[35,1523+27]..[35,1523+63])
                    Ptyp_constr "ref" (lib/types.ml[35,1523+60]..[35,1523+63])
                    [
                      core_type (lib/types.ml[35,1523+27]..[35,1523+59])
                        Ptyp_constr "option" (lib/types.ml[35,1523+53]..[35,1523+59])
                        [
                          core_type (lib/types.ml[35,1523+28]..[35,1523+51])
                            Ptyp_tuple
                            [
                              core_type (lib/types.ml[35,1523+28]..[35,1523+34])
                                Ptyp_constr "Path.t" (lib/types.ml[35,1523+28]..[35,1523+34])
                                []
                              core_type (lib/types.ml[35,1523+37]..[35,1523+51])
                                Ptyp_constr "list" (lib/types.ml[35,1523+47]..[35,1523+51])
                                [
                                  core_type (lib/types.ml[35,1523+37]..[35,1523+46])
                                    Ptyp_constr "type_expr" (lib/types.ml[35,1523+37]..[35,1523+46])
                                    []
                                ]
                            ]
                        ]
                    ]
                ]
                None
              (lib/types.ml[36,1587+2]..[36,1587+57])
                "Tfield" (lib/types.ml[36,1587+4]..[36,1587+10])
                [
                  core_type (lib/types.ml[36,1587+14]..[36,1587+20])
                    Ptyp_constr "string" (lib/types.ml[36,1587+14]..[36,1587+20])
                    []
                  core_type (lib/types.ml[36,1587+23]..[36,1587+33])
                    Ptyp_constr "field_kind" (lib/types.ml[36,1587+23]..[36,1587+33])
                    []
                  core_type (lib/types.ml[36,1587+36]..[36,1587+45])
                    Ptyp_constr "type_expr" (lib/types.ml[36,1587+36]..[36,1587+45])
                    []
                  core_type (lib/types.ml[36,1587+48]..[36,1587+57])
                    Ptyp_constr "type_expr" (lib/types.ml[36,1587+48]..[36,1587+57])
                    []
                ]
                None
              (lib/types.ml[37,1645+2]..[37,1645+8])
                "Tnil" (lib/types.ml[37,1645+4]..[37,1645+8])
                []
                None
              (lib/types.ml[38,1654+2]..[38,1654+22])
                "Tlink" (lib/types.ml[38,1654+4]..[38,1654+9])
                [
                  core_type (lib/types.ml[38,1654+13]..[38,1654+22])
                    Ptyp_constr "type_expr" (lib/types.ml[38,1654+13]..[38,1654+22])
                    []
                ]
                None
              (lib/types.ml[39,1677+2]..[39,1677+42])
                "Tsubst" (lib/types.ml[39,1677+4]..[39,1677+10])
                [
                  core_type (lib/types.ml[39,1677+14]..[39,1677+23])
                    Ptyp_constr "type_expr" (lib/types.ml[39,1677+14]..[39,1677+23])
                    []
                  core_type (lib/types.ml[39,1677+26]..[39,1677+42])
                    Ptyp_constr "option" (lib/types.ml[39,1677+36]..[39,1677+42])
                    [
                      core_type (lib/types.ml[39,1677+26]..[39,1677+35])
                        Ptyp_constr "type_expr" (lib/types.ml[39,1677+26]..[39,1677+35])
                        []
                    ]
                ]
                None
              (lib/types.ml[40,1720+2]..[40,1720+24])
                "Tvariant" (lib/types.ml[40,1720+4]..[40,1720+12])
                [
                  core_type (lib/types.ml[40,1720+16]..[40,1720+24])
                    Ptyp_constr "row_desc" (lib/types.ml[40,1720+16]..[40,1720+24])
                    []
                ]
                None
              (lib/types.ml[41,1745+2]..[41,1745+28])
                "Tunivar" (lib/types.ml[41,1745+4]..[41,1745+11])
                [
                  core_type (lib/types.ml[41,1745+15]..[41,1745+28])
                    Ptyp_constr "option" (lib/types.ml[41,1745+22]..[41,1745+28])
                    [
                      core_type (lib/types.ml[41,1745+15]..[41,1745+21])
                        Ptyp_constr "string" (lib/types.ml[41,1745+15]..[41,1745+21])
                        []
                    ]
                ]
                None
              (lib/types.ml[42,1774+2]..[42,1774+39])
                "Tpoly" (lib/types.ml[42,1774+4]..[42,1774+9])
                [
                  core_type (lib/types.ml[42,1774+13]..[42,1774+22])
                    Ptyp_constr "type_expr" (lib/types.ml[42,1774+13]..[42,1774+22])
                    []
                  core_type (lib/types.ml[42,1774+25]..[42,1774+39])
                    Ptyp_constr "list" (lib/types.ml[42,1774+35]..[42,1774+39])
                    [
                      core_type (lib/types.ml[42,1774+25]..[42,1774+34])
                        Ptyp_constr "type_expr" (lib/types.ml[42,1774+25]..[42,1774+34])
                        []
                    ]
                ]
                None
              (lib/types.ml[43,1814+2]..[43,1814+55])
                "Tpackage" (lib/types.ml[43,1814+4]..[43,1814+12])
                [
                  core_type (lib/types.ml[43,1814+16]..[43,1814+22])
                    Ptyp_constr "Path.t" (lib/types.ml[43,1814+16]..[43,1814+22])
                    []
                  core_type (lib/types.ml[43,1814+25]..[43,1814+55])
                    Ptyp_constr "list" (lib/types.ml[43,1814+51]..[43,1814+55])
                    [
                      core_type (lib/types.ml[43,1814+26]..[43,1814+49])
                        Ptyp_tuple
                        [
                          core_type (lib/types.ml[43,1814+26]..[43,1814+37])
                            Ptyp_constr "Longident.t" (lib/types.ml[43,1814+26]..[43,1814+37])
                            []
                          core_type (lib/types.ml[43,1814+40]..[43,1814+49])
                            Ptyp_constr "type_expr" (lib/types.ml[43,1814+40]..[43,1814+49])
                            []
                        ]
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "row_desc" (lib/types.ml[45,1871+4]..[45,1871+12]) (lib/types.ml[45,1871+0]..[50,2024+50])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[46,1886+6]..[46,1886+43])
                Immutable
                "row_fields" (lib/types.ml[46,1886+6]..[46,1886+16])                core_type (lib/types.ml[46,1886+18]..[46,1886+42])
                  Ptyp_constr "list" (lib/types.ml[46,1886+38]..[46,1886+42])
                  [
                    core_type (lib/types.ml[46,1886+19]..[46,1886+36])
                      Ptyp_tuple
                      [
                        core_type (lib/types.ml[46,1886+19]..[46,1886+24])
                          Ptyp_constr "label" (lib/types.ml[46,1886+19]..[46,1886+24])
                          []
                        core_type (lib/types.ml[46,1886+27]..[46,1886+36])
                          Ptyp_constr "row_field" (lib/types.ml[46,1886+27]..[46,1886+36])
                          []
                      ]
                  ]
              (lib/types.ml[47,1930+6]..[47,1930+26])
                Immutable
                "row_more" (lib/types.ml[47,1930+6]..[47,1930+14])                core_type (lib/types.ml[47,1930+16]..[47,1930+25])
                  Ptyp_constr "type_expr" (lib/types.ml[47,1930+16]..[47,1930+25])
                  []
              (lib/types.ml[48,1957+6]..[48,1957+23])
                Immutable
                "row_closed" (lib/types.ml[48,1957+6]..[48,1957+16])                core_type (lib/types.ml[48,1957+18]..[48,1957+22])
                  Ptyp_constr "bool" (lib/types.ml[48,1957+18]..[48,1957+22])
                  []
              (lib/types.ml[49,1981+6]..[49,1981+42])
                Immutable
                "row_fixed" (lib/types.ml[49,1981+6]..[49,1981+15])                core_type (lib/types.ml[49,1981+17]..[49,1981+41])
                  Ptyp_constr "option" (lib/types.ml[49,1981+35]..[49,1981+41])
                  [
                    core_type (lib/types.ml[49,1981+17]..[49,1981+34])
                      Ptyp_constr "fixed_explanation" (lib/types.ml[49,1981+17]..[49,1981+34])
                      []
                  ]
              (lib/types.ml[50,2024+6]..[50,2024+48])
                Immutable
                "row_name" (lib/types.ml[50,2024+6]..[50,2024+14])                core_type (lib/types.ml[50,2024+16]..[50,2024+48])
                  Ptyp_constr "option" (lib/types.ml[50,2024+42]..[50,2024+48])
                  [
                    core_type (lib/types.ml[50,2024+17]..[50,2024+40])
                      Ptyp_tuple
                      [
                        core_type (lib/types.ml[50,2024+17]..[50,2024+23])
                          Ptyp_constr "Path.t" (lib/types.ml[50,2024+17]..[50,2024+23])
                          []
                        core_type (lib/types.ml[50,2024+26]..[50,2024+40])
                          Ptyp_constr "list" (lib/types.ml[50,2024+36]..[50,2024+40])
                          [
                            core_type (lib/types.ml[50,2024+26]..[50,2024+35])
                              Ptyp_constr "type_expr" (lib/types.ml[50,2024+26]..[50,2024+35])
                              []
                          ]
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "fixed_explanation" (lib/types.ml[51,2075+4]..[51,2075+21]) (lib/types.ml[51,2075+0]..[52,2099+67])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[52,2099+2]..[52,2099+23])
                "Univar" (lib/types.ml[52,2099+4]..[52,2099+10])
                [
                  core_type (lib/types.ml[52,2099+14]..[52,2099+23])
                    Ptyp_constr "type_expr" (lib/types.ml[52,2099+14]..[52,2099+23])
                    []
                ]
                None
              (lib/types.ml[52,2099+24]..[52,2099+39])
                "Fixed_private" (lib/types.ml[52,2099+26]..[52,2099+39])
                []
                None
              (lib/types.ml[52,2099+40]..[52,2099+59])
                "Reified" (lib/types.ml[52,2099+42]..[52,2099+49])
                [
                  core_type (lib/types.ml[52,2099+53]..[52,2099+59])
                    Ptyp_constr "Path.t" (lib/types.ml[52,2099+53]..[52,2099+59])
                    []
                ]
                None
              (lib/types.ml[52,2099+60]..[52,2099+67])
                "Rigid" (lib/types.ml[52,2099+62]..[52,2099+67])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "row_field" (lib/types.ml[53,2167+4]..[53,2167+13]) (lib/types.ml[53,2167+0]..[53,2167+37])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[53,2167+16]..[53,2167+37])
              Ptyp_constr "row_field_gen" (lib/types.ml[53,2167+24]..[53,2167+37])
              [
                core_type (lib/types.ml[53,2167+16]..[53,2167+23])
                  Ptyp_variant closed=Closed
                  [
                    Rtag "some" true
                      []
                  ]
                  None
              ]
      type_declaration "row_field_gen" (lib/types.ml[54,2205+6]..[54,2205+19]) (lib/types.ml[54,2205+0]..[62,2495+36])
        ptype_params =
          [
            core_type (lib/types.ml[54,2205+4]..[54,2205+5])
              Ptyp_any
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[55,2227+4]..[55,2227+59])
                "RFpresent" (lib/types.ml[55,2227+4]..[55,2227+13])
                [
                  core_type (lib/types.ml[55,2227+16]..[55,2227+32])
                    Ptyp_constr "option" (lib/types.ml[55,2227+26]..[55,2227+32])
                    [
                      core_type (lib/types.ml[55,2227+16]..[55,2227+25])
                        Ptyp_constr "type_expr" (lib/types.ml[55,2227+16]..[55,2227+25])
                        []
                    ]
                ]
                Some
                  core_type (lib/types.ml[55,2227+36]..[55,2227+59])
                    Ptyp_constr "row_field_gen" (lib/types.ml[55,2227+46]..[55,2227+59])
                    [
                      core_type (lib/types.ml[55,2227+36]..[55,2227+45])
                        Ptyp_variant closed=Open
                        [
                          Rtag "some" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[56,2287+2]..[60,2381+74])
                "RFeither" (lib/types.ml[56,2287+4]..[56,2287+12])
                [
                  (lib/types.ml[57,2302+8]..[57,2302+21])
                    Immutable
                    "no_arg" (lib/types.ml[57,2302+8]..[57,2302+14])                    core_type (lib/types.ml[57,2302+16]..[57,2302+20])
                      Ptyp_constr "bool" (lib/types.ml[57,2302+16]..[57,2302+20])
                      []
                  (lib/types.ml[58,2324+8]..[58,2324+33])
                    Immutable
                    "arg_type" (lib/types.ml[58,2324+8]..[58,2324+16])                    core_type (lib/types.ml[58,2324+18]..[58,2324+32])
                      Ptyp_constr "list" (lib/types.ml[58,2324+28]..[58,2324+32])
                      [
                        core_type (lib/types.ml[58,2324+18]..[58,2324+27])
                          Ptyp_constr "type_expr" (lib/types.ml[58,2324+18]..[58,2324+27])
                          []
                      ]
                  (lib/types.ml[59,2358+8]..[59,2358+22])
                    Immutable
                    "matched" (lib/types.ml[59,2358+8]..[59,2358+15])                    core_type (lib/types.ml[59,2358+17]..[59,2358+21])
                      Ptyp_constr "bool" (lib/types.ml[59,2358+17]..[59,2358+21])
                      []
                  (lib/types.ml[60,2381+8]..[60,2381+46])
                    Immutable
                    "ext" (lib/types.ml[60,2381+8]..[60,2381+11])                    core_type (lib/types.ml[60,2381+13]..[60,2381+46])
                      Ptyp_constr "ref" (lib/types.ml[60,2381+43]..[60,2381+46])
                      [
                        core_type (lib/types.ml[60,2381+13]..[60,2381+42])
                          Ptyp_constr "row_field_gen" (lib/types.ml[60,2381+29]..[60,2381+42])
                          [
                            core_type (lib/types.ml[60,2381+13]..[60,2381+28])
                              Ptyp_variant closed=Closed
                              [
                                Rtag "some" true
                                  []
                                Rtag "none" true
                                  []
                              ]
                              None
                          ]
                      ]
                ]
                Some
                  core_type (lib/types.ml[60,2381+51]..[60,2381+74])
                    Ptyp_constr "row_field_gen" (lib/types.ml[60,2381+61]..[60,2381+74])
                    [
                      core_type (lib/types.ml[60,2381+51]..[60,2381+60])
                        Ptyp_variant closed=Open
                        [
                          Rtag "some" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[61,2456+2]..[61,2456+38])
                "RFabsent" (lib/types.ml[61,2456+4]..[61,2456+12])
                []
                Some
                  core_type (lib/types.ml[61,2456+15]..[61,2456+38])
                    Ptyp_constr "row_field_gen" (lib/types.ml[61,2456+25]..[61,2456+38])
                    [
                      core_type (lib/types.ml[61,2456+15]..[61,2456+24])
                        Ptyp_variant closed=Open
                        [
                          Rtag "some" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[62,2495+2]..[62,2495+36])
                "RFnone" (lib/types.ml[62,2495+4]..[62,2495+10])
                []
                Some
                  core_type (lib/types.ml[62,2495+13]..[62,2495+36])
                    Ptyp_constr "row_field_gen" (lib/types.ml[62,2495+23]..[62,2495+36])
                    [
                      core_type (lib/types.ml[62,2495+13]..[62,2495+22])
                        Ptyp_variant closed=Open
                        [
                          Rtag "none" true
                            []
                        ]
                        None
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "abbrev_memo" (lib/types.ml[64,2533+4]..[64,2533+15]) (lib/types.ml[64,2533+0]..[67,2633+28])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[65,2551+4]..[65,2551+8])
                "Mnil" (lib/types.ml[65,2551+4]..[65,2551+8])
                []
                None
              (lib/types.ml[66,2560+2]..[66,2560+72])
                "Mcons" (lib/types.ml[66,2560+4]..[66,2560+9])
                [
                  core_type (lib/types.ml[66,2560+13]..[66,2560+25])
                    Ptyp_constr "private_flag" (lib/types.ml[66,2560+13]..[66,2560+25])
                    []
                  core_type (lib/types.ml[66,2560+28]..[66,2560+34])
                    Ptyp_constr "Path.t" (lib/types.ml[66,2560+28]..[66,2560+34])
                    []
                  core_type (lib/types.ml[66,2560+37]..[66,2560+46])
                    Ptyp_constr "type_expr" (lib/types.ml[66,2560+37]..[66,2560+46])
                    []
                  core_type (lib/types.ml[66,2560+49]..[66,2560+58])
                    Ptyp_constr "type_expr" (lib/types.ml[66,2560+49]..[66,2560+58])
                    []
                  core_type (lib/types.ml[66,2560+61]..[66,2560+72])
                    Ptyp_constr "abbrev_memo" (lib/types.ml[66,2560+61]..[66,2560+72])
                    []
                ]
                None
              (lib/types.ml[67,2633+2]..[67,2633+28])
                "Mlink" (lib/types.ml[67,2633+4]..[67,2633+9])
                [
                  core_type (lib/types.ml[67,2633+13]..[67,2633+28])
                    Ptyp_constr "ref" (lib/types.ml[67,2633+25]..[67,2633+28])
                    [
                      core_type (lib/types.ml[67,2633+13]..[67,2633+24])
                        Ptyp_constr "abbrev_memo" (lib/types.ml[67,2633+13]..[67,2633+24])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "any" (lib/types.ml[69,2663+4]..[69,2663+7]) (lib/types.ml[69,2663+0]..[69,2663+32])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[69,2663+10]..[69,2663+32])
              Ptyp_variant closed=Closed
              [
                Rtag "some" true
                  []
                Rtag "none" true
                  []
                Rtag "var" true
                  []
              ]
              None
      type_declaration "field_kind" (lib/types.ml[70,2696+4]..[70,2696+14]) (lib/types.ml[70,2696+0]..[70,2696+44])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[70,2696+17]..[70,2696+44])
              Ptyp_constr "field_kind_gen" (lib/types.ml[70,2696+30]..[70,2696+44])
              [
                core_type (lib/types.ml[70,2696+17]..[70,2696+29])
                  Ptyp_variant closed=Closed
                  [
                    Rtag "some" true
                      []
                    Rtag "var" true
                      []
                  ]
                  None
              ]
      type_declaration "field_kind_gen" (lib/types.ml[71,2741+6]..[71,2741+20]) (lib/types.ml[71,2741+0]..[75,2987+40])
        ptype_params =
          [
            core_type (lib/types.ml[71,2741+4]..[71,2741+5])
              Ptyp_any
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[72,2764+4]..[72,2764+79])
                "FKvar" (lib/types.ml[72,2764+4]..[72,2764+9])
                [
                  (lib/types.ml[72,2764+13]..[72,2764+51])
                    Mutable
                    "field_kind" (lib/types.ml[72,2764+21]..[72,2764+31])                    core_type (lib/types.ml[72,2764+33]..[72,2764+51])
                      Ptyp_constr "field_kind_gen" (lib/types.ml[72,2764+37]..[72,2764+51])
                      [
                        core_type (lib/types.ml[72,2764+33]..[72,2764+36])
                          Ptyp_constr "any" (lib/types.ml[72,2764+33]..[72,2764+36])
                          []
                      ]
                ]
                Some
                  core_type (lib/types.ml[72,2764+56]..[72,2764+79])
                    Ptyp_constr "field_kind_gen" (lib/types.ml[72,2764+65]..[72,2764+79])
                    [
                      core_type (lib/types.ml[72,2764+56]..[72,2764+64])
                        Ptyp_variant closed=Open
                        [
                          Rtag "var" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[73,2844+2]..[73,2844+40])
                "FKprivate" (lib/types.ml[73,2844+4]..[73,2844+13])
                []
                Some
                  core_type (lib/types.ml[73,2844+16]..[73,2844+40])
                    Ptyp_constr "field_kind_gen" (lib/types.ml[73,2844+26]..[73,2844+40])
                    [
                      core_type (lib/types.ml[73,2844+16]..[73,2844+25])
                        Ptyp_variant closed=Open
                        [
                          Rtag "none" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[74,2925+2]..[74,2925+40])
                "FKpublic" (lib/types.ml[74,2925+4]..[74,2925+12])
                []
                Some
                  core_type (lib/types.ml[74,2925+16]..[74,2925+40])
                    Ptyp_constr "field_kind_gen" (lib/types.ml[74,2925+26]..[74,2925+40])
                    [
                      core_type (lib/types.ml[74,2925+16]..[74,2925+25])
                        Ptyp_variant closed=Open
                        [
                          Rtag "some" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[75,2987+2]..[75,2987+40])
                "FKabsent" (lib/types.ml[75,2987+4]..[75,2987+12])
                []
                Some
                  core_type (lib/types.ml[75,2987+16]..[75,2987+40])
                    Ptyp_constr "field_kind_gen" (lib/types.ml[75,2987+26]..[75,2987+40])
                    [
                      core_type (lib/types.ml[75,2987+16]..[75,2987+25])
                        Ptyp_variant closed=Open
                        [
                          Rtag "some" true
                            []
                        ]
                        None
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "commutable" (lib/types.ml[77,3058+4]..[77,3058+14]) (lib/types.ml[77,3058+0]..[77,3058+44])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[77,3058+17]..[77,3058+44])
              Ptyp_constr "commutable_gen" (lib/types.ml[77,3058+30]..[77,3058+44])
              [
                core_type (lib/types.ml[77,3058+17]..[77,3058+29])
                  Ptyp_variant closed=Closed
                  [
                    Rtag "some" true
                      []
                    Rtag "var" true
                      []
                  ]
                  None
              ]
      type_declaration "commutable_gen" (lib/types.ml[78,3103+6]..[78,3103+20]) (lib/types.ml[78,3103+0]..[81,3206+73])
        ptype_params =
          [
            core_type (lib/types.ml[78,3103+4]..[78,3103+5])
              Ptyp_any
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[79,3126+4]..[79,3126+39])
                "Cok" (lib/types.ml[79,3126+4]..[79,3126+7])
                []
                Some
                  core_type (lib/types.ml[79,3126+15]..[79,3126+39])
                    Ptyp_constr "commutable_gen" (lib/types.ml[79,3126+25]..[79,3126+39])
                    [
                      core_type (lib/types.ml[79,3126+15]..[79,3126+24])
                        Ptyp_variant closed=Open
                        [
                          Rtag "some" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[80,3166+2]..[80,3166+39])
                "Cunknown" (lib/types.ml[80,3166+4]..[80,3166+12])
                []
                Some
                  core_type (lib/types.ml[80,3166+15]..[80,3166+39])
                    Ptyp_constr "commutable_gen" (lib/types.ml[80,3166+25]..[80,3166+39])
                    [
                      core_type (lib/types.ml[80,3166+15]..[80,3166+24])
                        Ptyp_variant closed=Open
                        [
                          Rtag "none" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[81,3206+2]..[81,3206+73])
                "Cvar" (lib/types.ml[81,3206+4]..[81,3206+8])
                [
                  (lib/types.ml[81,3206+12]..[81,3206+45])
                    Mutable
                    "commu" (lib/types.ml[81,3206+20]..[81,3206+25])                    core_type (lib/types.ml[81,3206+27]..[81,3206+45])
                      Ptyp_constr "commutable_gen" (lib/types.ml[81,3206+31]..[81,3206+45])
                      [
                        core_type (lib/types.ml[81,3206+27]..[81,3206+30])
                          Ptyp_constr "any" (lib/types.ml[81,3206+27]..[81,3206+30])
                          []
                      ]
                ]
                Some
                  core_type (lib/types.ml[81,3206+50]..[81,3206+73])
                    Ptyp_constr "commutable_gen" (lib/types.ml[81,3206+59]..[81,3206+73])
                    [
                      core_type (lib/types.ml[81,3206+50]..[81,3206+58])
                        Ptyp_variant closed=Open
                        [
                          Rtag "var" true
                            []
                        ]
                        None
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[83,3281+0]..[88,3420+3])
    Pstr_module
    "TransientTypeOps" (lib/types.ml[83,3281+7]..[83,3281+23])
      module_expr (lib/types.ml[83,3281+26]..[88,3420+3])
        Pmod_structure
        [
          structure_item (lib/types.ml[84,3314+2]..[84,3314+20])
            Pstr_type Rec
            [
              type_declaration "t" (lib/types.ml[84,3314+7]..[84,3314+8]) (lib/types.ml[84,3314+2]..[84,3314+20])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lib/types.ml[84,3314+11]..[84,3314+20])
                      Ptyp_constr "type_expr" (lib/types.ml[84,3314+11]..[84,3314+20])
                      []
            ]
          structure_item (lib/types.ml[85,3335+2]..[85,3335+35])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[85,3335+6]..[85,3335+13])
                  Ppat_var "compare" (lib/types.ml[85,3335+6]..[85,3335+13])
                expression (lib/types.ml[85,3335+14]..[85,3335+35]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[85,3335+14]..[85,3335+16])
                      Nolabel
                      None
                      pattern (lib/types.ml[85,3335+14]..[85,3335+16])
                        Ppat_var "t1" (lib/types.ml[85,3335+14]..[85,3335+16])
                    Pparam_val (lib/types.ml[85,3335+17]..[85,3335+19])
                      Nolabel
                      None
                      pattern (lib/types.ml[85,3335+17]..[85,3335+19])
                        Ppat_var "t2" (lib/types.ml[85,3335+17]..[85,3335+19])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[85,3335+22]..[85,3335+35])
                      Pexp_apply
                      expression (lib/types.ml[85,3335+28]..[85,3335+29])
                        Pexp_ident "-" (lib/types.ml[85,3335+28]..[85,3335+29])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[85,3335+22]..[85,3335+27])
                            Pexp_field
                            expression (lib/types.ml[85,3335+22]..[85,3335+24])
                              Pexp_ident "t1" (lib/types.ml[85,3335+22]..[85,3335+24])
                            "id" (lib/types.ml[85,3335+25]..[85,3335+27])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[85,3335+30]..[85,3335+35])
                            Pexp_field
                            expression (lib/types.ml[85,3335+30]..[85,3335+32])
                              Pexp_ident "t2" (lib/types.ml[85,3335+30]..[85,3335+32])
                            "id" (lib/types.ml[85,3335+33]..[85,3335+35])
                      ]
            ]
          structure_item (lib/types.ml[86,3371+2]..[86,3371+19])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[86,3371+6]..[86,3371+10])
                  Ppat_var "hash" (lib/types.ml[86,3371+6]..[86,3371+10])
                expression (lib/types.ml[86,3371+11]..[86,3371+19]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[86,3371+11]..[86,3371+12])
                      Nolabel
                      None
                      pattern (lib/types.ml[86,3371+11]..[86,3371+12])
                        Ppat_var "t" (lib/types.ml[86,3371+11]..[86,3371+12])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[86,3371+15]..[86,3371+19])
                      Pexp_field
                      expression (lib/types.ml[86,3371+15]..[86,3371+16])
                        Pexp_ident "t" (lib/types.ml[86,3371+15]..[86,3371+16])
                      "id" (lib/types.ml[86,3371+17]..[86,3371+19])
            ]
          structure_item (lib/types.ml[87,3391+2]..[87,3391+28])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[87,3391+6]..[87,3391+11])
                  Ppat_var "equal" (lib/types.ml[87,3391+6]..[87,3391+11])
                expression (lib/types.ml[87,3391+12]..[87,3391+28]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[87,3391+12]..[87,3391+14])
                      Nolabel
                      None
                      pattern (lib/types.ml[87,3391+12]..[87,3391+14])
                        Ppat_var "t1" (lib/types.ml[87,3391+12]..[87,3391+14])
                    Pparam_val (lib/types.ml[87,3391+15]..[87,3391+17])
                      Nolabel
                      None
                      pattern (lib/types.ml[87,3391+15]..[87,3391+17])
                        Ppat_var "t2" (lib/types.ml[87,3391+15]..[87,3391+17])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[87,3391+20]..[87,3391+28])
                      Pexp_apply
                      expression (lib/types.ml[87,3391+23]..[87,3391+25])
                        Pexp_ident "==" (lib/types.ml[87,3391+23]..[87,3391+25])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[87,3391+20]..[87,3391+22])
                            Pexp_ident "t1" (lib/types.ml[87,3391+20]..[87,3391+22])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[87,3391+26]..[87,3391+28])
                            Pexp_ident "t2" (lib/types.ml[87,3391+26]..[87,3391+28])
                      ]
            ]
        ]
  structure_item (lib/types.ml[92,3432+0]..[92,3432+22])
    Pstr_module
    "Uid" (lib/types.ml[92,3432+7]..[92,3432+10])
      module_expr (lib/types.ml[92,3432+13]..[92,3432+22])
        Pmod_ident "Shape.Uid" (lib/types.ml[92,3432+13]..[92,3432+22])
  structure_item (lib/types.ml[96,3502+0]..[96,3502+39])
    Pstr_module
    "MethSet" (lib/types.ml[96,3502+7]..[96,3502+14])
      module_expr (lib/types.ml[96,3502+17]..[96,3502+39])
        Pmod_ident "Misc.Stdlib.String.Set" (lib/types.ml[96,3502+17]..[96,3502+39])
  structure_item (lib/types.ml[97,3542+0]..[97,3542+38])
    Pstr_module
    "VarSet" (lib/types.ml[97,3542+7]..[97,3542+13])
      module_expr (lib/types.ml[97,3542+16]..[97,3542+38])
        Pmod_ident "Misc.Stdlib.String.Set" (lib/types.ml[97,3542+16]..[97,3542+38])
  structure_item (lib/types.ml[99,3582+0]..[99,3582+37])
    Pstr_module
    "Meths" (lib/types.ml[99,3582+7]..[99,3582+12])
      module_expr (lib/types.ml[99,3582+15]..[99,3582+37])
        Pmod_ident "Misc.Stdlib.String.Map" (lib/types.ml[99,3582+15]..[99,3582+37])
  structure_item (lib/types.ml[100,3620+0]..[100,3620+36])
    Pstr_module
    "Vars" (lib/types.ml[100,3620+7]..[100,3620+11])
      module_expr (lib/types.ml[100,3620+14]..[100,3620+36])
        Pmod_ident "Misc.Stdlib.String.Map" (lib/types.ml[100,3620+14]..[100,3620+36])
  structure_item (lib/types.ml[105,3685+0]..[135,4710+26])
    Pstr_type Rec
    [
      type_declaration "value_description" (lib/types.ml[105,3685+5]..[105,3685+22]) (lib/types.ml[105,3685+0]..[111,3887+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[106,3710+4]..[106,3710+24])
                Immutable
                "val_type" (lib/types.ml[106,3710+4]..[106,3710+12])                core_type (lib/types.ml[106,3710+14]..[106,3710+23])
                  Ptyp_constr "type_expr" (lib/types.ml[106,3710+14]..[106,3710+23])
                  []
              (lib/types.ml[107,3774+4]..[107,3774+25])
                Immutable
                "val_kind" (lib/types.ml[107,3774+4]..[107,3774+12])                core_type (lib/types.ml[107,3774+14]..[107,3774+24])
                  Ptyp_constr "value_kind" (lib/types.ml[107,3774+14]..[107,3774+24])
                  []
              (lib/types.ml[108,3800+4]..[108,3800+24])
                Immutable
                "val_loc" (lib/types.ml[108,3800+4]..[108,3800+11])                core_type (lib/types.ml[108,3800+13]..[108,3800+23])
                  Ptyp_constr "Location.t" (lib/types.ml[108,3800+13]..[108,3800+23])
                  []
              (lib/types.ml[109,3825+4]..[109,3825+41])
                Immutable
                "val_attributes" (lib/types.ml[109,3825+4]..[109,3825+18])                core_type (lib/types.ml[109,3825+20]..[109,3825+40])
                  Ptyp_constr "Parsetree.attributes" (lib/types.ml[109,3825+20]..[109,3825+40])
                  []
              (lib/types.ml[110,3867+4]..[110,3867+19])
                Immutable
                "val_uid" (lib/types.ml[110,3867+4]..[110,3867+11])                core_type (lib/types.ml[110,3867+13]..[110,3867+18])
                  Ptyp_constr "Uid.t" (lib/types.ml[110,3867+13]..[110,3867+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "value_kind" (lib/types.ml[113,3892+4]..[113,3892+14]) (lib/types.ml[113,3892+0]..[120,4229+57])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[114,3909+4]..[114,3909+11])
                "Val_reg" (lib/types.ml[114,3909+4]..[114,3909+11])
                []
                None
              (lib/types.ml[115,3969+2]..[115,3969+37])
                "Val_prim" (lib/types.ml[115,3969+4]..[115,3969+12])
                [
                  core_type (lib/types.ml[115,3969+16]..[115,3969+37])
                    Ptyp_constr "Primitive.description" (lib/types.ml[115,3969+16]..[115,3969+37])
                    []
                ]
                None
              (lib/types.ml[116,4025+2]..[116,4025+37])
                "Val_ivar" (lib/types.ml[116,4025+4]..[116,4025+12])
                [
                  core_type (lib/types.ml[116,4025+16]..[116,4025+28])
                    Ptyp_constr "mutable_flag" (lib/types.ml[116,4025+16]..[116,4025+28])
                    []
                  core_type (lib/types.ml[116,4025+31]..[116,4025+37])
                    Ptyp_constr "string" (lib/types.ml[116,4025+31]..[116,4025+37])
                    []
                ]
                None
              (lib/types.ml[117,4101+2]..[118,4117+60])
                "Val_self" (lib/types.ml[117,4101+4]..[117,4101+12])
                [
                  core_type (lib/types.ml[118,4117+6]..[118,4117+21])
                    Ptyp_constr "class_signature" (lib/types.ml[118,4117+6]..[118,4117+21])
                    []
                  core_type (lib/types.ml[118,4117+24]..[118,4117+34])
                    Ptyp_constr "self_meths" (lib/types.ml[118,4117+24]..[118,4117+34])
                    []
                  core_type (lib/types.ml[118,4117+37]..[118,4117+51])
                    Ptyp_constr "Vars.t" (lib/types.ml[118,4117+45]..[118,4117+51])
                    [
                      core_type (lib/types.ml[118,4117+37]..[118,4117+44])
                        Ptyp_constr "Ident.t" (lib/types.ml[118,4117+37]..[118,4117+44])
                        []
                    ]
                  core_type (lib/types.ml[118,4117+54]..[118,4117+60])
                    Ptyp_constr "string" (lib/types.ml[118,4117+54]..[118,4117+60])
                    []
                ]
                None
              (lib/types.ml[120,4229+2]..[120,4229+57])
                "Val_anc" (lib/types.ml[120,4229+4]..[120,4229+11])
                [
                  core_type (lib/types.ml[120,4229+15]..[120,4229+30])
                    Ptyp_constr "class_signature" (lib/types.ml[120,4229+15]..[120,4229+30])
                    []
                  core_type (lib/types.ml[120,4229+33]..[120,4229+48])
                    Ptyp_constr "Meths.t" (lib/types.ml[120,4229+41]..[120,4229+48])
                    [
                      core_type (lib/types.ml[120,4229+33]..[120,4229+40])
                        Ptyp_constr "Ident.t" (lib/types.ml[120,4229+33]..[120,4229+40])
                        []
                    ]
                  core_type (lib/types.ml[120,4229+51]..[120,4229+57])
                    Ptyp_constr "string" (lib/types.ml[120,4229+51]..[120,4229+57])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "self_meths" (lib/types.ml[123,4343+4]..[123,4343+14]) (lib/types.ml[123,4343+0]..[125,4397+39])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[124,4360+2]..[124,4360+36])
                "Self_concrete" (lib/types.ml[124,4360+4]..[124,4360+17])
                [
                  core_type (lib/types.ml[124,4360+21]..[124,4360+36])
                    Ptyp_constr "Meths.t" (lib/types.ml[124,4360+29]..[124,4360+36])
                    [
                      core_type (lib/types.ml[124,4360+21]..[124,4360+28])
                        Ptyp_constr "Ident.t" (lib/types.ml[124,4360+21]..[124,4360+28])
                        []
                    ]
                ]
                None
              (lib/types.ml[125,4397+2]..[125,4397+39])
                "Self_virtual" (lib/types.ml[125,4397+4]..[125,4397+16])
                [
                  core_type (lib/types.ml[125,4397+20]..[125,4397+39])
                    Ptyp_constr "ref" (lib/types.ml[125,4397+36]..[125,4397+39])
                    [
                      core_type (lib/types.ml[125,4397+20]..[125,4397+35])
                        Ptyp_constr "Meths.t" (lib/types.ml[125,4397+28]..[125,4397+35])
                        [
                          core_type (lib/types.ml[125,4397+20]..[125,4397+27])
                            Ptyp_constr "Ident.t" (lib/types.ml[125,4397+20]..[125,4397+27])
                            []
                        ]
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "class_signature" (lib/types.ml[127,4438+4]..[127,4438+19]) (lib/types.ml[127,4438+0]..[131,4597+78])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[128,4460+4]..[128,4460+25])
                Immutable
                "csig_self" (lib/types.ml[128,4460+4]..[128,4460+13])                core_type (lib/types.ml[128,4460+15]..[128,4460+24])
                  Ptyp_constr "type_expr" (lib/types.ml[128,4460+15]..[128,4460+24])
                  []
              (lib/types.ml[129,4486+4]..[129,4486+37])
                Mutable
                "csig_self_row" (lib/types.ml[129,4486+12]..[129,4486+25])                core_type (lib/types.ml[129,4486+27]..[129,4486+36])
                  Ptyp_constr "type_expr" (lib/types.ml[129,4486+27]..[129,4486+36])
                  []
              (lib/types.ml[130,4524+4]..[130,4524+72])
                Mutable
                "csig_vars" (lib/types.ml[130,4524+12]..[130,4524+21])                core_type (lib/types.ml[130,4524+23]..[130,4524+71])
                  Ptyp_constr "Vars.t" (lib/types.ml[130,4524+65]..[130,4524+71])
                  [
                    core_type (lib/types.ml[130,4524+24]..[130,4524+63])
                      Ptyp_tuple
                      [
                        core_type (lib/types.ml[130,4524+24]..[130,4524+36])
                          Ptyp_constr "mutable_flag" (lib/types.ml[130,4524+24]..[130,4524+36])
                          []
                        core_type (lib/types.ml[130,4524+39]..[130,4524+51])
                          Ptyp_constr "virtual_flag" (lib/types.ml[130,4524+39]..[130,4524+51])
                          []
                        core_type (lib/types.ml[130,4524+54]..[130,4524+63])
                          Ptyp_constr "type_expr" (lib/types.ml[130,4524+54]..[130,4524+63])
                          []
                      ]
                  ]
              (lib/types.ml[131,4597+4]..[131,4597+76])
                Mutable
                "csig_meths" (lib/types.ml[131,4597+12]..[131,4597+22])                core_type (lib/types.ml[131,4597+24]..[131,4597+75])
                  Ptyp_constr "Meths.t" (lib/types.ml[131,4597+68]..[131,4597+75])
                  [
                    core_type (lib/types.ml[131,4597+25]..[131,4597+66])
                      Ptyp_tuple
                      [
                        core_type (lib/types.ml[131,4597+25]..[131,4597+39])
                          Ptyp_constr "method_privacy" (lib/types.ml[131,4597+25]..[131,4597+39])
                          []
                        core_type (lib/types.ml[131,4597+42]..[131,4597+54])
                          Ptyp_constr "virtual_flag" (lib/types.ml[131,4597+42]..[131,4597+54])
                          []
                        core_type (lib/types.ml[131,4597+57]..[131,4597+66])
                          Ptyp_constr "type_expr" (lib/types.ml[131,4597+57]..[131,4597+66])
                          []
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "method_privacy" (lib/types.ml[133,4677+4]..[133,4677+18]) (lib/types.ml[133,4677+0]..[135,4710+26])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[134,4698+2]..[134,4698+11])
                "Mpublic" (lib/types.ml[134,4698+4]..[134,4698+11])
                []
                None
              (lib/types.ml[135,4710+2]..[135,4710+26])
                "Mprivate" (lib/types.ml[135,4710+4]..[135,4710+12])
                [
                  core_type (lib/types.ml[135,4710+16]..[135,4710+26])
                    Ptyp_constr "field_kind" (lib/types.ml[135,4710+16]..[135,4710+26])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[157,5365+0]..[203,7132+3])
    Pstr_module
    "Variance" (lib/types.ml[157,5365+7]..[157,5365+15])
      module_expr (lib/types.ml[157,5365+18]..[203,7132+3])
        Pmod_structure
        [
          structure_item (lib/types.ml[158,5390+2]..[158,5390+14])
            Pstr_type Rec
            [
              type_declaration "t" (lib/types.ml[158,5390+7]..[158,5390+8]) (lib/types.ml[158,5390+2]..[158,5390+14])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lib/types.ml[158,5390+11]..[158,5390+14])
                      Ptyp_constr "int" (lib/types.ml[158,5390+11]..[158,5390+14])
                      []
            ]
          structure_item (lib/types.ml[159,5405+2]..[159,5405+63])
            Pstr_type Rec
            [
              type_declaration "f" (lib/types.ml[159,5405+7]..[159,5405+8]) (lib/types.ml[159,5405+2]..[159,5405+63])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (lib/types.ml[159,5405+11]..[159,5405+18])
                        "May_pos" (lib/types.ml[159,5405+11]..[159,5405+18])
                        []
                        None
                      (lib/types.ml[159,5405+19]..[159,5405+28])
                        "May_neg" (lib/types.ml[159,5405+21]..[159,5405+28])
                        []
                        None
                      (lib/types.ml[159,5405+29]..[159,5405+39])
                        "May_weak" (lib/types.ml[159,5405+31]..[159,5405+39])
                        []
                        None
                      (lib/types.ml[159,5405+40]..[159,5405+45])
                        "Inj" (lib/types.ml[159,5405+42]..[159,5405+45])
                        []
                        None
                      (lib/types.ml[159,5405+46]..[159,5405+51])
                        "Pos" (lib/types.ml[159,5405+48]..[159,5405+51])
                        []
                        None
                      (lib/types.ml[159,5405+52]..[159,5405+57])
                        "Neg" (lib/types.ml[159,5405+54]..[159,5405+57])
                        []
                        None
                      (lib/types.ml[159,5405+58]..[159,5405+63])
                        "Inv" (lib/types.ml[159,5405+60]..[159,5405+63])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lib/types.ml[160,5469+2]..[167,5622+15])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[160,5469+6]..[160,5469+12])
                  Ppat_var "single" (lib/types.ml[160,5469+6]..[160,5469+12])
                expression (lib/types.ml[160,5469+15]..[167,5622+15])
                  Pexp_function
                  []
                  None
                  Pfunction_cases (lib/types.ml[160,5469+15]..[167,5622+15])
                    [
                      <case>
                        pattern (lib/types.ml[161,5493+6]..[161,5493+13])
                          Ppat_construct "May_pos" (lib/types.ml[161,5493+6]..[161,5493+13])
                          None
                        expression (lib/types.ml[161,5493+17]..[161,5493+18])
                          Pexp_constant PConst_int (1,None)
                      <case>
                        pattern (lib/types.ml[162,5512+6]..[162,5512+13])
                          Ppat_construct "May_neg" (lib/types.ml[162,5512+6]..[162,5512+13])
                          None
                        expression (lib/types.ml[162,5512+17]..[162,5512+22])
                          Pexp_apply
                          expression (lib/types.ml[162,5512+19]..[162,5512+20])
                            Pexp_ident "+" (lib/types.ml[162,5512+19]..[162,5512+20])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[162,5512+17]..[162,5512+18])
                                Pexp_constant PConst_int (2,None)
                            <arg>
                            Nolabel
                              expression (lib/types.ml[162,5512+21]..[162,5512+22])
                                Pexp_constant PConst_int (4,None)
                          ]
                      <case>
                        pattern (lib/types.ml[163,5535+6]..[163,5535+14])
                          Ppat_construct "May_weak" (lib/types.ml[163,5535+6]..[163,5535+14])
                          None
                        expression (lib/types.ml[163,5535+18]..[163,5535+19])
                          Pexp_constant PConst_int (4,None)
                      <case>
                        pattern (lib/types.ml[164,5555+6]..[164,5555+9])
                          Ppat_construct "Inj" (lib/types.ml[164,5555+6]..[164,5555+9])
                          None
                        expression (lib/types.ml[164,5555+13]..[164,5555+14])
                          Pexp_constant PConst_int (8,None)
                      <case>
                        pattern (lib/types.ml[165,5570+6]..[165,5570+9])
                          Ppat_construct "Pos" (lib/types.ml[165,5570+6]..[165,5570+9])
                          None
                        expression (lib/types.ml[165,5570+13]..[165,5570+23])
                          Pexp_apply
                          expression (lib/types.ml[165,5570+20]..[165,5570+21])
                            Pexp_ident "+" (lib/types.ml[165,5570+20]..[165,5570+21])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[165,5570+13]..[165,5570+19])
                                Pexp_apply
                                expression (lib/types.ml[165,5570+16]..[165,5570+17])
                                  Pexp_ident "+" (lib/types.ml[165,5570+16]..[165,5570+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[165,5570+13]..[165,5570+15])
                                      Pexp_constant PConst_int (16,None)
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[165,5570+18]..[165,5570+19])
                                      Pexp_constant PConst_int (8,None)
                                ]
                            <arg>
                            Nolabel
                              expression (lib/types.ml[165,5570+22]..[165,5570+23])
                                Pexp_constant PConst_int (1,None)
                          ]
                      <case>
                        pattern (lib/types.ml[166,5594+6]..[166,5594+9])
                          Ppat_construct "Neg" (lib/types.ml[166,5594+6]..[166,5594+9])
                          None
                        expression (lib/types.ml[166,5594+13]..[166,5594+27])
                          Pexp_apply
                          expression (lib/types.ml[166,5594+24]..[166,5594+25])
                            Pexp_ident "+" (lib/types.ml[166,5594+24]..[166,5594+25])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[166,5594+13]..[166,5594+23])
                                Pexp_apply
                                expression (lib/types.ml[166,5594+20]..[166,5594+21])
                                  Pexp_ident "+" (lib/types.ml[166,5594+20]..[166,5594+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[166,5594+13]..[166,5594+19])
                                      Pexp_apply
                                      expression (lib/types.ml[166,5594+16]..[166,5594+17])
                                        Pexp_ident "+" (lib/types.ml[166,5594+16]..[166,5594+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[166,5594+13]..[166,5594+15])
                                            Pexp_constant PConst_int (32,None)
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[166,5594+18]..[166,5594+19])
                                            Pexp_constant PConst_int (8,None)
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[166,5594+22]..[166,5594+23])
                                      Pexp_constant PConst_int (4,None)
                                ]
                            <arg>
                            Nolabel
                              expression (lib/types.ml[166,5594+26]..[166,5594+27])
                                Pexp_constant PConst_int (2,None)
                          ]
                      <case>
                        pattern (lib/types.ml[167,5622+6]..[167,5622+9])
                          Ppat_construct "Inv" (lib/types.ml[167,5622+6]..[167,5622+9])
                          None
                        expression (lib/types.ml[167,5622+13]..[167,5622+15])
                          Pexp_constant PConst_int (63,None)
                    ]
            ]
          structure_item (lib/types.ml[168,5638+2]..[168,5638+29])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[168,5638+6]..[168,5638+11])
                  Ppat_var "union" (lib/types.ml[168,5638+6]..[168,5638+11])
                expression (lib/types.ml[168,5638+12]..[168,5638+29]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[168,5638+12]..[168,5638+14])
                      Nolabel
                      None
                      pattern (lib/types.ml[168,5638+12]..[168,5638+14])
                        Ppat_var "v1" (lib/types.ml[168,5638+12]..[168,5638+14])
                    Pparam_val (lib/types.ml[168,5638+15]..[168,5638+17])
                      Nolabel
                      None
                      pattern (lib/types.ml[168,5638+15]..[168,5638+17])
                        Ppat_var "v2" (lib/types.ml[168,5638+15]..[168,5638+17])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[168,5638+20]..[168,5638+29])
                      Pexp_apply
                      expression (lib/types.ml[168,5638+23]..[168,5638+26])
                        Pexp_ident "lor" (lib/types.ml[168,5638+23]..[168,5638+26])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[168,5638+20]..[168,5638+22])
                            Pexp_ident "v1" (lib/types.ml[168,5638+20]..[168,5638+22])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[168,5638+27]..[168,5638+29])
                            Pexp_ident "v2" (lib/types.ml[168,5638+27]..[168,5638+29])
                      ]
            ]
          structure_item (lib/types.ml[169,5668+2]..[169,5668+30])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[169,5668+6]..[169,5668+11])
                  Ppat_var "inter" (lib/types.ml[169,5668+6]..[169,5668+11])
                expression (lib/types.ml[169,5668+12]..[169,5668+30]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[169,5668+12]..[169,5668+14])
                      Nolabel
                      None
                      pattern (lib/types.ml[169,5668+12]..[169,5668+14])
                        Ppat_var "v1" (lib/types.ml[169,5668+12]..[169,5668+14])
                    Pparam_val (lib/types.ml[169,5668+15]..[169,5668+17])
                      Nolabel
                      None
                      pattern (lib/types.ml[169,5668+15]..[169,5668+17])
                        Ppat_var "v2" (lib/types.ml[169,5668+15]..[169,5668+17])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[169,5668+20]..[169,5668+30])
                      Pexp_apply
                      expression (lib/types.ml[169,5668+23]..[169,5668+27])
                        Pexp_ident "land" (lib/types.ml[169,5668+23]..[169,5668+27])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[169,5668+20]..[169,5668+22])
                            Pexp_ident "v1" (lib/types.ml[169,5668+20]..[169,5668+22])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[169,5668+28]..[169,5668+30])
                            Pexp_ident "v2" (lib/types.ml[169,5668+28]..[169,5668+30])
                      ]
            ]
          structure_item (lib/types.ml[170,5699+2]..[170,5699+38])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[170,5699+6]..[170,5699+12])
                  Ppat_var "subset" (lib/types.ml[170,5699+6]..[170,5699+12])
                expression (lib/types.ml[170,5699+13]..[170,5699+38]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[170,5699+13]..[170,5699+15])
                      Nolabel
                      None
                      pattern (lib/types.ml[170,5699+13]..[170,5699+15])
                        Ppat_var "v1" (lib/types.ml[170,5699+13]..[170,5699+15])
                    Pparam_val (lib/types.ml[170,5699+16]..[170,5699+18])
                      Nolabel
                      None
                      pattern (lib/types.ml[170,5699+16]..[170,5699+18])
                        Ppat_var "v2" (lib/types.ml[170,5699+16]..[170,5699+18])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[170,5699+21]..[170,5699+38])
                      Pexp_apply
                      expression (lib/types.ml[170,5699+33]..[170,5699+34])
                        Pexp_ident "=" (lib/types.ml[170,5699+33]..[170,5699+34])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[170,5699+22]..[170,5699+32])
                            Pexp_apply
                            expression (lib/types.ml[170,5699+25]..[170,5699+29])
                              Pexp_ident "land" (lib/types.ml[170,5699+25]..[170,5699+29])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[170,5699+22]..[170,5699+24])
                                  Pexp_ident "v1" (lib/types.ml[170,5699+22]..[170,5699+24])
                              <arg>
                              Nolabel
                                expression (lib/types.ml[170,5699+30]..[170,5699+32])
                                  Pexp_ident "v2" (lib/types.ml[170,5699+30]..[170,5699+32])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/types.ml[170,5699+35]..[170,5699+37])
                            Pexp_ident "v1" (lib/types.ml[170,5699+35]..[170,5699+37])
                      ]
            ]
          structure_item (lib/types.ml[171,5738+2]..[171,5738+32])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[171,5738+6]..[171,5738+8])
                  Ppat_var "eq" (lib/types.ml[171,5738+6]..[171,5738+8])
                expression (lib/types.ml[171,5738+9]..[171,5738+32]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[171,5738+9]..[171,5738+17])
                      Nolabel
                      None
                      pattern (lib/types.ml[171,5738+9]..[171,5738+17])
                        Ppat_constraint
                        pattern (lib/types.ml[171,5738+10]..[171,5738+12])
                          Ppat_var "v1" (lib/types.ml[171,5738+10]..[171,5738+12])
                        core_type (lib/types.ml[171,5738+15]..[171,5738+16])
                          Ptyp_constr "t" (lib/types.ml[171,5738+15]..[171,5738+16])
                          []
                    Pparam_val (lib/types.ml[171,5738+18]..[171,5738+20])
                      Nolabel
                      None
                      pattern (lib/types.ml[171,5738+18]..[171,5738+20])
                        Ppat_var "v2" (lib/types.ml[171,5738+18]..[171,5738+20])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[171,5738+23]..[171,5738+32])
                      Pexp_apply
                      expression (lib/types.ml[171,5738+27]..[171,5738+28])
                        Pexp_ident "=" (lib/types.ml[171,5738+27]..[171,5738+28])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[171,5738+24]..[171,5738+26])
                            Pexp_ident "v1" (lib/types.ml[171,5738+24]..[171,5738+26])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[171,5738+29]..[171,5738+31])
                            Pexp_ident "v2" (lib/types.ml[171,5738+29]..[171,5738+31])
                      ]
            ]
          structure_item (lib/types.ml[172,5771+2]..[172,5771+34])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[172,5771+6]..[172,5771+9])
                  Ppat_var "set" (lib/types.ml[172,5771+6]..[172,5771+9])
                expression (lib/types.ml[172,5771+10]..[172,5771+34]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[172,5771+10]..[172,5771+11])
                      Nolabel
                      None
                      pattern (lib/types.ml[172,5771+10]..[172,5771+11])
                        Ppat_var "x" (lib/types.ml[172,5771+10]..[172,5771+11])
                    Pparam_val (lib/types.ml[172,5771+12]..[172,5771+13])
                      Nolabel
                      None
                      pattern (lib/types.ml[172,5771+12]..[172,5771+13])
                        Ppat_var "v" (lib/types.ml[172,5771+12]..[172,5771+13])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[172,5771+16]..[172,5771+34])
                      Pexp_apply
                      expression (lib/types.ml[172,5771+16]..[172,5771+21])
                        Pexp_ident "union" (lib/types.ml[172,5771+16]..[172,5771+21])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[172,5771+22]..[172,5771+23])
                            Pexp_ident "v" (lib/types.ml[172,5771+22]..[172,5771+23])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[172,5771+24]..[172,5771+34])
                            Pexp_apply
                            expression (lib/types.ml[172,5771+25]..[172,5771+31])
                              Pexp_ident "single" (lib/types.ml[172,5771+25]..[172,5771+31])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[172,5771+32]..[172,5771+33])
                                  Pexp_ident "x" (lib/types.ml[172,5771+32]..[172,5771+33])
                            ]
                      ]
            ]
          structure_item (lib/types.ml[173,5806+2]..[173,5806+45])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[173,5806+6]..[173,5806+12])
                  Ppat_var "set_if" (lib/types.ml[173,5806+6]..[173,5806+12])
                expression (lib/types.ml[173,5806+13]..[173,5806+45]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[173,5806+13]..[173,5806+14])
                      Nolabel
                      None
                      pattern (lib/types.ml[173,5806+13]..[173,5806+14])
                        Ppat_var "b" (lib/types.ml[173,5806+13]..[173,5806+14])
                    Pparam_val (lib/types.ml[173,5806+15]..[173,5806+16])
                      Nolabel
                      None
                      pattern (lib/types.ml[173,5806+15]..[173,5806+16])
                        Ppat_var "x" (lib/types.ml[173,5806+15]..[173,5806+16])
                    Pparam_val (lib/types.ml[173,5806+17]..[173,5806+18])
                      Nolabel
                      None
                      pattern (lib/types.ml[173,5806+17]..[173,5806+18])
                        Ppat_var "v" (lib/types.ml[173,5806+17]..[173,5806+18])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[173,5806+21]..[173,5806+45])
                      Pexp_ifthenelse
                      expression (lib/types.ml[173,5806+24]..[173,5806+25])
                        Pexp_ident "b" (lib/types.ml[173,5806+24]..[173,5806+25])
                      expression (lib/types.ml[173,5806+31]..[173,5806+38])
                        Pexp_apply
                        expression (lib/types.ml[173,5806+31]..[173,5806+34])
                          Pexp_ident "set" (lib/types.ml[173,5806+31]..[173,5806+34])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[173,5806+35]..[173,5806+36])
                              Pexp_ident "x" (lib/types.ml[173,5806+35]..[173,5806+36])
                          <arg>
                          Nolabel
                            expression (lib/types.ml[173,5806+37]..[173,5806+38])
                              Pexp_ident "v" (lib/types.ml[173,5806+37]..[173,5806+38])
                        ]
                      Some
                        expression (lib/types.ml[173,5806+44]..[173,5806+45])
                          Pexp_ident "v" (lib/types.ml[173,5806+44]..[173,5806+45])
            ]
          structure_item (lib/types.ml[174,5852+2]..[174,5852+31])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[174,5852+6]..[174,5852+9])
                  Ppat_var "mem" (lib/types.ml[174,5852+6]..[174,5852+9])
                expression (lib/types.ml[174,5852+10]..[174,5852+31]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[174,5852+10]..[174,5852+11])
                      Nolabel
                      None
                      pattern (lib/types.ml[174,5852+10]..[174,5852+11])
                        Ppat_var "x" (lib/types.ml[174,5852+10]..[174,5852+11])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[174,5852+14]..[174,5852+31])
                      Pexp_apply
                      expression (lib/types.ml[174,5852+14]..[174,5852+20])
                        Pexp_ident "subset" (lib/types.ml[174,5852+14]..[174,5852+20])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[174,5852+21]..[174,5852+31])
                            Pexp_apply
                            expression (lib/types.ml[174,5852+22]..[174,5852+28])
                              Pexp_ident "single" (lib/types.ml[174,5852+22]..[174,5852+28])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[174,5852+29]..[174,5852+30])
                                  Pexp_ident "x" (lib/types.ml[174,5852+29]..[174,5852+30])
                            ]
                      ]
            ]
          structure_item (lib/types.ml[175,5884+2]..[175,5884+14])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[175,5884+6]..[175,5884+10])
                  Ppat_var "null" (lib/types.ml[175,5884+6]..[175,5884+10])
                expression (lib/types.ml[175,5884+13]..[175,5884+14])
                  Pexp_constant PConst_int (0,None)
            ]
          structure_item (lib/types.ml[176,5899+2]..[176,5899+17])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[176,5899+6]..[176,5899+13])
                  Ppat_var "unknown" (lib/types.ml[176,5899+6]..[176,5899+13])
                expression (lib/types.ml[176,5899+16]..[176,5899+17])
                  Pexp_constant PConst_int (7,None)
            ]
          structure_item (lib/types.ml[177,5917+2]..[177,5917+23])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[177,5917+6]..[177,5917+10])
                  Ppat_var "full" (lib/types.ml[177,5917+6]..[177,5917+10])
                expression (lib/types.ml[177,5917+13]..[177,5917+23])
                  Pexp_apply
                  expression (lib/types.ml[177,5917+13]..[177,5917+19])
                    Pexp_ident "single" (lib/types.ml[177,5917+13]..[177,5917+19])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[177,5917+20]..[177,5917+23])
                        Pexp_construct "Inv" (lib/types.ml[177,5917+20]..[177,5917+23])
                        None
                  ]
            ]
          structure_item (lib/types.ml[178,5941+2]..[178,5941+28])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[178,5941+6]..[178,5941+15])
                  Ppat_var "covariant" (lib/types.ml[178,5941+6]..[178,5941+15])
                expression (lib/types.ml[178,5941+18]..[178,5941+28])
                  Pexp_apply
                  expression (lib/types.ml[178,5941+18]..[178,5941+24])
                    Pexp_ident "single" (lib/types.ml[178,5941+18]..[178,5941+24])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[178,5941+25]..[178,5941+28])
                        Pexp_construct "Pos" (lib/types.ml[178,5941+25]..[178,5941+28])
                        None
                  ]
            ]
          structure_item (lib/types.ml[179,5970+2]..[180,5994+50])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[179,5970+6]..[179,5970+10])
                  Ppat_var "swap" (lib/types.ml[179,5970+6]..[179,5970+10])
                expression (lib/types.ml[179,5970+11]..[180,5994+50]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[179,5970+11]..[179,5970+13])
                      Nolabel
                      None
                      pattern (lib/types.ml[179,5970+11]..[179,5970+13])
                        Ppat_var "f1" (lib/types.ml[179,5970+11]..[179,5970+13])
                    Pparam_val (lib/types.ml[179,5970+14]..[179,5970+16])
                      Nolabel
                      None
                      pattern (lib/types.ml[179,5970+14]..[179,5970+16])
                        Ppat_var "f2" (lib/types.ml[179,5970+14]..[179,5970+16])
                    Pparam_val (lib/types.ml[179,5970+17]..[179,5970+18])
                      Nolabel
                      None
                      pattern (lib/types.ml[179,5970+17]..[179,5970+18])
                        Ppat_var "v" (lib/types.ml[179,5970+17]..[179,5970+18])
                    Pparam_val (lib/types.ml[179,5970+19]..[179,5970+21])
                      Nolabel
                      None
                      pattern (lib/types.ml[179,5970+19]..[179,5970+21])
                        Ppat_var "v'" (lib/types.ml[179,5970+19]..[179,5970+21])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[180,5994+4]..[180,5994+50])
                      Pexp_apply
                      expression (lib/types.ml[180,5994+4]..[180,5994+10])
                        Pexp_ident "set_if" (lib/types.ml[180,5994+4]..[180,5994+10])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[180,5994+11]..[180,5994+21])
                            Pexp_apply
                            expression (lib/types.ml[180,5994+12]..[180,5994+15])
                              Pexp_ident "mem" (lib/types.ml[180,5994+12]..[180,5994+15])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[180,5994+16]..[180,5994+18])
                                  Pexp_ident "f2" (lib/types.ml[180,5994+16]..[180,5994+18])
                              <arg>
                              Nolabel
                                expression (lib/types.ml[180,5994+19]..[180,5994+20])
                                  Pexp_ident "v" (lib/types.ml[180,5994+19]..[180,5994+20])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/types.ml[180,5994+22]..[180,5994+24])
                            Pexp_ident "f1" (lib/types.ml[180,5994+22]..[180,5994+24])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[180,5994+25]..[180,5994+50])
                            Pexp_apply
                            expression (lib/types.ml[180,5994+26]..[180,5994+32])
                              Pexp_ident "set_if" (lib/types.ml[180,5994+26]..[180,5994+32])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[180,5994+33]..[180,5994+43])
                                  Pexp_apply
                                  expression (lib/types.ml[180,5994+34]..[180,5994+37])
                                    Pexp_ident "mem" (lib/types.ml[180,5994+34]..[180,5994+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/types.ml[180,5994+38]..[180,5994+40])
                                        Pexp_ident "f1" (lib/types.ml[180,5994+38]..[180,5994+40])
                                    <arg>
                                    Nolabel
                                      expression (lib/types.ml[180,5994+41]..[180,5994+42])
                                        Pexp_ident "v" (lib/types.ml[180,5994+41]..[180,5994+42])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/types.ml[180,5994+44]..[180,5994+46])
                                  Pexp_ident "f2" (lib/types.ml[180,5994+44]..[180,5994+46])
                              <arg>
                              Nolabel
                                expression (lib/types.ml[180,5994+47]..[180,5994+49])
                                  Pexp_ident "v'" (lib/types.ml[180,5994+47]..[180,5994+49])
                            ]
                      ]
            ]
          structure_item (lib/types.ml[181,6045+2]..[183,6128+46])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[181,6045+6]..[181,6045+15])
                  Ppat_var "conjugate" (lib/types.ml[181,6045+6]..[181,6045+15])
                expression (lib/types.ml[181,6045+16]..[183,6128+46]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[181,6045+16]..[181,6045+17])
                      Nolabel
                      None
                      pattern (lib/types.ml[181,6045+16]..[181,6045+17])
                        Ppat_var "v" (lib/types.ml[181,6045+16]..[181,6045+17])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[182,6065+4]..[183,6128+46])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/types.ml[182,6065+8]..[182,6065+10])
                            Ppat_var "v'" (lib/types.ml[182,6065+8]..[182,6065+10])
                          expression (lib/types.ml[182,6065+13]..[182,6065+59])
                            Pexp_apply
                            expression (lib/types.ml[182,6065+13]..[182,6065+18])
                              Pexp_ident "inter" (lib/types.ml[182,6065+13]..[182,6065+18])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[182,6065+19]..[182,6065+20])
                                  Pexp_ident "v" (lib/types.ml[182,6065+19]..[182,6065+20])
                              <arg>
                              Nolabel
                                expression (lib/types.ml[182,6065+21]..[182,6065+59])
                                  Pexp_apply
                                  expression (lib/types.ml[182,6065+22]..[182,6065+27])
                                    Pexp_ident "union" (lib/types.ml[182,6065+22]..[182,6065+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/types.ml[182,6065+28]..[182,6065+40])
                                        Pexp_apply
                                        expression (lib/types.ml[182,6065+29]..[182,6065+35])
                                          Pexp_ident "single" (lib/types.ml[182,6065+29]..[182,6065+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/types.ml[182,6065+36]..[182,6065+39])
                                              Pexp_construct "Inj" (lib/types.ml[182,6065+36]..[182,6065+39])
                                              None
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lib/types.ml[182,6065+41]..[182,6065+58])
                                        Pexp_apply
                                        expression (lib/types.ml[182,6065+42]..[182,6065+48])
                                          Pexp_ident "single" (lib/types.ml[182,6065+42]..[182,6065+48])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/types.ml[182,6065+49]..[182,6065+57])
                                              Pexp_construct "May_weak" (lib/types.ml[182,6065+49]..[182,6065+57])
                                              None
                                        ]
                                  ]
                            ]
                      ]
                      expression (lib/types.ml[183,6128+4]..[183,6128+46])
                        Pexp_apply
                        expression (lib/types.ml[183,6128+4]..[183,6128+8])
                          Pexp_ident "swap" (lib/types.ml[183,6128+4]..[183,6128+8])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[183,6128+9]..[183,6128+12])
                              Pexp_construct "Pos" (lib/types.ml[183,6128+9]..[183,6128+12])
                              None
                          <arg>
                          Nolabel
                            expression (lib/types.ml[183,6128+13]..[183,6128+16])
                              Pexp_construct "Neg" (lib/types.ml[183,6128+13]..[183,6128+16])
                              None
                          <arg>
                          Nolabel
                            expression (lib/types.ml[183,6128+17]..[183,6128+18])
                              Pexp_ident "v" (lib/types.ml[183,6128+17]..[183,6128+18])
                          <arg>
                          Nolabel
                            expression (lib/types.ml[183,6128+19]..[183,6128+46])
                              Pexp_apply
                              expression (lib/types.ml[183,6128+20]..[183,6128+24])
                                Pexp_ident "swap" (lib/types.ml[183,6128+20]..[183,6128+24])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[183,6128+25]..[183,6128+32])
                                    Pexp_construct "May_pos" (lib/types.ml[183,6128+25]..[183,6128+32])
                                    None
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[183,6128+33]..[183,6128+40])
                                    Pexp_construct "May_neg" (lib/types.ml[183,6128+33]..[183,6128+40])
                                    None
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[183,6128+41]..[183,6128+42])
                                    Pexp_ident "v" (lib/types.ml[183,6128+41]..[183,6128+42])
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[183,6128+43]..[183,6128+45])
                                    Pexp_ident "v'" (lib/types.ml[183,6128+43]..[183,6128+45])
                              ]
                        ]
            ]
          structure_item (lib/types.ml[184,6175+2]..[195,6726+76])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[184,6175+6]..[184,6175+13])
                  Ppat_var "compose" (lib/types.ml[184,6175+6]..[184,6175+13])
                expression (lib/types.ml[184,6175+14]..[195,6726+76]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[184,6175+14]..[184,6175+16])
                      Nolabel
                      None
                      pattern (lib/types.ml[184,6175+14]..[184,6175+16])
                        Ppat_var "v1" (lib/types.ml[184,6175+14]..[184,6175+16])
                    Pparam_val (lib/types.ml[184,6175+17]..[184,6175+19])
                      Nolabel
                      None
                      pattern (lib/types.ml[184,6175+17]..[184,6175+19])
                        Ppat_var "v2" (lib/types.ml[184,6175+17]..[184,6175+19])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[185,6197+4]..[195,6726+76])
                      Pexp_ifthenelse
                      expression (lib/types.ml[185,6197+7]..[185,6197+31])
                        Pexp_apply
                        expression (lib/types.ml[185,6197+18]..[185,6197+20])
                          Pexp_ident "&&" (lib/types.ml[185,6197+18]..[185,6197+20])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[185,6197+7]..[185,6197+17])
                              Pexp_apply
                              expression (lib/types.ml[185,6197+7]..[185,6197+10])
                                Pexp_ident "mem" (lib/types.ml[185,6197+7]..[185,6197+10])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[185,6197+11]..[185,6197+14])
                                    Pexp_construct "Inv" (lib/types.ml[185,6197+11]..[185,6197+14])
                                    None
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[185,6197+15]..[185,6197+17])
                                    Pexp_ident "v1" (lib/types.ml[185,6197+15]..[185,6197+17])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/types.ml[185,6197+21]..[185,6197+31])
                              Pexp_apply
                              expression (lib/types.ml[185,6197+21]..[185,6197+24])
                                Pexp_ident "mem" (lib/types.ml[185,6197+21]..[185,6197+24])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[185,6197+25]..[185,6197+28])
                                    Pexp_construct "Inj" (lib/types.ml[185,6197+25]..[185,6197+28])
                                    None
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[185,6197+29]..[185,6197+31])
                                    Pexp_ident "v2" (lib/types.ml[185,6197+29]..[185,6197+31])
                              ]
                        ]
                      expression (lib/types.ml[185,6197+37]..[185,6197+41])
                        Pexp_ident "full" (lib/types.ml[185,6197+37]..[185,6197+41])
                      Some
                        expression (lib/types.ml[186,6244+4]..[195,6726+76])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lib/types.ml[186,6244+8]..[186,6244+10])
                                Ppat_var "mp" (lib/types.ml[186,6244+8]..[186,6244+10])
                              expression (lib/types.ml[187,6257+6]..[187,6257+74])
                                Pexp_apply
                                expression (lib/types.ml[187,6257+39]..[187,6257+41])
                                  Pexp_ident "||" (lib/types.ml[187,6257+39]..[187,6257+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[187,6257+6]..[187,6257+38])
                                      Pexp_apply
                                      expression (lib/types.ml[187,6257+21]..[187,6257+23])
                                        Pexp_ident "&&" (lib/types.ml[187,6257+21]..[187,6257+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[187,6257+6]..[187,6257+20])
                                            Pexp_apply
                                            expression (lib/types.ml[187,6257+6]..[187,6257+9])
                                              Pexp_ident "mem" (lib/types.ml[187,6257+6]..[187,6257+9])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[187,6257+10]..[187,6257+17])
                                                  Pexp_construct "May_pos" (lib/types.ml[187,6257+10]..[187,6257+17])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[187,6257+18]..[187,6257+20])
                                                  Pexp_ident "v1" (lib/types.ml[187,6257+18]..[187,6257+20])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[187,6257+24]..[187,6257+38])
                                            Pexp_apply
                                            expression (lib/types.ml[187,6257+24]..[187,6257+27])
                                              Pexp_ident "mem" (lib/types.ml[187,6257+24]..[187,6257+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[187,6257+28]..[187,6257+35])
                                                  Pexp_construct "May_pos" (lib/types.ml[187,6257+28]..[187,6257+35])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[187,6257+36]..[187,6257+38])
                                                  Pexp_ident "v2" (lib/types.ml[187,6257+36]..[187,6257+38])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[187,6257+42]..[187,6257+74])
                                      Pexp_apply
                                      expression (lib/types.ml[187,6257+57]..[187,6257+59])
                                        Pexp_ident "&&" (lib/types.ml[187,6257+57]..[187,6257+59])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[187,6257+42]..[187,6257+56])
                                            Pexp_apply
                                            expression (lib/types.ml[187,6257+42]..[187,6257+45])
                                              Pexp_ident "mem" (lib/types.ml[187,6257+42]..[187,6257+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[187,6257+46]..[187,6257+53])
                                                  Pexp_construct "May_neg" (lib/types.ml[187,6257+46]..[187,6257+53])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[187,6257+54]..[187,6257+56])
                                                  Pexp_ident "v1" (lib/types.ml[187,6257+54]..[187,6257+56])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[187,6257+60]..[187,6257+74])
                                            Pexp_apply
                                            expression (lib/types.ml[187,6257+60]..[187,6257+63])
                                              Pexp_ident "mem" (lib/types.ml[187,6257+60]..[187,6257+63])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[187,6257+64]..[187,6257+71])
                                                  Pexp_construct "May_neg" (lib/types.ml[187,6257+64]..[187,6257+71])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[187,6257+72]..[187,6257+74])
                                                  Pexp_ident "v2" (lib/types.ml[187,6257+72]..[187,6257+74])
                                            ]
                                      ]
                                ]
                            <def>
                              pattern (lib/types.ml[188,6332+8]..[188,6332+10])
                                Ppat_var "mn" (lib/types.ml[188,6332+8]..[188,6332+10])
                              expression (lib/types.ml[189,6345+6]..[189,6345+74])
                                Pexp_apply
                                expression (lib/types.ml[189,6345+39]..[189,6345+41])
                                  Pexp_ident "||" (lib/types.ml[189,6345+39]..[189,6345+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[189,6345+6]..[189,6345+38])
                                      Pexp_apply
                                      expression (lib/types.ml[189,6345+21]..[189,6345+23])
                                        Pexp_ident "&&" (lib/types.ml[189,6345+21]..[189,6345+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[189,6345+6]..[189,6345+20])
                                            Pexp_apply
                                            expression (lib/types.ml[189,6345+6]..[189,6345+9])
                                              Pexp_ident "mem" (lib/types.ml[189,6345+6]..[189,6345+9])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[189,6345+10]..[189,6345+17])
                                                  Pexp_construct "May_pos" (lib/types.ml[189,6345+10]..[189,6345+17])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[189,6345+18]..[189,6345+20])
                                                  Pexp_ident "v1" (lib/types.ml[189,6345+18]..[189,6345+20])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[189,6345+24]..[189,6345+38])
                                            Pexp_apply
                                            expression (lib/types.ml[189,6345+24]..[189,6345+27])
                                              Pexp_ident "mem" (lib/types.ml[189,6345+24]..[189,6345+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[189,6345+28]..[189,6345+35])
                                                  Pexp_construct "May_neg" (lib/types.ml[189,6345+28]..[189,6345+35])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[189,6345+36]..[189,6345+38])
                                                  Pexp_ident "v2" (lib/types.ml[189,6345+36]..[189,6345+38])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[189,6345+42]..[189,6345+74])
                                      Pexp_apply
                                      expression (lib/types.ml[189,6345+57]..[189,6345+59])
                                        Pexp_ident "&&" (lib/types.ml[189,6345+57]..[189,6345+59])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[189,6345+42]..[189,6345+56])
                                            Pexp_apply
                                            expression (lib/types.ml[189,6345+42]..[189,6345+45])
                                              Pexp_ident "mem" (lib/types.ml[189,6345+42]..[189,6345+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[189,6345+46]..[189,6345+53])
                                                  Pexp_construct "May_neg" (lib/types.ml[189,6345+46]..[189,6345+53])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[189,6345+54]..[189,6345+56])
                                                  Pexp_ident "v1" (lib/types.ml[189,6345+54]..[189,6345+56])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[189,6345+60]..[189,6345+74])
                                            Pexp_apply
                                            expression (lib/types.ml[189,6345+60]..[189,6345+63])
                                              Pexp_ident "mem" (lib/types.ml[189,6345+60]..[189,6345+63])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[189,6345+64]..[189,6345+71])
                                                  Pexp_construct "May_pos" (lib/types.ml[189,6345+64]..[189,6345+71])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[189,6345+72]..[189,6345+74])
                                                  Pexp_ident "v2" (lib/types.ml[189,6345+72]..[189,6345+74])
                                            ]
                                      ]
                                ]
                            <def>
                              pattern (lib/types.ml[190,6420+8]..[190,6420+10])
                                Ppat_var "mw" (lib/types.ml[190,6420+8]..[190,6420+10])
                              expression (lib/types.ml[190,6420+13]..[190,6420+75])
                                Pexp_apply
                                expression (lib/types.ml[190,6420+43]..[190,6420+45])
                                  Pexp_ident "||" (lib/types.ml[190,6420+43]..[190,6420+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[190,6420+13]..[190,6420+42])
                                      Pexp_apply
                                      expression (lib/types.ml[190,6420+29]..[190,6420+31])
                                        Pexp_ident "&&" (lib/types.ml[190,6420+29]..[190,6420+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[190,6420+13]..[190,6420+28])
                                            Pexp_apply
                                            expression (lib/types.ml[190,6420+13]..[190,6420+16])
                                              Pexp_ident "mem" (lib/types.ml[190,6420+13]..[190,6420+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[190,6420+17]..[190,6420+25])
                                                  Pexp_construct "May_weak" (lib/types.ml[190,6420+17]..[190,6420+25])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[190,6420+26]..[190,6420+28])
                                                  Pexp_ident "v1" (lib/types.ml[190,6420+26]..[190,6420+28])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[190,6420+32]..[190,6420+42])
                                            Pexp_apply
                                            expression (lib/types.ml[190,6420+35]..[190,6420+37])
                                              Pexp_ident "<>" (lib/types.ml[190,6420+35]..[190,6420+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[190,6420+32]..[190,6420+34])
                                                  Pexp_ident "v2" (lib/types.ml[190,6420+32]..[190,6420+34])
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[190,6420+38]..[190,6420+42])
                                                  Pexp_ident "null" (lib/types.ml[190,6420+38]..[190,6420+42])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[190,6420+46]..[190,6420+75])
                                      Pexp_apply
                                      expression (lib/types.ml[190,6420+57]..[190,6420+59])
                                        Pexp_ident "&&" (lib/types.ml[190,6420+57]..[190,6420+59])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[190,6420+46]..[190,6420+56])
                                            Pexp_apply
                                            expression (lib/types.ml[190,6420+49]..[190,6420+51])
                                              Pexp_ident "<>" (lib/types.ml[190,6420+49]..[190,6420+51])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[190,6420+46]..[190,6420+48])
                                                  Pexp_ident "v1" (lib/types.ml[190,6420+46]..[190,6420+48])
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[190,6420+52]..[190,6420+56])
                                                  Pexp_ident "null" (lib/types.ml[190,6420+52]..[190,6420+56])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[190,6420+60]..[190,6420+75])
                                            Pexp_apply
                                            expression (lib/types.ml[190,6420+60]..[190,6420+63])
                                              Pexp_ident "mem" (lib/types.ml[190,6420+60]..[190,6420+63])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[190,6420+64]..[190,6420+72])
                                                  Pexp_construct "May_weak" (lib/types.ml[190,6420+64]..[190,6420+72])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[190,6420+73]..[190,6420+75])
                                                  Pexp_ident "v2" (lib/types.ml[190,6420+73]..[190,6420+75])
                                            ]
                                      ]
                                ]
                            <def>
                              pattern (lib/types.ml[191,6496+8]..[191,6496+11])
                                Ppat_var "inj" (lib/types.ml[191,6496+8]..[191,6496+11])
                              expression (lib/types.ml[191,6496+14]..[191,6496+38])
                                Pexp_apply
                                expression (lib/types.ml[191,6496+25]..[191,6496+27])
                                  Pexp_ident "&&" (lib/types.ml[191,6496+25]..[191,6496+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[191,6496+14]..[191,6496+24])
                                      Pexp_apply
                                      expression (lib/types.ml[191,6496+14]..[191,6496+17])
                                        Pexp_ident "mem" (lib/types.ml[191,6496+14]..[191,6496+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[191,6496+18]..[191,6496+21])
                                            Pexp_construct "Inj" (lib/types.ml[191,6496+18]..[191,6496+21])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[191,6496+22]..[191,6496+24])
                                            Pexp_ident "v1" (lib/types.ml[191,6496+22]..[191,6496+24])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[191,6496+28]..[191,6496+38])
                                      Pexp_apply
                                      expression (lib/types.ml[191,6496+28]..[191,6496+31])
                                        Pexp_ident "mem" (lib/types.ml[191,6496+28]..[191,6496+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[191,6496+32]..[191,6496+35])
                                            Pexp_construct "Inj" (lib/types.ml[191,6496+32]..[191,6496+35])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[191,6496+36]..[191,6496+38])
                                            Pexp_ident "v2" (lib/types.ml[191,6496+36]..[191,6496+38])
                                      ]
                                ]
                            <def>
                              pattern (lib/types.ml[192,6535+8]..[192,6535+11])
                                Ppat_var "pos" (lib/types.ml[192,6535+8]..[192,6535+11])
                              expression (lib/types.ml[192,6535+14]..[192,6535+66])
                                Pexp_apply
                                expression (lib/types.ml[192,6535+39]..[192,6535+41])
                                  Pexp_ident "||" (lib/types.ml[192,6535+39]..[192,6535+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[192,6535+14]..[192,6535+38])
                                      Pexp_apply
                                      expression (lib/types.ml[192,6535+25]..[192,6535+27])
                                        Pexp_ident "&&" (lib/types.ml[192,6535+25]..[192,6535+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[192,6535+14]..[192,6535+24])
                                            Pexp_apply
                                            expression (lib/types.ml[192,6535+14]..[192,6535+17])
                                              Pexp_ident "mem" (lib/types.ml[192,6535+14]..[192,6535+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[192,6535+18]..[192,6535+21])
                                                  Pexp_construct "Pos" (lib/types.ml[192,6535+18]..[192,6535+21])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[192,6535+22]..[192,6535+24])
                                                  Pexp_ident "v1" (lib/types.ml[192,6535+22]..[192,6535+24])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[192,6535+28]..[192,6535+38])
                                            Pexp_apply
                                            expression (lib/types.ml[192,6535+28]..[192,6535+31])
                                              Pexp_ident "mem" (lib/types.ml[192,6535+28]..[192,6535+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[192,6535+32]..[192,6535+35])
                                                  Pexp_construct "Pos" (lib/types.ml[192,6535+32]..[192,6535+35])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[192,6535+36]..[192,6535+38])
                                                  Pexp_ident "v2" (lib/types.ml[192,6535+36]..[192,6535+38])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[192,6535+42]..[192,6535+66])
                                      Pexp_apply
                                      expression (lib/types.ml[192,6535+53]..[192,6535+55])
                                        Pexp_ident "&&" (lib/types.ml[192,6535+53]..[192,6535+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[192,6535+42]..[192,6535+52])
                                            Pexp_apply
                                            expression (lib/types.ml[192,6535+42]..[192,6535+45])
                                              Pexp_ident "mem" (lib/types.ml[192,6535+42]..[192,6535+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[192,6535+46]..[192,6535+49])
                                                  Pexp_construct "Neg" (lib/types.ml[192,6535+46]..[192,6535+49])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[192,6535+50]..[192,6535+52])
                                                  Pexp_ident "v1" (lib/types.ml[192,6535+50]..[192,6535+52])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[192,6535+56]..[192,6535+66])
                                            Pexp_apply
                                            expression (lib/types.ml[192,6535+56]..[192,6535+59])
                                              Pexp_ident "mem" (lib/types.ml[192,6535+56]..[192,6535+59])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[192,6535+60]..[192,6535+63])
                                                  Pexp_construct "Neg" (lib/types.ml[192,6535+60]..[192,6535+63])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[192,6535+64]..[192,6535+66])
                                                  Pexp_ident "v2" (lib/types.ml[192,6535+64]..[192,6535+66])
                                            ]
                                      ]
                                ]
                            <def>
                              pattern (lib/types.ml[193,6602+8]..[193,6602+11])
                                Ppat_var "neg" (lib/types.ml[193,6602+8]..[193,6602+11])
                              expression (lib/types.ml[193,6602+14]..[193,6602+66])
                                Pexp_apply
                                expression (lib/types.ml[193,6602+39]..[193,6602+41])
                                  Pexp_ident "||" (lib/types.ml[193,6602+39]..[193,6602+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[193,6602+14]..[193,6602+38])
                                      Pexp_apply
                                      expression (lib/types.ml[193,6602+25]..[193,6602+27])
                                        Pexp_ident "&&" (lib/types.ml[193,6602+25]..[193,6602+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[193,6602+14]..[193,6602+24])
                                            Pexp_apply
                                            expression (lib/types.ml[193,6602+14]..[193,6602+17])
                                              Pexp_ident "mem" (lib/types.ml[193,6602+14]..[193,6602+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[193,6602+18]..[193,6602+21])
                                                  Pexp_construct "Pos" (lib/types.ml[193,6602+18]..[193,6602+21])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[193,6602+22]..[193,6602+24])
                                                  Pexp_ident "v1" (lib/types.ml[193,6602+22]..[193,6602+24])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[193,6602+28]..[193,6602+38])
                                            Pexp_apply
                                            expression (lib/types.ml[193,6602+28]..[193,6602+31])
                                              Pexp_ident "mem" (lib/types.ml[193,6602+28]..[193,6602+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[193,6602+32]..[193,6602+35])
                                                  Pexp_construct "Neg" (lib/types.ml[193,6602+32]..[193,6602+35])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[193,6602+36]..[193,6602+38])
                                                  Pexp_ident "v2" (lib/types.ml[193,6602+36]..[193,6602+38])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[193,6602+42]..[193,6602+66])
                                      Pexp_apply
                                      expression (lib/types.ml[193,6602+53]..[193,6602+55])
                                        Pexp_ident "&&" (lib/types.ml[193,6602+53]..[193,6602+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[193,6602+42]..[193,6602+52])
                                            Pexp_apply
                                            expression (lib/types.ml[193,6602+42]..[193,6602+45])
                                              Pexp_ident "mem" (lib/types.ml[193,6602+42]..[193,6602+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[193,6602+46]..[193,6602+49])
                                                  Pexp_construct "Neg" (lib/types.ml[193,6602+46]..[193,6602+49])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[193,6602+50]..[193,6602+52])
                                                  Pexp_ident "v1" (lib/types.ml[193,6602+50]..[193,6602+52])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[193,6602+56]..[193,6602+66])
                                            Pexp_apply
                                            expression (lib/types.ml[193,6602+56]..[193,6602+59])
                                              Pexp_ident "mem" (lib/types.ml[193,6602+56]..[193,6602+59])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[193,6602+60]..[193,6602+63])
                                                  Pexp_construct "Pos" (lib/types.ml[193,6602+60]..[193,6602+63])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[193,6602+64]..[193,6602+66])
                                                  Pexp_ident "v2" (lib/types.ml[193,6602+64]..[193,6602+66])
                                            ]
                                      ]
                                ]
                          ]
                          expression (lib/types.ml[194,6672+4]..[195,6726+76])
                            Pexp_apply
                            expression (lib/types.ml[194,6672+4]..[194,6672+18])
                              Pexp_ident "List.fold_left" (lib/types.ml[194,6672+4]..[194,6672+18])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[194,6672+19]..[194,6672+48])
                                  Pexp_function
                                  [
                                    Pparam_val (lib/types.ml[194,6672+24]..[194,6672+25])
                                      Nolabel
                                      None
                                      pattern (lib/types.ml[194,6672+24]..[194,6672+25])
                                        Ppat_var "v" (lib/types.ml[194,6672+24]..[194,6672+25])
                                    Pparam_val (lib/types.ml[194,6672+26]..[194,6672+31])
                                      Nolabel
                                      None
                                      pattern (lib/types.ml[194,6672+26]..[194,6672+31])
                                        Ppat_tuple
                                        [
                                          pattern (lib/types.ml[194,6672+27]..[194,6672+28])
                                            Ppat_var "b" (lib/types.ml[194,6672+27]..[194,6672+28])
                                          pattern (lib/types.ml[194,6672+29]..[194,6672+30])
                                            Ppat_var "f" (lib/types.ml[194,6672+29]..[194,6672+30])
                                        ]
                                  ]
                                  None
                                  Pfunction_body
                                    expression (lib/types.ml[194,6672+35]..[194,6672+47])
                                      Pexp_apply
                                      expression (lib/types.ml[194,6672+35]..[194,6672+41])
                                        Pexp_ident "set_if" (lib/types.ml[194,6672+35]..[194,6672+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[194,6672+42]..[194,6672+43])
                                            Pexp_ident "b" (lib/types.ml[194,6672+42]..[194,6672+43])
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[194,6672+44]..[194,6672+45])
                                            Pexp_ident "f" (lib/types.ml[194,6672+44]..[194,6672+45])
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[194,6672+46]..[194,6672+47])
                                            Pexp_ident "v" (lib/types.ml[194,6672+46]..[194,6672+47])
                                      ]
                              <arg>
                              Nolabel
                                expression (lib/types.ml[194,6672+49]..[194,6672+53])
                                  Pexp_ident "null" (lib/types.ml[194,6672+49]..[194,6672+53])
                              <arg>
                              Nolabel
                                expression (lib/types.ml[195,6726+6]..[195,6726+76])
                                  Pexp_construct "::" (lib/types.ml[195,6726+7]..[195,6726+76]) ghost
                                  Some
                                    expression (lib/types.ml[195,6726+7]..[195,6726+76]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lib/types.ml[195,6726+7]..[195,6726+18])
                                          Pexp_tuple
                                          [
                                            expression (lib/types.ml[195,6726+7]..[195,6726+9])
                                              Pexp_ident "mp" (lib/types.ml[195,6726+7]..[195,6726+9])
                                            expression (lib/types.ml[195,6726+11]..[195,6726+18])
                                              Pexp_construct "May_pos" (lib/types.ml[195,6726+11]..[195,6726+18])
                                              None
                                          ]
                                        expression (lib/types.ml[195,6726+20]..[195,6726+76]) ghost
                                          Pexp_construct "::" (lib/types.ml[195,6726+20]..[195,6726+76]) ghost
                                          Some
                                            expression (lib/types.ml[195,6726+20]..[195,6726+76]) ghost
                                              Pexp_tuple
                                              [
                                                expression (lib/types.ml[195,6726+20]..[195,6726+31])
                                                  Pexp_tuple
                                                  [
                                                    expression (lib/types.ml[195,6726+20]..[195,6726+22])
                                                      Pexp_ident "mn" (lib/types.ml[195,6726+20]..[195,6726+22])
                                                    expression (lib/types.ml[195,6726+24]..[195,6726+31])
                                                      Pexp_construct "May_neg" (lib/types.ml[195,6726+24]..[195,6726+31])
                                                      None
                                                  ]
                                                expression (lib/types.ml[195,6726+33]..[195,6726+76]) ghost
                                                  Pexp_construct "::" (lib/types.ml[195,6726+33]..[195,6726+76]) ghost
                                                  Some
                                                    expression (lib/types.ml[195,6726+33]..[195,6726+76]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (lib/types.ml[195,6726+33]..[195,6726+45])
                                                          Pexp_tuple
                                                          [
                                                            expression (lib/types.ml[195,6726+33]..[195,6726+35])
                                                              Pexp_ident "mw" (lib/types.ml[195,6726+33]..[195,6726+35])
                                                            expression (lib/types.ml[195,6726+37]..[195,6726+45])
                                                              Pexp_construct "May_weak" (lib/types.ml[195,6726+37]..[195,6726+45])
                                                              None
                                                          ]
                                                        expression (lib/types.ml[195,6726+47]..[195,6726+76]) ghost
                                                          Pexp_construct "::" (lib/types.ml[195,6726+47]..[195,6726+76]) ghost
                                                          Some
                                                            expression (lib/types.ml[195,6726+47]..[195,6726+76]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (lib/types.ml[195,6726+47]..[195,6726+55])
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (lib/types.ml[195,6726+47]..[195,6726+50])
                                                                      Pexp_ident "inj" (lib/types.ml[195,6726+47]..[195,6726+50])
                                                                    expression (lib/types.ml[195,6726+52]..[195,6726+55])
                                                                      Pexp_construct "Inj" (lib/types.ml[195,6726+52]..[195,6726+55])
                                                                      None
                                                                  ]
                                                                expression (lib/types.ml[195,6726+57]..[195,6726+76]) ghost
                                                                  Pexp_construct "::" (lib/types.ml[195,6726+57]..[195,6726+76]) ghost
                                                                  Some
                                                                    expression (lib/types.ml[195,6726+57]..[195,6726+76]) ghost
                                                                      Pexp_tuple
                                                                      [
expression (lib/types.ml[195,6726+57]..[195,6726+65])
  Pexp_tuple
  [
    expression (lib/types.ml[195,6726+57]..[195,6726+60])
      Pexp_ident "pos" (lib/types.ml[195,6726+57]..[195,6726+60])
    expression (lib/types.ml[195,6726+62]..[195,6726+65])
      Pexp_construct "Pos" (lib/types.ml[195,6726+62]..[195,6726+65])
      None
  ]
expression (lib/types.ml[195,6726+67]..[195,6726+76]) ghost
  Pexp_construct "::" (lib/types.ml[195,6726+67]..[195,6726+76]) ghost
  Some
    expression (lib/types.ml[195,6726+67]..[195,6726+76]) ghost
      Pexp_tuple
      [
        expression (lib/types.ml[195,6726+67]..[195,6726+75])
          Pexp_tuple
          [
            expression (lib/types.ml[195,6726+67]..[195,6726+70])
              Pexp_ident "neg" (lib/types.ml[195,6726+67]..[195,6726+70])
            expression (lib/types.ml[195,6726+72]..[195,6726+75])
              Pexp_construct "Neg" (lib/types.ml[195,6726+72]..[195,6726+75])
              None
          ]
        expression (lib/types.ml[195,6726+75]..[195,6726+76]) ghost
          Pexp_construct "[]" (lib/types.ml[195,6726+75]..[195,6726+76]) ghost
          None
      ]
                                                                      ]
                                                              ]
                                                      ]
                                              ]
                                      ]
                            ]
            ]
          structure_item (lib/types.ml[196,6803+2]..[197,6824+64])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[196,6803+6]..[196,6803+16])
                  Ppat_var "strengthen" (lib/types.ml[196,6803+6]..[196,6803+16])
                expression (lib/types.ml[196,6803+17]..[197,6824+64]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[196,6803+17]..[196,6803+18])
                      Nolabel
                      None
                      pattern (lib/types.ml[196,6803+17]..[196,6803+18])
                        Ppat_var "v" (lib/types.ml[196,6803+17]..[196,6803+18])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[197,6824+4]..[197,6824+64])
                      Pexp_ifthenelse
                      expression (lib/types.ml[197,6824+7]..[197,6824+20])
                        Pexp_apply
                        expression (lib/types.ml[197,6824+7]..[197,6824+10])
                          Pexp_ident "mem" (lib/types.ml[197,6824+7]..[197,6824+10])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[197,6824+11]..[197,6824+18])
                              Pexp_construct "May_neg" (lib/types.ml[197,6824+11]..[197,6824+18])
                              None
                          <arg>
                          Nolabel
                            expression (lib/types.ml[197,6824+19]..[197,6824+20])
                              Pexp_ident "v" (lib/types.ml[197,6824+19]..[197,6824+20])
                        ]
                      expression (lib/types.ml[197,6824+26]..[197,6824+27])
                        Pexp_ident "v" (lib/types.ml[197,6824+26]..[197,6824+27])
                      Some
                        expression (lib/types.ml[197,6824+33]..[197,6824+64])
                          Pexp_apply
                          expression (lib/types.ml[197,6824+35]..[197,6824+39])
                            Pexp_ident "land" (lib/types.ml[197,6824+35]..[197,6824+39])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[197,6824+33]..[197,6824+34])
                                Pexp_ident "v" (lib/types.ml[197,6824+33]..[197,6824+34])
                            <arg>
                            Nolabel
                              expression (lib/types.ml[197,6824+40]..[197,6824+64])
                                Pexp_apply
                                expression (lib/types.ml[197,6824+46]..[197,6824+47])
                                  Pexp_ident "-" (lib/types.ml[197,6824+46]..[197,6824+47])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[197,6824+41]..[197,6824+45])
                                      Pexp_ident "full" (lib/types.ml[197,6824+41]..[197,6824+45])
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[197,6824+48]..[197,6824+63])
                                      Pexp_apply
                                      expression (lib/types.ml[197,6824+48]..[197,6824+54])
                                        Pexp_ident "single" (lib/types.ml[197,6824+48]..[197,6824+54])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lib/types.ml[197,6824+55]..[197,6824+63])
                                            Pexp_construct "May_weak" (lib/types.ml[197,6824+55]..[197,6824+63])
                                            None
                                      ]
                                ]
                          ]
            ]
          structure_item (lib/types.ml[198,6889+2]..[198,6889+50])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[198,6889+6]..[198,6889+15])
                  Ppat_var "get_upper" (lib/types.ml[198,6889+6]..[198,6889+15])
                expression (lib/types.ml[198,6889+16]..[198,6889+50]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[198,6889+16]..[198,6889+17])
                      Nolabel
                      None
                      pattern (lib/types.ml[198,6889+16]..[198,6889+17])
                        Ppat_var "v" (lib/types.ml[198,6889+16]..[198,6889+17])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[198,6889+20]..[198,6889+50])
                      Pexp_tuple
                      [
                        expression (lib/types.ml[198,6889+21]..[198,6889+34])
                          Pexp_apply
                          expression (lib/types.ml[198,6889+21]..[198,6889+24])
                            Pexp_ident "mem" (lib/types.ml[198,6889+21]..[198,6889+24])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[198,6889+25]..[198,6889+32])
                                Pexp_construct "May_pos" (lib/types.ml[198,6889+25]..[198,6889+32])
                                None
                            <arg>
                            Nolabel
                              expression (lib/types.ml[198,6889+33]..[198,6889+34])
                                Pexp_ident "v" (lib/types.ml[198,6889+33]..[198,6889+34])
                          ]
                        expression (lib/types.ml[198,6889+36]..[198,6889+49])
                          Pexp_apply
                          expression (lib/types.ml[198,6889+36]..[198,6889+39])
                            Pexp_ident "mem" (lib/types.ml[198,6889+36]..[198,6889+39])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[198,6889+40]..[198,6889+47])
                                Pexp_construct "May_neg" (lib/types.ml[198,6889+40]..[198,6889+47])
                                None
                            <arg>
                            Nolabel
                              expression (lib/types.ml[198,6889+48]..[198,6889+49])
                                Pexp_ident "v" (lib/types.ml[198,6889+48]..[198,6889+49])
                          ]
                      ]
            ]
          structure_item (lib/types.ml[199,6940+2]..[199,6940+53])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[199,6940+6]..[199,6940+15])
                  Ppat_var "get_lower" (lib/types.ml[199,6940+6]..[199,6940+15])
                expression (lib/types.ml[199,6940+16]..[199,6940+53]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[199,6940+16]..[199,6940+17])
                      Nolabel
                      None
                      pattern (lib/types.ml[199,6940+16]..[199,6940+17])
                        Ppat_var "v" (lib/types.ml[199,6940+16]..[199,6940+17])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[199,6940+20]..[199,6940+53])
                      Pexp_tuple
                      [
                        expression (lib/types.ml[199,6940+21]..[199,6940+30])
                          Pexp_apply
                          expression (lib/types.ml[199,6940+21]..[199,6940+24])
                            Pexp_ident "mem" (lib/types.ml[199,6940+21]..[199,6940+24])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[199,6940+25]..[199,6940+28])
                                Pexp_construct "Pos" (lib/types.ml[199,6940+25]..[199,6940+28])
                                None
                            <arg>
                            Nolabel
                              expression (lib/types.ml[199,6940+29]..[199,6940+30])
                                Pexp_ident "v" (lib/types.ml[199,6940+29]..[199,6940+30])
                          ]
                        expression (lib/types.ml[199,6940+32]..[199,6940+41])
                          Pexp_apply
                          expression (lib/types.ml[199,6940+32]..[199,6940+35])
                            Pexp_ident "mem" (lib/types.ml[199,6940+32]..[199,6940+35])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[199,6940+36]..[199,6940+39])
                                Pexp_construct "Neg" (lib/types.ml[199,6940+36]..[199,6940+39])
                                None
                            <arg>
                            Nolabel
                              expression (lib/types.ml[199,6940+40]..[199,6940+41])
                                Pexp_ident "v" (lib/types.ml[199,6940+40]..[199,6940+41])
                          ]
                        expression (lib/types.ml[199,6940+43]..[199,6940+52])
                          Pexp_apply
                          expression (lib/types.ml[199,6940+43]..[199,6940+46])
                            Pexp_ident "mem" (lib/types.ml[199,6940+43]..[199,6940+46])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[199,6940+47]..[199,6940+50])
                                Pexp_construct "Inj" (lib/types.ml[199,6940+47]..[199,6940+50])
                                None
                            <arg>
                            Nolabel
                              expression (lib/types.ml[199,6940+51]..[199,6940+52])
                                Pexp_ident "v" (lib/types.ml[199,6940+51]..[199,6940+52])
                          ]
                      ]
            ]
          structure_item (lib/types.ml[200,6994+2]..[202,7100+31])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[200,6994+6]..[200,6994+23])
                  Ppat_var "unknown_signature" (lib/types.ml[200,6994+6]..[200,6994+23])
                expression (lib/types.ml[200,6994+24]..[202,7100+31]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[200,6994+24]..[200,6994+34])
                      Labelled "injective"
                      None
                      pattern (lib/types.ml[200,6994+25]..[200,6994+34])
                        Ppat_var "injective" (lib/types.ml[200,6994+25]..[200,6994+34])
                    Pparam_val (lib/types.ml[200,6994+35]..[200,6994+41])
                      Labelled "arity"
                      None
                      pattern (lib/types.ml[200,6994+36]..[200,6994+41])
                        Ppat_var "arity" (lib/types.ml[200,6994+36]..[200,6994+41])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[201,7038+4]..[202,7100+31])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/types.ml[201,7038+8]..[201,7038+9])
                            Ppat_var "v" (lib/types.ml[201,7038+8]..[201,7038+9])
                          expression (lib/types.ml[201,7038+12]..[201,7038+58])
                            Pexp_ifthenelse
                            expression (lib/types.ml[201,7038+15]..[201,7038+24])
                              Pexp_ident "injective" (lib/types.ml[201,7038+15]..[201,7038+24])
                            expression (lib/types.ml[201,7038+30]..[201,7038+45])
                              Pexp_apply
                              expression (lib/types.ml[201,7038+30]..[201,7038+33])
                                Pexp_ident "set" (lib/types.ml[201,7038+30]..[201,7038+33])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[201,7038+34]..[201,7038+37])
                                    Pexp_construct "Inj" (lib/types.ml[201,7038+34]..[201,7038+37])
                                    None
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[201,7038+38]..[201,7038+45])
                                    Pexp_ident "unknown" (lib/types.ml[201,7038+38]..[201,7038+45])
                              ]
                            Some
                              expression (lib/types.ml[201,7038+51]..[201,7038+58])
                                Pexp_ident "unknown" (lib/types.ml[201,7038+51]..[201,7038+58])
                      ]
                      expression (lib/types.ml[202,7100+4]..[202,7100+31])
                        Pexp_apply
                        expression (lib/types.ml[202,7100+4]..[202,7100+23])
                          Pexp_ident "Misc.replicate_list" (lib/types.ml[202,7100+4]..[202,7100+23])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[202,7100+24]..[202,7100+25])
                              Pexp_ident "v" (lib/types.ml[202,7100+24]..[202,7100+25])
                          <arg>
                          Nolabel
                            expression (lib/types.ml[202,7100+26]..[202,7100+31])
                              Pexp_ident "arity" (lib/types.ml[202,7100+26]..[202,7100+31])
                        ]
            ]
        ]
  structure_item (lib/types.ml[205,7137+0]..[229,7911+3])
    Pstr_module
    "Separability" (lib/types.ml[205,7137+7]..[205,7137+19])
      module_expr (lib/types.ml[205,7137+22]..[229,7911+3])
        Pmod_structure
        [
          structure_item (lib/types.ml[206,7166+2]..[206,7166+30])
            Pstr_type Rec
            [
              type_declaration "t" (lib/types.ml[206,7166+7]..[206,7166+8]) (lib/types.ml[206,7166+2]..[206,7166+30])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (lib/types.ml[206,7166+11]..[206,7166+14])
                        "Ind" (lib/types.ml[206,7166+11]..[206,7166+14])
                        []
                        None
                      (lib/types.ml[206,7166+15]..[206,7166+20])
                        "Sep" (lib/types.ml[206,7166+17]..[206,7166+20])
                        []
                        None
                      (lib/types.ml[206,7166+21]..[206,7166+30])
                        "Deepsep" (lib/types.ml[206,7166+23]..[206,7166+30])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lib/types.ml[207,7197+2]..[207,7197+25])
            Pstr_type Rec
            [
              type_declaration "signature" (lib/types.ml[207,7197+7]..[207,7197+16]) (lib/types.ml[207,7197+2]..[207,7197+25])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lib/types.ml[207,7197+19]..[207,7197+25])
                      Ptyp_constr "list" (lib/types.ml[207,7197+21]..[207,7197+25])
                      [
                        core_type (lib/types.ml[207,7197+19]..[207,7197+20])
                          Ptyp_constr "t" (lib/types.ml[207,7197+19]..[207,7197+20])
                          []
                      ]
            ]
          structure_item (lib/types.ml[208,7223+2]..[208,7223+32])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[208,7223+6]..[208,7223+8])
                  Ppat_var "eq" (lib/types.ml[208,7223+6]..[208,7223+8])
                expression (lib/types.ml[208,7223+9]..[208,7223+32]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[208,7223+9]..[208,7223+17])
                      Nolabel
                      None
                      pattern (lib/types.ml[208,7223+9]..[208,7223+17])
                        Ppat_constraint
                        pattern (lib/types.ml[208,7223+10]..[208,7223+12])
                          Ppat_var "m1" (lib/types.ml[208,7223+10]..[208,7223+12])
                        core_type (lib/types.ml[208,7223+15]..[208,7223+16])
                          Ptyp_constr "t" (lib/types.ml[208,7223+15]..[208,7223+16])
                          []
                    Pparam_val (lib/types.ml[208,7223+18]..[208,7223+20])
                      Nolabel
                      None
                      pattern (lib/types.ml[208,7223+18]..[208,7223+20])
                        Ppat_var "m2" (lib/types.ml[208,7223+18]..[208,7223+20])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[208,7223+23]..[208,7223+32])
                      Pexp_apply
                      expression (lib/types.ml[208,7223+27]..[208,7223+28])
                        Pexp_ident "=" (lib/types.ml[208,7223+27]..[208,7223+28])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[208,7223+24]..[208,7223+26])
                            Pexp_ident "m1" (lib/types.ml[208,7223+24]..[208,7223+26])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[208,7223+29]..[208,7223+31])
                            Pexp_ident "m2" (lib/types.ml[208,7223+29]..[208,7223+31])
                      ]
            ]
          structure_item (lib/types.ml[209,7256+2]..[212,7308+18])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[209,7256+6]..[209,7256+10])
                  Ppat_var "rank" (lib/types.ml[209,7256+6]..[209,7256+10])
                expression (lib/types.ml[209,7256+13]..[212,7308+18])
                  Pexp_function
                  []
                  None
                  Pfunction_cases (lib/types.ml[209,7256+13]..[212,7308+18])
                    [
                      <case>
                        pattern (lib/types.ml[210,7278+6]..[210,7278+9])
                          Ppat_construct "Ind" (lib/types.ml[210,7278+6]..[210,7278+9])
                          None
                        expression (lib/types.ml[210,7278+13]..[210,7278+14])
                          Pexp_constant PConst_int (0,None)
                      <case>
                        pattern (lib/types.ml[211,7293+6]..[211,7293+9])
                          Ppat_construct "Sep" (lib/types.ml[211,7293+6]..[211,7293+9])
                          None
                        expression (lib/types.ml[211,7293+13]..[211,7293+14])
                          Pexp_constant PConst_int (1,None)
                      <case>
                        pattern (lib/types.ml[212,7308+6]..[212,7308+13])
                          Ppat_construct "Deepsep" (lib/types.ml[212,7308+6]..[212,7308+13])
                          None
                        expression (lib/types.ml[212,7308+17]..[212,7308+18])
                          Pexp_constant PConst_int (2,None)
                    ]
            ]
          structure_item (lib/types.ml[213,7327+2]..[213,7327+49])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[213,7327+6]..[213,7327+13])
                  Ppat_var "compare" (lib/types.ml[213,7327+6]..[213,7327+13])
                expression (lib/types.ml[213,7327+14]..[213,7327+49]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[213,7327+14]..[213,7327+16])
                      Nolabel
                      None
                      pattern (lib/types.ml[213,7327+14]..[213,7327+16])
                        Ppat_var "m1" (lib/types.ml[213,7327+14]..[213,7327+16])
                    Pparam_val (lib/types.ml[213,7327+17]..[213,7327+19])
                      Nolabel
                      None
                      pattern (lib/types.ml[213,7327+17]..[213,7327+19])
                        Ppat_var "m2" (lib/types.ml[213,7327+17]..[213,7327+19])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[213,7327+22]..[213,7327+49])
                      Pexp_apply
                      expression (lib/types.ml[213,7327+22]..[213,7327+29])
                        Pexp_ident "compare" (lib/types.ml[213,7327+22]..[213,7327+29])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[213,7327+30]..[213,7327+39])
                            Pexp_apply
                            expression (lib/types.ml[213,7327+31]..[213,7327+35])
                              Pexp_ident "rank" (lib/types.ml[213,7327+31]..[213,7327+35])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[213,7327+36]..[213,7327+38])
                                  Pexp_ident "m1" (lib/types.ml[213,7327+36]..[213,7327+38])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/types.ml[213,7327+40]..[213,7327+49])
                            Pexp_apply
                            expression (lib/types.ml[213,7327+41]..[213,7327+45])
                              Pexp_ident "rank" (lib/types.ml[213,7327+41]..[213,7327+45])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[213,7327+46]..[213,7327+48])
                                  Pexp_ident "m2" (lib/types.ml[213,7327+46]..[213,7327+48])
                            ]
                      ]
            ]
          structure_item (lib/types.ml[214,7377+2]..[214,7377+55])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[214,7377+6]..[214,7377+9])
                  Ppat_var "max" (lib/types.ml[214,7377+6]..[214,7377+9])
                expression (lib/types.ml[214,7377+10]..[214,7377+55]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[214,7377+10]..[214,7377+12])
                      Nolabel
                      None
                      pattern (lib/types.ml[214,7377+10]..[214,7377+12])
                        Ppat_var "m1" (lib/types.ml[214,7377+10]..[214,7377+12])
                    Pparam_val (lib/types.ml[214,7377+13]..[214,7377+15])
                      Nolabel
                      None
                      pattern (lib/types.ml[214,7377+13]..[214,7377+15])
                        Ppat_var "m2" (lib/types.ml[214,7377+13]..[214,7377+15])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[214,7377+18]..[214,7377+55])
                      Pexp_ifthenelse
                      expression (lib/types.ml[214,7377+21]..[214,7377+39])
                        Pexp_apply
                        expression (lib/types.ml[214,7377+29]..[214,7377+31])
                          Pexp_ident ">=" (lib/types.ml[214,7377+29]..[214,7377+31])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[214,7377+21]..[214,7377+28])
                              Pexp_apply
                              expression (lib/types.ml[214,7377+21]..[214,7377+25])
                                Pexp_ident "rank" (lib/types.ml[214,7377+21]..[214,7377+25])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[214,7377+26]..[214,7377+28])
                                    Pexp_ident "m1" (lib/types.ml[214,7377+26]..[214,7377+28])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/types.ml[214,7377+32]..[214,7377+39])
                              Pexp_apply
                              expression (lib/types.ml[214,7377+32]..[214,7377+36])
                                Pexp_ident "rank" (lib/types.ml[214,7377+32]..[214,7377+36])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[214,7377+37]..[214,7377+39])
                                    Pexp_ident "m2" (lib/types.ml[214,7377+37]..[214,7377+39])
                              ]
                        ]
                      expression (lib/types.ml[214,7377+45]..[214,7377+47])
                        Pexp_ident "m1" (lib/types.ml[214,7377+45]..[214,7377+47])
                      Some
                        expression (lib/types.ml[214,7377+53]..[214,7377+55])
                          Pexp_ident "m2" (lib/types.ml[214,7377+53]..[214,7377+55])
            ]
          structure_item (lib/types.ml[216,7434+2]..[219,7537+45])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[216,7434+6]..[216,7434+11])
                  Ppat_var "print" (lib/types.ml[216,7434+6]..[216,7434+11])
                expression (lib/types.ml[216,7434+12]..[219,7537+45]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[216,7434+12]..[216,7434+15])
                      Nolabel
                      None
                      pattern (lib/types.ml[216,7434+12]..[216,7434+15])
                        Ppat_var "ppf" (lib/types.ml[216,7434+12]..[216,7434+15])
                  ]
                  None
                  Pfunction_cases (lib/types.ml[216,7434+18]..[219,7537+45])
                    [
                      <case>
                        pattern (lib/types.ml[217,7461+6]..[217,7461+9])
                          Ppat_construct "Ind" (lib/types.ml[217,7461+6]..[217,7461+9])
                          None
                        expression (lib/types.ml[217,7461+13]..[217,7461+37])
                          Pexp_apply
                          expression (lib/types.ml[217,7461+13]..[217,7461+27])
                            Pexp_ident "Format.fprintf" (lib/types.ml[217,7461+13]..[217,7461+27])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[217,7461+28]..[217,7461+31])
                                Pexp_ident "ppf" (lib/types.ml[217,7461+28]..[217,7461+31])
                            <arg>
                            Nolabel
                              expression (lib/types.ml[217,7461+32]..[217,7461+37])
                                Pexp_constant PConst_string("Ind",(lib/types.ml[217,7461+33]..[217,7461+36]),None)
                          ]
                      <case>
                        pattern (lib/types.ml[218,7499+6]..[218,7499+9])
                          Ppat_construct "Sep" (lib/types.ml[218,7499+6]..[218,7499+9])
                          None
                        expression (lib/types.ml[218,7499+13]..[218,7499+37])
                          Pexp_apply
                          expression (lib/types.ml[218,7499+13]..[218,7499+27])
                            Pexp_ident "Format.fprintf" (lib/types.ml[218,7499+13]..[218,7499+27])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[218,7499+28]..[218,7499+31])
                                Pexp_ident "ppf" (lib/types.ml[218,7499+28]..[218,7499+31])
                            <arg>
                            Nolabel
                              expression (lib/types.ml[218,7499+32]..[218,7499+37])
                                Pexp_constant PConst_string("Sep",(lib/types.ml[218,7499+33]..[218,7499+36]),None)
                          ]
                      <case>
                        pattern (lib/types.ml[219,7537+6]..[219,7537+13])
                          Ppat_construct "Deepsep" (lib/types.ml[219,7537+6]..[219,7537+13])
                          None
                        expression (lib/types.ml[219,7537+17]..[219,7537+45])
                          Pexp_apply
                          expression (lib/types.ml[219,7537+17]..[219,7537+31])
                            Pexp_ident "Format.fprintf" (lib/types.ml[219,7537+17]..[219,7537+31])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[219,7537+32]..[219,7537+35])
                                Pexp_ident "ppf" (lib/types.ml[219,7537+32]..[219,7537+35])
                            <arg>
                            Nolabel
                              expression (lib/types.ml[219,7537+36]..[219,7537+45])
                                Pexp_constant PConst_string("Deepsep",(lib/types.ml[219,7537+37]..[219,7537+44]),None)
                          ]
                    ]
            ]
          structure_item (lib/types.ml[221,7584+2]..[224,7704+48])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[221,7584+6]..[221,7584+21])
                  Ppat_var "print_signature" (lib/types.ml[221,7584+6]..[221,7584+21])
                expression (lib/types.ml[221,7584+22]..[224,7704+48]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[221,7584+22]..[221,7584+25])
                      Nolabel
                      None
                      pattern (lib/types.ml[221,7584+22]..[221,7584+25])
                        Ppat_var "ppf" (lib/types.ml[221,7584+22]..[221,7584+25])
                    Pparam_val (lib/types.ml[221,7584+26]..[221,7584+31])
                      Nolabel
                      None
                      pattern (lib/types.ml[221,7584+26]..[221,7584+31])
                        Ppat_var "modes" (lib/types.ml[221,7584+26]..[221,7584+31])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[222,7618+4]..[224,7704+48])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/types.ml[222,7618+8]..[222,7618+14])
                            Ppat_var "pp_sep" (lib/types.ml[222,7618+8]..[222,7618+14])
                          expression (lib/types.ml[222,7618+15]..[222,7618+48]) ghost
                            Pexp_function
                            [
                              Pparam_val (lib/types.ml[222,7618+15]..[222,7618+18])
                                Nolabel
                                None
                                pattern (lib/types.ml[222,7618+15]..[222,7618+18])
                                  Ppat_var "ppf" (lib/types.ml[222,7618+15]..[222,7618+18])
                              Pparam_val (lib/types.ml[222,7618+19]..[222,7618+21])
                                Nolabel
                                None
                                pattern (lib/types.ml[222,7618+19]..[222,7618+21])
                                  Ppat_construct "()" (lib/types.ml[222,7618+19]..[222,7618+21])
                                  None
                            ]
                            None
                            Pfunction_body
                              expression (lib/types.ml[222,7618+24]..[222,7618+48])
                                Pexp_apply
                                expression (lib/types.ml[222,7618+24]..[222,7618+38])
                                  Pexp_ident "Format.fprintf" (lib/types.ml[222,7618+24]..[222,7618+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[222,7618+39]..[222,7618+42])
                                      Pexp_ident "ppf" (lib/types.ml[222,7618+39]..[222,7618+42])
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[222,7618+43]..[222,7618+48])
                                      Pexp_constant PConst_string(",@,",(lib/types.ml[222,7618+44]..[222,7618+47]),None)
                                ]
                      ]
                      expression (lib/types.ml[223,7670+4]..[224,7704+48])
                        Pexp_apply
                        expression (lib/types.ml[223,7670+4]..[223,7670+18])
                          Pexp_ident "Format.fprintf" (lib/types.ml[223,7670+4]..[223,7670+18])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[223,7670+19]..[223,7670+22])
                              Pexp_ident "ppf" (lib/types.ml[223,7670+19]..[223,7670+22])
                          <arg>
                          Nolabel
                            expression (lib/types.ml[223,7670+23]..[223,7670+33])
                              Pexp_constant PConst_string("@[(%a)@]",(lib/types.ml[223,7670+24]..[223,7670+32]),None)
                          <arg>
                          Nolabel
                            expression (lib/types.ml[224,7704+6]..[224,7704+42])
                              Pexp_apply
                              expression (lib/types.ml[224,7704+7]..[224,7704+27])
                                Pexp_ident "Format.pp_print_list" (lib/types.ml[224,7704+7]..[224,7704+27])
                              [
                                <arg>
                                Labelled "pp_sep"
                                  expression (lib/types.ml[224,7704+29]..[224,7704+35])
                                    Pexp_ident "pp_sep" (lib/types.ml[224,7704+29]..[224,7704+35])
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[224,7704+36]..[224,7704+41])
                                    Pexp_ident "print" (lib/types.ml[224,7704+36]..[224,7704+41])
                              ]
                          <arg>
                          Nolabel
                            expression (lib/types.ml[224,7704+43]..[224,7704+48])
                              Pexp_ident "modes" (lib/types.ml[224,7704+43]..[224,7704+48])
                        ]
            ]
          structure_item (lib/types.ml[226,7754+2]..[228,7868+42])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[226,7754+6]..[226,7754+23])
                  Ppat_var "default_signature" (lib/types.ml[226,7754+6]..[226,7754+23])
                expression (lib/types.ml[226,7754+24]..[228,7868+42]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[226,7754+24]..[226,7754+30])
                      Labelled "arity"
                      None
                      pattern (lib/types.ml[226,7754+25]..[226,7754+30])
                        Ppat_var "arity" (lib/types.ml[226,7754+25]..[226,7754+30])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[227,7787+4]..[228,7868+42])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/types.ml[227,7787+8]..[227,7787+20])
                            Ppat_var "default_mode" (lib/types.ml[227,7787+8]..[227,7787+20])
                          expression (lib/types.ml[227,7787+74]..[227,7787+77])
                            Pexp_construct "Ind" (lib/types.ml[227,7787+74]..[227,7787+77])
                            None
                      ]
                      expression (lib/types.ml[228,7868+4]..[228,7868+42])
                        Pexp_apply
                        expression (lib/types.ml[228,7868+4]..[228,7868+23])
                          Pexp_ident "Misc.replicate_list" (lib/types.ml[228,7868+4]..[228,7868+23])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[228,7868+24]..[228,7868+36])
                              Pexp_ident "default_mode" (lib/types.ml[228,7868+24]..[228,7868+36])
                          <arg>
                          Nolabel
                            expression (lib/types.ml[228,7868+37]..[228,7868+42])
                              Pexp_ident "arity" (lib/types.ml[228,7868+37]..[228,7868+42])
                        ]
            ]
        ]
  structure_item (lib/types.ml[233,7940+0]..[296,9789+41])
    Pstr_type Rec
    [
      type_declaration "type_declaration" (lib/types.ml[233,7940+5]..[233,7940+21]) (lib/types.ml[233,7940+0]..[248,8416+2])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[234,7964+4]..[234,7964+32])
                Immutable
                "type_params" (lib/types.ml[234,7964+4]..[234,7964+15])                core_type (lib/types.ml[234,7964+17]..[234,7964+31])
                  Ptyp_constr "list" (lib/types.ml[234,7964+27]..[234,7964+31])
                  [
                    core_type (lib/types.ml[234,7964+17]..[234,7964+26])
                      Ptyp_constr "type_expr" (lib/types.ml[234,7964+17]..[234,7964+26])
                      []
                  ]
              (lib/types.ml[235,7997+4]..[235,7997+20])
                Immutable
                "type_arity" (lib/types.ml[235,7997+4]..[235,7997+14])                core_type (lib/types.ml[235,7997+16]..[235,7997+19])
                  Ptyp_constr "int" (lib/types.ml[235,7997+16]..[235,7997+19])
                  []
              (lib/types.ml[236,8018+4]..[236,8018+30])
                Immutable
                "type_kind" (lib/types.ml[236,8018+4]..[236,8018+13])                core_type (lib/types.ml[236,8018+15]..[236,8018+29])
                  Ptyp_constr "type_decl_kind" (lib/types.ml[236,8018+15]..[236,8018+29])
                  []
              (lib/types.ml[237,8049+4]..[237,8049+31])
                Immutable
                "type_private" (lib/types.ml[237,8049+4]..[237,8049+16])                core_type (lib/types.ml[237,8049+18]..[237,8049+30])
                  Ptyp_constr "private_flag" (lib/types.ml[237,8049+18]..[237,8049+30])
                  []
              (lib/types.ml[238,8081+4]..[238,8081+36])
                Immutable
                "type_manifest" (lib/types.ml[238,8081+4]..[238,8081+17])                core_type (lib/types.ml[238,8081+19]..[238,8081+35])
                  Ptyp_constr "option" (lib/types.ml[238,8081+29]..[238,8081+35])
                  [
                    core_type (lib/types.ml[238,8081+19]..[238,8081+28])
                      Ptyp_constr "type_expr" (lib/types.ml[238,8081+19]..[238,8081+28])
                      []
                  ]
              (lib/types.ml[239,8118+4]..[239,8118+35])
                Immutable
                "type_variance" (lib/types.ml[239,8118+4]..[239,8118+17])                core_type (lib/types.ml[239,8118+19]..[239,8118+34])
                  Ptyp_constr "list" (lib/types.ml[239,8118+30]..[239,8118+34])
                  [
                    core_type (lib/types.ml[239,8118+19]..[239,8118+29])
                      Ptyp_constr "Variance.t" (lib/types.ml[239,8118+19]..[239,8118+29])
                      []
                  ]
              (lib/types.ml[240,8154+4]..[240,8154+43])
                Immutable
                "type_separability" (lib/types.ml[240,8154+4]..[240,8154+21])                core_type (lib/types.ml[240,8154+23]..[240,8154+42])
                  Ptyp_constr "list" (lib/types.ml[240,8154+38]..[240,8154+42])
                  [
                    core_type (lib/types.ml[240,8154+23]..[240,8154+37])
                      Ptyp_constr "Separability.t" (lib/types.ml[240,8154+23]..[240,8154+37])
                      []
                  ]
              (lib/types.ml[241,8198+4]..[241,8198+26])
                Immutable
                "type_is_newtype" (lib/types.ml[241,8198+4]..[241,8198+19])                core_type (lib/types.ml[241,8198+21]..[241,8198+25])
                  Ptyp_constr "bool" (lib/types.ml[241,8198+21]..[241,8198+25])
                  []
              (lib/types.ml[242,8225+4]..[242,8225+30])
                Immutable
                "type_expansion_scope" (lib/types.ml[242,8225+4]..[242,8225+24])                core_type (lib/types.ml[242,8225+26]..[242,8225+29])
                  Ptyp_constr "int" (lib/types.ml[242,8225+26]..[242,8225+29])
                  []
              (lib/types.ml[243,8256+4]..[243,8256+25])
                Immutable
                "type_loc" (lib/types.ml[243,8256+4]..[243,8256+12])                core_type (lib/types.ml[243,8256+14]..[243,8256+24])
                  Ptyp_constr "Location.t" (lib/types.ml[243,8256+14]..[243,8256+24])
                  []
              (lib/types.ml[244,8282+4]..[244,8282+42])
                Immutable
                "type_attributes" (lib/types.ml[244,8282+4]..[244,8282+19])                core_type (lib/types.ml[244,8282+21]..[244,8282+41])
                  Ptyp_constr "Parsetree.attributes" (lib/types.ml[244,8282+21]..[244,8282+41])
                  []
              (lib/types.ml[245,8325+4]..[245,8325+37])
                Immutable
                "type_immediate" (lib/types.ml[245,8325+4]..[245,8325+18])                core_type (lib/types.ml[245,8325+20]..[245,8325+36])
                  Ptyp_constr "Type_immediacy.t" (lib/types.ml[245,8325+20]..[245,8325+36])
                  []
              (lib/types.ml[246,8363+4]..[246,8363+31])
                Immutable
                "type_unboxed_default" (lib/types.ml[246,8363+4]..[246,8363+24])                core_type (lib/types.ml[246,8363+26]..[246,8363+30])
                  Ptyp_constr "bool" (lib/types.ml[246,8363+26]..[246,8363+30])
                  []
              (lib/types.ml[247,8395+4]..[247,8395+20])
                Immutable
                "type_uid" (lib/types.ml[247,8395+4]..[247,8395+12])                core_type (lib/types.ml[247,8395+14]..[247,8395+19])
                  Ptyp_constr "Uid.t" (lib/types.ml[247,8395+14]..[247,8395+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_decl_kind" (lib/types.ml[250,8420+4]..[250,8420+18]) (lib/types.ml[250,8420+0]..[250,8420+75])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[250,8420+21]..[250,8420+75])
              Ptyp_constr "type_kind" (lib/types.ml[250,8420+66]..[250,8420+75])
              [
                core_type (lib/types.ml[250,8420+22]..[250,8420+39])
                  Ptyp_constr "label_declaration" (lib/types.ml[250,8420+22]..[250,8420+39])
                  []
                core_type (lib/types.ml[250,8420+41]..[250,8420+64])
                  Ptyp_constr "constructor_declaration" (lib/types.ml[250,8420+41]..[250,8420+64])
                  []
              ]
      type_declaration "type_kind" (lib/types.ml[252,8497+18]..[252,8497+27]) (lib/types.ml[252,8497+0]..[256,8669+13])
        ptype_params =
          [
            core_type (lib/types.ml[252,8497+5]..[252,8497+9])
              Ptyp_var lbl
            core_type (lib/types.ml[252,8497+11]..[252,8497+16])
              Ptyp_var cstr
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[253,8527+4]..[253,8527+32])
                "Type_abstract" (lib/types.ml[253,8527+4]..[253,8527+17])
                [
                  core_type (lib/types.ml[253,8527+21]..[253,8527+32])
                    Ptyp_constr "type_origin" (lib/types.ml[253,8527+21]..[253,8527+32])
                    []
                ]
                None
              (lib/types.ml[254,8560+2]..[254,8560+52])
                "Type_record" (lib/types.ml[254,8560+4]..[254,8560+15])
                [
                  core_type (lib/types.ml[254,8560+19]..[254,8560+28])
                    Ptyp_constr "list" (lib/types.ml[254,8560+24]..[254,8560+28])
                    [
                      core_type (lib/types.ml[254,8560+19]..[254,8560+23])
                        Ptyp_var lbl
                    ]
                  core_type (lib/types.ml[254,8560+31]..[254,8560+52])
                    Ptyp_constr "record_representation" (lib/types.ml[254,8560+31]..[254,8560+52])
                    []
                ]
                None
              (lib/types.ml[255,8613+2]..[255,8613+55])
                "Type_variant" (lib/types.ml[255,8613+4]..[255,8613+16])
                [
                  core_type (lib/types.ml[255,8613+20]..[255,8613+30])
                    Ptyp_constr "list" (lib/types.ml[255,8613+26]..[255,8613+30])
                    [
                      core_type (lib/types.ml[255,8613+20]..[255,8613+25])
                        Ptyp_var cstr
                    ]
                  core_type (lib/types.ml[255,8613+33]..[255,8613+55])
                    Ptyp_constr "variant_representation" (lib/types.ml[255,8613+33]..[255,8613+55])
                    []
                ]
                None
              (lib/types.ml[256,8669+2]..[256,8669+13])
                "Type_open" (lib/types.ml[256,8669+4]..[256,8669+13])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_origin" (lib/types.ml[258,8684+4]..[258,8684+15]) (lib/types.ml[258,8684+0]..[261,8742+25])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[259,8702+4]..[259,8702+14])
                "Definition" (lib/types.ml[259,8702+4]..[259,8702+14])
                []
                None
              (lib/types.ml[260,8717+2]..[260,8717+24])
                "Rec_check_regularity" (lib/types.ml[260,8717+4]..[260,8717+24])
                []
                None
              (lib/types.ml[261,8742+2]..[261,8742+25])
                "Existential" (lib/types.ml[261,8742+4]..[261,8742+15])
                [
                  core_type (lib/types.ml[261,8742+19]..[261,8742+25])
                    Ptyp_constr "string" (lib/types.ml[261,8742+19]..[261,8742+25])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "record_representation" (lib/types.ml[263,8769+4]..[263,8769+25]) (lib/types.ml[263,8769+0]..[268,9082+30])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[264,8797+4]..[264,8797+18])
                "Record_regular" (lib/types.ml[264,8797+4]..[264,8797+18])
                []
                None
              (lib/types.ml[265,8873+2]..[265,8873+16])
                "Record_float" (lib/types.ml[265,8873+4]..[265,8873+16])
                []
                None
              (lib/types.ml[266,8941+2]..[266,8941+26])
                "Record_unboxed" (lib/types.ml[266,8941+4]..[266,8941+18])
                [
                  core_type (lib/types.ml[266,8941+22]..[266,8941+26])
                    Ptyp_constr "bool" (lib/types.ml[266,8941+22]..[266,8941+26])
                    []
                ]
                None
              (lib/types.ml[267,9021+2]..[267,9021+25])
                "Record_inlined" (lib/types.ml[267,9021+4]..[267,9021+18])
                [
                  core_type (lib/types.ml[267,9021+22]..[267,9021+25])
                    Ptyp_constr "int" (lib/types.ml[267,9021+22]..[267,9021+25])
                    []
                ]
                None
              (lib/types.ml[268,9082+2]..[268,9082+30])
                "Record_extension" (lib/types.ml[268,9082+4]..[268,9082+20])
                [
                  core_type (lib/types.ml[268,9082+24]..[268,9082+30])
                    Ptyp_constr "Path.t" (lib/types.ml[268,9082+24]..[268,9082+30])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "variant_representation" (lib/types.ml[270,9160+4]..[270,9160+26]) (lib/types.ml[270,9160+0]..[272,9255+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[271,9189+4]..[271,9189+19])
                "Variant_regular" (lib/types.ml[271,9189+4]..[271,9189+19])
                []
                None
              (lib/types.ml[272,9255+2]..[272,9255+19])
                "Variant_unboxed" (lib/types.ml[272,9255+4]..[272,9255+19])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "label_declaration" (lib/types.ml[274,9328+4]..[274,9328+21]) (lib/types.ml[274,9328+0]..[282,9514+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[276,9356+4]..[276,9356+19])
                Immutable
                "ld_id" (lib/types.ml[276,9356+4]..[276,9356+9])                core_type (lib/types.ml[276,9356+11]..[276,9356+18])
                  Ptyp_constr "Ident.t" (lib/types.ml[276,9356+11]..[276,9356+18])
                  []
              (lib/types.ml[277,9376+4]..[277,9376+29])
                Immutable
                "ld_mutable" (lib/types.ml[277,9376+4]..[277,9376+14])                core_type (lib/types.ml[277,9376+16]..[277,9376+28])
                  Ptyp_constr "mutable_flag" (lib/types.ml[277,9376+16]..[277,9376+28])
                  []
              (lib/types.ml[278,9406+4]..[278,9406+23])
                Immutable
                "ld_type" (lib/types.ml[278,9406+4]..[278,9406+11])                core_type (lib/types.ml[278,9406+13]..[278,9406+22])
                  Ptyp_constr "type_expr" (lib/types.ml[278,9406+13]..[278,9406+22])
                  []
              (lib/types.ml[279,9430+4]..[279,9430+23])
                Immutable
                "ld_loc" (lib/types.ml[279,9430+4]..[279,9430+10])                core_type (lib/types.ml[279,9430+12]..[279,9430+22])
                  Ptyp_constr "Location.t" (lib/types.ml[279,9430+12]..[279,9430+22])
                  []
              (lib/types.ml[280,9454+4]..[280,9454+40])
                Immutable
                "ld_attributes" (lib/types.ml[280,9454+4]..[280,9454+17])                core_type (lib/types.ml[280,9454+19]..[280,9454+39])
                  Ptyp_constr "Parsetree.attributes" (lib/types.ml[280,9454+19]..[280,9454+39])
                  []
              (lib/types.ml[281,9495+4]..[281,9495+18])
                Immutable
                "ld_uid" (lib/types.ml[281,9495+4]..[281,9495+10])                core_type (lib/types.ml[281,9495+12]..[281,9495+17])
                  Ptyp_constr "Uid.t" (lib/types.ml[281,9495+12]..[281,9495+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constructor_declaration" (lib/types.ml[284,9519+4]..[284,9519+27]) (lib/types.ml[284,9519+0]..[292,9723+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[286,9553+4]..[286,9553+19])
                Immutable
                "cd_id" (lib/types.ml[286,9553+4]..[286,9553+9])                core_type (lib/types.ml[286,9553+11]..[286,9553+18])
                  Ptyp_constr "Ident.t" (lib/types.ml[286,9553+11]..[286,9553+18])
                  []
              (lib/types.ml[287,9573+4]..[287,9573+35])
                Immutable
                "cd_args" (lib/types.ml[287,9573+4]..[287,9573+11])                core_type (lib/types.ml[287,9573+13]..[287,9573+34])
                  Ptyp_constr "constructor_arguments" (lib/types.ml[287,9573+13]..[287,9573+34])
                  []
              (lib/types.ml[288,9609+4]..[288,9609+29])
                Immutable
                "cd_res" (lib/types.ml[288,9609+4]..[288,9609+10])                core_type (lib/types.ml[288,9609+12]..[288,9609+28])
                  Ptyp_constr "option" (lib/types.ml[288,9609+22]..[288,9609+28])
                  [
                    core_type (lib/types.ml[288,9609+12]..[288,9609+21])
                      Ptyp_constr "type_expr" (lib/types.ml[288,9609+12]..[288,9609+21])
                      []
                  ]
              (lib/types.ml[289,9639+4]..[289,9639+23])
                Immutable
                "cd_loc" (lib/types.ml[289,9639+4]..[289,9639+10])                core_type (lib/types.ml[289,9639+12]..[289,9639+22])
                  Ptyp_constr "Location.t" (lib/types.ml[289,9639+12]..[289,9639+22])
                  []
              (lib/types.ml[290,9663+4]..[290,9663+40])
                Immutable
                "cd_attributes" (lib/types.ml[290,9663+4]..[290,9663+17])                core_type (lib/types.ml[290,9663+19]..[290,9663+39])
                  Ptyp_constr "Parsetree.attributes" (lib/types.ml[290,9663+19]..[290,9663+39])
                  []
              (lib/types.ml[291,9704+4]..[291,9704+18])
                Immutable
                "cd_uid" (lib/types.ml[291,9704+4]..[291,9704+10])                core_type (lib/types.ml[291,9704+12]..[291,9704+17])
                  Ptyp_constr "Uid.t" (lib/types.ml[291,9704+12]..[291,9704+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constructor_arguments" (lib/types.ml[294,9728+4]..[294,9728+25]) (lib/types.ml[294,9728+0]..[296,9789+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[295,9756+2]..[295,9756+32])
                "Cstr_tuple" (lib/types.ml[295,9756+4]..[295,9756+14])
                [
                  core_type (lib/types.ml[295,9756+18]..[295,9756+32])
                    Ptyp_constr "list" (lib/types.ml[295,9756+28]..[295,9756+32])
                    [
                      core_type (lib/types.ml[295,9756+18]..[295,9756+27])
                        Ptyp_constr "type_expr" (lib/types.ml[295,9756+18]..[295,9756+27])
                        []
                    ]
                ]
                None
              (lib/types.ml[296,9789+2]..[296,9789+41])
                "Cstr_record" (lib/types.ml[296,9789+4]..[296,9789+15])
                [
                  core_type (lib/types.ml[296,9789+19]..[296,9789+41])
                    Ptyp_constr "list" (lib/types.ml[296,9789+37]..[296,9789+41])
                    [
                      core_type (lib/types.ml[296,9789+19]..[296,9789+36])
                        Ptyp_constr "label_declaration" (lib/types.ml[296,9789+19]..[296,9789+36])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[298,9832+0]..[312,10233+16])
    Pstr_type Rec
    [
      type_declaration "extension_constructor" (lib/types.ml[298,9832+5]..[298,9832+26]) (lib/types.ml[298,9832+0]..[307,10116+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[299,9861+4]..[299,9861+26])
                Immutable
                "ext_type_path" (lib/types.ml[299,9861+4]..[299,9861+17])                core_type (lib/types.ml[299,9861+19]..[299,9861+25])
                  Ptyp_constr "Path.t" (lib/types.ml[299,9861+19]..[299,9861+25])
                  []
              (lib/types.ml[300,9888+4]..[300,9888+36])
                Immutable
                "ext_type_params" (lib/types.ml[300,9888+4]..[300,9888+19])                core_type (lib/types.ml[300,9888+21]..[300,9888+35])
                  Ptyp_constr "list" (lib/types.ml[300,9888+31]..[300,9888+35])
                  [
                    core_type (lib/types.ml[300,9888+21]..[300,9888+30])
                      Ptyp_constr "type_expr" (lib/types.ml[300,9888+21]..[300,9888+30])
                      []
                  ]
              (lib/types.ml[301,9925+4]..[301,9925+36])
                Immutable
                "ext_args" (lib/types.ml[301,9925+4]..[301,9925+12])                core_type (lib/types.ml[301,9925+14]..[301,9925+35])
                  Ptyp_constr "constructor_arguments" (lib/types.ml[301,9925+14]..[301,9925+35])
                  []
              (lib/types.ml[302,9962+4]..[302,9962+35])
                Immutable
                "ext_ret_type" (lib/types.ml[302,9962+4]..[302,9962+16])                core_type (lib/types.ml[302,9962+18]..[302,9962+34])
                  Ptyp_constr "option" (lib/types.ml[302,9962+28]..[302,9962+34])
                  [
                    core_type (lib/types.ml[302,9962+18]..[302,9962+27])
                      Ptyp_constr "type_expr" (lib/types.ml[302,9962+18]..[302,9962+27])
                      []
                  ]
              (lib/types.ml[303,9998+4]..[303,9998+30])
                Immutable
                "ext_private" (lib/types.ml[303,9998+4]..[303,9998+15])                core_type (lib/types.ml[303,9998+17]..[303,9998+29])
                  Ptyp_constr "private_flag" (lib/types.ml[303,9998+17]..[303,9998+29])
                  []
              (lib/types.ml[304,10029+4]..[304,10029+24])
                Immutable
                "ext_loc" (lib/types.ml[304,10029+4]..[304,10029+11])                core_type (lib/types.ml[304,10029+13]..[304,10029+23])
                  Ptyp_constr "Location.t" (lib/types.ml[304,10029+13]..[304,10029+23])
                  []
              (lib/types.ml[305,10054+4]..[305,10054+41])
                Immutable
                "ext_attributes" (lib/types.ml[305,10054+4]..[305,10054+18])                core_type (lib/types.ml[305,10054+20]..[305,10054+40])
                  Ptyp_constr "Parsetree.attributes" (lib/types.ml[305,10054+20]..[305,10054+40])
                  []
              (lib/types.ml[306,10096+4]..[306,10096+19])
                Immutable
                "ext_uid" (lib/types.ml[306,10096+4]..[306,10096+11])                core_type (lib/types.ml[306,10096+13]..[306,10096+18])
                  Ptyp_constr "Uid.t" (lib/types.ml[306,10096+13]..[306,10096+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "type_transparence" (lib/types.ml[309,10121+4]..[309,10121+21]) (lib/types.ml[309,10121+0]..[312,10233+16])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[310,10145+4]..[310,10145+15])
                "Type_public" (lib/types.ml[310,10145+4]..[310,10145+15])
                []
                None
              (lib/types.ml[311,10195+2]..[311,10195+12])
                "Type_new" (lib/types.ml[311,10195+4]..[311,10195+12])
                []
                None
              (lib/types.ml[312,10233+2]..[312,10233+16])
                "Type_private" (lib/types.ml[312,10233+4]..[312,10233+16])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[316,10321+0]..[319,10431+51])
    Pstr_type Rec
    [
      type_declaration "class_type" (lib/types.ml[316,10321+5]..[316,10321+15]) (lib/types.ml[316,10321+0]..[319,10431+51])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[317,10339+4]..[317,10339+54])
                "Cty_constr" (lib/types.ml[317,10339+4]..[317,10339+14])
                [
                  core_type (lib/types.ml[317,10339+18]..[317,10339+24])
                    Ptyp_constr "Path.t" (lib/types.ml[317,10339+18]..[317,10339+24])
                    []
                  core_type (lib/types.ml[317,10339+27]..[317,10339+41])
                    Ptyp_constr "list" (lib/types.ml[317,10339+37]..[317,10339+41])
                    [
                      core_type (lib/types.ml[317,10339+27]..[317,10339+36])
                        Ptyp_constr "type_expr" (lib/types.ml[317,10339+27]..[317,10339+36])
                        []
                    ]
                  core_type (lib/types.ml[317,10339+44]..[317,10339+54])
                    Ptyp_constr "class_type" (lib/types.ml[317,10339+44]..[317,10339+54])
                    []
                ]
                None
              (lib/types.ml[318,10394+2]..[318,10394+36])
                "Cty_signature" (lib/types.ml[318,10394+4]..[318,10394+17])
                [
                  core_type (lib/types.ml[318,10394+21]..[318,10394+36])
                    Ptyp_constr "class_signature" (lib/types.ml[318,10394+21]..[318,10394+36])
                    []
                ]
                None
              (lib/types.ml[319,10431+2]..[319,10431+51])
                "Cty_arrow" (lib/types.ml[319,10431+4]..[319,10431+13])
                [
                  core_type (lib/types.ml[319,10431+17]..[319,10431+26])
                    Ptyp_constr "arg_label" (lib/types.ml[319,10431+17]..[319,10431+26])
                    []
                  core_type (lib/types.ml[319,10431+29]..[319,10431+38])
                    Ptyp_constr "type_expr" (lib/types.ml[319,10431+29]..[319,10431+38])
                    []
                  core_type (lib/types.ml[319,10431+41]..[319,10431+51])
                    Ptyp_constr "class_type" (lib/types.ml[319,10431+41]..[319,10431+51])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[321,10484+0]..[330,10750+2])
    Pstr_type Rec
    [
      type_declaration "class_declaration" (lib/types.ml[321,10484+5]..[321,10484+22]) (lib/types.ml[321,10484+0]..[330,10750+2])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[322,10509+4]..[322,10509+31])
                Immutable
                "cty_params" (lib/types.ml[322,10509+4]..[322,10509+14])                core_type (lib/types.ml[322,10509+16]..[322,10509+30])
                  Ptyp_constr "list" (lib/types.ml[322,10509+26]..[322,10509+30])
                  [
                    core_type (lib/types.ml[322,10509+16]..[322,10509+25])
                      Ptyp_constr "type_expr" (lib/types.ml[322,10509+16]..[322,10509+25])
                      []
                  ]
              (lib/types.ml[323,10541+4]..[323,10541+33])
                Mutable
                "cty_type" (lib/types.ml[323,10541+12]..[323,10541+20])                core_type (lib/types.ml[323,10541+22]..[323,10541+32])
                  Ptyp_constr "class_type" (lib/types.ml[323,10541+22]..[323,10541+32])
                  []
              (lib/types.ml[324,10575+4]..[324,10575+21])
                Immutable
                "cty_path" (lib/types.ml[324,10575+4]..[324,10575+12])                core_type (lib/types.ml[324,10575+14]..[324,10575+20])
                  Ptyp_constr "Path.t" (lib/types.ml[324,10575+14]..[324,10575+20])
                  []
              (lib/types.ml[325,10597+4]..[325,10597+30])
                Immutable
                "cty_new" (lib/types.ml[325,10597+4]..[325,10597+11])                core_type (lib/types.ml[325,10597+13]..[325,10597+29])
                  Ptyp_constr "option" (lib/types.ml[325,10597+23]..[325,10597+29])
                  [
                    core_type (lib/types.ml[325,10597+13]..[325,10597+22])
                      Ptyp_constr "type_expr" (lib/types.ml[325,10597+13]..[325,10597+22])
                      []
                  ]
              (lib/types.ml[326,10628+4]..[326,10628+34])
                Immutable
                "cty_variance" (lib/types.ml[326,10628+4]..[326,10628+16])                core_type (lib/types.ml[326,10628+18]..[326,10628+33])
                  Ptyp_constr "list" (lib/types.ml[326,10628+29]..[326,10628+33])
                  [
                    core_type (lib/types.ml[326,10628+18]..[326,10628+28])
                      Ptyp_constr "Variance.t" (lib/types.ml[326,10628+18]..[326,10628+28])
                      []
                  ]
              (lib/types.ml[327,10663+4]..[327,10663+24])
                Immutable
                "cty_loc" (lib/types.ml[327,10663+4]..[327,10663+11])                core_type (lib/types.ml[327,10663+13]..[327,10663+23])
                  Ptyp_constr "Location.t" (lib/types.ml[327,10663+13]..[327,10663+23])
                  []
              (lib/types.ml[328,10688+4]..[328,10688+41])
                Immutable
                "cty_attributes" (lib/types.ml[328,10688+4]..[328,10688+18])                core_type (lib/types.ml[328,10688+20]..[328,10688+40])
                  Ptyp_constr "Parsetree.attributes" (lib/types.ml[328,10688+20]..[328,10688+40])
                  []
              (lib/types.ml[329,10730+4]..[329,10730+19])
                Immutable
                "cty_uid" (lib/types.ml[329,10730+4]..[329,10730+11])                core_type (lib/types.ml[329,10730+13]..[329,10730+18])
                  Ptyp_constr "Uid.t" (lib/types.ml[329,10730+13]..[329,10730+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[332,10754+0]..[341,11031+3])
    Pstr_type Rec
    [
      type_declaration "class_type_declaration" (lib/types.ml[332,10754+5]..[332,10754+27]) (lib/types.ml[332,10754+0]..[341,11031+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[333,10784+4]..[333,10784+32])
                Immutable
                "clty_params" (lib/types.ml[333,10784+4]..[333,10784+15])                core_type (lib/types.ml[333,10784+17]..[333,10784+31])
                  Ptyp_constr "list" (lib/types.ml[333,10784+27]..[333,10784+31])
                  [
                    core_type (lib/types.ml[333,10784+17]..[333,10784+26])
                      Ptyp_constr "type_expr" (lib/types.ml[333,10784+17]..[333,10784+26])
                      []
                  ]
              (lib/types.ml[334,10817+4]..[334,10817+26])
                Immutable
                "clty_type" (lib/types.ml[334,10817+4]..[334,10817+13])                core_type (lib/types.ml[334,10817+15]..[334,10817+25])
                  Ptyp_constr "class_type" (lib/types.ml[334,10817+15]..[334,10817+25])
                  []
              (lib/types.ml[335,10844+4]..[335,10844+22])
                Immutable
                "clty_path" (lib/types.ml[335,10844+4]..[335,10844+13])                core_type (lib/types.ml[335,10844+15]..[335,10844+21])
                  Ptyp_constr "Path.t" (lib/types.ml[335,10844+15]..[335,10844+21])
                  []
              (lib/types.ml[336,10867+4]..[336,10867+37])
                Immutable
                "clty_hash_type" (lib/types.ml[336,10867+4]..[336,10867+18])                core_type (lib/types.ml[336,10867+20]..[336,10867+36])
                  Ptyp_constr "type_declaration" (lib/types.ml[336,10867+20]..[336,10867+36])
                  []
              (lib/types.ml[337,10905+4]..[337,10905+35])
                Immutable
                "clty_variance" (lib/types.ml[337,10905+4]..[337,10905+17])                core_type (lib/types.ml[337,10905+19]..[337,10905+34])
                  Ptyp_constr "list" (lib/types.ml[337,10905+30]..[337,10905+34])
                  [
                    core_type (lib/types.ml[337,10905+19]..[337,10905+29])
                      Ptyp_constr "Variance.t" (lib/types.ml[337,10905+19]..[337,10905+29])
                      []
                  ]
              (lib/types.ml[338,10941+4]..[338,10941+25])
                Immutable
                "clty_loc" (lib/types.ml[338,10941+4]..[338,10941+12])                core_type (lib/types.ml[338,10941+14]..[338,10941+24])
                  Ptyp_constr "Location.t" (lib/types.ml[338,10941+14]..[338,10941+24])
                  []
              (lib/types.ml[339,10967+4]..[339,10967+42])
                Immutable
                "clty_attributes" (lib/types.ml[339,10967+4]..[339,10967+19])                core_type (lib/types.ml[339,10967+21]..[339,10967+41])
                  Ptyp_constr "Parsetree.attributes" (lib/types.ml[339,10967+21]..[339,10967+41])
                  []
              (lib/types.ml[340,11010+4]..[340,11010+20])
                Immutable
                "clty_uid" (lib/types.ml[340,11010+4]..[340,11010+12])                core_type (lib/types.ml[340,11010+14]..[340,11010+19])
                  Ptyp_constr "Uid.t" (lib/types.ml[340,11010+14]..[340,11010+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[345,11084+0]..[347,11115+10])
    Pstr_type Rec
    [
      type_declaration "visibility" (lib/types.ml[345,11084+5]..[345,11084+15]) (lib/types.ml[345,11084+0]..[347,11115+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[346,11102+2]..[346,11102+12])
                "Exported" (lib/types.ml[346,11102+4]..[346,11102+12])
                []
                None
              (lib/types.ml[347,11115+2]..[347,11115+10])
                "Hidden" (lib/types.ml[347,11115+4]..[347,11115+10])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[349,11127+0]..[399,12701+18])
    Pstr_type Rec
    [
      type_declaration "module_type" (lib/types.ml[349,11127+5]..[349,11127+16]) (lib/types.ml[349,11127+0]..[353,11252+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[350,11146+4]..[350,11146+23])
                "Mty_ident" (lib/types.ml[350,11146+4]..[350,11146+13])
                [
                  core_type (lib/types.ml[350,11146+17]..[350,11146+23])
                    Ptyp_constr "Path.t" (lib/types.ml[350,11146+17]..[350,11146+23])
                    []
                ]
                None
              (lib/types.ml[351,11170+2]..[351,11170+30])
                "Mty_signature" (lib/types.ml[351,11170+4]..[351,11170+17])
                [
                  core_type (lib/types.ml[351,11170+21]..[351,11170+30])
                    Ptyp_constr "signature" (lib/types.ml[351,11170+21]..[351,11170+30])
                    []
                ]
                None
              (lib/types.ml[352,11201+2]..[352,11201+50])
                "Mty_functor" (lib/types.ml[352,11201+4]..[352,11201+15])
                [
                  core_type (lib/types.ml[352,11201+19]..[352,11201+36])
                    Ptyp_constr "functor_parameter" (lib/types.ml[352,11201+19]..[352,11201+36])
                    []
                  core_type (lib/types.ml[352,11201+39]..[352,11201+50])
                    Ptyp_constr "module_type" (lib/types.ml[352,11201+39]..[352,11201+50])
                    []
                ]
                None
              (lib/types.ml[353,11252+2]..[353,11252+23])
                "Mty_alias" (lib/types.ml[353,11252+4]..[353,11252+13])
                [
                  core_type (lib/types.ml[353,11252+17]..[353,11252+23])
                    Ptyp_constr "Path.t" (lib/types.ml[353,11252+17]..[353,11252+23])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "functor_parameter" (lib/types.ml[355,11277+4]..[355,11277+21]) (lib/types.ml[355,11277+0]..[357,11310+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[356,11301+2]..[356,11301+8])
                "Unit" (lib/types.ml[356,11301+4]..[356,11301+8])
                []
                None
              (lib/types.ml[357,11310+2]..[357,11310+41])
                "Named" (lib/types.ml[357,11310+4]..[357,11310+9])
                [
                  core_type (lib/types.ml[357,11310+13]..[357,11310+27])
                    Ptyp_constr "option" (lib/types.ml[357,11310+21]..[357,11310+27])
                    [
                      core_type (lib/types.ml[357,11310+13]..[357,11310+20])
                        Ptyp_constr "Ident.t" (lib/types.ml[357,11310+13]..[357,11310+20])
                        []
                    ]
                  core_type (lib/types.ml[357,11310+30]..[357,11310+41])
                    Ptyp_constr "module_type" (lib/types.ml[357,11310+30]..[357,11310+41])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_presence" (lib/types.ml[359,11353+4]..[359,11353+19]) (lib/types.ml[359,11353+0]..[361,11390+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[360,11375+2]..[360,11375+14])
                "Mp_present" (lib/types.ml[360,11375+4]..[360,11375+14])
                []
                None
              (lib/types.ml[361,11390+2]..[361,11390+13])
                "Mp_absent" (lib/types.ml[361,11390+4]..[361,11390+13])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "signature" (lib/types.ml[363,11405+4]..[363,11405+13]) (lib/types.ml[363,11405+0]..[363,11405+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[363,11405+16]..[363,11405+35])
              Ptyp_constr "list" (lib/types.ml[363,11405+31]..[363,11405+35])
              [
                core_type (lib/types.ml[363,11405+16]..[363,11405+30])
                  Ptyp_constr "signature_item" (lib/types.ml[363,11405+16]..[363,11405+30])
                  []
              ]
      type_declaration "signature_item" (lib/types.ml[365,11442+4]..[365,11442+18]) (lib/types.ml[365,11442+0]..[373,11896+80])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[366,11463+4]..[366,11463+57])
                "Sig_value" (lib/types.ml[366,11463+4]..[366,11463+13])
                [
                  core_type (lib/types.ml[366,11463+17]..[366,11463+24])
                    Ptyp_constr "Ident.t" (lib/types.ml[366,11463+17]..[366,11463+24])
                    []
                  core_type (lib/types.ml[366,11463+27]..[366,11463+44])
                    Ptyp_constr "value_description" (lib/types.ml[366,11463+27]..[366,11463+44])
                    []
                  core_type (lib/types.ml[366,11463+47]..[366,11463+57])
                    Ptyp_constr "visibility" (lib/types.ml[366,11463+47]..[366,11463+57])
                    []
                ]
                None
              (lib/types.ml[367,11521+2]..[367,11521+68])
                "Sig_type" (lib/types.ml[367,11521+4]..[367,11521+12])
                [
                  core_type (lib/types.ml[367,11521+16]..[367,11521+23])
                    Ptyp_constr "Ident.t" (lib/types.ml[367,11521+16]..[367,11521+23])
                    []
                  core_type (lib/types.ml[367,11521+26]..[367,11521+42])
                    Ptyp_constr "type_declaration" (lib/types.ml[367,11521+26]..[367,11521+42])
                    []
                  core_type (lib/types.ml[367,11521+45]..[367,11521+55])
                    Ptyp_constr "rec_status" (lib/types.ml[367,11521+45]..[367,11521+55])
                    []
                  core_type (lib/types.ml[367,11521+58]..[367,11521+68])
                    Ptyp_constr "visibility" (lib/types.ml[367,11521+58]..[367,11521+68])
                    []
                ]
                None
              (lib/types.ml[368,11590+2]..[368,11590+75])
                "Sig_typext" (lib/types.ml[368,11590+4]..[368,11590+14])
                [
                  core_type (lib/types.ml[368,11590+18]..[368,11590+25])
                    Ptyp_constr "Ident.t" (lib/types.ml[368,11590+18]..[368,11590+25])
                    []
                  core_type (lib/types.ml[368,11590+28]..[368,11590+49])
                    Ptyp_constr "extension_constructor" (lib/types.ml[368,11590+28]..[368,11590+49])
                    []
                  core_type (lib/types.ml[368,11590+52]..[368,11590+62])
                    Ptyp_constr "ext_status" (lib/types.ml[368,11590+52]..[368,11590+62])
                    []
                  core_type (lib/types.ml[368,11590+65]..[368,11590+75])
                    Ptyp_constr "visibility" (lib/types.ml[368,11590+65]..[368,11590+75])
                    []
                ]
                None
              (lib/types.ml[369,11666+2]..[370,11684+78])
                "Sig_module" (lib/types.ml[369,11666+4]..[369,11666+14])
                [
                  core_type (lib/types.ml[370,11684+6]..[370,11684+13])
                    Ptyp_constr "Ident.t" (lib/types.ml[370,11684+6]..[370,11684+13])
                    []
                  core_type (lib/types.ml[370,11684+16]..[370,11684+31])
                    Ptyp_constr "module_presence" (lib/types.ml[370,11684+16]..[370,11684+31])
                    []
                  core_type (lib/types.ml[370,11684+34]..[370,11684+52])
                    Ptyp_constr "module_declaration" (lib/types.ml[370,11684+34]..[370,11684+52])
                    []
                  core_type (lib/types.ml[370,11684+55]..[370,11684+65])
                    Ptyp_constr "rec_status" (lib/types.ml[370,11684+55]..[370,11684+65])
                    []
                  core_type (lib/types.ml[370,11684+68]..[370,11684+78])
                    Ptyp_constr "visibility" (lib/types.ml[370,11684+68]..[370,11684+78])
                    []
                ]
                None
              (lib/types.ml[371,11763+2]..[371,11763+61])
                "Sig_modtype" (lib/types.ml[371,11763+4]..[371,11763+15])
                [
                  core_type (lib/types.ml[371,11763+19]..[371,11763+26])
                    Ptyp_constr "Ident.t" (lib/types.ml[371,11763+19]..[371,11763+26])
                    []
                  core_type (lib/types.ml[371,11763+29]..[371,11763+48])
                    Ptyp_constr "modtype_declaration" (lib/types.ml[371,11763+29]..[371,11763+48])
                    []
                  core_type (lib/types.ml[371,11763+51]..[371,11763+61])
                    Ptyp_constr "visibility" (lib/types.ml[371,11763+51]..[371,11763+61])
                    []
                ]
                None
              (lib/types.ml[372,11825+2]..[372,11825+70])
                "Sig_class" (lib/types.ml[372,11825+4]..[372,11825+13])
                [
                  core_type (lib/types.ml[372,11825+17]..[372,11825+24])
                    Ptyp_constr "Ident.t" (lib/types.ml[372,11825+17]..[372,11825+24])
                    []
                  core_type (lib/types.ml[372,11825+27]..[372,11825+44])
                    Ptyp_constr "class_declaration" (lib/types.ml[372,11825+27]..[372,11825+44])
                    []
                  core_type (lib/types.ml[372,11825+47]..[372,11825+57])
                    Ptyp_constr "rec_status" (lib/types.ml[372,11825+47]..[372,11825+57])
                    []
                  core_type (lib/types.ml[372,11825+60]..[372,11825+70])
                    Ptyp_constr "visibility" (lib/types.ml[372,11825+60]..[372,11825+70])
                    []
                ]
                None
              (lib/types.ml[373,11896+2]..[373,11896+80])
                "Sig_class_type" (lib/types.ml[373,11896+4]..[373,11896+18])
                [
                  core_type (lib/types.ml[373,11896+22]..[373,11896+29])
                    Ptyp_constr "Ident.t" (lib/types.ml[373,11896+22]..[373,11896+29])
                    []
                  core_type (lib/types.ml[373,11896+32]..[373,11896+54])
                    Ptyp_constr "class_type_declaration" (lib/types.ml[373,11896+32]..[373,11896+54])
                    []
                  core_type (lib/types.ml[373,11896+57]..[373,11896+67])
                    Ptyp_constr "rec_status" (lib/types.ml[373,11896+57]..[373,11896+67])
                    []
                  core_type (lib/types.ml[373,11896+70]..[373,11896+80])
                    Ptyp_constr "visibility" (lib/types.ml[373,11896+70]..[373,11896+80])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "module_declaration" (lib/types.ml[375,11978+4]..[375,11978+22]) (lib/types.ml[375,11978+0]..[381,12117+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[377,12007+4]..[377,12007+25])
                Immutable
                "md_type" (lib/types.ml[377,12007+4]..[377,12007+11])                core_type (lib/types.ml[377,12007+13]..[377,12007+24])
                  Ptyp_constr "module_type" (lib/types.ml[377,12007+13]..[377,12007+24])
                  []
              (lib/types.ml[378,12033+4]..[378,12033+40])
                Immutable
                "md_attributes" (lib/types.ml[378,12033+4]..[378,12033+17])                core_type (lib/types.ml[378,12033+19]..[378,12033+39])
                  Ptyp_constr "Parsetree.attributes" (lib/types.ml[378,12033+19]..[378,12033+39])
                  []
              (lib/types.ml[379,12074+4]..[379,12074+23])
                Immutable
                "md_loc" (lib/types.ml[379,12074+4]..[379,12074+10])                core_type (lib/types.ml[379,12074+12]..[379,12074+22])
                  Ptyp_constr "Location.t" (lib/types.ml[379,12074+12]..[379,12074+22])
                  []
              (lib/types.ml[380,12098+4]..[380,12098+18])
                Immutable
                "md_uid" (lib/types.ml[380,12098+4]..[380,12098+10])                core_type (lib/types.ml[380,12098+12]..[380,12098+17])
                  Ptyp_constr "Uid.t" (lib/types.ml[380,12098+12]..[380,12098+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "modtype_declaration" (lib/types.ml[383,12122+4]..[383,12122+23]) (lib/types.ml[383,12122+0]..[389,12295+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[385,12152+4]..[385,12152+33])
                Immutable
                "mtd_type" (lib/types.ml[385,12152+4]..[385,12152+12])                core_type (lib/types.ml[385,12152+14]..[385,12152+32])
                  Ptyp_constr "option" (lib/types.ml[385,12152+26]..[385,12152+32])
                  [
                    core_type (lib/types.ml[385,12152+14]..[385,12152+25])
                      Ptyp_constr "module_type" (lib/types.ml[385,12152+14]..[385,12152+25])
                      []
                  ]
              (lib/types.ml[386,12208+4]..[386,12208+41])
                Immutable
                "mtd_attributes" (lib/types.ml[386,12208+4]..[386,12208+18])                core_type (lib/types.ml[386,12208+20]..[386,12208+40])
                  Ptyp_constr "Parsetree.attributes" (lib/types.ml[386,12208+20]..[386,12208+40])
                  []
              (lib/types.ml[387,12250+4]..[387,12250+24])
                Immutable
                "mtd_loc" (lib/types.ml[387,12250+4]..[387,12250+11])                core_type (lib/types.ml[387,12250+13]..[387,12250+23])
                  Ptyp_constr "Location.t" (lib/types.ml[387,12250+13]..[387,12250+23])
                  []
              (lib/types.ml[388,12275+4]..[388,12275+19])
                Immutable
                "mtd_uid" (lib/types.ml[388,12275+4]..[388,12275+11])                core_type (lib/types.ml[388,12275+13]..[388,12275+18])
                  Ptyp_constr "Uid.t" (lib/types.ml[388,12275+13]..[388,12275+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "rec_status" (lib/types.ml[391,12300+4]..[391,12300+14]) (lib/types.ml[391,12300+0]..[394,12448+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[392,12317+4]..[392,12317+12])
                "Trec_not" (lib/types.ml[392,12317+4]..[392,12317+12])
                []
                None
              (lib/types.ml[393,12384+2]..[393,12384+14])
                "Trec_first" (lib/types.ml[393,12384+4]..[393,12384+14])
                []
                None
              (lib/types.ml[394,12448+2]..[394,12448+13])
                "Trec_next" (lib/types.ml[394,12448+4]..[394,12448+13])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "ext_status" (lib/types.ml[396,12530+4]..[396,12530+14]) (lib/types.ml[396,12530+0]..[399,12701+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[397,12547+4]..[397,12547+14])
                "Text_first" (lib/types.ml[397,12547+4]..[397,12547+14])
                []
                None
              (lib/types.ml[398,12622+2]..[398,12622+13])
                "Text_next" (lib/types.ml[398,12622+4]..[398,12622+13])
                []
                None
              (lib/types.ml[399,12701+2]..[399,12701+18])
                "Text_exception" (lib/types.ml[399,12701+4]..[399,12701+18])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[405,12846+0]..[426,13959+35])
    Pstr_type Rec
    [
      type_declaration "constructor_description" (lib/types.ml[405,12846+5]..[405,12846+28]) (lib/types.ml[405,12846+0]..[420,13702+4])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[406,12877+4]..[406,12877+22])
                Immutable
                "cstr_name" (lib/types.ml[406,12877+4]..[406,12877+13])                core_type (lib/types.ml[406,12877+15]..[406,12877+21])
                  Ptyp_constr "string" (lib/types.ml[406,12877+15]..[406,12877+21])
                  []
              (lib/types.ml[407,12940+4]..[407,12940+24])
                Immutable
                "cstr_res" (lib/types.ml[407,12940+4]..[407,12940+12])                core_type (lib/types.ml[407,12940+14]..[407,12940+23])
                  Ptyp_constr "type_expr" (lib/types.ml[407,12940+14]..[407,12940+23])
                  []
              (lib/types.ml[408,13005+4]..[408,13005+38])
                Immutable
                "cstr_existentials" (lib/types.ml[408,13005+4]..[408,13005+21])                core_type (lib/types.ml[408,13005+23]..[408,13005+37])
                  Ptyp_constr "list" (lib/types.ml[408,13005+33]..[408,13005+37])
                  [
                    core_type (lib/types.ml[408,13005+23]..[408,13005+32])
                      Ptyp_constr "type_expr" (lib/types.ml[408,13005+23]..[408,13005+32])
                      []
                  ]
              (lib/types.ml[409,13072+4]..[409,13072+30])
                Immutable
                "cstr_args" (lib/types.ml[409,13072+4]..[409,13072+13])                core_type (lib/types.ml[409,13072+15]..[409,13072+29])
                  Ptyp_constr "list" (lib/types.ml[409,13072+25]..[409,13072+29])
                  [
                    core_type (lib/types.ml[409,13072+15]..[409,13072+24])
                      Ptyp_constr "type_expr" (lib/types.ml[409,13072+15]..[409,13072+24])
                      []
                  ]
              (lib/types.ml[410,13140+4]..[410,13140+20])
                Immutable
                "cstr_arity" (lib/types.ml[410,13140+4]..[410,13140+14])                core_type (lib/types.ml[410,13140+16]..[410,13140+19])
                  Ptyp_constr "int" (lib/types.ml[410,13140+16]..[410,13140+19])
                  []
              (lib/types.ml[411,13206+4]..[411,13206+30])
                Immutable
                "cstr_tag" (lib/types.ml[411,13206+4]..[411,13206+12])                core_type (lib/types.ml[411,13206+14]..[411,13206+29])
                  Ptyp_constr "constructor_tag" (lib/types.ml[411,13206+14]..[411,13206+29])
                  []
              (lib/types.ml[412,13272+4]..[412,13272+21])
                Immutable
                "cstr_consts" (lib/types.ml[412,13272+4]..[412,13272+15])                core_type (lib/types.ml[412,13272+17]..[412,13272+20])
                  Ptyp_constr "int" (lib/types.ml[412,13272+17]..[412,13272+20])
                  []
              (lib/types.ml[413,13350+4]..[413,13350+24])
                Immutable
                "cstr_nonconsts" (lib/types.ml[413,13350+4]..[413,13350+18])                core_type (lib/types.ml[413,13350+20]..[413,13350+23])
                  Ptyp_constr "int" (lib/types.ml[413,13350+20]..[413,13350+23])
                  []
              (lib/types.ml[414,13429+4]..[414,13429+27])
                Immutable
                "cstr_generalized" (lib/types.ml[414,13429+4]..[414,13429+20])                core_type (lib/types.ml[414,13429+22]..[414,13429+26])
                  Ptyp_constr "bool" (lib/types.ml[414,13429+22]..[414,13429+26])
                  []
              (lib/types.ml[415,13500+4]..[415,13500+31])
                Immutable
                "cstr_private" (lib/types.ml[415,13500+4]..[415,13500+16])                core_type (lib/types.ml[415,13500+18]..[415,13500+30])
                  Ptyp_constr "private_flag" (lib/types.ml[415,13500+18]..[415,13500+30])
                  []
              (lib/types.ml[416,13569+4]..[416,13569+25])
                Immutable
                "cstr_loc" (lib/types.ml[416,13569+4]..[416,13569+12])                core_type (lib/types.ml[416,13569+14]..[416,13569+24])
                  Ptyp_constr "Location.t" (lib/types.ml[416,13569+14]..[416,13569+24])
                  []
              (lib/types.ml[417,13595+4]..[417,13595+42])
                Immutable
                "cstr_attributes" (lib/types.ml[417,13595+4]..[417,13595+19])                core_type (lib/types.ml[417,13595+21]..[417,13595+41])
                  Ptyp_constr "Parsetree.attributes" (lib/types.ml[417,13595+21]..[417,13595+41])
                  []
              (lib/types.ml[418,13638+4]..[418,13638+42])
                Immutable
                "cstr_inlined" (lib/types.ml[418,13638+4]..[418,13638+16])                core_type (lib/types.ml[418,13638+18]..[418,13638+41])
                  Ptyp_constr "option" (lib/types.ml[418,13638+35]..[418,13638+41])
                  [
                    core_type (lib/types.ml[418,13638+18]..[418,13638+34])
                      Ptyp_constr "type_declaration" (lib/types.ml[418,13638+18]..[418,13638+34])
                      []
                  ]
              (lib/types.ml[419,13681+4]..[419,13681+20])
                Immutable
                "cstr_uid" (lib/types.ml[419,13681+4]..[419,13681+12])                core_type (lib/types.ml[419,13681+14]..[419,13681+19])
                  Ptyp_constr "Uid.t" (lib/types.ml[419,13681+14]..[419,13681+19])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "constructor_tag" (lib/types.ml[422,13708+4]..[422,13708+19]) (lib/types.ml[422,13708+0]..[426,13959+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[423,13730+4]..[423,13730+24])
                "Cstr_constant" (lib/types.ml[423,13730+4]..[423,13730+17])
                [
                  core_type (lib/types.ml[423,13730+21]..[423,13730+24])
                    Ptyp_constr "int" (lib/types.ml[423,13730+21]..[423,13730+24])
                    []
                ]
                None
              (lib/types.ml[424,13806+2]..[424,13806+21])
                "Cstr_block" (lib/types.ml[424,13806+4]..[424,13806+14])
                [
                  core_type (lib/types.ml[424,13806+18]..[424,13806+21])
                    Ptyp_constr "int" (lib/types.ml[424,13806+18]..[424,13806+21])
                    []
                ]
                None
              (lib/types.ml[425,13882+2]..[425,13882+16])
                "Cstr_unboxed" (lib/types.ml[425,13882+4]..[425,13882+16])
                []
                None
              (lib/types.ml[426,13959+2]..[426,13959+35])
                "Cstr_extension" (lib/types.ml[426,13959+4]..[426,13959+18])
                [
                  core_type (lib/types.ml[426,13959+22]..[426,13959+28])
                    Ptyp_constr "Path.t" (lib/types.ml[426,13959+22]..[426,13959+28])
                    []
                  core_type (lib/types.ml[426,13959+31]..[426,13959+35])
                    Ptyp_constr "bool" (lib/types.ml[426,13959+31]..[426,13959+35])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[429,14106+0]..[436,14384+76])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[429,14106+4]..[429,14106+13])
          Ppat_var "equal_tag" (lib/types.ml[429,14106+4]..[429,14106+13])
        expression (lib/types.ml[429,14106+14]..[436,14384+76]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[429,14106+14]..[429,14106+16])
              Nolabel
              None
              pattern (lib/types.ml[429,14106+14]..[429,14106+16])
                Ppat_var "t1" (lib/types.ml[429,14106+14]..[429,14106+16])
            Pparam_val (lib/types.ml[429,14106+17]..[429,14106+19])
              Nolabel
              None
              pattern (lib/types.ml[429,14106+17]..[429,14106+19])
                Ppat_var "t2" (lib/types.ml[429,14106+17]..[429,14106+19])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[430,14128+2]..[436,14384+76])
              Pexp_match
              expression (lib/types.ml[430,14128+8]..[430,14128+16])
                Pexp_tuple
                [
                  expression (lib/types.ml[430,14128+9]..[430,14128+11])
                    Pexp_ident "t1" (lib/types.ml[430,14128+9]..[430,14128+11])
                  expression (lib/types.ml[430,14128+13]..[430,14128+15])
                    Pexp_ident "t2" (lib/types.ml[430,14128+13]..[430,14128+15])
                ]
              [
                <case>
                  pattern (lib/types.ml[431,14150+4]..[431,14150+38])
                    Ppat_tuple
                    [
                      pattern (lib/types.ml[431,14150+4]..[431,14150+20])
                        Ppat_construct "Cstr_constant" (lib/types.ml[431,14150+4]..[431,14150+17])
                        Some
                          []
                          pattern (lib/types.ml[431,14150+18]..[431,14150+20])
                            Ppat_var "i1" (lib/types.ml[431,14150+18]..[431,14150+20])
                      pattern (lib/types.ml[431,14150+22]..[431,14150+38])
                        Ppat_construct "Cstr_constant" (lib/types.ml[431,14150+22]..[431,14150+35])
                        Some
                          []
                          pattern (lib/types.ml[431,14150+36]..[431,14150+38])
                            Ppat_var "i2" (lib/types.ml[431,14150+36]..[431,14150+38])
                    ]
                  expression (lib/types.ml[431,14150+42]..[431,14150+49])
                    Pexp_apply
                    expression (lib/types.ml[431,14150+45]..[431,14150+46])
                      Pexp_ident "=" (lib/types.ml[431,14150+45]..[431,14150+46])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[431,14150+42]..[431,14150+44])
                          Pexp_ident "i2" (lib/types.ml[431,14150+42]..[431,14150+44])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[431,14150+47]..[431,14150+49])
                          Pexp_ident "i1" (lib/types.ml[431,14150+47]..[431,14150+49])
                    ]
                <case>
                  pattern (lib/types.ml[432,14200+4]..[432,14200+32])
                    Ppat_tuple
                    [
                      pattern (lib/types.ml[432,14200+4]..[432,14200+17])
                        Ppat_construct "Cstr_block" (lib/types.ml[432,14200+4]..[432,14200+14])
                        Some
                          []
                          pattern (lib/types.ml[432,14200+15]..[432,14200+17])
                            Ppat_var "i1" (lib/types.ml[432,14200+15]..[432,14200+17])
                      pattern (lib/types.ml[432,14200+19]..[432,14200+32])
                        Ppat_construct "Cstr_block" (lib/types.ml[432,14200+19]..[432,14200+29])
                        Some
                          []
                          pattern (lib/types.ml[432,14200+30]..[432,14200+32])
                            Ppat_var "i2" (lib/types.ml[432,14200+30]..[432,14200+32])
                    ]
                  expression (lib/types.ml[432,14200+36]..[432,14200+43])
                    Pexp_apply
                    expression (lib/types.ml[432,14200+39]..[432,14200+40])
                      Pexp_ident "=" (lib/types.ml[432,14200+39]..[432,14200+40])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[432,14200+36]..[432,14200+38])
                          Pexp_ident "i2" (lib/types.ml[432,14200+36]..[432,14200+38])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[432,14200+41]..[432,14200+43])
                          Pexp_ident "i1" (lib/types.ml[432,14200+41]..[432,14200+43])
                    ]
                <case>
                  pattern (lib/types.ml[433,14244+4]..[433,14244+30])
                    Ppat_tuple
                    [
                      pattern (lib/types.ml[433,14244+4]..[433,14244+16])
                        Ppat_construct "Cstr_unboxed" (lib/types.ml[433,14244+4]..[433,14244+16])
                        None
                      pattern (lib/types.ml[433,14244+18]..[433,14244+30])
                        Ppat_construct "Cstr_unboxed" (lib/types.ml[433,14244+18]..[433,14244+30])
                        None
                    ]
                  expression (lib/types.ml[433,14244+34]..[433,14244+38])
                    Pexp_construct "true" (lib/types.ml[433,14244+34]..[433,14244+38])
                    None
                <case>
                  pattern (lib/types.ml[434,14283+4]..[434,14283+58])
                    Ppat_tuple
                    [
                      pattern (lib/types.ml[434,14283+4]..[434,14283+30])
                        Ppat_construct "Cstr_extension" (lib/types.ml[434,14283+4]..[434,14283+18])
                        Some
                          []
                          pattern (lib/types.ml[434,14283+19]..[434,14283+30])
                            Ppat_tuple
                            [
                              pattern (lib/types.ml[434,14283+20]..[434,14283+25])
                                Ppat_var "path1" (lib/types.ml[434,14283+20]..[434,14283+25])
                              pattern (lib/types.ml[434,14283+27]..[434,14283+29])
                                Ppat_var "b1" (lib/types.ml[434,14283+27]..[434,14283+29])
                            ]
                      pattern (lib/types.ml[434,14283+32]..[434,14283+58])
                        Ppat_construct "Cstr_extension" (lib/types.ml[434,14283+32]..[434,14283+46])
                        Some
                          []
                          pattern (lib/types.ml[434,14283+47]..[434,14283+58])
                            Ppat_tuple
                            [
                              pattern (lib/types.ml[434,14283+48]..[434,14283+53])
                                Ppat_var "path2" (lib/types.ml[434,14283+48]..[434,14283+53])
                              pattern (lib/types.ml[434,14283+55]..[434,14283+57])
                                Ppat_var "b2" (lib/types.ml[434,14283+55]..[434,14283+57])
                            ]
                    ]
                  expression (lib/types.ml[435,14345+6]..[435,14345+38])
                    Pexp_apply
                    expression (lib/types.ml[435,14345+28]..[435,14345+30])
                      Pexp_ident "&&" (lib/types.ml[435,14345+28]..[435,14345+30])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[435,14345+6]..[435,14345+27])
                          Pexp_apply
                          expression (lib/types.ml[435,14345+6]..[435,14345+15])
                            Pexp_ident "Path.same" (lib/types.ml[435,14345+6]..[435,14345+15])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[435,14345+16]..[435,14345+21])
                                Pexp_ident "path1" (lib/types.ml[435,14345+16]..[435,14345+21])
                            <arg>
                            Nolabel
                              expression (lib/types.ml[435,14345+22]..[435,14345+27])
                                Pexp_ident "path2" (lib/types.ml[435,14345+22]..[435,14345+27])
                          ]
                      <arg>
                      Nolabel
                        expression (lib/types.ml[435,14345+31]..[435,14345+38])
                          Pexp_apply
                          expression (lib/types.ml[435,14345+34]..[435,14345+35])
                            Pexp_ident "=" (lib/types.ml[435,14345+34]..[435,14345+35])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[435,14345+31]..[435,14345+33])
                                Pexp_ident "b1" (lib/types.ml[435,14345+31]..[435,14345+33])
                            <arg>
                            Nolabel
                              expression (lib/types.ml[435,14345+36]..[435,14345+38])
                                Pexp_ident "b2" (lib/types.ml[435,14345+36]..[435,14345+38])
                          ]
                    ]
                <case>
                  pattern (lib/types.ml[436,14384+4]..[436,14384+67])
                    Ppat_tuple
                    [
                      pattern (lib/types.ml[436,14384+4]..[436,14384+64])
                        Ppat_or
                        pattern (lib/types.ml[436,14384+5]..[436,14384+46])
                          Ppat_or
                          pattern (lib/types.ml[436,14384+5]..[436,14384+33])
                            Ppat_or
                            pattern (lib/types.ml[436,14384+5]..[436,14384+20])
                              Ppat_construct "Cstr_constant" (lib/types.ml[436,14384+5]..[436,14384+18])
                              Some
                                []
                                pattern (lib/types.ml[436,14384+19]..[436,14384+20])
                                  Ppat_any
                            pattern (lib/types.ml[436,14384+21]..[436,14384+33])
                              Ppat_construct "Cstr_block" (lib/types.ml[436,14384+21]..[436,14384+31])
                              Some
                                []
                                pattern (lib/types.ml[436,14384+32]..[436,14384+33])
                                  Ppat_any
                          pattern (lib/types.ml[436,14384+34]..[436,14384+46])
                            Ppat_construct "Cstr_unboxed" (lib/types.ml[436,14384+34]..[436,14384+46])
                            None
                        pattern (lib/types.ml[436,14384+47]..[436,14384+63])
                          Ppat_construct "Cstr_extension" (lib/types.ml[436,14384+47]..[436,14384+61])
                          Some
                            []
                            pattern (lib/types.ml[436,14384+62]..[436,14384+63])
                              Ppat_any
                      pattern (lib/types.ml[436,14384+66]..[436,14384+67])
                        Ppat_any
                    ]
                  expression (lib/types.ml[436,14384+71]..[436,14384+76])
                    Pexp_construct "false" (lib/types.ml[436,14384+71]..[436,14384+76])
                    None
              ]
    ]
  structure_item (lib/types.ml[438,14462+0]..[445,14713+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[438,14462+4]..[438,14462+20])
          Ppat_var "may_equal_constr" (lib/types.ml[438,14462+4]..[438,14462+20])
        expression (lib/types.ml[438,14462+21]..[445,14713+29]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[438,14462+21]..[438,14462+23])
              Nolabel
              None
              pattern (lib/types.ml[438,14462+21]..[438,14462+23])
                Ppat_var "c1" (lib/types.ml[438,14462+21]..[438,14462+23])
            Pparam_val (lib/types.ml[438,14462+24]..[438,14462+26])
              Nolabel
              None
              pattern (lib/types.ml[438,14462+24]..[438,14462+26])
                Ppat_var "c2" (lib/types.ml[438,14462+24]..[438,14462+26])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[439,14491+2]..[445,14713+29])
              Pexp_apply
              expression (lib/types.ml[440,14523+2]..[440,14523+4])
                Pexp_ident "&&" (lib/types.ml[440,14523+2]..[440,14523+4])
              [
                <arg>
                Nolabel
                  expression (lib/types.ml[439,14491+2]..[439,14491+31])
                    Pexp_apply
                    expression (lib/types.ml[439,14491+16]..[439,14491+17])
                      Pexp_ident "=" (lib/types.ml[439,14491+16]..[439,14491+17])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[439,14491+2]..[439,14491+15])
                          Pexp_field
                          expression (lib/types.ml[439,14491+2]..[439,14491+4])
                            Pexp_ident "c1" (lib/types.ml[439,14491+2]..[439,14491+4])
                          "cstr_arity" (lib/types.ml[439,14491+5]..[439,14491+15])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[439,14491+18]..[439,14491+31])
                          Pexp_field
                          expression (lib/types.ml[439,14491+18]..[439,14491+20])
                            Pexp_ident "c2" (lib/types.ml[439,14491+18]..[439,14491+20])
                          "cstr_arity" (lib/types.ml[439,14491+21]..[439,14491+31])
                    ]
                <arg>
                Nolabel
                  expression (lib/types.ml[440,14523+5]..[445,14713+29])
                    Pexp_match
                    expression (lib/types.ml[440,14523+12]..[440,14523+35])
                      Pexp_tuple
                      [
                        expression (lib/types.ml[440,14523+12]..[440,14523+23])
                          Pexp_field
                          expression (lib/types.ml[440,14523+12]..[440,14523+14])
                            Pexp_ident "c1" (lib/types.ml[440,14523+12]..[440,14523+14])
                          "cstr_tag" (lib/types.ml[440,14523+15]..[440,14523+23])
                        expression (lib/types.ml[440,14523+24]..[440,14523+35])
                          Pexp_field
                          expression (lib/types.ml[440,14523+24]..[440,14523+26])
                            Pexp_ident "c2" (lib/types.ml[440,14523+24]..[440,14523+26])
                          "cstr_tag" (lib/types.ml[440,14523+27]..[440,14523+35])
                      ]
                    [
                      <case>
                        pattern (lib/types.ml[441,14564+7]..[441,14564+40])
                          Ppat_tuple
                          [
                            pattern (lib/types.ml[441,14564+7]..[441,14564+23])
                              Ppat_construct "Cstr_extension" (lib/types.ml[441,14564+7]..[441,14564+21])
                              Some
                                []
                                pattern (lib/types.ml[441,14564+22]..[441,14564+23])
                                  Ppat_any
                            pattern (lib/types.ml[441,14564+24]..[441,14564+40])
                              Ppat_construct "Cstr_extension" (lib/types.ml[441,14564+24]..[441,14564+38])
                              Some
                                []
                                pattern (lib/types.ml[441,14564+39]..[441,14564+40])
                                  Ppat_any
                          ]
                        expression (lib/types.ml[443,14678+9]..[443,14678+13])
                          Pexp_construct "true" (lib/types.ml[443,14678+9]..[443,14678+13])
                          None
                      <case>
                        pattern (lib/types.ml[444,14692+7]..[444,14692+17])
                          Ppat_tuple
                          [
                            pattern (lib/types.ml[444,14692+7]..[444,14692+11])
                              Ppat_var "tag1" (lib/types.ml[444,14692+7]..[444,14692+11])
                            pattern (lib/types.ml[444,14692+13]..[444,14692+17])
                              Ppat_var "tag2" (lib/types.ml[444,14692+13]..[444,14692+17])
                          ]
                        expression (lib/types.ml[445,14713+9]..[445,14713+28])
                          Pexp_apply
                          expression (lib/types.ml[445,14713+9]..[445,14713+18])
                            Pexp_ident "equal_tag" (lib/types.ml[445,14713+9]..[445,14713+18])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[445,14713+19]..[445,14713+23])
                                Pexp_ident "tag1" (lib/types.ml[445,14713+19]..[445,14713+23])
                            <arg>
                            Nolabel
                              expression (lib/types.ml[445,14713+24]..[445,14713+28])
                                Pexp_ident "tag2" (lib/types.ml[445,14713+24]..[445,14713+28])
                          ]
                    ]
              ]
    ]
  structure_item (lib/types.ml[447,14744+0]..[454,14949+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[447,14744+4]..[447,14744+19])
          Ppat_var "item_visibility" (lib/types.ml[447,14744+4]..[447,14744+19])
        expression (lib/types.ml[447,14744+22]..[454,14949+40])
          Pexp_function
          []
          None
          Pfunction_cases (lib/types.ml[447,14744+22]..[454,14949+40])
            [
              <case>
                pattern (lib/types.ml[448,14775+4]..[454,14949+33])
                  Ppat_or
                  pattern (lib/types.ml[448,14775+4]..[453,14920+28])
                    Ppat_or
                    pattern (lib/types.ml[448,14775+4]..[452,14892+27])
                      Ppat_or
                      pattern (lib/types.ml[448,14775+4]..[451,14859+32])
                        Ppat_or
                        pattern (lib/types.ml[448,14775+4]..[450,14829+29])
                          Ppat_or
                          pattern (lib/types.ml[448,14775+4]..[449,14801+27])
                            Ppat_or
                            pattern (lib/types.ml[448,14775+4]..[448,14775+25])
                              Ppat_construct "Sig_value" (lib/types.ml[448,14775+4]..[448,14775+13])
                              Some
                                []
                                pattern (lib/types.ml[448,14775+14]..[448,14775+25])
                                  Ppat_tuple
                                  [
                                    pattern (lib/types.ml[448,14775+15]..[448,14775+16])
                                      Ppat_any
                                    pattern (lib/types.ml[448,14775+18]..[448,14775+19])
                                      Ppat_any
                                    pattern (lib/types.ml[448,14775+21]..[448,14775+24])
                                      Ppat_var "vis" (lib/types.ml[448,14775+21]..[448,14775+24])
                                  ]
                            pattern (lib/types.ml[449,14801+4]..[449,14801+27])
                              Ppat_construct "Sig_type" (lib/types.ml[449,14801+4]..[449,14801+12])
                              Some
                                []
                                pattern (lib/types.ml[449,14801+13]..[449,14801+27])
                                  Ppat_tuple
                                  [
                                    pattern (lib/types.ml[449,14801+14]..[449,14801+15])
                                      Ppat_any
                                    pattern (lib/types.ml[449,14801+17]..[449,14801+18])
                                      Ppat_any
                                    pattern (lib/types.ml[449,14801+20]..[449,14801+21])
                                      Ppat_any
                                    pattern (lib/types.ml[449,14801+23]..[449,14801+26])
                                      Ppat_var "vis" (lib/types.ml[449,14801+23]..[449,14801+26])
                                  ]
                          pattern (lib/types.ml[450,14829+4]..[450,14829+29])
                            Ppat_construct "Sig_typext" (lib/types.ml[450,14829+4]..[450,14829+14])
                            Some
                              []
                              pattern (lib/types.ml[450,14829+15]..[450,14829+29])
                                Ppat_tuple
                                [
                                  pattern (lib/types.ml[450,14829+16]..[450,14829+17])
                                    Ppat_any
                                  pattern (lib/types.ml[450,14829+19]..[450,14829+20])
                                    Ppat_any
                                  pattern (lib/types.ml[450,14829+22]..[450,14829+23])
                                    Ppat_any
                                  pattern (lib/types.ml[450,14829+25]..[450,14829+28])
                                    Ppat_var "vis" (lib/types.ml[450,14829+25]..[450,14829+28])
                                ]
                        pattern (lib/types.ml[451,14859+4]..[451,14859+32])
                          Ppat_construct "Sig_module" (lib/types.ml[451,14859+4]..[451,14859+14])
                          Some
                            []
                            pattern (lib/types.ml[451,14859+15]..[451,14859+32])
                              Ppat_tuple
                              [
                                pattern (lib/types.ml[451,14859+16]..[451,14859+17])
                                  Ppat_any
                                pattern (lib/types.ml[451,14859+19]..[451,14859+20])
                                  Ppat_any
                                pattern (lib/types.ml[451,14859+22]..[451,14859+23])
                                  Ppat_any
                                pattern (lib/types.ml[451,14859+25]..[451,14859+26])
                                  Ppat_any
                                pattern (lib/types.ml[451,14859+28]..[451,14859+31])
                                  Ppat_var "vis" (lib/types.ml[451,14859+28]..[451,14859+31])
                              ]
                      pattern (lib/types.ml[452,14892+4]..[452,14892+27])
                        Ppat_construct "Sig_modtype" (lib/types.ml[452,14892+4]..[452,14892+15])
                        Some
                          []
                          pattern (lib/types.ml[452,14892+16]..[452,14892+27])
                            Ppat_tuple
                            [
                              pattern (lib/types.ml[452,14892+17]..[452,14892+18])
                                Ppat_any
                              pattern (lib/types.ml[452,14892+20]..[452,14892+21])
                                Ppat_any
                              pattern (lib/types.ml[452,14892+23]..[452,14892+26])
                                Ppat_var "vis" (lib/types.ml[452,14892+23]..[452,14892+26])
                            ]
                    pattern (lib/types.ml[453,14920+4]..[453,14920+28])
                      Ppat_construct "Sig_class" (lib/types.ml[453,14920+4]..[453,14920+13])
                      Some
                        []
                        pattern (lib/types.ml[453,14920+14]..[453,14920+28])
                          Ppat_tuple
                          [
                            pattern (lib/types.ml[453,14920+15]..[453,14920+16])
                              Ppat_any
                            pattern (lib/types.ml[453,14920+18]..[453,14920+19])
                              Ppat_any
                            pattern (lib/types.ml[453,14920+21]..[453,14920+22])
                              Ppat_any
                            pattern (lib/types.ml[453,14920+24]..[453,14920+27])
                              Ppat_var "vis" (lib/types.ml[453,14920+24]..[453,14920+27])
                          ]
                  pattern (lib/types.ml[454,14949+4]..[454,14949+33])
                    Ppat_construct "Sig_class_type" (lib/types.ml[454,14949+4]..[454,14949+18])
                    Some
                      []
                      pattern (lib/types.ml[454,14949+19]..[454,14949+33])
                        Ppat_tuple
                        [
                          pattern (lib/types.ml[454,14949+20]..[454,14949+21])
                            Ppat_any
                          pattern (lib/types.ml[454,14949+23]..[454,14949+24])
                            Ppat_any
                          pattern (lib/types.ml[454,14949+26]..[454,14949+27])
                            Ppat_any
                          pattern (lib/types.ml[454,14949+29]..[454,14949+32])
                            Ppat_var "vis" (lib/types.ml[454,14949+29]..[454,14949+32])
                        ]
                expression (lib/types.ml[454,14949+37]..[454,14949+40])
                  Pexp_ident "vis" (lib/types.ml[454,14949+37]..[454,14949+40])
            ]
    ]
  structure_item (lib/types.ml[456,14991+0]..[468,15641+4])
    Pstr_type Rec
    [
      type_declaration "label_description" (lib/types.ml[456,14991+5]..[456,14991+22]) (lib/types.ml[456,14991+0]..[468,15641+4])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lib/types.ml[457,15016+4]..[457,15016+21])
                Immutable
                "lbl_name" (lib/types.ml[457,15016+4]..[457,15016+12])                core_type (lib/types.ml[457,15016+14]..[457,15016+20])
                  Ptyp_constr "string" (lib/types.ml[457,15016+14]..[457,15016+20])
                  []
              (lib/types.ml[458,15073+4]..[458,15073+23])
                Immutable
                "lbl_res" (lib/types.ml[458,15073+4]..[458,15073+11])                core_type (lib/types.ml[458,15073+13]..[458,15073+22])
                  Ptyp_constr "type_expr" (lib/types.ml[458,15073+13]..[458,15073+22])
                  []
              (lib/types.ml[459,15138+4]..[459,15138+23])
                Immutable
                "lbl_arg" (lib/types.ml[459,15138+4]..[459,15138+11])                core_type (lib/types.ml[459,15138+13]..[459,15138+22])
                  Ptyp_constr "type_expr" (lib/types.ml[459,15138+13]..[459,15138+22])
                  []
              (lib/types.ml[460,15205+4]..[460,15205+26])
                Immutable
                "lbl_mut" (lib/types.ml[460,15205+4]..[460,15205+11])                core_type (lib/types.ml[460,15205+13]..[460,15205+25])
                  Ptyp_constr "mutable_flag" (lib/types.ml[460,15205+13]..[460,15205+25])
                  []
              (lib/types.ml[461,15276+4]..[461,15276+17])
                Immutable
                "lbl_pos" (lib/types.ml[461,15276+4]..[461,15276+11])                core_type (lib/types.ml[461,15276+13]..[461,15276+16])
                  Ptyp_constr "int" (lib/types.ml[461,15276+13]..[461,15276+16])
                  []
              (lib/types.ml[462,15340+4]..[462,15340+37])
                Immutable
                "lbl_all" (lib/types.ml[462,15340+4]..[462,15340+11])                core_type (lib/types.ml[462,15340+13]..[462,15340+36])
                  Ptyp_constr "array" (lib/types.ml[462,15340+31]..[462,15340+36])
                  [
                    core_type (lib/types.ml[462,15340+13]..[462,15340+30])
                      Ptyp_constr "label_description" (lib/types.ml[462,15340+13]..[462,15340+30])
                      []
                  ]
              (lib/types.ml[463,15414+4]..[463,15414+38])
                Immutable
                "lbl_repres" (lib/types.ml[463,15414+4]..[463,15414+14])                core_type (lib/types.ml[463,15414+16]..[463,15414+37])
                  Ptyp_constr "record_representation" (lib/types.ml[463,15414+16]..[463,15414+37])
                  []
              (lib/types.ml[464,15491+4]..[464,15491+30])
                Immutable
                "lbl_private" (lib/types.ml[464,15491+4]..[464,15491+15])                core_type (lib/types.ml[464,15491+17]..[464,15491+29])
                  Ptyp_constr "private_flag" (lib/types.ml[464,15491+17]..[464,15491+29])
                  []
              (lib/types.ml[465,15554+4]..[465,15554+24])
                Immutable
                "lbl_loc" (lib/types.ml[465,15554+4]..[465,15554+11])                core_type (lib/types.ml[465,15554+13]..[465,15554+23])
                  Ptyp_constr "Location.t" (lib/types.ml[465,15554+13]..[465,15554+23])
                  []
              (lib/types.ml[466,15579+4]..[466,15579+41])
                Immutable
                "lbl_attributes" (lib/types.ml[466,15579+4]..[466,15579+18])                core_type (lib/types.ml[466,15579+20]..[466,15579+40])
                  Ptyp_constr "Parsetree.attributes" (lib/types.ml[466,15579+20]..[466,15579+40])
                  []
              (lib/types.ml[467,15621+4]..[467,15621+19])
                Immutable
                "lbl_uid" (lib/types.ml[467,15621+4]..[467,15621+11])                core_type (lib/types.ml[467,15621+13]..[467,15621+18])
                  Ptyp_constr "Uid.t" (lib/types.ml[467,15621+13]..[467,15621+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[470,15647+0]..[478,16029+43])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[470,15647+8]..[470,15647+31])
          Ppat_var "bound_value_identifiers" (lib/types.ml[470,15647+8]..[470,15647+31])
        expression (lib/types.ml[470,15647+34]..[478,16029+43])
          Pexp_function
          []
          None
          Pfunction_cases (lib/types.ml[470,15647+34]..[478,16029+43])
            [
              <case>
                pattern (lib/types.ml[471,15690+4]..[471,15690+6])
                  Ppat_construct "[]" (lib/types.ml[471,15690+4]..[471,15690+6])
                  None
                expression (lib/types.ml[471,15690+10]..[471,15690+12])
                  Pexp_construct "[]" (lib/types.ml[471,15690+10]..[471,15690+12])
                  None
              <case>
                pattern (lib/types.ml[472,15703+4]..[472,15703+49])
                  Ppat_construct "::" (lib/types.ml[472,15703+43]..[472,15703+45])
                  Some
                    []
                    pattern (lib/types.ml[472,15703+4]..[472,15703+49]) ghost
                      Ppat_tuple
                      [
                        pattern (lib/types.ml[472,15703+4]..[472,15703+42])
                          Ppat_construct "Sig_value" (lib/types.ml[472,15703+4]..[472,15703+13])
                          Some
                            []
                            pattern (lib/types.ml[472,15703+13]..[472,15703+42])
                              Ppat_tuple
                              [
                                pattern (lib/types.ml[472,15703+14]..[472,15703+16])
                                  Ppat_var "id" (lib/types.ml[472,15703+14]..[472,15703+16])
                                pattern (lib/types.ml[472,15703+18]..[472,15703+38])
                                  Ppat_record Closed
                                  [
                                    "val_kind" (lib/types.ml[472,15703+19]..[472,15703+27])
                                      pattern (lib/types.ml[472,15703+30]..[472,15703+37])
                                        Ppat_construct "Val_reg" (lib/types.ml[472,15703+30]..[472,15703+37])
                                        None
                                  ]
                                pattern (lib/types.ml[472,15703+40]..[472,15703+41])
                                  Ppat_any
                              ]
                        pattern (lib/types.ml[472,15703+46]..[472,15703+49])
                          Ppat_var "rem" (lib/types.ml[472,15703+46]..[472,15703+49])
                      ]
                expression (lib/types.ml[473,15756+6]..[473,15756+39])
                  Pexp_construct "::" (lib/types.ml[473,15756+9]..[473,15756+11])
                  Some
                    expression (lib/types.ml[473,15756+6]..[473,15756+39]) ghost
                      Pexp_tuple
                      [
                        expression (lib/types.ml[473,15756+6]..[473,15756+8])
                          Pexp_ident "id" (lib/types.ml[473,15756+6]..[473,15756+8])
                        expression (lib/types.ml[473,15756+12]..[473,15756+39])
                          Pexp_apply
                          expression (lib/types.ml[473,15756+12]..[473,15756+35])
                            Pexp_ident "bound_value_identifiers" (lib/types.ml[473,15756+12]..[473,15756+35])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[473,15756+36]..[473,15756+39])
                                Pexp_ident "rem" (lib/types.ml[473,15756+36]..[473,15756+39])
                          ]
                      ]
              <case>
                pattern (lib/types.ml[474,15796+4]..[474,15796+34])
                  Ppat_construct "::" (lib/types.ml[474,15796+28]..[474,15796+30])
                  Some
                    []
                    pattern (lib/types.ml[474,15796+4]..[474,15796+34]) ghost
                      Ppat_tuple
                      [
                        pattern (lib/types.ml[474,15796+4]..[474,15796+27])
                          Ppat_construct "Sig_typext" (lib/types.ml[474,15796+4]..[474,15796+14])
                          Some
                            []
                            pattern (lib/types.ml[474,15796+14]..[474,15796+27])
                              Ppat_tuple
                              [
                                pattern (lib/types.ml[474,15796+15]..[474,15796+17])
                                  Ppat_var "id" (lib/types.ml[474,15796+15]..[474,15796+17])
                                pattern (lib/types.ml[474,15796+19]..[474,15796+20])
                                  Ppat_any
                                pattern (lib/types.ml[474,15796+22]..[474,15796+23])
                                  Ppat_any
                                pattern (lib/types.ml[474,15796+25]..[474,15796+26])
                                  Ppat_any
                              ]
                        pattern (lib/types.ml[474,15796+31]..[474,15796+34])
                          Ppat_var "rem" (lib/types.ml[474,15796+31]..[474,15796+34])
                      ]
                expression (lib/types.ml[474,15796+38]..[474,15796+71])
                  Pexp_construct "::" (lib/types.ml[474,15796+41]..[474,15796+43])
                  Some
                    expression (lib/types.ml[474,15796+38]..[474,15796+71]) ghost
                      Pexp_tuple
                      [
                        expression (lib/types.ml[474,15796+38]..[474,15796+40])
                          Pexp_ident "id" (lib/types.ml[474,15796+38]..[474,15796+40])
                        expression (lib/types.ml[474,15796+44]..[474,15796+71])
                          Pexp_apply
                          expression (lib/types.ml[474,15796+44]..[474,15796+67])
                            Pexp_ident "bound_value_identifiers" (lib/types.ml[474,15796+44]..[474,15796+67])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[474,15796+68]..[474,15796+71])
                                Pexp_ident "rem" (lib/types.ml[474,15796+68]..[474,15796+71])
                          ]
                      ]
              <case>
                pattern (lib/types.ml[475,15868+4]..[475,15868+46])
                  Ppat_construct "::" (lib/types.ml[475,15868+40]..[475,15868+42])
                  Some
                    []
                    pattern (lib/types.ml[475,15868+4]..[475,15868+46]) ghost
                      Ppat_tuple
                      [
                        pattern (lib/types.ml[475,15868+4]..[475,15868+39])
                          Ppat_construct "Sig_module" (lib/types.ml[475,15868+4]..[475,15868+14])
                          Some
                            []
                            pattern (lib/types.ml[475,15868+14]..[475,15868+39])
                              Ppat_tuple
                              [
                                pattern (lib/types.ml[475,15868+15]..[475,15868+17])
                                  Ppat_var "id" (lib/types.ml[475,15868+15]..[475,15868+17])
                                pattern (lib/types.ml[475,15868+19]..[475,15868+29])
                                  Ppat_construct "Mp_present" (lib/types.ml[475,15868+19]..[475,15868+29])
                                  None
                                pattern (lib/types.ml[475,15868+31]..[475,15868+32])
                                  Ppat_any
                                pattern (lib/types.ml[475,15868+34]..[475,15868+35])
                                  Ppat_any
                                pattern (lib/types.ml[475,15868+37]..[475,15868+38])
                                  Ppat_any
                              ]
                        pattern (lib/types.ml[475,15868+43]..[475,15868+46])
                          Ppat_var "rem" (lib/types.ml[475,15868+43]..[475,15868+46])
                      ]
                expression (lib/types.ml[476,15918+6]..[476,15918+39])
                  Pexp_construct "::" (lib/types.ml[476,15918+9]..[476,15918+11])
                  Some
                    expression (lib/types.ml[476,15918+6]..[476,15918+39]) ghost
                      Pexp_tuple
                      [
                        expression (lib/types.ml[476,15918+6]..[476,15918+8])
                          Pexp_ident "id" (lib/types.ml[476,15918+6]..[476,15918+8])
                        expression (lib/types.ml[476,15918+12]..[476,15918+39])
                          Pexp_apply
                          expression (lib/types.ml[476,15918+12]..[476,15918+35])
                            Pexp_ident "bound_value_identifiers" (lib/types.ml[476,15918+12]..[476,15918+35])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[476,15918+36]..[476,15918+39])
                                Pexp_ident "rem" (lib/types.ml[476,15918+36]..[476,15918+39])
                          ]
                      ]
              <case>
                pattern (lib/types.ml[477,15958+4]..[477,15958+33])
                  Ppat_construct "::" (lib/types.ml[477,15958+27]..[477,15958+29])
                  Some
                    []
                    pattern (lib/types.ml[477,15958+4]..[477,15958+33]) ghost
                      Ppat_tuple
                      [
                        pattern (lib/types.ml[477,15958+4]..[477,15958+26])
                          Ppat_construct "Sig_class" (lib/types.ml[477,15958+4]..[477,15958+13])
                          Some
                            []
                            pattern (lib/types.ml[477,15958+13]..[477,15958+26])
                              Ppat_tuple
                              [
                                pattern (lib/types.ml[477,15958+14]..[477,15958+16])
                                  Ppat_var "id" (lib/types.ml[477,15958+14]..[477,15958+16])
                                pattern (lib/types.ml[477,15958+18]..[477,15958+19])
                                  Ppat_any
                                pattern (lib/types.ml[477,15958+21]..[477,15958+22])
                                  Ppat_any
                                pattern (lib/types.ml[477,15958+24]..[477,15958+25])
                                  Ppat_any
                              ]
                        pattern (lib/types.ml[477,15958+30]..[477,15958+33])
                          Ppat_var "rem" (lib/types.ml[477,15958+30]..[477,15958+33])
                      ]
                expression (lib/types.ml[477,15958+37]..[477,15958+70])
                  Pexp_construct "::" (lib/types.ml[477,15958+40]..[477,15958+42])
                  Some
                    expression (lib/types.ml[477,15958+37]..[477,15958+70]) ghost
                      Pexp_tuple
                      [
                        expression (lib/types.ml[477,15958+37]..[477,15958+39])
                          Pexp_ident "id" (lib/types.ml[477,15958+37]..[477,15958+39])
                        expression (lib/types.ml[477,15958+43]..[477,15958+70])
                          Pexp_apply
                          expression (lib/types.ml[477,15958+43]..[477,15958+66])
                            Pexp_ident "bound_value_identifiers" (lib/types.ml[477,15958+43]..[477,15958+66])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[477,15958+67]..[477,15958+70])
                                Pexp_ident "rem" (lib/types.ml[477,15958+67]..[477,15958+70])
                          ]
                      ]
              <case>
                pattern (lib/types.ml[478,16029+4]..[478,16029+12])
                  Ppat_construct "::" (lib/types.ml[478,16029+6]..[478,16029+8])
                  Some
                    []
                    pattern (lib/types.ml[478,16029+4]..[478,16029+12]) ghost
                      Ppat_tuple
                      [
                        pattern (lib/types.ml[478,16029+4]..[478,16029+5])
                          Ppat_any
                        pattern (lib/types.ml[478,16029+9]..[478,16029+12])
                          Ppat_var "rem" (lib/types.ml[478,16029+9]..[478,16029+12])
                      ]
                expression (lib/types.ml[478,16029+16]..[478,16029+43])
                  Pexp_apply
                  expression (lib/types.ml[478,16029+16]..[478,16029+39])
                    Pexp_ident "bound_value_identifiers" (lib/types.ml[478,16029+16]..[478,16029+39])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[478,16029+40]..[478,16029+43])
                        Pexp_ident "rem" (lib/types.ml[478,16029+40]..[478,16029+43])
                  ]
            ]
    ]
  structure_item (lib/types.ml[480,16074+0]..[488,16308+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[480,16074+4]..[480,16074+21])
          Ppat_var "signature_item_id" (lib/types.ml[480,16074+4]..[480,16074+21])
        expression (lib/types.ml[480,16074+24]..[488,16308+9])
          Pexp_function
          []
          None
          Pfunction_cases (lib/types.ml[480,16074+24]..[488,16308+9])
            [
              <case>
                pattern (lib/types.ml[481,16107+4]..[487,16275+32])
                  Ppat_or
                  pattern (lib/types.ml[481,16107+4]..[486,16247+27])
                    Ppat_or
                    pattern (lib/types.ml[481,16107+4]..[485,16220+26])
                      Ppat_or
                      pattern (lib/types.ml[481,16107+4]..[484,16188+31])
                        Ppat_or
                        pattern (lib/types.ml[481,16107+4]..[483,16159+28])
                          Ppat_or
                          pattern (lib/types.ml[481,16107+4]..[482,16132+26])
                            Ppat_or
                            pattern (lib/types.ml[481,16107+4]..[481,16107+24])
                              Ppat_construct "Sig_value" (lib/types.ml[481,16107+4]..[481,16107+13])
                              Some
                                []
                                pattern (lib/types.ml[481,16107+14]..[481,16107+24])
                                  Ppat_tuple
                                  [
                                    pattern (lib/types.ml[481,16107+15]..[481,16107+17])
                                      Ppat_var "id" (lib/types.ml[481,16107+15]..[481,16107+17])
                                    pattern (lib/types.ml[481,16107+19]..[481,16107+20])
                                      Ppat_any
                                    pattern (lib/types.ml[481,16107+22]..[481,16107+23])
                                      Ppat_any
                                  ]
                            pattern (lib/types.ml[482,16132+4]..[482,16132+26])
                              Ppat_construct "Sig_type" (lib/types.ml[482,16132+4]..[482,16132+12])
                              Some
                                []
                                pattern (lib/types.ml[482,16132+13]..[482,16132+26])
                                  Ppat_tuple
                                  [
                                    pattern (lib/types.ml[482,16132+14]..[482,16132+16])
                                      Ppat_var "id" (lib/types.ml[482,16132+14]..[482,16132+16])
                                    pattern (lib/types.ml[482,16132+18]..[482,16132+19])
                                      Ppat_any
                                    pattern (lib/types.ml[482,16132+21]..[482,16132+22])
                                      Ppat_any
                                    pattern (lib/types.ml[482,16132+24]..[482,16132+25])
                                      Ppat_any
                                  ]
                          pattern (lib/types.ml[483,16159+4]..[483,16159+28])
                            Ppat_construct "Sig_typext" (lib/types.ml[483,16159+4]..[483,16159+14])
                            Some
                              []
                              pattern (lib/types.ml[483,16159+15]..[483,16159+28])
                                Ppat_tuple
                                [
                                  pattern (lib/types.ml[483,16159+16]..[483,16159+18])
                                    Ppat_var "id" (lib/types.ml[483,16159+16]..[483,16159+18])
                                  pattern (lib/types.ml[483,16159+20]..[483,16159+21])
                                    Ppat_any
                                  pattern (lib/types.ml[483,16159+23]..[483,16159+24])
                                    Ppat_any
                                  pattern (lib/types.ml[483,16159+26]..[483,16159+27])
                                    Ppat_any
                                ]
                        pattern (lib/types.ml[484,16188+4]..[484,16188+31])
                          Ppat_construct "Sig_module" (lib/types.ml[484,16188+4]..[484,16188+14])
                          Some
                            []
                            pattern (lib/types.ml[484,16188+15]..[484,16188+31])
                              Ppat_tuple
                              [
                                pattern (lib/types.ml[484,16188+16]..[484,16188+18])
                                  Ppat_var "id" (lib/types.ml[484,16188+16]..[484,16188+18])
                                pattern (lib/types.ml[484,16188+20]..[484,16188+21])
                                  Ppat_any
                                pattern (lib/types.ml[484,16188+23]..[484,16188+24])
                                  Ppat_any
                                pattern (lib/types.ml[484,16188+26]..[484,16188+27])
                                  Ppat_any
                                pattern (lib/types.ml[484,16188+29]..[484,16188+30])
                                  Ppat_any
                              ]
                      pattern (lib/types.ml[485,16220+4]..[485,16220+26])
                        Ppat_construct "Sig_modtype" (lib/types.ml[485,16220+4]..[485,16220+15])
                        Some
                          []
                          pattern (lib/types.ml[485,16220+16]..[485,16220+26])
                            Ppat_tuple
                            [
                              pattern (lib/types.ml[485,16220+17]..[485,16220+19])
                                Ppat_var "id" (lib/types.ml[485,16220+17]..[485,16220+19])
                              pattern (lib/types.ml[485,16220+21]..[485,16220+22])
                                Ppat_any
                              pattern (lib/types.ml[485,16220+24]..[485,16220+25])
                                Ppat_any
                            ]
                    pattern (lib/types.ml[486,16247+4]..[486,16247+27])
                      Ppat_construct "Sig_class" (lib/types.ml[486,16247+4]..[486,16247+13])
                      Some
                        []
                        pattern (lib/types.ml[486,16247+14]..[486,16247+27])
                          Ppat_tuple
                          [
                            pattern (lib/types.ml[486,16247+15]..[486,16247+17])
                              Ppat_var "id" (lib/types.ml[486,16247+15]..[486,16247+17])
                            pattern (lib/types.ml[486,16247+19]..[486,16247+20])
                              Ppat_any
                            pattern (lib/types.ml[486,16247+22]..[486,16247+23])
                              Ppat_any
                            pattern (lib/types.ml[486,16247+25]..[486,16247+26])
                              Ppat_any
                          ]
                  pattern (lib/types.ml[487,16275+4]..[487,16275+32])
                    Ppat_construct "Sig_class_type" (lib/types.ml[487,16275+4]..[487,16275+18])
                    Some
                      []
                      pattern (lib/types.ml[487,16275+19]..[487,16275+32])
                        Ppat_tuple
                        [
                          pattern (lib/types.ml[487,16275+20]..[487,16275+22])
                            Ppat_var "id" (lib/types.ml[487,16275+20]..[487,16275+22])
                          pattern (lib/types.ml[487,16275+24]..[487,16275+25])
                            Ppat_any
                          pattern (lib/types.ml[487,16275+27]..[487,16275+28])
                            Ppat_any
                          pattern (lib/types.ml[487,16275+30]..[487,16275+31])
                            Ppat_any
                        ]
                expression (lib/types.ml[488,16308+7]..[488,16308+9])
                  Pexp_ident "id" (lib/types.ml[488,16308+7]..[488,16308+9])
            ]
    ]
  structure_item (lib/types.ml[492,16361+0]..[502,16727+52])
    Pstr_type Rec
    [
      type_declaration "change" (lib/types.ml[492,16361+5]..[492,16361+11]) (lib/types.ml[492,16361+0]..[502,16727+52])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[493,16375+4]..[493,16375+34])
                "Ctype" (lib/types.ml[493,16375+4]..[493,16375+9])
                [
                  core_type (lib/types.ml[493,16375+13]..[493,16375+22])
                    Ptyp_constr "type_expr" (lib/types.ml[493,16375+13]..[493,16375+22])
                    []
                  core_type (lib/types.ml[493,16375+25]..[493,16375+34])
                    Ptyp_constr "type_desc" (lib/types.ml[493,16375+25]..[493,16375+34])
                    []
                ]
                None
              (lib/types.ml[494,16410+2]..[494,16410+50])
                "Ccompress" (lib/types.ml[494,16410+4]..[494,16410+13])
                [
                  core_type (lib/types.ml[494,16410+17]..[494,16410+26])
                    Ptyp_constr "type_expr" (lib/types.ml[494,16410+17]..[494,16410+26])
                    []
                  core_type (lib/types.ml[494,16410+29]..[494,16410+38])
                    Ptyp_constr "type_desc" (lib/types.ml[494,16410+29]..[494,16410+38])
                    []
                  core_type (lib/types.ml[494,16410+41]..[494,16410+50])
                    Ptyp_constr "type_desc" (lib/types.ml[494,16410+41]..[494,16410+50])
                    []
                ]
                None
              (lib/types.ml[495,16461+2]..[495,16461+29])
                "Clevel" (lib/types.ml[495,16461+4]..[495,16461+10])
                [
                  core_type (lib/types.ml[495,16461+14]..[495,16461+23])
                    Ptyp_constr "type_expr" (lib/types.ml[495,16461+14]..[495,16461+23])
                    []
                  core_type (lib/types.ml[495,16461+26]..[495,16461+29])
                    Ptyp_constr "int" (lib/types.ml[495,16461+26]..[495,16461+29])
                    []
                ]
                None
              (lib/types.ml[496,16491+2]..[496,16491+29])
                "Cscope" (lib/types.ml[496,16491+4]..[496,16491+10])
                [
                  core_type (lib/types.ml[496,16491+14]..[496,16491+23])
                    Ptyp_constr "type_expr" (lib/types.ml[496,16491+14]..[496,16491+23])
                    []
                  core_type (lib/types.ml[496,16491+26]..[496,16491+29])
                    Ptyp_constr "int" (lib/types.ml[496,16491+26]..[496,16491+29])
                    []
                ]
                None
              (lib/types.ml[497,16521+2]..[498,16534+77])
                "Cname" (lib/types.ml[497,16521+4]..[497,16521+9])
                [
                  core_type (lib/types.ml[498,16534+6]..[498,16534+42])
                    Ptyp_constr "ref" (lib/types.ml[498,16534+39]..[498,16534+42])
                    [
                      core_type (lib/types.ml[498,16534+6]..[498,16534+38])
                        Ptyp_constr "option" (lib/types.ml[498,16534+32]..[498,16534+38])
                        [
                          core_type (lib/types.ml[498,16534+7]..[498,16534+30])
                            Ptyp_tuple
                            [
                              core_type (lib/types.ml[498,16534+7]..[498,16534+13])
                                Ptyp_constr "Path.t" (lib/types.ml[498,16534+7]..[498,16534+13])
                                []
                              core_type (lib/types.ml[498,16534+16]..[498,16534+30])
                                Ptyp_constr "list" (lib/types.ml[498,16534+26]..[498,16534+30])
                                [
                                  core_type (lib/types.ml[498,16534+16]..[498,16534+25])
                                    Ptyp_constr "type_expr" (lib/types.ml[498,16534+16]..[498,16534+25])
                                    []
                                ]
                            ]
                        ]
                    ]
                  core_type (lib/types.ml[498,16534+45]..[498,16534+77])
                    Ptyp_constr "option" (lib/types.ml[498,16534+71]..[498,16534+77])
                    [
                      core_type (lib/types.ml[498,16534+46]..[498,16534+69])
                        Ptyp_tuple
                        [
                          core_type (lib/types.ml[498,16534+46]..[498,16534+52])
                            Ptyp_constr "Path.t" (lib/types.ml[498,16534+46]..[498,16534+52])
                            []
                          core_type (lib/types.ml[498,16534+55]..[498,16534+69])
                            Ptyp_constr "list" (lib/types.ml[498,16534+65]..[498,16534+69])
                            [
                              core_type (lib/types.ml[498,16534+55]..[498,16534+64])
                                Ptyp_constr "type_expr" (lib/types.ml[498,16534+55]..[498,16534+64])
                                []
                            ]
                        ]
                    ]
                ]
                None
              (lib/types.ml[499,16612+2]..[499,16612+43])
                "Crow" (lib/types.ml[499,16612+4]..[499,16612+8])
                [
                  core_type (lib/types.ml[499,16612+12]..[499,16612+43])
                    Ptyp_constr "ref" (lib/types.ml[499,16612+40]..[499,16612+43])
                    [
                      core_type (lib/types.ml[499,16612+12]..[499,16612+39])
                        Ptyp_constr "row_field_gen" (lib/types.ml[499,16612+26]..[499,16612+39])
                        [
                          core_type (lib/types.ml[499,16612+12]..[499,16612+25])
                            Ptyp_variant closed=Closed
                            [
                              Rtag "none" true
                                []
                              Rtag "some" true
                                []
                            ]
                            None
                        ]
                    ]
                ]
                None
              (lib/types.ml[500,16656+2]..[500,16656+34])
                "Ckind" (lib/types.ml[500,16656+4]..[500,16656+9])
                [
                  core_type (lib/types.ml[500,16656+13]..[500,16656+34])
                    Ptyp_constr "field_kind_gen" (lib/types.ml[500,16656+20]..[500,16656+34])
                    [
                      core_type (lib/types.ml[500,16656+13]..[500,16656+19])
                        Ptyp_variant closed=Closed
                        [
                          Rtag "var" true
                            []
                        ]
                        None
                    ]
                ]
                None
              (lib/types.ml[501,16691+2]..[501,16691+35])
                "Ccommu" (lib/types.ml[501,16691+4]..[501,16691+10])
                [
                  core_type (lib/types.ml[501,16691+14]..[501,16691+35])
                    Ptyp_constr "commutable_gen" (lib/types.ml[501,16691+21]..[501,16691+35])
                    [
                      core_type (lib/types.ml[501,16691+14]..[501,16691+20])
                        Ptyp_variant closed=Closed
                        [
                          Rtag "var" true
                            []
                        ]
                        None
                    ]
                ]
                None
              (lib/types.ml[502,16727+2]..[502,16727+52])
                "Cuniv" (lib/types.ml[502,16727+4]..[502,16727+9])
                [
                  core_type (lib/types.ml[502,16727+13]..[502,16727+33])
                    Ptyp_constr "ref" (lib/types.ml[502,16727+30]..[502,16727+33])
                    [
                      core_type (lib/types.ml[502,16727+13]..[502,16727+29])
                        Ptyp_constr "option" (lib/types.ml[502,16727+23]..[502,16727+29])
                        [
                          core_type (lib/types.ml[502,16727+13]..[502,16727+22])
                            Ptyp_constr "type_expr" (lib/types.ml[502,16727+13]..[502,16727+22])
                            []
                        ]
                    ]
                  core_type (lib/types.ml[502,16727+36]..[502,16727+52])
                    Ptyp_constr "option" (lib/types.ml[502,16727+46]..[502,16727+52])
                    [
                      core_type (lib/types.ml[502,16727+36]..[502,16727+45])
                        Ptyp_constr "type_expr" (lib/types.ml[502,16727+36]..[502,16727+45])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[504,16781+0]..[507,16845+11])
    Pstr_type Rec
    [
      type_declaration "changes" (lib/types.ml[504,16781+5]..[504,16781+12]) (lib/types.ml[504,16781+0]..[507,16845+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[505,16796+4]..[505,16796+34])
                "Change" (lib/types.ml[505,16796+4]..[505,16796+10])
                [
                  core_type (lib/types.ml[505,16796+14]..[505,16796+20])
                    Ptyp_constr "change" (lib/types.ml[505,16796+14]..[505,16796+20])
                    []
                  core_type (lib/types.ml[505,16796+23]..[505,16796+34])
                    Ptyp_constr "ref" (lib/types.ml[505,16796+31]..[505,16796+34])
                    [
                      core_type (lib/types.ml[505,16796+23]..[505,16796+30])
                        Ptyp_constr "changes" (lib/types.ml[505,16796+23]..[505,16796+30])
                        []
                    ]
                ]
                None
              (lib/types.ml[506,16831+2]..[506,16831+13])
                "Unchanged" (lib/types.ml[506,16831+4]..[506,16831+13])
                []
                None
              (lib/types.ml[507,16845+2]..[507,16845+11])
                "Invalid" (lib/types.ml[507,16845+4]..[507,16845+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[509,16858+0]..[509,16858+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[509,16858+4]..[509,16858+9])
          Ppat_var "trail" (lib/types.ml[509,16858+4]..[509,16858+9])
        expression (lib/types.ml[509,16858+12]..[509,16858+45])
          Pexp_apply
          expression (lib/types.ml[509,16858+12]..[509,16858+31])
            Pexp_ident "Local_store.s_table" (lib/types.ml[509,16858+12]..[509,16858+31])
          [
            <arg>
            Nolabel
              expression (lib/types.ml[509,16858+32]..[509,16858+35])
                Pexp_ident "ref" (lib/types.ml[509,16858+32]..[509,16858+35])
            <arg>
            Nolabel
              expression (lib/types.ml[509,16858+36]..[509,16858+45])
                Pexp_construct "Unchanged" (lib/types.ml[509,16858+36]..[509,16858+45])
                None
          ]
    ]
  structure_item (lib/types.ml[511,16905+0]..[514,16982+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[511,16905+4]..[511,16905+14])
          Ppat_var "log_change" (lib/types.ml[511,16905+4]..[511,16905+14])
        expression (lib/types.ml[511,16905+15]..[514,16982+13]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[511,16905+15]..[511,16905+17])
              Nolabel
              None
              pattern (lib/types.ml[511,16905+15]..[511,16905+17])
                Ppat_var "ch" (lib/types.ml[511,16905+15]..[511,16905+17])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[512,16925+2]..[514,16982+13])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[512,16925+6]..[512,16925+8])
                    Ppat_var "r'" (lib/types.ml[512,16925+6]..[512,16925+8])
                  expression (lib/types.ml[512,16925+11]..[512,16925+24])
                    Pexp_apply
                    expression (lib/types.ml[512,16925+11]..[512,16925+14])
                      Pexp_ident "ref" (lib/types.ml[512,16925+11]..[512,16925+14])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[512,16925+15]..[512,16925+24])
                          Pexp_construct "Unchanged" (lib/types.ml[512,16925+15]..[512,16925+24])
                          None
                    ]
              ]
              expression (lib/types.ml[513,16953+2]..[514,16982+13])
                Pexp_sequence
                expression (lib/types.ml[513,16953+2]..[513,16953+27])
                  Pexp_apply
                  expression (lib/types.ml[513,16953+9]..[513,16953+11])
                    Pexp_ident ":=" (lib/types.ml[513,16953+9]..[513,16953+11])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[513,16953+2]..[513,16953+8])
                        Pexp_apply
                        expression (lib/types.ml[513,16953+2]..[513,16953+3])
                          Pexp_ident "!" (lib/types.ml[513,16953+2]..[513,16953+3])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[513,16953+3]..[513,16953+8])
                              Pexp_ident "trail" (lib/types.ml[513,16953+3]..[513,16953+8])
                        ]
                    <arg>
                    Nolabel
                      expression (lib/types.ml[513,16953+12]..[513,16953+27])
                        Pexp_construct "Change" (lib/types.ml[513,16953+12]..[513,16953+18])
                        Some
                          expression (lib/types.ml[513,16953+19]..[513,16953+27])
                            Pexp_tuple
                            [
                              expression (lib/types.ml[513,16953+20]..[513,16953+22])
                                Pexp_ident "ch" (lib/types.ml[513,16953+20]..[513,16953+22])
                              expression (lib/types.ml[513,16953+24]..[513,16953+26])
                                Pexp_ident "r'" (lib/types.ml[513,16953+24]..[513,16953+26])
                            ]
                  ]
                expression (lib/types.ml[514,16982+2]..[514,16982+13])
                  Pexp_apply
                  expression (lib/types.ml[514,16982+8]..[514,16982+10])
                    Pexp_ident ":=" (lib/types.ml[514,16982+8]..[514,16982+10])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[514,16982+2]..[514,16982+7])
                        Pexp_ident "trail" (lib/types.ml[514,16982+2]..[514,16982+7])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[514,16982+11]..[514,16982+13])
                        Pexp_ident "r'" (lib/types.ml[514,16982+11]..[514,16982+13])
                  ]
    ]
  structure_item (lib/types.ml[518,17047+0]..[521,17095+11])
    Pstr_type Rec
    [
      type_declaration "field_kind_view" (lib/types.ml[518,17047+5]..[518,17047+20]) (lib/types.ml[518,17047+0]..[521,17095+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[519,17070+4]..[519,17070+12])
                "Fprivate" (lib/types.ml[519,17070+4]..[519,17070+12])
                []
                None
              (lib/types.ml[520,17083+2]..[520,17083+11])
                "Fpublic" (lib/types.ml[520,17083+4]..[520,17083+11])
                []
                None
              (lib/types.ml[521,17095+2]..[521,17095+11])
                "Fabsent" (lib/types.ml[521,17095+4]..[521,17095+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[523,17108+0]..[526,17277+16])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[523,17108+8]..[523,17108+32])
          Ppat_var "field_kind_internal_repr" (lib/types.ml[523,17108+8]..[523,17108+32])
        core_type (lib/types.ml[523,17108+35]..[523,17108+59])
          Ptyp_arrow
          Nolabel
          core_type (lib/types.ml[523,17108+35]..[523,17108+45])
            Ptyp_constr "field_kind" (lib/types.ml[523,17108+35]..[523,17108+45])
            []
          core_type (lib/types.ml[523,17108+49]..[523,17108+59])
            Ptyp_constr "field_kind" (lib/types.ml[523,17108+49]..[523,17108+59])
            []
        expression (lib/types.ml[523,17108+62]..[526,17277+16])
          Pexp_function
          []
          None
          Pfunction_cases (lib/types.ml[523,17108+62]..[526,17277+16])
            [
              <case>
                pattern (lib/types.ml[524,17179+4]..[524,17179+60])
                  Ppat_construct "FKvar" (lib/types.ml[524,17179+4]..[524,17179+9])
                  Some
                    []
                    pattern (lib/types.ml[524,17179+10]..[524,17179+60])
                      Ppat_record Closed
                      [
                        "field_kind" (lib/types.ml[524,17179+11]..[524,17179+21])
                          pattern (lib/types.ml[524,17179+24]..[524,17179+59])
                            Ppat_alias "fk" (lib/types.ml[524,17179+57]..[524,17179+59])
                            pattern (lib/types.ml[524,17179+24]..[524,17179+53])
                              Ppat_or
                              pattern (lib/types.ml[524,17179+24]..[524,17179+42])
                                Ppat_or
                                pattern (lib/types.ml[524,17179+24]..[524,17179+31])
                                  Ppat_construct "FKvar" (lib/types.ml[524,17179+24]..[524,17179+29])
                                  Some
                                    []
                                    pattern (lib/types.ml[524,17179+30]..[524,17179+31])
                                      Ppat_any
                                pattern (lib/types.ml[524,17179+34]..[524,17179+42])
                                  Ppat_construct "FKpublic" (lib/types.ml[524,17179+34]..[524,17179+42])
                                  None
                              pattern (lib/types.ml[524,17179+45]..[524,17179+53])
                                Ppat_construct "FKabsent" (lib/types.ml[524,17179+45]..[524,17179+53])
                                None
                      ]
                expression (lib/types.ml[525,17243+6]..[525,17243+33])
                  Pexp_apply
                  expression (lib/types.ml[525,17243+6]..[525,17243+30])
                    Pexp_ident "field_kind_internal_repr" (lib/types.ml[525,17243+6]..[525,17243+30])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[525,17243+31]..[525,17243+33])
                        Pexp_ident "fk" (lib/types.ml[525,17243+31]..[525,17243+33])
                  ]
              <case>
                pattern (lib/types.ml[526,17277+4]..[526,17277+8])
                  Ppat_var "kind" (lib/types.ml[526,17277+4]..[526,17277+8])
                expression (lib/types.ml[526,17277+12]..[526,17277+16])
                  Pexp_ident "kind" (lib/types.ml[526,17277+12]..[526,17277+16])
            ]
    ]
  structure_item (lib/types.ml[528,17295+0]..[532,17409+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[528,17295+4]..[528,17295+19])
          Ppat_var "field_kind_repr" (lib/types.ml[528,17295+4]..[528,17295+19])
        expression (lib/types.ml[528,17295+20]..[532,17409+23]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[528,17295+20]..[528,17295+22])
              Nolabel
              None
              pattern (lib/types.ml[528,17295+20]..[528,17295+22])
                Ppat_var "fk" (lib/types.ml[528,17295+20]..[528,17295+22])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[529,17320+2]..[532,17409+23])
              Pexp_match
              expression (lib/types.ml[529,17320+8]..[529,17320+35])
                Pexp_apply
                expression (lib/types.ml[529,17320+8]..[529,17320+32])
                  Pexp_ident "field_kind_internal_repr" (lib/types.ml[529,17320+8]..[529,17320+32])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[529,17320+33]..[529,17320+35])
                      Pexp_ident "fk" (lib/types.ml[529,17320+33]..[529,17320+35])
                ]
              [
                <case>
                  pattern (lib/types.ml[530,17361+4]..[530,17361+11])
                    Ppat_construct "FKvar" (lib/types.ml[530,17361+4]..[530,17361+9])
                    Some
                      []
                      pattern (lib/types.ml[530,17361+10]..[530,17361+11])
                        Ppat_any
                  expression (lib/types.ml[530,17361+15]..[530,17361+23])
                    Pexp_construct "Fprivate" (lib/types.ml[530,17361+15]..[530,17361+23])
                    None
                <case>
                  pattern (lib/types.ml[531,17385+4]..[531,17385+12])
                    Ppat_construct "FKpublic" (lib/types.ml[531,17385+4]..[531,17385+12])
                    None
                  expression (lib/types.ml[531,17385+16]..[531,17385+23])
                    Pexp_construct "Fpublic" (lib/types.ml[531,17385+16]..[531,17385+23])
                    None
                <case>
                  pattern (lib/types.ml[532,17409+4]..[532,17409+12])
                    Ppat_construct "FKabsent" (lib/types.ml[532,17409+4]..[532,17409+12])
                    None
                  expression (lib/types.ml[532,17409+16]..[532,17409+23])
                    Pexp_construct "Fabsent" (lib/types.ml[532,17409+16]..[532,17409+23])
                    None
              ]
    ]
  structure_item (lib/types.ml[534,17434+0]..[534,17434+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[534,17434+4]..[534,17434+16])
          Ppat_var "field_public" (lib/types.ml[534,17434+4]..[534,17434+16])
        expression (lib/types.ml[534,17434+19]..[534,17434+27])
          Pexp_construct "FKpublic" (lib/types.ml[534,17434+19]..[534,17434+27])
          None
    ]
  structure_item (lib/types.ml[535,17462+0]..[535,17462+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[535,17462+4]..[535,17462+16])
          Ppat_var "field_absent" (lib/types.ml[535,17462+4]..[535,17462+16])
        expression (lib/types.ml[535,17462+19]..[535,17462+27])
          Pexp_construct "FKabsent" (lib/types.ml[535,17462+19]..[535,17462+27])
          None
    ]
  structure_item (lib/types.ml[536,17490+0]..[536,17490+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[536,17490+4]..[536,17490+17])
          Ppat_var "field_private" (lib/types.ml[536,17490+4]..[536,17490+17])
        expression (lib/types.ml[536,17490+18]..[536,17490+51]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[536,17490+18]..[536,17490+20])
              Nolabel
              None
              pattern (lib/types.ml[536,17490+18]..[536,17490+20])
                Ppat_construct "()" (lib/types.ml[536,17490+18]..[536,17490+20])
                None
          ]
          None
          Pfunction_body
            expression (lib/types.ml[536,17490+23]..[536,17490+51])
              Pexp_construct "FKvar" (lib/types.ml[536,17490+23]..[536,17490+28])
              Some
                expression (lib/types.ml[536,17490+29]..[536,17490+51])
                  Pexp_record
                  [
                    "field_kind" (lib/types.ml[536,17490+30]..[536,17490+40])
                      expression (lib/types.ml[536,17490+41]..[536,17490+50])
                        Pexp_construct "FKprivate" (lib/types.ml[536,17490+41]..[536,17490+50])
                        None
                  ]
                  None
    ]
  structure_item (lib/types.ml[540,17593+0]..[543,17719+15])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[540,17593+8]..[540,17593+19])
          Ppat_var "is_commu_ok" (lib/types.ml[540,17593+8]..[540,17593+19])
        <type> "a" (lib/types.ml[540,17593+27]..[540,17593+28]).
        core_type (lib/types.ml[540,17593+30]..[540,17593+54])
          Ptyp_arrow
          Nolabel
          core_type (lib/types.ml[540,17593+30]..[540,17593+46])
            Ptyp_constr "commutable_gen" (lib/types.ml[540,17593+32]..[540,17593+46])
            [
              core_type (lib/types.ml[540,17593+30]..[540,17593+31])
                Ptyp_constr "a" (lib/types.ml[540,17593+30]..[540,17593+31])
                []
            ]
          core_type (lib/types.ml[540,17593+50]..[540,17593+54])
            Ptyp_constr "bool" (lib/types.ml[540,17593+50]..[540,17593+54])
            []
        expression (lib/types.ml[540,17593+57]..[543,17719+15])
          Pexp_function
          []
          None
          Pfunction_cases (lib/types.ml[540,17593+57]..[543,17719+15])
            [
              <case>
                pattern (lib/types.ml[541,17659+4]..[541,17659+16])
                  Ppat_construct "Cvar" (lib/types.ml[541,17659+4]..[541,17659+8])
                  Some
                    []
                    pattern (lib/types.ml[541,17659+9]..[541,17659+16])
                      Ppat_record Closed
                      [
                        "commu" (lib/types.ml[541,17659+10]..[541,17659+15]) ghost
                          pattern (lib/types.ml[541,17659+10]..[541,17659+15])
                            Ppat_var "commu" (lib/types.ml[541,17659+10]..[541,17659+15])
                      ]
                expression (lib/types.ml[541,17659+20]..[541,17659+37])
                  Pexp_apply
                  expression (lib/types.ml[541,17659+20]..[541,17659+31])
                    Pexp_ident "is_commu_ok" (lib/types.ml[541,17659+20]..[541,17659+31])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[541,17659+32]..[541,17659+37])
                        Pexp_ident "commu" (lib/types.ml[541,17659+32]..[541,17659+37])
                  ]
              <case>
                pattern (lib/types.ml[542,17697+4]..[542,17697+12])
                  Ppat_construct "Cunknown" (lib/types.ml[542,17697+4]..[542,17697+12])
                  None
                expression (lib/types.ml[542,17697+16]..[542,17697+21])
                  Pexp_construct "false" (lib/types.ml[542,17697+16]..[542,17697+21])
                  None
              <case>
                pattern (lib/types.ml[543,17719+4]..[543,17719+7])
                  Ppat_construct "Cok" (lib/types.ml[543,17719+4]..[543,17719+7])
                  None
                expression (lib/types.ml[543,17719+11]..[543,17719+15])
                  Pexp_construct "true" (lib/types.ml[543,17719+11]..[543,17719+15])
                  None
            ]
    ]
  structure_item (lib/types.ml[545,17736+0]..[545,17736+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[545,17736+4]..[545,17736+12])
          Ppat_var "commu_ok" (lib/types.ml[545,17736+4]..[545,17736+12])
        expression (lib/types.ml[545,17736+15]..[545,17736+18])
          Pexp_construct "Cok" (lib/types.ml[545,17736+15]..[545,17736+18])
          None
    ]
  structure_item (lib/types.ml[546,17755+0]..[546,17755+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[546,17755+4]..[546,17755+13])
          Ppat_var "commu_var" (lib/types.ml[546,17755+4]..[546,17755+13])
        expression (lib/types.ml[546,17755+14]..[546,17755+40]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[546,17755+14]..[546,17755+16])
              Nolabel
              None
              pattern (lib/types.ml[546,17755+14]..[546,17755+16])
                Ppat_construct "()" (lib/types.ml[546,17755+14]..[546,17755+16])
                None
          ]
          None
          Pfunction_body
            expression (lib/types.ml[546,17755+19]..[546,17755+40])
              Pexp_construct "Cvar" (lib/types.ml[546,17755+19]..[546,17755+23])
              Some
                expression (lib/types.ml[546,17755+24]..[546,17755+40])
                  Pexp_record
                  [
                    "commu" (lib/types.ml[546,17755+25]..[546,17755+30])
                      expression (lib/types.ml[546,17755+31]..[546,17755+39])
                        Pexp_construct "Cunknown" (lib/types.ml[546,17755+31]..[546,17755+39])
                        None
                  ]
                  None
    ]
  structure_item (lib/types.ml[550,17835+0]..[560,18143+7])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[550,17835+8]..[550,17835+17])
          Ppat_var "repr_link" (lib/types.ml[550,17835+8]..[550,17835+17])
        expression (lib/types.ml[550,17835+18]..[560,18143+7]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[550,17835+18]..[550,17835+33])
              Nolabel
              None
              pattern (lib/types.ml[550,17835+18]..[550,17835+33])
                Ppat_constraint
                pattern (lib/types.ml[550,17835+19]..[550,17835+20])
                  Ppat_var "t" (lib/types.ml[550,17835+19]..[550,17835+20])
                core_type (lib/types.ml[550,17835+23]..[550,17835+32])
                  Ptyp_constr "type_expr" (lib/types.ml[550,17835+23]..[550,17835+32])
                  []
            Pparam_val (lib/types.ml[550,17835+34]..[550,17835+35])
              Nolabel
              None
              pattern (lib/types.ml[550,17835+34]..[550,17835+35])
                Ppat_var "d" (lib/types.ml[550,17835+34]..[550,17835+35])
          ]
          Some
            Pconstraint
              core_type (lib/types.ml[550,17835+38]..[550,17835+60])
                Ptyp_arrow
                Nolabel
                core_type (lib/types.ml[550,17835+38]..[550,17835+47])
                  Ptyp_constr "type_expr" (lib/types.ml[550,17835+38]..[550,17835+47])
                  []
                core_type (lib/types.ml[550,17835+51]..[550,17835+60])
                  Ptyp_constr "type_expr" (lib/types.ml[550,17835+51]..[550,17835+60])
                  []
          Pfunction_cases (lib/types.ml[551,17898+1]..[560,18143+7])
            [
              <case>
                pattern (lib/types.ml[552,17908+3]..[552,17908+26])
                  Ppat_record Closed
                  [
                    "desc" (lib/types.ml[552,17908+4]..[552,17908+8])
                      pattern (lib/types.ml[552,17908+11]..[552,17908+25])
                        Ppat_alias "d'" (lib/types.ml[552,17908+23]..[552,17908+25])
                        pattern (lib/types.ml[552,17908+11]..[552,17908+19])
                          Ppat_construct "Tlink" (lib/types.ml[552,17908+11]..[552,17908+16])
                          Some
                            []
                            pattern (lib/types.ml[552,17908+17]..[552,17908+19])
                              Ppat_var "t'" (lib/types.ml[552,17908+17]..[552,17908+19])
                  ]
                expression (lib/types.ml[553,17938+5]..[553,17938+22])
                  Pexp_apply
                  expression (lib/types.ml[553,17938+5]..[553,17938+14])
                    Pexp_ident "repr_link" (lib/types.ml[553,17938+5]..[553,17938+14])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[553,17938+15]..[553,17938+16])
                        Pexp_ident "t" (lib/types.ml[553,17938+15]..[553,17938+16])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[553,17938+17]..[553,17938+19])
                        Pexp_ident "d'" (lib/types.ml[553,17938+17]..[553,17938+19])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[553,17938+20]..[553,17938+22])
                        Pexp_ident "t'" (lib/types.ml[553,17938+20]..[553,17938+22])
                  ]
              <case>
                pattern (lib/types.ml[554,17961+3]..[554,17961+38])
                  Ppat_record Closed
                  [
                    "desc" (lib/types.ml[554,17961+4]..[554,17961+8])
                      pattern (lib/types.ml[554,17961+11]..[554,17961+37])
                        Ppat_alias "d'" (lib/types.ml[554,17961+35]..[554,17961+37])
                        pattern (lib/types.ml[554,17961+11]..[554,17961+31])
                          Ppat_construct "Tfield" (lib/types.ml[554,17961+11]..[554,17961+17])
                          Some
                            []
                            pattern (lib/types.ml[554,17961+18]..[554,17961+31])
                              Ppat_tuple
                              [
                                pattern (lib/types.ml[554,17961+19]..[554,17961+20])
                                  Ppat_any
                                pattern (lib/types.ml[554,17961+22]..[554,17961+23])
                                  Ppat_var "k" (lib/types.ml[554,17961+22]..[554,17961+23])
                                pattern (lib/types.ml[554,17961+25]..[554,17961+26])
                                  Ppat_any
                                pattern (lib/types.ml[554,17961+28]..[554,17961+30])
                                  Ppat_var "t'" (lib/types.ml[554,17961+28]..[554,17961+30])
                              ]
                  ]
                <when>
                  expression (lib/types.ml[555,18000+8]..[555,18000+45])
                    Pexp_apply
                    expression (lib/types.ml[555,18000+35]..[555,18000+36])
                      Pexp_ident "=" (lib/types.ml[555,18000+35]..[555,18000+36])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[555,18000+8]..[555,18000+34])
                          Pexp_apply
                          expression (lib/types.ml[555,18000+8]..[555,18000+32])
                            Pexp_ident "field_kind_internal_repr" (lib/types.ml[555,18000+8]..[555,18000+32])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[555,18000+33]..[555,18000+34])
                                Pexp_ident "k" (lib/types.ml[555,18000+33]..[555,18000+34])
                          ]
                      <arg>
                      Nolabel
                        expression (lib/types.ml[555,18000+37]..[555,18000+45])
                          Pexp_construct "FKabsent" (lib/types.ml[555,18000+37]..[555,18000+45])
                          None
                    ]
                expression (lib/types.ml[556,18049+5]..[556,18049+22])
                  Pexp_apply
                  expression (lib/types.ml[556,18049+5]..[556,18049+14])
                    Pexp_ident "repr_link" (lib/types.ml[556,18049+5]..[556,18049+14])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[556,18049+15]..[556,18049+16])
                        Pexp_ident "t" (lib/types.ml[556,18049+15]..[556,18049+16])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[556,18049+17]..[556,18049+19])
                        Pexp_ident "d'" (lib/types.ml[556,18049+17]..[556,18049+19])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[556,18049+20]..[556,18049+22])
                        Pexp_ident "t'" (lib/types.ml[556,18049+20]..[556,18049+22])
                  ]
              <case>
                pattern (lib/types.ml[557,18072+3]..[557,18072+5])
                  Ppat_var "t'" (lib/types.ml[557,18072+3]..[557,18072+5])
                expression (lib/types.ml[558,18081+5]..[560,18143+7])
                  Pexp_sequence
                  expression (lib/types.ml[558,18081+5]..[558,18081+42])
                    Pexp_apply
                    expression (lib/types.ml[558,18081+5]..[558,18081+15])
                      Pexp_ident "log_change" (lib/types.ml[558,18081+5]..[558,18081+15])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[558,18081+16]..[558,18081+42])
                          Pexp_construct "Ccompress" (lib/types.ml[558,18081+17]..[558,18081+26])
                          Some
                            expression (lib/types.ml[558,18081+27]..[558,18081+41])
                              Pexp_tuple
                              [
                                expression (lib/types.ml[558,18081+28]..[558,18081+29])
                                  Pexp_ident "t" (lib/types.ml[558,18081+28]..[558,18081+29])
                                expression (lib/types.ml[558,18081+31]..[558,18081+37])
                                  Pexp_field
                                  expression (lib/types.ml[558,18081+31]..[558,18081+32])
                                    Pexp_ident "t" (lib/types.ml[558,18081+31]..[558,18081+32])
                                  "desc" (lib/types.ml[558,18081+33]..[558,18081+37])
                                expression (lib/types.ml[558,18081+39]..[558,18081+40])
                                  Pexp_ident "d" (lib/types.ml[558,18081+39]..[558,18081+40])
                              ]
                    ]
                  expression (lib/types.ml[559,18125+5]..[560,18143+7])
                    Pexp_sequence
                    expression (lib/types.ml[559,18125+5]..[559,18125+16])
                      Pexp_setfield
                      expression (lib/types.ml[559,18125+5]..[559,18125+6])
                        Pexp_ident "t" (lib/types.ml[559,18125+5]..[559,18125+6])
                      "desc" (lib/types.ml[559,18125+7]..[559,18125+11])
                      expression (lib/types.ml[559,18125+15]..[559,18125+16])
                        Pexp_ident "d" (lib/types.ml[559,18125+15]..[559,18125+16])
                    expression (lib/types.ml[560,18143+5]..[560,18143+7])
                      Pexp_ident "t'" (lib/types.ml[560,18143+5]..[560,18143+7])
            ]
    ]
  structure_item (lib/types.ml[562,18152+0]..[568,18344+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[562,18152+4]..[562,18152+14])
          Ppat_var "repr_link1" (lib/types.ml[562,18152+4]..[562,18152+14])
        expression (lib/types.ml[562,18152+15]..[568,18344+11]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[562,18152+15]..[562,18152+16])
              Nolabel
              None
              pattern (lib/types.ml[562,18152+15]..[562,18152+16])
                Ppat_var "t" (lib/types.ml[562,18152+15]..[562,18152+16])
          ]
          None
          Pfunction_cases (lib/types.ml[562,18152+19]..[568,18344+11])
            [
              <case>
                pattern (lib/types.ml[563,18180+3]..[563,18180+26])
                  Ppat_record Closed
                  [
                    "desc" (lib/types.ml[563,18180+4]..[563,18180+8])
                      pattern (lib/types.ml[563,18180+11]..[563,18180+25])
                        Ppat_alias "d'" (lib/types.ml[563,18180+23]..[563,18180+25])
                        pattern (lib/types.ml[563,18180+11]..[563,18180+19])
                          Ppat_construct "Tlink" (lib/types.ml[563,18180+11]..[563,18180+16])
                          Some
                            []
                            pattern (lib/types.ml[563,18180+17]..[563,18180+19])
                              Ppat_var "t'" (lib/types.ml[563,18180+17]..[563,18180+19])
                  ]
                expression (lib/types.ml[564,18210+5]..[564,18210+22])
                  Pexp_apply
                  expression (lib/types.ml[564,18210+5]..[564,18210+14])
                    Pexp_ident "repr_link" (lib/types.ml[564,18210+5]..[564,18210+14])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[564,18210+15]..[564,18210+16])
                        Pexp_ident "t" (lib/types.ml[564,18210+15]..[564,18210+16])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[564,18210+17]..[564,18210+19])
                        Pexp_ident "d'" (lib/types.ml[564,18210+17]..[564,18210+19])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[564,18210+20]..[564,18210+22])
                        Pexp_ident "t'" (lib/types.ml[564,18210+20]..[564,18210+22])
                  ]
              <case>
                pattern (lib/types.ml[565,18233+3]..[565,18233+38])
                  Ppat_record Closed
                  [
                    "desc" (lib/types.ml[565,18233+4]..[565,18233+8])
                      pattern (lib/types.ml[565,18233+11]..[565,18233+37])
                        Ppat_alias "d'" (lib/types.ml[565,18233+35]..[565,18233+37])
                        pattern (lib/types.ml[565,18233+11]..[565,18233+31])
                          Ppat_construct "Tfield" (lib/types.ml[565,18233+11]..[565,18233+17])
                          Some
                            []
                            pattern (lib/types.ml[565,18233+18]..[565,18233+31])
                              Ppat_tuple
                              [
                                pattern (lib/types.ml[565,18233+19]..[565,18233+20])
                                  Ppat_any
                                pattern (lib/types.ml[565,18233+22]..[565,18233+23])
                                  Ppat_var "k" (lib/types.ml[565,18233+22]..[565,18233+23])
                                pattern (lib/types.ml[565,18233+25]..[565,18233+26])
                                  Ppat_any
                                pattern (lib/types.ml[565,18233+28]..[565,18233+30])
                                  Ppat_var "t'" (lib/types.ml[565,18233+28]..[565,18233+30])
                              ]
                  ]
                <when>
                  expression (lib/types.ml[566,18272+8]..[566,18272+45])
                    Pexp_apply
                    expression (lib/types.ml[566,18272+35]..[566,18272+36])
                      Pexp_ident "=" (lib/types.ml[566,18272+35]..[566,18272+36])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[566,18272+8]..[566,18272+34])
                          Pexp_apply
                          expression (lib/types.ml[566,18272+8]..[566,18272+32])
                            Pexp_ident "field_kind_internal_repr" (lib/types.ml[566,18272+8]..[566,18272+32])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[566,18272+33]..[566,18272+34])
                                Pexp_ident "k" (lib/types.ml[566,18272+33]..[566,18272+34])
                          ]
                      <arg>
                      Nolabel
                        expression (lib/types.ml[566,18272+37]..[566,18272+45])
                          Pexp_construct "FKabsent" (lib/types.ml[566,18272+37]..[566,18272+45])
                          None
                    ]
                expression (lib/types.ml[567,18321+5]..[567,18321+22])
                  Pexp_apply
                  expression (lib/types.ml[567,18321+5]..[567,18321+14])
                    Pexp_ident "repr_link" (lib/types.ml[567,18321+5]..[567,18321+14])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[567,18321+15]..[567,18321+16])
                        Pexp_ident "t" (lib/types.ml[567,18321+15]..[567,18321+16])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[567,18321+17]..[567,18321+19])
                        Pexp_ident "d'" (lib/types.ml[567,18321+17]..[567,18321+19])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[567,18321+20]..[567,18321+22])
                        Pexp_ident "t'" (lib/types.ml[567,18321+20]..[567,18321+22])
                  ]
              <case>
                pattern (lib/types.ml[568,18344+3]..[568,18344+5])
                  Ppat_var "t'" (lib/types.ml[568,18344+3]..[568,18344+5])
                expression (lib/types.ml[568,18344+9]..[568,18344+11])
                  Pexp_ident "t'" (lib/types.ml[568,18344+9]..[568,18344+11])
            ]
    ]
  structure_item (lib/types.ml[570,18357+0]..[576,18517+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[570,18357+4]..[570,18357+8])
          Ppat_var "repr" (lib/types.ml[570,18357+4]..[570,18357+8])
        expression (lib/types.ml[570,18357+9]..[576,18517+9]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[570,18357+9]..[570,18357+10])
              Nolabel
              None
              pattern (lib/types.ml[570,18357+9]..[570,18357+10])
                Ppat_var "t" (lib/types.ml[570,18357+9]..[570,18357+10])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[571,18370+2]..[576,18517+9])
              Pexp_match
              expression (lib/types.ml[571,18370+8]..[571,18370+14])
                Pexp_field
                expression (lib/types.ml[571,18370+8]..[571,18370+9])
                  Pexp_ident "t" (lib/types.ml[571,18370+8]..[571,18370+9])
                "desc" (lib/types.ml[571,18370+10]..[571,18370+14])
              [
                <case>
                  pattern (lib/types.ml[572,18390+3]..[572,18390+11])
                    Ppat_construct "Tlink" (lib/types.ml[572,18390+3]..[572,18390+8])
                    Some
                      []
                      pattern (lib/types.ml[572,18390+9]..[572,18390+11])
                        Ppat_var "t'" (lib/types.ml[572,18390+9]..[572,18390+11])
                  expression (lib/types.ml[573,18405+5]..[573,18405+20])
                    Pexp_apply
                    expression (lib/types.ml[573,18405+5]..[573,18405+15])
                      Pexp_ident "repr_link1" (lib/types.ml[573,18405+5]..[573,18405+15])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[573,18405+16]..[573,18405+17])
                          Pexp_ident "t" (lib/types.ml[573,18405+16]..[573,18405+17])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[573,18405+18]..[573,18405+20])
                          Pexp_ident "t'" (lib/types.ml[573,18405+18]..[573,18405+20])
                    ]
                <case>
                  pattern (lib/types.ml[574,18426+3]..[574,18426+23])
                    Ppat_construct "Tfield" (lib/types.ml[574,18426+3]..[574,18426+9])
                    Some
                      []
                      pattern (lib/types.ml[574,18426+10]..[574,18426+23])
                        Ppat_tuple
                        [
                          pattern (lib/types.ml[574,18426+11]..[574,18426+12])
                            Ppat_any
                          pattern (lib/types.ml[574,18426+14]..[574,18426+15])
                            Ppat_var "k" (lib/types.ml[574,18426+14]..[574,18426+15])
                          pattern (lib/types.ml[574,18426+17]..[574,18426+18])
                            Ppat_any
                          pattern (lib/types.ml[574,18426+20]..[574,18426+22])
                            Ppat_var "t'" (lib/types.ml[574,18426+20]..[574,18426+22])
                        ]
                  <when>
                    expression (lib/types.ml[574,18426+29]..[574,18426+66])
                      Pexp_apply
                      expression (lib/types.ml[574,18426+56]..[574,18426+57])
                        Pexp_ident "=" (lib/types.ml[574,18426+56]..[574,18426+57])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[574,18426+29]..[574,18426+55])
                            Pexp_apply
                            expression (lib/types.ml[574,18426+29]..[574,18426+53])
                              Pexp_ident "field_kind_internal_repr" (lib/types.ml[574,18426+29]..[574,18426+53])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[574,18426+54]..[574,18426+55])
                                  Pexp_ident "k" (lib/types.ml[574,18426+54]..[574,18426+55])
                            ]
                        <arg>
                        Nolabel
                          expression (lib/types.ml[574,18426+58]..[574,18426+66])
                            Pexp_construct "FKabsent" (lib/types.ml[574,18426+58]..[574,18426+66])
                            None
                      ]
                  expression (lib/types.ml[575,18496+5]..[575,18496+20])
                    Pexp_apply
                    expression (lib/types.ml[575,18496+5]..[575,18496+15])
                      Pexp_ident "repr_link1" (lib/types.ml[575,18496+5]..[575,18496+15])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[575,18496+16]..[575,18496+17])
                          Pexp_ident "t" (lib/types.ml[575,18496+16]..[575,18496+17])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[575,18496+18]..[575,18496+20])
                          Pexp_ident "t'" (lib/types.ml[575,18496+18]..[575,18496+20])
                    ]
                <case>
                  pattern (lib/types.ml[576,18517+3]..[576,18517+4])
                    Ppat_any
                  expression (lib/types.ml[576,18517+8]..[576,18517+9])
                    Pexp_ident "t" (lib/types.ml[576,18517+8]..[576,18517+9])
              ]
    ]
  structure_item (lib/types.ml[580,18557+0]..[580,18557+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[580,18557+4]..[580,18557+12])
          Ppat_var "get_desc" (lib/types.ml[580,18557+4]..[580,18557+12])
        expression (lib/types.ml[580,18557+13]..[580,18557+30]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[580,18557+13]..[580,18557+14])
              Nolabel
              None
              pattern (lib/types.ml[580,18557+13]..[580,18557+14])
                Ppat_var "t" (lib/types.ml[580,18557+13]..[580,18557+14])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[580,18557+17]..[580,18557+30])
              Pexp_field
              expression (lib/types.ml[580,18557+17]..[580,18557+25])
                Pexp_apply
                expression (lib/types.ml[580,18557+18]..[580,18557+22])
                  Pexp_ident "repr" (lib/types.ml[580,18557+18]..[580,18557+22])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[580,18557+23]..[580,18557+24])
                      Pexp_ident "t" (lib/types.ml[580,18557+23]..[580,18557+24])
                ]
              "desc" (lib/types.ml[580,18557+26]..[580,18557+30])
    ]
  structure_item (lib/types.ml[581,18588+0]..[581,18588+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[581,18588+4]..[581,18588+13])
          Ppat_var "get_level" (lib/types.ml[581,18588+4]..[581,18588+13])
        expression (lib/types.ml[581,18588+14]..[581,18588+32]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[581,18588+14]..[581,18588+15])
              Nolabel
              None
              pattern (lib/types.ml[581,18588+14]..[581,18588+15])
                Ppat_var "t" (lib/types.ml[581,18588+14]..[581,18588+15])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[581,18588+18]..[581,18588+32])
              Pexp_field
              expression (lib/types.ml[581,18588+18]..[581,18588+26])
                Pexp_apply
                expression (lib/types.ml[581,18588+19]..[581,18588+23])
                  Pexp_ident "repr" (lib/types.ml[581,18588+19]..[581,18588+23])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[581,18588+24]..[581,18588+25])
                      Pexp_ident "t" (lib/types.ml[581,18588+24]..[581,18588+25])
                ]
              "level" (lib/types.ml[581,18588+27]..[581,18588+32])
    ]
  structure_item (lib/types.ml[582,18621+0]..[582,18621+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[582,18621+4]..[582,18621+13])
          Ppat_var "get_scope" (lib/types.ml[582,18621+4]..[582,18621+13])
        expression (lib/types.ml[582,18621+14]..[582,18621+32]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[582,18621+14]..[582,18621+15])
              Nolabel
              None
              pattern (lib/types.ml[582,18621+14]..[582,18621+15])
                Ppat_var "t" (lib/types.ml[582,18621+14]..[582,18621+15])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[582,18621+18]..[582,18621+32])
              Pexp_field
              expression (lib/types.ml[582,18621+18]..[582,18621+26])
                Pexp_apply
                expression (lib/types.ml[582,18621+19]..[582,18621+23])
                  Pexp_ident "repr" (lib/types.ml[582,18621+19]..[582,18621+23])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[582,18621+24]..[582,18621+25])
                      Pexp_ident "t" (lib/types.ml[582,18621+24]..[582,18621+25])
                ]
              "scope" (lib/types.ml[582,18621+27]..[582,18621+32])
    ]
  structure_item (lib/types.ml[583,18654+0]..[583,18654+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[583,18654+4]..[583,18654+10])
          Ppat_var "get_id" (lib/types.ml[583,18654+4]..[583,18654+10])
        expression (lib/types.ml[583,18654+11]..[583,18654+26]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[583,18654+11]..[583,18654+12])
              Nolabel
              None
              pattern (lib/types.ml[583,18654+11]..[583,18654+12])
                Ppat_var "t" (lib/types.ml[583,18654+11]..[583,18654+12])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[583,18654+15]..[583,18654+26])
              Pexp_field
              expression (lib/types.ml[583,18654+15]..[583,18654+23])
                Pexp_apply
                expression (lib/types.ml[583,18654+16]..[583,18654+20])
                  Pexp_ident "repr" (lib/types.ml[583,18654+16]..[583,18654+20])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[583,18654+21]..[583,18654+22])
                      Pexp_ident "t" (lib/types.ml[583,18654+21]..[583,18654+22])
                ]
              "id" (lib/types.ml[583,18654+24]..[583,18654+26])
    ]
  structure_item (lib/types.ml[587,18709+0]..[596,19049+3])
    Pstr_module
    "Transient_expr" (lib/types.ml[587,18709+7]..[587,18709+21])
      module_expr (lib/types.ml[587,18709+24]..[596,19049+3])
        Pmod_structure
        [
          structure_item (lib/types.ml[588,18740+2]..[588,18740+62])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[588,18740+6]..[588,18740+12])
                  Ppat_var "create" (lib/types.ml[588,18740+6]..[588,18740+12])
                expression (lib/types.ml[588,18740+13]..[588,18740+62]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[588,18740+13]..[588,18740+17])
                      Nolabel
                      None
                      pattern (lib/types.ml[588,18740+13]..[588,18740+17])
                        Ppat_var "desc" (lib/types.ml[588,18740+13]..[588,18740+17])
                    Pparam_val (lib/types.ml[588,18740+18]..[588,18740+24])
                      Labelled "level"
                      None
                      pattern (lib/types.ml[588,18740+19]..[588,18740+24])
                        Ppat_var "level" (lib/types.ml[588,18740+19]..[588,18740+24])
                    Pparam_val (lib/types.ml[588,18740+25]..[588,18740+31])
                      Labelled "scope"
                      None
                      pattern (lib/types.ml[588,18740+26]..[588,18740+31])
                        Ppat_var "scope" (lib/types.ml[588,18740+26]..[588,18740+31])
                    Pparam_val (lib/types.ml[588,18740+32]..[588,18740+35])
                      Labelled "id"
                      None
                      pattern (lib/types.ml[588,18740+33]..[588,18740+35])
                        Ppat_var "id" (lib/types.ml[588,18740+33]..[588,18740+35])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[588,18740+38]..[588,18740+62])
                      Pexp_record
                      [
                        "desc" (lib/types.ml[588,18740+39]..[588,18740+43]) ghost
                          expression (lib/types.ml[588,18740+39]..[588,18740+43])
                            Pexp_ident "desc" (lib/types.ml[588,18740+39]..[588,18740+43])
                        "level" (lib/types.ml[588,18740+45]..[588,18740+50]) ghost
                          expression (lib/types.ml[588,18740+45]..[588,18740+50])
                            Pexp_ident "level" (lib/types.ml[588,18740+45]..[588,18740+50])
                        "scope" (lib/types.ml[588,18740+52]..[588,18740+57]) ghost
                          expression (lib/types.ml[588,18740+52]..[588,18740+57])
                            Pexp_ident "scope" (lib/types.ml[588,18740+52]..[588,18740+57])
                        "id" (lib/types.ml[588,18740+59]..[588,18740+61]) ghost
                          expression (lib/types.ml[588,18740+59]..[588,18740+61])
                            Pexp_ident "id" (lib/types.ml[588,18740+59]..[588,18740+61])
                      ]
                      None
            ]
          structure_item (lib/types.ml[589,18803+2]..[589,18803+34])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[589,18803+6]..[589,18803+14])
                  Ppat_var "set_desc" (lib/types.ml[589,18803+6]..[589,18803+14])
                expression (lib/types.ml[589,18803+15]..[589,18803+34]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[589,18803+15]..[589,18803+17])
                      Nolabel
                      None
                      pattern (lib/types.ml[589,18803+15]..[589,18803+17])
                        Ppat_var "ty" (lib/types.ml[589,18803+15]..[589,18803+17])
                    Pparam_val (lib/types.ml[589,18803+18]..[589,18803+19])
                      Nolabel
                      None
                      pattern (lib/types.ml[589,18803+18]..[589,18803+19])
                        Ppat_var "d" (lib/types.ml[589,18803+18]..[589,18803+19])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[589,18803+22]..[589,18803+34])
                      Pexp_setfield
                      expression (lib/types.ml[589,18803+22]..[589,18803+24])
                        Pexp_ident "ty" (lib/types.ml[589,18803+22]..[589,18803+24])
                      "desc" (lib/types.ml[589,18803+25]..[589,18803+29])
                      expression (lib/types.ml[589,18803+33]..[589,18803+34])
                        Pexp_ident "d" (lib/types.ml[589,18803+33]..[589,18803+34])
            ]
          structure_item (lib/types.ml[590,18838+2]..[590,18838+69])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[590,18838+6]..[590,18838+19])
                  Ppat_var "set_stub_desc" (lib/types.ml[590,18838+6]..[590,18838+19])
                expression (lib/types.ml[590,18838+20]..[590,18838+69]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[590,18838+20]..[590,18838+22])
                      Nolabel
                      None
                      pattern (lib/types.ml[590,18838+20]..[590,18838+22])
                        Ppat_var "ty" (lib/types.ml[590,18838+20]..[590,18838+22])
                    Pparam_val (lib/types.ml[590,18838+23]..[590,18838+24])
                      Nolabel
                      None
                      pattern (lib/types.ml[590,18838+23]..[590,18838+24])
                        Ppat_var "d" (lib/types.ml[590,18838+23]..[590,18838+24])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[590,18838+27]..[590,18838+69])
                      Pexp_sequence
                      expression (lib/types.ml[590,18838+27]..[590,18838+55])
                        Pexp_assert
                        expression (lib/types.ml[590,18838+34]..[590,18838+55])
                          Pexp_apply
                          expression (lib/types.ml[590,18838+43]..[590,18838+44])
                            Pexp_ident "=" (lib/types.ml[590,18838+43]..[590,18838+44])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[590,18838+35]..[590,18838+42])
                                Pexp_field
                                expression (lib/types.ml[590,18838+35]..[590,18838+37])
                                  Pexp_ident "ty" (lib/types.ml[590,18838+35]..[590,18838+37])
                                "desc" (lib/types.ml[590,18838+38]..[590,18838+42])
                            <arg>
                            Nolabel
                              expression (lib/types.ml[590,18838+45]..[590,18838+54])
                                Pexp_construct "Tvar" (lib/types.ml[590,18838+45]..[590,18838+49])
                                Some
                                  expression (lib/types.ml[590,18838+50]..[590,18838+54])
                                    Pexp_construct "None" (lib/types.ml[590,18838+50]..[590,18838+54])
                                    None
                          ]
                      expression (lib/types.ml[590,18838+57]..[590,18838+69])
                        Pexp_setfield
                        expression (lib/types.ml[590,18838+57]..[590,18838+59])
                          Pexp_ident "ty" (lib/types.ml[590,18838+57]..[590,18838+59])
                        "desc" (lib/types.ml[590,18838+60]..[590,18838+64])
                        expression (lib/types.ml[590,18838+68]..[590,18838+69])
                          Pexp_ident "d" (lib/types.ml[590,18838+68]..[590,18838+69])
            ]
          structure_item (lib/types.ml[591,18908+2]..[591,18908+38])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[591,18908+6]..[591,18908+15])
                  Ppat_var "set_level" (lib/types.ml[591,18908+6]..[591,18908+15])
                expression (lib/types.ml[591,18908+16]..[591,18908+38]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[591,18908+16]..[591,18908+18])
                      Nolabel
                      None
                      pattern (lib/types.ml[591,18908+16]..[591,18908+18])
                        Ppat_var "ty" (lib/types.ml[591,18908+16]..[591,18908+18])
                    Pparam_val (lib/types.ml[591,18908+19]..[591,18908+21])
                      Nolabel
                      None
                      pattern (lib/types.ml[591,18908+19]..[591,18908+21])
                        Ppat_var "lv" (lib/types.ml[591,18908+19]..[591,18908+21])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[591,18908+24]..[591,18908+38])
                      Pexp_setfield
                      expression (lib/types.ml[591,18908+24]..[591,18908+26])
                        Pexp_ident "ty" (lib/types.ml[591,18908+24]..[591,18908+26])
                      "level" (lib/types.ml[591,18908+27]..[591,18908+32])
                      expression (lib/types.ml[591,18908+36]..[591,18908+38])
                        Pexp_ident "lv" (lib/types.ml[591,18908+36]..[591,18908+38])
            ]
          structure_item (lib/types.ml[592,18947+2]..[592,18947+38])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[592,18947+6]..[592,18947+15])
                  Ppat_var "set_scope" (lib/types.ml[592,18947+6]..[592,18947+15])
                expression (lib/types.ml[592,18947+16]..[592,18947+38]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[592,18947+16]..[592,18947+18])
                      Nolabel
                      None
                      pattern (lib/types.ml[592,18947+16]..[592,18947+18])
                        Ppat_var "ty" (lib/types.ml[592,18947+16]..[592,18947+18])
                    Pparam_val (lib/types.ml[592,18947+19]..[592,18947+21])
                      Nolabel
                      None
                      pattern (lib/types.ml[592,18947+19]..[592,18947+21])
                        Ppat_var "sc" (lib/types.ml[592,18947+19]..[592,18947+21])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[592,18947+24]..[592,18947+38])
                      Pexp_setfield
                      expression (lib/types.ml[592,18947+24]..[592,18947+26])
                        Pexp_ident "ty" (lib/types.ml[592,18947+24]..[592,18947+26])
                      "scope" (lib/types.ml[592,18947+27]..[592,18947+32])
                      expression (lib/types.ml[592,18947+36]..[592,18947+38])
                        Pexp_ident "sc" (lib/types.ml[592,18947+36]..[592,18947+38])
            ]
          structure_item (lib/types.ml[593,18986+2]..[593,18986+20])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[593,18986+6]..[593,18986+12])
                  Ppat_var "coerce" (lib/types.ml[593,18986+6]..[593,18986+12])
                expression (lib/types.ml[593,18986+13]..[593,18986+20]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[593,18986+13]..[593,18986+15])
                      Nolabel
                      None
                      pattern (lib/types.ml[593,18986+13]..[593,18986+15])
                        Ppat_var "ty" (lib/types.ml[593,18986+13]..[593,18986+15])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[593,18986+18]..[593,18986+20])
                      Pexp_ident "ty" (lib/types.ml[593,18986+18]..[593,18986+20])
            ]
          structure_item (lib/types.ml[594,19007+2]..[594,19007+17])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[594,19007+6]..[594,19007+10])
                  Ppat_var "repr" (lib/types.ml[594,19007+6]..[594,19007+10])
                expression (lib/types.ml[594,19007+13]..[594,19007+17])
                  Pexp_ident "repr" (lib/types.ml[594,19007+13]..[594,19007+17])
            ]
          structure_item (lib/types.ml[595,19025+2]..[595,19025+23])
            Pstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[595,19025+6]..[595,19025+15])
                  Ppat_var "type_expr" (lib/types.ml[595,19025+6]..[595,19025+15])
                expression (lib/types.ml[595,19025+16]..[595,19025+23]) ghost
                  Pexp_function
                  [
                    Pparam_val (lib/types.ml[595,19025+16]..[595,19025+18])
                      Nolabel
                      None
                      pattern (lib/types.ml[595,19025+16]..[595,19025+18])
                        Ppat_var "ty" (lib/types.ml[595,19025+16]..[595,19025+18])
                  ]
                  None
                  Pfunction_body
                    expression (lib/types.ml[595,19025+21]..[595,19025+23])
                      Pexp_ident "ty" (lib/types.ml[595,19025+21]..[595,19025+23])
            ]
        ]
  structure_item (lib/types.ml[600,19117+0]..[600,19117+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[600,19117+4]..[600,19117+11])
          Ppat_var "eq_type" (lib/types.ml[600,19117+4]..[600,19117+11])
        expression (lib/types.ml[600,19117+12]..[600,19117+50]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[600,19117+12]..[600,19117+14])
              Nolabel
              None
              pattern (lib/types.ml[600,19117+12]..[600,19117+14])
                Ppat_var "t1" (lib/types.ml[600,19117+12]..[600,19117+14])
            Pparam_val (lib/types.ml[600,19117+15]..[600,19117+17])
              Nolabel
              None
              pattern (lib/types.ml[600,19117+15]..[600,19117+17])
                Ppat_var "t2" (lib/types.ml[600,19117+15]..[600,19117+17])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[600,19117+20]..[600,19117+50])
              Pexp_apply
              expression (lib/types.ml[600,19117+29]..[600,19117+31])
                Pexp_ident "||" (lib/types.ml[600,19117+29]..[600,19117+31])
              [
                <arg>
                Nolabel
                  expression (lib/types.ml[600,19117+20]..[600,19117+28])
                    Pexp_apply
                    expression (lib/types.ml[600,19117+23]..[600,19117+25])
                      Pexp_ident "==" (lib/types.ml[600,19117+23]..[600,19117+25])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[600,19117+20]..[600,19117+22])
                          Pexp_ident "t1" (lib/types.ml[600,19117+20]..[600,19117+22])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[600,19117+26]..[600,19117+28])
                          Pexp_ident "t2" (lib/types.ml[600,19117+26]..[600,19117+28])
                    ]
                <arg>
                Nolabel
                  expression (lib/types.ml[600,19117+32]..[600,19117+50])
                    Pexp_apply
                    expression (lib/types.ml[600,19117+40]..[600,19117+42])
                      Pexp_ident "==" (lib/types.ml[600,19117+40]..[600,19117+42])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[600,19117+32]..[600,19117+39])
                          Pexp_apply
                          expression (lib/types.ml[600,19117+32]..[600,19117+36])
                            Pexp_ident "repr" (lib/types.ml[600,19117+32]..[600,19117+36])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[600,19117+37]..[600,19117+39])
                                Pexp_ident "t1" (lib/types.ml[600,19117+37]..[600,19117+39])
                          ]
                      <arg>
                      Nolabel
                        expression (lib/types.ml[600,19117+43]..[600,19117+50])
                          Pexp_apply
                          expression (lib/types.ml[600,19117+43]..[600,19117+47])
                            Pexp_ident "repr" (lib/types.ml[600,19117+43]..[600,19117+47])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[600,19117+48]..[600,19117+50])
                                Pexp_ident "t2" (lib/types.ml[600,19117+48]..[600,19117+50])
                          ]
                    ]
              ]
    ]
  structure_item (lib/types.ml[601,19168+0]..[601,19168+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[601,19168+4]..[601,19168+16])
          Ppat_var "compare_type" (lib/types.ml[601,19168+4]..[601,19168+16])
        expression (lib/types.ml[601,19168+17]..[601,19168+56]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[601,19168+17]..[601,19168+19])
              Nolabel
              None
              pattern (lib/types.ml[601,19168+17]..[601,19168+19])
                Ppat_var "t1" (lib/types.ml[601,19168+17]..[601,19168+19])
            Pparam_val (lib/types.ml[601,19168+20]..[601,19168+22])
              Nolabel
              None
              pattern (lib/types.ml[601,19168+20]..[601,19168+22])
                Ppat_var "t2" (lib/types.ml[601,19168+20]..[601,19168+22])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[601,19168+25]..[601,19168+56])
              Pexp_apply
              expression (lib/types.ml[601,19168+25]..[601,19168+32])
                Pexp_ident "compare" (lib/types.ml[601,19168+25]..[601,19168+32])
              [
                <arg>
                Nolabel
                  expression (lib/types.ml[601,19168+33]..[601,19168+44])
                    Pexp_apply
                    expression (lib/types.ml[601,19168+34]..[601,19168+40])
                      Pexp_ident "get_id" (lib/types.ml[601,19168+34]..[601,19168+40])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[601,19168+41]..[601,19168+43])
                          Pexp_ident "t1" (lib/types.ml[601,19168+41]..[601,19168+43])
                    ]
                <arg>
                Nolabel
                  expression (lib/types.ml[601,19168+45]..[601,19168+56])
                    Pexp_apply
                    expression (lib/types.ml[601,19168+46]..[601,19168+52])
                      Pexp_ident "get_id" (lib/types.ml[601,19168+46]..[601,19168+52])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[601,19168+53]..[601,19168+55])
                          Pexp_ident "t2" (lib/types.ml[601,19168+53]..[601,19168+55])
                    ]
              ]
    ]
  structure_item (lib/types.ml[605,19274+0]..[607,19366+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[605,19274+4]..[605,19274+14])
          Ppat_var "create_row" (lib/types.ml[605,19274+4]..[605,19274+14])
        expression (lib/types.ml[605,19274+15]..[607,19366+57]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[605,19274+15]..[605,19274+22])
              Labelled "fields"
              None
              pattern (lib/types.ml[605,19274+16]..[605,19274+22])
                Ppat_var "fields" (lib/types.ml[605,19274+16]..[605,19274+22])
            Pparam_val (lib/types.ml[605,19274+23]..[605,19274+28])
              Labelled "more"
              None
              pattern (lib/types.ml[605,19274+24]..[605,19274+28])
                Ppat_var "more" (lib/types.ml[605,19274+24]..[605,19274+28])
            Pparam_val (lib/types.ml[605,19274+29]..[605,19274+36])
              Labelled "closed"
              None
              pattern (lib/types.ml[605,19274+30]..[605,19274+36])
                Ppat_var "closed" (lib/types.ml[605,19274+30]..[605,19274+36])
            Pparam_val (lib/types.ml[605,19274+37]..[605,19274+43])
              Labelled "fixed"
              None
              pattern (lib/types.ml[605,19274+38]..[605,19274+43])
                Ppat_var "fixed" (lib/types.ml[605,19274+38]..[605,19274+43])
            Pparam_val (lib/types.ml[605,19274+44]..[605,19274+49])
              Labelled "name"
              None
              pattern (lib/types.ml[605,19274+45]..[605,19274+49])
                Ppat_var "name" (lib/types.ml[605,19274+45]..[605,19274+49])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[606,19326+4]..[607,19366+57])
              Pexp_record
              [
                "row_fields" (lib/types.ml[606,19326+6]..[606,19326+16])
                  expression (lib/types.ml[606,19326+17]..[606,19326+23])
                    Pexp_ident "fields" (lib/types.ml[606,19326+17]..[606,19326+23])
                "row_more" (lib/types.ml[606,19326+25]..[606,19326+33])
                  expression (lib/types.ml[606,19326+34]..[606,19326+38])
                    Pexp_ident "more" (lib/types.ml[606,19326+34]..[606,19326+38])
                "row_closed" (lib/types.ml[607,19366+6]..[607,19366+16])
                  expression (lib/types.ml[607,19366+17]..[607,19366+23])
                    Pexp_ident "closed" (lib/types.ml[607,19366+17]..[607,19366+23])
                "row_fixed" (lib/types.ml[607,19366+25]..[607,19366+34])
                  expression (lib/types.ml[607,19366+35]..[607,19366+40])
                    Pexp_ident "fixed" (lib/types.ml[607,19366+35]..[607,19366+40])
                "row_name" (lib/types.ml[607,19366+42]..[607,19366+50])
                  expression (lib/types.ml[607,19366+51]..[607,19366+55])
                    Pexp_ident "name" (lib/types.ml[607,19366+51]..[607,19366+55])
              ]
              None
    ]
  structure_item (lib/types.ml[610,19477+0]..[615,19606+20])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[610,19477+8]..[610,19477+18])
          Ppat_var "row_fields" (lib/types.ml[610,19477+8]..[610,19477+18])
        expression (lib/types.ml[610,19477+19]..[615,19606+20]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[610,19477+19]..[610,19477+22])
              Nolabel
              None
              pattern (lib/types.ml[610,19477+19]..[610,19477+22])
                Ppat_var "row" (lib/types.ml[610,19477+19]..[610,19477+22])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[611,19502+2]..[615,19606+20])
              Pexp_match
              expression (lib/types.ml[611,19502+8]..[611,19502+29])
                Pexp_apply
                expression (lib/types.ml[611,19502+8]..[611,19502+16])
                  Pexp_ident "get_desc" (lib/types.ml[611,19502+8]..[611,19502+16])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[611,19502+17]..[611,19502+29])
                      Pexp_field
                      expression (lib/types.ml[611,19502+17]..[611,19502+20])
                        Pexp_ident "row" (lib/types.ml[611,19502+17]..[611,19502+20])
                      "row_more" (lib/types.ml[611,19502+21]..[611,19502+29])
                ]
              [
                <case>
                  pattern (lib/types.ml[612,19537+4]..[612,19537+17])
                    Ppat_construct "Tvariant" (lib/types.ml[612,19537+4]..[612,19537+12])
                    Some
                      []
                      pattern (lib/types.ml[612,19537+13]..[612,19537+17])
                        Ppat_var "row'" (lib/types.ml[612,19537+13]..[612,19537+17])
                  expression (lib/types.ml[613,19558+6]..[613,19558+38])
                    Pexp_apply
                    expression (lib/types.ml[613,19558+21]..[613,19558+22])
                      Pexp_ident "@" (lib/types.ml[613,19558+21]..[613,19558+22])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[613,19558+6]..[613,19558+20])
                          Pexp_field
                          expression (lib/types.ml[613,19558+6]..[613,19558+9])
                            Pexp_ident "row" (lib/types.ml[613,19558+6]..[613,19558+9])
                          "row_fields" (lib/types.ml[613,19558+10]..[613,19558+20])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[613,19558+23]..[613,19558+38])
                          Pexp_apply
                          expression (lib/types.ml[613,19558+23]..[613,19558+33])
                            Pexp_ident "row_fields" (lib/types.ml[613,19558+23]..[613,19558+33])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[613,19558+34]..[613,19558+38])
                                Pexp_ident "row'" (lib/types.ml[613,19558+34]..[613,19558+38])
                          ]
                    ]
                <case>
                  pattern (lib/types.ml[614,19597+4]..[614,19597+5])
                    Ppat_any
                  expression (lib/types.ml[615,19606+6]..[615,19606+20])
                    Pexp_field
                    expression (lib/types.ml[615,19606+6]..[615,19606+9])
                      Pexp_ident "row" (lib/types.ml[615,19606+6]..[615,19606+9])
                    "row_fields" (lib/types.ml[615,19606+10]..[615,19606+20])
              ]
    ]
  structure_item (lib/types.ml[617,19628+0]..[620,19741+12])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[617,19628+8]..[617,19628+26])
          Ppat_var "row_repr_no_fields" (lib/types.ml[617,19628+8]..[617,19628+26])
        expression (lib/types.ml[617,19628+27]..[620,19741+12]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[617,19628+27]..[617,19628+30])
              Nolabel
              None
              pattern (lib/types.ml[617,19628+27]..[617,19628+30])
                Ppat_var "row" (lib/types.ml[617,19628+27]..[617,19628+30])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[618,19661+2]..[620,19741+12])
              Pexp_match
              expression (lib/types.ml[618,19661+8]..[618,19661+29])
                Pexp_apply
                expression (lib/types.ml[618,19661+8]..[618,19661+16])
                  Pexp_ident "get_desc" (lib/types.ml[618,19661+8]..[618,19661+16])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[618,19661+17]..[618,19661+29])
                      Pexp_field
                      expression (lib/types.ml[618,19661+17]..[618,19661+20])
                        Pexp_ident "row" (lib/types.ml[618,19661+17]..[618,19661+20])
                      "row_more" (lib/types.ml[618,19661+21]..[618,19661+29])
                ]
              [
                <case>
                  pattern (lib/types.ml[619,19696+4]..[619,19696+17])
                    Ppat_construct "Tvariant" (lib/types.ml[619,19696+4]..[619,19696+12])
                    Some
                      []
                      pattern (lib/types.ml[619,19696+13]..[619,19696+17])
                        Ppat_var "row'" (lib/types.ml[619,19696+13]..[619,19696+17])
                  expression (lib/types.ml[619,19696+21]..[619,19696+44])
                    Pexp_apply
                    expression (lib/types.ml[619,19696+21]..[619,19696+39])
                      Pexp_ident "row_repr_no_fields" (lib/types.ml[619,19696+21]..[619,19696+39])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[619,19696+40]..[619,19696+44])
                          Pexp_ident "row'" (lib/types.ml[619,19696+40]..[619,19696+44])
                    ]
                <case>
                  pattern (lib/types.ml[620,19741+4]..[620,19741+5])
                    Ppat_any
                  expression (lib/types.ml[620,19741+9]..[620,19741+12])
                    Pexp_ident "row" (lib/types.ml[620,19741+9]..[620,19741+12])
              ]
    ]
  structure_item (lib/types.ml[622,19755+0]..[622,19755+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[622,19755+4]..[622,19755+12])
          Ppat_var "row_more" (lib/types.ml[622,19755+4]..[622,19755+12])
        expression (lib/types.ml[622,19755+13]..[622,19755+52]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[622,19755+13]..[622,19755+16])
              Nolabel
              None
              pattern (lib/types.ml[622,19755+13]..[622,19755+16])
                Ppat_var "row" (lib/types.ml[622,19755+13]..[622,19755+16])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[622,19755+19]..[622,19755+52])
              Pexp_field
              expression (lib/types.ml[622,19755+19]..[622,19755+43])
                Pexp_apply
                expression (lib/types.ml[622,19755+20]..[622,19755+38])
                  Pexp_ident "row_repr_no_fields" (lib/types.ml[622,19755+20]..[622,19755+38])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[622,19755+39]..[622,19755+42])
                      Pexp_ident "row" (lib/types.ml[622,19755+39]..[622,19755+42])
                ]
              "row_more" (lib/types.ml[622,19755+44]..[622,19755+52])
    ]
  structure_item (lib/types.ml[623,19808+0]..[623,19808+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[623,19808+4]..[623,19808+14])
          Ppat_var "row_closed" (lib/types.ml[623,19808+4]..[623,19808+14])
        expression (lib/types.ml[623,19808+15]..[623,19808+56]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[623,19808+15]..[623,19808+18])
              Nolabel
              None
              pattern (lib/types.ml[623,19808+15]..[623,19808+18])
                Ppat_var "row" (lib/types.ml[623,19808+15]..[623,19808+18])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[623,19808+21]..[623,19808+56])
              Pexp_field
              expression (lib/types.ml[623,19808+21]..[623,19808+45])
                Pexp_apply
                expression (lib/types.ml[623,19808+22]..[623,19808+40])
                  Pexp_ident "row_repr_no_fields" (lib/types.ml[623,19808+22]..[623,19808+40])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[623,19808+41]..[623,19808+44])
                      Pexp_ident "row" (lib/types.ml[623,19808+41]..[623,19808+44])
                ]
              "row_closed" (lib/types.ml[623,19808+46]..[623,19808+56])
    ]
  structure_item (lib/types.ml[624,19865+0]..[624,19865+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[624,19865+4]..[624,19865+13])
          Ppat_var "row_fixed" (lib/types.ml[624,19865+4]..[624,19865+13])
        expression (lib/types.ml[624,19865+14]..[624,19865+54]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[624,19865+14]..[624,19865+17])
              Nolabel
              None
              pattern (lib/types.ml[624,19865+14]..[624,19865+17])
                Ppat_var "row" (lib/types.ml[624,19865+14]..[624,19865+17])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[624,19865+20]..[624,19865+54])
              Pexp_field
              expression (lib/types.ml[624,19865+20]..[624,19865+44])
                Pexp_apply
                expression (lib/types.ml[624,19865+21]..[624,19865+39])
                  Pexp_ident "row_repr_no_fields" (lib/types.ml[624,19865+21]..[624,19865+39])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[624,19865+40]..[624,19865+43])
                      Pexp_ident "row" (lib/types.ml[624,19865+40]..[624,19865+43])
                ]
              "row_fixed" (lib/types.ml[624,19865+45]..[624,19865+54])
    ]
  structure_item (lib/types.ml[625,19920+0]..[625,19920+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[625,19920+4]..[625,19920+12])
          Ppat_var "row_name" (lib/types.ml[625,19920+4]..[625,19920+12])
        expression (lib/types.ml[625,19920+13]..[625,19920+52]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[625,19920+13]..[625,19920+16])
              Nolabel
              None
              pattern (lib/types.ml[625,19920+13]..[625,19920+16])
                Ppat_var "row" (lib/types.ml[625,19920+13]..[625,19920+16])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[625,19920+19]..[625,19920+52])
              Pexp_field
              expression (lib/types.ml[625,19920+19]..[625,19920+43])
                Pexp_apply
                expression (lib/types.ml[625,19920+20]..[625,19920+38])
                  Pexp_ident "row_repr_no_fields" (lib/types.ml[625,19920+20]..[625,19920+38])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[625,19920+39]..[625,19920+42])
                      Pexp_ident "row" (lib/types.ml[625,19920+39]..[625,19920+42])
                ]
              "row_name" (lib/types.ml[625,19920+44]..[625,19920+52])
    ]
  structure_item (lib/types.ml[627,19974+0]..[635,20233+24])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[627,19974+8]..[627,19974+21])
          Ppat_var "get_row_field" (lib/types.ml[627,19974+8]..[627,19974+21])
        expression (lib/types.ml[627,19974+22]..[635,20233+24]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[627,19974+22]..[627,19974+25])
              Nolabel
              None
              pattern (lib/types.ml[627,19974+22]..[627,19974+25])
                Ppat_var "tag" (lib/types.ml[627,19974+22]..[627,19974+25])
            Pparam_val (lib/types.ml[627,19974+26]..[627,19974+29])
              Nolabel
              None
              pattern (lib/types.ml[627,19974+26]..[627,19974+29])
                Ppat_var "row" (lib/types.ml[627,19974+26]..[627,19974+29])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[628,20006+2]..[635,20233+24])
              Pexp_let Rec
              [
                <def>
                  pattern (lib/types.ml[628,20006+10]..[628,20006+14])
                    Ppat_var "find" (lib/types.ml[628,20006+10]..[628,20006+14])
                  expression (lib/types.ml[628,20006+17]..[634,20209+23])
                    Pexp_function
                    []
                    None
                    Pfunction_cases (lib/types.ml[628,20006+17]..[634,20209+23])
                      [
                        <case>
                          pattern (lib/types.ml[629,20032+6]..[629,20032+24])
                            Ppat_construct "::" (lib/types.ml[629,20032+15]..[629,20032+17])
                            Some
                              []
                              pattern (lib/types.ml[629,20032+6]..[629,20032+24]) ghost
                                Ppat_tuple
                                [
                                  pattern (lib/types.ml[629,20032+6]..[629,20032+14])
                                    Ppat_tuple
                                    [
                                      pattern (lib/types.ml[629,20032+7]..[629,20032+11])
                                        Ppat_var "tag'" (lib/types.ml[629,20032+7]..[629,20032+11])
                                      pattern (lib/types.ml[629,20032+12]..[629,20032+13])
                                        Ppat_var "f" (lib/types.ml[629,20032+12]..[629,20032+13])
                                    ]
                                  pattern (lib/types.ml[629,20032+18]..[629,20032+24])
                                    Ppat_var "fields" (lib/types.ml[629,20032+18]..[629,20032+24])
                                ]
                          expression (lib/types.ml[630,20060+8]..[630,20060+45])
                            Pexp_ifthenelse
                            expression (lib/types.ml[630,20060+11]..[630,20060+21])
                              Pexp_apply
                              expression (lib/types.ml[630,20060+15]..[630,20060+16])
                                Pexp_ident "=" (lib/types.ml[630,20060+15]..[630,20060+16])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[630,20060+11]..[630,20060+14])
                                    Pexp_ident "tag" (lib/types.ml[630,20060+11]..[630,20060+14])
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[630,20060+17]..[630,20060+21])
                                    Pexp_ident "tag'" (lib/types.ml[630,20060+17]..[630,20060+21])
                              ]
                            expression (lib/types.ml[630,20060+27]..[630,20060+28])
                              Pexp_ident "f" (lib/types.ml[630,20060+27]..[630,20060+28])
                            Some
                              expression (lib/types.ml[630,20060+34]..[630,20060+45])
                                Pexp_apply
                                expression (lib/types.ml[630,20060+34]..[630,20060+38])
                                  Pexp_ident "find" (lib/types.ml[630,20060+34]..[630,20060+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lib/types.ml[630,20060+39]..[630,20060+45])
                                      Pexp_ident "fields" (lib/types.ml[630,20060+39]..[630,20060+45])
                                ]
                        <case>
                          pattern (lib/types.ml[631,20106+6]..[631,20106+8])
                            Ppat_construct "[]" (lib/types.ml[631,20106+6]..[631,20106+8])
                            None
                          expression (lib/types.ml[632,20118+8]..[634,20209+23])
                            Pexp_match
                            expression (lib/types.ml[632,20118+14]..[632,20118+35])
                              Pexp_apply
                              expression (lib/types.ml[632,20118+14]..[632,20118+22])
                                Pexp_ident "get_desc" (lib/types.ml[632,20118+14]..[632,20118+22])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[632,20118+23]..[632,20118+35])
                                    Pexp_field
                                    expression (lib/types.ml[632,20118+23]..[632,20118+26])
                                      Pexp_ident "row" (lib/types.ml[632,20118+23]..[632,20118+26])
                                    "row_more" (lib/types.ml[632,20118+27]..[632,20118+35])
                              ]
                            [
                              <case>
                                pattern (lib/types.ml[633,20159+10]..[633,20159+23])
                                  Ppat_construct "Tvariant" (lib/types.ml[633,20159+10]..[633,20159+18])
                                  Some
                                    []
                                    pattern (lib/types.ml[633,20159+19]..[633,20159+23])
                                      Ppat_var "row'" (lib/types.ml[633,20159+19]..[633,20159+23])
                                expression (lib/types.ml[633,20159+27]..[633,20159+49])
                                  Pexp_apply
                                  expression (lib/types.ml[633,20159+27]..[633,20159+40])
                                    Pexp_ident "get_row_field" (lib/types.ml[633,20159+27]..[633,20159+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/types.ml[633,20159+41]..[633,20159+44])
                                        Pexp_ident "tag" (lib/types.ml[633,20159+41]..[633,20159+44])
                                    <arg>
                                    Nolabel
                                      expression (lib/types.ml[633,20159+45]..[633,20159+49])
                                        Pexp_ident "row'" (lib/types.ml[633,20159+45]..[633,20159+49])
                                  ]
                              <case>
                                pattern (lib/types.ml[634,20209+10]..[634,20209+11])
                                  Ppat_any
                                expression (lib/types.ml[634,20209+15]..[634,20209+23])
                                  Pexp_construct "RFabsent" (lib/types.ml[634,20209+15]..[634,20209+23])
                                  None
                            ]
                      ]
              ]
              expression (lib/types.ml[635,20233+5]..[635,20233+24])
                Pexp_apply
                expression (lib/types.ml[635,20233+5]..[635,20233+9])
                  Pexp_ident "find" (lib/types.ml[635,20233+5]..[635,20233+9])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[635,20233+10]..[635,20233+24])
                      Pexp_field
                      expression (lib/types.ml[635,20233+10]..[635,20233+13])
                        Pexp_ident "row" (lib/types.ml[635,20233+10]..[635,20233+13])
                      "row_fields" (lib/types.ml[635,20233+14]..[635,20233+24])
                ]
    ]
  structure_item (lib/types.ml[637,20259+0]..[640,20366+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[637,20259+4]..[637,20259+16])
          Ppat_var "set_row_name" (lib/types.ml[637,20259+4]..[637,20259+16])
        expression (lib/types.ml[637,20259+17]..[640,20366+33]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[637,20259+17]..[637,20259+20])
              Nolabel
              None
              pattern (lib/types.ml[637,20259+17]..[637,20259+20])
                Ppat_var "row" (lib/types.ml[637,20259+17]..[637,20259+20])
            Pparam_val (lib/types.ml[637,20259+21]..[637,20259+29])
              Nolabel
              None
              pattern (lib/types.ml[637,20259+21]..[637,20259+29])
                Ppat_var "row_name" (lib/types.ml[637,20259+21]..[637,20259+29])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[638,20291+2]..[640,20366+33])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[638,20291+6]..[638,20291+16])
                    Ppat_var "row_fields" (lib/types.ml[638,20291+6]..[638,20291+16])
                  expression (lib/types.ml[638,20291+19]..[638,20291+33])
                    Pexp_apply
                    expression (lib/types.ml[638,20291+19]..[638,20291+29])
                      Pexp_ident "row_fields" (lib/types.ml[638,20291+19]..[638,20291+29])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[638,20291+30]..[638,20291+33])
                          Pexp_ident "row" (lib/types.ml[638,20291+30]..[638,20291+33])
                    ]
              ]
              expression (lib/types.ml[639,20328+2]..[640,20366+33])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/types.ml[639,20328+6]..[639,20328+9])
                      Ppat_var "row" (lib/types.ml[639,20328+6]..[639,20328+9])
                    expression (lib/types.ml[639,20328+12]..[639,20328+34])
                      Pexp_apply
                      expression (lib/types.ml[639,20328+12]..[639,20328+30])
                        Pexp_ident "row_repr_no_fields" (lib/types.ml[639,20328+12]..[639,20328+30])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[639,20328+31]..[639,20328+34])
                            Pexp_ident "row" (lib/types.ml[639,20328+31]..[639,20328+34])
                      ]
                ]
                expression (lib/types.ml[640,20366+2]..[640,20366+33])
                  Pexp_record
                  [
                    "row_fields" (lib/types.ml[640,20366+12]..[640,20366+22]) ghost
                      expression (lib/types.ml[640,20366+12]..[640,20366+22])
                        Pexp_ident "row_fields" (lib/types.ml[640,20366+12]..[640,20366+22])
                    "row_name" (lib/types.ml[640,20366+24]..[640,20366+32]) ghost
                      expression (lib/types.ml[640,20366+24]..[640,20366+32])
                        Pexp_ident "row_name" (lib/types.ml[640,20366+24]..[640,20366+32])
                  ]
                  Some
                    expression (lib/types.ml[640,20366+3]..[640,20366+6])
                      Pexp_ident "row" (lib/types.ml[640,20366+3]..[640,20366+6])
    ]
  structure_item (lib/types.ml[642,20401+0]..[647,20569+52])
    Pstr_type Rec
    [
      type_declaration "row_desc_repr" (lib/types.ml[642,20401+5]..[642,20401+18]) (lib/types.ml[642,20401+0]..[647,20569+52])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[643,20422+4]..[647,20569+52])
                "Row" (lib/types.ml[643,20422+4]..[643,20422+7])
                [
                  (lib/types.ml[643,20422+13]..[643,20422+46])
                    Immutable
                    "fields" (lib/types.ml[643,20422+13]..[643,20422+19])                    core_type (lib/types.ml[643,20422+21]..[643,20422+45])
                      Ptyp_constr "list" (lib/types.ml[643,20422+41]..[643,20422+45])
                      [
                        core_type (lib/types.ml[643,20422+22]..[643,20422+39])
                          Ptyp_tuple
                          [
                            core_type (lib/types.ml[643,20422+22]..[643,20422+27])
                              Ptyp_constr "label" (lib/types.ml[643,20422+22]..[643,20422+27])
                              []
                            core_type (lib/types.ml[643,20422+30]..[643,20422+39])
                              Ptyp_constr "row_field" (lib/types.ml[643,20422+30]..[643,20422+39])
                              []
                          ]
                      ]
                  (lib/types.ml[644,20469+13]..[644,20469+28])
                    Immutable
                    "more" (lib/types.ml[644,20469+13]..[644,20469+17])                    core_type (lib/types.ml[644,20469+18]..[644,20469+27])
                      Ptyp_constr "type_expr" (lib/types.ml[644,20469+18]..[644,20469+27])
                      []
                  (lib/types.ml[645,20498+13]..[645,20498+25])
                    Immutable
                    "closed" (lib/types.ml[645,20498+13]..[645,20498+19])                    core_type (lib/types.ml[645,20498+20]..[645,20498+24])
                      Ptyp_constr "bool" (lib/types.ml[645,20498+20]..[645,20498+24])
                      []
                  (lib/types.ml[646,20524+13]..[646,20524+44])
                    Immutable
                    "fixed" (lib/types.ml[646,20524+13]..[646,20524+18])                    core_type (lib/types.ml[646,20524+19]..[646,20524+43])
                      Ptyp_constr "option" (lib/types.ml[646,20524+37]..[646,20524+43])
                      [
                        core_type (lib/types.ml[646,20524+19]..[646,20524+36])
                          Ptyp_constr "fixed_explanation" (lib/types.ml[646,20524+19]..[646,20524+36])
                          []
                      ]
                  (lib/types.ml[647,20569+13]..[647,20569+50])
                    Immutable
                    "name" (lib/types.ml[647,20569+13]..[647,20569+17])                    core_type (lib/types.ml[647,20569+18]..[647,20569+50])
                      Ptyp_constr "option" (lib/types.ml[647,20569+44]..[647,20569+50])
                      [
                        core_type (lib/types.ml[647,20569+19]..[647,20569+42])
                          Ptyp_tuple
                          [
                            core_type (lib/types.ml[647,20569+19]..[647,20569+25])
                              Ptyp_constr "Path.t" (lib/types.ml[647,20569+19]..[647,20569+25])
                              []
                            core_type (lib/types.ml[647,20569+28]..[647,20569+42])
                              Ptyp_constr "list" (lib/types.ml[647,20569+38]..[647,20569+42])
                              [
                                core_type (lib/types.ml[647,20569+28]..[647,20569+37])
                                  Ptyp_constr "type_expr" (lib/types.ml[647,20569+28]..[647,20569+37])
                                  []
                              ]
                          ]
                      ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[649,20623+0]..[656,20822+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[649,20623+4]..[649,20623+12])
          Ppat_var "row_repr" (lib/types.ml[649,20623+4]..[649,20623+12])
        expression (lib/types.ml[649,20623+13]..[656,20822+29]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[649,20623+13]..[649,20623+16])
              Nolabel
              None
              pattern (lib/types.ml[649,20623+13]..[649,20623+16])
                Ppat_var "row" (lib/types.ml[649,20623+13]..[649,20623+16])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[650,20642+2]..[656,20822+29])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[650,20642+6]..[650,20642+12])
                    Ppat_var "fields" (lib/types.ml[650,20642+6]..[650,20642+12])
                  expression (lib/types.ml[650,20642+15]..[650,20642+29])
                    Pexp_apply
                    expression (lib/types.ml[650,20642+15]..[650,20642+25])
                      Pexp_ident "row_fields" (lib/types.ml[650,20642+15]..[650,20642+25])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[650,20642+26]..[650,20642+29])
                          Pexp_ident "row" (lib/types.ml[650,20642+26]..[650,20642+29])
                    ]
              ]
              expression (lib/types.ml[651,20675+2]..[656,20822+29])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/types.ml[651,20675+6]..[651,20675+9])
                      Ppat_var "row" (lib/types.ml[651,20675+6]..[651,20675+9])
                    expression (lib/types.ml[651,20675+12]..[651,20675+34])
                      Pexp_apply
                      expression (lib/types.ml[651,20675+12]..[651,20675+30])
                        Pexp_ident "row_repr_no_fields" (lib/types.ml[651,20675+12]..[651,20675+30])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[651,20675+31]..[651,20675+34])
                            Pexp_ident "row" (lib/types.ml[651,20675+31]..[651,20675+34])
                      ]
                ]
                expression (lib/types.ml[652,20713+2]..[656,20822+29])
                  Pexp_construct "Row" (lib/types.ml[652,20713+2]..[652,20713+5])
                  Some
                    expression (lib/types.ml[652,20713+6]..[656,20822+29])
                      Pexp_record
                      [
                        "fields" (lib/types.ml[652,20713+8]..[652,20713+14]) ghost
                          expression (lib/types.ml[652,20713+8]..[652,20713+14])
                            Pexp_ident "fields" (lib/types.ml[652,20713+8]..[652,20713+14])
                        "more" (lib/types.ml[653,20729+8]..[653,20729+12])
                          expression (lib/types.ml[653,20729+15]..[653,20729+27])
                            Pexp_field
                            expression (lib/types.ml[653,20729+15]..[653,20729+18])
                              Pexp_ident "row" (lib/types.ml[653,20729+15]..[653,20729+18])
                            "row_more" (lib/types.ml[653,20729+19]..[653,20729+27])
                        "closed" (lib/types.ml[654,20758+8]..[654,20758+14])
                          expression (lib/types.ml[654,20758+17]..[654,20758+31])
                            Pexp_field
                            expression (lib/types.ml[654,20758+17]..[654,20758+20])
                              Pexp_ident "row" (lib/types.ml[654,20758+17]..[654,20758+20])
                            "row_closed" (lib/types.ml[654,20758+21]..[654,20758+31])
                        "fixed" (lib/types.ml[655,20791+8]..[655,20791+13])
                          expression (lib/types.ml[655,20791+16]..[655,20791+29])
                            Pexp_field
                            expression (lib/types.ml[655,20791+16]..[655,20791+19])
                              Pexp_ident "row" (lib/types.ml[655,20791+16]..[655,20791+19])
                            "row_fixed" (lib/types.ml[655,20791+20]..[655,20791+29])
                        "name" (lib/types.ml[656,20822+8]..[656,20822+12])
                          expression (lib/types.ml[656,20822+15]..[656,20822+27])
                            Pexp_field
                            expression (lib/types.ml[656,20822+15]..[656,20822+18])
                              Pexp_ident "row" (lib/types.ml[656,20822+15]..[656,20822+18])
                            "row_name" (lib/types.ml[656,20822+19]..[656,20822+27])
                      ]
                      None
    ]
  structure_item (lib/types.ml[658,20853+0]..[664,21097+11])
    Pstr_type Rec
    [
      type_declaration "row_field_view" (lib/types.ml[658,20853+5]..[658,20853+19]) (lib/types.ml[658,20853+0]..[664,21097+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lib/types.ml[659,20875+4]..[659,20875+32])
                "Rpresent" (lib/types.ml[659,20875+4]..[659,20875+12])
                [
                  core_type (lib/types.ml[659,20875+16]..[659,20875+32])
                    Ptyp_constr "option" (lib/types.ml[659,20875+26]..[659,20875+32])
                    [
                      core_type (lib/types.ml[659,20875+16]..[659,20875+25])
                        Ptyp_constr "type_expr" (lib/types.ml[659,20875+16]..[659,20875+25])
                        []
                    ]
                ]
                None
              (lib/types.ml[660,20908+2]..[660,20908+43])
                "Reither" (lib/types.ml[660,20908+4]..[660,20908+11])
                [
                  core_type (lib/types.ml[660,20908+15]..[660,20908+19])
                    Ptyp_constr "bool" (lib/types.ml[660,20908+15]..[660,20908+19])
                    []
                  core_type (lib/types.ml[660,20908+22]..[660,20908+36])
                    Ptyp_constr "list" (lib/types.ml[660,20908+32]..[660,20908+36])
                    [
                      core_type (lib/types.ml[660,20908+22]..[660,20908+31])
                        Ptyp_constr "type_expr" (lib/types.ml[660,20908+22]..[660,20908+31])
                        []
                    ]
                  core_type (lib/types.ml[660,20908+39]..[660,20908+43])
                    Ptyp_constr "bool" (lib/types.ml[660,20908+39]..[660,20908+43])
                    []
                ]
                None
              (lib/types.ml[664,21097+2]..[664,21097+11])
                "Rabsent" (lib/types.ml[664,21097+4]..[664,21097+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[666,21110+0]..[675,21525+24])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[666,21110+8]..[666,21110+26])
          Ppat_var "row_field_repr_aux" (lib/types.ml[666,21110+8]..[666,21110+26])
        expression (lib/types.ml[666,21110+27]..[675,21525+24]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[666,21110+27]..[666,21110+29])
              Nolabel
              None
              pattern (lib/types.ml[666,21110+27]..[666,21110+29])
                Ppat_var "tl" (lib/types.ml[666,21110+27]..[666,21110+29])
          ]
          Some
            Pconstraint
              core_type (lib/types.ml[666,21110+32]..[666,21110+54])
                Ptyp_arrow
                Nolabel
                core_type (lib/types.ml[666,21110+32]..[666,21110+41])
                  Ptyp_constr "row_field" (lib/types.ml[666,21110+32]..[666,21110+41])
                  []
                core_type (lib/types.ml[666,21110+45]..[666,21110+54])
                  Ptyp_constr "row_field" (lib/types.ml[666,21110+45]..[666,21110+54])
                  []
          Pfunction_cases (lib/types.ml[666,21110+57]..[675,21525+24])
            [
              <case>
                pattern (lib/types.ml[667,21176+4]..[667,21176+47])
                  Ppat_construct "RFeither" (lib/types.ml[667,21176+4]..[667,21176+12])
                  Some
                    []
                    pattern (lib/types.ml[667,21176+13]..[667,21176+47])
                      Ppat_alias "r" (lib/types.ml[667,21176+45]..[667,21176+46])
                      pattern (lib/types.ml[667,21176+14]..[667,21176+41])
                        Ppat_record Closed
                        [
                          "ext" (lib/types.ml[667,21176+15]..[667,21176+18])
                            pattern (lib/types.ml[667,21176+21]..[667,21176+40])
                              Ppat_record Closed
                              [
                                "contents" (lib/types.ml[667,21176+22]..[667,21176+30])
                                  pattern (lib/types.ml[667,21176+33]..[667,21176+39])
                                    Ppat_construct "RFnone" (lib/types.ml[667,21176+33]..[667,21176+39])
                                    None
                              ]
                        ]
                expression (lib/types.ml[668,21227+6]..[668,21227+48])
                  Pexp_construct "RFeither" (lib/types.ml[668,21227+6]..[668,21227+14])
                  Some
                    expression (lib/types.ml[668,21227+15]..[668,21227+48])
                      Pexp_record
                      [
                        "arg_type" (lib/types.ml[668,21227+23]..[668,21227+31])
                          expression (lib/types.ml[668,21227+34]..[668,21227+47])
                            Pexp_apply
                            expression (lib/types.ml[668,21227+36]..[668,21227+37])
                              Pexp_ident "@" (lib/types.ml[668,21227+36]..[668,21227+37])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[668,21227+34]..[668,21227+36])
                                  Pexp_ident "tl" (lib/types.ml[668,21227+34]..[668,21227+36])
                              <arg>
                              Nolabel
                                expression (lib/types.ml[668,21227+37]..[668,21227+47])
                                  Pexp_field
                                  expression (lib/types.ml[668,21227+37]..[668,21227+38])
                                    Pexp_ident "r" (lib/types.ml[668,21227+37]..[668,21227+38])
                                  "arg_type" (lib/types.ml[668,21227+39]..[668,21227+47])
                            ]
                      ]
                      Some
                        expression (lib/types.ml[668,21227+16]..[668,21227+17])
                          Pexp_ident "r" (lib/types.ml[668,21227+16]..[668,21227+17])
              <case>
                pattern (lib/types.ml[669,21276+4]..[670,21300+75])
                  Ppat_construct "RFeither" (lib/types.ml[669,21276+4]..[669,21276+12])
                  Some
                    []
                    pattern (lib/types.ml[669,21276+13]..[670,21300+75])
                      Ppat_record Closed
                      [
                        "arg_type" (lib/types.ml[669,21276+14]..[669,21276+22]) ghost
                          pattern (lib/types.ml[669,21276+14]..[669,21276+22])
                            Ppat_var "arg_type" (lib/types.ml[669,21276+14]..[669,21276+22])
                        "ext" (lib/types.ml[670,21300+14]..[670,21300+17])
                          pattern (lib/types.ml[670,21300+20]..[670,21300+74])
                            Ppat_record Closed
                            [
                              "contents" (lib/types.ml[670,21300+21]..[670,21300+29])
                                pattern (lib/types.ml[670,21300+32]..[670,21300+73])
                                  Ppat_alias "rf" (lib/types.ml[670,21300+71]..[670,21300+73])
                                  pattern (lib/types.ml[670,21300+32]..[670,21300+67])
                                    Ppat_or
                                    pattern (lib/types.ml[670,21300+32]..[670,21300+56])
                                      Ppat_or
                                      pattern (lib/types.ml[670,21300+32]..[670,21300+42])
                                        Ppat_construct "RFeither" (lib/types.ml[670,21300+32]..[670,21300+40])
                                        Some
                                          []
                                          pattern (lib/types.ml[670,21300+41]..[670,21300+42])
                                            Ppat_any
                                      pattern (lib/types.ml[670,21300+45]..[670,21300+56])
                                        Ppat_construct "RFpresent" (lib/types.ml[670,21300+45]..[670,21300+54])
                                        Some
                                          []
                                          pattern (lib/types.ml[670,21300+55]..[670,21300+56])
                                            Ppat_any
                                    pattern (lib/types.ml[670,21300+59]..[670,21300+67])
                                      Ppat_construct "RFabsent" (lib/types.ml[670,21300+59]..[670,21300+67])
                                      None
                            ]
                      ]
                expression (lib/types.ml[671,21379+6]..[671,21379+41])
                  Pexp_apply
                  expression (lib/types.ml[671,21379+6]..[671,21379+24])
                    Pexp_ident "row_field_repr_aux" (lib/types.ml[671,21379+6]..[671,21379+24])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[671,21379+25]..[671,21379+38])
                        Pexp_apply
                        expression (lib/types.ml[671,21379+28]..[671,21379+29])
                          Pexp_ident "@" (lib/types.ml[671,21379+28]..[671,21379+29])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[671,21379+26]..[671,21379+28])
                              Pexp_ident "tl" (lib/types.ml[671,21379+26]..[671,21379+28])
                          <arg>
                          Nolabel
                            expression (lib/types.ml[671,21379+29]..[671,21379+37])
                              Pexp_ident "arg_type" (lib/types.ml[671,21379+29]..[671,21379+37])
                        ]
                    <arg>
                    Nolabel
                      expression (lib/types.ml[671,21379+39]..[671,21379+41])
                        Pexp_ident "rf" (lib/types.ml[671,21379+39]..[671,21379+41])
                  ]
              <case>
                pattern (lib/types.ml[672,21421+4]..[672,21421+22])
                  Ppat_construct "RFpresent" (lib/types.ml[672,21421+4]..[672,21421+13])
                  Some
                    []
                    pattern (lib/types.ml[672,21421+14]..[672,21421+22])
                      Ppat_construct "Some" (lib/types.ml[672,21421+15]..[672,21421+19])
                      Some
                        []
                        pattern (lib/types.ml[672,21421+20]..[672,21421+21])
                          Ppat_any
                <when>
                  expression (lib/types.ml[672,21421+28]..[672,21421+36])
                    Pexp_apply
                    expression (lib/types.ml[672,21421+31]..[672,21421+33])
                      Pexp_ident "<>" (lib/types.ml[672,21421+31]..[672,21421+33])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[672,21421+28]..[672,21421+30])
                          Pexp_ident "tl" (lib/types.ml[672,21421+28]..[672,21421+30])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[672,21421+34]..[672,21421+36])
                          Pexp_construct "[]" (lib/types.ml[672,21421+34]..[672,21421+36])
                          None
                    ]
                expression (lib/types.ml[673,21461+6]..[673,21461+35])
                  Pexp_construct "RFpresent" (lib/types.ml[673,21461+6]..[673,21461+15])
                  Some
                    expression (lib/types.ml[673,21461+16]..[673,21461+35])
                      Pexp_construct "Some" (lib/types.ml[673,21461+17]..[673,21461+21])
                      Some
                        expression (lib/types.ml[673,21461+22]..[673,21461+34])
                          Pexp_apply
                          expression (lib/types.ml[673,21461+23]..[673,21461+30])
                            Pexp_ident "List.hd" (lib/types.ml[673,21461+23]..[673,21461+30])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[673,21461+31]..[673,21461+33])
                                Pexp_ident "tl" (lib/types.ml[673,21461+31]..[673,21461+33])
                          ]
              <case>
                pattern (lib/types.ml[674,21497+4]..[674,21497+21])
                  Ppat_alias "rf" (lib/types.ml[674,21497+19]..[674,21497+21])
                  pattern (lib/types.ml[674,21497+4]..[674,21497+15])
                    Ppat_construct "RFpresent" (lib/types.ml[674,21497+4]..[674,21497+13])
                    Some
                      []
                      pattern (lib/types.ml[674,21497+14]..[674,21497+15])
                        Ppat_any
                expression (lib/types.ml[674,21497+25]..[674,21497+27])
                  Pexp_ident "rf" (lib/types.ml[674,21497+25]..[674,21497+27])
              <case>
                pattern (lib/types.ml[675,21525+4]..[675,21525+12])
                  Ppat_construct "RFabsent" (lib/types.ml[675,21525+4]..[675,21525+12])
                  None
                expression (lib/types.ml[675,21525+16]..[675,21525+24])
                  Pexp_construct "RFabsent" (lib/types.ml[675,21525+16]..[675,21525+24])
                  None
            ]
    ]
  structure_item (lib/types.ml[677,21551+0]..[681,21723+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[677,21551+4]..[677,21551+18])
          Ppat_var "row_field_repr" (lib/types.ml[677,21551+4]..[677,21551+18])
        expression (lib/types.ml[677,21551+19]..[681,21723+23]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[677,21551+19]..[677,21551+21])
              Nolabel
              None
              pattern (lib/types.ml[677,21551+19]..[677,21551+21])
                Ppat_var "fi" (lib/types.ml[677,21551+19]..[677,21551+21])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[678,21575+2]..[681,21723+23])
              Pexp_match
              expression (lib/types.ml[678,21575+8]..[678,21575+32])
                Pexp_apply
                expression (lib/types.ml[678,21575+8]..[678,21575+26])
                  Pexp_ident "row_field_repr_aux" (lib/types.ml[678,21575+8]..[678,21575+26])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[678,21575+27]..[678,21575+29])
                      Pexp_construct "[]" (lib/types.ml[678,21575+27]..[678,21575+29])
                      None
                  <arg>
                  Nolabel
                    expression (lib/types.ml[678,21575+30]..[678,21575+32])
                      Pexp_ident "fi" (lib/types.ml[678,21575+30]..[678,21575+32])
                ]
              [
                <case>
                  pattern (lib/types.ml[679,21613+4]..[679,21613+40])
                    Ppat_construct "RFeither" (lib/types.ml[679,21613+4]..[679,21613+12])
                    Some
                      []
                      pattern (lib/types.ml[679,21613+13]..[679,21613+40])
                        Ppat_record Closed
                        [
                          "no_arg" (lib/types.ml[679,21613+14]..[679,21613+20]) ghost
                            pattern (lib/types.ml[679,21613+14]..[679,21613+20])
                              Ppat_var "no_arg" (lib/types.ml[679,21613+14]..[679,21613+20])
                          "arg_type" (lib/types.ml[679,21613+22]..[679,21613+30]) ghost
                            pattern (lib/types.ml[679,21613+22]..[679,21613+30])
                              Ppat_var "arg_type" (lib/types.ml[679,21613+22]..[679,21613+30])
                          "matched" (lib/types.ml[679,21613+32]..[679,21613+39]) ghost
                            pattern (lib/types.ml[679,21613+32]..[679,21613+39])
                              Ppat_var "matched" (lib/types.ml[679,21613+32]..[679,21613+39])
                        ]
                  expression (lib/types.ml[679,21613+44]..[679,21613+79])
                    Pexp_construct "Reither" (lib/types.ml[679,21613+44]..[679,21613+51])
                    Some
                      expression (lib/types.ml[679,21613+52]..[679,21613+79])
                        Pexp_tuple
                        [
                          expression (lib/types.ml[679,21613+53]..[679,21613+59])
                            Pexp_ident "no_arg" (lib/types.ml[679,21613+53]..[679,21613+59])
                          expression (lib/types.ml[679,21613+61]..[679,21613+69])
                            Pexp_ident "arg_type" (lib/types.ml[679,21613+61]..[679,21613+69])
                          expression (lib/types.ml[679,21613+71]..[679,21613+78])
                            Pexp_ident "matched" (lib/types.ml[679,21613+71]..[679,21613+78])
                        ]
                <case>
                  pattern (lib/types.ml[680,21693+4]..[680,21693+15])
                    Ppat_construct "RFpresent" (lib/types.ml[680,21693+4]..[680,21693+13])
                    Some
                      []
                      pattern (lib/types.ml[680,21693+14]..[680,21693+15])
                        Ppat_var "t" (lib/types.ml[680,21693+14]..[680,21693+15])
                  expression (lib/types.ml[680,21693+19]..[680,21693+29])
                    Pexp_construct "Rpresent" (lib/types.ml[680,21693+19]..[680,21693+27])
                    Some
                      expression (lib/types.ml[680,21693+28]..[680,21693+29])
                        Pexp_ident "t" (lib/types.ml[680,21693+28]..[680,21693+29])
                <case>
                  pattern (lib/types.ml[681,21723+4]..[681,21723+12])
                    Ppat_construct "RFabsent" (lib/types.ml[681,21723+4]..[681,21723+12])
                    None
                  expression (lib/types.ml[681,21723+16]..[681,21723+23])
                    Pexp_construct "Rabsent" (lib/types.ml[681,21723+16]..[681,21723+23])
                    None
              ]
    ]
  structure_item (lib/types.ml[683,21748+0]..[688,21962+48])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[683,21748+8]..[683,21748+21])
          Ppat_var "row_field_ext" (lib/types.ml[683,21748+8]..[683,21748+21])
        expression (lib/types.ml[683,21748+22]..[688,21962+48]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[683,21748+22]..[683,21748+38])
              Nolabel
              None
              pattern (lib/types.ml[683,21748+22]..[683,21748+38])
                Ppat_constraint
                pattern (lib/types.ml[683,21748+23]..[683,21748+25])
                  Ppat_var "fi" (lib/types.ml[683,21748+23]..[683,21748+25])
                core_type (lib/types.ml[683,21748+28]..[683,21748+37])
                  Ptyp_constr "row_field" (lib/types.ml[683,21748+28]..[683,21748+37])
                  []
          ]
          None
          Pfunction_body
            expression (lib/types.ml[684,21789+2]..[688,21962+48])
              Pexp_match
              expression (lib/types.ml[684,21789+8]..[684,21789+10])
                Pexp_ident "fi" (lib/types.ml[684,21789+8]..[684,21789+10])
              [
                <case>
                  pattern (lib/types.ml[685,21805+4]..[685,21805+47])
                    Ppat_construct "RFeither" (lib/types.ml[685,21805+4]..[685,21805+12])
                    Some
                      []
                      pattern (lib/types.ml[685,21805+13]..[685,21805+47])
                        Ppat_record Closed
                        [
                          "ext" (lib/types.ml[685,21805+14]..[685,21805+17])
                            pattern (lib/types.ml[685,21805+20]..[685,21805+46])
                              Ppat_alias "ext" (lib/types.ml[685,21805+43]..[685,21805+46])
                              pattern (lib/types.ml[685,21805+20]..[685,21805+39])
                                Ppat_record Closed
                                [
                                  "contents" (lib/types.ml[685,21805+21]..[685,21805+29])
                                    pattern (lib/types.ml[685,21805+32]..[685,21805+38])
                                      Ppat_construct "RFnone" (lib/types.ml[685,21805+32]..[685,21805+38])
                                      None
                                ]
                        ]
                  expression (lib/types.ml[685,21805+51]..[685,21805+54])
                    Pexp_ident "ext" (lib/types.ml[685,21805+51]..[685,21805+54])
                <case>
                  pattern (lib/types.ml[686,21860+4]..[686,21860+75])
                    Ppat_construct "RFeither" (lib/types.ml[686,21860+4]..[686,21860+12])
                    Some
                      []
                      pattern (lib/types.ml[686,21860+13]..[686,21860+75])
                        Ppat_record Closed
                        [
                          "ext" (lib/types.ml[686,21860+14]..[686,21860+17])
                            pattern (lib/types.ml[686,21860+20]..[686,21860+74])
                              Ppat_record Closed
                              [
                                "contents" (lib/types.ml[686,21860+21]..[686,21860+29])
                                  pattern (lib/types.ml[686,21860+32]..[686,21860+73])
                                    Ppat_alias "rf" (lib/types.ml[686,21860+71]..[686,21860+73])
                                    pattern (lib/types.ml[686,21860+32]..[686,21860+67])
                                      Ppat_or
                                      pattern (lib/types.ml[686,21860+32]..[686,21860+56])
                                        Ppat_or
                                        pattern (lib/types.ml[686,21860+32]..[686,21860+42])
                                          Ppat_construct "RFeither" (lib/types.ml[686,21860+32]..[686,21860+40])
                                          Some
                                            []
                                            pattern (lib/types.ml[686,21860+41]..[686,21860+42])
                                              Ppat_any
                                        pattern (lib/types.ml[686,21860+45]..[686,21860+56])
                                          Ppat_construct "RFpresent" (lib/types.ml[686,21860+45]..[686,21860+54])
                                          Some
                                            []
                                            pattern (lib/types.ml[686,21860+55]..[686,21860+56])
                                              Ppat_any
                                      pattern (lib/types.ml[686,21860+59]..[686,21860+67])
                                        Ppat_construct "RFabsent" (lib/types.ml[686,21860+59]..[686,21860+67])
                                        None
                              ]
                        ]
                  expression (lib/types.ml[687,21939+6]..[687,21939+22])
                    Pexp_apply
                    expression (lib/types.ml[687,21939+6]..[687,21939+19])
                      Pexp_ident "row_field_ext" (lib/types.ml[687,21939+6]..[687,21939+19])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[687,21939+20]..[687,21939+22])
                          Pexp_ident "rf" (lib/types.ml[687,21939+20]..[687,21939+22])
                    ]
                <case>
                  pattern (lib/types.ml[688,21962+4]..[688,21962+5])
                    Ppat_any
                  expression (lib/types.ml[688,21962+9]..[688,21962+48])
                    Pexp_apply
                    expression (lib/types.ml[688,21962+9]..[688,21962+25])
                      Pexp_ident "Misc.fatal_error" (lib/types.ml[688,21962+9]..[688,21962+25])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[688,21962+26]..[688,21962+48])
                          Pexp_constant PConst_string("Types.row_field_ext ",(lib/types.ml[688,21962+27]..[688,21962+47]),None)
                    ]
              ]
    ]
  structure_item (lib/types.ml[690,22012+0]..[690,22012+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[690,22012+4]..[690,22012+14])
          Ppat_var "rf_present" (lib/types.ml[690,22012+4]..[690,22012+14])
        expression (lib/types.ml[690,22012+15]..[690,22012+34]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[690,22012+15]..[690,22012+18])
              Nolabel
              None
              pattern (lib/types.ml[690,22012+15]..[690,22012+18])
                Ppat_var "oty" (lib/types.ml[690,22012+15]..[690,22012+18])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[690,22012+21]..[690,22012+34])
              Pexp_construct "RFpresent" (lib/types.ml[690,22012+21]..[690,22012+30])
              Some
                expression (lib/types.ml[690,22012+31]..[690,22012+34])
                  Pexp_ident "oty" (lib/types.ml[690,22012+31]..[690,22012+34])
    ]
  structure_item (lib/types.ml[691,22047+0]..[691,22047+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[691,22047+4]..[691,22047+13])
          Ppat_var "rf_absent" (lib/types.ml[691,22047+4]..[691,22047+13])
        expression (lib/types.ml[691,22047+16]..[691,22047+24])
          Pexp_construct "RFabsent" (lib/types.ml[691,22047+16]..[691,22047+24])
          None
    ]
  structure_item (lib/types.ml[692,22072+0]..[698,22228+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[692,22072+4]..[692,22072+13])
          Ppat_var "rf_either" (lib/types.ml[692,22072+4]..[692,22072+13])
        expression (lib/types.ml[692,22072+14]..[698,22228+43]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[692,22072+14]..[692,22072+25])
              Optional "use_ext_of"
              None
              pattern (lib/types.ml[692,22072+15]..[692,22072+25])
                Ppat_var "use_ext_of" (lib/types.ml[692,22072+15]..[692,22072+25])
            Pparam_val (lib/types.ml[692,22072+26]..[692,22072+33])
              Labelled "no_arg"
              None
              pattern (lib/types.ml[692,22072+27]..[692,22072+33])
                Ppat_var "no_arg" (lib/types.ml[692,22072+27]..[692,22072+33])
            Pparam_val (lib/types.ml[692,22072+34]..[692,22072+42])
              Nolabel
              None
              pattern (lib/types.ml[692,22072+34]..[692,22072+42])
                Ppat_var "arg_type" (lib/types.ml[692,22072+34]..[692,22072+42])
            Pparam_val (lib/types.ml[692,22072+43]..[692,22072+51])
              Labelled "matched"
              None
              pattern (lib/types.ml[692,22072+44]..[692,22072+51])
                Ppat_var "matched" (lib/types.ml[692,22072+44]..[692,22072+51])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[693,22126+2]..[698,22228+43])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[693,22126+6]..[693,22126+9])
                    Ppat_var "ext" (lib/types.ml[693,22126+6]..[693,22126+9])
                  expression (lib/types.ml[694,22138+4]..[696,22198+24])
                    Pexp_match
                    expression (lib/types.ml[694,22138+10]..[694,22138+20])
                      Pexp_ident "use_ext_of" (lib/types.ml[694,22138+10]..[694,22138+20])
                    [
                      <case>
                        pattern (lib/types.ml[695,22164+6]..[695,22164+13])
                          Ppat_construct "Some" (lib/types.ml[695,22164+6]..[695,22164+10])
                          Some
                            []
                            pattern (lib/types.ml[695,22164+11]..[695,22164+13])
                              Ppat_var "rf" (lib/types.ml[695,22164+11]..[695,22164+13])
                        expression (lib/types.ml[695,22164+17]..[695,22164+33])
                          Pexp_apply
                          expression (lib/types.ml[695,22164+17]..[695,22164+30])
                            Pexp_ident "row_field_ext" (lib/types.ml[695,22164+17]..[695,22164+30])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[695,22164+31]..[695,22164+33])
                                Pexp_ident "rf" (lib/types.ml[695,22164+31]..[695,22164+33])
                          ]
                      <case>
                        pattern (lib/types.ml[696,22198+6]..[696,22198+10])
                          Ppat_construct "None" (lib/types.ml[696,22198+6]..[696,22198+10])
                          None
                        expression (lib/types.ml[696,22198+14]..[696,22198+24])
                          Pexp_apply
                          expression (lib/types.ml[696,22198+14]..[696,22198+17])
                            Pexp_ident "ref" (lib/types.ml[696,22198+14]..[696,22198+17])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[696,22198+18]..[696,22198+24])
                                Pexp_construct "RFnone" (lib/types.ml[696,22198+18]..[696,22198+24])
                                None
                          ]
                    ]
              ]
              expression (lib/types.ml[698,22228+2]..[698,22228+43])
                Pexp_construct "RFeither" (lib/types.ml[698,22228+2]..[698,22228+10])
                Some
                  expression (lib/types.ml[698,22228+11]..[698,22228+43])
                    Pexp_record
                    [
                      "no_arg" (lib/types.ml[698,22228+12]..[698,22228+18]) ghost
                        expression (lib/types.ml[698,22228+12]..[698,22228+18])
                          Pexp_ident "no_arg" (lib/types.ml[698,22228+12]..[698,22228+18])
                      "arg_type" (lib/types.ml[698,22228+20]..[698,22228+28]) ghost
                        expression (lib/types.ml[698,22228+20]..[698,22228+28])
                          Pexp_ident "arg_type" (lib/types.ml[698,22228+20]..[698,22228+28])
                      "matched" (lib/types.ml[698,22228+30]..[698,22228+37]) ghost
                        expression (lib/types.ml[698,22228+30]..[698,22228+37])
                          Pexp_ident "matched" (lib/types.ml[698,22228+30]..[698,22228+37])
                      "ext" (lib/types.ml[698,22228+39]..[698,22228+42]) ghost
                        expression (lib/types.ml[698,22228+39]..[698,22228+42])
                          Pexp_ident "ext" (lib/types.ml[698,22228+39]..[698,22228+42])
                    ]
                    None
    ]
  structure_item (lib/types.ml[700,22273+0]..[704,22401+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[700,22273+4]..[700,22273+16])
          Ppat_var "rf_either_of" (lib/types.ml[700,22273+4]..[700,22273+16])
        expression (lib/types.ml[700,22273+19]..[704,22401+75])
          Pexp_function
          []
          None
          Pfunction_cases (lib/types.ml[700,22273+19]..[704,22401+75])
            [
              <case>
                pattern (lib/types.ml[701,22301+4]..[701,22301+8])
                  Ppat_construct "None" (lib/types.ml[701,22301+4]..[701,22301+8])
                  None
                expression (lib/types.ml[702,22313+6]..[702,22313+72])
                  Pexp_construct "RFeither" (lib/types.ml[702,22313+6]..[702,22313+14])
                  Some
                    expression (lib/types.ml[702,22313+15]..[702,22313+72])
                      Pexp_record
                      [
                        "no_arg" (lib/types.ml[702,22313+16]..[702,22313+22])
                          expression (lib/types.ml[702,22313+23]..[702,22313+27])
                            Pexp_construct "true" (lib/types.ml[702,22313+23]..[702,22313+27])
                            None
                        "arg_type" (lib/types.ml[702,22313+29]..[702,22313+37])
                          expression (lib/types.ml[702,22313+38]..[702,22313+40])
                            Pexp_construct "[]" (lib/types.ml[702,22313+38]..[702,22313+40])
                            None
                        "matched" (lib/types.ml[702,22313+42]..[702,22313+49])
                          expression (lib/types.ml[702,22313+50]..[702,22313+55])
                            Pexp_construct "false" (lib/types.ml[702,22313+50]..[702,22313+55])
                            None
                        "ext" (lib/types.ml[702,22313+57]..[702,22313+60])
                          expression (lib/types.ml[702,22313+61]..[702,22313+71])
                            Pexp_apply
                            expression (lib/types.ml[702,22313+61]..[702,22313+64])
                              Pexp_ident "ref" (lib/types.ml[702,22313+61]..[702,22313+64])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[702,22313+65]..[702,22313+71])
                                  Pexp_construct "RFnone" (lib/types.ml[702,22313+65]..[702,22313+71])
                                  None
                            ]
                      ]
                      None
              <case>
                pattern (lib/types.ml[703,22386+4]..[703,22386+11])
                  Ppat_construct "Some" (lib/types.ml[703,22386+4]..[703,22386+8])
                  Some
                    []
                    pattern (lib/types.ml[703,22386+9]..[703,22386+11])
                      Ppat_var "ty" (lib/types.ml[703,22386+9]..[703,22386+11])
                expression (lib/types.ml[704,22401+6]..[704,22401+75])
                  Pexp_construct "RFeither" (lib/types.ml[704,22401+6]..[704,22401+14])
                  Some
                    expression (lib/types.ml[704,22401+15]..[704,22401+75])
                      Pexp_record
                      [
                        "no_arg" (lib/types.ml[704,22401+16]..[704,22401+22])
                          expression (lib/types.ml[704,22401+23]..[704,22401+28])
                            Pexp_construct "false" (lib/types.ml[704,22401+23]..[704,22401+28])
                            None
                        "arg_type" (lib/types.ml[704,22401+30]..[704,22401+38])
                          expression (lib/types.ml[704,22401+39]..[704,22401+43])
                            Pexp_construct "::" (lib/types.ml[704,22401+40]..[704,22401+43]) ghost
                            Some
                              expression (lib/types.ml[704,22401+40]..[704,22401+43]) ghost
                                Pexp_tuple
                                [
                                  expression (lib/types.ml[704,22401+40]..[704,22401+42])
                                    Pexp_ident "ty" (lib/types.ml[704,22401+40]..[704,22401+42])
                                  expression (lib/types.ml[704,22401+42]..[704,22401+43]) ghost
                                    Pexp_construct "[]" (lib/types.ml[704,22401+42]..[704,22401+43]) ghost
                                    None
                                ]
                        "matched" (lib/types.ml[704,22401+45]..[704,22401+52])
                          expression (lib/types.ml[704,22401+53]..[704,22401+58])
                            Pexp_construct "false" (lib/types.ml[704,22401+53]..[704,22401+58])
                            None
                        "ext" (lib/types.ml[704,22401+60]..[704,22401+63])
                          expression (lib/types.ml[704,22401+64]..[704,22401+74])
                            Pexp_apply
                            expression (lib/types.ml[704,22401+64]..[704,22401+67])
                              Pexp_ident "ref" (lib/types.ml[704,22401+64]..[704,22401+67])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[704,22401+68]..[704,22401+74])
                                  Pexp_construct "RFnone" (lib/types.ml[704,22401+68]..[704,22401+74])
                                  None
                            ]
                      ]
                      None
            ]
    ]
  structure_item (lib/types.ml[706,22478+0]..[707,22509+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[706,22478+4]..[706,22478+20])
          Ppat_var "eq_row_field_ext" (lib/types.ml[706,22478+4]..[706,22478+20])
        expression (lib/types.ml[706,22478+21]..[707,22509+40]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[706,22478+21]..[706,22478+24])
              Nolabel
              None
              pattern (lib/types.ml[706,22478+21]..[706,22478+24])
                Ppat_var "rf1" (lib/types.ml[706,22478+21]..[706,22478+24])
            Pparam_val (lib/types.ml[706,22478+25]..[706,22478+28])
              Nolabel
              None
              pattern (lib/types.ml[706,22478+25]..[706,22478+28])
                Ppat_var "rf2" (lib/types.ml[706,22478+25]..[706,22478+28])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[707,22509+2]..[707,22509+40])
              Pexp_apply
              expression (lib/types.ml[707,22509+20]..[707,22509+22])
                Pexp_ident "==" (lib/types.ml[707,22509+20]..[707,22509+22])
              [
                <arg>
                Nolabel
                  expression (lib/types.ml[707,22509+2]..[707,22509+19])
                    Pexp_apply
                    expression (lib/types.ml[707,22509+2]..[707,22509+15])
                      Pexp_ident "row_field_ext" (lib/types.ml[707,22509+2]..[707,22509+15])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[707,22509+16]..[707,22509+19])
                          Pexp_ident "rf1" (lib/types.ml[707,22509+16]..[707,22509+19])
                    ]
                <arg>
                Nolabel
                  expression (lib/types.ml[707,22509+23]..[707,22509+40])
                    Pexp_apply
                    expression (lib/types.ml[707,22509+23]..[707,22509+36])
                      Pexp_ident "row_field_ext" (lib/types.ml[707,22509+23]..[707,22509+36])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[707,22509+37]..[707,22509+40])
                          Pexp_ident "rf2" (lib/types.ml[707,22509+37]..[707,22509+40])
                    ]
              ]
    ]
  structure_item (lib/types.ml[709,22551+0]..[712,22633+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[709,22551+4]..[709,22551+26])
          Ppat_var "changed_row_field_exts" (lib/types.ml[709,22551+4]..[709,22551+26])
        expression (lib/types.ml[709,22551+27]..[712,22633+42]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[709,22551+27]..[709,22551+28])
              Nolabel
              None
              pattern (lib/types.ml[709,22551+27]..[709,22551+28])
                Ppat_var "l" (lib/types.ml[709,22551+27]..[709,22551+28])
            Pparam_val (lib/types.ml[709,22551+29]..[709,22551+30])
              Nolabel
              None
              pattern (lib/types.ml[709,22551+29]..[709,22551+30])
                Ppat_var "f" (lib/types.ml[709,22551+29]..[709,22551+30])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[710,22584+2]..[712,22633+42])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[710,22584+6]..[710,22584+10])
                    Ppat_var "exts" (lib/types.ml[710,22584+6]..[710,22584+10])
                  expression (lib/types.ml[710,22584+13]..[710,22584+37])
                    Pexp_apply
                    expression (lib/types.ml[710,22584+13]..[710,22584+21])
                      Pexp_ident "List.map" (lib/types.ml[710,22584+13]..[710,22584+21])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[710,22584+22]..[710,22584+35])
                          Pexp_ident "row_field_ext" (lib/types.ml[710,22584+22]..[710,22584+35])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[710,22584+36]..[710,22584+37])
                          Pexp_ident "l" (lib/types.ml[710,22584+36]..[710,22584+37])
                    ]
              ]
              expression (lib/types.ml[711,22625+2]..[712,22633+42])
                Pexp_sequence
                expression (lib/types.ml[711,22625+2]..[711,22625+6])
                  Pexp_apply
                  expression (lib/types.ml[711,22625+2]..[711,22625+3])
                    Pexp_ident "f" (lib/types.ml[711,22625+2]..[711,22625+3])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[711,22625+4]..[711,22625+6])
                        Pexp_construct "()" (lib/types.ml[711,22625+4]..[711,22625+6])
                        None
                  ]
                expression (lib/types.ml[712,22633+2]..[712,22633+42])
                  Pexp_apply
                  expression (lib/types.ml[712,22633+2]..[712,22633+13])
                    Pexp_ident "List.exists" (lib/types.ml[712,22633+2]..[712,22633+13])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[712,22633+14]..[712,22633+37])
                        Pexp_function
                        [
                          Pparam_val (lib/types.ml[712,22633+19]..[712,22633+20])
                            Nolabel
                            None
                            pattern (lib/types.ml[712,22633+19]..[712,22633+20])
                              Ppat_var "r" (lib/types.ml[712,22633+19]..[712,22633+20])
                        ]
                        None
                        Pfunction_body
                          expression (lib/types.ml[712,22633+24]..[712,22633+36])
                            Pexp_apply
                            expression (lib/types.ml[712,22633+27]..[712,22633+29])
                              Pexp_ident "<>" (lib/types.ml[712,22633+27]..[712,22633+29])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[712,22633+24]..[712,22633+26])
                                  Pexp_apply
                                  expression (lib/types.ml[712,22633+24]..[712,22633+25])
                                    Pexp_ident "!" (lib/types.ml[712,22633+24]..[712,22633+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/types.ml[712,22633+25]..[712,22633+26])
                                        Pexp_ident "r" (lib/types.ml[712,22633+25]..[712,22633+26])
                                  ]
                              <arg>
                              Nolabel
                                expression (lib/types.ml[712,22633+30]..[712,22633+36])
                                  Pexp_construct "RFnone" (lib/types.ml[712,22633+30]..[712,22633+36])
                                  None
                            ]
                    <arg>
                    Nolabel
                      expression (lib/types.ml[712,22633+38]..[712,22633+42])
                        Pexp_ident "exts" (lib/types.ml[712,22633+38]..[712,22633+42])
                  ]
    ]
  structure_item (lib/types.ml[714,22677+0]..[724,23011+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[714,22677+4]..[714,22677+19])
          Ppat_var "match_row_field" (lib/types.ml[714,22677+4]..[714,22677+19])
        expression (lib/types.ml[714,22677+20]..[724,23011+38]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[714,22677+20]..[714,22677+28])
              Labelled "present"
              None
              pattern (lib/types.ml[714,22677+21]..[714,22677+28])
                Ppat_var "present" (lib/types.ml[714,22677+21]..[714,22677+28])
            Pparam_val (lib/types.ml[714,22677+29]..[714,22677+36])
              Labelled "absent"
              None
              pattern (lib/types.ml[714,22677+30]..[714,22677+36])
                Ppat_var "absent" (lib/types.ml[714,22677+30]..[714,22677+36])
            Pparam_val (lib/types.ml[714,22677+37]..[714,22677+44])
              Labelled "either"
              None
              pattern (lib/types.ml[714,22677+38]..[714,22677+44])
                Ppat_var "either" (lib/types.ml[714,22677+38]..[714,22677+44])
            Pparam_val (lib/types.ml[714,22677+45]..[714,22677+60])
              Nolabel
              None
              pattern (lib/types.ml[714,22677+45]..[714,22677+60])
                Ppat_constraint
                pattern (lib/types.ml[714,22677+46]..[714,22677+47])
                  Ppat_var "f" (lib/types.ml[714,22677+46]..[714,22677+47])
                core_type (lib/types.ml[714,22677+50]..[714,22677+59])
                  Ptyp_constr "row_field" (lib/types.ml[714,22677+50]..[714,22677+59])
                  []
          ]
          None
          Pfunction_body
            expression (lib/types.ml[715,22740+2]..[724,23011+38])
              Pexp_match
              expression (lib/types.ml[715,22740+8]..[715,22740+9])
                Pexp_ident "f" (lib/types.ml[715,22740+8]..[715,22740+9])
              [
                <case>
                  pattern (lib/types.ml[716,22755+4]..[716,22755+12])
                    Ppat_construct "RFabsent" (lib/types.ml[716,22755+4]..[716,22755+12])
                    None
                  expression (lib/types.ml[716,22755+16]..[716,22755+25])
                    Pexp_apply
                    expression (lib/types.ml[716,22755+16]..[716,22755+22])
                      Pexp_ident "absent" (lib/types.ml[716,22755+16]..[716,22755+22])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[716,22755+23]..[716,22755+25])
                          Pexp_construct "()" (lib/types.ml[716,22755+23]..[716,22755+25])
                          None
                    ]
                <case>
                  pattern (lib/types.ml[717,22781+4]..[717,22781+15])
                    Ppat_construct "RFpresent" (lib/types.ml[717,22781+4]..[717,22781+13])
                    Some
                      []
                      pattern (lib/types.ml[717,22781+14]..[717,22781+15])
                        Ppat_var "t" (lib/types.ml[717,22781+14]..[717,22781+15])
                  expression (lib/types.ml[717,22781+19]..[717,22781+28])
                    Pexp_apply
                    expression (lib/types.ml[717,22781+19]..[717,22781+26])
                      Pexp_ident "present" (lib/types.ml[717,22781+19]..[717,22781+26])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[717,22781+27]..[717,22781+28])
                          Pexp_ident "t" (lib/types.ml[717,22781+27]..[717,22781+28])
                    ]
                <case>
                  pattern (lib/types.ml[718,22810+4]..[718,22810+45])
                    Ppat_construct "RFeither" (lib/types.ml[718,22810+4]..[718,22810+12])
                    Some
                      []
                      pattern (lib/types.ml[718,22810+13]..[718,22810+45])
                        Ppat_record Closed
                        [
                          "no_arg" (lib/types.ml[718,22810+14]..[718,22810+20]) ghost
                            pattern (lib/types.ml[718,22810+14]..[718,22810+20])
                              Ppat_var "no_arg" (lib/types.ml[718,22810+14]..[718,22810+20])
                          "arg_type" (lib/types.ml[718,22810+22]..[718,22810+30]) ghost
                            pattern (lib/types.ml[718,22810+22]..[718,22810+30])
                              Ppat_var "arg_type" (lib/types.ml[718,22810+22]..[718,22810+30])
                          "matched" (lib/types.ml[718,22810+32]..[718,22810+39]) ghost
                            pattern (lib/types.ml[718,22810+32]..[718,22810+39])
                              Ppat_var "matched" (lib/types.ml[718,22810+32]..[718,22810+39])
                          "ext" (lib/types.ml[718,22810+41]..[718,22810+44]) ghost
                            pattern (lib/types.ml[718,22810+41]..[718,22810+44])
                              Ppat_var "ext" (lib/types.ml[718,22810+41]..[718,22810+44])
                        ]
                  expression (lib/types.ml[719,22859+6]..[724,23011+38])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/types.ml[719,22859+10]..[719,22859+11])
                          Ppat_var "e" (lib/types.ml[719,22859+10]..[719,22859+11])
                        core_type (lib/types.ml[719,22859+14]..[719,22859+30])
                          Ptyp_constr "option" (lib/types.ml[719,22859+24]..[719,22859+30])
                          [
                            core_type (lib/types.ml[719,22859+14]..[719,22859+23])
                              Ptyp_constr "row_field" (lib/types.ml[719,22859+14]..[719,22859+23])
                              []
                          ]
                        expression (lib/types.ml[720,22892+8]..[722,22941+60])
                          Pexp_match
                          expression (lib/types.ml[720,22892+14]..[720,22892+18])
                            Pexp_apply
                            expression (lib/types.ml[720,22892+14]..[720,22892+15])
                              Pexp_ident "!" (lib/types.ml[720,22892+14]..[720,22892+15])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[720,22892+15]..[720,22892+18])
                                  Pexp_ident "ext" (lib/types.ml[720,22892+15]..[720,22892+18])
                            ]
                          [
                            <case>
                              pattern (lib/types.ml[721,22916+10]..[721,22916+16])
                                Ppat_construct "RFnone" (lib/types.ml[721,22916+10]..[721,22916+16])
                                None
                              expression (lib/types.ml[721,22916+20]..[721,22916+24])
                                Pexp_construct "None" (lib/types.ml[721,22916+20]..[721,22916+24])
                                None
                            <case>
                              pattern (lib/types.ml[722,22941+10]..[722,22941+50])
                                Ppat_alias "e" (lib/types.ml[722,22941+49]..[722,22941+50])
                                pattern (lib/types.ml[722,22941+10]..[722,22941+45])
                                  Ppat_or
                                  pattern (lib/types.ml[722,22941+10]..[722,22941+34])
                                    Ppat_or
                                    pattern (lib/types.ml[722,22941+10]..[722,22941+20])
                                      Ppat_construct "RFeither" (lib/types.ml[722,22941+10]..[722,22941+18])
                                      Some
                                        []
                                        pattern (lib/types.ml[722,22941+19]..[722,22941+20])
                                          Ppat_any
                                    pattern (lib/types.ml[722,22941+23]..[722,22941+34])
                                      Ppat_construct "RFpresent" (lib/types.ml[722,22941+23]..[722,22941+32])
                                      Some
                                        []
                                        pattern (lib/types.ml[722,22941+33]..[722,22941+34])
                                          Ppat_any
                                  pattern (lib/types.ml[722,22941+37]..[722,22941+45])
                                    Ppat_construct "RFabsent" (lib/types.ml[722,22941+37]..[722,22941+45])
                                    None
                              expression (lib/types.ml[722,22941+54]..[722,22941+60])
                                Pexp_construct "Some" (lib/types.ml[722,22941+54]..[722,22941+58])
                                Some
                                  expression (lib/types.ml[722,22941+59]..[722,22941+60])
                                    Pexp_ident "e" (lib/types.ml[722,22941+59]..[722,22941+60])
                          ]
                    ]
                    expression (lib/types.ml[724,23011+6]..[724,23011+38])
                      Pexp_apply
                      expression (lib/types.ml[724,23011+6]..[724,23011+12])
                        Pexp_ident "either" (lib/types.ml[724,23011+6]..[724,23011+12])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[724,23011+13]..[724,23011+19])
                            Pexp_ident "no_arg" (lib/types.ml[724,23011+13]..[724,23011+19])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[724,23011+20]..[724,23011+28])
                            Pexp_ident "arg_type" (lib/types.ml[724,23011+20]..[724,23011+28])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[724,23011+29]..[724,23011+36])
                            Pexp_ident "matched" (lib/types.ml[724,23011+29]..[724,23011+36])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[724,23011+37]..[724,23011+38])
                            Pexp_ident "e" (lib/types.ml[724,23011+37]..[724,23011+38])
                      ]
              ]
    ]
  structure_item (lib/types.ml[729,23084+0]..[729,23084+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[729,23084+4]..[729,23084+10])
          Ppat_var "new_id" (lib/types.ml[729,23084+4]..[729,23084+10])
        expression (lib/types.ml[729,23084+13]..[729,23084+35])
          Pexp_apply
          expression (lib/types.ml[729,23084+13]..[729,23084+30])
            Pexp_ident "Local_store.s_ref" (lib/types.ml[729,23084+13]..[729,23084+30])
          [
            <arg>
            Nolabel
              expression (lib/types.ml[729,23084+31]..[729,23084+35])
                Pexp_constant PConst_int (-1,None)
          ]
    ]
  structure_item (lib/types.ml[731,23121+0]..[731,23121+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[731,23121+4]..[731,23121+15])
          Ppat_var "create_expr" (lib/types.ml[731,23121+4]..[731,23121+15])
        expression (lib/types.ml[731,23121+18]..[731,23121+39])
          Pexp_ident "Transient_expr.create" (lib/types.ml[731,23121+18]..[731,23121+39])
    ]
  structure_item (lib/types.ml[733,23162+0]..[735,23210+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[733,23162+4]..[733,23162+10])
          Ppat_var "newty3" (lib/types.ml[733,23162+4]..[733,23162+10])
        expression (lib/types.ml[733,23162+11]..[735,23210+44]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[733,23162+11]..[733,23162+17])
              Labelled "level"
              None
              pattern (lib/types.ml[733,23162+12]..[733,23162+17])
                Ppat_var "level" (lib/types.ml[733,23162+12]..[733,23162+17])
            Pparam_val (lib/types.ml[733,23162+18]..[733,23162+24])
              Labelled "scope"
              None
              pattern (lib/types.ml[733,23162+19]..[733,23162+24])
                Ppat_var "scope" (lib/types.ml[733,23162+19]..[733,23162+24])
            Pparam_val (lib/types.ml[733,23162+25]..[733,23162+29])
              Nolabel
              None
              pattern (lib/types.ml[733,23162+25]..[733,23162+29])
                Ppat_var "desc" (lib/types.ml[733,23162+25]..[733,23162+29])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[734,23195+2]..[735,23210+44])
              Pexp_sequence
              expression (lib/types.ml[734,23195+2]..[734,23195+13])
                Pexp_apply
                expression (lib/types.ml[734,23195+2]..[734,23195+6])
                  Pexp_ident "incr" (lib/types.ml[734,23195+2]..[734,23195+6])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[734,23195+7]..[734,23195+13])
                      Pexp_ident "new_id" (lib/types.ml[734,23195+7]..[734,23195+13])
                ]
              expression (lib/types.ml[735,23210+2]..[735,23210+44])
                Pexp_apply
                expression (lib/types.ml[735,23210+2]..[735,23210+13])
                  Pexp_ident "create_expr" (lib/types.ml[735,23210+2]..[735,23210+13])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[735,23210+14]..[735,23210+18])
                      Pexp_ident "desc" (lib/types.ml[735,23210+14]..[735,23210+18])
                  <arg>
                  Labelled "level"
                    expression (lib/types.ml[735,23210+20]..[735,23210+25])
                      Pexp_ident "level" (lib/types.ml[735,23210+20]..[735,23210+25])
                  <arg>
                  Labelled "scope"
                    expression (lib/types.ml[735,23210+27]..[735,23210+32])
                      Pexp_ident "scope" (lib/types.ml[735,23210+27]..[735,23210+32])
                  <arg>
                  Labelled "id"
                    expression (lib/types.ml[735,23210+37]..[735,23210+44])
                      Pexp_apply
                      expression (lib/types.ml[735,23210+37]..[735,23210+38])
                        Pexp_ident "!" (lib/types.ml[735,23210+37]..[735,23210+38])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[735,23210+38]..[735,23210+44])
                            Pexp_ident "new_id" (lib/types.ml[735,23210+38]..[735,23210+44])
                      ]
                ]
    ]
  structure_item (lib/types.ml[737,23256+0]..[738,23281+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[737,23256+4]..[737,23256+10])
          Ppat_var "newty2" (lib/types.ml[737,23256+4]..[737,23256+10])
        expression (lib/types.ml[737,23256+11]..[738,23281+46]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[737,23256+11]..[737,23256+17])
              Labelled "level"
              None
              pattern (lib/types.ml[737,23256+12]..[737,23256+17])
                Ppat_var "level" (lib/types.ml[737,23256+12]..[737,23256+17])
            Pparam_val (lib/types.ml[737,23256+18]..[737,23256+22])
              Nolabel
              None
              pattern (lib/types.ml[737,23256+18]..[737,23256+22])
                Ppat_var "desc" (lib/types.ml[737,23256+18]..[737,23256+22])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[738,23281+2]..[738,23281+46])
              Pexp_apply
              expression (lib/types.ml[738,23281+2]..[738,23281+8])
                Pexp_ident "newty3" (lib/types.ml[738,23281+2]..[738,23281+8])
              [
                <arg>
                Labelled "level"
                  expression (lib/types.ml[738,23281+10]..[738,23281+15])
                    Pexp_ident "level" (lib/types.ml[738,23281+10]..[738,23281+15])
                <arg>
                Labelled "scope"
                  expression (lib/types.ml[738,23281+23]..[738,23281+41])
                    Pexp_ident "Ident.lowest_scope" (lib/types.ml[738,23281+23]..[738,23281+41])
                <arg>
                Nolabel
                  expression (lib/types.ml[738,23281+42]..[738,23281+46])
                    Pexp_ident "desc" (lib/types.ml[738,23281+42]..[738,23281+46])
              ]
    ]
  structure_item (lib/types.ml[744,23495+0]..[753,23923+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[744,23495+4]..[744,23495+15])
          Ppat_var "undo_change" (lib/types.ml[744,23495+4]..[744,23495+15])
        expression (lib/types.ml[744,23495+18]..[753,23923+30])
          Pexp_function
          []
          None
          Pfunction_cases (lib/types.ml[744,23495+18]..[753,23923+30])
            [
              <case>
                pattern (lib/types.ml[745,23522+4]..[745,23522+21])
                  Ppat_construct "Ctype" (lib/types.ml[745,23522+4]..[745,23522+9])
                  Some
                    []
                    pattern (lib/types.ml[745,23522+11]..[745,23522+21])
                      Ppat_tuple
                      [
                        pattern (lib/types.ml[745,23522+12]..[745,23522+14])
                          Ppat_var "ty" (lib/types.ml[745,23522+12]..[745,23522+14])
                        pattern (lib/types.ml[745,23522+16]..[745,23522+20])
                          Ppat_var "desc" (lib/types.ml[745,23522+16]..[745,23522+20])
                      ]
                expression (lib/types.ml[745,23522+25]..[745,23522+56])
                  Pexp_apply
                  expression (lib/types.ml[745,23522+25]..[745,23522+48])
                    Pexp_ident "Transient_expr.set_desc" (lib/types.ml[745,23522+25]..[745,23522+48])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[745,23522+49]..[745,23522+51])
                        Pexp_ident "ty" (lib/types.ml[745,23522+49]..[745,23522+51])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[745,23522+52]..[745,23522+56])
                        Pexp_ident "desc" (lib/types.ml[745,23522+52]..[745,23522+56])
                  ]
              <case>
                pattern (lib/types.ml[746,23579+4]..[746,23579+27])
                  Ppat_construct "Ccompress" (lib/types.ml[746,23579+4]..[746,23579+13])
                  Some
                    []
                    pattern (lib/types.ml[746,23579+14]..[746,23579+27])
                      Ppat_tuple
                      [
                        pattern (lib/types.ml[746,23579+15]..[746,23579+17])
                          Ppat_var "ty" (lib/types.ml[746,23579+15]..[746,23579+17])
                        pattern (lib/types.ml[746,23579+19]..[746,23579+23])
                          Ppat_var "desc" (lib/types.ml[746,23579+19]..[746,23579+23])
                        pattern (lib/types.ml[746,23579+25]..[746,23579+26])
                          Ppat_any
                      ]
                expression (lib/types.ml[746,23579+31]..[746,23579+62])
                  Pexp_apply
                  expression (lib/types.ml[746,23579+31]..[746,23579+54])
                    Pexp_ident "Transient_expr.set_desc" (lib/types.ml[746,23579+31]..[746,23579+54])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[746,23579+55]..[746,23579+57])
                        Pexp_ident "ty" (lib/types.ml[746,23579+55]..[746,23579+57])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[746,23579+58]..[746,23579+62])
                        Pexp_ident "desc" (lib/types.ml[746,23579+58]..[746,23579+62])
                  ]
              <case>
                pattern (lib/types.ml[747,23642+4]..[747,23642+22])
                  Ppat_construct "Clevel" (lib/types.ml[747,23642+4]..[747,23642+10])
                  Some
                    []
                    pattern (lib/types.ml[747,23642+11]..[747,23642+22])
                      Ppat_tuple
                      [
                        pattern (lib/types.ml[747,23642+12]..[747,23642+14])
                          Ppat_var "ty" (lib/types.ml[747,23642+12]..[747,23642+14])
                        pattern (lib/types.ml[747,23642+16]..[747,23642+21])
                          Ppat_var "level" (lib/types.ml[747,23642+16]..[747,23642+21])
                      ]
                expression (lib/types.ml[747,23642+26]..[747,23642+59])
                  Pexp_apply
                  expression (lib/types.ml[747,23642+26]..[747,23642+50])
                    Pexp_ident "Transient_expr.set_level" (lib/types.ml[747,23642+26]..[747,23642+50])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[747,23642+51]..[747,23642+53])
                        Pexp_ident "ty" (lib/types.ml[747,23642+51]..[747,23642+53])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[747,23642+54]..[747,23642+59])
                        Pexp_ident "level" (lib/types.ml[747,23642+54]..[747,23642+59])
                  ]
              <case>
                pattern (lib/types.ml[748,23702+4]..[748,23702+22])
                  Ppat_construct "Cscope" (lib/types.ml[748,23702+4]..[748,23702+10])
                  Some
                    []
                    pattern (lib/types.ml[748,23702+11]..[748,23702+22])
                      Ppat_tuple
                      [
                        pattern (lib/types.ml[748,23702+12]..[748,23702+14])
                          Ppat_var "ty" (lib/types.ml[748,23702+12]..[748,23702+14])
                        pattern (lib/types.ml[748,23702+16]..[748,23702+21])
                          Ppat_var "scope" (lib/types.ml[748,23702+16]..[748,23702+21])
                      ]
                expression (lib/types.ml[748,23702+26]..[748,23702+59])
                  Pexp_apply
                  expression (lib/types.ml[748,23702+26]..[748,23702+50])
                    Pexp_ident "Transient_expr.set_scope" (lib/types.ml[748,23702+26]..[748,23702+50])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[748,23702+51]..[748,23702+53])
                        Pexp_ident "ty" (lib/types.ml[748,23702+51]..[748,23702+53])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[748,23702+54]..[748,23702+59])
                        Pexp_ident "scope" (lib/types.ml[748,23702+54]..[748,23702+59])
                  ]
              <case>
                pattern (lib/types.ml[749,23762+4]..[749,23762+17])
                  Ppat_construct "Cname" (lib/types.ml[749,23762+4]..[749,23762+9])
                  Some
                    []
                    pattern (lib/types.ml[749,23762+11]..[749,23762+17])
                      Ppat_tuple
                      [
                        pattern (lib/types.ml[749,23762+12]..[749,23762+13])
                          Ppat_var "r" (lib/types.ml[749,23762+12]..[749,23762+13])
                        pattern (lib/types.ml[749,23762+15]..[749,23762+16])
                          Ppat_var "v" (lib/types.ml[749,23762+15]..[749,23762+16])
                      ]
                expression (lib/types.ml[749,23762+24]..[749,23762+30])
                  Pexp_apply
                  expression (lib/types.ml[749,23762+26]..[749,23762+28])
                    Pexp_ident ":=" (lib/types.ml[749,23762+26]..[749,23762+28])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[749,23762+24]..[749,23762+25])
                        Pexp_ident "r" (lib/types.ml[749,23762+24]..[749,23762+25])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[749,23762+29]..[749,23762+30])
                        Pexp_ident "v" (lib/types.ml[749,23762+29]..[749,23762+30])
                  ]
              <case>
                pattern (lib/types.ml[750,23793+4]..[750,23793+12])
                  Ppat_construct "Crow" (lib/types.ml[750,23793+4]..[750,23793+8])
                  Some
                    []
                    pattern (lib/types.ml[750,23793+11]..[750,23793+12])
                      Ppat_var "r" (lib/types.ml[750,23793+11]..[750,23793+12])
                expression (lib/types.ml[750,23793+24]..[750,23793+35])
                  Pexp_apply
                  expression (lib/types.ml[750,23793+26]..[750,23793+28])
                    Pexp_ident ":=" (lib/types.ml[750,23793+26]..[750,23793+28])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[750,23793+24]..[750,23793+25])
                        Pexp_ident "r" (lib/types.ml[750,23793+24]..[750,23793+25])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[750,23793+29]..[750,23793+35])
                        Pexp_construct "RFnone" (lib/types.ml[750,23793+29]..[750,23793+35])
                        None
                  ]
              <case>
                pattern (lib/types.ml[751,23829+4]..[751,23829+20])
                  Ppat_construct "Ckind" (lib/types.ml[751,23829+4]..[751,23829+9])
                  Some
                    []
                    pattern (lib/types.ml[751,23829+11]..[751,23829+20])
                      Ppat_construct "FKvar" (lib/types.ml[751,23829+12]..[751,23829+17])
                      Some
                        []
                        pattern (lib/types.ml[751,23829+18]..[751,23829+19])
                          Ppat_var "r" (lib/types.ml[751,23829+18]..[751,23829+19])
                expression (lib/types.ml[751,23829+24]..[751,23829+49])
                  Pexp_setfield
                  expression (lib/types.ml[751,23829+24]..[751,23829+25])
                    Pexp_ident "r" (lib/types.ml[751,23829+24]..[751,23829+25])
                  "field_kind" (lib/types.ml[751,23829+26]..[751,23829+36])
                  expression (lib/types.ml[751,23829+40]..[751,23829+49])
                    Pexp_construct "FKprivate" (lib/types.ml[751,23829+40]..[751,23829+49])
                    None
              <case>
                pattern (lib/types.ml[752,23879+4]..[752,23879+19])
                  Ppat_construct "Ccommu" (lib/types.ml[752,23879+4]..[752,23879+10])
                  Some
                    []
                    pattern (lib/types.ml[752,23879+11]..[752,23879+19])
                      Ppat_construct "Cvar" (lib/types.ml[752,23879+12]..[752,23879+16])
                      Some
                        []
                        pattern (lib/types.ml[752,23879+17]..[752,23879+18])
                          Ppat_var "r" (lib/types.ml[752,23879+17]..[752,23879+18])
                expression (lib/types.ml[752,23879+24]..[752,23879+43])
                  Pexp_setfield
                  expression (lib/types.ml[752,23879+24]..[752,23879+25])
                    Pexp_ident "r" (lib/types.ml[752,23879+24]..[752,23879+25])
                  "commu" (lib/types.ml[752,23879+26]..[752,23879+31])
                  expression (lib/types.ml[752,23879+35]..[752,23879+43])
                    Pexp_construct "Cunknown" (lib/types.ml[752,23879+35]..[752,23879+43])
                    None
              <case>
                pattern (lib/types.ml[753,23923+4]..[753,23923+17])
                  Ppat_construct "Cuniv" (lib/types.ml[753,23923+4]..[753,23923+9])
                  Some
                    []
                    pattern (lib/types.ml[753,23923+11]..[753,23923+17])
                      Ppat_tuple
                      [
                        pattern (lib/types.ml[753,23923+12]..[753,23923+13])
                          Ppat_var "r" (lib/types.ml[753,23923+12]..[753,23923+13])
                        pattern (lib/types.ml[753,23923+15]..[753,23923+16])
                          Ppat_var "v" (lib/types.ml[753,23923+15]..[753,23923+16])
                      ]
                expression (lib/types.ml[753,23923+24]..[753,23923+30])
                  Pexp_apply
                  expression (lib/types.ml[753,23923+26]..[753,23923+28])
                    Pexp_ident ":=" (lib/types.ml[753,23923+26]..[753,23923+28])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[753,23923+24]..[753,23923+25])
                        Pexp_ident "r" (lib/types.ml[753,23923+24]..[753,23923+25])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[753,23923+29]..[753,23923+30])
                        Pexp_ident "v" (lib/types.ml[753,23923+29]..[753,23923+30])
                  ]
            ]
    ]
  structure_item (lib/types.ml[755,23955+0]..[755,23955+33])
    Pstr_type Rec
    [
      type_declaration "snapshot" (lib/types.ml[755,23955+5]..[755,23955+13]) (lib/types.ml[755,23955+0]..[755,23955+33])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[755,23955+16]..[755,23955+33])
              Ptyp_tuple
              [
                core_type (lib/types.ml[755,23955+16]..[755,23955+27])
                  Ptyp_constr "ref" (lib/types.ml[755,23955+24]..[755,23955+27])
                  [
                    core_type (lib/types.ml[755,23955+16]..[755,23955+23])
                      Ptyp_constr "changes" (lib/types.ml[755,23955+16]..[755,23955+23])
                      []
                  ]
                core_type (lib/types.ml[755,23955+30]..[755,23955+33])
                  Ptyp_constr "int" (lib/types.ml[755,23955+30]..[755,23955+33])
                  []
              ]
    ]
  structure_item (lib/types.ml[756,23989+0]..[756,23989+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[756,23989+4]..[756,23989+17])
          Ppat_var "last_snapshot" (lib/types.ml[756,23989+4]..[756,23989+17])
        expression (lib/types.ml[756,23989+20]..[756,23989+39])
          Pexp_apply
          expression (lib/types.ml[756,23989+20]..[756,23989+37])
            Pexp_ident "Local_store.s_ref" (lib/types.ml[756,23989+20]..[756,23989+37])
          [
            <arg>
            Nolabel
              expression (lib/types.ml[756,23989+38]..[756,23989+39])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (lib/types.ml[758,24030+0]..[759,24048+66])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[758,24030+4]..[758,24030+12])
          Ppat_var "log_type" (lib/types.ml[758,24030+4]..[758,24030+12])
        expression (lib/types.ml[758,24030+13]..[759,24048+66]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[758,24030+13]..[758,24030+15])
              Nolabel
              None
              pattern (lib/types.ml[758,24030+13]..[758,24030+15])
                Ppat_var "ty" (lib/types.ml[758,24030+13]..[758,24030+15])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[759,24048+2]..[759,24048+66])
              Pexp_ifthenelse
              expression (lib/types.ml[759,24048+5]..[759,24048+28])
                Pexp_apply
                expression (lib/types.ml[759,24048+11]..[759,24048+13])
                  Pexp_ident "<=" (lib/types.ml[759,24048+11]..[759,24048+13])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[759,24048+5]..[759,24048+10])
                      Pexp_field
                      expression (lib/types.ml[759,24048+5]..[759,24048+7])
                        Pexp_ident "ty" (lib/types.ml[759,24048+5]..[759,24048+7])
                      "id" (lib/types.ml[759,24048+8]..[759,24048+10])
                  <arg>
                  Nolabel
                    expression (lib/types.ml[759,24048+14]..[759,24048+28])
                      Pexp_apply
                      expression (lib/types.ml[759,24048+14]..[759,24048+15])
                        Pexp_ident "!" (lib/types.ml[759,24048+14]..[759,24048+15])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[759,24048+15]..[759,24048+28])
                            Pexp_ident "last_snapshot" (lib/types.ml[759,24048+15]..[759,24048+28])
                      ]
                ]
              expression (lib/types.ml[759,24048+34]..[759,24048+66])
                Pexp_apply
                expression (lib/types.ml[759,24048+34]..[759,24048+44])
                  Pexp_ident "log_change" (lib/types.ml[759,24048+34]..[759,24048+44])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[759,24048+45]..[759,24048+66])
                      Pexp_construct "Ctype" (lib/types.ml[759,24048+46]..[759,24048+51])
                      Some
                        expression (lib/types.ml[759,24048+52]..[759,24048+65])
                          Pexp_tuple
                          [
                            expression (lib/types.ml[759,24048+53]..[759,24048+55])
                              Pexp_ident "ty" (lib/types.ml[759,24048+53]..[759,24048+55])
                            expression (lib/types.ml[759,24048+57]..[759,24048+64])
                              Pexp_field
                              expression (lib/types.ml[759,24048+57]..[759,24048+59])
                                Pexp_ident "ty" (lib/types.ml[759,24048+57]..[759,24048+59])
                              "desc" (lib/types.ml[759,24048+60]..[759,24048+64])
                          ]
                ]
              None
    ]
  structure_item (lib/types.ml[760,24115+0]..[780,24801+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[760,24115+4]..[760,24115+13])
          Ppat_var "link_type" (lib/types.ml[760,24115+4]..[760,24115+13])
        expression (lib/types.ml[760,24115+14]..[780,24801+5]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[760,24115+14]..[760,24115+16])
              Nolabel
              None
              pattern (lib/types.ml[760,24115+14]..[760,24115+16])
                Ppat_var "ty" (lib/types.ml[760,24115+14]..[760,24115+16])
            Pparam_val (lib/types.ml[760,24115+17]..[760,24115+20])
              Nolabel
              None
              pattern (lib/types.ml[760,24115+17]..[760,24115+20])
                Ppat_var "ty'" (lib/types.ml[760,24115+17]..[760,24115+20])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[761,24138+2]..[780,24801+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[761,24138+6]..[761,24138+8])
                    Ppat_var "ty" (lib/types.ml[761,24138+6]..[761,24138+8])
                  expression (lib/types.ml[761,24138+11]..[761,24138+18])
                    Pexp_apply
                    expression (lib/types.ml[761,24138+11]..[761,24138+15])
                      Pexp_ident "repr" (lib/types.ml[761,24138+11]..[761,24138+15])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[761,24138+16]..[761,24138+18])
                          Pexp_ident "ty" (lib/types.ml[761,24138+16]..[761,24138+18])
                    ]
              ]
              expression (lib/types.ml[762,24160+2]..[780,24801+5])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lib/types.ml[762,24160+6]..[762,24160+9])
                      Ppat_var "ty'" (lib/types.ml[762,24160+6]..[762,24160+9])
                    expression (lib/types.ml[762,24160+12]..[762,24160+20])
                      Pexp_apply
                      expression (lib/types.ml[762,24160+12]..[762,24160+16])
                        Pexp_ident "repr" (lib/types.ml[762,24160+12]..[762,24160+16])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[762,24160+17]..[762,24160+20])
                            Pexp_ident "ty'" (lib/types.ml[762,24160+17]..[762,24160+20])
                      ]
                ]
                expression (lib/types.ml[763,24184+2]..[780,24801+5])
                  Pexp_ifthenelse
                  expression (lib/types.ml[763,24184+5]..[763,24184+14])
                    Pexp_apply
                    expression (lib/types.ml[763,24184+8]..[763,24184+10])
                      Pexp_ident "==" (lib/types.ml[763,24184+8]..[763,24184+10])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[763,24184+5]..[763,24184+7])
                          Pexp_ident "ty" (lib/types.ml[763,24184+5]..[763,24184+7])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[763,24184+11]..[763,24184+14])
                          Pexp_ident "ty'" (lib/types.ml[763,24184+11]..[763,24184+14])
                    ]
                  expression (lib/types.ml[763,24184+20]..[763,24184+22])
                    Pexp_construct "()" (lib/types.ml[763,24184+20]..[763,24184+22])
                    None
                  Some
                    expression (lib/types.ml[763,24184+28]..[780,24801+5])
                      Pexp_sequence
                      expression (lib/types.ml[764,24218+2]..[764,24218+13])
                        Pexp_apply
                        expression (lib/types.ml[764,24218+2]..[764,24218+10])
                          Pexp_ident "log_type" (lib/types.ml[764,24218+2]..[764,24218+10])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[764,24218+11]..[764,24218+13])
                              Pexp_ident "ty" (lib/types.ml[764,24218+11]..[764,24218+13])
                        ]
                      expression (lib/types.ml[765,24233+2]..[779,24789+11])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (lib/types.ml[765,24233+6]..[765,24233+10])
                              Ppat_var "desc" (lib/types.ml[765,24233+6]..[765,24233+10])
                            expression (lib/types.ml[765,24233+13]..[765,24233+20])
                              Pexp_field
                              expression (lib/types.ml[765,24233+13]..[765,24233+15])
                                Pexp_ident "ty" (lib/types.ml[765,24233+13]..[765,24233+15])
                              "desc" (lib/types.ml[765,24233+16]..[765,24233+20])
                        ]
                        expression (lib/types.ml[766,24257+2]..[779,24789+11])
                          Pexp_sequence
                          expression (lib/types.ml[766,24257+2]..[766,24257+40])
                            Pexp_apply
                            expression (lib/types.ml[766,24257+2]..[766,24257+25])
                              Pexp_ident "Transient_expr.set_desc" (lib/types.ml[766,24257+2]..[766,24257+25])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[766,24257+26]..[766,24257+28])
                                  Pexp_ident "ty" (lib/types.ml[766,24257+26]..[766,24257+28])
                              <arg>
                              Nolabel
                                expression (lib/types.ml[766,24257+29]..[766,24257+40])
                                  Pexp_construct "Tlink" (lib/types.ml[766,24257+30]..[766,24257+35])
                                  Some
                                    expression (lib/types.ml[766,24257+36]..[766,24257+39])
                                      Pexp_ident "ty'" (lib/types.ml[766,24257+36]..[766,24257+39])
                            ]
                          expression (lib/types.ml[769,24422+2]..[779,24789+11])
                            Pexp_match
                            expression (lib/types.ml[769,24422+8]..[769,24422+22])
                              Pexp_tuple
                              [
                                expression (lib/types.ml[769,24422+8]..[769,24422+12])
                                  Pexp_ident "desc" (lib/types.ml[769,24422+8]..[769,24422+12])
                                expression (lib/types.ml[769,24422+14]..[769,24422+22])
                                  Pexp_field
                                  expression (lib/types.ml[769,24422+14]..[769,24422+17])
                                    Pexp_ident "ty'" (lib/types.ml[769,24422+14]..[769,24422+17])
                                  "desc" (lib/types.ml[769,24422+18]..[769,24422+22])
                              ]
                            [
                              <case>
                                pattern (lib/types.ml[770,24450+4]..[770,24450+25])
                                  Ppat_tuple
                                  [
                                    pattern (lib/types.ml[770,24450+4]..[770,24450+13])
                                      Ppat_construct "Tvar" (lib/types.ml[770,24450+4]..[770,24450+8])
                                      Some
                                        []
                                        pattern (lib/types.ml[770,24450+9]..[770,24450+13])
                                          Ppat_var "name" (lib/types.ml[770,24450+9]..[770,24450+13])
                                    pattern (lib/types.ml[770,24450+15]..[770,24450+25])
                                      Ppat_construct "Tvar" (lib/types.ml[770,24450+15]..[770,24450+19])
                                      Some
                                        []
                                        pattern (lib/types.ml[770,24450+20]..[770,24450+25])
                                          Ppat_var "name'" (lib/types.ml[770,24450+20]..[770,24450+25])
                                  ]
                                expression (lib/types.ml[771,24479+6]..[778,24779+9])
                                  Pexp_match
                                  expression (lib/types.ml[771,24479+18]..[771,24479+29])
                                    Pexp_tuple
                                    [
                                      expression (lib/types.ml[771,24479+18]..[771,24479+22])
                                        Pexp_ident "name" (lib/types.ml[771,24479+18]..[771,24479+22])
                                      expression (lib/types.ml[771,24479+24]..[771,24479+29])
                                        Pexp_ident "name'" (lib/types.ml[771,24479+24]..[771,24479+29])
                                    ]
                                  [
                                    <case>
                                      pattern (lib/types.ml[772,24514+8]..[772,24514+20])
                                        Ppat_tuple
                                        [
                                          pattern (lib/types.ml[772,24514+8]..[772,24514+14])
                                            Ppat_construct "Some" (lib/types.ml[772,24514+8]..[772,24514+12])
                                            Some
                                              []
                                              pattern (lib/types.ml[772,24514+13]..[772,24514+14])
                                                Ppat_any
                                          pattern (lib/types.ml[772,24514+16]..[772,24514+20])
                                            Ppat_construct "None" (lib/types.ml[772,24514+16]..[772,24514+20])
                                            None
                                        ]
                                      expression (lib/types.ml[772,24514+24]..[772,24514+77])
                                        Pexp_sequence
                                        expression (lib/types.ml[772,24514+24]..[772,24514+36])
                                          Pexp_apply
                                          expression (lib/types.ml[772,24514+24]..[772,24514+32])
                                            Pexp_ident "log_type" (lib/types.ml[772,24514+24]..[772,24514+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/types.ml[772,24514+33]..[772,24514+36])
                                                Pexp_ident "ty'" (lib/types.ml[772,24514+33]..[772,24514+36])
                                          ]
                                        expression (lib/types.ml[772,24514+38]..[772,24514+77])
                                          Pexp_apply
                                          expression (lib/types.ml[772,24514+38]..[772,24514+61])
                                            Pexp_ident "Transient_expr.set_desc" (lib/types.ml[772,24514+38]..[772,24514+61])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/types.ml[772,24514+62]..[772,24514+65])
                                                Pexp_ident "ty'" (lib/types.ml[772,24514+62]..[772,24514+65])
                                            <arg>
                                            Nolabel
                                              expression (lib/types.ml[772,24514+66]..[772,24514+77])
                                                Pexp_construct "Tvar" (lib/types.ml[772,24514+67]..[772,24514+71])
                                                Some
                                                  expression (lib/types.ml[772,24514+72]..[772,24514+76])
                                                    Pexp_ident "name" (lib/types.ml[772,24514+72]..[772,24514+76])
                                          ]
                                    <case>
                                      pattern (lib/types.ml[773,24592+8]..[773,24592+20])
                                        Ppat_tuple
                                        [
                                          pattern (lib/types.ml[773,24592+8]..[773,24592+12])
                                            Ppat_construct "None" (lib/types.ml[773,24592+8]..[773,24592+12])
                                            None
                                          pattern (lib/types.ml[773,24592+14]..[773,24592+20])
                                            Ppat_construct "Some" (lib/types.ml[773,24592+14]..[773,24592+18])
                                            Some
                                              []
                                              pattern (lib/types.ml[773,24592+19]..[773,24592+20])
                                                Ppat_any
                                        ]
                                      expression (lib/types.ml[773,24592+24]..[773,24592+26])
                                        Pexp_construct "()" (lib/types.ml[773,24592+24]..[773,24592+26])
                                        None
                                    <case>
                                      pattern (lib/types.ml[774,24619+8]..[774,24619+22])
                                        Ppat_tuple
                                        [
                                          pattern (lib/types.ml[774,24619+8]..[774,24619+14])
                                            Ppat_construct "Some" (lib/types.ml[774,24619+8]..[774,24619+12])
                                            Some
                                              []
                                              pattern (lib/types.ml[774,24619+13]..[774,24619+14])
                                                Ppat_any
                                          pattern (lib/types.ml[774,24619+16]..[774,24619+22])
                                            Ppat_construct "Some" (lib/types.ml[774,24619+16]..[774,24619+20])
                                            Some
                                              []
                                              pattern (lib/types.ml[774,24619+21]..[774,24619+22])
                                                Ppat_any
                                        ]
                                      expression (lib/types.ml[775,24645+10]..[776,24684+67])
                                        Pexp_ifthenelse
                                        expression (lib/types.ml[775,24645+13]..[775,24645+33])
                                          Pexp_apply
                                          expression (lib/types.ml[775,24645+22]..[775,24645+23])
                                            Pexp_ident "<" (lib/types.ml[775,24645+22]..[775,24645+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lib/types.ml[775,24645+13]..[775,24645+21])
                                                Pexp_field
                                                expression (lib/types.ml[775,24645+13]..[775,24645+15])
                                                  Pexp_ident "ty" (lib/types.ml[775,24645+13]..[775,24645+15])
                                                "level" (lib/types.ml[775,24645+16]..[775,24645+21])
                                            <arg>
                                            Nolabel
                                              expression (lib/types.ml[775,24645+24]..[775,24645+33])
                                                Pexp_field
                                                expression (lib/types.ml[775,24645+24]..[775,24645+27])
                                                  Pexp_ident "ty'" (lib/types.ml[775,24645+24]..[775,24645+27])
                                                "level" (lib/types.ml[775,24645+28]..[775,24645+33])
                                          ]
                                        expression (lib/types.ml[776,24684+12]..[776,24684+67])
                                          Pexp_sequence
                                          expression (lib/types.ml[776,24684+13]..[776,24684+25])
                                            Pexp_apply
                                            expression (lib/types.ml[776,24684+13]..[776,24684+21])
                                              Pexp_ident "log_type" (lib/types.ml[776,24684+13]..[776,24684+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[776,24684+22]..[776,24684+25])
                                                  Pexp_ident "ty'" (lib/types.ml[776,24684+22]..[776,24684+25])
                                            ]
                                          expression (lib/types.ml[776,24684+27]..[776,24684+66])
                                            Pexp_apply
                                            expression (lib/types.ml[776,24684+27]..[776,24684+50])
                                              Pexp_ident "Transient_expr.set_desc" (lib/types.ml[776,24684+27]..[776,24684+50])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[776,24684+51]..[776,24684+54])
                                                  Pexp_ident "ty'" (lib/types.ml[776,24684+51]..[776,24684+54])
                                              <arg>
                                              Nolabel
                                                expression (lib/types.ml[776,24684+55]..[776,24684+66])
                                                  Pexp_construct "Tvar" (lib/types.ml[776,24684+56]..[776,24684+60])
                                                  Some
                                                    expression (lib/types.ml[776,24684+61]..[776,24684+65])
                                                      Pexp_ident "name" (lib/types.ml[776,24684+61]..[776,24684+65])
                                            ]
                                        None
                                    <case>
                                      pattern (lib/types.ml[777,24752+8]..[777,24752+18])
                                        Ppat_tuple
                                        [
                                          pattern (lib/types.ml[777,24752+8]..[777,24752+12])
                                            Ppat_construct "None" (lib/types.ml[777,24752+8]..[777,24752+12])
                                            None
                                          pattern (lib/types.ml[777,24752+14]..[777,24752+18])
                                            Ppat_construct "None" (lib/types.ml[777,24752+14]..[777,24752+18])
                                            None
                                        ]
                                      expression (lib/types.ml[777,24752+24]..[777,24752+26])
                                        Pexp_construct "()" (lib/types.ml[777,24752+24]..[777,24752+26])
                                        None
                                  ]
                              <case>
                                pattern (lib/types.ml[779,24789+4]..[779,24789+5])
                                  Ppat_any
                                expression (lib/types.ml[779,24789+9]..[779,24789+11])
                                  Pexp_construct "()" (lib/types.ml[779,24789+9]..[779,24789+11])
                                  None
                            ]
    ]
  structure_item (lib/types.ml[784,24961+0]..[789,25090+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[784,24961+4]..[784,24961+17])
          Ppat_var "set_type_desc" (lib/types.ml[784,24961+4]..[784,24961+17])
        expression (lib/types.ml[784,24961+18]..[789,25090+5]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[784,24961+18]..[784,24961+20])
              Nolabel
              None
              pattern (lib/types.ml[784,24961+18]..[784,24961+20])
                Ppat_var "ty" (lib/types.ml[784,24961+18]..[784,24961+20])
            Pparam_val (lib/types.ml[784,24961+21]..[784,24961+23])
              Nolabel
              None
              pattern (lib/types.ml[784,24961+21]..[784,24961+23])
                Ppat_var "td" (lib/types.ml[784,24961+21]..[784,24961+23])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[785,24987+2]..[789,25090+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[785,24987+6]..[785,24987+8])
                    Ppat_var "ty" (lib/types.ml[785,24987+6]..[785,24987+8])
                  expression (lib/types.ml[785,24987+11]..[785,24987+18])
                    Pexp_apply
                    expression (lib/types.ml[785,24987+11]..[785,24987+15])
                      Pexp_ident "repr" (lib/types.ml[785,24987+11]..[785,24987+15])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[785,24987+16]..[785,24987+18])
                          Pexp_ident "ty" (lib/types.ml[785,24987+16]..[785,24987+18])
                    ]
              ]
              expression (lib/types.ml[786,25009+2]..[789,25090+5])
                Pexp_ifthenelse
                expression (lib/types.ml[786,25009+5]..[786,25009+18])
                  Pexp_apply
                  expression (lib/types.ml[786,25009+8]..[786,25009+10])
                    Pexp_ident "!=" (lib/types.ml[786,25009+8]..[786,25009+10])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[786,25009+5]..[786,25009+7])
                        Pexp_ident "td" (lib/types.ml[786,25009+5]..[786,25009+7])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[786,25009+11]..[786,25009+18])
                        Pexp_field
                        expression (lib/types.ml[786,25009+11]..[786,25009+13])
                          Pexp_ident "ty" (lib/types.ml[786,25009+11]..[786,25009+13])
                        "desc" (lib/types.ml[786,25009+14]..[786,25009+18])
                  ]
                expression (lib/types.ml[786,25009+24]..[789,25090+5])
                  Pexp_sequence
                  expression (lib/types.ml[787,25039+4]..[787,25039+15])
                    Pexp_apply
                    expression (lib/types.ml[787,25039+4]..[787,25039+12])
                      Pexp_ident "log_type" (lib/types.ml[787,25039+4]..[787,25039+12])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[787,25039+13]..[787,25039+15])
                          Pexp_ident "ty" (lib/types.ml[787,25039+13]..[787,25039+15])
                    ]
                  expression (lib/types.ml[788,25056+4]..[788,25056+33])
                    Pexp_apply
                    expression (lib/types.ml[788,25056+4]..[788,25056+27])
                      Pexp_ident "Transient_expr.set_desc" (lib/types.ml[788,25056+4]..[788,25056+27])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[788,25056+28]..[788,25056+30])
                          Pexp_ident "ty" (lib/types.ml[788,25056+28]..[788,25056+30])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[788,25056+31]..[788,25056+33])
                          Pexp_ident "td" (lib/types.ml[788,25056+31]..[788,25056+33])
                    ]
                None
    ]
  structure_item (lib/types.ml[792,25201+0]..[797,25392+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[792,25201+4]..[792,25201+13])
          Ppat_var "set_level" (lib/types.ml[792,25201+4]..[792,25201+13])
        expression (lib/types.ml[792,25201+14]..[797,25392+5]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[792,25201+14]..[792,25201+16])
              Nolabel
              None
              pattern (lib/types.ml[792,25201+14]..[792,25201+16])
                Ppat_var "ty" (lib/types.ml[792,25201+14]..[792,25201+16])
            Pparam_val (lib/types.ml[792,25201+17]..[792,25201+22])
              Nolabel
              None
              pattern (lib/types.ml[792,25201+17]..[792,25201+22])
                Ppat_var "level" (lib/types.ml[792,25201+17]..[792,25201+22])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[793,25226+2]..[797,25392+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[793,25226+6]..[793,25226+8])
                    Ppat_var "ty" (lib/types.ml[793,25226+6]..[793,25226+8])
                  expression (lib/types.ml[793,25226+11]..[793,25226+18])
                    Pexp_apply
                    expression (lib/types.ml[793,25226+11]..[793,25226+15])
                      Pexp_ident "repr" (lib/types.ml[793,25226+11]..[793,25226+15])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[793,25226+16]..[793,25226+18])
                          Pexp_ident "ty" (lib/types.ml[793,25226+16]..[793,25226+18])
                    ]
              ]
              expression (lib/types.ml[794,25248+2]..[797,25392+5])
                Pexp_ifthenelse
                expression (lib/types.ml[794,25248+5]..[794,25248+22])
                  Pexp_apply
                  expression (lib/types.ml[794,25248+11]..[794,25248+13])
                    Pexp_ident "<>" (lib/types.ml[794,25248+11]..[794,25248+13])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[794,25248+5]..[794,25248+10])
                        Pexp_ident "level" (lib/types.ml[794,25248+5]..[794,25248+10])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[794,25248+14]..[794,25248+22])
                        Pexp_field
                        expression (lib/types.ml[794,25248+14]..[794,25248+16])
                          Pexp_ident "ty" (lib/types.ml[794,25248+14]..[794,25248+16])
                        "level" (lib/types.ml[794,25248+17]..[794,25248+22])
                  ]
                expression (lib/types.ml[794,25248+28]..[797,25392+5])
                  Pexp_sequence
                  expression (lib/types.ml[795,25282+4]..[795,25282+70])
                    Pexp_ifthenelse
                    expression (lib/types.ml[795,25282+7]..[795,25282+30])
                      Pexp_apply
                      expression (lib/types.ml[795,25282+13]..[795,25282+15])
                        Pexp_ident "<=" (lib/types.ml[795,25282+13]..[795,25282+15])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[795,25282+7]..[795,25282+12])
                            Pexp_field
                            expression (lib/types.ml[795,25282+7]..[795,25282+9])
                              Pexp_ident "ty" (lib/types.ml[795,25282+7]..[795,25282+9])
                            "id" (lib/types.ml[795,25282+10]..[795,25282+12])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[795,25282+16]..[795,25282+30])
                            Pexp_apply
                            expression (lib/types.ml[795,25282+16]..[795,25282+17])
                              Pexp_ident "!" (lib/types.ml[795,25282+16]..[795,25282+17])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[795,25282+17]..[795,25282+30])
                                  Pexp_ident "last_snapshot" (lib/types.ml[795,25282+17]..[795,25282+30])
                            ]
                      ]
                    expression (lib/types.ml[795,25282+36]..[795,25282+70])
                      Pexp_apply
                      expression (lib/types.ml[795,25282+36]..[795,25282+46])
                        Pexp_ident "log_change" (lib/types.ml[795,25282+36]..[795,25282+46])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[795,25282+47]..[795,25282+70])
                            Pexp_construct "Clevel" (lib/types.ml[795,25282+48]..[795,25282+54])
                            Some
                              expression (lib/types.ml[795,25282+55]..[795,25282+69])
                                Pexp_tuple
                                [
                                  expression (lib/types.ml[795,25282+56]..[795,25282+58])
                                    Pexp_ident "ty" (lib/types.ml[795,25282+56]..[795,25282+58])
                                  expression (lib/types.ml[795,25282+60]..[795,25282+68])
                                    Pexp_field
                                    expression (lib/types.ml[795,25282+60]..[795,25282+62])
                                      Pexp_ident "ty" (lib/types.ml[795,25282+60]..[795,25282+62])
                                    "level" (lib/types.ml[795,25282+63]..[795,25282+68])
                                ]
                      ]
                    None
                  expression (lib/types.ml[796,25354+4]..[796,25354+37])
                    Pexp_apply
                    expression (lib/types.ml[796,25354+4]..[796,25354+28])
                      Pexp_ident "Transient_expr.set_level" (lib/types.ml[796,25354+4]..[796,25354+28])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[796,25354+29]..[796,25354+31])
                          Pexp_ident "ty" (lib/types.ml[796,25354+29]..[796,25354+31])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[796,25354+32]..[796,25354+37])
                          Pexp_ident "level" (lib/types.ml[796,25354+32]..[796,25354+37])
                    ]
                None
    ]
  structure_item (lib/types.ml[799,25463+0]..[804,25654+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[799,25463+4]..[799,25463+13])
          Ppat_var "set_scope" (lib/types.ml[799,25463+4]..[799,25463+13])
        expression (lib/types.ml[799,25463+14]..[804,25654+5]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[799,25463+14]..[799,25463+16])
              Nolabel
              None
              pattern (lib/types.ml[799,25463+14]..[799,25463+16])
                Ppat_var "ty" (lib/types.ml[799,25463+14]..[799,25463+16])
            Pparam_val (lib/types.ml[799,25463+17]..[799,25463+22])
              Nolabel
              None
              pattern (lib/types.ml[799,25463+17]..[799,25463+22])
                Ppat_var "scope" (lib/types.ml[799,25463+17]..[799,25463+22])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[800,25488+2]..[804,25654+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[800,25488+6]..[800,25488+8])
                    Ppat_var "ty" (lib/types.ml[800,25488+6]..[800,25488+8])
                  expression (lib/types.ml[800,25488+11]..[800,25488+18])
                    Pexp_apply
                    expression (lib/types.ml[800,25488+11]..[800,25488+15])
                      Pexp_ident "repr" (lib/types.ml[800,25488+11]..[800,25488+15])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[800,25488+16]..[800,25488+18])
                          Pexp_ident "ty" (lib/types.ml[800,25488+16]..[800,25488+18])
                    ]
              ]
              expression (lib/types.ml[801,25510+2]..[804,25654+5])
                Pexp_ifthenelse
                expression (lib/types.ml[801,25510+5]..[801,25510+22])
                  Pexp_apply
                  expression (lib/types.ml[801,25510+11]..[801,25510+13])
                    Pexp_ident "<>" (lib/types.ml[801,25510+11]..[801,25510+13])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[801,25510+5]..[801,25510+10])
                        Pexp_ident "scope" (lib/types.ml[801,25510+5]..[801,25510+10])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[801,25510+14]..[801,25510+22])
                        Pexp_field
                        expression (lib/types.ml[801,25510+14]..[801,25510+16])
                          Pexp_ident "ty" (lib/types.ml[801,25510+14]..[801,25510+16])
                        "scope" (lib/types.ml[801,25510+17]..[801,25510+22])
                  ]
                expression (lib/types.ml[801,25510+28]..[804,25654+5])
                  Pexp_sequence
                  expression (lib/types.ml[802,25544+4]..[802,25544+70])
                    Pexp_ifthenelse
                    expression (lib/types.ml[802,25544+7]..[802,25544+30])
                      Pexp_apply
                      expression (lib/types.ml[802,25544+13]..[802,25544+15])
                        Pexp_ident "<=" (lib/types.ml[802,25544+13]..[802,25544+15])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[802,25544+7]..[802,25544+12])
                            Pexp_field
                            expression (lib/types.ml[802,25544+7]..[802,25544+9])
                              Pexp_ident "ty" (lib/types.ml[802,25544+7]..[802,25544+9])
                            "id" (lib/types.ml[802,25544+10]..[802,25544+12])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[802,25544+16]..[802,25544+30])
                            Pexp_apply
                            expression (lib/types.ml[802,25544+16]..[802,25544+17])
                              Pexp_ident "!" (lib/types.ml[802,25544+16]..[802,25544+17])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[802,25544+17]..[802,25544+30])
                                  Pexp_ident "last_snapshot" (lib/types.ml[802,25544+17]..[802,25544+30])
                            ]
                      ]
                    expression (lib/types.ml[802,25544+36]..[802,25544+70])
                      Pexp_apply
                      expression (lib/types.ml[802,25544+36]..[802,25544+46])
                        Pexp_ident "log_change" (lib/types.ml[802,25544+36]..[802,25544+46])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[802,25544+47]..[802,25544+70])
                            Pexp_construct "Cscope" (lib/types.ml[802,25544+48]..[802,25544+54])
                            Some
                              expression (lib/types.ml[802,25544+55]..[802,25544+69])
                                Pexp_tuple
                                [
                                  expression (lib/types.ml[802,25544+56]..[802,25544+58])
                                    Pexp_ident "ty" (lib/types.ml[802,25544+56]..[802,25544+58])
                                  expression (lib/types.ml[802,25544+60]..[802,25544+68])
                                    Pexp_field
                                    expression (lib/types.ml[802,25544+60]..[802,25544+62])
                                      Pexp_ident "ty" (lib/types.ml[802,25544+60]..[802,25544+62])
                                    "scope" (lib/types.ml[802,25544+63]..[802,25544+68])
                                ]
                      ]
                    None
                  expression (lib/types.ml[803,25616+4]..[803,25616+37])
                    Pexp_apply
                    expression (lib/types.ml[803,25616+4]..[803,25616+28])
                      Pexp_ident "Transient_expr.set_scope" (lib/types.ml[803,25616+4]..[803,25616+28])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[803,25616+29]..[803,25616+31])
                          Pexp_ident "ty" (lib/types.ml[803,25616+29]..[803,25616+31])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[803,25616+32]..[803,25616+37])
                          Pexp_ident "scope" (lib/types.ml[803,25616+32]..[803,25616+37])
                    ]
                None
    ]
  structure_item (lib/types.ml[805,25660+0]..[806,25684+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[805,25660+4]..[805,25660+14])
          Ppat_var "set_univar" (lib/types.ml[805,25660+4]..[805,25660+14])
        expression (lib/types.ml[805,25660+15]..[806,25684+48]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[805,25660+15]..[805,25660+18])
              Nolabel
              None
              pattern (lib/types.ml[805,25660+15]..[805,25660+18])
                Ppat_var "rty" (lib/types.ml[805,25660+15]..[805,25660+18])
            Pparam_val (lib/types.ml[805,25660+19]..[805,25660+21])
              Nolabel
              None
              pattern (lib/types.ml[805,25660+19]..[805,25660+21])
                Ppat_var "ty" (lib/types.ml[805,25660+19]..[805,25660+21])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[806,25684+2]..[806,25684+48])
              Pexp_sequence
              expression (lib/types.ml[806,25684+2]..[806,25684+32])
                Pexp_apply
                expression (lib/types.ml[806,25684+2]..[806,25684+12])
                  Pexp_ident "log_change" (lib/types.ml[806,25684+2]..[806,25684+12])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[806,25684+13]..[806,25684+32])
                      Pexp_construct "Cuniv" (lib/types.ml[806,25684+14]..[806,25684+19])
                      Some
                        expression (lib/types.ml[806,25684+20]..[806,25684+31])
                          Pexp_tuple
                          [
                            expression (lib/types.ml[806,25684+21]..[806,25684+24])
                              Pexp_ident "rty" (lib/types.ml[806,25684+21]..[806,25684+24])
                            expression (lib/types.ml[806,25684+26]..[806,25684+30])
                              Pexp_apply
                              expression (lib/types.ml[806,25684+26]..[806,25684+27])
                                Pexp_ident "!" (lib/types.ml[806,25684+26]..[806,25684+27])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[806,25684+27]..[806,25684+30])
                                    Pexp_ident "rty" (lib/types.ml[806,25684+27]..[806,25684+30])
                              ]
                          ]
                ]
              expression (lib/types.ml[806,25684+34]..[806,25684+48])
                Pexp_apply
                expression (lib/types.ml[806,25684+38]..[806,25684+40])
                  Pexp_ident ":=" (lib/types.ml[806,25684+38]..[806,25684+40])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[806,25684+34]..[806,25684+37])
                      Pexp_ident "rty" (lib/types.ml[806,25684+34]..[806,25684+37])
                  <arg>
                  Nolabel
                    expression (lib/types.ml[806,25684+41]..[806,25684+48])
                      Pexp_construct "Some" (lib/types.ml[806,25684+41]..[806,25684+45])
                      Some
                        expression (lib/types.ml[806,25684+46]..[806,25684+48])
                          Pexp_ident "ty" (lib/types.ml[806,25684+46]..[806,25684+48])
                ]
    ]
  structure_item (lib/types.ml[807,25733+0]..[808,25753+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[807,25733+4]..[807,25733+12])
          Ppat_var "set_name" (lib/types.ml[807,25733+4]..[807,25733+12])
        expression (lib/types.ml[807,25733+13]..[808,25753+39]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[807,25733+13]..[807,25733+15])
              Nolabel
              None
              pattern (lib/types.ml[807,25733+13]..[807,25733+15])
                Ppat_var "nm" (lib/types.ml[807,25733+13]..[807,25733+15])
            Pparam_val (lib/types.ml[807,25733+16]..[807,25733+17])
              Nolabel
              None
              pattern (lib/types.ml[807,25733+16]..[807,25733+17])
                Ppat_var "v" (lib/types.ml[807,25733+16]..[807,25733+17])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[808,25753+2]..[808,25753+39])
              Pexp_sequence
              expression (lib/types.ml[808,25753+2]..[808,25753+30])
                Pexp_apply
                expression (lib/types.ml[808,25753+2]..[808,25753+12])
                  Pexp_ident "log_change" (lib/types.ml[808,25753+2]..[808,25753+12])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[808,25753+13]..[808,25753+30])
                      Pexp_construct "Cname" (lib/types.ml[808,25753+14]..[808,25753+19])
                      Some
                        expression (lib/types.ml[808,25753+20]..[808,25753+29])
                          Pexp_tuple
                          [
                            expression (lib/types.ml[808,25753+21]..[808,25753+23])
                              Pexp_ident "nm" (lib/types.ml[808,25753+21]..[808,25753+23])
                            expression (lib/types.ml[808,25753+25]..[808,25753+28])
                              Pexp_apply
                              expression (lib/types.ml[808,25753+25]..[808,25753+26])
                                Pexp_ident "!" (lib/types.ml[808,25753+25]..[808,25753+26])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[808,25753+26]..[808,25753+28])
                                    Pexp_ident "nm" (lib/types.ml[808,25753+26]..[808,25753+28])
                              ]
                          ]
                ]
              expression (lib/types.ml[808,25753+32]..[808,25753+39])
                Pexp_apply
                expression (lib/types.ml[808,25753+35]..[808,25753+37])
                  Pexp_ident ":=" (lib/types.ml[808,25753+35]..[808,25753+37])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[808,25753+32]..[808,25753+34])
                      Pexp_ident "nm" (lib/types.ml[808,25753+32]..[808,25753+34])
                  <arg>
                  Nolabel
                    expression (lib/types.ml[808,25753+38]..[808,25753+39])
                      Pexp_ident "v" (lib/types.ml[808,25753+38]..[808,25753+39])
                ]
    ]
  structure_item (lib/types.ml[810,25794+0]..[817,26139+47])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[810,25794+8]..[810,25794+26])
          Ppat_var "link_row_field_ext" (lib/types.ml[810,25794+8]..[810,25794+26])
        expression (lib/types.ml[810,25794+27]..[817,26139+47]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[810,25794+27]..[810,25794+48])
              Labelled "inside"
              None
              pattern (lib/types.ml[810,25794+29]..[810,25794+47])
                Ppat_constraint
                pattern (lib/types.ml[810,25794+29]..[810,25794+35])
                  Ppat_var "inside" (lib/types.ml[810,25794+29]..[810,25794+35])
                core_type (lib/types.ml[810,25794+38]..[810,25794+47])
                  Ptyp_constr "row_field" (lib/types.ml[810,25794+38]..[810,25794+47])
                  []
            Pparam_val (lib/types.ml[810,25794+49]..[810,25794+64])
              Nolabel
              None
              pattern (lib/types.ml[810,25794+49]..[810,25794+64])
                Ppat_constraint
                pattern (lib/types.ml[810,25794+50]..[810,25794+51])
                  Ppat_var "v" (lib/types.ml[810,25794+50]..[810,25794+51])
                core_type (lib/types.ml[810,25794+54]..[810,25794+63])
                  Ptyp_constr "row_field" (lib/types.ml[810,25794+54]..[810,25794+63])
                  []
          ]
          None
          Pfunction_body
            expression (lib/types.ml[811,25861+2]..[817,26139+47])
              Pexp_match
              expression (lib/types.ml[811,25861+8]..[811,25861+14])
                Pexp_ident "inside" (lib/types.ml[811,25861+8]..[811,25861+14])
              [
                <case>
                  pattern (lib/types.ml[812,25881+4]..[812,25881+45])
                    Ppat_construct "RFeither" (lib/types.ml[812,25881+4]..[812,25881+12])
                    Some
                      []
                      pattern (lib/types.ml[812,25881+13]..[812,25881+45])
                        Ppat_record Closed
                        [
                          "ext" (lib/types.ml[812,25881+14]..[812,25881+17])
                            pattern (lib/types.ml[812,25881+20]..[812,25881+44])
                              Ppat_alias "e" (lib/types.ml[812,25881+43]..[812,25881+44])
                              pattern (lib/types.ml[812,25881+20]..[812,25881+39])
                                Ppat_record Closed
                                [
                                  "contents" (lib/types.ml[812,25881+21]..[812,25881+29])
                                    pattern (lib/types.ml[812,25881+32]..[812,25881+38])
                                      Ppat_construct "RFnone" (lib/types.ml[812,25881+32]..[812,25881+38])
                                      None
                                ]
                        ]
                  expression (lib/types.ml[813,25930+6]..[814,25988+33])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/types.ml[813,25930+10]..[813,25930+50])
                          Ppat_alias "v" (lib/types.ml[813,25930+49]..[813,25930+50])
                          pattern (lib/types.ml[813,25930+10]..[813,25930+45])
                            Ppat_or
                            pattern (lib/types.ml[813,25930+10]..[813,25930+34])
                              Ppat_or
                              pattern (lib/types.ml[813,25930+10]..[813,25930+20])
                                Ppat_construct "RFeither" (lib/types.ml[813,25930+10]..[813,25930+18])
                                Some
                                  []
                                  pattern (lib/types.ml[813,25930+19]..[813,25930+20])
                                    Ppat_any
                              pattern (lib/types.ml[813,25930+23]..[813,25930+34])
                                Ppat_construct "RFpresent" (lib/types.ml[813,25930+23]..[813,25930+32])
                                Some
                                  []
                                  pattern (lib/types.ml[813,25930+33]..[813,25930+34])
                                    Ppat_any
                            pattern (lib/types.ml[813,25930+37]..[813,25930+45])
                              Ppat_construct "RFabsent" (lib/types.ml[813,25930+37]..[813,25930+45])
                              None
                        expression (lib/types.ml[813,25930+53]..[813,25930+54])
                          Pexp_ident "v" (lib/types.ml[813,25930+53]..[813,25930+54])
                    ]
                    expression (lib/types.ml[814,25988+6]..[814,25988+33])
                      Pexp_sequence
                      expression (lib/types.ml[814,25988+6]..[814,25988+25])
                        Pexp_apply
                        expression (lib/types.ml[814,25988+6]..[814,25988+16])
                          Pexp_ident "log_change" (lib/types.ml[814,25988+6]..[814,25988+16])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[814,25988+17]..[814,25988+25])
                              Pexp_construct "Crow" (lib/types.ml[814,25988+18]..[814,25988+22])
                              Some
                                expression (lib/types.ml[814,25988+23]..[814,25988+24])
                                  Pexp_ident "e" (lib/types.ml[814,25988+23]..[814,25988+24])
                        ]
                      expression (lib/types.ml[814,25988+27]..[814,25988+33])
                        Pexp_apply
                        expression (lib/types.ml[814,25988+29]..[814,25988+31])
                          Pexp_ident ":=" (lib/types.ml[814,25988+29]..[814,25988+31])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[814,25988+27]..[814,25988+28])
                              Pexp_ident "e" (lib/types.ml[814,25988+27]..[814,25988+28])
                          <arg>
                          Nolabel
                            expression (lib/types.ml[814,25988+32]..[814,25988+33])
                              Pexp_ident "v" (lib/types.ml[814,25988+32]..[814,25988+33])
                        ]
                <case>
                  pattern (lib/types.ml[815,26022+4]..[815,26022+75])
                    Ppat_construct "RFeither" (lib/types.ml[815,26022+4]..[815,26022+12])
                    Some
                      []
                      pattern (lib/types.ml[815,26022+13]..[815,26022+75])
                        Ppat_record Closed
                        [
                          "ext" (lib/types.ml[815,26022+14]..[815,26022+17])
                            pattern (lib/types.ml[815,26022+20]..[815,26022+74])
                              Ppat_record Closed
                              [
                                "contents" (lib/types.ml[815,26022+21]..[815,26022+29])
                                  pattern (lib/types.ml[815,26022+32]..[815,26022+73])
                                    Ppat_alias "rf" (lib/types.ml[815,26022+71]..[815,26022+73])
                                    pattern (lib/types.ml[815,26022+32]..[815,26022+67])
                                      Ppat_or
                                      pattern (lib/types.ml[815,26022+32]..[815,26022+56])
                                        Ppat_or
                                        pattern (lib/types.ml[815,26022+32]..[815,26022+42])
                                          Ppat_construct "RFeither" (lib/types.ml[815,26022+32]..[815,26022+40])
                                          Some
                                            []
                                            pattern (lib/types.ml[815,26022+41]..[815,26022+42])
                                              Ppat_any
                                        pattern (lib/types.ml[815,26022+45]..[815,26022+56])
                                          Ppat_construct "RFpresent" (lib/types.ml[815,26022+45]..[815,26022+54])
                                          Some
                                            []
                                            pattern (lib/types.ml[815,26022+55]..[815,26022+56])
                                              Ppat_any
                                      pattern (lib/types.ml[815,26022+59]..[815,26022+67])
                                        Ppat_construct "RFabsent" (lib/types.ml[815,26022+59]..[815,26022+67])
                                        None
                              ]
                        ]
                  expression (lib/types.ml[816,26101+6]..[816,26101+37])
                    Pexp_apply
                    expression (lib/types.ml[816,26101+6]..[816,26101+24])
                      Pexp_ident "link_row_field_ext" (lib/types.ml[816,26101+6]..[816,26101+24])
                    [
                      <arg>
                      Labelled "inside"
                        expression (lib/types.ml[816,26101+33]..[816,26101+35])
                          Pexp_ident "rf" (lib/types.ml[816,26101+33]..[816,26101+35])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[816,26101+36]..[816,26101+37])
                          Pexp_ident "v" (lib/types.ml[816,26101+36]..[816,26101+37])
                    ]
                <case>
                  pattern (lib/types.ml[817,26139+4]..[817,26139+5])
                    Ppat_any
                  expression (lib/types.ml[817,26139+9]..[817,26139+47])
                    Pexp_apply
                    expression (lib/types.ml[817,26139+9]..[817,26139+20])
                      Pexp_ident "invalid_arg" (lib/types.ml[817,26139+9]..[817,26139+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[817,26139+21]..[817,26139+47])
                          Pexp_constant PConst_string("Types.link_row_field_ext",(lib/types.ml[817,26139+22]..[817,26139+46]),None)
                    ]
              ]
    ]
  structure_item (lib/types.ml[819,26188+0]..[830,26672+38])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[819,26188+8]..[819,26188+17])
          Ppat_var "link_kind" (lib/types.ml[819,26188+8]..[819,26188+17])
        expression (lib/types.ml[819,26188+18]..[830,26672+38]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[819,26188+18]..[819,26188+40])
              Labelled "inside"
              None
              pattern (lib/types.ml[819,26188+20]..[819,26188+39])
                Ppat_constraint
                pattern (lib/types.ml[819,26188+20]..[819,26188+26])
                  Ppat_var "inside" (lib/types.ml[819,26188+20]..[819,26188+26])
                core_type (lib/types.ml[819,26188+29]..[819,26188+39])
                  Ptyp_constr "field_kind" (lib/types.ml[819,26188+29]..[819,26188+39])
                  []
            Pparam_val (lib/types.ml[819,26188+41]..[819,26188+57])
              Nolabel
              None
              pattern (lib/types.ml[819,26188+41]..[819,26188+57])
                Ppat_constraint
                pattern (lib/types.ml[819,26188+42]..[819,26188+43])
                  Ppat_var "k" (lib/types.ml[819,26188+42]..[819,26188+43])
                core_type (lib/types.ml[819,26188+46]..[819,26188+56])
                  Ptyp_constr "field_kind" (lib/types.ml[819,26188+46]..[819,26188+56])
                  []
          ]
          None
          Pfunction_body
            expression (lib/types.ml[820,26248+2]..[830,26672+38])
              Pexp_match
              expression (lib/types.ml[820,26248+8]..[820,26248+14])
                Pexp_ident "inside" (lib/types.ml[820,26248+8]..[820,26248+14])
              [
                <case>
                  pattern (lib/types.ml[821,26268+4]..[821,26268+52])
                    Ppat_alias "inside" (lib/types.ml[821,26268+46]..[821,26268+52])
                    pattern (lib/types.ml[821,26268+4]..[821,26268+42])
                      Ppat_construct "FKvar" (lib/types.ml[821,26268+4]..[821,26268+9])
                      Some
                        []
                        pattern (lib/types.ml[821,26268+10]..[821,26268+42])
                          Ppat_alias "rk" (lib/types.ml[821,26268+39]..[821,26268+41])
                          pattern (lib/types.ml[821,26268+11]..[821,26268+35])
                            Ppat_record Closed
                            [
                              "field_kind" (lib/types.ml[821,26268+12]..[821,26268+22])
                                pattern (lib/types.ml[821,26268+25]..[821,26268+34])
                                  Ppat_construct "FKprivate" (lib/types.ml[821,26268+25]..[821,26268+34])
                                  None
                            ]
                  expression (lib/types.ml[823,26397+6]..[827,26568+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/types.ml[823,26397+10]..[823,26397+44])
                          Ppat_alias "k" (lib/types.ml[823,26397+43]..[823,26397+44])
                          pattern (lib/types.ml[823,26397+10]..[823,26397+39])
                            Ppat_or
                            pattern (lib/types.ml[823,26397+10]..[823,26397+28])
                              Ppat_or
                              pattern (lib/types.ml[823,26397+10]..[823,26397+17])
                                Ppat_construct "FKvar" (lib/types.ml[823,26397+10]..[823,26397+15])
                                Some
                                  []
                                  pattern (lib/types.ml[823,26397+16]..[823,26397+17])
                                    Ppat_any
                              pattern (lib/types.ml[823,26397+20]..[823,26397+28])
                                Ppat_construct "FKpublic" (lib/types.ml[823,26397+20]..[823,26397+28])
                                None
                            pattern (lib/types.ml[823,26397+31]..[823,26397+39])
                              Ppat_construct "FKabsent" (lib/types.ml[823,26397+31]..[823,26397+39])
                              None
                        expression (lib/types.ml[823,26397+47]..[823,26397+73])
                          Pexp_apply
                          expression (lib/types.ml[823,26397+47]..[823,26397+71])
                            Pexp_ident "field_kind_internal_repr" (lib/types.ml[823,26397+47]..[823,26397+71])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[823,26397+72]..[823,26397+73])
                                Pexp_ident "k" (lib/types.ml[823,26397+72]..[823,26397+73])
                          ]
                    ]
                    expression (lib/types.ml[824,26474+6]..[827,26568+9])
                      Pexp_ifthenelse
                      expression (lib/types.ml[824,26474+9]..[824,26474+20])
                        Pexp_apply
                        expression (lib/types.ml[824,26474+11]..[824,26474+13])
                          Pexp_ident "!=" (lib/types.ml[824,26474+11]..[824,26474+13])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[824,26474+9]..[824,26474+10])
                              Pexp_ident "k" (lib/types.ml[824,26474+9]..[824,26474+10])
                          <arg>
                          Nolabel
                            expression (lib/types.ml[824,26474+14]..[824,26474+20])
                              Pexp_ident "inside" (lib/types.ml[824,26474+14]..[824,26474+20])
                        ]
                      expression (lib/types.ml[824,26474+26]..[827,26568+9])
                        Pexp_sequence
                        expression (lib/types.ml[825,26506+8]..[825,26506+33])
                          Pexp_apply
                          expression (lib/types.ml[825,26506+8]..[825,26506+18])
                            Pexp_ident "log_change" (lib/types.ml[825,26506+8]..[825,26506+18])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[825,26506+19]..[825,26506+33])
                                Pexp_construct "Ckind" (lib/types.ml[825,26506+20]..[825,26506+25])
                                Some
                                  expression (lib/types.ml[825,26506+26]..[825,26506+32])
                                    Pexp_ident "inside" (lib/types.ml[825,26506+26]..[825,26506+32])
                          ]
                        expression (lib/types.ml[826,26541+8]..[826,26541+26])
                          Pexp_setfield
                          expression (lib/types.ml[826,26541+8]..[826,26541+10])
                            Pexp_ident "rk" (lib/types.ml[826,26541+8]..[826,26541+10])
                          "field_kind" (lib/types.ml[826,26541+11]..[826,26541+21])
                          expression (lib/types.ml[826,26541+25]..[826,26541+26])
                            Pexp_ident "k" (lib/types.ml[826,26541+25]..[826,26541+26])
                      None
                <case>
                  pattern (lib/types.ml[828,26578+4]..[828,26578+64])
                    Ppat_construct "FKvar" (lib/types.ml[828,26578+4]..[828,26578+9])
                    Some
                      []
                      pattern (lib/types.ml[828,26578+10]..[828,26578+64])
                        Ppat_record Closed
                        [
                          "field_kind" (lib/types.ml[828,26578+11]..[828,26578+21])
                            pattern (lib/types.ml[828,26578+24]..[828,26578+63])
                              Ppat_alias "inside" (lib/types.ml[828,26578+57]..[828,26578+63])
                              pattern (lib/types.ml[828,26578+24]..[828,26578+53])
                                Ppat_or
                                pattern (lib/types.ml[828,26578+24]..[828,26578+42])
                                  Ppat_or
                                  pattern (lib/types.ml[828,26578+24]..[828,26578+31])
                                    Ppat_construct "FKvar" (lib/types.ml[828,26578+24]..[828,26578+29])
                                    Some
                                      []
                                      pattern (lib/types.ml[828,26578+30]..[828,26578+31])
                                        Ppat_any
                                  pattern (lib/types.ml[828,26578+34]..[828,26578+42])
                                    Ppat_construct "FKpublic" (lib/types.ml[828,26578+34]..[828,26578+42])
                                    None
                                pattern (lib/types.ml[828,26578+45]..[828,26578+53])
                                  Ppat_construct "FKabsent" (lib/types.ml[828,26578+45]..[828,26578+53])
                                  None
                        ]
                  expression (lib/types.ml[829,26646+6]..[829,26646+25])
                    Pexp_apply
                    expression (lib/types.ml[829,26646+6]..[829,26646+15])
                      Pexp_ident "link_kind" (lib/types.ml[829,26646+6]..[829,26646+15])
                    [
                      <arg>
                      Labelled "inside"
                        expression (lib/types.ml[829,26646+17]..[829,26646+23])
                          Pexp_ident "inside" (lib/types.ml[829,26646+17]..[829,26646+23])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[829,26646+24]..[829,26646+25])
                          Pexp_ident "k" (lib/types.ml[829,26646+24]..[829,26646+25])
                    ]
                <case>
                  pattern (lib/types.ml[830,26672+4]..[830,26672+5])
                    Ppat_any
                  expression (lib/types.ml[830,26672+9]..[830,26672+38])
                    Pexp_apply
                    expression (lib/types.ml[830,26672+9]..[830,26672+20])
                      Pexp_ident "invalid_arg" (lib/types.ml[830,26672+9]..[830,26672+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[830,26672+21]..[830,26672+38])
                          Pexp_constant PConst_string("Types.link_kind",(lib/types.ml[830,26672+22]..[830,26672+37]),None)
                    ]
              ]
    ]
  structure_item (lib/types.ml[832,26712+0]..[834,26830+10])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[832,26712+8]..[832,26712+18])
          Ppat_var "commu_repr" (lib/types.ml[832,26712+8]..[832,26712+18])
        core_type (lib/types.ml[832,26712+21]..[832,26712+45])
          Ptyp_arrow
          Nolabel
          core_type (lib/types.ml[832,26712+21]..[832,26712+31])
            Ptyp_constr "commutable" (lib/types.ml[832,26712+21]..[832,26712+31])
            []
          core_type (lib/types.ml[832,26712+35]..[832,26712+45])
            Ptyp_constr "commutable" (lib/types.ml[832,26712+35]..[832,26712+45])
            []
        expression (lib/types.ml[832,26712+48]..[834,26830+10])
          Pexp_function
          []
          None
          Pfunction_cases (lib/types.ml[832,26712+48]..[834,26830+10])
            [
              <case>
                pattern (lib/types.ml[833,26769+4]..[833,26769+40])
                  Ppat_construct "Cvar" (lib/types.ml[833,26769+4]..[833,26769+8])
                  Some
                    []
                    pattern (lib/types.ml[833,26769+9]..[833,26769+40])
                      Ppat_record Closed
                      [
                        "commu" (lib/types.ml[833,26769+10]..[833,26769+15])
                          pattern (lib/types.ml[833,26769+18]..[833,26769+39])
                            Ppat_alias "commu" (lib/types.ml[833,26769+34]..[833,26769+39])
                            pattern (lib/types.ml[833,26769+18]..[833,26769+30])
                              Ppat_or
                              pattern (lib/types.ml[833,26769+18]..[833,26769+24])
                                Ppat_construct "Cvar" (lib/types.ml[833,26769+18]..[833,26769+22])
                                Some
                                  []
                                  pattern (lib/types.ml[833,26769+23]..[833,26769+24])
                                    Ppat_any
                              pattern (lib/types.ml[833,26769+27]..[833,26769+30])
                                Ppat_construct "Cok" (lib/types.ml[833,26769+27]..[833,26769+30])
                                None
                      ]
                expression (lib/types.ml[833,26769+44]..[833,26769+60])
                  Pexp_apply
                  expression (lib/types.ml[833,26769+44]..[833,26769+54])
                    Pexp_ident "commu_repr" (lib/types.ml[833,26769+44]..[833,26769+54])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[833,26769+55]..[833,26769+60])
                        Pexp_ident "commu" (lib/types.ml[833,26769+55]..[833,26769+60])
                  ]
              <case>
                pattern (lib/types.ml[834,26830+4]..[834,26830+5])
                  Ppat_var "c" (lib/types.ml[834,26830+4]..[834,26830+5])
                expression (lib/types.ml[834,26830+9]..[834,26830+10])
                  Pexp_ident "c" (lib/types.ml[834,26830+9]..[834,26830+10])
            ]
    ]
  structure_item (lib/types.ml[836,26842+0]..[847,27263+39])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[836,26842+8]..[836,26842+18])
          Ppat_var "link_commu" (lib/types.ml[836,26842+8]..[836,26842+18])
        expression (lib/types.ml[836,26842+19]..[847,27263+39]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[836,26842+19]..[836,26842+41])
              Labelled "inside"
              None
              pattern (lib/types.ml[836,26842+21]..[836,26842+40])
                Ppat_constraint
                pattern (lib/types.ml[836,26842+21]..[836,26842+27])
                  Ppat_var "inside" (lib/types.ml[836,26842+21]..[836,26842+27])
                core_type (lib/types.ml[836,26842+30]..[836,26842+40])
                  Ptyp_constr "commutable" (lib/types.ml[836,26842+30]..[836,26842+40])
                  []
            Pparam_val (lib/types.ml[836,26842+42]..[836,26842+58])
              Nolabel
              None
              pattern (lib/types.ml[836,26842+42]..[836,26842+58])
                Ppat_constraint
                pattern (lib/types.ml[836,26842+43]..[836,26842+44])
                  Ppat_var "c" (lib/types.ml[836,26842+43]..[836,26842+44])
                core_type (lib/types.ml[836,26842+47]..[836,26842+57])
                  Ptyp_constr "commutable" (lib/types.ml[836,26842+47]..[836,26842+57])
                  []
          ]
          None
          Pfunction_body
            expression (lib/types.ml[837,26903+2]..[847,27263+39])
              Pexp_match
              expression (lib/types.ml[837,26903+8]..[837,26903+14])
                Pexp_ident "inside" (lib/types.ml[837,26903+8]..[837,26903+14])
              [
                <case>
                  pattern (lib/types.ml[838,26923+4]..[838,26923+45])
                    Ppat_alias "inside" (lib/types.ml[838,26923+39]..[838,26923+45])
                    pattern (lib/types.ml[838,26923+4]..[838,26923+35])
                      Ppat_construct "Cvar" (lib/types.ml[838,26923+4]..[838,26923+8])
                      Some
                        []
                        pattern (lib/types.ml[838,26923+9]..[838,26923+35])
                          Ppat_alias "rc" (lib/types.ml[838,26923+32]..[838,26923+34])
                          pattern (lib/types.ml[838,26923+10]..[838,26923+28])
                            Ppat_record Closed
                            [
                              "commu" (lib/types.ml[838,26923+11]..[838,26923+16])
                                pattern (lib/types.ml[838,26923+19]..[838,26923+27])
                                  Ppat_construct "Cunknown" (lib/types.ml[838,26923+19]..[838,26923+27])
                                  None
                            ]
                  expression (lib/types.ml[840,27045+6]..[844,27181+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/types.ml[840,27045+10]..[840,27045+27])
                          Ppat_alias "c" (lib/types.ml[840,27045+26]..[840,27045+27])
                          pattern (lib/types.ml[840,27045+10]..[840,27045+22])
                            Ppat_or
                            pattern (lib/types.ml[840,27045+10]..[840,27045+16])
                              Ppat_construct "Cvar" (lib/types.ml[840,27045+10]..[840,27045+14])
                              Some
                                []
                                pattern (lib/types.ml[840,27045+15]..[840,27045+16])
                                  Ppat_any
                            pattern (lib/types.ml[840,27045+19]..[840,27045+22])
                              Ppat_construct "Cok" (lib/types.ml[840,27045+19]..[840,27045+22])
                              None
                        expression (lib/types.ml[840,27045+30]..[840,27045+42])
                          Pexp_apply
                          expression (lib/types.ml[840,27045+30]..[840,27045+40])
                            Pexp_ident "commu_repr" (lib/types.ml[840,27045+30]..[840,27045+40])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[840,27045+41]..[840,27045+42])
                                Pexp_ident "c" (lib/types.ml[840,27045+41]..[840,27045+42])
                          ]
                    ]
                    expression (lib/types.ml[841,27091+6]..[844,27181+9])
                      Pexp_ifthenelse
                      expression (lib/types.ml[841,27091+9]..[841,27091+20])
                        Pexp_apply
                        expression (lib/types.ml[841,27091+11]..[841,27091+13])
                          Pexp_ident "!=" (lib/types.ml[841,27091+11]..[841,27091+13])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[841,27091+9]..[841,27091+10])
                              Pexp_ident "c" (lib/types.ml[841,27091+9]..[841,27091+10])
                          <arg>
                          Nolabel
                            expression (lib/types.ml[841,27091+14]..[841,27091+20])
                              Pexp_ident "inside" (lib/types.ml[841,27091+14]..[841,27091+20])
                        ]
                      expression (lib/types.ml[841,27091+26]..[844,27181+9])
                        Pexp_sequence
                        expression (lib/types.ml[842,27123+8]..[842,27123+34])
                          Pexp_apply
                          expression (lib/types.ml[842,27123+8]..[842,27123+18])
                            Pexp_ident "log_change" (lib/types.ml[842,27123+8]..[842,27123+18])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[842,27123+19]..[842,27123+34])
                                Pexp_construct "Ccommu" (lib/types.ml[842,27123+20]..[842,27123+26])
                                Some
                                  expression (lib/types.ml[842,27123+27]..[842,27123+33])
                                    Pexp_ident "inside" (lib/types.ml[842,27123+27]..[842,27123+33])
                          ]
                        expression (lib/types.ml[843,27159+8]..[843,27159+21])
                          Pexp_setfield
                          expression (lib/types.ml[843,27159+8]..[843,27159+10])
                            Pexp_ident "rc" (lib/types.ml[843,27159+8]..[843,27159+10])
                          "commu" (lib/types.ml[843,27159+11]..[843,27159+16])
                          expression (lib/types.ml[843,27159+20]..[843,27159+21])
                            Pexp_ident "c" (lib/types.ml[843,27159+20]..[843,27159+21])
                      None
                <case>
                  pattern (lib/types.ml[845,27191+4]..[845,27191+41])
                    Ppat_construct "Cvar" (lib/types.ml[845,27191+4]..[845,27191+8])
                    Some
                      []
                      pattern (lib/types.ml[845,27191+9]..[845,27191+41])
                        Ppat_record Closed
                        [
                          "commu" (lib/types.ml[845,27191+10]..[845,27191+15])
                            pattern (lib/types.ml[845,27191+18]..[845,27191+40])
                              Ppat_alias "inside" (lib/types.ml[845,27191+34]..[845,27191+40])
                              pattern (lib/types.ml[845,27191+18]..[845,27191+30])
                                Ppat_or
                                pattern (lib/types.ml[845,27191+18]..[845,27191+24])
                                  Ppat_construct "Cvar" (lib/types.ml[845,27191+18]..[845,27191+22])
                                  Some
                                    []
                                    pattern (lib/types.ml[845,27191+23]..[845,27191+24])
                                      Ppat_any
                                pattern (lib/types.ml[845,27191+27]..[845,27191+30])
                                  Ppat_construct "Cok" (lib/types.ml[845,27191+27]..[845,27191+30])
                                  None
                        ]
                  expression (lib/types.ml[846,27236+6]..[846,27236+26])
                    Pexp_apply
                    expression (lib/types.ml[846,27236+6]..[846,27236+16])
                      Pexp_ident "link_commu" (lib/types.ml[846,27236+6]..[846,27236+16])
                    [
                      <arg>
                      Labelled "inside"
                        expression (lib/types.ml[846,27236+18]..[846,27236+24])
                          Pexp_ident "inside" (lib/types.ml[846,27236+18]..[846,27236+24])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[846,27236+25]..[846,27236+26])
                          Pexp_ident "c" (lib/types.ml[846,27236+25]..[846,27236+26])
                    ]
                <case>
                  pattern (lib/types.ml[847,27263+4]..[847,27263+5])
                    Ppat_any
                  expression (lib/types.ml[847,27263+9]..[847,27263+39])
                    Pexp_apply
                    expression (lib/types.ml[847,27263+9]..[847,27263+20])
                      Pexp_ident "invalid_arg" (lib/types.ml[847,27263+9]..[847,27263+20])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[847,27263+21]..[847,27263+39])
                          Pexp_constant PConst_string("Types.link_commu",(lib/types.ml[847,27263+22]..[847,27263+38]),None)
                    ]
              ]
    ]
  structure_item (lib/types.ml[849,27304+0]..[849,27304+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[849,27304+4]..[849,27304+16])
          Ppat_var "set_commu_ok" (lib/types.ml[849,27304+4]..[849,27304+16])
        expression (lib/types.ml[849,27304+17]..[849,27304+45]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[849,27304+17]..[849,27304+18])
              Nolabel
              None
              pattern (lib/types.ml[849,27304+17]..[849,27304+18])
                Ppat_var "c" (lib/types.ml[849,27304+17]..[849,27304+18])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[849,27304+21]..[849,27304+45])
              Pexp_apply
              expression (lib/types.ml[849,27304+21]..[849,27304+31])
                Pexp_ident "link_commu" (lib/types.ml[849,27304+21]..[849,27304+31])
              [
                <arg>
                Labelled "inside"
                  expression (lib/types.ml[849,27304+40]..[849,27304+41])
                    Pexp_ident "c" (lib/types.ml[849,27304+40]..[849,27304+41])
                <arg>
                Nolabel
                  expression (lib/types.ml[849,27304+42]..[849,27304+45])
                    Pexp_construct "Cok" (lib/types.ml[849,27304+42]..[849,27304+45])
                    None
              ]
    ]
  structure_item (lib/types.ml[851,27351+0]..[854,27427+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[851,27351+4]..[851,27351+12])
          Ppat_var "snapshot" (lib/types.ml[851,27351+4]..[851,27351+12])
        expression (lib/types.ml[851,27351+13]..[854,27427+15]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[851,27351+13]..[851,27351+15])
              Nolabel
              None
              pattern (lib/types.ml[851,27351+13]..[851,27351+15])
                Ppat_construct "()" (lib/types.ml[851,27351+13]..[851,27351+15])
                None
          ]
          None
          Pfunction_body
            expression (lib/types.ml[852,27369+2]..[854,27427+15])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[852,27369+6]..[852,27369+9])
                    Ppat_var "old" (lib/types.ml[852,27369+6]..[852,27369+9])
                  expression (lib/types.ml[852,27369+12]..[852,27369+26])
                    Pexp_apply
                    expression (lib/types.ml[852,27369+12]..[852,27369+13])
                      Pexp_ident "!" (lib/types.ml[852,27369+12]..[852,27369+13])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[852,27369+13]..[852,27369+26])
                          Pexp_ident "last_snapshot" (lib/types.ml[852,27369+13]..[852,27369+26])
                    ]
              ]
              expression (lib/types.ml[853,27399+2]..[854,27427+15])
                Pexp_sequence
                expression (lib/types.ml[853,27399+2]..[853,27399+26])
                  Pexp_apply
                  expression (lib/types.ml[853,27399+16]..[853,27399+18])
                    Pexp_ident ":=" (lib/types.ml[853,27399+16]..[853,27399+18])
                  [
                    <arg>
                    Nolabel
                      expression (lib/types.ml[853,27399+2]..[853,27399+15])
                        Pexp_ident "last_snapshot" (lib/types.ml[853,27399+2]..[853,27399+15])
                    <arg>
                    Nolabel
                      expression (lib/types.ml[853,27399+19]..[853,27399+26])
                        Pexp_apply
                        expression (lib/types.ml[853,27399+19]..[853,27399+20])
                          Pexp_ident "!" (lib/types.ml[853,27399+19]..[853,27399+20])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[853,27399+20]..[853,27399+26])
                              Pexp_ident "new_id" (lib/types.ml[853,27399+20]..[853,27399+26])
                        ]
                  ]
                expression (lib/types.ml[854,27427+2]..[854,27427+15])
                  Pexp_tuple
                  [
                    expression (lib/types.ml[854,27427+3]..[854,27427+9])
                      Pexp_apply
                      expression (lib/types.ml[854,27427+3]..[854,27427+4])
                        Pexp_ident "!" (lib/types.ml[854,27427+3]..[854,27427+4])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[854,27427+4]..[854,27427+9])
                            Pexp_ident "trail" (lib/types.ml[854,27427+4]..[854,27427+9])
                      ]
                    expression (lib/types.ml[854,27427+11]..[854,27427+14])
                      Pexp_ident "old" (lib/types.ml[854,27427+11]..[854,27427+14])
                  ]
    ]
  structure_item (lib/types.ml[856,27444+0]..[862,27597+26])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[856,27444+8]..[856,27444+15])
          Ppat_var "rev_log" (lib/types.ml[856,27444+8]..[856,27444+15])
        expression (lib/types.ml[856,27444+16]..[862,27597+26]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[856,27444+16]..[856,27444+20])
              Nolabel
              None
              pattern (lib/types.ml[856,27444+16]..[856,27444+20])
                Ppat_var "accu" (lib/types.ml[856,27444+16]..[856,27444+20])
          ]
          None
          Pfunction_cases (lib/types.ml[856,27444+23]..[862,27597+26])
            [
              <case>
                pattern (lib/types.ml[857,27476+4]..[857,27476+13])
                  Ppat_construct "Unchanged" (lib/types.ml[857,27476+4]..[857,27476+13])
                  None
                expression (lib/types.ml[857,27476+17]..[857,27476+21])
                  Pexp_ident "accu" (lib/types.ml[857,27476+17]..[857,27476+21])
              <case>
                pattern (lib/types.ml[858,27498+4]..[858,27498+11])
                  Ppat_construct "Invalid" (lib/types.ml[858,27498+4]..[858,27498+11])
                  None
                expression (lib/types.ml[858,27498+15]..[858,27498+27])
                  Pexp_assert
                  expression (lib/types.ml[858,27498+22]..[858,27498+27])
                    Pexp_construct "false" (lib/types.ml[858,27498+22]..[858,27498+27])
                    None
              <case>
                pattern (lib/types.ml[859,27526+4]..[859,27526+21])
                  Ppat_construct "Change" (lib/types.ml[859,27526+4]..[859,27526+10])
                  Some
                    []
                    pattern (lib/types.ml[859,27526+11]..[859,27526+21])
                      Ppat_tuple
                      [
                        pattern (lib/types.ml[859,27526+12]..[859,27526+14])
                          Ppat_var "ch" (lib/types.ml[859,27526+12]..[859,27526+14])
                        pattern (lib/types.ml[859,27526+16]..[859,27526+20])
                          Ppat_var "next" (lib/types.ml[859,27526+16]..[859,27526+20])
                      ]
                expression (lib/types.ml[860,27551+6]..[862,27597+26])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lib/types.ml[860,27551+10]..[860,27551+11])
                        Ppat_var "d" (lib/types.ml[860,27551+10]..[860,27551+11])
                      expression (lib/types.ml[860,27551+14]..[860,27551+19])
                        Pexp_apply
                        expression (lib/types.ml[860,27551+14]..[860,27551+15])
                          Pexp_ident "!" (lib/types.ml[860,27551+14]..[860,27551+15])
                        [
                          <arg>
                          Nolabel
                            expression (lib/types.ml[860,27551+15]..[860,27551+19])
                              Pexp_ident "next" (lib/types.ml[860,27551+15]..[860,27551+19])
                        ]
                  ]
                  expression (lib/types.ml[861,27574+6]..[862,27597+26])
                    Pexp_sequence
                    expression (lib/types.ml[861,27574+6]..[861,27574+21])
                      Pexp_apply
                      expression (lib/types.ml[861,27574+11]..[861,27574+13])
                        Pexp_ident ":=" (lib/types.ml[861,27574+11]..[861,27574+13])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[861,27574+6]..[861,27574+10])
                            Pexp_ident "next" (lib/types.ml[861,27574+6]..[861,27574+10])
                        <arg>
                        Nolabel
                          expression (lib/types.ml[861,27574+14]..[861,27574+21])
                            Pexp_construct "Invalid" (lib/types.ml[861,27574+14]..[861,27574+21])
                            None
                      ]
                    expression (lib/types.ml[862,27597+6]..[862,27597+26])
                      Pexp_apply
                      expression (lib/types.ml[862,27597+6]..[862,27597+13])
                        Pexp_ident "rev_log" (lib/types.ml[862,27597+6]..[862,27597+13])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[862,27597+14]..[862,27597+24])
                            Pexp_construct "::" (lib/types.ml[862,27597+17]..[862,27597+19])
                            Some
                              expression (lib/types.ml[862,27597+15]..[862,27597+23]) ghost
                                Pexp_tuple
                                [
                                  expression (lib/types.ml[862,27597+15]..[862,27597+17])
                                    Pexp_ident "ch" (lib/types.ml[862,27597+15]..[862,27597+17])
                                  expression (lib/types.ml[862,27597+19]..[862,27597+23])
                                    Pexp_ident "accu" (lib/types.ml[862,27597+19]..[862,27597+23])
                                ]
                        <arg>
                        Nolabel
                          expression (lib/types.ml[862,27597+25]..[862,27597+26])
                            Pexp_ident "d" (lib/types.ml[862,27597+25]..[862,27597+26])
                      ]
            ]
    ]
  structure_item (lib/types.ml[864,27625+0]..[874,27959+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[864,27625+4]..[864,27625+13])
          Ppat_var "backtrack" (lib/types.ml[864,27625+4]..[864,27625+13])
        expression (lib/types.ml[864,27625+14]..[874,27959+22]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[864,27625+14]..[864,27625+29])
              Labelled "cleanup_abbrev"
              None
              pattern (lib/types.ml[864,27625+15]..[864,27625+29])
                Ppat_var "cleanup_abbrev" (lib/types.ml[864,27625+15]..[864,27625+29])
            Pparam_val (lib/types.ml[864,27625+30]..[864,27625+44])
              Nolabel
              None
              pattern (lib/types.ml[864,27625+30]..[864,27625+44])
                Ppat_tuple
                [
                  pattern (lib/types.ml[864,27625+31]..[864,27625+38])
                    Ppat_var "changes" (lib/types.ml[864,27625+31]..[864,27625+38])
                  pattern (lib/types.ml[864,27625+40]..[864,27625+43])
                    Ppat_var "old" (lib/types.ml[864,27625+40]..[864,27625+43])
                ]
          ]
          None
          Pfunction_body
            expression (lib/types.ml[865,27672+2]..[874,27959+22])
              Pexp_match
              expression (lib/types.ml[865,27672+8]..[865,27672+16])
                Pexp_apply
                expression (lib/types.ml[865,27672+8]..[865,27672+9])
                  Pexp_ident "!" (lib/types.ml[865,27672+8]..[865,27672+9])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[865,27672+9]..[865,27672+16])
                      Pexp_ident "changes" (lib/types.ml[865,27672+9]..[865,27672+16])
                ]
              [
                <case>
                  pattern (lib/types.ml[866,27694+4]..[866,27694+13])
                    Ppat_construct "Unchanged" (lib/types.ml[866,27694+4]..[866,27694+13])
                    None
                  expression (lib/types.ml[866,27694+17]..[866,27694+37])
                    Pexp_apply
                    expression (lib/types.ml[866,27694+31]..[866,27694+33])
                      Pexp_ident ":=" (lib/types.ml[866,27694+31]..[866,27694+33])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[866,27694+17]..[866,27694+30])
                          Pexp_ident "last_snapshot" (lib/types.ml[866,27694+17]..[866,27694+30])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[866,27694+34]..[866,27694+37])
                          Pexp_ident "old" (lib/types.ml[866,27694+34]..[866,27694+37])
                    ]
                <case>
                  pattern (lib/types.ml[867,27732+4]..[867,27732+11])
                    Ppat_construct "Invalid" (lib/types.ml[867,27732+4]..[867,27732+11])
                    None
                  expression (lib/types.ml[867,27732+15]..[867,27732+41])
                    Pexp_apply
                    expression (lib/types.ml[867,27732+15]..[867,27732+23])
                      Pexp_ident "failwith" (lib/types.ml[867,27732+15]..[867,27732+23])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[867,27732+24]..[867,27732+41])
                          Pexp_constant PConst_string("Types.backtrack",(lib/types.ml[867,27732+25]..[867,27732+40]),None)
                    ]
                <case>
                  pattern (lib/types.ml[868,27774+4]..[868,27774+22])
                    Ppat_alias "change" (lib/types.ml[868,27774+16]..[868,27774+22])
                    pattern (lib/types.ml[868,27774+4]..[868,27774+12])
                      Ppat_construct "Change" (lib/types.ml[868,27774+4]..[868,27774+10])
                      Some
                        []
                        pattern (lib/types.ml[868,27774+11]..[868,27774+12])
                          Ppat_any
                  expression (lib/types.ml[869,27800+6]..[874,27959+22])
                    Pexp_sequence
                    expression (lib/types.ml[869,27800+6]..[869,27800+23])
                      Pexp_apply
                      expression (lib/types.ml[869,27800+6]..[869,27800+20])
                        Pexp_ident "cleanup_abbrev" (lib/types.ml[869,27800+6]..[869,27800+20])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[869,27800+21]..[869,27800+23])
                            Pexp_construct "()" (lib/types.ml[869,27800+21]..[869,27800+23])
                            None
                      ]
                    expression (lib/types.ml[870,27825+6]..[874,27959+22])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lib/types.ml[870,27825+10]..[870,27825+17])
                            Ppat_var "backlog" (lib/types.ml[870,27825+10]..[870,27825+17])
                          expression (lib/types.ml[870,27825+20]..[870,27825+37])
                            Pexp_apply
                            expression (lib/types.ml[870,27825+20]..[870,27825+27])
                              Pexp_ident "rev_log" (lib/types.ml[870,27825+20]..[870,27825+27])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[870,27825+28]..[870,27825+30])
                                  Pexp_construct "[]" (lib/types.ml[870,27825+28]..[870,27825+30])
                                  None
                              <arg>
                              Nolabel
                                expression (lib/types.ml[870,27825+31]..[870,27825+37])
                                  Pexp_ident "change" (lib/types.ml[870,27825+31]..[870,27825+37])
                            ]
                      ]
                      expression (lib/types.ml[871,27866+6]..[874,27959+22])
                        Pexp_sequence
                        expression (lib/types.ml[871,27866+6]..[871,27866+35])
                          Pexp_apply
                          expression (lib/types.ml[871,27866+6]..[871,27866+15])
                            Pexp_ident "List.iter" (lib/types.ml[871,27866+6]..[871,27866+15])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[871,27866+16]..[871,27866+27])
                                Pexp_ident "undo_change" (lib/types.ml[871,27866+16]..[871,27866+27])
                            <arg>
                            Nolabel
                              expression (lib/types.ml[871,27866+28]..[871,27866+35])
                                Pexp_ident "backlog" (lib/types.ml[871,27866+28]..[871,27866+35])
                          ]
                        expression (lib/types.ml[872,27903+6]..[874,27959+22])
                          Pexp_sequence
                          expression (lib/types.ml[872,27903+6]..[872,27903+26])
                            Pexp_apply
                            expression (lib/types.ml[872,27903+14]..[872,27903+16])
                              Pexp_ident ":=" (lib/types.ml[872,27903+14]..[872,27903+16])
                            [
                              <arg>
                              Nolabel
                                expression (lib/types.ml[872,27903+6]..[872,27903+13])
                                  Pexp_ident "changes" (lib/types.ml[872,27903+6]..[872,27903+13])
                              <arg>
                              Nolabel
                                expression (lib/types.ml[872,27903+17]..[872,27903+26])
                                  Pexp_construct "Unchanged" (lib/types.ml[872,27903+17]..[872,27903+26])
                                  None
                            ]
                          expression (lib/types.ml[873,27931+6]..[874,27959+22])
                            Pexp_sequence
                            expression (lib/types.ml[873,27931+6]..[873,27931+26])
                              Pexp_apply
                              expression (lib/types.ml[873,27931+20]..[873,27931+22])
                                Pexp_ident ":=" (lib/types.ml[873,27931+20]..[873,27931+22])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[873,27931+6]..[873,27931+19])
                                    Pexp_ident "last_snapshot" (lib/types.ml[873,27931+6]..[873,27931+19])
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[873,27931+23]..[873,27931+26])
                                    Pexp_ident "old" (lib/types.ml[873,27931+23]..[873,27931+26])
                              ]
                            expression (lib/types.ml[874,27959+6]..[874,27959+22])
                              Pexp_apply
                              expression (lib/types.ml[874,27959+12]..[874,27959+14])
                                Pexp_ident ":=" (lib/types.ml[874,27959+12]..[874,27959+14])
                              [
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[874,27959+6]..[874,27959+11])
                                    Pexp_ident "trail" (lib/types.ml[874,27959+6]..[874,27959+11])
                                <arg>
                                Nolabel
                                  expression (lib/types.ml[874,27959+15]..[874,27959+22])
                                    Pexp_ident "changes" (lib/types.ml[874,27959+15]..[874,27959+22])
                              ]
              ]
    ]
  structure_item (lib/types.ml[876,27983+0]..[880,28091+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[876,27983+4]..[876,27983+27])
          Ppat_var "undo_first_change_after" (lib/types.ml[876,27983+4]..[876,27983+27])
        expression (lib/types.ml[876,27983+28]..[880,28091+11]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[876,27983+28]..[876,27983+40])
              Nolabel
              None
              pattern (lib/types.ml[876,27983+28]..[876,27983+40])
                Ppat_tuple
                [
                  pattern (lib/types.ml[876,27983+29]..[876,27983+36])
                    Ppat_var "changes" (lib/types.ml[876,27983+29]..[876,27983+36])
                  pattern (lib/types.ml[876,27983+38]..[876,27983+39])
                    Ppat_any
                ]
          ]
          None
          Pfunction_body
            expression (lib/types.ml[877,28026+2]..[880,28091+11])
              Pexp_match
              expression (lib/types.ml[877,28026+8]..[877,28026+16])
                Pexp_apply
                expression (lib/types.ml[877,28026+8]..[877,28026+9])
                  Pexp_ident "!" (lib/types.ml[877,28026+8]..[877,28026+9])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[877,28026+9]..[877,28026+16])
                      Pexp_ident "changes" (lib/types.ml[877,28026+9]..[877,28026+16])
                ]
              [
                <case>
                  pattern (lib/types.ml[878,28048+4]..[878,28048+18])
                    Ppat_construct "Change" (lib/types.ml[878,28048+4]..[878,28048+10])
                    Some
                      []
                      pattern (lib/types.ml[878,28048+11]..[878,28048+18])
                        Ppat_tuple
                        [
                          pattern (lib/types.ml[878,28048+12]..[878,28048+14])
                            Ppat_var "ch" (lib/types.ml[878,28048+12]..[878,28048+14])
                          pattern (lib/types.ml[878,28048+16]..[878,28048+17])
                            Ppat_any
                        ]
                  expression (lib/types.ml[879,28070+6]..[879,28070+20])
                    Pexp_apply
                    expression (lib/types.ml[879,28070+6]..[879,28070+17])
                      Pexp_ident "undo_change" (lib/types.ml[879,28070+6]..[879,28070+17])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[879,28070+18]..[879,28070+20])
                          Pexp_ident "ch" (lib/types.ml[879,28070+18]..[879,28070+20])
                    ]
                <case>
                  pattern (lib/types.ml[880,28091+4]..[880,28091+5])
                    Ppat_any
                  expression (lib/types.ml[880,28091+9]..[880,28091+11])
                    Pexp_construct "()" (lib/types.ml[880,28091+9]..[880,28091+11])
                    None
              ]
    ]
  structure_item (lib/types.ml[882,28104+0]..[889,28285+31])
    Pstr_value Rec
    [
      <def>
        pattern (lib/types.ml[882,28104+8]..[882,28104+24])
          Ppat_var "rev_compress_log" (lib/types.ml[882,28104+8]..[882,28104+24])
        expression (lib/types.ml[882,28104+25]..[889,28285+31]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[882,28104+25]..[882,28104+28])
              Nolabel
              None
              pattern (lib/types.ml[882,28104+25]..[882,28104+28])
                Ppat_var "log" (lib/types.ml[882,28104+25]..[882,28104+28])
            Pparam_val (lib/types.ml[882,28104+29]..[882,28104+30])
              Nolabel
              None
              pattern (lib/types.ml[882,28104+29]..[882,28104+30])
                Ppat_var "r" (lib/types.ml[882,28104+29]..[882,28104+30])
          ]
          None
          Pfunction_body
            expression (lib/types.ml[883,28137+2]..[889,28285+31])
              Pexp_match
              expression (lib/types.ml[883,28137+8]..[883,28137+10])
                Pexp_apply
                expression (lib/types.ml[883,28137+8]..[883,28137+9])
                  Pexp_ident "!" (lib/types.ml[883,28137+8]..[883,28137+9])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[883,28137+9]..[883,28137+10])
                      Pexp_ident "r" (lib/types.ml[883,28137+9]..[883,28137+10])
                ]
              [
                <case>
                  pattern (lib/types.ml[884,28153+4]..[884,28153+23])
                    Ppat_or
                    pattern (lib/types.ml[884,28153+4]..[884,28153+13])
                      Ppat_construct "Unchanged" (lib/types.ml[884,28153+4]..[884,28153+13])
                      None
                    pattern (lib/types.ml[884,28153+16]..[884,28153+23])
                      Ppat_construct "Invalid" (lib/types.ml[884,28153+16]..[884,28153+23])
                      None
                  expression (lib/types.ml[885,28180+6]..[885,28180+9])
                    Pexp_ident "log" (lib/types.ml[885,28180+6]..[885,28180+9])
                <case>
                  pattern (lib/types.ml[886,28190+4]..[886,28190+30])
                    Ppat_construct "Change" (lib/types.ml[886,28190+4]..[886,28190+10])
                    Some
                      []
                      pattern (lib/types.ml[886,28190+11]..[886,28190+30])
                        Ppat_tuple
                        [
                          pattern (lib/types.ml[886,28190+12]..[886,28190+23])
                            Ppat_construct "Ccompress" (lib/types.ml[886,28190+12]..[886,28190+21])
                            Some
                              []
                              pattern (lib/types.ml[886,28190+22]..[886,28190+23])
                                Ppat_any
                          pattern (lib/types.ml[886,28190+25]..[886,28190+29])
                            Ppat_var "next" (lib/types.ml[886,28190+25]..[886,28190+29])
                        ]
                  expression (lib/types.ml[887,28224+6]..[887,28224+36])
                    Pexp_apply
                    expression (lib/types.ml[887,28224+6]..[887,28224+22])
                      Pexp_ident "rev_compress_log" (lib/types.ml[887,28224+6]..[887,28224+22])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[887,28224+23]..[887,28224+31])
                          Pexp_construct "::" (lib/types.ml[887,28224+25]..[887,28224+27])
                          Some
                            expression (lib/types.ml[887,28224+24]..[887,28224+30]) ghost
                              Pexp_tuple
                              [
                                expression (lib/types.ml[887,28224+24]..[887,28224+25])
                                  Pexp_ident "r" (lib/types.ml[887,28224+24]..[887,28224+25])
                                expression (lib/types.ml[887,28224+27]..[887,28224+30])
                                  Pexp_ident "log" (lib/types.ml[887,28224+27]..[887,28224+30])
                              ]
                      <arg>
                      Nolabel
                        expression (lib/types.ml[887,28224+32]..[887,28224+36])
                          Pexp_ident "next" (lib/types.ml[887,28224+32]..[887,28224+36])
                    ]
                <case>
                  pattern (lib/types.ml[888,28261+4]..[888,28261+20])
                    Ppat_construct "Change" (lib/types.ml[888,28261+4]..[888,28261+10])
                    Some
                      []
                      pattern (lib/types.ml[888,28261+11]..[888,28261+20])
                        Ppat_tuple
                        [
                          pattern (lib/types.ml[888,28261+12]..[888,28261+13])
                            Ppat_any
                          pattern (lib/types.ml[888,28261+15]..[888,28261+19])
                            Ppat_var "next" (lib/types.ml[888,28261+15]..[888,28261+19])
                        ]
                  expression (lib/types.ml[889,28285+6]..[889,28285+31])
                    Pexp_apply
                    expression (lib/types.ml[889,28285+6]..[889,28285+22])
                      Pexp_ident "rev_compress_log" (lib/types.ml[889,28285+6]..[889,28285+22])
                    [
                      <arg>
                      Nolabel
                        expression (lib/types.ml[889,28285+23]..[889,28285+26])
                          Pexp_ident "log" (lib/types.ml[889,28285+23]..[889,28285+26])
                      <arg>
                      Nolabel
                        expression (lib/types.ml[889,28285+27]..[889,28285+31])
                          Pexp_ident "next" (lib/types.ml[889,28285+27]..[889,28285+31])
                    ]
              ]
    ]
  structure_item (lib/types.ml[891,28318+0]..[902,28664+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[891,28318+4]..[891,28318+17])
          Ppat_var "undo_compress" (lib/types.ml[891,28318+4]..[891,28318+17])
        expression (lib/types.ml[891,28318+18]..[902,28664+11]) ghost
          Pexp_function
          [
            Pparam_val (lib/types.ml[891,28318+18]..[891,28318+33])
              Nolabel
              None
              pattern (lib/types.ml[891,28318+18]..[891,28318+33])
                Ppat_tuple
                [
                  pattern (lib/types.ml[891,28318+19]..[891,28318+26])
                    Ppat_var "changes" (lib/types.ml[891,28318+19]..[891,28318+26])
                  pattern (lib/types.ml[891,28318+28]..[891,28318+32])
                    Ppat_var "_old" (lib/types.ml[891,28318+28]..[891,28318+32])
                ]
          ]
          None
          Pfunction_body
            expression (lib/types.ml[892,28354+2]..[902,28664+11])
              Pexp_match
              expression (lib/types.ml[892,28354+8]..[892,28354+16])
                Pexp_apply
                expression (lib/types.ml[892,28354+8]..[892,28354+9])
                  Pexp_ident "!" (lib/types.ml[892,28354+8]..[892,28354+9])
                [
                  <arg>
                  Nolabel
                    expression (lib/types.ml[892,28354+9]..[892,28354+16])
                      Pexp_ident "changes" (lib/types.ml[892,28354+9]..[892,28354+16])
                ]
              [
                <case>
                  pattern (lib/types.ml[893,28376+4]..[894,28390+11])
                    Ppat_or
                    pattern (lib/types.ml[893,28376+4]..[893,28376+13])
                      Ppat_construct "Unchanged" (lib/types.ml[893,28376+4]..[893,28376+13])
                      None
                    pattern (lib/types.ml[894,28390+4]..[894,28390+11])
                      Ppat_construct "Invalid" (lib/types.ml[894,28390+4]..[894,28390+11])
                      None
                  expression (lib/types.ml[894,28390+15]..[894,28390+17])
                    Pexp_construct "()" (lib/types.ml[894,28390+15]..[894,28390+17])
                    None
                <case>
                  pattern (lib/types.ml[895,28408+4]..[895,28408+12])
                    Ppat_construct "Change" (lib/types.ml[895,28408+4]..[895,28408+10])
                    Some
                      []
                      pattern (lib/types.ml[895,28408+11]..[895,28408+12])
                        Ppat_any
                  expression (lib/types.ml[896,28424+6]..[902,28664+11])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lib/types.ml[896,28424+10]..[896,28424+13])
                          Ppat_var "log" (lib/types.ml[896,28424+10]..[896,28424+13])
                        expression (lib/types.ml[896,28424+16]..[896,28424+43])
                          Pexp_apply
                          expression (lib/types.ml[896,28424+16]..[896,28424+32])
                            Pexp_ident "rev_compress_log" (lib/types.ml[896,28424+16]..[896,28424+32])
                          [
                            <arg>
                            Nolabel
                              expression (lib/types.ml[896,28424+33]..[896,28424+35])
                                Pexp_construct "[]" (lib/types.ml[896,28424+33]..[896,28424+35])
                                None
                            <arg>
                            Nolabel
                              expression (lib/types.ml[896,28424+36]..[896,28424+43])
                                Pexp_ident "changes" (lib/types.ml[896,28424+36]..[896,28424+43])
                          ]
                    ]
                    expression (lib/types.ml[897,28471+6]..[902,28664+11])
                      Pexp_apply
                      expression (lib/types.ml[897,28471+6]..[897,28471+15])
                        Pexp_ident "List.iter" (lib/types.ml[897,28471+6]..[897,28471+15])
                      [
                        <arg>
                        Nolabel
                          expression (lib/types.ml[898,28487+8]..[901,28645+18])
                            Pexp_function
                            [
                              Pparam_val (lib/types.ml[898,28487+13]..[898,28487+14])
                                Nolabel
                                None
                                pattern (lib/types.ml[898,28487+13]..[898,28487+14])
                                  Ppat_var "r" (lib/types.ml[898,28487+13]..[898,28487+14])
                            ]
                            None
                            Pfunction_body
                              expression (lib/types.ml[898,28487+18]..[901,28645+17])
                                Pexp_match
                                expression (lib/types.ml[898,28487+24]..[898,28487+26])
                                  Pexp_apply
                                  expression (lib/types.ml[898,28487+24]..[898,28487+25])
                                    Pexp_ident "!" (lib/types.ml[898,28487+24]..[898,28487+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lib/types.ml[898,28487+25]..[898,28487+26])
                                        Pexp_ident "r" (lib/types.ml[898,28487+25]..[898,28487+26])
                                  ]
                                [
                                  <case>
                                    pattern (lib/types.ml[899,28519+10]..[899,28519+48])
                                      Ppat_construct "Change" (lib/types.ml[899,28519+10]..[899,28519+16])
                                      Some
                                        []
                                        pattern (lib/types.ml[899,28519+17]..[899,28519+48])
                                          Ppat_tuple
                                          [
                                            pattern (lib/types.ml[899,28519+18]..[899,28519+41])
                                              Ppat_construct "Ccompress" (lib/types.ml[899,28519+18]..[899,28519+27])
                                              Some
                                                []
                                                pattern (lib/types.ml[899,28519+28]..[899,28519+41])
                                                  Ppat_tuple
                                                  [
                                                    pattern (lib/types.ml[899,28519+29]..[899,28519+31])
                                                      Ppat_var "ty" (lib/types.ml[899,28519+29]..[899,28519+31])
                                                    pattern (lib/types.ml[899,28519+33]..[899,28519+37])
                                                      Ppat_var "desc" (lib/types.ml[899,28519+33]..[899,28519+37])
                                                    pattern (lib/types.ml[899,28519+39]..[899,28519+40])
                                                      Ppat_var "d" (lib/types.ml[899,28519+39]..[899,28519+40])
                                                  ]
                                            pattern (lib/types.ml[899,28519+43]..[899,28519+47])
                                              Ppat_var "next" (lib/types.ml[899,28519+43]..[899,28519+47])
                                          ]
                                    <when>
                                      expression (lib/types.ml[899,28519+54]..[899,28519+66])
                                        Pexp_apply
                                        expression (lib/types.ml[899,28519+62]..[899,28519+64])
                                          Pexp_ident "==" (lib/types.ml[899,28519+62]..[899,28519+64])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/types.ml[899,28519+54]..[899,28519+61])
                                              Pexp_field
                                              expression (lib/types.ml[899,28519+54]..[899,28519+56])
                                                Pexp_ident "ty" (lib/types.ml[899,28519+54]..[899,28519+56])
                                              "desc" (lib/types.ml[899,28519+57]..[899,28519+61])
                                          <arg>
                                          Nolabel
                                            expression (lib/types.ml[899,28519+65]..[899,28519+66])
                                              Pexp_ident "d" (lib/types.ml[899,28519+65]..[899,28519+66])
                                        ]
                                    expression (lib/types.ml[900,28589+12]..[900,28589+55])
                                      Pexp_sequence
                                      expression (lib/types.ml[900,28589+12]..[900,28589+43])
                                        Pexp_apply
                                        expression (lib/types.ml[900,28589+12]..[900,28589+35])
                                          Pexp_ident "Transient_expr.set_desc" (lib/types.ml[900,28589+12]..[900,28589+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/types.ml[900,28589+36]..[900,28589+38])
                                              Pexp_ident "ty" (lib/types.ml[900,28589+36]..[900,28589+38])
                                          <arg>
                                          Nolabel
                                            expression (lib/types.ml[900,28589+39]..[900,28589+43])
                                              Pexp_ident "desc" (lib/types.ml[900,28589+39]..[900,28589+43])
                                        ]
                                      expression (lib/types.ml[900,28589+45]..[900,28589+55])
                                        Pexp_apply
                                        expression (lib/types.ml[900,28589+47]..[900,28589+49])
                                          Pexp_ident ":=" (lib/types.ml[900,28589+47]..[900,28589+49])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lib/types.ml[900,28589+45]..[900,28589+46])
                                              Pexp_ident "r" (lib/types.ml[900,28589+45]..[900,28589+46])
                                          <arg>
                                          Nolabel
                                            expression (lib/types.ml[900,28589+50]..[900,28589+55])
                                              Pexp_apply
                                              expression (lib/types.ml[900,28589+50]..[900,28589+51])
                                                Pexp_ident "!" (lib/types.ml[900,28589+50]..[900,28589+51])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lib/types.ml[900,28589+51]..[900,28589+55])
                                                    Pexp_ident "next" (lib/types.ml[900,28589+51]..[900,28589+55])
                                              ]
                                        ]
                                  <case>
                                    pattern (lib/types.ml[901,28645+10]..[901,28645+11])
                                      Ppat_any
                                    expression (lib/types.ml[901,28645+15]..[901,28645+17])
                                      Pexp_construct "()" (lib/types.ml[901,28645+15]..[901,28645+17])
                                      None
                                ]
                        <arg>
                        Nolabel
                          expression (lib/types.ml[902,28664+8]..[902,28664+11])
                            Pexp_ident "log" (lib/types.ml[902,28664+8]..[902,28664+11])
                      ]
              ]
    ]
]

open Asttypes
type transient_expr =
  {
  mutable desc: type_desc ;
  mutable level: int ;
  mutable scope: int ;
  id: int }
and type_expr = transient_expr
and type_desc =
  | Tvar of string option 
  | Tarrow of arg_label * type_expr * type_expr * commutable 
  | Ttuple of type_expr list 
  | Tconstr of Path.t * type_expr list * abbrev_memo ref 
  | Tobject of type_expr * (Path.t * type_expr list) option ref 
  | Tfield of string * field_kind * type_expr * type_expr 
  | Tnil 
  | Tlink of type_expr 
  | Tsubst of type_expr * type_expr option 
  | Tvariant of row_desc 
  | Tunivar of string option 
  | Tpoly of type_expr * type_expr list 
  | Tpackage of Path.t * (Longident.t * type_expr) list 
and row_desc =
  {
  row_fields: (label * row_field) list ;
  row_more: type_expr ;
  row_closed: bool ;
  row_fixed: fixed_explanation option ;
  row_name: (Path.t * type_expr list) option }
and fixed_explanation =
  | Univar of type_expr 
  | Fixed_private 
  | Reified of Path.t 
  | Rigid 
and row_field = [ `some ] row_field_gen
and _ row_field_gen =
  | RFpresent: type_expr option -> [> `some ] row_field_gen 
  | RFeither:
  {
  no_arg: bool ;
  arg_type: type_expr list ;
  matched: bool ;
  ext: [ `some  | `none ] row_field_gen ref } -> [> `some ] row_field_gen 
  | RFabsent: [> `some ] row_field_gen 
  | RFnone: [> `none ] row_field_gen 
and abbrev_memo =
  | Mnil 
  | Mcons of private_flag * Path.t * type_expr * type_expr * abbrev_memo 
  | Mlink of abbrev_memo ref 
and any = [ `some  | `none  | `var ]
and field_kind = [ `some  | `var ] field_kind_gen
and _ field_kind_gen =
  | FKvar: {
  mutable field_kind: any field_kind_gen } -> [> `var ] field_kind_gen 
  | FKprivate: [> `none ] field_kind_gen 
  | FKpublic: [> `some ] field_kind_gen 
  | FKabsent: [> `some ] field_kind_gen 
and commutable = [ `some  | `var ] commutable_gen
and _ commutable_gen =
  | Cok: [> `some ] commutable_gen 
  | Cunknown: [> `none ] commutable_gen 
  | Cvar: {
  mutable commu: any commutable_gen } -> [> `var ] commutable_gen 
module TransientTypeOps =
  struct
    type t = type_expr
    let compare t1 t2 = t1.id - t2.id
    let hash t = t.id
    let equal t1 t2 = t1 == t2
  end
module Uid = Shape.Uid
module MethSet = Misc.Stdlib.String.Set
module VarSet = Misc.Stdlib.String.Set
module Meths = Misc.Stdlib.String.Map
module Vars = Misc.Stdlib.String.Map
type value_description =
  {
  val_type: type_expr ;
  val_kind: value_kind ;
  val_loc: Location.t ;
  val_attributes: Parsetree.attributes ;
  val_uid: Uid.t }
and value_kind =
  | Val_reg 
  | Val_prim of Primitive.description 
  | Val_ivar of mutable_flag * string 
  | Val_self of class_signature * self_meths * Ident.t Vars.t * string 
  | Val_anc of class_signature * Ident.t Meths.t * string 
and self_meths =
  | Self_concrete of Ident.t Meths.t 
  | Self_virtual of Ident.t Meths.t ref 
and class_signature =
  {
  csig_self: type_expr ;
  mutable csig_self_row: type_expr ;
  mutable csig_vars: (mutable_flag * virtual_flag * type_expr) Vars.t ;
  mutable csig_meths: (method_privacy * virtual_flag * type_expr) Meths.t }
and method_privacy =
  | Mpublic 
  | Mprivate of field_kind 
module Variance =
  struct
    type t = int
    type f =
      | May_pos 
      | May_neg 
      | May_weak 
      | Inj 
      | Pos 
      | Neg 
      | Inv 
    let single =
      function
      | May_pos -> 1
      | May_neg -> 2 + 4
      | May_weak -> 4
      | Inj -> 8
      | Pos -> (16 + 8) + 1
      | Neg -> ((32 + 8) + 4) + 2
      | Inv -> 63
    let union v1 v2 = v1 lor v2
    let inter v1 v2 = v1 land v2
    let subset v1 v2 = (v1 land v2) = v1
    let eq (v1 : t) v2 = v1 = v2
    let set x v = union v (single x)
    let set_if b x v = if b then set x v else v
    let mem x = subset (single x)
    let null = 0
    let unknown = 7
    let full = single Inv
    let covariant = single Pos
    let swap f1 f2 v v' = set_if (mem f2 v) f1 (set_if (mem f1 v) f2 v')
    let conjugate v =
      let v' = inter v (union (single Inj) (single May_weak)) in
      swap Pos Neg v (swap May_pos May_neg v v')
    let compose v1 v2 =
      if (mem Inv v1) && (mem Inj v2)
      then full
      else
        (let mp =
           ((mem May_pos v1) && (mem May_pos v2)) ||
             ((mem May_neg v1) && (mem May_neg v2))
         and mn =
           ((mem May_pos v1) && (mem May_neg v2)) ||
             ((mem May_neg v1) && (mem May_pos v2))
         and mw =
           ((mem May_weak v1) && (v2 <> null)) ||
             ((v1 <> null) && (mem May_weak v2))
         and inj = (mem Inj v1) && (mem Inj v2)
         and pos =
           ((mem Pos v1) && (mem Pos v2)) || ((mem Neg v1) && (mem Neg v2))
         and neg =
           ((mem Pos v1) && (mem Neg v2)) || ((mem Neg v1) && (mem Pos v2)) in
         List.fold_left (fun v (b, f) -> set_if b f v) null
           [(mp, May_pos);
           (mn, May_neg);
           (mw, May_weak);
           (inj, Inj);
           (pos, Pos);
           (neg, Neg)])
    let strengthen v =
      if mem May_neg v then v else v land (full - (single May_weak))
    let get_upper v = ((mem May_pos v), (mem May_neg v))
    let get_lower v = ((mem Pos v), (mem Neg v), (mem Inj v))
    let unknown_signature ~injective ~arity =
      let v = if injective then set Inj unknown else unknown in
      Misc.replicate_list v arity
  end
module Separability =
  struct
    type t =
      | Ind 
      | Sep 
      | Deepsep 
    type signature = t list
    let eq (m1 : t) m2 = m1 = m2
    let rank = function | Ind -> 0 | Sep -> 1 | Deepsep -> 2
    let compare m1 m2 = compare (rank m1) (rank m2)
    let max m1 m2 = if (rank m1) >= (rank m2) then m1 else m2
    let print ppf =
      function
      | Ind -> Format.fprintf ppf "Ind"
      | Sep -> Format.fprintf ppf "Sep"
      | Deepsep -> Format.fprintf ppf "Deepsep"
    let print_signature ppf modes =
      let pp_sep ppf () = Format.fprintf ppf ",@," in
      Format.fprintf ppf "@[(%a)@]" (Format.pp_print_list ~pp_sep print)
        modes
    let default_signature ~arity =
      let default_mode = Ind in Misc.replicate_list default_mode arity
  end
type type_declaration =
  {
  type_params: type_expr list ;
  type_arity: int ;
  type_kind: type_decl_kind ;
  type_private: private_flag ;
  type_manifest: type_expr option ;
  type_variance: Variance.t list ;
  type_separability: Separability.t list ;
  type_is_newtype: bool ;
  type_expansion_scope: int ;
  type_loc: Location.t ;
  type_attributes: Parsetree.attributes ;
  type_immediate: Type_immediacy.t ;
  type_unboxed_default: bool ;
  type_uid: Uid.t }
and type_decl_kind = (label_declaration, constructor_declaration) type_kind
and ('lbl, 'cstr) type_kind =
  | Type_abstract of type_origin 
  | Type_record of 'lbl list * record_representation 
  | Type_variant of 'cstr list * variant_representation 
  | Type_open 
and type_origin =
  | Definition 
  | Rec_check_regularity 
  | Existential of string 
and record_representation =
  | Record_regular 
  | Record_float 
  | Record_unboxed of bool 
  | Record_inlined of int 
  | Record_extension of Path.t 
and variant_representation =
  | Variant_regular 
  | Variant_unboxed 
and label_declaration =
  {
  ld_id: Ident.t ;
  ld_mutable: mutable_flag ;
  ld_type: type_expr ;
  ld_loc: Location.t ;
  ld_attributes: Parsetree.attributes ;
  ld_uid: Uid.t }
and constructor_declaration =
  {
  cd_id: Ident.t ;
  cd_args: constructor_arguments ;
  cd_res: type_expr option ;
  cd_loc: Location.t ;
  cd_attributes: Parsetree.attributes ;
  cd_uid: Uid.t }
and constructor_arguments =
  | Cstr_tuple of type_expr list 
  | Cstr_record of label_declaration list 
type extension_constructor =
  {
  ext_type_path: Path.t ;
  ext_type_params: type_expr list ;
  ext_args: constructor_arguments ;
  ext_ret_type: type_expr option ;
  ext_private: private_flag ;
  ext_loc: Location.t ;
  ext_attributes: Parsetree.attributes ;
  ext_uid: Uid.t }
and type_transparence =
  | Type_public 
  | Type_new 
  | Type_private 
type class_type =
  | Cty_constr of Path.t * type_expr list * class_type 
  | Cty_signature of class_signature 
  | Cty_arrow of arg_label * type_expr * class_type 
type class_declaration =
  {
  cty_params: type_expr list ;
  mutable cty_type: class_type ;
  cty_path: Path.t ;
  cty_new: type_expr option ;
  cty_variance: Variance.t list ;
  cty_loc: Location.t ;
  cty_attributes: Parsetree.attributes ;
  cty_uid: Uid.t }
type class_type_declaration =
  {
  clty_params: type_expr list ;
  clty_type: class_type ;
  clty_path: Path.t ;
  clty_hash_type: type_declaration ;
  clty_variance: Variance.t list ;
  clty_loc: Location.t ;
  clty_attributes: Parsetree.attributes ;
  clty_uid: Uid.t }
type visibility =
  | Exported 
  | Hidden 
type module_type =
  | Mty_ident of Path.t 
  | Mty_signature of signature 
  | Mty_functor of functor_parameter * module_type 
  | Mty_alias of Path.t 
and functor_parameter =
  | Unit 
  | Named of Ident.t option * module_type 
and module_presence =
  | Mp_present 
  | Mp_absent 
and signature = signature_item list
and signature_item =
  | Sig_value of Ident.t * value_description * visibility 
  | Sig_type of Ident.t * type_declaration * rec_status * visibility 
  | Sig_typext of Ident.t * extension_constructor * ext_status * visibility 
  | Sig_module of Ident.t * module_presence * module_declaration * rec_status
  * visibility 
  | Sig_modtype of Ident.t * modtype_declaration * visibility 
  | Sig_class of Ident.t * class_declaration * rec_status * visibility 
  | Sig_class_type of Ident.t * class_type_declaration * rec_status *
  visibility 
and module_declaration =
  {
  md_type: module_type ;
  md_attributes: Parsetree.attributes ;
  md_loc: Location.t ;
  md_uid: Uid.t }
and modtype_declaration =
  {
  mtd_type: module_type option ;
  mtd_attributes: Parsetree.attributes ;
  mtd_loc: Location.t ;
  mtd_uid: Uid.t }
and rec_status =
  | Trec_not 
  | Trec_first 
  | Trec_next 
and ext_status =
  | Text_first 
  | Text_next 
  | Text_exception 
type constructor_description =
  {
  cstr_name: string ;
  cstr_res: type_expr ;
  cstr_existentials: type_expr list ;
  cstr_args: type_expr list ;
  cstr_arity: int ;
  cstr_tag: constructor_tag ;
  cstr_consts: int ;
  cstr_nonconsts: int ;
  cstr_generalized: bool ;
  cstr_private: private_flag ;
  cstr_loc: Location.t ;
  cstr_attributes: Parsetree.attributes ;
  cstr_inlined: type_declaration option ;
  cstr_uid: Uid.t }
and constructor_tag =
  | Cstr_constant of int 
  | Cstr_block of int 
  | Cstr_unboxed 
  | Cstr_extension of Path.t * bool 
let equal_tag t1 t2 =
  match (t1, t2) with
  | (Cstr_constant i1, Cstr_constant i2) -> i2 = i1
  | (Cstr_block i1, Cstr_block i2) -> i2 = i1
  | (Cstr_unboxed, Cstr_unboxed) -> true
  | (Cstr_extension (path1, b1), Cstr_extension (path2, b2)) ->
      (Path.same path1 path2) && (b1 = b2)
  | ((Cstr_constant _ | Cstr_block _ | Cstr_unboxed | Cstr_extension _), _)
      -> false
let may_equal_constr c1 c2 =
  (c1.cstr_arity = c2.cstr_arity) &&
    (match ((c1.cstr_tag), (c2.cstr_tag)) with
     | (Cstr_extension _, Cstr_extension _) -> true
     | (tag1, tag2) -> equal_tag tag1 tag2)
let item_visibility =
  function
  | Sig_value (_, _, vis) | Sig_type (_, _, _, vis) | Sig_typext
    (_, _, _, vis) | Sig_module (_, _, _, _, vis) | Sig_modtype (_, _, vis)
    | Sig_class (_, _, _, vis) | Sig_class_type (_, _, _, vis) -> vis
type label_description =
  {
  lbl_name: string ;
  lbl_res: type_expr ;
  lbl_arg: type_expr ;
  lbl_mut: mutable_flag ;
  lbl_pos: int ;
  lbl_all: label_description array ;
  lbl_repres: record_representation ;
  lbl_private: private_flag ;
  lbl_loc: Location.t ;
  lbl_attributes: Parsetree.attributes ;
  lbl_uid: Uid.t }
let rec bound_value_identifiers =
  function
  | [] -> []
  | (Sig_value (id, { val_kind = Val_reg }, _))::rem -> id ::
      (bound_value_identifiers rem)
  | (Sig_typext (id, _, _, _))::rem -> id :: (bound_value_identifiers rem)
  | (Sig_module (id, Mp_present, _, _, _))::rem -> id ::
      (bound_value_identifiers rem)
  | (Sig_class (id, _, _, _))::rem -> id :: (bound_value_identifiers rem)
  | _::rem -> bound_value_identifiers rem
let signature_item_id =
  function
  | Sig_value (id, _, _) | Sig_type (id, _, _, _) | Sig_typext (id, _, _, _)
    | Sig_module (id, _, _, _, _) | Sig_modtype (id, _, _) | Sig_class
    (id, _, _, _) | Sig_class_type (id, _, _, _) -> id
type change =
  | Ctype of type_expr * type_desc 
  | Ccompress of type_expr * type_desc * type_desc 
  | Clevel of type_expr * int 
  | Cscope of type_expr * int 
  | Cname of (Path.t * type_expr list) option ref * (Path.t * type_expr list)
  option 
  | Crow of [ `none  | `some ] row_field_gen ref 
  | Ckind of [ `var ] field_kind_gen 
  | Ccommu of [ `var ] commutable_gen 
  | Cuniv of type_expr option ref * type_expr option 
type changes =
  | Change of change * changes ref 
  | Unchanged 
  | Invalid 
let trail = Local_store.s_table ref Unchanged
let log_change ch =
  let r' = ref Unchanged in (!trail) := (Change (ch, r')); trail := r'
type field_kind_view =
  | Fprivate 
  | Fpublic 
  | Fabsent 
let rec field_kind_internal_repr : field_kind -> field_kind =
  function
  | FKvar { field_kind = (FKvar _ | FKpublic | FKabsent as fk) } ->
      field_kind_internal_repr fk
  | kind -> kind
let field_kind_repr fk =
  match field_kind_internal_repr fk with
  | FKvar _ -> Fprivate
  | FKpublic -> Fpublic
  | FKabsent -> Fabsent
let field_public = FKpublic
let field_absent = FKabsent
let field_private () = FKvar { field_kind = FKprivate }
let rec is_commu_ok : type a. a commutable_gen -> bool =
  function
  | Cvar { commu } -> is_commu_ok commu
  | Cunknown -> false
  | Cok -> true
let commu_ok = Cok
let commu_var () = Cvar { commu = Cunknown }
let rec repr_link (t : type_expr) d : type_expr -> type_expr=
  function
  | { desc = (Tlink t' as d') } -> repr_link t d' t'
  | { desc = (Tfield (_, k, _, t') as d') } when
      (field_kind_internal_repr k) = FKabsent -> repr_link t d' t'
  | t' -> (log_change (Ccompress (t, (t.desc), d)); t.desc <- d; t')
let repr_link1 t =
  function
  | { desc = (Tlink t' as d') } -> repr_link t d' t'
  | { desc = (Tfield (_, k, _, t') as d') } when
      (field_kind_internal_repr k) = FKabsent -> repr_link t d' t'
  | t' -> t'
let repr t =
  match t.desc with
  | Tlink t' -> repr_link1 t t'
  | Tfield (_, k, _, t') when (field_kind_internal_repr k) = FKabsent ->
      repr_link1 t t'
  | _ -> t
let get_desc t = (repr t).desc
let get_level t = (repr t).level
let get_scope t = (repr t).scope
let get_id t = (repr t).id
module Transient_expr =
  struct
    let create desc ~level ~scope ~id = { desc; level; scope; id }
    let set_desc ty d = ty.desc <- d
    let set_stub_desc ty d = assert (ty.desc = (Tvar None)); ty.desc <- d
    let set_level ty lv = ty.level <- lv
    let set_scope ty sc = ty.scope <- sc
    let coerce ty = ty
    let repr = repr
    let type_expr ty = ty
  end
let eq_type t1 t2 = (t1 == t2) || ((repr t1) == (repr t2))
let compare_type t1 t2 = compare (get_id t1) (get_id t2)
let create_row ~fields ~more ~closed ~fixed ~name =
  {
    row_fields = fields;
    row_more = more;
    row_closed = closed;
    row_fixed = fixed;
    row_name = name
  }
let rec row_fields row =
  match get_desc row.row_more with
  | Tvariant row' -> row.row_fields @ (row_fields row')
  | _ -> row.row_fields
let rec row_repr_no_fields row =
  match get_desc row.row_more with
  | Tvariant row' -> row_repr_no_fields row'
  | _ -> row
let row_more row = (row_repr_no_fields row).row_more
let row_closed row = (row_repr_no_fields row).row_closed
let row_fixed row = (row_repr_no_fields row).row_fixed
let row_name row = (row_repr_no_fields row).row_name
let rec get_row_field tag row =
  let rec find =
    function
    | (tag', f)::fields -> if tag = tag' then f else find fields
    | [] ->
        (match get_desc row.row_more with
         | Tvariant row' -> get_row_field tag row'
         | _ -> RFabsent) in
  find row.row_fields
let set_row_name row row_name =
  let row_fields = row_fields row in
  let row = row_repr_no_fields row in { row with row_fields; row_name }
type row_desc_repr =
  | Row of
  {
  fields: (label * row_field) list ;
  more: type_expr ;
  closed: bool ;
  fixed: fixed_explanation option ;
  name: (Path.t * type_expr list) option } 
let row_repr row =
  let fields = row_fields row in
  let row = row_repr_no_fields row in
  Row
    {
      fields;
      more = (row.row_more);
      closed = (row.row_closed);
      fixed = (row.row_fixed);
      name = (row.row_name)
    }
type row_field_view =
  | Rpresent of type_expr option 
  | Reither of bool * type_expr list * bool 
  | Rabsent 
let rec row_field_repr_aux tl : row_field -> row_field=
  function
  | RFeither ({ ext = { contents = RFnone } } as r) ->
      RFeither { r with arg_type = (tl @ r.arg_type) }
  | RFeither
      { arg_type;
        ext = { contents = (RFeither _ | RFpresent _ | RFabsent as rf) } }
      -> row_field_repr_aux (tl @ arg_type) rf
  | RFpresent (Some _) when tl <> [] -> RFpresent (Some (List.hd tl))
  | RFpresent _ as rf -> rf
  | RFabsent -> RFabsent
let row_field_repr fi =
  match row_field_repr_aux [] fi with
  | RFeither { no_arg; arg_type; matched } ->
      Reither (no_arg, arg_type, matched)
  | RFpresent t -> Rpresent t
  | RFabsent -> Rabsent
let rec row_field_ext (fi : row_field) =
  match fi with
  | RFeither { ext = ({ contents = RFnone } as ext) } -> ext
  | RFeither
      { ext = { contents = (RFeither _ | RFpresent _ | RFabsent as rf) } } ->
      row_field_ext rf
  | _ -> Misc.fatal_error "Types.row_field_ext "
let rf_present oty = RFpresent oty
let rf_absent = RFabsent
let rf_either ?use_ext_of ~no_arg arg_type ~matched =
  let ext =
    match use_ext_of with | Some rf -> row_field_ext rf | None -> ref RFnone in
  RFeither { no_arg; arg_type; matched; ext }
let rf_either_of =
  function
  | None ->
      RFeither
        { no_arg = true; arg_type = []; matched = false; ext = (ref RFnone) }
  | Some ty ->
      RFeither
        {
          no_arg = false;
          arg_type = [ty];
          matched = false;
          ext = (ref RFnone)
        }
let eq_row_field_ext rf1 rf2 = (row_field_ext rf1) == (row_field_ext rf2)
let changed_row_field_exts l f =
  let exts = List.map row_field_ext l in
  f (); List.exists (fun r -> (!r) <> RFnone) exts
let match_row_field ~present ~absent ~either (f : row_field) =
  match f with
  | RFabsent -> absent ()
  | RFpresent t -> present t
  | RFeither { no_arg; arg_type; matched; ext } ->
      let e : row_field option =
        match !ext with
        | RFnone -> None
        | RFeither _ | RFpresent _ | RFabsent as e -> Some e in
      either no_arg arg_type matched e
let new_id = Local_store.s_ref (-1)
let create_expr = Transient_expr.create
let newty3 ~level ~scope desc =
  incr new_id; create_expr desc ~level ~scope ~id:(!new_id)
let newty2 ~level desc = newty3 ~level ~scope:Ident.lowest_scope desc
let undo_change =
  function
  | Ctype (ty, desc) -> Transient_expr.set_desc ty desc
  | Ccompress (ty, desc, _) -> Transient_expr.set_desc ty desc
  | Clevel (ty, level) -> Transient_expr.set_level ty level
  | Cscope (ty, scope) -> Transient_expr.set_scope ty scope
  | Cname (r, v) -> r := v
  | Crow r -> r := RFnone
  | Ckind (FKvar r) -> r.field_kind <- FKprivate
  | Ccommu (Cvar r) -> r.commu <- Cunknown
  | Cuniv (r, v) -> r := v
type snapshot = (changes ref * int)
let last_snapshot = Local_store.s_ref 0
let log_type ty =
  if ty.id <= (!last_snapshot) then log_change (Ctype (ty, (ty.desc)))
let link_type ty ty' =
  let ty = repr ty in
  let ty' = repr ty' in
  if ty == ty'
  then ()
  else
    (log_type ty;
     (let desc = ty.desc in
      Transient_expr.set_desc ty (Tlink ty');
      (match (desc, (ty'.desc)) with
       | (Tvar name, Tvar name') ->
           (match (name, name') with
            | (Some _, None) ->
                (log_type ty'; Transient_expr.set_desc ty' (Tvar name))
            | (None, Some _) -> ()
            | (Some _, Some _) ->
                if ty.level < ty'.level
                then (log_type ty'; Transient_expr.set_desc ty' (Tvar name))
            | (None, None) -> ())
       | _ -> ())))
let set_type_desc ty td =
  let ty = repr ty in
  if td != ty.desc then (log_type ty; Transient_expr.set_desc ty td)
let set_level ty level =
  let ty = repr ty in
  if level <> ty.level
  then
    (if ty.id <= (!last_snapshot) then log_change (Clevel (ty, (ty.level)));
     Transient_expr.set_level ty level)
let set_scope ty scope =
  let ty = repr ty in
  if scope <> ty.scope
  then
    (if ty.id <= (!last_snapshot) then log_change (Cscope (ty, (ty.scope)));
     Transient_expr.set_scope ty scope)
let set_univar rty ty = log_change (Cuniv (rty, (!rty))); rty := (Some ty)
let set_name nm v = log_change (Cname (nm, (!nm))); nm := v
let rec link_row_field_ext ~inside:(inside : row_field) (v : row_field) =
  match inside with
  | RFeither { ext = ({ contents = RFnone } as e) } ->
      let RFeither _ | RFpresent _ | RFabsent as v = v in
      (log_change (Crow e); e := v)
  | RFeither
      { ext = { contents = (RFeither _ | RFpresent _ | RFabsent as rf) } } ->
      link_row_field_ext ~inside:rf v
  | _ -> invalid_arg "Types.link_row_field_ext"
let rec link_kind ~inside:(inside : field_kind) (k : field_kind) =
  match inside with
  | FKvar ({ field_kind = FKprivate } as rk) as inside ->
      let FKvar _ | FKpublic | FKabsent as k = field_kind_internal_repr k in
      if k != inside then (log_change (Ckind inside); rk.field_kind <- k)
  | FKvar { field_kind = (FKvar _ | FKpublic | FKabsent as inside) } ->
      link_kind ~inside k
  | _ -> invalid_arg "Types.link_kind"
let rec commu_repr : commutable -> commutable =
  function
  | Cvar { commu = (Cvar _ | Cok as commu) } -> commu_repr commu
  | c -> c
let rec link_commu ~inside:(inside : commutable) (c : commutable) =
  match inside with
  | Cvar ({ commu = Cunknown } as rc) as inside ->
      let Cvar _ | Cok as c = commu_repr c in
      if c != inside then (log_change (Ccommu inside); rc.commu <- c)
  | Cvar { commu = (Cvar _ | Cok as inside) } -> link_commu ~inside c
  | _ -> invalid_arg "Types.link_commu"
let set_commu_ok c = link_commu ~inside:c Cok
let snapshot () =
  let old = !last_snapshot in last_snapshot := (!new_id); ((!trail), old)
let rec rev_log accu =
  function
  | Unchanged -> accu
  | Invalid -> assert false
  | Change (ch, next) ->
      let d = !next in (next := Invalid; rev_log (ch :: accu) d)
let backtrack ~cleanup_abbrev (changes, old) =
  match !changes with
  | Unchanged -> last_snapshot := old
  | Invalid -> failwith "Types.backtrack"
  | Change _ as change ->
      (cleanup_abbrev ();
       (let backlog = rev_log [] change in
        List.iter undo_change backlog;
        changes := Unchanged;
        last_snapshot := old;
        trail := changes))
let undo_first_change_after (changes, _) =
  match !changes with | Change (ch, _) -> undo_change ch | _ -> ()
let rec rev_compress_log log r =
  match !r with
  | Unchanged | Invalid -> log
  | Change (Ccompress _, next) -> rev_compress_log (r :: log) next
  | Change (_, next) -> rev_compress_log log next
let undo_compress (changes, _old) =
  match !changes with
  | Unchanged | Invalid -> ()
  | Change _ ->
      let log = rev_compress_log [] changes in
      List.iter
        (fun r ->
           match !r with
           | Change (Ccompress (ty, desc, d), next) when ty.desc == d ->
               (Transient_expr.set_desc ty desc; r := (!next))
           | _ -> ()) log
[
  structure_item (lib/types.ml[18,1127+0]..lib/types.ml[18,1127+13])
    Tstr_open Fresh
    module_expr (lib/types.ml[18,1127+5]..lib/types.ml[18,1127+13])
      Tmod_ident "Ocaml_ocaml_types!.Asttypes"
  structure_item (lib/types.ml[22,1188+0]..lib/types.ml[81,3206+73])
    Tstr_type Rec
    [
      type_declaration transient_expr/313 (lib/types.ml[22,1188+0]..lib/types.ml[26,1287+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[23,1210+4]..lib/types.ml[23,1210+28])
                Mutable
                desc/326                core_type (lib/types.ml[23,1210+18]..lib/types.ml[23,1210+27])
                  Ttyp_poly
                  core_type (lib/types.ml[23,1210+18]..lib/types.ml[23,1210+27])
                    Ttyp_constr "type_desc/315"
                    []
              (lib/types.ml[24,1239+4]..lib/types.ml[24,1239+23])
                Mutable
                level/327                core_type (lib/types.ml[24,1239+19]..lib/types.ml[24,1239+22])
                  Ttyp_poly
                  core_type (lib/types.ml[24,1239+19]..lib/types.ml[24,1239+22])
                    Ttyp_constr "int/1!"
                    []
              (lib/types.ml[25,1263+4]..lib/types.ml[25,1263+23])
                Mutable
                scope/328                core_type (lib/types.ml[25,1263+19]..lib/types.ml[25,1263+22])
                  Ttyp_poly
                  core_type (lib/types.ml[25,1263+19]..lib/types.ml[25,1263+22])
                    Ttyp_constr "int/1!"
                    []
              (lib/types.ml[26,1287+4]..lib/types.ml[26,1287+11])
                Immutable
                id/329                core_type (lib/types.ml[26,1287+8]..lib/types.ml[26,1287+11])
                  Ttyp_poly
                  core_type (lib/types.ml[26,1287+8]..lib/types.ml[26,1287+11])
                    Ttyp_constr "int/1!"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration type_expr/314 (lib/types.ml[28,1302+0]..lib/types.ml[28,1302+30])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[28,1302+16]..lib/types.ml[28,1302+30])
              Ttyp_constr "transient_expr/313"
              []
      type_declaration type_desc/315 (lib/types.ml[30,1334+0]..lib/types.ml[43,1814+55])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[31,1350+4]..lib/types.ml[31,1350+25])
                Tvar/330
                [
                  core_type (lib/types.ml[31,1350+12]..lib/types.ml[31,1350+25])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[31,1350+12]..lib/types.ml[31,1350+18])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
                None
              (lib/types.ml[32,1376+2]..lib/types.ml[32,1376+60])
                Tarrow/331
                [
                  core_type (lib/types.ml[32,1376+14]..lib/types.ml[32,1376+23])
                    Ttyp_constr "Ocaml_ocaml_types!.Asttypes.arg_label"
                    []
                  core_type (lib/types.ml[32,1376+26]..lib/types.ml[32,1376+35])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[32,1376+38]..lib/types.ml[32,1376+47])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[32,1376+50]..lib/types.ml[32,1376+60])
                    Ttyp_constr "commutable/324"
                    []
                ]
                None
              (lib/types.ml[33,1437+2]..lib/types.ml[33,1437+28])
                Ttuple/332
                [
                  core_type (lib/types.ml[33,1437+14]..lib/types.ml[33,1437+28])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[33,1437+14]..lib/types.ml[33,1437+23])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
                ]
                None
              (lib/types.ml[34,1466+2]..lib/types.ml[34,1466+56])
                Tconstr/333
                [
                  core_type (lib/types.ml[34,1466+15]..lib/types.ml[34,1466+21])
                    Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                    []
                  core_type (lib/types.ml[34,1466+24]..lib/types.ml[34,1466+38])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[34,1466+24]..lib/types.ml[34,1466+33])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
                  core_type (lib/types.ml[34,1466+41]..lib/types.ml[34,1466+56])
                    Ttyp_constr "Stdlib!.ref"
                    [
                      core_type (lib/types.ml[34,1466+41]..lib/types.ml[34,1466+52])
                        Ttyp_constr "abbrev_memo/320"
                        []
                    ]
                ]
                None
              (lib/types.ml[35,1523+2]..lib/types.ml[35,1523+63])
                Tobject/354
                [
                  core_type (lib/types.ml[35,1523+15]..lib/types.ml[35,1523+24])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[35,1523+27]..lib/types.ml[35,1523+63])
                    Ttyp_constr "Stdlib!.ref"
                    [
                      core_type (lib/types.ml[35,1523+27]..lib/types.ml[35,1523+59])
                        Ttyp_constr "option/10!"
                        [
                          core_type (lib/types.ml[35,1523+28]..lib/types.ml[35,1523+51])
                            Ttyp_tuple
                            [
                              core_type (lib/types.ml[35,1523+28]..lib/types.ml[35,1523+34])
                                Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                                []
                              core_type (lib/types.ml[35,1523+37]..lib/types.ml[35,1523+51])
                                Ttyp_constr "list/9!"
                                [
                                  core_type (lib/types.ml[35,1523+37]..lib/types.ml[35,1523+46])
                                    Ttyp_constr "type_expr/314"
                                    []
                                ]
                            ]
                        ]
                    ]
                ]
                None
              (lib/types.ml[36,1587+2]..lib/types.ml[36,1587+57])
                Tfield/355
                [
                  core_type (lib/types.ml[36,1587+14]..lib/types.ml[36,1587+20])
                    Ttyp_constr "string/15!"
                    []
                  core_type (lib/types.ml[36,1587+23]..lib/types.ml[36,1587+33])
                    Ttyp_constr "field_kind/322"
                    []
                  core_type (lib/types.ml[36,1587+36]..lib/types.ml[36,1587+45])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[36,1587+48]..lib/types.ml[36,1587+57])
                    Ttyp_constr "type_expr/314"
                    []
                ]
                None
              (lib/types.ml[37,1645+2]..lib/types.ml[37,1645+8])
                Tnil/356
                []
                None
              (lib/types.ml[38,1654+2]..lib/types.ml[38,1654+22])
                Tlink/357
                [
                  core_type (lib/types.ml[38,1654+13]..lib/types.ml[38,1654+22])
                    Ttyp_constr "type_expr/314"
                    []
                ]
                None
              (lib/types.ml[39,1677+2]..lib/types.ml[39,1677+42])
                Tsubst/358
                [
                  core_type (lib/types.ml[39,1677+14]..lib/types.ml[39,1677+23])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[39,1677+26]..lib/types.ml[39,1677+42])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[39,1677+26]..lib/types.ml[39,1677+35])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
                ]
                None
              (lib/types.ml[40,1720+2]..lib/types.ml[40,1720+24])
                Tvariant/359
                [
                  core_type (lib/types.ml[40,1720+16]..lib/types.ml[40,1720+24])
                    Ttyp_constr "row_desc/316"
                    []
                ]
                None
              (lib/types.ml[41,1745+2]..lib/types.ml[41,1745+28])
                Tunivar/360
                [
                  core_type (lib/types.ml[41,1745+15]..lib/types.ml[41,1745+28])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[41,1745+15]..lib/types.ml[41,1745+21])
                        Ttyp_constr "string/15!"
                        []
                    ]
                ]
                None
              (lib/types.ml[42,1774+2]..lib/types.ml[42,1774+39])
                Tpoly/361
                [
                  core_type (lib/types.ml[42,1774+13]..lib/types.ml[42,1774+22])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[42,1774+25]..lib/types.ml[42,1774+39])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[42,1774+25]..lib/types.ml[42,1774+34])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
                ]
                None
              (lib/types.ml[43,1814+2]..lib/types.ml[43,1814+55])
                Tpackage/362
                [
                  core_type (lib/types.ml[43,1814+16]..lib/types.ml[43,1814+22])
                    Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                    []
                  core_type (lib/types.ml[43,1814+25]..lib/types.ml[43,1814+55])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[43,1814+26]..lib/types.ml[43,1814+49])
                        Ttyp_tuple
                        [
                          core_type (lib/types.ml[43,1814+26]..lib/types.ml[43,1814+37])
                            Ttyp_constr "Ocaml_ocaml_types!.Longident.t"
                            []
                          core_type (lib/types.ml[43,1814+40]..lib/types.ml[43,1814+49])
                            Ttyp_constr "type_expr/314"
                            []
                        ]
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration row_desc/316 (lib/types.ml[45,1871+0]..lib/types.ml[50,2024+50])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[46,1886+6]..lib/types.ml[46,1886+43])
                Immutable
                row_fields/370                core_type (lib/types.ml[46,1886+18]..lib/types.ml[46,1886+42])
                  Ttyp_poly
                  core_type (lib/types.ml[46,1886+18]..lib/types.ml[46,1886+42])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[46,1886+19]..lib/types.ml[46,1886+36])
                        Ttyp_tuple
                        [
                          core_type (lib/types.ml[46,1886+19]..lib/types.ml[46,1886+24])
                            Ttyp_constr "Ocaml_ocaml_types!.Asttypes.label"
                            []
                          core_type (lib/types.ml[46,1886+27]..lib/types.ml[46,1886+36])
                            Ttyp_constr "row_field/318"
                            []
                        ]
                    ]
              (lib/types.ml[47,1930+6]..lib/types.ml[47,1930+26])
                Immutable
                row_more/371                core_type (lib/types.ml[47,1930+16]..lib/types.ml[47,1930+25])
                  Ttyp_poly
                  core_type (lib/types.ml[47,1930+16]..lib/types.ml[47,1930+25])
                    Ttyp_constr "type_expr/314"
                    []
              (lib/types.ml[48,1957+6]..lib/types.ml[48,1957+23])
                Immutable
                row_closed/372                core_type (lib/types.ml[48,1957+18]..lib/types.ml[48,1957+22])
                  Ttyp_poly
                  core_type (lib/types.ml[48,1957+18]..lib/types.ml[48,1957+22])
                    Ttyp_constr "bool/5!"
                    []
              (lib/types.ml[49,1981+6]..lib/types.ml[49,1981+42])
                Immutable
                row_fixed/373                core_type (lib/types.ml[49,1981+17]..lib/types.ml[49,1981+41])
                  Ttyp_poly
                  core_type (lib/types.ml[49,1981+17]..lib/types.ml[49,1981+41])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[49,1981+17]..lib/types.ml[49,1981+34])
                        Ttyp_constr "fixed_explanation/317"
                        []
                    ]
              (lib/types.ml[50,2024+6]..lib/types.ml[50,2024+48])
                Immutable
                row_name/374                core_type (lib/types.ml[50,2024+16]..lib/types.ml[50,2024+48])
                  Ttyp_poly
                  core_type (lib/types.ml[50,2024+16]..lib/types.ml[50,2024+48])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[50,2024+17]..lib/types.ml[50,2024+40])
                        Ttyp_tuple
                        [
                          core_type (lib/types.ml[50,2024+17]..lib/types.ml[50,2024+23])
                            Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                            []
                          core_type (lib/types.ml[50,2024+26]..lib/types.ml[50,2024+40])
                            Ttyp_constr "list/9!"
                            [
                              core_type (lib/types.ml[50,2024+26]..lib/types.ml[50,2024+35])
                                Ttyp_constr "type_expr/314"
                                []
                            ]
                        ]
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration fixed_explanation/317 (lib/types.ml[51,2075+0]..lib/types.ml[52,2099+67])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[52,2099+2]..lib/types.ml[52,2099+23])
                Univar/375
                [
                  core_type (lib/types.ml[52,2099+14]..lib/types.ml[52,2099+23])
                    Ttyp_constr "type_expr/314"
                    []
                ]
                None
              (lib/types.ml[52,2099+24]..lib/types.ml[52,2099+39])
                Fixed_private/376
                []
                None
              (lib/types.ml[52,2099+40]..lib/types.ml[52,2099+59])
                Reified/377
                [
                  core_type (lib/types.ml[52,2099+53]..lib/types.ml[52,2099+59])
                    Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                    []
                ]
                None
              (lib/types.ml[52,2099+60]..lib/types.ml[52,2099+67])
                Rigid/378
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration row_field/318 (lib/types.ml[53,2167+0]..lib/types.ml[53,2167+37])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[53,2167+16]..lib/types.ml[53,2167+37])
              Ttyp_constr "row_field_gen/319"
              [
                core_type (lib/types.ml[53,2167+16]..lib/types.ml[53,2167+23])
                  Ttyp_variant closed=Closed
                  [
                    Ttag "some" true
                      []
                  ]
                  None
              ]
      type_declaration row_field_gen/319 (lib/types.ml[54,2205+0]..lib/types.ml[62,2495+36])
        ptype_params =
          [
            core_type (lib/types.ml[54,2205+4]..lib/types.ml[54,2205+5])
              Ttyp_any
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[55,2227+4]..lib/types.ml[55,2227+59])
                RFpresent/379
                [
                  core_type (lib/types.ml[55,2227+16]..lib/types.ml[55,2227+32])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[55,2227+16]..lib/types.ml[55,2227+25])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
                ]
                Some
                  core_type (lib/types.ml[55,2227+36]..lib/types.ml[55,2227+59])
                    Ttyp_constr "row_field_gen/319"
                    [
                      core_type (lib/types.ml[55,2227+36]..lib/types.ml[55,2227+45])
                        Ttyp_variant closed=Open
                        [
                          Ttag "some" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[56,2287+2]..lib/types.ml[60,2381+74])
                RFeither/380
                [
                  (lib/types.ml[57,2302+8]..lib/types.ml[57,2302+21])
                    Immutable
                    no_arg/381                    core_type (lib/types.ml[57,2302+16]..lib/types.ml[57,2302+20])
                      Ttyp_poly
                      core_type (lib/types.ml[57,2302+16]..lib/types.ml[57,2302+20])
                        Ttyp_constr "bool/5!"
                        []
                  (lib/types.ml[58,2324+8]..lib/types.ml[58,2324+33])
                    Immutable
                    arg_type/382                    core_type (lib/types.ml[58,2324+18]..lib/types.ml[58,2324+32])
                      Ttyp_poly
                      core_type (lib/types.ml[58,2324+18]..lib/types.ml[58,2324+32])
                        Ttyp_constr "list/9!"
                        [
                          core_type (lib/types.ml[58,2324+18]..lib/types.ml[58,2324+27])
                            Ttyp_constr "type_expr/314"
                            []
                        ]
                  (lib/types.ml[59,2358+8]..lib/types.ml[59,2358+22])
                    Immutable
                    matched/383                    core_type (lib/types.ml[59,2358+17]..lib/types.ml[59,2358+21])
                      Ttyp_poly
                      core_type (lib/types.ml[59,2358+17]..lib/types.ml[59,2358+21])
                        Ttyp_constr "bool/5!"
                        []
                  (lib/types.ml[60,2381+8]..lib/types.ml[60,2381+46])
                    Immutable
                    ext/384                    core_type (lib/types.ml[60,2381+13]..lib/types.ml[60,2381+46])
                      Ttyp_poly
                      core_type (lib/types.ml[60,2381+13]..lib/types.ml[60,2381+46])
                        Ttyp_constr "Stdlib!.ref"
                        [
                          core_type (lib/types.ml[60,2381+13]..lib/types.ml[60,2381+42])
                            Ttyp_constr "row_field_gen/319"
                            [
                              core_type (lib/types.ml[60,2381+13]..lib/types.ml[60,2381+28])
                                Ttyp_variant closed=Closed
                                [
                                  Ttag "some" true
                                    []
                                  Ttag "none" true
                                    []
                                ]
                                None
                            ]
                        ]
                ]
                Some
                  core_type (lib/types.ml[60,2381+51]..lib/types.ml[60,2381+74])
                    Ttyp_constr "row_field_gen/319"
                    [
                      core_type (lib/types.ml[60,2381+51]..lib/types.ml[60,2381+60])
                        Ttyp_variant closed=Open
                        [
                          Ttag "some" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[61,2456+2]..lib/types.ml[61,2456+38])
                RFabsent/385
                []
                Some
                  core_type (lib/types.ml[61,2456+15]..lib/types.ml[61,2456+38])
                    Ttyp_constr "row_field_gen/319"
                    [
                      core_type (lib/types.ml[61,2456+15]..lib/types.ml[61,2456+24])
                        Ttyp_variant closed=Open
                        [
                          Ttag "some" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[62,2495+2]..lib/types.ml[62,2495+36])
                RFnone/386
                []
                Some
                  core_type (lib/types.ml[62,2495+13]..lib/types.ml[62,2495+36])
                    Ttyp_constr "row_field_gen/319"
                    [
                      core_type (lib/types.ml[62,2495+13]..lib/types.ml[62,2495+22])
                        Ttyp_variant closed=Open
                        [
                          Ttag "none" true
                            []
                        ]
                        None
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration abbrev_memo/320 (lib/types.ml[64,2533+0]..lib/types.ml[67,2633+28])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[65,2551+4]..lib/types.ml[65,2551+8])
                Mnil/387
                []
                None
              (lib/types.ml[66,2560+2]..lib/types.ml[66,2560+72])
                Mcons/388
                [
                  core_type (lib/types.ml[66,2560+13]..lib/types.ml[66,2560+25])
                    Ttyp_constr "Ocaml_ocaml_types!.Asttypes.private_flag"
                    []
                  core_type (lib/types.ml[66,2560+28]..lib/types.ml[66,2560+34])
                    Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                    []
                  core_type (lib/types.ml[66,2560+37]..lib/types.ml[66,2560+46])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[66,2560+49]..lib/types.ml[66,2560+58])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[66,2560+61]..lib/types.ml[66,2560+72])
                    Ttyp_constr "abbrev_memo/320"
                    []
                ]
                None
              (lib/types.ml[67,2633+2]..lib/types.ml[67,2633+28])
                Mlink/389
                [
                  core_type (lib/types.ml[67,2633+13]..lib/types.ml[67,2633+28])
                    Ttyp_constr "Stdlib!.ref"
                    [
                      core_type (lib/types.ml[67,2633+13]..lib/types.ml[67,2633+24])
                        Ttyp_constr "abbrev_memo/320"
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration any/321 (lib/types.ml[69,2663+0]..lib/types.ml[69,2663+32])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[69,2663+10]..lib/types.ml[69,2663+32])
              Ttyp_variant closed=Closed
              [
                Ttag "some" true
                  []
                Ttag "none" true
                  []
                Ttag "var" true
                  []
              ]
              None
      type_declaration field_kind/322 (lib/types.ml[70,2696+0]..lib/types.ml[70,2696+44])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[70,2696+17]..lib/types.ml[70,2696+44])
              Ttyp_constr "field_kind_gen/323"
              [
                core_type (lib/types.ml[70,2696+17]..lib/types.ml[70,2696+29])
                  Ttyp_variant closed=Closed
                  [
                    Ttag "some" true
                      []
                    Ttag "var" true
                      []
                  ]
                  None
              ]
      type_declaration field_kind_gen/323 (lib/types.ml[71,2741+0]..lib/types.ml[75,2987+40])
        ptype_params =
          [
            core_type (lib/types.ml[71,2741+4]..lib/types.ml[71,2741+5])
              Ttyp_any
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[72,2764+4]..lib/types.ml[72,2764+79])
                FKvar/390
                [
                  (lib/types.ml[72,2764+13]..lib/types.ml[72,2764+51])
                    Mutable
                    field_kind/391                    core_type (lib/types.ml[72,2764+33]..lib/types.ml[72,2764+51])
                      Ttyp_poly
                      core_type (lib/types.ml[72,2764+33]..lib/types.ml[72,2764+51])
                        Ttyp_constr "field_kind_gen/323"
                        [
                          core_type (lib/types.ml[72,2764+33]..lib/types.ml[72,2764+36])
                            Ttyp_constr "any/321"
                            []
                        ]
                ]
                Some
                  core_type (lib/types.ml[72,2764+56]..lib/types.ml[72,2764+79])
                    Ttyp_constr "field_kind_gen/323"
                    [
                      core_type (lib/types.ml[72,2764+56]..lib/types.ml[72,2764+64])
                        Ttyp_variant closed=Open
                        [
                          Ttag "var" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[73,2844+2]..lib/types.ml[73,2844+40])
                FKprivate/392
                []
                Some
                  core_type (lib/types.ml[73,2844+16]..lib/types.ml[73,2844+40])
                    Ttyp_constr "field_kind_gen/323"
                    [
                      core_type (lib/types.ml[73,2844+16]..lib/types.ml[73,2844+25])
                        Ttyp_variant closed=Open
                        [
                          Ttag "none" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[74,2925+2]..lib/types.ml[74,2925+40])
                FKpublic/393
                []
                Some
                  core_type (lib/types.ml[74,2925+16]..lib/types.ml[74,2925+40])
                    Ttyp_constr "field_kind_gen/323"
                    [
                      core_type (lib/types.ml[74,2925+16]..lib/types.ml[74,2925+25])
                        Ttyp_variant closed=Open
                        [
                          Ttag "some" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[75,2987+2]..lib/types.ml[75,2987+40])
                FKabsent/394
                []
                Some
                  core_type (lib/types.ml[75,2987+16]..lib/types.ml[75,2987+40])
                    Ttyp_constr "field_kind_gen/323"
                    [
                      core_type (lib/types.ml[75,2987+16]..lib/types.ml[75,2987+25])
                        Ttyp_variant closed=Open
                        [
                          Ttag "some" true
                            []
                        ]
                        None
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration commutable/324 (lib/types.ml[77,3058+0]..lib/types.ml[77,3058+44])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[77,3058+17]..lib/types.ml[77,3058+44])
              Ttyp_constr "commutable_gen/325"
              [
                core_type (lib/types.ml[77,3058+17]..lib/types.ml[77,3058+29])
                  Ttyp_variant closed=Closed
                  [
                    Ttag "some" true
                      []
                    Ttag "var" true
                      []
                  ]
                  None
              ]
      type_declaration commutable_gen/325 (lib/types.ml[78,3103+0]..lib/types.ml[81,3206+73])
        ptype_params =
          [
            core_type (lib/types.ml[78,3103+4]..lib/types.ml[78,3103+5])
              Ttyp_any
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[79,3126+4]..lib/types.ml[79,3126+39])
                Cok/395
                []
                Some
                  core_type (lib/types.ml[79,3126+15]..lib/types.ml[79,3126+39])
                    Ttyp_constr "commutable_gen/325"
                    [
                      core_type (lib/types.ml[79,3126+15]..lib/types.ml[79,3126+24])
                        Ttyp_variant closed=Open
                        [
                          Ttag "some" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[80,3166+2]..lib/types.ml[80,3166+39])
                Cunknown/396
                []
                Some
                  core_type (lib/types.ml[80,3166+15]..lib/types.ml[80,3166+39])
                    Ttyp_constr "commutable_gen/325"
                    [
                      core_type (lib/types.ml[80,3166+15]..lib/types.ml[80,3166+24])
                        Ttyp_variant closed=Open
                        [
                          Ttag "none" true
                            []
                        ]
                        None
                    ]
              (lib/types.ml[81,3206+2]..lib/types.ml[81,3206+73])
                Cvar/397
                [
                  (lib/types.ml[81,3206+12]..lib/types.ml[81,3206+45])
                    Mutable
                    commu/398                    core_type (lib/types.ml[81,3206+27]..lib/types.ml[81,3206+45])
                      Ttyp_poly
                      core_type (lib/types.ml[81,3206+27]..lib/types.ml[81,3206+45])
                        Ttyp_constr "commutable_gen/325"
                        [
                          core_type (lib/types.ml[81,3206+27]..lib/types.ml[81,3206+30])
                            Ttyp_constr "any/321"
                            []
                        ]
                ]
                Some
                  core_type (lib/types.ml[81,3206+50]..lib/types.ml[81,3206+73])
                    Ttyp_constr "commutable_gen/325"
                    [
                      core_type (lib/types.ml[81,3206+50]..lib/types.ml[81,3206+58])
                        Ttyp_variant closed=Open
                        [
                          Ttag "var" true
                            []
                        ]
                        None
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[83,3281+0]..lib/types.ml[88,3420+3])
    Tstr_module
    TransientTypeOps/450
      module_expr (lib/types.ml[83,3281+26]..lib/types.ml[88,3420+3])
        Tmod_structure
        [
          structure_item (lib/types.ml[84,3314+2]..lib/types.ml[84,3314+20])
            Tstr_type Rec
            [
              type_declaration t/439 (lib/types.ml[84,3314+2]..lib/types.ml[84,3314+20])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lib/types.ml[84,3314+11]..lib/types.ml[84,3314+20])
                      Ttyp_constr "type_expr/314"
                      []
            ]
          structure_item (lib/types.ml[85,3335+2]..lib/types.ml[85,3335+35])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[85,3335+6]..lib/types.ml[85,3335+13])
                  Tpat_var "compare/440"
                expression (lib/types.ml[85,3335+14]..lib/types.ml[85,3335+35]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[85,3335+14]..lib/types.ml[85,3335+16])
                        Tpat_var "t1/441"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[85,3335+17]..lib/types.ml[85,3335+19])
                        Tpat_var "t2/442"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[85,3335+22]..lib/types.ml[85,3335+35])
                      Texp_apply
                      expression (lib/types.ml[85,3335+28]..lib/types.ml[85,3335+29])
                        Texp_ident "Stdlib!.-"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[85,3335+22]..lib/types.ml[85,3335+27])
                            Texp_field
                            expression (lib/types.ml[85,3335+22]..lib/types.ml[85,3335+24])
                              Texp_ident "t1/441"
                            "id"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[85,3335+30]..lib/types.ml[85,3335+35])
                            Texp_field
                            expression (lib/types.ml[85,3335+30]..lib/types.ml[85,3335+32])
                              Texp_ident "t2/442"
                            "id"
                      ]
            ]
          structure_item (lib/types.ml[86,3371+2]..lib/types.ml[86,3371+19])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[86,3371+6]..lib/types.ml[86,3371+10])
                  Tpat_var "hash/443"
                expression (lib/types.ml[86,3371+11]..lib/types.ml[86,3371+19]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[86,3371+11]..lib/types.ml[86,3371+12])
                        Tpat_var "t/445"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[86,3371+15]..lib/types.ml[86,3371+19])
                      Texp_field
                      expression (lib/types.ml[86,3371+15]..lib/types.ml[86,3371+16])
                        Texp_ident "t/445"
                      "id"
            ]
          structure_item (lib/types.ml[87,3391+2]..lib/types.ml[87,3391+28])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[87,3391+6]..lib/types.ml[87,3391+11])
                  Tpat_var "equal/446"
                expression (lib/types.ml[87,3391+12]..lib/types.ml[87,3391+28]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[87,3391+12]..lib/types.ml[87,3391+14])
                        Tpat_var "t1/448"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[87,3391+15]..lib/types.ml[87,3391+17])
                        Tpat_var "t2/449"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[87,3391+20]..lib/types.ml[87,3391+28])
                      Texp_apply
                      expression (lib/types.ml[87,3391+23]..lib/types.ml[87,3391+25])
                        Texp_ident "Stdlib!.=="
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[87,3391+20]..lib/types.ml[87,3391+22])
                            Texp_ident "t1/448"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[87,3391+26]..lib/types.ml[87,3391+28])
                            Texp_ident "t2/449"
                      ]
            ]
        ]
  structure_item (lib/types.ml[92,3432+0]..lib/types.ml[92,3432+22])
    Tstr_module
    Uid/472
      module_expr (lib/types.ml[92,3432+13]..lib/types.ml[92,3432+22])
        Tmod_ident "Ocaml_ocaml_types!.Shape.Uid"
  structure_item (lib/types.ml[96,3502+0]..lib/types.ml[96,3502+39])
    Tstr_module
    MethSet/706
      module_expr (lib/types.ml[96,3502+17]..lib/types.ml[96,3502+39])
        Tmod_ident "Ocaml_ocaml_types!.Misc.Stdlib.String.Set"
  structure_item (lib/types.ml[97,3542+0]..lib/types.ml[97,3542+38])
    Tstr_module
    VarSet/707
      module_expr (lib/types.ml[97,3542+16]..lib/types.ml[97,3542+38])
        Tmod_ident "Ocaml_ocaml_types!.Misc.Stdlib.String.Set"
  structure_item (lib/types.ml[99,3582+0]..lib/types.ml[99,3582+37])
    Tstr_module
    Meths/708
      module_expr (lib/types.ml[99,3582+15]..lib/types.ml[99,3582+37])
        Tmod_ident "Ocaml_ocaml_types!.Misc.Stdlib.String.Map"
  structure_item (lib/types.ml[100,3620+0]..lib/types.ml[100,3620+36])
    Tstr_module
    Vars/709
      module_expr (lib/types.ml[100,3620+14]..lib/types.ml[100,3620+36])
        Tmod_ident "Ocaml_ocaml_types!.Misc.Stdlib.String.Map"
  structure_item (lib/types.ml[105,3685+0]..lib/types.ml[135,4710+26])
    Tstr_type Rec
    [
      type_declaration value_description/710 (lib/types.ml[105,3685+0]..lib/types.ml[111,3887+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[106,3710+4]..lib/types.ml[106,3710+24])
                Immutable
                val_type/715                core_type (lib/types.ml[106,3710+14]..lib/types.ml[106,3710+23])
                  Ttyp_poly
                  core_type (lib/types.ml[106,3710+14]..lib/types.ml[106,3710+23])
                    Ttyp_constr "type_expr/314"
                    []
              (lib/types.ml[107,3774+4]..lib/types.ml[107,3774+25])
                Immutable
                val_kind/716                core_type (lib/types.ml[107,3774+14]..lib/types.ml[107,3774+24])
                  Ttyp_poly
                  core_type (lib/types.ml[107,3774+14]..lib/types.ml[107,3774+24])
                    Ttyp_constr "value_kind/711"
                    []
              (lib/types.ml[108,3800+4]..lib/types.ml[108,3800+24])
                Immutable
                val_loc/794                core_type (lib/types.ml[108,3800+13]..lib/types.ml[108,3800+23])
                  Ttyp_poly
                  core_type (lib/types.ml[108,3800+13]..lib/types.ml[108,3800+23])
                    Ttyp_constr "Ocaml_ocaml_types!.Location.t"
                    []
              (lib/types.ml[109,3825+4]..lib/types.ml[109,3825+41])
                Immutable
                val_attributes/872                core_type (lib/types.ml[109,3825+20]..lib/types.ml[109,3825+40])
                  Ttyp_poly
                  core_type (lib/types.ml[109,3825+20]..lib/types.ml[109,3825+40])
                    Ttyp_constr "Ocaml_ocaml_types!.Parsetree.attributes"
                    []
              (lib/types.ml[110,3867+4]..lib/types.ml[110,3867+19])
                Immutable
                val_uid/902                core_type (lib/types.ml[110,3867+13]..lib/types.ml[110,3867+18])
                  Ttyp_poly
                  core_type (lib/types.ml[110,3867+13]..lib/types.ml[110,3867+18])
                    Ttyp_constr "Uid/472.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration value_kind/711 (lib/types.ml[113,3892+0]..lib/types.ml[120,4229+57])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[114,3909+4]..lib/types.ml[114,3909+11])
                Val_reg/903
                []
                None
              (lib/types.ml[115,3969+2]..lib/types.ml[115,3969+37])
                Val_prim/904
                [
                  core_type (lib/types.ml[115,3969+16]..lib/types.ml[115,3969+37])
                    Ttyp_constr "Ocaml_ocaml_types!.Primitive.description"
                    []
                ]
                None
              (lib/types.ml[116,4025+2]..lib/types.ml[116,4025+37])
                Val_ivar/929
                [
                  core_type (lib/types.ml[116,4025+16]..lib/types.ml[116,4025+28])
                    Ttyp_constr "Ocaml_ocaml_types!.Asttypes.mutable_flag"
                    []
                  core_type (lib/types.ml[116,4025+31]..lib/types.ml[116,4025+37])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/types.ml[117,4101+2]..lib/types.ml[118,4117+60])
                Val_self/930
                [
                  core_type (lib/types.ml[118,4117+6]..lib/types.ml[118,4117+21])
                    Ttyp_constr "class_signature/713"
                    []
                  core_type (lib/types.ml[118,4117+24]..lib/types.ml[118,4117+34])
                    Ttyp_constr "self_meths/712"
                    []
                  core_type (lib/types.ml[118,4117+37]..lib/types.ml[118,4117+51])
                    Ttyp_constr "Vars/709.t"
                    [
                      core_type (lib/types.ml[118,4117+37]..lib/types.ml[118,4117+44])
                        Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                        []
                    ]
                  core_type (lib/types.ml[118,4117+54]..lib/types.ml[118,4117+60])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
              (lib/types.ml[120,4229+2]..lib/types.ml[120,4229+57])
                Val_anc/1101
                [
                  core_type (lib/types.ml[120,4229+15]..lib/types.ml[120,4229+30])
                    Ttyp_constr "class_signature/713"
                    []
                  core_type (lib/types.ml[120,4229+33]..lib/types.ml[120,4229+48])
                    Ttyp_constr "Meths/708.t"
                    [
                      core_type (lib/types.ml[120,4229+33]..lib/types.ml[120,4229+40])
                        Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                        []
                    ]
                  core_type (lib/types.ml[120,4229+51]..lib/types.ml[120,4229+57])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration self_meths/712 (lib/types.ml[123,4343+0]..lib/types.ml[125,4397+39])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[124,4360+2]..lib/types.ml[124,4360+36])
                Self_concrete/1102
                [
                  core_type (lib/types.ml[124,4360+21]..lib/types.ml[124,4360+36])
                    Ttyp_constr "Meths/708.t"
                    [
                      core_type (lib/types.ml[124,4360+21]..lib/types.ml[124,4360+28])
                        Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                        []
                    ]
                ]
                None
              (lib/types.ml[125,4397+2]..lib/types.ml[125,4397+39])
                Self_virtual/1103
                [
                  core_type (lib/types.ml[125,4397+20]..lib/types.ml[125,4397+39])
                    Ttyp_constr "Stdlib!.ref"
                    [
                      core_type (lib/types.ml[125,4397+20]..lib/types.ml[125,4397+35])
                        Ttyp_constr "Meths/708.t"
                        [
                          core_type (lib/types.ml[125,4397+20]..lib/types.ml[125,4397+27])
                            Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                            []
                        ]
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration class_signature/713 (lib/types.ml[127,4438+0]..lib/types.ml[131,4597+78])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[128,4460+4]..lib/types.ml[128,4460+25])
                Immutable
                csig_self/1104                core_type (lib/types.ml[128,4460+15]..lib/types.ml[128,4460+24])
                  Ttyp_poly
                  core_type (lib/types.ml[128,4460+15]..lib/types.ml[128,4460+24])
                    Ttyp_constr "type_expr/314"
                    []
              (lib/types.ml[129,4486+4]..lib/types.ml[129,4486+37])
                Mutable
                csig_self_row/1105                core_type (lib/types.ml[129,4486+27]..lib/types.ml[129,4486+36])
                  Ttyp_poly
                  core_type (lib/types.ml[129,4486+27]..lib/types.ml[129,4486+36])
                    Ttyp_constr "type_expr/314"
                    []
              (lib/types.ml[130,4524+4]..lib/types.ml[130,4524+72])
                Mutable
                csig_vars/1106                core_type (lib/types.ml[130,4524+23]..lib/types.ml[130,4524+71])
                  Ttyp_poly
                  core_type (lib/types.ml[130,4524+23]..lib/types.ml[130,4524+71])
                    Ttyp_constr "Vars/709.t"
                    [
                      core_type (lib/types.ml[130,4524+24]..lib/types.ml[130,4524+63])
                        Ttyp_tuple
                        [
                          core_type (lib/types.ml[130,4524+24]..lib/types.ml[130,4524+36])
                            Ttyp_constr "Ocaml_ocaml_types!.Asttypes.mutable_flag"
                            []
                          core_type (lib/types.ml[130,4524+39]..lib/types.ml[130,4524+51])
                            Ttyp_constr "Ocaml_ocaml_types!.Asttypes.virtual_flag"
                            []
                          core_type (lib/types.ml[130,4524+54]..lib/types.ml[130,4524+63])
                            Ttyp_constr "type_expr/314"
                            []
                        ]
                    ]
              (lib/types.ml[131,4597+4]..lib/types.ml[131,4597+76])
                Mutable
                csig_meths/1107                core_type (lib/types.ml[131,4597+24]..lib/types.ml[131,4597+75])
                  Ttyp_poly
                  core_type (lib/types.ml[131,4597+24]..lib/types.ml[131,4597+75])
                    Ttyp_constr "Meths/708.t"
                    [
                      core_type (lib/types.ml[131,4597+25]..lib/types.ml[131,4597+66])
                        Ttyp_tuple
                        [
                          core_type (lib/types.ml[131,4597+25]..lib/types.ml[131,4597+39])
                            Ttyp_constr "method_privacy/714"
                            []
                          core_type (lib/types.ml[131,4597+42]..lib/types.ml[131,4597+54])
                            Ttyp_constr "Ocaml_ocaml_types!.Asttypes.virtual_flag"
                            []
                          core_type (lib/types.ml[131,4597+57]..lib/types.ml[131,4597+66])
                            Ttyp_constr "type_expr/314"
                            []
                        ]
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration method_privacy/714 (lib/types.ml[133,4677+0]..lib/types.ml[135,4710+26])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[134,4698+2]..lib/types.ml[134,4698+11])
                Mpublic/1108
                []
                None
              (lib/types.ml[135,4710+2]..lib/types.ml[135,4710+26])
                Mprivate/1109
                [
                  core_type (lib/types.ml[135,4710+16]..lib/types.ml[135,4710+26])
                    Ttyp_constr "field_kind/322"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[157,5365+0]..lib/types.ml[203,7132+3])
    Tstr_module
    Variance/1649
      module_expr (lib/types.ml[157,5365+18]..lib/types.ml[203,7132+3])
        Tmod_structure
        [
          structure_item (lib/types.ml[158,5390+2]..lib/types.ml[158,5390+14])
            Tstr_type Rec
            [
              type_declaration t/1501 (lib/types.ml[158,5390+2]..lib/types.ml[158,5390+14])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lib/types.ml[158,5390+11]..lib/types.ml[158,5390+14])
                      Ttyp_constr "int/1!"
                      []
            ]
          structure_item (lib/types.ml[159,5405+2]..lib/types.ml[159,5405+63])
            Tstr_type Rec
            [
              type_declaration f/1502 (lib/types.ml[159,5405+2]..lib/types.ml[159,5405+63])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_variant
                    [
                      (lib/types.ml[159,5405+11]..lib/types.ml[159,5405+18])
                        May_pos/1503
                        []
                        None
                      (lib/types.ml[159,5405+19]..lib/types.ml[159,5405+28])
                        May_neg/1504
                        []
                        None
                      (lib/types.ml[159,5405+29]..lib/types.ml[159,5405+39])
                        May_weak/1505
                        []
                        None
                      (lib/types.ml[159,5405+40]..lib/types.ml[159,5405+45])
                        Inj/1506
                        []
                        None
                      (lib/types.ml[159,5405+46]..lib/types.ml[159,5405+51])
                        Pos/1507
                        []
                        None
                      (lib/types.ml[159,5405+52]..lib/types.ml[159,5405+57])
                        Neg/1508
                        []
                        None
                      (lib/types.ml[159,5405+58]..lib/types.ml[159,5405+63])
                        Inv/1509
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lib/types.ml[160,5469+2]..lib/types.ml[167,5622+15])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[160,5469+6]..lib/types.ml[160,5469+12])
                  Tpat_var "single/1510"
                expression (lib/types.ml[160,5469+15]..lib/types.ml[167,5622+15])
                  Texp_function
                  []
                  Tfunction_cases (lib/types.ml[160,5469+15]..lib/types.ml[167,5622+15])
                    [
                      <case>
                        pattern (lib/types.ml[161,5493+6]..lib/types.ml[161,5493+13])
                          Tpat_construct "May_pos"
                          []
                          None
                        expression (lib/types.ml[161,5493+17]..lib/types.ml[161,5493+18])
                          Texp_constant Const_int 1
                      <case>
                        pattern (lib/types.ml[162,5512+6]..lib/types.ml[162,5512+13])
                          Tpat_construct "May_neg"
                          []
                          None
                        expression (lib/types.ml[162,5512+17]..lib/types.ml[162,5512+22])
                          Texp_apply
                          expression (lib/types.ml[162,5512+19]..lib/types.ml[162,5512+20])
                            Texp_ident "Stdlib!.+"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[162,5512+17]..lib/types.ml[162,5512+18])
                                Texp_constant Const_int 2
                            <arg>
                              Nolabel
                              expression (lib/types.ml[162,5512+21]..lib/types.ml[162,5512+22])
                                Texp_constant Const_int 4
                          ]
                      <case>
                        pattern (lib/types.ml[163,5535+6]..lib/types.ml[163,5535+14])
                          Tpat_construct "May_weak"
                          []
                          None
                        expression (lib/types.ml[163,5535+18]..lib/types.ml[163,5535+19])
                          Texp_constant Const_int 4
                      <case>
                        pattern (lib/types.ml[164,5555+6]..lib/types.ml[164,5555+9])
                          Tpat_construct "Inj"
                          []
                          None
                        expression (lib/types.ml[164,5555+13]..lib/types.ml[164,5555+14])
                          Texp_constant Const_int 8
                      <case>
                        pattern (lib/types.ml[165,5570+6]..lib/types.ml[165,5570+9])
                          Tpat_construct "Pos"
                          []
                          None
                        expression (lib/types.ml[165,5570+13]..lib/types.ml[165,5570+23])
                          Texp_apply
                          expression (lib/types.ml[165,5570+20]..lib/types.ml[165,5570+21])
                            Texp_ident "Stdlib!.+"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[165,5570+13]..lib/types.ml[165,5570+19])
                                Texp_apply
                                expression (lib/types.ml[165,5570+16]..lib/types.ml[165,5570+17])
                                  Texp_ident "Stdlib!.+"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[165,5570+13]..lib/types.ml[165,5570+15])
                                      Texp_constant Const_int 16
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[165,5570+18]..lib/types.ml[165,5570+19])
                                      Texp_constant Const_int 8
                                ]
                            <arg>
                              Nolabel
                              expression (lib/types.ml[165,5570+22]..lib/types.ml[165,5570+23])
                                Texp_constant Const_int 1
                          ]
                      <case>
                        pattern (lib/types.ml[166,5594+6]..lib/types.ml[166,5594+9])
                          Tpat_construct "Neg"
                          []
                          None
                        expression (lib/types.ml[166,5594+13]..lib/types.ml[166,5594+27])
                          Texp_apply
                          expression (lib/types.ml[166,5594+24]..lib/types.ml[166,5594+25])
                            Texp_ident "Stdlib!.+"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[166,5594+13]..lib/types.ml[166,5594+23])
                                Texp_apply
                                expression (lib/types.ml[166,5594+20]..lib/types.ml[166,5594+21])
                                  Texp_ident "Stdlib!.+"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[166,5594+13]..lib/types.ml[166,5594+19])
                                      Texp_apply
                                      expression (lib/types.ml[166,5594+16]..lib/types.ml[166,5594+17])
                                        Texp_ident "Stdlib!.+"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[166,5594+13]..lib/types.ml[166,5594+15])
                                            Texp_constant Const_int 32
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[166,5594+18]..lib/types.ml[166,5594+19])
                                            Texp_constant Const_int 8
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[166,5594+22]..lib/types.ml[166,5594+23])
                                      Texp_constant Const_int 4
                                ]
                            <arg>
                              Nolabel
                              expression (lib/types.ml[166,5594+26]..lib/types.ml[166,5594+27])
                                Texp_constant Const_int 2
                          ]
                      <case>
                        pattern (lib/types.ml[167,5622+6]..lib/types.ml[167,5622+9])
                          Tpat_construct "Inv"
                          []
                          None
                        expression (lib/types.ml[167,5622+13]..lib/types.ml[167,5622+15])
                          Texp_constant Const_int 63
                    ]
            ]
          structure_item (lib/types.ml[168,5638+2]..lib/types.ml[168,5638+29])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[168,5638+6]..lib/types.ml[168,5638+11])
                  Tpat_var "union/1513"
                expression (lib/types.ml[168,5638+12]..lib/types.ml[168,5638+29]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[168,5638+12]..lib/types.ml[168,5638+14])
                        Tpat_var "v1/1515"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[168,5638+15]..lib/types.ml[168,5638+17])
                        Tpat_var "v2/1516"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[168,5638+20]..lib/types.ml[168,5638+29])
                      Texp_apply
                      expression (lib/types.ml[168,5638+23]..lib/types.ml[168,5638+26])
                        Texp_ident "Stdlib!.lor"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[168,5638+20]..lib/types.ml[168,5638+22])
                            Texp_ident "v1/1515"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[168,5638+27]..lib/types.ml[168,5638+29])
                            Texp_ident "v2/1516"
                      ]
            ]
          structure_item (lib/types.ml[169,5668+2]..lib/types.ml[169,5668+30])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[169,5668+6]..lib/types.ml[169,5668+11])
                  Tpat_var "inter/1517"
                expression (lib/types.ml[169,5668+12]..lib/types.ml[169,5668+30]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[169,5668+12]..lib/types.ml[169,5668+14])
                        Tpat_var "v1/1519"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[169,5668+15]..lib/types.ml[169,5668+17])
                        Tpat_var "v2/1520"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[169,5668+20]..lib/types.ml[169,5668+30])
                      Texp_apply
                      expression (lib/types.ml[169,5668+23]..lib/types.ml[169,5668+27])
                        Texp_ident "Stdlib!.land"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[169,5668+20]..lib/types.ml[169,5668+22])
                            Texp_ident "v1/1519"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[169,5668+28]..lib/types.ml[169,5668+30])
                            Texp_ident "v2/1520"
                      ]
            ]
          structure_item (lib/types.ml[170,5699+2]..lib/types.ml[170,5699+38])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[170,5699+6]..lib/types.ml[170,5699+12])
                  Tpat_var "subset/1521"
                expression (lib/types.ml[170,5699+13]..lib/types.ml[170,5699+38]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[170,5699+13]..lib/types.ml[170,5699+15])
                        Tpat_var "v1/1523"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[170,5699+16]..lib/types.ml[170,5699+18])
                        Tpat_var "v2/1524"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[170,5699+21]..lib/types.ml[170,5699+38])
                      Texp_apply
                      expression (lib/types.ml[170,5699+33]..lib/types.ml[170,5699+34])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[170,5699+22]..lib/types.ml[170,5699+32])
                            Texp_apply
                            expression (lib/types.ml[170,5699+25]..lib/types.ml[170,5699+29])
                              Texp_ident "Stdlib!.land"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[170,5699+22]..lib/types.ml[170,5699+24])
                                  Texp_ident "v1/1523"
                              <arg>
                                Nolabel
                                expression (lib/types.ml[170,5699+30]..lib/types.ml[170,5699+32])
                                  Texp_ident "v2/1524"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/types.ml[170,5699+35]..lib/types.ml[170,5699+37])
                            Texp_ident "v1/1523"
                      ]
            ]
          structure_item (lib/types.ml[171,5738+2]..lib/types.ml[171,5738+32])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[171,5738+6]..lib/types.ml[171,5738+8])
                  Tpat_var "eq/1525"
                expression (lib/types.ml[171,5738+9]..lib/types.ml[171,5738+32]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[171,5738+10]..lib/types.ml[171,5738+12])
                        extra
                          Tpat_extra_constraint
                          core_type (lib/types.ml[171,5738+15]..lib/types.ml[171,5738+16])
                            Ttyp_constr "t/1501"
                            []
                        Tpat_alias "v1/1527"
                        pattern (lib/types.ml[171,5738+10]..lib/types.ml[171,5738+12])
                          Tpat_any
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[171,5738+18]..lib/types.ml[171,5738+20])
                        Tpat_var "v2/1528"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[171,5738+23]..lib/types.ml[171,5738+32])
                      Texp_apply
                      expression (lib/types.ml[171,5738+27]..lib/types.ml[171,5738+28])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[171,5738+24]..lib/types.ml[171,5738+26])
                            Texp_ident "v1/1527"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[171,5738+29]..lib/types.ml[171,5738+31])
                            Texp_ident "v2/1528"
                      ]
            ]
          structure_item (lib/types.ml[172,5771+2]..lib/types.ml[172,5771+34])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[172,5771+6]..lib/types.ml[172,5771+9])
                  Tpat_var "set/1529"
                expression (lib/types.ml[172,5771+10]..lib/types.ml[172,5771+34]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[172,5771+10]..lib/types.ml[172,5771+11])
                        Tpat_var "x/1531"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[172,5771+12]..lib/types.ml[172,5771+13])
                        Tpat_var "v/1532"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[172,5771+16]..lib/types.ml[172,5771+34])
                      Texp_apply
                      expression (lib/types.ml[172,5771+16]..lib/types.ml[172,5771+21])
                        Texp_ident "union/1513"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[172,5771+22]..lib/types.ml[172,5771+23])
                            Texp_ident "v/1532"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[172,5771+24]..lib/types.ml[172,5771+34])
                            Texp_apply
                            expression (lib/types.ml[172,5771+25]..lib/types.ml[172,5771+31])
                              Texp_ident "single/1510"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[172,5771+32]..lib/types.ml[172,5771+33])
                                  Texp_ident "x/1531"
                            ]
                      ]
            ]
          structure_item (lib/types.ml[173,5806+2]..lib/types.ml[173,5806+45])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[173,5806+6]..lib/types.ml[173,5806+12])
                  Tpat_var "set_if/1533"
                expression (lib/types.ml[173,5806+13]..lib/types.ml[173,5806+45]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[173,5806+13]..lib/types.ml[173,5806+14])
                        Tpat_var "b/1535"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[173,5806+15]..lib/types.ml[173,5806+16])
                        Tpat_var "x/1536"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[173,5806+17]..lib/types.ml[173,5806+18])
                        Tpat_var "v/1537"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[173,5806+21]..lib/types.ml[173,5806+45])
                      Texp_ifthenelse
                      expression (lib/types.ml[173,5806+24]..lib/types.ml[173,5806+25])
                        Texp_ident "b/1535"
                      expression (lib/types.ml[173,5806+31]..lib/types.ml[173,5806+38])
                        Texp_apply
                        expression (lib/types.ml[173,5806+31]..lib/types.ml[173,5806+34])
                          Texp_ident "set/1529"
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[173,5806+35]..lib/types.ml[173,5806+36])
                              Texp_ident "x/1536"
                          <arg>
                            Nolabel
                            expression (lib/types.ml[173,5806+37]..lib/types.ml[173,5806+38])
                              Texp_ident "v/1537"
                        ]
                      Some
                        expression (lib/types.ml[173,5806+44]..lib/types.ml[173,5806+45])
                          Texp_ident "v/1537"
            ]
          structure_item (lib/types.ml[174,5852+2]..lib/types.ml[174,5852+31])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[174,5852+6]..lib/types.ml[174,5852+9])
                  Tpat_var "mem/1538"
                expression (lib/types.ml[174,5852+10]..lib/types.ml[174,5852+31]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[174,5852+10]..lib/types.ml[174,5852+11])
                        Tpat_var "x/1540"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[174,5852+14]..lib/types.ml[174,5852+31])
                      Texp_apply
                      expression (lib/types.ml[174,5852+14]..lib/types.ml[174,5852+20])
                        Texp_ident "subset/1521"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[174,5852+21]..lib/types.ml[174,5852+31])
                            Texp_apply
                            expression (lib/types.ml[174,5852+22]..lib/types.ml[174,5852+28])
                              Texp_ident "single/1510"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[174,5852+29]..lib/types.ml[174,5852+30])
                                  Texp_ident "x/1540"
                            ]
                      ]
            ]
          structure_item (lib/types.ml[175,5884+2]..lib/types.ml[175,5884+14])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[175,5884+6]..lib/types.ml[175,5884+10])
                  Tpat_var "null/1541"
                expression (lib/types.ml[175,5884+13]..lib/types.ml[175,5884+14])
                  Texp_constant Const_int 0
            ]
          structure_item (lib/types.ml[176,5899+2]..lib/types.ml[176,5899+17])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[176,5899+6]..lib/types.ml[176,5899+13])
                  Tpat_var "unknown/1542"
                expression (lib/types.ml[176,5899+16]..lib/types.ml[176,5899+17])
                  Texp_constant Const_int 7
            ]
          structure_item (lib/types.ml[177,5917+2]..lib/types.ml[177,5917+23])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[177,5917+6]..lib/types.ml[177,5917+10])
                  Tpat_var "full/1543"
                expression (lib/types.ml[177,5917+13]..lib/types.ml[177,5917+23])
                  Texp_apply
                  expression (lib/types.ml[177,5917+13]..lib/types.ml[177,5917+19])
                    Texp_ident "single/1510"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[177,5917+20]..lib/types.ml[177,5917+23])
                        Texp_construct "Inv"
                        []
                  ]
            ]
          structure_item (lib/types.ml[178,5941+2]..lib/types.ml[178,5941+28])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[178,5941+6]..lib/types.ml[178,5941+15])
                  Tpat_var "covariant/1544"
                expression (lib/types.ml[178,5941+18]..lib/types.ml[178,5941+28])
                  Texp_apply
                  expression (lib/types.ml[178,5941+18]..lib/types.ml[178,5941+24])
                    Texp_ident "single/1510"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[178,5941+25]..lib/types.ml[178,5941+28])
                        Texp_construct "Pos"
                        []
                  ]
            ]
          structure_item (lib/types.ml[179,5970+2]..lib/types.ml[180,5994+50])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[179,5970+6]..lib/types.ml[179,5970+10])
                  Tpat_var "swap/1545"
                expression (lib/types.ml[179,5970+11]..lib/types.ml[180,5994+50]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[179,5970+11]..lib/types.ml[179,5970+13])
                        Tpat_var "f1/1547"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[179,5970+14]..lib/types.ml[179,5970+16])
                        Tpat_var "f2/1548"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[179,5970+17]..lib/types.ml[179,5970+18])
                        Tpat_var "v/1549"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[179,5970+19]..lib/types.ml[179,5970+21])
                        Tpat_var "v'/1550"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[180,5994+4]..lib/types.ml[180,5994+50])
                      Texp_apply
                      expression (lib/types.ml[180,5994+4]..lib/types.ml[180,5994+10])
                        Texp_ident "set_if/1533"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[180,5994+11]..lib/types.ml[180,5994+21])
                            Texp_apply
                            expression (lib/types.ml[180,5994+12]..lib/types.ml[180,5994+15])
                              Texp_ident "mem/1538"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[180,5994+16]..lib/types.ml[180,5994+18])
                                  Texp_ident "f2/1548"
                              <arg>
                                Nolabel
                                expression (lib/types.ml[180,5994+19]..lib/types.ml[180,5994+20])
                                  Texp_ident "v/1549"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/types.ml[180,5994+22]..lib/types.ml[180,5994+24])
                            Texp_ident "f1/1547"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[180,5994+25]..lib/types.ml[180,5994+50])
                            Texp_apply
                            expression (lib/types.ml[180,5994+26]..lib/types.ml[180,5994+32])
                              Texp_ident "set_if/1533"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[180,5994+33]..lib/types.ml[180,5994+43])
                                  Texp_apply
                                  expression (lib/types.ml[180,5994+34]..lib/types.ml[180,5994+37])
                                    Texp_ident "mem/1538"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/types.ml[180,5994+38]..lib/types.ml[180,5994+40])
                                        Texp_ident "f1/1547"
                                    <arg>
                                      Nolabel
                                      expression (lib/types.ml[180,5994+41]..lib/types.ml[180,5994+42])
                                        Texp_ident "v/1549"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/types.ml[180,5994+44]..lib/types.ml[180,5994+46])
                                  Texp_ident "f2/1548"
                              <arg>
                                Nolabel
                                expression (lib/types.ml[180,5994+47]..lib/types.ml[180,5994+49])
                                  Texp_ident "v'/1550"
                            ]
                      ]
            ]
          structure_item (lib/types.ml[181,6045+2]..lib/types.ml[183,6128+46])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[181,6045+6]..lib/types.ml[181,6045+15])
                  Tpat_var "conjugate/1551"
                expression (lib/types.ml[181,6045+16]..lib/types.ml[183,6128+46]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[181,6045+16]..lib/types.ml[181,6045+17])
                        Tpat_var "v/1553"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[182,6065+4]..lib/types.ml[183,6128+46])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/types.ml[182,6065+8]..lib/types.ml[182,6065+10])
                            Tpat_var "v'/1554"
                          expression (lib/types.ml[182,6065+13]..lib/types.ml[182,6065+59])
                            Texp_apply
                            expression (lib/types.ml[182,6065+13]..lib/types.ml[182,6065+18])
                              Texp_ident "inter/1517"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[182,6065+19]..lib/types.ml[182,6065+20])
                                  Texp_ident "v/1553"
                              <arg>
                                Nolabel
                                expression (lib/types.ml[182,6065+21]..lib/types.ml[182,6065+59])
                                  Texp_apply
                                  expression (lib/types.ml[182,6065+22]..lib/types.ml[182,6065+27])
                                    Texp_ident "union/1513"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/types.ml[182,6065+28]..lib/types.ml[182,6065+40])
                                        Texp_apply
                                        expression (lib/types.ml[182,6065+29]..lib/types.ml[182,6065+35])
                                          Texp_ident "single/1510"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/types.ml[182,6065+36]..lib/types.ml[182,6065+39])
                                              Texp_construct "Inj"
                                              []
                                        ]
                                    <arg>
                                      Nolabel
                                      expression (lib/types.ml[182,6065+41]..lib/types.ml[182,6065+58])
                                        Texp_apply
                                        expression (lib/types.ml[182,6065+42]..lib/types.ml[182,6065+48])
                                          Texp_ident "single/1510"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/types.ml[182,6065+49]..lib/types.ml[182,6065+57])
                                              Texp_construct "May_weak"
                                              []
                                        ]
                                  ]
                            ]
                      ]
                      expression (lib/types.ml[183,6128+4]..lib/types.ml[183,6128+46])
                        Texp_apply
                        expression (lib/types.ml[183,6128+4]..lib/types.ml[183,6128+8])
                          Texp_ident "swap/1545"
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[183,6128+9]..lib/types.ml[183,6128+12])
                              Texp_construct "Pos"
                              []
                          <arg>
                            Nolabel
                            expression (lib/types.ml[183,6128+13]..lib/types.ml[183,6128+16])
                              Texp_construct "Neg"
                              []
                          <arg>
                            Nolabel
                            expression (lib/types.ml[183,6128+17]..lib/types.ml[183,6128+18])
                              Texp_ident "v/1553"
                          <arg>
                            Nolabel
                            expression (lib/types.ml[183,6128+19]..lib/types.ml[183,6128+46])
                              Texp_apply
                              expression (lib/types.ml[183,6128+20]..lib/types.ml[183,6128+24])
                                Texp_ident "swap/1545"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[183,6128+25]..lib/types.ml[183,6128+32])
                                    Texp_construct "May_pos"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[183,6128+33]..lib/types.ml[183,6128+40])
                                    Texp_construct "May_neg"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[183,6128+41]..lib/types.ml[183,6128+42])
                                    Texp_ident "v/1553"
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[183,6128+43]..lib/types.ml[183,6128+45])
                                    Texp_ident "v'/1554"
                              ]
                        ]
            ]
          structure_item (lib/types.ml[184,6175+2]..lib/types.ml[195,6726+76])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[184,6175+6]..lib/types.ml[184,6175+13])
                  Tpat_var "compose/1555"
                expression (lib/types.ml[184,6175+14]..lib/types.ml[195,6726+76]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[184,6175+14]..lib/types.ml[184,6175+16])
                        Tpat_var "v1/1557"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[184,6175+17]..lib/types.ml[184,6175+19])
                        Tpat_var "v2/1558"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[185,6197+4]..lib/types.ml[195,6726+76])
                      Texp_ifthenelse
                      expression (lib/types.ml[185,6197+7]..lib/types.ml[185,6197+31])
                        Texp_apply
                        expression (lib/types.ml[185,6197+18]..lib/types.ml[185,6197+20])
                          Texp_ident "Stdlib!.&&"
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[185,6197+7]..lib/types.ml[185,6197+17])
                              Texp_apply
                              expression (lib/types.ml[185,6197+7]..lib/types.ml[185,6197+10])
                                Texp_ident "mem/1538"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[185,6197+11]..lib/types.ml[185,6197+14])
                                    Texp_construct "Inv"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[185,6197+15]..lib/types.ml[185,6197+17])
                                    Texp_ident "v1/1557"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/types.ml[185,6197+21]..lib/types.ml[185,6197+31])
                              Texp_apply
                              expression (lib/types.ml[185,6197+21]..lib/types.ml[185,6197+24])
                                Texp_ident "mem/1538"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[185,6197+25]..lib/types.ml[185,6197+28])
                                    Texp_construct "Inj"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[185,6197+29]..lib/types.ml[185,6197+31])
                                    Texp_ident "v2/1558"
                              ]
                        ]
                      expression (lib/types.ml[185,6197+37]..lib/types.ml[185,6197+41])
                        Texp_ident "full/1543"
                      Some
                        expression (lib/types.ml[186,6244+4]..lib/types.ml[195,6726+76])
                          Texp_let Nonrec
                          [
                            <def>
                              pattern (lib/types.ml[186,6244+8]..lib/types.ml[186,6244+10])
                                Tpat_var "mp/1559"
                              expression (lib/types.ml[187,6257+6]..lib/types.ml[187,6257+74])
                                Texp_apply
                                expression (lib/types.ml[187,6257+39]..lib/types.ml[187,6257+41])
                                  Texp_ident "Stdlib!.||"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[187,6257+6]..lib/types.ml[187,6257+38])
                                      Texp_apply
                                      expression (lib/types.ml[187,6257+21]..lib/types.ml[187,6257+23])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[187,6257+6]..lib/types.ml[187,6257+20])
                                            Texp_apply
                                            expression (lib/types.ml[187,6257+6]..lib/types.ml[187,6257+9])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[187,6257+10]..lib/types.ml[187,6257+17])
                                                  Texp_construct "May_pos"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[187,6257+18]..lib/types.ml[187,6257+20])
                                                  Texp_ident "v1/1557"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[187,6257+24]..lib/types.ml[187,6257+38])
                                            Texp_apply
                                            expression (lib/types.ml[187,6257+24]..lib/types.ml[187,6257+27])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[187,6257+28]..lib/types.ml[187,6257+35])
                                                  Texp_construct "May_pos"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[187,6257+36]..lib/types.ml[187,6257+38])
                                                  Texp_ident "v2/1558"
                                            ]
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[187,6257+42]..lib/types.ml[187,6257+74])
                                      Texp_apply
                                      expression (lib/types.ml[187,6257+57]..lib/types.ml[187,6257+59])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[187,6257+42]..lib/types.ml[187,6257+56])
                                            Texp_apply
                                            expression (lib/types.ml[187,6257+42]..lib/types.ml[187,6257+45])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[187,6257+46]..lib/types.ml[187,6257+53])
                                                  Texp_construct "May_neg"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[187,6257+54]..lib/types.ml[187,6257+56])
                                                  Texp_ident "v1/1557"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[187,6257+60]..lib/types.ml[187,6257+74])
                                            Texp_apply
                                            expression (lib/types.ml[187,6257+60]..lib/types.ml[187,6257+63])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[187,6257+64]..lib/types.ml[187,6257+71])
                                                  Texp_construct "May_neg"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[187,6257+72]..lib/types.ml[187,6257+74])
                                                  Texp_ident "v2/1558"
                                            ]
                                      ]
                                ]
                            <def>
                              pattern (lib/types.ml[188,6332+8]..lib/types.ml[188,6332+10])
                                Tpat_var "mn/1560"
                              expression (lib/types.ml[189,6345+6]..lib/types.ml[189,6345+74])
                                Texp_apply
                                expression (lib/types.ml[189,6345+39]..lib/types.ml[189,6345+41])
                                  Texp_ident "Stdlib!.||"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[189,6345+6]..lib/types.ml[189,6345+38])
                                      Texp_apply
                                      expression (lib/types.ml[189,6345+21]..lib/types.ml[189,6345+23])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[189,6345+6]..lib/types.ml[189,6345+20])
                                            Texp_apply
                                            expression (lib/types.ml[189,6345+6]..lib/types.ml[189,6345+9])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[189,6345+10]..lib/types.ml[189,6345+17])
                                                  Texp_construct "May_pos"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[189,6345+18]..lib/types.ml[189,6345+20])
                                                  Texp_ident "v1/1557"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[189,6345+24]..lib/types.ml[189,6345+38])
                                            Texp_apply
                                            expression (lib/types.ml[189,6345+24]..lib/types.ml[189,6345+27])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[189,6345+28]..lib/types.ml[189,6345+35])
                                                  Texp_construct "May_neg"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[189,6345+36]..lib/types.ml[189,6345+38])
                                                  Texp_ident "v2/1558"
                                            ]
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[189,6345+42]..lib/types.ml[189,6345+74])
                                      Texp_apply
                                      expression (lib/types.ml[189,6345+57]..lib/types.ml[189,6345+59])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[189,6345+42]..lib/types.ml[189,6345+56])
                                            Texp_apply
                                            expression (lib/types.ml[189,6345+42]..lib/types.ml[189,6345+45])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[189,6345+46]..lib/types.ml[189,6345+53])
                                                  Texp_construct "May_neg"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[189,6345+54]..lib/types.ml[189,6345+56])
                                                  Texp_ident "v1/1557"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[189,6345+60]..lib/types.ml[189,6345+74])
                                            Texp_apply
                                            expression (lib/types.ml[189,6345+60]..lib/types.ml[189,6345+63])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[189,6345+64]..lib/types.ml[189,6345+71])
                                                  Texp_construct "May_pos"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[189,6345+72]..lib/types.ml[189,6345+74])
                                                  Texp_ident "v2/1558"
                                            ]
                                      ]
                                ]
                            <def>
                              pattern (lib/types.ml[190,6420+8]..lib/types.ml[190,6420+10])
                                Tpat_var "mw/1561"
                              expression (lib/types.ml[190,6420+13]..lib/types.ml[190,6420+75])
                                Texp_apply
                                expression (lib/types.ml[190,6420+43]..lib/types.ml[190,6420+45])
                                  Texp_ident "Stdlib!.||"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[190,6420+13]..lib/types.ml[190,6420+42])
                                      Texp_apply
                                      expression (lib/types.ml[190,6420+29]..lib/types.ml[190,6420+31])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[190,6420+13]..lib/types.ml[190,6420+28])
                                            Texp_apply
                                            expression (lib/types.ml[190,6420+13]..lib/types.ml[190,6420+16])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[190,6420+17]..lib/types.ml[190,6420+25])
                                                  Texp_construct "May_weak"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[190,6420+26]..lib/types.ml[190,6420+28])
                                                  Texp_ident "v1/1557"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[190,6420+32]..lib/types.ml[190,6420+42])
                                            Texp_apply
                                            expression (lib/types.ml[190,6420+35]..lib/types.ml[190,6420+37])
                                              Texp_ident "Stdlib!.<>"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[190,6420+32]..lib/types.ml[190,6420+34])
                                                  Texp_ident "v2/1558"
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[190,6420+38]..lib/types.ml[190,6420+42])
                                                  Texp_ident "null/1541"
                                            ]
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[190,6420+46]..lib/types.ml[190,6420+75])
                                      Texp_apply
                                      expression (lib/types.ml[190,6420+57]..lib/types.ml[190,6420+59])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[190,6420+46]..lib/types.ml[190,6420+56])
                                            Texp_apply
                                            expression (lib/types.ml[190,6420+49]..lib/types.ml[190,6420+51])
                                              Texp_ident "Stdlib!.<>"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[190,6420+46]..lib/types.ml[190,6420+48])
                                                  Texp_ident "v1/1557"
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[190,6420+52]..lib/types.ml[190,6420+56])
                                                  Texp_ident "null/1541"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[190,6420+60]..lib/types.ml[190,6420+75])
                                            Texp_apply
                                            expression (lib/types.ml[190,6420+60]..lib/types.ml[190,6420+63])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[190,6420+64]..lib/types.ml[190,6420+72])
                                                  Texp_construct "May_weak"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[190,6420+73]..lib/types.ml[190,6420+75])
                                                  Texp_ident "v2/1558"
                                            ]
                                      ]
                                ]
                            <def>
                              pattern (lib/types.ml[191,6496+8]..lib/types.ml[191,6496+11])
                                Tpat_var "inj/1562"
                              expression (lib/types.ml[191,6496+14]..lib/types.ml[191,6496+38])
                                Texp_apply
                                expression (lib/types.ml[191,6496+25]..lib/types.ml[191,6496+27])
                                  Texp_ident "Stdlib!.&&"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[191,6496+14]..lib/types.ml[191,6496+24])
                                      Texp_apply
                                      expression (lib/types.ml[191,6496+14]..lib/types.ml[191,6496+17])
                                        Texp_ident "mem/1538"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[191,6496+18]..lib/types.ml[191,6496+21])
                                            Texp_construct "Inj"
                                            []
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[191,6496+22]..lib/types.ml[191,6496+24])
                                            Texp_ident "v1/1557"
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[191,6496+28]..lib/types.ml[191,6496+38])
                                      Texp_apply
                                      expression (lib/types.ml[191,6496+28]..lib/types.ml[191,6496+31])
                                        Texp_ident "mem/1538"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[191,6496+32]..lib/types.ml[191,6496+35])
                                            Texp_construct "Inj"
                                            []
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[191,6496+36]..lib/types.ml[191,6496+38])
                                            Texp_ident "v2/1558"
                                      ]
                                ]
                            <def>
                              pattern (lib/types.ml[192,6535+8]..lib/types.ml[192,6535+11])
                                Tpat_var "pos/1563"
                              expression (lib/types.ml[192,6535+14]..lib/types.ml[192,6535+66])
                                Texp_apply
                                expression (lib/types.ml[192,6535+39]..lib/types.ml[192,6535+41])
                                  Texp_ident "Stdlib!.||"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[192,6535+14]..lib/types.ml[192,6535+38])
                                      Texp_apply
                                      expression (lib/types.ml[192,6535+25]..lib/types.ml[192,6535+27])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[192,6535+14]..lib/types.ml[192,6535+24])
                                            Texp_apply
                                            expression (lib/types.ml[192,6535+14]..lib/types.ml[192,6535+17])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[192,6535+18]..lib/types.ml[192,6535+21])
                                                  Texp_construct "Pos"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[192,6535+22]..lib/types.ml[192,6535+24])
                                                  Texp_ident "v1/1557"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[192,6535+28]..lib/types.ml[192,6535+38])
                                            Texp_apply
                                            expression (lib/types.ml[192,6535+28]..lib/types.ml[192,6535+31])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[192,6535+32]..lib/types.ml[192,6535+35])
                                                  Texp_construct "Pos"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[192,6535+36]..lib/types.ml[192,6535+38])
                                                  Texp_ident "v2/1558"
                                            ]
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[192,6535+42]..lib/types.ml[192,6535+66])
                                      Texp_apply
                                      expression (lib/types.ml[192,6535+53]..lib/types.ml[192,6535+55])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[192,6535+42]..lib/types.ml[192,6535+52])
                                            Texp_apply
                                            expression (lib/types.ml[192,6535+42]..lib/types.ml[192,6535+45])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[192,6535+46]..lib/types.ml[192,6535+49])
                                                  Texp_construct "Neg"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[192,6535+50]..lib/types.ml[192,6535+52])
                                                  Texp_ident "v1/1557"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[192,6535+56]..lib/types.ml[192,6535+66])
                                            Texp_apply
                                            expression (lib/types.ml[192,6535+56]..lib/types.ml[192,6535+59])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[192,6535+60]..lib/types.ml[192,6535+63])
                                                  Texp_construct "Neg"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[192,6535+64]..lib/types.ml[192,6535+66])
                                                  Texp_ident "v2/1558"
                                            ]
                                      ]
                                ]
                            <def>
                              pattern (lib/types.ml[193,6602+8]..lib/types.ml[193,6602+11])
                                Tpat_var "neg/1564"
                              expression (lib/types.ml[193,6602+14]..lib/types.ml[193,6602+66])
                                Texp_apply
                                expression (lib/types.ml[193,6602+39]..lib/types.ml[193,6602+41])
                                  Texp_ident "Stdlib!.||"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[193,6602+14]..lib/types.ml[193,6602+38])
                                      Texp_apply
                                      expression (lib/types.ml[193,6602+25]..lib/types.ml[193,6602+27])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[193,6602+14]..lib/types.ml[193,6602+24])
                                            Texp_apply
                                            expression (lib/types.ml[193,6602+14]..lib/types.ml[193,6602+17])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[193,6602+18]..lib/types.ml[193,6602+21])
                                                  Texp_construct "Pos"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[193,6602+22]..lib/types.ml[193,6602+24])
                                                  Texp_ident "v1/1557"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[193,6602+28]..lib/types.ml[193,6602+38])
                                            Texp_apply
                                            expression (lib/types.ml[193,6602+28]..lib/types.ml[193,6602+31])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[193,6602+32]..lib/types.ml[193,6602+35])
                                                  Texp_construct "Neg"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[193,6602+36]..lib/types.ml[193,6602+38])
                                                  Texp_ident "v2/1558"
                                            ]
                                      ]
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[193,6602+42]..lib/types.ml[193,6602+66])
                                      Texp_apply
                                      expression (lib/types.ml[193,6602+53]..lib/types.ml[193,6602+55])
                                        Texp_ident "Stdlib!.&&"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[193,6602+42]..lib/types.ml[193,6602+52])
                                            Texp_apply
                                            expression (lib/types.ml[193,6602+42]..lib/types.ml[193,6602+45])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[193,6602+46]..lib/types.ml[193,6602+49])
                                                  Texp_construct "Neg"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[193,6602+50]..lib/types.ml[193,6602+52])
                                                  Texp_ident "v1/1557"
                                            ]
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[193,6602+56]..lib/types.ml[193,6602+66])
                                            Texp_apply
                                            expression (lib/types.ml[193,6602+56]..lib/types.ml[193,6602+59])
                                              Texp_ident "mem/1538"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[193,6602+60]..lib/types.ml[193,6602+63])
                                                  Texp_construct "Pos"
                                                  []
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[193,6602+64]..lib/types.ml[193,6602+66])
                                                  Texp_ident "v2/1558"
                                            ]
                                      ]
                                ]
                          ]
                          expression (lib/types.ml[194,6672+4]..lib/types.ml[195,6726+76])
                            Texp_apply
                            expression (lib/types.ml[194,6672+4]..lib/types.ml[194,6672+18])
                              Texp_ident "Stdlib!.List.fold_left"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[194,6672+19]..lib/types.ml[194,6672+48])
                                  Texp_function
                                  [
                                    Nolabel
                                    Param_pat
                                      pattern (lib/types.ml[194,6672+24]..lib/types.ml[194,6672+25])
                                        Tpat_var "v/1631"
                                    Nolabel
                                    Param_pat
                                      pattern (lib/types.ml[194,6672+26]..lib/types.ml[194,6672+31])
                                        Tpat_tuple
                                        [
                                          pattern (lib/types.ml[194,6672+27]..lib/types.ml[194,6672+28])
                                            Tpat_var "b/1632"
                                          pattern (lib/types.ml[194,6672+29]..lib/types.ml[194,6672+30])
                                            Tpat_var "f/1633"
                                        ]
                                  ]
                                  Tfunction_body
                                    expression (lib/types.ml[194,6672+35]..lib/types.ml[194,6672+47])
                                      Texp_apply
                                      expression (lib/types.ml[194,6672+35]..lib/types.ml[194,6672+41])
                                        Texp_ident "set_if/1533"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[194,6672+42]..lib/types.ml[194,6672+43])
                                            Texp_ident "b/1632"
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[194,6672+44]..lib/types.ml[194,6672+45])
                                            Texp_ident "f/1633"
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[194,6672+46]..lib/types.ml[194,6672+47])
                                            Texp_ident "v/1631"
                                      ]
                              <arg>
                                Nolabel
                                expression (lib/types.ml[194,6672+49]..lib/types.ml[194,6672+53])
                                  Texp_ident "null/1541"
                              <arg>
                                Nolabel
                                expression (lib/types.ml[195,6726+6]..lib/types.ml[195,6726+76])
                                  Texp_construct "::"
                                  [
                                    expression (lib/types.ml[195,6726+7]..lib/types.ml[195,6726+18])
                                      Texp_tuple
                                      [
                                        expression (lib/types.ml[195,6726+7]..lib/types.ml[195,6726+9])
                                          Texp_ident "mp/1559"
                                        expression (lib/types.ml[195,6726+11]..lib/types.ml[195,6726+18])
                                          Texp_construct "May_pos"
                                          []
                                      ]
                                    expression (lib/types.ml[195,6726+20]..lib/types.ml[195,6726+76]) ghost
                                      Texp_construct "::"
                                      [
                                        expression (lib/types.ml[195,6726+20]..lib/types.ml[195,6726+31])
                                          Texp_tuple
                                          [
                                            expression (lib/types.ml[195,6726+20]..lib/types.ml[195,6726+22])
                                              Texp_ident "mn/1560"
                                            expression (lib/types.ml[195,6726+24]..lib/types.ml[195,6726+31])
                                              Texp_construct "May_neg"
                                              []
                                          ]
                                        expression (lib/types.ml[195,6726+33]..lib/types.ml[195,6726+76]) ghost
                                          Texp_construct "::"
                                          [
                                            expression (lib/types.ml[195,6726+33]..lib/types.ml[195,6726+45])
                                              Texp_tuple
                                              [
                                                expression (lib/types.ml[195,6726+33]..lib/types.ml[195,6726+35])
                                                  Texp_ident "mw/1561"
                                                expression (lib/types.ml[195,6726+37]..lib/types.ml[195,6726+45])
                                                  Texp_construct "May_weak"
                                                  []
                                              ]
                                            expression (lib/types.ml[195,6726+47]..lib/types.ml[195,6726+76]) ghost
                                              Texp_construct "::"
                                              [
                                                expression (lib/types.ml[195,6726+47]..lib/types.ml[195,6726+55])
                                                  Texp_tuple
                                                  [
                                                    expression (lib/types.ml[195,6726+47]..lib/types.ml[195,6726+50])
                                                      Texp_ident "inj/1562"
                                                    expression (lib/types.ml[195,6726+52]..lib/types.ml[195,6726+55])
                                                      Texp_construct "Inj"
                                                      []
                                                  ]
                                                expression (lib/types.ml[195,6726+57]..lib/types.ml[195,6726+76]) ghost
                                                  Texp_construct "::"
                                                  [
                                                    expression (lib/types.ml[195,6726+57]..lib/types.ml[195,6726+65])
                                                      Texp_tuple
                                                      [
                                                        expression (lib/types.ml[195,6726+57]..lib/types.ml[195,6726+60])
                                                          Texp_ident "pos/1563"
                                                        expression (lib/types.ml[195,6726+62]..lib/types.ml[195,6726+65])
                                                          Texp_construct "Pos"
                                                          []
                                                      ]
                                                    expression (lib/types.ml[195,6726+67]..lib/types.ml[195,6726+76]) ghost
                                                      Texp_construct "::"
                                                      [
                                                        expression (lib/types.ml[195,6726+67]..lib/types.ml[195,6726+75])
                                                          Texp_tuple
                                                          [
                                                            expression (lib/types.ml[195,6726+67]..lib/types.ml[195,6726+70])
                                                              Texp_ident "neg/1564"
                                                            expression (lib/types.ml[195,6726+72]..lib/types.ml[195,6726+75])
                                                              Texp_construct "Neg"
                                                              []
                                                          ]
                                                        expression (lib/types.ml[195,6726+75]..lib/types.ml[195,6726+76]) ghost
                                                          Texp_construct "[]"
                                                          []
                                                      ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                  ]
                            ]
            ]
          structure_item (lib/types.ml[196,6803+2]..lib/types.ml[197,6824+64])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[196,6803+6]..lib/types.ml[196,6803+16])
                  Tpat_var "strengthen/1635"
                expression (lib/types.ml[196,6803+17]..lib/types.ml[197,6824+64]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[196,6803+17]..lib/types.ml[196,6803+18])
                        Tpat_var "v/1637"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[197,6824+4]..lib/types.ml[197,6824+64])
                      Texp_ifthenelse
                      expression (lib/types.ml[197,6824+7]..lib/types.ml[197,6824+20])
                        Texp_apply
                        expression (lib/types.ml[197,6824+7]..lib/types.ml[197,6824+10])
                          Texp_ident "mem/1538"
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[197,6824+11]..lib/types.ml[197,6824+18])
                              Texp_construct "May_neg"
                              []
                          <arg>
                            Nolabel
                            expression (lib/types.ml[197,6824+19]..lib/types.ml[197,6824+20])
                              Texp_ident "v/1637"
                        ]
                      expression (lib/types.ml[197,6824+26]..lib/types.ml[197,6824+27])
                        Texp_ident "v/1637"
                      Some
                        expression (lib/types.ml[197,6824+33]..lib/types.ml[197,6824+64])
                          Texp_apply
                          expression (lib/types.ml[197,6824+35]..lib/types.ml[197,6824+39])
                            Texp_ident "Stdlib!.land"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[197,6824+33]..lib/types.ml[197,6824+34])
                                Texp_ident "v/1637"
                            <arg>
                              Nolabel
                              expression (lib/types.ml[197,6824+40]..lib/types.ml[197,6824+64])
                                Texp_apply
                                expression (lib/types.ml[197,6824+46]..lib/types.ml[197,6824+47])
                                  Texp_ident "Stdlib!.-"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[197,6824+41]..lib/types.ml[197,6824+45])
                                      Texp_ident "full/1543"
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[197,6824+48]..lib/types.ml[197,6824+63])
                                      Texp_apply
                                      expression (lib/types.ml[197,6824+48]..lib/types.ml[197,6824+54])
                                        Texp_ident "single/1510"
                                      [
                                        <arg>
                                          Nolabel
                                          expression (lib/types.ml[197,6824+55]..lib/types.ml[197,6824+63])
                                            Texp_construct "May_weak"
                                            []
                                      ]
                                ]
                          ]
            ]
          structure_item (lib/types.ml[198,6889+2]..lib/types.ml[198,6889+50])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[198,6889+6]..lib/types.ml[198,6889+15])
                  Tpat_var "get_upper/1638"
                expression (lib/types.ml[198,6889+16]..lib/types.ml[198,6889+50]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[198,6889+16]..lib/types.ml[198,6889+17])
                        Tpat_var "v/1640"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[198,6889+20]..lib/types.ml[198,6889+50])
                      Texp_tuple
                      [
                        expression (lib/types.ml[198,6889+21]..lib/types.ml[198,6889+34])
                          Texp_apply
                          expression (lib/types.ml[198,6889+21]..lib/types.ml[198,6889+24])
                            Texp_ident "mem/1538"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[198,6889+25]..lib/types.ml[198,6889+32])
                                Texp_construct "May_pos"
                                []
                            <arg>
                              Nolabel
                              expression (lib/types.ml[198,6889+33]..lib/types.ml[198,6889+34])
                                Texp_ident "v/1640"
                          ]
                        expression (lib/types.ml[198,6889+36]..lib/types.ml[198,6889+49])
                          Texp_apply
                          expression (lib/types.ml[198,6889+36]..lib/types.ml[198,6889+39])
                            Texp_ident "mem/1538"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[198,6889+40]..lib/types.ml[198,6889+47])
                                Texp_construct "May_neg"
                                []
                            <arg>
                              Nolabel
                              expression (lib/types.ml[198,6889+48]..lib/types.ml[198,6889+49])
                                Texp_ident "v/1640"
                          ]
                      ]
            ]
          structure_item (lib/types.ml[199,6940+2]..lib/types.ml[199,6940+53])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[199,6940+6]..lib/types.ml[199,6940+15])
                  Tpat_var "get_lower/1641"
                expression (lib/types.ml[199,6940+16]..lib/types.ml[199,6940+53]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[199,6940+16]..lib/types.ml[199,6940+17])
                        Tpat_var "v/1643"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[199,6940+20]..lib/types.ml[199,6940+53])
                      Texp_tuple
                      [
                        expression (lib/types.ml[199,6940+21]..lib/types.ml[199,6940+30])
                          Texp_apply
                          expression (lib/types.ml[199,6940+21]..lib/types.ml[199,6940+24])
                            Texp_ident "mem/1538"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[199,6940+25]..lib/types.ml[199,6940+28])
                                Texp_construct "Pos"
                                []
                            <arg>
                              Nolabel
                              expression (lib/types.ml[199,6940+29]..lib/types.ml[199,6940+30])
                                Texp_ident "v/1643"
                          ]
                        expression (lib/types.ml[199,6940+32]..lib/types.ml[199,6940+41])
                          Texp_apply
                          expression (lib/types.ml[199,6940+32]..lib/types.ml[199,6940+35])
                            Texp_ident "mem/1538"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[199,6940+36]..lib/types.ml[199,6940+39])
                                Texp_construct "Neg"
                                []
                            <arg>
                              Nolabel
                              expression (lib/types.ml[199,6940+40]..lib/types.ml[199,6940+41])
                                Texp_ident "v/1643"
                          ]
                        expression (lib/types.ml[199,6940+43]..lib/types.ml[199,6940+52])
                          Texp_apply
                          expression (lib/types.ml[199,6940+43]..lib/types.ml[199,6940+46])
                            Texp_ident "mem/1538"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[199,6940+47]..lib/types.ml[199,6940+50])
                                Texp_construct "Inj"
                                []
                            <arg>
                              Nolabel
                              expression (lib/types.ml[199,6940+51]..lib/types.ml[199,6940+52])
                                Texp_ident "v/1643"
                          ]
                      ]
            ]
          structure_item (lib/types.ml[200,6994+2]..lib/types.ml[202,7100+31])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[200,6994+6]..lib/types.ml[200,6994+23])
                  Tpat_var "unknown_signature/1644"
                expression (lib/types.ml[200,6994+24]..lib/types.ml[202,7100+31]) ghost
                  Texp_function
                  [
                    Labelled "injective"
                    Param_pat
                      pattern (lib/types.ml[200,6994+25]..lib/types.ml[200,6994+34])
                        Tpat_var "injective/1646"
                    Labelled "arity"
                    Param_pat
                      pattern (lib/types.ml[200,6994+36]..lib/types.ml[200,6994+41])
                        Tpat_var "arity/1647"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[201,7038+4]..lib/types.ml[202,7100+31])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/types.ml[201,7038+8]..lib/types.ml[201,7038+9])
                            Tpat_var "v/1648"
                          expression (lib/types.ml[201,7038+12]..lib/types.ml[201,7038+58])
                            Texp_ifthenelse
                            expression (lib/types.ml[201,7038+15]..lib/types.ml[201,7038+24])
                              Texp_ident "injective/1646"
                            expression (lib/types.ml[201,7038+30]..lib/types.ml[201,7038+45])
                              Texp_apply
                              expression (lib/types.ml[201,7038+30]..lib/types.ml[201,7038+33])
                                Texp_ident "set/1529"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[201,7038+34]..lib/types.ml[201,7038+37])
                                    Texp_construct "Inj"
                                    []
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[201,7038+38]..lib/types.ml[201,7038+45])
                                    Texp_ident "unknown/1542"
                              ]
                            Some
                              expression (lib/types.ml[201,7038+51]..lib/types.ml[201,7038+58])
                                Texp_ident "unknown/1542"
                      ]
                      expression (lib/types.ml[202,7100+4]..lib/types.ml[202,7100+31])
                        Texp_apply
                        expression (lib/types.ml[202,7100+4]..lib/types.ml[202,7100+23])
                          Texp_ident "Ocaml_ocaml_types!.Misc.replicate_list"
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[202,7100+24]..lib/types.ml[202,7100+25])
                              Texp_ident "v/1648"
                          <arg>
                            Nolabel
                            expression (lib/types.ml[202,7100+26]..lib/types.ml[202,7100+31])
                              Texp_ident "arity/1647"
                        ]
            ]
        ]
  structure_item (lib/types.ml[205,7137+0]..lib/types.ml[229,7911+3])
    Tstr_module
    Separability/2023
      module_expr (lib/types.ml[205,7137+22]..lib/types.ml[229,7911+3])
        Tmod_structure
        [
          structure_item (lib/types.ml[206,7166+2]..lib/types.ml[206,7166+30])
            Tstr_type Rec
            [
              type_declaration t/1650 (lib/types.ml[206,7166+2]..lib/types.ml[206,7166+30])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_variant
                    [
                      (lib/types.ml[206,7166+11]..lib/types.ml[206,7166+14])
                        Ind/1651
                        []
                        None
                      (lib/types.ml[206,7166+15]..lib/types.ml[206,7166+20])
                        Sep/1652
                        []
                        None
                      (lib/types.ml[206,7166+21]..lib/types.ml[206,7166+30])
                        Deepsep/1653
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (lib/types.ml[207,7197+2]..lib/types.ml[207,7197+25])
            Tstr_type Rec
            [
              type_declaration signature/1654 (lib/types.ml[207,7197+2]..lib/types.ml[207,7197+25])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ttype_abstract
                ptype_private = Public
                ptype_manifest =
                  Some
                    core_type (lib/types.ml[207,7197+19]..lib/types.ml[207,7197+25])
                      Ttyp_constr "list/9!"
                      [
                        core_type (lib/types.ml[207,7197+19]..lib/types.ml[207,7197+20])
                          Ttyp_constr "t/1650"
                          []
                      ]
            ]
          structure_item (lib/types.ml[208,7223+2]..lib/types.ml[208,7223+32])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[208,7223+6]..lib/types.ml[208,7223+8])
                  Tpat_var "eq/1655"
                expression (lib/types.ml[208,7223+9]..lib/types.ml[208,7223+32]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[208,7223+10]..lib/types.ml[208,7223+12])
                        extra
                          Tpat_extra_constraint
                          core_type (lib/types.ml[208,7223+15]..lib/types.ml[208,7223+16])
                            Ttyp_constr "t/1650"
                            []
                        Tpat_alias "m1/1657"
                        pattern (lib/types.ml[208,7223+10]..lib/types.ml[208,7223+12])
                          Tpat_any
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[208,7223+18]..lib/types.ml[208,7223+20])
                        Tpat_var "m2/1658"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[208,7223+23]..lib/types.ml[208,7223+32])
                      Texp_apply
                      expression (lib/types.ml[208,7223+27]..lib/types.ml[208,7223+28])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[208,7223+24]..lib/types.ml[208,7223+26])
                            Texp_ident "m1/1657"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[208,7223+29]..lib/types.ml[208,7223+31])
                            Texp_ident "m2/1658"
                      ]
            ]
          structure_item (lib/types.ml[209,7256+2]..lib/types.ml[212,7308+18])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[209,7256+6]..lib/types.ml[209,7256+10])
                  Tpat_var "rank/1659"
                expression (lib/types.ml[209,7256+13]..lib/types.ml[212,7308+18])
                  Texp_function
                  []
                  Tfunction_cases (lib/types.ml[209,7256+13]..lib/types.ml[212,7308+18])
                    [
                      <case>
                        pattern (lib/types.ml[210,7278+6]..lib/types.ml[210,7278+9])
                          Tpat_construct "Ind"
                          []
                          None
                        expression (lib/types.ml[210,7278+13]..lib/types.ml[210,7278+14])
                          Texp_constant Const_int 0
                      <case>
                        pattern (lib/types.ml[211,7293+6]..lib/types.ml[211,7293+9])
                          Tpat_construct "Sep"
                          []
                          None
                        expression (lib/types.ml[211,7293+13]..lib/types.ml[211,7293+14])
                          Texp_constant Const_int 1
                      <case>
                        pattern (lib/types.ml[212,7308+6]..lib/types.ml[212,7308+13])
                          Tpat_construct "Deepsep"
                          []
                          None
                        expression (lib/types.ml[212,7308+17]..lib/types.ml[212,7308+18])
                          Texp_constant Const_int 2
                    ]
            ]
          structure_item (lib/types.ml[213,7327+2]..lib/types.ml[213,7327+49])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[213,7327+6]..lib/types.ml[213,7327+13])
                  Tpat_var "compare/1662"
                expression (lib/types.ml[213,7327+14]..lib/types.ml[213,7327+49]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[213,7327+14]..lib/types.ml[213,7327+16])
                        Tpat_var "m1/1663"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[213,7327+17]..lib/types.ml[213,7327+19])
                        Tpat_var "m2/1664"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[213,7327+22]..lib/types.ml[213,7327+49])
                      Texp_apply
                      expression (lib/types.ml[213,7327+22]..lib/types.ml[213,7327+29])
                        Texp_ident "Stdlib!.compare"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[213,7327+30]..lib/types.ml[213,7327+39])
                            Texp_apply
                            expression (lib/types.ml[213,7327+31]..lib/types.ml[213,7327+35])
                              Texp_ident "rank/1659"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[213,7327+36]..lib/types.ml[213,7327+38])
                                  Texp_ident "m1/1663"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/types.ml[213,7327+40]..lib/types.ml[213,7327+49])
                            Texp_apply
                            expression (lib/types.ml[213,7327+41]..lib/types.ml[213,7327+45])
                              Texp_ident "rank/1659"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[213,7327+46]..lib/types.ml[213,7327+48])
                                  Texp_ident "m2/1664"
                            ]
                      ]
            ]
          structure_item (lib/types.ml[214,7377+2]..lib/types.ml[214,7377+55])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[214,7377+6]..lib/types.ml[214,7377+9])
                  Tpat_var "max/1665"
                expression (lib/types.ml[214,7377+10]..lib/types.ml[214,7377+55]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[214,7377+10]..lib/types.ml[214,7377+12])
                        Tpat_var "m1/1666"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[214,7377+13]..lib/types.ml[214,7377+15])
                        Tpat_var "m2/1667"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[214,7377+18]..lib/types.ml[214,7377+55])
                      Texp_ifthenelse
                      expression (lib/types.ml[214,7377+21]..lib/types.ml[214,7377+39])
                        Texp_apply
                        expression (lib/types.ml[214,7377+29]..lib/types.ml[214,7377+31])
                          Texp_ident "Stdlib!.>="
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[214,7377+21]..lib/types.ml[214,7377+28])
                              Texp_apply
                              expression (lib/types.ml[214,7377+21]..lib/types.ml[214,7377+25])
                                Texp_ident "rank/1659"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[214,7377+26]..lib/types.ml[214,7377+28])
                                    Texp_ident "m1/1666"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/types.ml[214,7377+32]..lib/types.ml[214,7377+39])
                              Texp_apply
                              expression (lib/types.ml[214,7377+32]..lib/types.ml[214,7377+36])
                                Texp_ident "rank/1659"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[214,7377+37]..lib/types.ml[214,7377+39])
                                    Texp_ident "m2/1667"
                              ]
                        ]
                      expression (lib/types.ml[214,7377+45]..lib/types.ml[214,7377+47])
                        Texp_ident "m1/1666"
                      Some
                        expression (lib/types.ml[214,7377+53]..lib/types.ml[214,7377+55])
                          Texp_ident "m2/1667"
            ]
          structure_item (lib/types.ml[216,7434+2]..lib/types.ml[219,7537+45])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[216,7434+6]..lib/types.ml[216,7434+11])
                  Tpat_var "print/1668"
                expression (lib/types.ml[216,7434+12]..lib/types.ml[219,7537+45]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[216,7434+12]..lib/types.ml[216,7434+15])
                        Tpat_var "ppf/1670"
                  ]
                  Tfunction_cases (lib/types.ml[216,7434+18]..lib/types.ml[219,7537+45])
                    [
                      <case>
                        pattern (lib/types.ml[217,7461+6]..lib/types.ml[217,7461+9])
                          Tpat_construct "Ind"
                          []
                          None
                        expression (lib/types.ml[217,7461+13]..lib/types.ml[217,7461+37])
                          Texp_apply
                          expression (lib/types.ml[217,7461+13]..lib/types.ml[217,7461+27])
                            Texp_ident "Stdlib!.Format.fprintf"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[217,7461+28]..lib/types.ml[217,7461+31])
                                Texp_ident "ppf/1670"
                            <arg>
                              Nolabel
                              expression (lib/types.ml[217,7461+32]..lib/types.ml[217,7461+37])
                                Texp_construct "CamlinternalFormatBasics.Format"
                                [
                                  expression (lib/types.ml[217,7461+32]..lib/types.ml[217,7461+37]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/types.ml[217,7461+32]..lib/types.ml[217,7461+37]) ghost
                                        Texp_constant Const_string("Ind",(lib/types.ml[217,7461+32]..lib/types.ml[217,7461+37]) ghost,None)
                                      expression (lib/types.ml[217,7461+32]..lib/types.ml[217,7461+37]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                  expression (lib/types.ml[217,7461+32]..lib/types.ml[217,7461+37]) ghost
                                    Texp_constant Const_string("Ind",(lib/types.ml[217,7461+32]..lib/types.ml[217,7461+37]) ghost,None)
                                ]
                          ]
                      <case>
                        pattern (lib/types.ml[218,7499+6]..lib/types.ml[218,7499+9])
                          Tpat_construct "Sep"
                          []
                          None
                        expression (lib/types.ml[218,7499+13]..lib/types.ml[218,7499+37])
                          Texp_apply
                          expression (lib/types.ml[218,7499+13]..lib/types.ml[218,7499+27])
                            Texp_ident "Stdlib!.Format.fprintf"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[218,7499+28]..lib/types.ml[218,7499+31])
                                Texp_ident "ppf/1670"
                            <arg>
                              Nolabel
                              expression (lib/types.ml[218,7499+32]..lib/types.ml[218,7499+37])
                                Texp_construct "CamlinternalFormatBasics.Format"
                                [
                                  expression (lib/types.ml[218,7499+32]..lib/types.ml[218,7499+37]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/types.ml[218,7499+32]..lib/types.ml[218,7499+37]) ghost
                                        Texp_constant Const_string("Sep",(lib/types.ml[218,7499+32]..lib/types.ml[218,7499+37]) ghost,None)
                                      expression (lib/types.ml[218,7499+32]..lib/types.ml[218,7499+37]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                  expression (lib/types.ml[218,7499+32]..lib/types.ml[218,7499+37]) ghost
                                    Texp_constant Const_string("Sep",(lib/types.ml[218,7499+32]..lib/types.ml[218,7499+37]) ghost,None)
                                ]
                          ]
                      <case>
                        pattern (lib/types.ml[219,7537+6]..lib/types.ml[219,7537+13])
                          Tpat_construct "Deepsep"
                          []
                          None
                        expression (lib/types.ml[219,7537+17]..lib/types.ml[219,7537+45])
                          Texp_apply
                          expression (lib/types.ml[219,7537+17]..lib/types.ml[219,7537+31])
                            Texp_ident "Stdlib!.Format.fprintf"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[219,7537+32]..lib/types.ml[219,7537+35])
                                Texp_ident "ppf/1670"
                            <arg>
                              Nolabel
                              expression (lib/types.ml[219,7537+36]..lib/types.ml[219,7537+45])
                                Texp_construct "CamlinternalFormatBasics.Format"
                                [
                                  expression (lib/types.ml[219,7537+36]..lib/types.ml[219,7537+45]) ghost
                                    Texp_construct "CamlinternalFormatBasics.String_literal"
                                    [
                                      expression (lib/types.ml[219,7537+36]..lib/types.ml[219,7537+45]) ghost
                                        Texp_constant Const_string("Deepsep",(lib/types.ml[219,7537+36]..lib/types.ml[219,7537+45]) ghost,None)
                                      expression (lib/types.ml[219,7537+36]..lib/types.ml[219,7537+45]) ghost
                                        Texp_construct "CamlinternalFormatBasics.End_of_format"
                                        []
                                    ]
                                  expression (lib/types.ml[219,7537+36]..lib/types.ml[219,7537+45]) ghost
                                    Texp_constant Const_string("Deepsep",(lib/types.ml[219,7537+36]..lib/types.ml[219,7537+45]) ghost,None)
                                ]
                          ]
                    ]
            ]
          structure_item (lib/types.ml[221,7584+2]..lib/types.ml[224,7704+48])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[221,7584+6]..lib/types.ml[221,7584+21])
                  Tpat_var "print_signature/2011"
                expression (lib/types.ml[221,7584+22]..lib/types.ml[224,7704+48]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[221,7584+22]..lib/types.ml[221,7584+25])
                        Tpat_var "ppf/2013"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[221,7584+26]..lib/types.ml[221,7584+31])
                        Tpat_var "modes/2014"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[222,7618+4]..lib/types.ml[224,7704+48])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/types.ml[222,7618+8]..lib/types.ml[222,7618+14])
                            Tpat_var "pp_sep/2015"
                          expression (lib/types.ml[222,7618+15]..lib/types.ml[222,7618+48]) ghost
                            Texp_function
                            [
                              Nolabel
                              Param_pat
                                pattern (lib/types.ml[222,7618+15]..lib/types.ml[222,7618+18])
                                  Tpat_var "ppf/2017"
                              Nolabel
                              Param_pat
                                pattern (lib/types.ml[222,7618+19]..lib/types.ml[222,7618+21])
                                  Tpat_construct "()"
                                  []
                                  None
                            ]
                            Tfunction_body
                              expression (lib/types.ml[222,7618+24]..lib/types.ml[222,7618+48])
                                Texp_apply
                                expression (lib/types.ml[222,7618+24]..lib/types.ml[222,7618+38])
                                  Texp_ident "Stdlib!.Format.fprintf"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[222,7618+39]..lib/types.ml[222,7618+42])
                                      Texp_ident "ppf/2017"
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[222,7618+43]..lib/types.ml[222,7618+48])
                                      Texp_construct "CamlinternalFormatBasics.Format"
                                      [
                                        expression (lib/types.ml[222,7618+43]..lib/types.ml[222,7618+48]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Char_literal"
                                          [
                                            expression (lib/types.ml[222,7618+43]..lib/types.ml[222,7618+48]) ghost
                                              Texp_constant Const_char 2c
                                            expression (lib/types.ml[222,7618+43]..lib/types.ml[222,7618+48]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                              [
                                                expression (lib/types.ml[222,7618+43]..lib/types.ml[222,7618+48]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Break"
                                                  [
                                                    expression (lib/types.ml[222,7618+43]..lib/types.ml[222,7618+48]) ghost
                                                      Texp_constant Const_string("@,",(lib/types.ml[222,7618+43]..lib/types.ml[222,7618+48]) ghost,None)
                                                    expression (lib/types.ml[222,7618+43]..lib/types.ml[222,7618+48]) ghost
                                                      Texp_constant Const_int 0
                                                    expression (lib/types.ml[222,7618+43]..lib/types.ml[222,7618+48]) ghost
                                                      Texp_constant Const_int 0
                                                  ]
                                                expression (lib/types.ml[222,7618+43]..lib/types.ml[222,7618+48]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                  []
                                              ]
                                          ]
                                        expression (lib/types.ml[222,7618+43]..lib/types.ml[222,7618+48]) ghost
                                          Texp_constant Const_string(",@,",(lib/types.ml[222,7618+43]..lib/types.ml[222,7618+48]) ghost,None)
                                      ]
                                ]
                      ]
                      expression (lib/types.ml[223,7670+4]..lib/types.ml[224,7704+48])
                        Texp_apply
                        expression (lib/types.ml[223,7670+4]..lib/types.ml[223,7670+18])
                          Texp_ident "Stdlib!.Format.fprintf"
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[223,7670+19]..lib/types.ml[223,7670+22])
                              Texp_ident "ppf/2013"
                          <arg>
                            Nolabel
                            expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33])
                              Texp_construct "CamlinternalFormatBasics.Format"
                              [
                                expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                  Texp_construct "CamlinternalFormatBasics.Formatting_gen"
                                  [
                                    expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Open_box"
                                      [
                                        expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Format"
                                          [
                                            expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                              Texp_construct "CamlinternalFormatBasics.End_of_format"
                                              []
                                            expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                              Texp_constant Const_string("",(lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost,None)
                                          ]
                                      ]
                                    expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                      Texp_construct "CamlinternalFormatBasics.Char_literal"
                                      [
                                        expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                          Texp_constant Const_char 28
                                        expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                          Texp_construct "CamlinternalFormatBasics.Alpha"
                                          [
                                            expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                              Texp_construct "CamlinternalFormatBasics.Char_literal"
                                              [
                                                expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                                  Texp_constant Const_char 29
                                                expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                                  Texp_construct "CamlinternalFormatBasics.Formatting_lit"
                                                  [
                                                    expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.Close_box"
                                                      []
                                                    expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                                      Texp_construct "CamlinternalFormatBasics.End_of_format"
                                                      []
                                                  ]
                                              ]
                                          ]
                                      ]
                                  ]
                                expression (lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost
                                  Texp_constant Const_string("@[(%a)@]",(lib/types.ml[223,7670+23]..lib/types.ml[223,7670+33]) ghost,None)
                              ]
                          <arg>
                            Nolabel
                            expression (lib/types.ml[224,7704+6]..lib/types.ml[224,7704+42])
                              Texp_apply
                              expression (lib/types.ml[224,7704+7]..lib/types.ml[224,7704+27])
                                Texp_ident "Stdlib!.Format.pp_print_list"
                              [
                                <arg>
                                  Optional "pp_sep"
                                  expression (lib/types.ml[224,7704+29]..lib/types.ml[224,7704+35])
                                    Texp_construct "Some"
                                    [
                                      expression (lib/types.ml[224,7704+29]..lib/types.ml[224,7704+35])
                                        Texp_ident "pp_sep/2015"
                                    ]
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[224,7704+36]..lib/types.ml[224,7704+41])
                                    Texp_ident "print/1668"
                              ]
                          <arg>
                            Nolabel
                            expression (lib/types.ml[224,7704+43]..lib/types.ml[224,7704+48])
                              Texp_ident "modes/2014"
                        ]
            ]
          structure_item (lib/types.ml[226,7754+2]..lib/types.ml[228,7868+42])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[226,7754+6]..lib/types.ml[226,7754+23])
                  Tpat_var "default_signature/2019"
                expression (lib/types.ml[226,7754+24]..lib/types.ml[228,7868+42]) ghost
                  Texp_function
                  [
                    Labelled "arity"
                    Param_pat
                      pattern (lib/types.ml[226,7754+25]..lib/types.ml[226,7754+30])
                        Tpat_var "arity/2021"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[227,7787+4]..lib/types.ml[228,7868+42])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/types.ml[227,7787+8]..lib/types.ml[227,7787+20])
                            Tpat_var "default_mode/2022"
                          expression (lib/types.ml[227,7787+74]..lib/types.ml[227,7787+77])
                            Texp_construct "Ind"
                            []
                      ]
                      expression (lib/types.ml[228,7868+4]..lib/types.ml[228,7868+42])
                        Texp_apply
                        expression (lib/types.ml[228,7868+4]..lib/types.ml[228,7868+23])
                          Texp_ident "Ocaml_ocaml_types!.Misc.replicate_list"
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[228,7868+24]..lib/types.ml[228,7868+36])
                              Texp_ident "default_mode/2022"
                          <arg>
                            Nolabel
                            expression (lib/types.ml[228,7868+37]..lib/types.ml[228,7868+42])
                              Texp_ident "arity/2021"
                        ]
            ]
        ]
  structure_item (lib/types.ml[233,7940+0]..lib/types.ml[296,9789+41])
    Tstr_type Rec
    [
      type_declaration type_declaration/2024 (lib/types.ml[233,7940+0]..lib/types.ml[248,8416+2])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[234,7964+4]..lib/types.ml[234,7964+32])
                Immutable
                type_params/2033                core_type (lib/types.ml[234,7964+17]..lib/types.ml[234,7964+31])
                  Ttyp_poly
                  core_type (lib/types.ml[234,7964+17]..lib/types.ml[234,7964+31])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[234,7964+17]..lib/types.ml[234,7964+26])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
              (lib/types.ml[235,7997+4]..lib/types.ml[235,7997+20])
                Immutable
                type_arity/2034                core_type (lib/types.ml[235,7997+16]..lib/types.ml[235,7997+19])
                  Ttyp_poly
                  core_type (lib/types.ml[235,7997+16]..lib/types.ml[235,7997+19])
                    Ttyp_constr "int/1!"
                    []
              (lib/types.ml[236,8018+4]..lib/types.ml[236,8018+30])
                Immutable
                type_kind/2035                core_type (lib/types.ml[236,8018+15]..lib/types.ml[236,8018+29])
                  Ttyp_poly
                  core_type (lib/types.ml[236,8018+15]..lib/types.ml[236,8018+29])
                    Ttyp_constr "type_decl_kind/2025"
                    []
              (lib/types.ml[237,8049+4]..lib/types.ml[237,8049+31])
                Immutable
                type_private/2036                core_type (lib/types.ml[237,8049+18]..lib/types.ml[237,8049+30])
                  Ttyp_poly
                  core_type (lib/types.ml[237,8049+18]..lib/types.ml[237,8049+30])
                    Ttyp_constr "Ocaml_ocaml_types!.Asttypes.private_flag"
                    []
              (lib/types.ml[238,8081+4]..lib/types.ml[238,8081+36])
                Immutable
                type_manifest/2037                core_type (lib/types.ml[238,8081+19]..lib/types.ml[238,8081+35])
                  Ttyp_poly
                  core_type (lib/types.ml[238,8081+19]..lib/types.ml[238,8081+35])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[238,8081+19]..lib/types.ml[238,8081+28])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
              (lib/types.ml[239,8118+4]..lib/types.ml[239,8118+35])
                Immutable
                type_variance/2038                core_type (lib/types.ml[239,8118+19]..lib/types.ml[239,8118+34])
                  Ttyp_poly
                  core_type (lib/types.ml[239,8118+19]..lib/types.ml[239,8118+34])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[239,8118+19]..lib/types.ml[239,8118+29])
                        Ttyp_constr "Variance/1649.t"
                        []
                    ]
              (lib/types.ml[240,8154+4]..lib/types.ml[240,8154+43])
                Immutable
                type_separability/2039                core_type (lib/types.ml[240,8154+23]..lib/types.ml[240,8154+42])
                  Ttyp_poly
                  core_type (lib/types.ml[240,8154+23]..lib/types.ml[240,8154+42])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[240,8154+23]..lib/types.ml[240,8154+37])
                        Ttyp_constr "Separability/2023.t"
                        []
                    ]
              (lib/types.ml[241,8198+4]..lib/types.ml[241,8198+26])
                Immutable
                type_is_newtype/2040                core_type (lib/types.ml[241,8198+21]..lib/types.ml[241,8198+25])
                  Ttyp_poly
                  core_type (lib/types.ml[241,8198+21]..lib/types.ml[241,8198+25])
                    Ttyp_constr "bool/5!"
                    []
              (lib/types.ml[242,8225+4]..lib/types.ml[242,8225+30])
                Immutable
                type_expansion_scope/2041                core_type (lib/types.ml[242,8225+26]..lib/types.ml[242,8225+29])
                  Ttyp_poly
                  core_type (lib/types.ml[242,8225+26]..lib/types.ml[242,8225+29])
                    Ttyp_constr "int/1!"
                    []
              (lib/types.ml[243,8256+4]..lib/types.ml[243,8256+25])
                Immutable
                type_loc/2042                core_type (lib/types.ml[243,8256+14]..lib/types.ml[243,8256+24])
                  Ttyp_poly
                  core_type (lib/types.ml[243,8256+14]..lib/types.ml[243,8256+24])
                    Ttyp_constr "Ocaml_ocaml_types!.Location.t"
                    []
              (lib/types.ml[244,8282+4]..lib/types.ml[244,8282+42])
                Immutable
                type_attributes/2043                core_type (lib/types.ml[244,8282+21]..lib/types.ml[244,8282+41])
                  Ttyp_poly
                  core_type (lib/types.ml[244,8282+21]..lib/types.ml[244,8282+41])
                    Ttyp_constr "Ocaml_ocaml_types!.Parsetree.attributes"
                    []
              (lib/types.ml[245,8325+4]..lib/types.ml[245,8325+37])
                Immutable
                type_immediate/2048                core_type (lib/types.ml[245,8325+20]..lib/types.ml[245,8325+36])
                  Ttyp_poly
                  core_type (lib/types.ml[245,8325+20]..lib/types.ml[245,8325+36])
                    Ttyp_constr "Ocaml_ocaml_types!.Type_immediacy.t"
                    []
              (lib/types.ml[246,8363+4]..lib/types.ml[246,8363+31])
                Immutable
                type_unboxed_default/2049                core_type (lib/types.ml[246,8363+26]..lib/types.ml[246,8363+30])
                  Ttyp_poly
                  core_type (lib/types.ml[246,8363+26]..lib/types.ml[246,8363+30])
                    Ttyp_constr "bool/5!"
                    []
              (lib/types.ml[247,8395+4]..lib/types.ml[247,8395+20])
                Immutable
                type_uid/2050                core_type (lib/types.ml[247,8395+14]..lib/types.ml[247,8395+19])
                  Ttyp_poly
                  core_type (lib/types.ml[247,8395+14]..lib/types.ml[247,8395+19])
                    Ttyp_constr "Uid/472.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration type_decl_kind/2025 (lib/types.ml[250,8420+0]..lib/types.ml[250,8420+75])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[250,8420+21]..lib/types.ml[250,8420+75])
              Ttyp_constr "type_kind/2026"
              [
                core_type (lib/types.ml[250,8420+22]..lib/types.ml[250,8420+39])
                  Ttyp_constr "label_declaration/2030"
                  []
                core_type (lib/types.ml[250,8420+41]..lib/types.ml[250,8420+64])
                  Ttyp_constr "constructor_declaration/2031"
                  []
              ]
      type_declaration type_kind/2026 (lib/types.ml[252,8497+0]..lib/types.ml[256,8669+13])
        ptype_params =
          [
            core_type (lib/types.ml[252,8497+5]..lib/types.ml[252,8497+9])
              Ttyp_var lbl
            core_type (lib/types.ml[252,8497+11]..lib/types.ml[252,8497+16])
              Ttyp_var cstr
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[253,8527+4]..lib/types.ml[253,8527+32])
                Type_abstract/2051
                [
                  core_type (lib/types.ml[253,8527+21]..lib/types.ml[253,8527+32])
                    Ttyp_constr "type_origin/2027"
                    []
                ]
                None
              (lib/types.ml[254,8560+2]..lib/types.ml[254,8560+52])
                Type_record/2052
                [
                  core_type (lib/types.ml[254,8560+19]..lib/types.ml[254,8560+28])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[254,8560+19]..lib/types.ml[254,8560+23])
                        Ttyp_var lbl
                    ]
                  core_type (lib/types.ml[254,8560+31]..lib/types.ml[254,8560+52])
                    Ttyp_constr "record_representation/2028"
                    []
                ]
                None
              (lib/types.ml[255,8613+2]..lib/types.ml[255,8613+55])
                Type_variant/2053
                [
                  core_type (lib/types.ml[255,8613+20]..lib/types.ml[255,8613+30])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[255,8613+20]..lib/types.ml[255,8613+25])
                        Ttyp_var cstr
                    ]
                  core_type (lib/types.ml[255,8613+33]..lib/types.ml[255,8613+55])
                    Ttyp_constr "variant_representation/2029"
                    []
                ]
                None
              (lib/types.ml[256,8669+2]..lib/types.ml[256,8669+13])
                Type_open/2054
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration type_origin/2027 (lib/types.ml[258,8684+0]..lib/types.ml[261,8742+25])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[259,8702+4]..lib/types.ml[259,8702+14])
                Definition/2055
                []
                None
              (lib/types.ml[260,8717+2]..lib/types.ml[260,8717+24])
                Rec_check_regularity/2056
                []
                None
              (lib/types.ml[261,8742+2]..lib/types.ml[261,8742+25])
                Existential/2057
                [
                  core_type (lib/types.ml[261,8742+19]..lib/types.ml[261,8742+25])
                    Ttyp_constr "string/15!"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration record_representation/2028 (lib/types.ml[263,8769+0]..lib/types.ml[268,9082+30])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[264,8797+4]..lib/types.ml[264,8797+18])
                Record_regular/2058
                []
                None
              (lib/types.ml[265,8873+2]..lib/types.ml[265,8873+16])
                Record_float/2059
                []
                None
              (lib/types.ml[266,8941+2]..lib/types.ml[266,8941+26])
                Record_unboxed/2060
                [
                  core_type (lib/types.ml[266,8941+22]..lib/types.ml[266,8941+26])
                    Ttyp_constr "bool/5!"
                    []
                ]
                None
              (lib/types.ml[267,9021+2]..lib/types.ml[267,9021+25])
                Record_inlined/2061
                [
                  core_type (lib/types.ml[267,9021+22]..lib/types.ml[267,9021+25])
                    Ttyp_constr "int/1!"
                    []
                ]
                None
              (lib/types.ml[268,9082+2]..lib/types.ml[268,9082+30])
                Record_extension/2062
                [
                  core_type (lib/types.ml[268,9082+24]..lib/types.ml[268,9082+30])
                    Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration variant_representation/2029 (lib/types.ml[270,9160+0]..lib/types.ml[272,9255+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[271,9189+4]..lib/types.ml[271,9189+19])
                Variant_regular/2063
                []
                None
              (lib/types.ml[272,9255+2]..lib/types.ml[272,9255+19])
                Variant_unboxed/2064
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration label_declaration/2030 (lib/types.ml[274,9328+0]..lib/types.ml[282,9514+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[276,9356+4]..lib/types.ml[276,9356+19])
                Immutable
                ld_id/2065                core_type (lib/types.ml[276,9356+11]..lib/types.ml[276,9356+18])
                  Ttyp_poly
                  core_type (lib/types.ml[276,9356+11]..lib/types.ml[276,9356+18])
                    Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                    []
              (lib/types.ml[277,9376+4]..lib/types.ml[277,9376+29])
                Immutable
                ld_mutable/2066                core_type (lib/types.ml[277,9376+16]..lib/types.ml[277,9376+28])
                  Ttyp_poly
                  core_type (lib/types.ml[277,9376+16]..lib/types.ml[277,9376+28])
                    Ttyp_constr "Ocaml_ocaml_types!.Asttypes.mutable_flag"
                    []
              (lib/types.ml[278,9406+4]..lib/types.ml[278,9406+23])
                Immutable
                ld_type/2067                core_type (lib/types.ml[278,9406+13]..lib/types.ml[278,9406+22])
                  Ttyp_poly
                  core_type (lib/types.ml[278,9406+13]..lib/types.ml[278,9406+22])
                    Ttyp_constr "type_expr/314"
                    []
              (lib/types.ml[279,9430+4]..lib/types.ml[279,9430+23])
                Immutable
                ld_loc/2068                core_type (lib/types.ml[279,9430+12]..lib/types.ml[279,9430+22])
                  Ttyp_poly
                  core_type (lib/types.ml[279,9430+12]..lib/types.ml[279,9430+22])
                    Ttyp_constr "Ocaml_ocaml_types!.Location.t"
                    []
              (lib/types.ml[280,9454+4]..lib/types.ml[280,9454+40])
                Immutable
                ld_attributes/2069                core_type (lib/types.ml[280,9454+19]..lib/types.ml[280,9454+39])
                  Ttyp_poly
                  core_type (lib/types.ml[280,9454+19]..lib/types.ml[280,9454+39])
                    Ttyp_constr "Ocaml_ocaml_types!.Parsetree.attributes"
                    []
              (lib/types.ml[281,9495+4]..lib/types.ml[281,9495+18])
                Immutable
                ld_uid/2070                core_type (lib/types.ml[281,9495+12]..lib/types.ml[281,9495+17])
                  Ttyp_poly
                  core_type (lib/types.ml[281,9495+12]..lib/types.ml[281,9495+17])
                    Ttyp_constr "Uid/472.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration constructor_declaration/2031 (lib/types.ml[284,9519+0]..lib/types.ml[292,9723+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[286,9553+4]..lib/types.ml[286,9553+19])
                Immutable
                cd_id/2071                core_type (lib/types.ml[286,9553+11]..lib/types.ml[286,9553+18])
                  Ttyp_poly
                  core_type (lib/types.ml[286,9553+11]..lib/types.ml[286,9553+18])
                    Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                    []
              (lib/types.ml[287,9573+4]..lib/types.ml[287,9573+35])
                Immutable
                cd_args/2072                core_type (lib/types.ml[287,9573+13]..lib/types.ml[287,9573+34])
                  Ttyp_poly
                  core_type (lib/types.ml[287,9573+13]..lib/types.ml[287,9573+34])
                    Ttyp_constr "constructor_arguments/2032"
                    []
              (lib/types.ml[288,9609+4]..lib/types.ml[288,9609+29])
                Immutable
                cd_res/2073                core_type (lib/types.ml[288,9609+12]..lib/types.ml[288,9609+28])
                  Ttyp_poly
                  core_type (lib/types.ml[288,9609+12]..lib/types.ml[288,9609+28])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[288,9609+12]..lib/types.ml[288,9609+21])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
              (lib/types.ml[289,9639+4]..lib/types.ml[289,9639+23])
                Immutable
                cd_loc/2074                core_type (lib/types.ml[289,9639+12]..lib/types.ml[289,9639+22])
                  Ttyp_poly
                  core_type (lib/types.ml[289,9639+12]..lib/types.ml[289,9639+22])
                    Ttyp_constr "Ocaml_ocaml_types!.Location.t"
                    []
              (lib/types.ml[290,9663+4]..lib/types.ml[290,9663+40])
                Immutable
                cd_attributes/2075                core_type (lib/types.ml[290,9663+19]..lib/types.ml[290,9663+39])
                  Ttyp_poly
                  core_type (lib/types.ml[290,9663+19]..lib/types.ml[290,9663+39])
                    Ttyp_constr "Ocaml_ocaml_types!.Parsetree.attributes"
                    []
              (lib/types.ml[291,9704+4]..lib/types.ml[291,9704+18])
                Immutable
                cd_uid/2076                core_type (lib/types.ml[291,9704+12]..lib/types.ml[291,9704+17])
                  Ttyp_poly
                  core_type (lib/types.ml[291,9704+12]..lib/types.ml[291,9704+17])
                    Ttyp_constr "Uid/472.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration constructor_arguments/2032 (lib/types.ml[294,9728+0]..lib/types.ml[296,9789+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[295,9756+2]..lib/types.ml[295,9756+32])
                Cstr_tuple/2077
                [
                  core_type (lib/types.ml[295,9756+18]..lib/types.ml[295,9756+32])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[295,9756+18]..lib/types.ml[295,9756+27])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
                ]
                None
              (lib/types.ml[296,9789+2]..lib/types.ml[296,9789+41])
                Cstr_record/2078
                [
                  core_type (lib/types.ml[296,9789+19]..lib/types.ml[296,9789+41])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[296,9789+19]..lib/types.ml[296,9789+36])
                        Ttyp_constr "label_declaration/2030"
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[298,9832+0]..lib/types.ml[312,10233+16])
    Tstr_type Rec
    [
      type_declaration extension_constructor/2083 (lib/types.ml[298,9832+0]..lib/types.ml[307,10116+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[299,9861+4]..lib/types.ml[299,9861+26])
                Immutable
                ext_type_path/2085                core_type (lib/types.ml[299,9861+19]..lib/types.ml[299,9861+25])
                  Ttyp_poly
                  core_type (lib/types.ml[299,9861+19]..lib/types.ml[299,9861+25])
                    Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                    []
              (lib/types.ml[300,9888+4]..lib/types.ml[300,9888+36])
                Immutable
                ext_type_params/2086                core_type (lib/types.ml[300,9888+21]..lib/types.ml[300,9888+35])
                  Ttyp_poly
                  core_type (lib/types.ml[300,9888+21]..lib/types.ml[300,9888+35])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[300,9888+21]..lib/types.ml[300,9888+30])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
              (lib/types.ml[301,9925+4]..lib/types.ml[301,9925+36])
                Immutable
                ext_args/2087                core_type (lib/types.ml[301,9925+14]..lib/types.ml[301,9925+35])
                  Ttyp_poly
                  core_type (lib/types.ml[301,9925+14]..lib/types.ml[301,9925+35])
                    Ttyp_constr "constructor_arguments/2032"
                    []
              (lib/types.ml[302,9962+4]..lib/types.ml[302,9962+35])
                Immutable
                ext_ret_type/2088                core_type (lib/types.ml[302,9962+18]..lib/types.ml[302,9962+34])
                  Ttyp_poly
                  core_type (lib/types.ml[302,9962+18]..lib/types.ml[302,9962+34])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[302,9962+18]..lib/types.ml[302,9962+27])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
              (lib/types.ml[303,9998+4]..lib/types.ml[303,9998+30])
                Immutable
                ext_private/2089                core_type (lib/types.ml[303,9998+17]..lib/types.ml[303,9998+29])
                  Ttyp_poly
                  core_type (lib/types.ml[303,9998+17]..lib/types.ml[303,9998+29])
                    Ttyp_constr "Ocaml_ocaml_types!.Asttypes.private_flag"
                    []
              (lib/types.ml[304,10029+4]..lib/types.ml[304,10029+24])
                Immutable
                ext_loc/2090                core_type (lib/types.ml[304,10029+13]..lib/types.ml[304,10029+23])
                  Ttyp_poly
                  core_type (lib/types.ml[304,10029+13]..lib/types.ml[304,10029+23])
                    Ttyp_constr "Ocaml_ocaml_types!.Location.t"
                    []
              (lib/types.ml[305,10054+4]..lib/types.ml[305,10054+41])
                Immutable
                ext_attributes/2091                core_type (lib/types.ml[305,10054+20]..lib/types.ml[305,10054+40])
                  Ttyp_poly
                  core_type (lib/types.ml[305,10054+20]..lib/types.ml[305,10054+40])
                    Ttyp_constr "Ocaml_ocaml_types!.Parsetree.attributes"
                    []
              (lib/types.ml[306,10096+4]..lib/types.ml[306,10096+19])
                Immutable
                ext_uid/2092                core_type (lib/types.ml[306,10096+13]..lib/types.ml[306,10096+18])
                  Ttyp_poly
                  core_type (lib/types.ml[306,10096+13]..lib/types.ml[306,10096+18])
                    Ttyp_constr "Uid/472.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration type_transparence/2084 (lib/types.ml[309,10121+0]..lib/types.ml[312,10233+16])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[310,10145+4]..lib/types.ml[310,10145+15])
                Type_public/2093
                []
                None
              (lib/types.ml[311,10195+2]..lib/types.ml[311,10195+12])
                Type_new/2094
                []
                None
              (lib/types.ml[312,10233+2]..lib/types.ml[312,10233+16])
                Type_private/2095
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[316,10321+0]..lib/types.ml[319,10431+51])
    Tstr_type Rec
    [
      type_declaration class_type/2096 (lib/types.ml[316,10321+0]..lib/types.ml[319,10431+51])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[317,10339+4]..lib/types.ml[317,10339+54])
                Cty_constr/2097
                [
                  core_type (lib/types.ml[317,10339+18]..lib/types.ml[317,10339+24])
                    Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                    []
                  core_type (lib/types.ml[317,10339+27]..lib/types.ml[317,10339+41])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[317,10339+27]..lib/types.ml[317,10339+36])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
                  core_type (lib/types.ml[317,10339+44]..lib/types.ml[317,10339+54])
                    Ttyp_constr "class_type/2096"
                    []
                ]
                None
              (lib/types.ml[318,10394+2]..lib/types.ml[318,10394+36])
                Cty_signature/2098
                [
                  core_type (lib/types.ml[318,10394+21]..lib/types.ml[318,10394+36])
                    Ttyp_constr "class_signature/713"
                    []
                ]
                None
              (lib/types.ml[319,10431+2]..lib/types.ml[319,10431+51])
                Cty_arrow/2099
                [
                  core_type (lib/types.ml[319,10431+17]..lib/types.ml[319,10431+26])
                    Ttyp_constr "Ocaml_ocaml_types!.Asttypes.arg_label"
                    []
                  core_type (lib/types.ml[319,10431+29]..lib/types.ml[319,10431+38])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[319,10431+41]..lib/types.ml[319,10431+51])
                    Ttyp_constr "class_type/2096"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[321,10484+0]..lib/types.ml[330,10750+2])
    Tstr_type Rec
    [
      type_declaration class_declaration/2100 (lib/types.ml[321,10484+0]..lib/types.ml[330,10750+2])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[322,10509+4]..lib/types.ml[322,10509+31])
                Immutable
                cty_params/2101                core_type (lib/types.ml[322,10509+16]..lib/types.ml[322,10509+30])
                  Ttyp_poly
                  core_type (lib/types.ml[322,10509+16]..lib/types.ml[322,10509+30])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[322,10509+16]..lib/types.ml[322,10509+25])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
              (lib/types.ml[323,10541+4]..lib/types.ml[323,10541+33])
                Mutable
                cty_type/2102                core_type (lib/types.ml[323,10541+22]..lib/types.ml[323,10541+32])
                  Ttyp_poly
                  core_type (lib/types.ml[323,10541+22]..lib/types.ml[323,10541+32])
                    Ttyp_constr "class_type/2096"
                    []
              (lib/types.ml[324,10575+4]..lib/types.ml[324,10575+21])
                Immutable
                cty_path/2103                core_type (lib/types.ml[324,10575+14]..lib/types.ml[324,10575+20])
                  Ttyp_poly
                  core_type (lib/types.ml[324,10575+14]..lib/types.ml[324,10575+20])
                    Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                    []
              (lib/types.ml[325,10597+4]..lib/types.ml[325,10597+30])
                Immutable
                cty_new/2104                core_type (lib/types.ml[325,10597+13]..lib/types.ml[325,10597+29])
                  Ttyp_poly
                  core_type (lib/types.ml[325,10597+13]..lib/types.ml[325,10597+29])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[325,10597+13]..lib/types.ml[325,10597+22])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
              (lib/types.ml[326,10628+4]..lib/types.ml[326,10628+34])
                Immutable
                cty_variance/2105                core_type (lib/types.ml[326,10628+18]..lib/types.ml[326,10628+33])
                  Ttyp_poly
                  core_type (lib/types.ml[326,10628+18]..lib/types.ml[326,10628+33])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[326,10628+18]..lib/types.ml[326,10628+28])
                        Ttyp_constr "Variance/1649.t"
                        []
                    ]
              (lib/types.ml[327,10663+4]..lib/types.ml[327,10663+24])
                Immutable
                cty_loc/2106                core_type (lib/types.ml[327,10663+13]..lib/types.ml[327,10663+23])
                  Ttyp_poly
                  core_type (lib/types.ml[327,10663+13]..lib/types.ml[327,10663+23])
                    Ttyp_constr "Ocaml_ocaml_types!.Location.t"
                    []
              (lib/types.ml[328,10688+4]..lib/types.ml[328,10688+41])
                Immutable
                cty_attributes/2107                core_type (lib/types.ml[328,10688+20]..lib/types.ml[328,10688+40])
                  Ttyp_poly
                  core_type (lib/types.ml[328,10688+20]..lib/types.ml[328,10688+40])
                    Ttyp_constr "Ocaml_ocaml_types!.Parsetree.attributes"
                    []
              (lib/types.ml[329,10730+4]..lib/types.ml[329,10730+19])
                Immutable
                cty_uid/2108                core_type (lib/types.ml[329,10730+13]..lib/types.ml[329,10730+18])
                  Ttyp_poly
                  core_type (lib/types.ml[329,10730+13]..lib/types.ml[329,10730+18])
                    Ttyp_constr "Uid/472.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[332,10754+0]..lib/types.ml[341,11031+3])
    Tstr_type Rec
    [
      type_declaration class_type_declaration/2109 (lib/types.ml[332,10754+0]..lib/types.ml[341,11031+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[333,10784+4]..lib/types.ml[333,10784+32])
                Immutable
                clty_params/2110                core_type (lib/types.ml[333,10784+17]..lib/types.ml[333,10784+31])
                  Ttyp_poly
                  core_type (lib/types.ml[333,10784+17]..lib/types.ml[333,10784+31])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[333,10784+17]..lib/types.ml[333,10784+26])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
              (lib/types.ml[334,10817+4]..lib/types.ml[334,10817+26])
                Immutable
                clty_type/2111                core_type (lib/types.ml[334,10817+15]..lib/types.ml[334,10817+25])
                  Ttyp_poly
                  core_type (lib/types.ml[334,10817+15]..lib/types.ml[334,10817+25])
                    Ttyp_constr "class_type/2096"
                    []
              (lib/types.ml[335,10844+4]..lib/types.ml[335,10844+22])
                Immutable
                clty_path/2112                core_type (lib/types.ml[335,10844+15]..lib/types.ml[335,10844+21])
                  Ttyp_poly
                  core_type (lib/types.ml[335,10844+15]..lib/types.ml[335,10844+21])
                    Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                    []
              (lib/types.ml[336,10867+4]..lib/types.ml[336,10867+37])
                Immutable
                clty_hash_type/2113                core_type (lib/types.ml[336,10867+20]..lib/types.ml[336,10867+36])
                  Ttyp_poly
                  core_type (lib/types.ml[336,10867+20]..lib/types.ml[336,10867+36])
                    Ttyp_constr "type_declaration/2024"
                    []
              (lib/types.ml[337,10905+4]..lib/types.ml[337,10905+35])
                Immutable
                clty_variance/2114                core_type (lib/types.ml[337,10905+19]..lib/types.ml[337,10905+34])
                  Ttyp_poly
                  core_type (lib/types.ml[337,10905+19]..lib/types.ml[337,10905+34])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[337,10905+19]..lib/types.ml[337,10905+29])
                        Ttyp_constr "Variance/1649.t"
                        []
                    ]
              (lib/types.ml[338,10941+4]..lib/types.ml[338,10941+25])
                Immutable
                clty_loc/2115                core_type (lib/types.ml[338,10941+14]..lib/types.ml[338,10941+24])
                  Ttyp_poly
                  core_type (lib/types.ml[338,10941+14]..lib/types.ml[338,10941+24])
                    Ttyp_constr "Ocaml_ocaml_types!.Location.t"
                    []
              (lib/types.ml[339,10967+4]..lib/types.ml[339,10967+42])
                Immutable
                clty_attributes/2116                core_type (lib/types.ml[339,10967+21]..lib/types.ml[339,10967+41])
                  Ttyp_poly
                  core_type (lib/types.ml[339,10967+21]..lib/types.ml[339,10967+41])
                    Ttyp_constr "Ocaml_ocaml_types!.Parsetree.attributes"
                    []
              (lib/types.ml[340,11010+4]..lib/types.ml[340,11010+20])
                Immutable
                clty_uid/2117                core_type (lib/types.ml[340,11010+14]..lib/types.ml[340,11010+19])
                  Ttyp_poly
                  core_type (lib/types.ml[340,11010+14]..lib/types.ml[340,11010+19])
                    Ttyp_constr "Uid/472.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[345,11084+0]..lib/types.ml[347,11115+10])
    Tstr_type Rec
    [
      type_declaration visibility/2118 (lib/types.ml[345,11084+0]..lib/types.ml[347,11115+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[346,11102+2]..lib/types.ml[346,11102+12])
                Exported/2119
                []
                None
              (lib/types.ml[347,11115+2]..lib/types.ml[347,11115+10])
                Hidden/2120
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[349,11127+0]..lib/types.ml[399,12701+18])
    Tstr_type Rec
    [
      type_declaration module_type/2121 (lib/types.ml[349,11127+0]..lib/types.ml[353,11252+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[350,11146+4]..lib/types.ml[350,11146+23])
                Mty_ident/2130
                [
                  core_type (lib/types.ml[350,11146+17]..lib/types.ml[350,11146+23])
                    Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                    []
                ]
                None
              (lib/types.ml[351,11170+2]..lib/types.ml[351,11170+30])
                Mty_signature/2131
                [
                  core_type (lib/types.ml[351,11170+21]..lib/types.ml[351,11170+30])
                    Ttyp_constr "signature/2124"
                    []
                ]
                None
              (lib/types.ml[352,11201+2]..lib/types.ml[352,11201+50])
                Mty_functor/2132
                [
                  core_type (lib/types.ml[352,11201+19]..lib/types.ml[352,11201+36])
                    Ttyp_constr "functor_parameter/2122"
                    []
                  core_type (lib/types.ml[352,11201+39]..lib/types.ml[352,11201+50])
                    Ttyp_constr "module_type/2121"
                    []
                ]
                None
              (lib/types.ml[353,11252+2]..lib/types.ml[353,11252+23])
                Mty_alias/2133
                [
                  core_type (lib/types.ml[353,11252+17]..lib/types.ml[353,11252+23])
                    Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration functor_parameter/2122 (lib/types.ml[355,11277+0]..lib/types.ml[357,11310+41])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[356,11301+2]..lib/types.ml[356,11301+8])
                Unit/2134
                []
                None
              (lib/types.ml[357,11310+2]..lib/types.ml[357,11310+41])
                Named/2135
                [
                  core_type (lib/types.ml[357,11310+13]..lib/types.ml[357,11310+27])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[357,11310+13]..lib/types.ml[357,11310+20])
                        Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                        []
                    ]
                  core_type (lib/types.ml[357,11310+30]..lib/types.ml[357,11310+41])
                    Ttyp_constr "module_type/2121"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration module_presence/2123 (lib/types.ml[359,11353+0]..lib/types.ml[361,11390+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[360,11375+2]..lib/types.ml[360,11375+14])
                Mp_present/2136
                []
                None
              (lib/types.ml[361,11390+2]..lib/types.ml[361,11390+13])
                Mp_absent/2137
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration signature/2124 (lib/types.ml[363,11405+0]..lib/types.ml[363,11405+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[363,11405+16]..lib/types.ml[363,11405+35])
              Ttyp_constr "list/9!"
              [
                core_type (lib/types.ml[363,11405+16]..lib/types.ml[363,11405+30])
                  Ttyp_constr "signature_item/2125"
                  []
              ]
      type_declaration signature_item/2125 (lib/types.ml[365,11442+0]..lib/types.ml[373,11896+80])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[366,11463+4]..lib/types.ml[366,11463+57])
                Sig_value/2138
                [
                  core_type (lib/types.ml[366,11463+17]..lib/types.ml[366,11463+24])
                    Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                    []
                  core_type (lib/types.ml[366,11463+27]..lib/types.ml[366,11463+44])
                    Ttyp_constr "value_description/710"
                    []
                  core_type (lib/types.ml[366,11463+47]..lib/types.ml[366,11463+57])
                    Ttyp_constr "visibility/2118"
                    []
                ]
                None
              (lib/types.ml[367,11521+2]..lib/types.ml[367,11521+68])
                Sig_type/2139
                [
                  core_type (lib/types.ml[367,11521+16]..lib/types.ml[367,11521+23])
                    Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                    []
                  core_type (lib/types.ml[367,11521+26]..lib/types.ml[367,11521+42])
                    Ttyp_constr "type_declaration/2024"
                    []
                  core_type (lib/types.ml[367,11521+45]..lib/types.ml[367,11521+55])
                    Ttyp_constr "rec_status/2128"
                    []
                  core_type (lib/types.ml[367,11521+58]..lib/types.ml[367,11521+68])
                    Ttyp_constr "visibility/2118"
                    []
                ]
                None
              (lib/types.ml[368,11590+2]..lib/types.ml[368,11590+75])
                Sig_typext/2140
                [
                  core_type (lib/types.ml[368,11590+18]..lib/types.ml[368,11590+25])
                    Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                    []
                  core_type (lib/types.ml[368,11590+28]..lib/types.ml[368,11590+49])
                    Ttyp_constr "extension_constructor/2083"
                    []
                  core_type (lib/types.ml[368,11590+52]..lib/types.ml[368,11590+62])
                    Ttyp_constr "ext_status/2129"
                    []
                  core_type (lib/types.ml[368,11590+65]..lib/types.ml[368,11590+75])
                    Ttyp_constr "visibility/2118"
                    []
                ]
                None
              (lib/types.ml[369,11666+2]..lib/types.ml[370,11684+78])
                Sig_module/2141
                [
                  core_type (lib/types.ml[370,11684+6]..lib/types.ml[370,11684+13])
                    Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                    []
                  core_type (lib/types.ml[370,11684+16]..lib/types.ml[370,11684+31])
                    Ttyp_constr "module_presence/2123"
                    []
                  core_type (lib/types.ml[370,11684+34]..lib/types.ml[370,11684+52])
                    Ttyp_constr "module_declaration/2126"
                    []
                  core_type (lib/types.ml[370,11684+55]..lib/types.ml[370,11684+65])
                    Ttyp_constr "rec_status/2128"
                    []
                  core_type (lib/types.ml[370,11684+68]..lib/types.ml[370,11684+78])
                    Ttyp_constr "visibility/2118"
                    []
                ]
                None
              (lib/types.ml[371,11763+2]..lib/types.ml[371,11763+61])
                Sig_modtype/2142
                [
                  core_type (lib/types.ml[371,11763+19]..lib/types.ml[371,11763+26])
                    Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                    []
                  core_type (lib/types.ml[371,11763+29]..lib/types.ml[371,11763+48])
                    Ttyp_constr "modtype_declaration/2127"
                    []
                  core_type (lib/types.ml[371,11763+51]..lib/types.ml[371,11763+61])
                    Ttyp_constr "visibility/2118"
                    []
                ]
                None
              (lib/types.ml[372,11825+2]..lib/types.ml[372,11825+70])
                Sig_class/2143
                [
                  core_type (lib/types.ml[372,11825+17]..lib/types.ml[372,11825+24])
                    Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                    []
                  core_type (lib/types.ml[372,11825+27]..lib/types.ml[372,11825+44])
                    Ttyp_constr "class_declaration/2100"
                    []
                  core_type (lib/types.ml[372,11825+47]..lib/types.ml[372,11825+57])
                    Ttyp_constr "rec_status/2128"
                    []
                  core_type (lib/types.ml[372,11825+60]..lib/types.ml[372,11825+70])
                    Ttyp_constr "visibility/2118"
                    []
                ]
                None
              (lib/types.ml[373,11896+2]..lib/types.ml[373,11896+80])
                Sig_class_type/2144
                [
                  core_type (lib/types.ml[373,11896+22]..lib/types.ml[373,11896+29])
                    Ttyp_constr "Ocaml_ocaml_types!.Ident.t"
                    []
                  core_type (lib/types.ml[373,11896+32]..lib/types.ml[373,11896+54])
                    Ttyp_constr "class_type_declaration/2109"
                    []
                  core_type (lib/types.ml[373,11896+57]..lib/types.ml[373,11896+67])
                    Ttyp_constr "rec_status/2128"
                    []
                  core_type (lib/types.ml[373,11896+70]..lib/types.ml[373,11896+80])
                    Ttyp_constr "visibility/2118"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration module_declaration/2126 (lib/types.ml[375,11978+0]..lib/types.ml[381,12117+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[377,12007+4]..lib/types.ml[377,12007+25])
                Immutable
                md_type/2145                core_type (lib/types.ml[377,12007+13]..lib/types.ml[377,12007+24])
                  Ttyp_poly
                  core_type (lib/types.ml[377,12007+13]..lib/types.ml[377,12007+24])
                    Ttyp_constr "module_type/2121"
                    []
              (lib/types.ml[378,12033+4]..lib/types.ml[378,12033+40])
                Immutable
                md_attributes/2146                core_type (lib/types.ml[378,12033+19]..lib/types.ml[378,12033+39])
                  Ttyp_poly
                  core_type (lib/types.ml[378,12033+19]..lib/types.ml[378,12033+39])
                    Ttyp_constr "Ocaml_ocaml_types!.Parsetree.attributes"
                    []
              (lib/types.ml[379,12074+4]..lib/types.ml[379,12074+23])
                Immutable
                md_loc/2147                core_type (lib/types.ml[379,12074+12]..lib/types.ml[379,12074+22])
                  Ttyp_poly
                  core_type (lib/types.ml[379,12074+12]..lib/types.ml[379,12074+22])
                    Ttyp_constr "Ocaml_ocaml_types!.Location.t"
                    []
              (lib/types.ml[380,12098+4]..lib/types.ml[380,12098+18])
                Immutable
                md_uid/2148                core_type (lib/types.ml[380,12098+12]..lib/types.ml[380,12098+17])
                  Ttyp_poly
                  core_type (lib/types.ml[380,12098+12]..lib/types.ml[380,12098+17])
                    Ttyp_constr "Uid/472.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration modtype_declaration/2127 (lib/types.ml[383,12122+0]..lib/types.ml[389,12295+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[385,12152+4]..lib/types.ml[385,12152+33])
                Immutable
                mtd_type/2149                core_type (lib/types.ml[385,12152+14]..lib/types.ml[385,12152+32])
                  Ttyp_poly
                  core_type (lib/types.ml[385,12152+14]..lib/types.ml[385,12152+32])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[385,12152+14]..lib/types.ml[385,12152+25])
                        Ttyp_constr "module_type/2121"
                        []
                    ]
              (lib/types.ml[386,12208+4]..lib/types.ml[386,12208+41])
                Immutable
                mtd_attributes/2150                core_type (lib/types.ml[386,12208+20]..lib/types.ml[386,12208+40])
                  Ttyp_poly
                  core_type (lib/types.ml[386,12208+20]..lib/types.ml[386,12208+40])
                    Ttyp_constr "Ocaml_ocaml_types!.Parsetree.attributes"
                    []
              (lib/types.ml[387,12250+4]..lib/types.ml[387,12250+24])
                Immutable
                mtd_loc/2151                core_type (lib/types.ml[387,12250+13]..lib/types.ml[387,12250+23])
                  Ttyp_poly
                  core_type (lib/types.ml[387,12250+13]..lib/types.ml[387,12250+23])
                    Ttyp_constr "Ocaml_ocaml_types!.Location.t"
                    []
              (lib/types.ml[388,12275+4]..lib/types.ml[388,12275+19])
                Immutable
                mtd_uid/2152                core_type (lib/types.ml[388,12275+13]..lib/types.ml[388,12275+18])
                  Ttyp_poly
                  core_type (lib/types.ml[388,12275+13]..lib/types.ml[388,12275+18])
                    Ttyp_constr "Uid/472.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration rec_status/2128 (lib/types.ml[391,12300+0]..lib/types.ml[394,12448+13])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[392,12317+4]..lib/types.ml[392,12317+12])
                Trec_not/2153
                []
                None
              (lib/types.ml[393,12384+2]..lib/types.ml[393,12384+14])
                Trec_first/2154
                []
                None
              (lib/types.ml[394,12448+2]..lib/types.ml[394,12448+13])
                Trec_next/2155
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration ext_status/2129 (lib/types.ml[396,12530+0]..lib/types.ml[399,12701+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[397,12547+4]..lib/types.ml[397,12547+14])
                Text_first/2156
                []
                None
              (lib/types.ml[398,12622+2]..lib/types.ml[398,12622+13])
                Text_next/2157
                []
                None
              (lib/types.ml[399,12701+2]..lib/types.ml[399,12701+18])
                Text_exception/2158
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[405,12846+0]..lib/types.ml[426,13959+35])
    Tstr_type Rec
    [
      type_declaration constructor_description/2159 (lib/types.ml[405,12846+0]..lib/types.ml[420,13702+4])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[406,12877+4]..lib/types.ml[406,12877+22])
                Immutable
                cstr_name/2161                core_type (lib/types.ml[406,12877+15]..lib/types.ml[406,12877+21])
                  Ttyp_poly
                  core_type (lib/types.ml[406,12877+15]..lib/types.ml[406,12877+21])
                    Ttyp_constr "string/15!"
                    []
              (lib/types.ml[407,12940+4]..lib/types.ml[407,12940+24])
                Immutable
                cstr_res/2162                core_type (lib/types.ml[407,12940+14]..lib/types.ml[407,12940+23])
                  Ttyp_poly
                  core_type (lib/types.ml[407,12940+14]..lib/types.ml[407,12940+23])
                    Ttyp_constr "type_expr/314"
                    []
              (lib/types.ml[408,13005+4]..lib/types.ml[408,13005+38])
                Immutable
                cstr_existentials/2163                core_type (lib/types.ml[408,13005+23]..lib/types.ml[408,13005+37])
                  Ttyp_poly
                  core_type (lib/types.ml[408,13005+23]..lib/types.ml[408,13005+37])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[408,13005+23]..lib/types.ml[408,13005+32])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
              (lib/types.ml[409,13072+4]..lib/types.ml[409,13072+30])
                Immutable
                cstr_args/2164                core_type (lib/types.ml[409,13072+15]..lib/types.ml[409,13072+29])
                  Ttyp_poly
                  core_type (lib/types.ml[409,13072+15]..lib/types.ml[409,13072+29])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[409,13072+15]..lib/types.ml[409,13072+24])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
              (lib/types.ml[410,13140+4]..lib/types.ml[410,13140+20])
                Immutable
                cstr_arity/2165                core_type (lib/types.ml[410,13140+16]..lib/types.ml[410,13140+19])
                  Ttyp_poly
                  core_type (lib/types.ml[410,13140+16]..lib/types.ml[410,13140+19])
                    Ttyp_constr "int/1!"
                    []
              (lib/types.ml[411,13206+4]..lib/types.ml[411,13206+30])
                Immutable
                cstr_tag/2166                core_type (lib/types.ml[411,13206+14]..lib/types.ml[411,13206+29])
                  Ttyp_poly
                  core_type (lib/types.ml[411,13206+14]..lib/types.ml[411,13206+29])
                    Ttyp_constr "constructor_tag/2160"
                    []
              (lib/types.ml[412,13272+4]..lib/types.ml[412,13272+21])
                Immutable
                cstr_consts/2167                core_type (lib/types.ml[412,13272+17]..lib/types.ml[412,13272+20])
                  Ttyp_poly
                  core_type (lib/types.ml[412,13272+17]..lib/types.ml[412,13272+20])
                    Ttyp_constr "int/1!"
                    []
              (lib/types.ml[413,13350+4]..lib/types.ml[413,13350+24])
                Immutable
                cstr_nonconsts/2168                core_type (lib/types.ml[413,13350+20]..lib/types.ml[413,13350+23])
                  Ttyp_poly
                  core_type (lib/types.ml[413,13350+20]..lib/types.ml[413,13350+23])
                    Ttyp_constr "int/1!"
                    []
              (lib/types.ml[414,13429+4]..lib/types.ml[414,13429+27])
                Immutable
                cstr_generalized/2169                core_type (lib/types.ml[414,13429+22]..lib/types.ml[414,13429+26])
                  Ttyp_poly
                  core_type (lib/types.ml[414,13429+22]..lib/types.ml[414,13429+26])
                    Ttyp_constr "bool/5!"
                    []
              (lib/types.ml[415,13500+4]..lib/types.ml[415,13500+31])
                Immutable
                cstr_private/2170                core_type (lib/types.ml[415,13500+18]..lib/types.ml[415,13500+30])
                  Ttyp_poly
                  core_type (lib/types.ml[415,13500+18]..lib/types.ml[415,13500+30])
                    Ttyp_constr "Ocaml_ocaml_types!.Asttypes.private_flag"
                    []
              (lib/types.ml[416,13569+4]..lib/types.ml[416,13569+25])
                Immutable
                cstr_loc/2171                core_type (lib/types.ml[416,13569+14]..lib/types.ml[416,13569+24])
                  Ttyp_poly
                  core_type (lib/types.ml[416,13569+14]..lib/types.ml[416,13569+24])
                    Ttyp_constr "Ocaml_ocaml_types!.Location.t"
                    []
              (lib/types.ml[417,13595+4]..lib/types.ml[417,13595+42])
                Immutable
                cstr_attributes/2172                core_type (lib/types.ml[417,13595+21]..lib/types.ml[417,13595+41])
                  Ttyp_poly
                  core_type (lib/types.ml[417,13595+21]..lib/types.ml[417,13595+41])
                    Ttyp_constr "Ocaml_ocaml_types!.Parsetree.attributes"
                    []
              (lib/types.ml[418,13638+4]..lib/types.ml[418,13638+42])
                Immutable
                cstr_inlined/2173                core_type (lib/types.ml[418,13638+18]..lib/types.ml[418,13638+41])
                  Ttyp_poly
                  core_type (lib/types.ml[418,13638+18]..lib/types.ml[418,13638+41])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[418,13638+18]..lib/types.ml[418,13638+34])
                        Ttyp_constr "type_declaration/2024"
                        []
                    ]
              (lib/types.ml[419,13681+4]..lib/types.ml[419,13681+20])
                Immutable
                cstr_uid/2174                core_type (lib/types.ml[419,13681+14]..lib/types.ml[419,13681+19])
                  Ttyp_poly
                  core_type (lib/types.ml[419,13681+14]..lib/types.ml[419,13681+19])
                    Ttyp_constr "Uid/472.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration constructor_tag/2160 (lib/types.ml[422,13708+0]..lib/types.ml[426,13959+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[423,13730+4]..lib/types.ml[423,13730+24])
                Cstr_constant/2175
                [
                  core_type (lib/types.ml[423,13730+21]..lib/types.ml[423,13730+24])
                    Ttyp_constr "int/1!"
                    []
                ]
                None
              (lib/types.ml[424,13806+2]..lib/types.ml[424,13806+21])
                Cstr_block/2176
                [
                  core_type (lib/types.ml[424,13806+18]..lib/types.ml[424,13806+21])
                    Ttyp_constr "int/1!"
                    []
                ]
                None
              (lib/types.ml[425,13882+2]..lib/types.ml[425,13882+16])
                Cstr_unboxed/2177
                []
                None
              (lib/types.ml[426,13959+2]..lib/types.ml[426,13959+35])
                Cstr_extension/2178
                [
                  core_type (lib/types.ml[426,13959+22]..lib/types.ml[426,13959+28])
                    Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                    []
                  core_type (lib/types.ml[426,13959+31]..lib/types.ml[426,13959+35])
                    Ttyp_constr "bool/5!"
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[429,14106+0]..lib/types.ml[436,14384+76])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[429,14106+4]..lib/types.ml[429,14106+13])
          Tpat_var "equal_tag/2179"
        expression (lib/types.ml[429,14106+14]..lib/types.ml[436,14384+76]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[429,14106+14]..lib/types.ml[429,14106+16])
                Tpat_var "t1/2181"
            Nolabel
            Param_pat
              pattern (lib/types.ml[429,14106+17]..lib/types.ml[429,14106+19])
                Tpat_var "t2/2182"
          ]
          Tfunction_body
            expression (lib/types.ml[430,14128+2]..lib/types.ml[436,14384+76])
              Texp_match
              expression (lib/types.ml[430,14128+8]..lib/types.ml[430,14128+16])
                Texp_tuple
                [
                  expression (lib/types.ml[430,14128+9]..lib/types.ml[430,14128+11])
                    Texp_ident "t1/2181"
                  expression (lib/types.ml[430,14128+13]..lib/types.ml[430,14128+15])
                    Texp_ident "t2/2182"
                ]
              [
                <case>
                  pattern (lib/types.ml[431,14150+4]..lib/types.ml[431,14150+38])
                    Tpat_value
                    pattern (lib/types.ml[431,14150+4]..lib/types.ml[431,14150+38])
                      Tpat_tuple
                      [
                        pattern (lib/types.ml[431,14150+4]..lib/types.ml[431,14150+20])
                          Tpat_construct "Cstr_constant"
                          [
                            pattern (lib/types.ml[431,14150+18]..lib/types.ml[431,14150+20])
                              Tpat_var "i1/2183"
                          ]
                          None
                        pattern (lib/types.ml[431,14150+22]..lib/types.ml[431,14150+38])
                          Tpat_construct "Cstr_constant"
                          [
                            pattern (lib/types.ml[431,14150+36]..lib/types.ml[431,14150+38])
                              Tpat_var "i2/2184"
                          ]
                          None
                      ]
                  expression (lib/types.ml[431,14150+42]..lib/types.ml[431,14150+49])
                    Texp_apply
                    expression (lib/types.ml[431,14150+45]..lib/types.ml[431,14150+46])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[431,14150+42]..lib/types.ml[431,14150+44])
                          Texp_ident "i2/2184"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[431,14150+47]..lib/types.ml[431,14150+49])
                          Texp_ident "i1/2183"
                    ]
                <case>
                  pattern (lib/types.ml[432,14200+4]..lib/types.ml[432,14200+32])
                    Tpat_value
                    pattern (lib/types.ml[432,14200+4]..lib/types.ml[432,14200+32])
                      Tpat_tuple
                      [
                        pattern (lib/types.ml[432,14200+4]..lib/types.ml[432,14200+17])
                          Tpat_construct "Cstr_block"
                          [
                            pattern (lib/types.ml[432,14200+15]..lib/types.ml[432,14200+17])
                              Tpat_var "i1/2185"
                          ]
                          None
                        pattern (lib/types.ml[432,14200+19]..lib/types.ml[432,14200+32])
                          Tpat_construct "Cstr_block"
                          [
                            pattern (lib/types.ml[432,14200+30]..lib/types.ml[432,14200+32])
                              Tpat_var "i2/2186"
                          ]
                          None
                      ]
                  expression (lib/types.ml[432,14200+36]..lib/types.ml[432,14200+43])
                    Texp_apply
                    expression (lib/types.ml[432,14200+39]..lib/types.ml[432,14200+40])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[432,14200+36]..lib/types.ml[432,14200+38])
                          Texp_ident "i2/2186"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[432,14200+41]..lib/types.ml[432,14200+43])
                          Texp_ident "i1/2185"
                    ]
                <case>
                  pattern (lib/types.ml[433,14244+4]..lib/types.ml[433,14244+30])
                    Tpat_value
                    pattern (lib/types.ml[433,14244+4]..lib/types.ml[433,14244+30])
                      Tpat_tuple
                      [
                        pattern (lib/types.ml[433,14244+4]..lib/types.ml[433,14244+16])
                          Tpat_construct "Cstr_unboxed"
                          []
                          None
                        pattern (lib/types.ml[433,14244+18]..lib/types.ml[433,14244+30])
                          Tpat_construct "Cstr_unboxed"
                          []
                          None
                      ]
                  expression (lib/types.ml[433,14244+34]..lib/types.ml[433,14244+38])
                    Texp_construct "true"
                    []
                <case>
                  pattern (lib/types.ml[434,14283+4]..lib/types.ml[434,14283+58])
                    Tpat_value
                    pattern (lib/types.ml[434,14283+4]..lib/types.ml[434,14283+58])
                      Tpat_tuple
                      [
                        pattern (lib/types.ml[434,14283+4]..lib/types.ml[434,14283+30])
                          Tpat_construct "Cstr_extension"
                          [
                            pattern (lib/types.ml[434,14283+20]..lib/types.ml[434,14283+25])
                              Tpat_var "path1/2187"
                            pattern (lib/types.ml[434,14283+27]..lib/types.ml[434,14283+29])
                              Tpat_var "b1/2188"
                          ]
                          None
                        pattern (lib/types.ml[434,14283+32]..lib/types.ml[434,14283+58])
                          Tpat_construct "Cstr_extension"
                          [
                            pattern (lib/types.ml[434,14283+48]..lib/types.ml[434,14283+53])
                              Tpat_var "path2/2189"
                            pattern (lib/types.ml[434,14283+55]..lib/types.ml[434,14283+57])
                              Tpat_var "b2/2190"
                          ]
                          None
                      ]
                  expression (lib/types.ml[435,14345+6]..lib/types.ml[435,14345+38])
                    Texp_apply
                    expression (lib/types.ml[435,14345+28]..lib/types.ml[435,14345+30])
                      Texp_ident "Stdlib!.&&"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[435,14345+6]..lib/types.ml[435,14345+27])
                          Texp_apply
                          expression (lib/types.ml[435,14345+6]..lib/types.ml[435,14345+15])
                            Texp_ident "Ocaml_ocaml_types!.Path.same"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[435,14345+16]..lib/types.ml[435,14345+21])
                                Texp_ident "path1/2187"
                            <arg>
                              Nolabel
                              expression (lib/types.ml[435,14345+22]..lib/types.ml[435,14345+27])
                                Texp_ident "path2/2189"
                          ]
                      <arg>
                        Nolabel
                        expression (lib/types.ml[435,14345+31]..lib/types.ml[435,14345+38])
                          Texp_apply
                          expression (lib/types.ml[435,14345+34]..lib/types.ml[435,14345+35])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[435,14345+31]..lib/types.ml[435,14345+33])
                                Texp_ident "b1/2188"
                            <arg>
                              Nolabel
                              expression (lib/types.ml[435,14345+36]..lib/types.ml[435,14345+38])
                                Texp_ident "b2/2190"
                          ]
                    ]
                <case>
                  pattern (lib/types.ml[436,14384+4]..lib/types.ml[436,14384+67])
                    Tpat_value
                    pattern (lib/types.ml[436,14384+4]..lib/types.ml[436,14384+67])
                      Tpat_tuple
                      [
                        pattern (lib/types.ml[436,14384+4]..lib/types.ml[436,14384+64])
                          Tpat_or
                          pattern (lib/types.ml[436,14384+5]..lib/types.ml[436,14384+46])
                            Tpat_or
                            pattern (lib/types.ml[436,14384+5]..lib/types.ml[436,14384+33])
                              Tpat_or
                              pattern (lib/types.ml[436,14384+5]..lib/types.ml[436,14384+20])
                                Tpat_construct "Cstr_constant"
                                [
                                  pattern (lib/types.ml[436,14384+19]..lib/types.ml[436,14384+20])
                                    Tpat_any
                                ]
                                None
                              pattern (lib/types.ml[436,14384+21]..lib/types.ml[436,14384+33])
                                Tpat_construct "Cstr_block"
                                [
                                  pattern (lib/types.ml[436,14384+32]..lib/types.ml[436,14384+33])
                                    Tpat_any
                                ]
                                None
                            pattern (lib/types.ml[436,14384+34]..lib/types.ml[436,14384+46])
                              Tpat_construct "Cstr_unboxed"
                              []
                              None
                          pattern (lib/types.ml[436,14384+47]..lib/types.ml[436,14384+63])
                            Tpat_construct "Cstr_extension"
                            [
                              pattern (lib/types.ml[436,14384+62]..lib/types.ml[436,14384+63])
                                Tpat_any
                              pattern (lib/types.ml[436,14384+62]..lib/types.ml[436,14384+63])
                                Tpat_any
                            ]
                            None
                        pattern (lib/types.ml[436,14384+66]..lib/types.ml[436,14384+67])
                          Tpat_any
                      ]
                  expression (lib/types.ml[436,14384+71]..lib/types.ml[436,14384+76])
                    Texp_construct "false"
                    []
              ]
    ]
  structure_item (lib/types.ml[438,14462+0]..lib/types.ml[445,14713+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[438,14462+4]..lib/types.ml[438,14462+20])
          Tpat_var "may_equal_constr/2191"
        expression (lib/types.ml[438,14462+21]..lib/types.ml[445,14713+29]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[438,14462+21]..lib/types.ml[438,14462+23])
                Tpat_var "c1/2193"
            Nolabel
            Param_pat
              pattern (lib/types.ml[438,14462+24]..lib/types.ml[438,14462+26])
                Tpat_var "c2/2194"
          ]
          Tfunction_body
            expression (lib/types.ml[439,14491+2]..lib/types.ml[445,14713+29])
              Texp_apply
              expression (lib/types.ml[440,14523+2]..lib/types.ml[440,14523+4])
                Texp_ident "Stdlib!.&&"
              [
                <arg>
                  Nolabel
                  expression (lib/types.ml[439,14491+2]..lib/types.ml[439,14491+31])
                    Texp_apply
                    expression (lib/types.ml[439,14491+16]..lib/types.ml[439,14491+17])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[439,14491+2]..lib/types.ml[439,14491+15])
                          Texp_field
                          expression (lib/types.ml[439,14491+2]..lib/types.ml[439,14491+4])
                            Texp_ident "c1/2193"
                          "cstr_arity"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[439,14491+18]..lib/types.ml[439,14491+31])
                          Texp_field
                          expression (lib/types.ml[439,14491+18]..lib/types.ml[439,14491+20])
                            Texp_ident "c2/2194"
                          "cstr_arity"
                    ]
                <arg>
                  Nolabel
                  expression (lib/types.ml[440,14523+5]..lib/types.ml[445,14713+29])
                    Texp_match
                    expression (lib/types.ml[440,14523+12]..lib/types.ml[440,14523+35])
                      Texp_tuple
                      [
                        expression (lib/types.ml[440,14523+12]..lib/types.ml[440,14523+23])
                          Texp_field
                          expression (lib/types.ml[440,14523+12]..lib/types.ml[440,14523+14])
                            Texp_ident "c1/2193"
                          "cstr_tag"
                        expression (lib/types.ml[440,14523+24]..lib/types.ml[440,14523+35])
                          Texp_field
                          expression (lib/types.ml[440,14523+24]..lib/types.ml[440,14523+26])
                            Texp_ident "c2/2194"
                          "cstr_tag"
                      ]
                    [
                      <case>
                        pattern (lib/types.ml[441,14564+7]..lib/types.ml[441,14564+40])
                          Tpat_value
                          pattern (lib/types.ml[441,14564+7]..lib/types.ml[441,14564+40])
                            Tpat_tuple
                            [
                              pattern (lib/types.ml[441,14564+7]..lib/types.ml[441,14564+23])
                                Tpat_construct "Cstr_extension"
                                [
                                  pattern (lib/types.ml[441,14564+22]..lib/types.ml[441,14564+23])
                                    Tpat_any
                                  pattern (lib/types.ml[441,14564+22]..lib/types.ml[441,14564+23])
                                    Tpat_any
                                ]
                                None
                              pattern (lib/types.ml[441,14564+24]..lib/types.ml[441,14564+40])
                                Tpat_construct "Cstr_extension"
                                [
                                  pattern (lib/types.ml[441,14564+39]..lib/types.ml[441,14564+40])
                                    Tpat_any
                                  pattern (lib/types.ml[441,14564+39]..lib/types.ml[441,14564+40])
                                    Tpat_any
                                ]
                                None
                            ]
                        expression (lib/types.ml[443,14678+9]..lib/types.ml[443,14678+13])
                          Texp_construct "true"
                          []
                      <case>
                        pattern (lib/types.ml[444,14692+7]..lib/types.ml[444,14692+17])
                          Tpat_value
                          pattern (lib/types.ml[444,14692+7]..lib/types.ml[444,14692+17])
                            Tpat_tuple
                            [
                              pattern (lib/types.ml[444,14692+7]..lib/types.ml[444,14692+11])
                                Tpat_var "tag1/2195"
                              pattern (lib/types.ml[444,14692+13]..lib/types.ml[444,14692+17])
                                Tpat_var "tag2/2196"
                            ]
                        expression (lib/types.ml[445,14713+9]..lib/types.ml[445,14713+28])
                          Texp_apply
                          expression (lib/types.ml[445,14713+9]..lib/types.ml[445,14713+18])
                            Texp_ident "equal_tag/2179"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[445,14713+19]..lib/types.ml[445,14713+23])
                                Texp_ident "tag1/2195"
                            <arg>
                              Nolabel
                              expression (lib/types.ml[445,14713+24]..lib/types.ml[445,14713+28])
                                Texp_ident "tag2/2196"
                          ]
                    ]
              ]
    ]
  structure_item (lib/types.ml[447,14744+0]..lib/types.ml[454,14949+40])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[447,14744+4]..lib/types.ml[447,14744+19])
          Tpat_var "item_visibility/2197"
        expression (lib/types.ml[447,14744+22]..lib/types.ml[454,14949+40])
          Texp_function
          []
          Tfunction_cases (lib/types.ml[447,14744+22]..lib/types.ml[454,14949+40])
            [
              <case>
                pattern (lib/types.ml[448,14775+4]..lib/types.ml[454,14949+33])
                  Tpat_or
                  pattern (lib/types.ml[448,14775+4]..lib/types.ml[453,14920+28])
                    Tpat_or
                    pattern (lib/types.ml[448,14775+4]..lib/types.ml[452,14892+27])
                      Tpat_or
                      pattern (lib/types.ml[448,14775+4]..lib/types.ml[451,14859+32])
                        Tpat_or
                        pattern (lib/types.ml[448,14775+4]..lib/types.ml[450,14829+29])
                          Tpat_or
                          pattern (lib/types.ml[448,14775+4]..lib/types.ml[449,14801+27])
                            Tpat_or
                            pattern (lib/types.ml[448,14775+4]..lib/types.ml[448,14775+25])
                              Tpat_construct "Sig_value"
                              [
                                pattern (lib/types.ml[448,14775+15]..lib/types.ml[448,14775+16])
                                  Tpat_any
                                pattern (lib/types.ml[448,14775+18]..lib/types.ml[448,14775+19])
                                  Tpat_any
                                pattern (lib/types.ml[448,14775+21]..lib/types.ml[448,14775+24])
                                  Tpat_var "vis/2199"
                              ]
                              None
                            pattern (lib/types.ml[449,14801+4]..lib/types.ml[449,14801+27])
                              Tpat_construct "Sig_type"
                              [
                                pattern (lib/types.ml[449,14801+14]..lib/types.ml[449,14801+15])
                                  Tpat_any
                                pattern (lib/types.ml[449,14801+17]..lib/types.ml[449,14801+18])
                                  Tpat_any
                                pattern (lib/types.ml[449,14801+20]..lib/types.ml[449,14801+21])
                                  Tpat_any
                                pattern (lib/types.ml[449,14801+23]..lib/types.ml[449,14801+26])
                                  Tpat_var "vis/2199"
                              ]
                              None
                          pattern (lib/types.ml[450,14829+4]..lib/types.ml[450,14829+29])
                            Tpat_construct "Sig_typext"
                            [
                              pattern (lib/types.ml[450,14829+16]..lib/types.ml[450,14829+17])
                                Tpat_any
                              pattern (lib/types.ml[450,14829+19]..lib/types.ml[450,14829+20])
                                Tpat_any
                              pattern (lib/types.ml[450,14829+22]..lib/types.ml[450,14829+23])
                                Tpat_any
                              pattern (lib/types.ml[450,14829+25]..lib/types.ml[450,14829+28])
                                Tpat_var "vis/2199"
                            ]
                            None
                        pattern (lib/types.ml[451,14859+4]..lib/types.ml[451,14859+32])
                          Tpat_construct "Sig_module"
                          [
                            pattern (lib/types.ml[451,14859+16]..lib/types.ml[451,14859+17])
                              Tpat_any
                            pattern (lib/types.ml[451,14859+19]..lib/types.ml[451,14859+20])
                              Tpat_any
                            pattern (lib/types.ml[451,14859+22]..lib/types.ml[451,14859+23])
                              Tpat_any
                            pattern (lib/types.ml[451,14859+25]..lib/types.ml[451,14859+26])
                              Tpat_any
                            pattern (lib/types.ml[451,14859+28]..lib/types.ml[451,14859+31])
                              Tpat_var "vis/2199"
                          ]
                          None
                      pattern (lib/types.ml[452,14892+4]..lib/types.ml[452,14892+27])
                        Tpat_construct "Sig_modtype"
                        [
                          pattern (lib/types.ml[452,14892+17]..lib/types.ml[452,14892+18])
                            Tpat_any
                          pattern (lib/types.ml[452,14892+20]..lib/types.ml[452,14892+21])
                            Tpat_any
                          pattern (lib/types.ml[452,14892+23]..lib/types.ml[452,14892+26])
                            Tpat_var "vis/2199"
                        ]
                        None
                    pattern (lib/types.ml[453,14920+4]..lib/types.ml[453,14920+28])
                      Tpat_construct "Sig_class"
                      [
                        pattern (lib/types.ml[453,14920+15]..lib/types.ml[453,14920+16])
                          Tpat_any
                        pattern (lib/types.ml[453,14920+18]..lib/types.ml[453,14920+19])
                          Tpat_any
                        pattern (lib/types.ml[453,14920+21]..lib/types.ml[453,14920+22])
                          Tpat_any
                        pattern (lib/types.ml[453,14920+24]..lib/types.ml[453,14920+27])
                          Tpat_var "vis/2199"
                      ]
                      None
                  pattern (lib/types.ml[454,14949+4]..lib/types.ml[454,14949+33])
                    Tpat_construct "Sig_class_type"
                    [
                      pattern (lib/types.ml[454,14949+20]..lib/types.ml[454,14949+21])
                        Tpat_any
                      pattern (lib/types.ml[454,14949+23]..lib/types.ml[454,14949+24])
                        Tpat_any
                      pattern (lib/types.ml[454,14949+26]..lib/types.ml[454,14949+27])
                        Tpat_any
                      pattern (lib/types.ml[454,14949+29]..lib/types.ml[454,14949+32])
                        Tpat_var "vis/2199"
                    ]
                    None
                expression (lib/types.ml[454,14949+37]..lib/types.ml[454,14949+40])
                  Texp_ident "vis/2199"
            ]
    ]
  structure_item (lib/types.ml[456,14991+0]..lib/types.ml[468,15641+4])
    Tstr_type Rec
    [
      type_declaration label_description/2207 (lib/types.ml[456,14991+0]..lib/types.ml[468,15641+4])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_record
            [
              (lib/types.ml[457,15016+4]..lib/types.ml[457,15016+21])
                Immutable
                lbl_name/2208                core_type (lib/types.ml[457,15016+14]..lib/types.ml[457,15016+20])
                  Ttyp_poly
                  core_type (lib/types.ml[457,15016+14]..lib/types.ml[457,15016+20])
                    Ttyp_constr "string/15!"
                    []
              (lib/types.ml[458,15073+4]..lib/types.ml[458,15073+23])
                Immutable
                lbl_res/2209                core_type (lib/types.ml[458,15073+13]..lib/types.ml[458,15073+22])
                  Ttyp_poly
                  core_type (lib/types.ml[458,15073+13]..lib/types.ml[458,15073+22])
                    Ttyp_constr "type_expr/314"
                    []
              (lib/types.ml[459,15138+4]..lib/types.ml[459,15138+23])
                Immutable
                lbl_arg/2210                core_type (lib/types.ml[459,15138+13]..lib/types.ml[459,15138+22])
                  Ttyp_poly
                  core_type (lib/types.ml[459,15138+13]..lib/types.ml[459,15138+22])
                    Ttyp_constr "type_expr/314"
                    []
              (lib/types.ml[460,15205+4]..lib/types.ml[460,15205+26])
                Immutable
                lbl_mut/2211                core_type (lib/types.ml[460,15205+13]..lib/types.ml[460,15205+25])
                  Ttyp_poly
                  core_type (lib/types.ml[460,15205+13]..lib/types.ml[460,15205+25])
                    Ttyp_constr "Ocaml_ocaml_types!.Asttypes.mutable_flag"
                    []
              (lib/types.ml[461,15276+4]..lib/types.ml[461,15276+17])
                Immutable
                lbl_pos/2212                core_type (lib/types.ml[461,15276+13]..lib/types.ml[461,15276+16])
                  Ttyp_poly
                  core_type (lib/types.ml[461,15276+13]..lib/types.ml[461,15276+16])
                    Ttyp_constr "int/1!"
                    []
              (lib/types.ml[462,15340+4]..lib/types.ml[462,15340+37])
                Immutable
                lbl_all/2213                core_type (lib/types.ml[462,15340+13]..lib/types.ml[462,15340+36])
                  Ttyp_poly
                  core_type (lib/types.ml[462,15340+13]..lib/types.ml[462,15340+36])
                    Ttyp_constr "array/8!"
                    [
                      core_type (lib/types.ml[462,15340+13]..lib/types.ml[462,15340+30])
                        Ttyp_constr "label_description/2207"
                        []
                    ]
              (lib/types.ml[463,15414+4]..lib/types.ml[463,15414+38])
                Immutable
                lbl_repres/2214                core_type (lib/types.ml[463,15414+16]..lib/types.ml[463,15414+37])
                  Ttyp_poly
                  core_type (lib/types.ml[463,15414+16]..lib/types.ml[463,15414+37])
                    Ttyp_constr "record_representation/2028"
                    []
              (lib/types.ml[464,15491+4]..lib/types.ml[464,15491+30])
                Immutable
                lbl_private/2215                core_type (lib/types.ml[464,15491+17]..lib/types.ml[464,15491+29])
                  Ttyp_poly
                  core_type (lib/types.ml[464,15491+17]..lib/types.ml[464,15491+29])
                    Ttyp_constr "Ocaml_ocaml_types!.Asttypes.private_flag"
                    []
              (lib/types.ml[465,15554+4]..lib/types.ml[465,15554+24])
                Immutable
                lbl_loc/2216                core_type (lib/types.ml[465,15554+13]..lib/types.ml[465,15554+23])
                  Ttyp_poly
                  core_type (lib/types.ml[465,15554+13]..lib/types.ml[465,15554+23])
                    Ttyp_constr "Ocaml_ocaml_types!.Location.t"
                    []
              (lib/types.ml[466,15579+4]..lib/types.ml[466,15579+41])
                Immutable
                lbl_attributes/2217                core_type (lib/types.ml[466,15579+20]..lib/types.ml[466,15579+40])
                  Ttyp_poly
                  core_type (lib/types.ml[466,15579+20]..lib/types.ml[466,15579+40])
                    Ttyp_constr "Ocaml_ocaml_types!.Parsetree.attributes"
                    []
              (lib/types.ml[467,15621+4]..lib/types.ml[467,15621+19])
                Immutable
                lbl_uid/2218                core_type (lib/types.ml[467,15621+13]..lib/types.ml[467,15621+18])
                  Ttyp_poly
                  core_type (lib/types.ml[467,15621+13]..lib/types.ml[467,15621+18])
                    Ttyp_constr "Uid/472.t"
                    []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[470,15647+0]..lib/types.ml[478,16029+43])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[470,15647+8]..lib/types.ml[470,15647+31])
          Tpat_var "bound_value_identifiers/2219"
        expression (lib/types.ml[470,15647+34]..lib/types.ml[478,16029+43])
          Texp_function
          []
          Tfunction_cases (lib/types.ml[470,15647+34]..lib/types.ml[478,16029+43])
            [
              <case>
                pattern (lib/types.ml[471,15690+4]..lib/types.ml[471,15690+6])
                  Tpat_construct "[]"
                  []
                  None
                expression (lib/types.ml[471,15690+10]..lib/types.ml[471,15690+12])
                  Texp_construct "[]"
                  []
              <case>
                pattern (lib/types.ml[472,15703+4]..lib/types.ml[472,15703+49])
                  Tpat_construct "::"
                  [
                    pattern (lib/types.ml[472,15703+4]..lib/types.ml[472,15703+42])
                      Tpat_construct "Sig_value"
                      [
                        pattern (lib/types.ml[472,15703+14]..lib/types.ml[472,15703+16])
                          Tpat_var "id/2220"
                        pattern (lib/types.ml[472,15703+18]..lib/types.ml[472,15703+38])
                          Tpat_record
                          [
                            "val_kind"
                              pattern (lib/types.ml[472,15703+30]..lib/types.ml[472,15703+37])
                                Tpat_construct "Val_reg"
                                []
                                None
                          ]
                        pattern (lib/types.ml[472,15703+40]..lib/types.ml[472,15703+41])
                          Tpat_any
                      ]
                      None
                    pattern (lib/types.ml[472,15703+46]..lib/types.ml[472,15703+49])
                      Tpat_var "rem/2221"
                  ]
                  None
                expression (lib/types.ml[473,15756+6]..lib/types.ml[473,15756+39])
                  Texp_construct "::"
                  [
                    expression (lib/types.ml[473,15756+6]..lib/types.ml[473,15756+8])
                      Texp_ident "id/2220"
                    expression (lib/types.ml[473,15756+12]..lib/types.ml[473,15756+39])
                      Texp_apply
                      expression (lib/types.ml[473,15756+12]..lib/types.ml[473,15756+35])
                        Texp_ident "bound_value_identifiers/2219"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[473,15756+36]..lib/types.ml[473,15756+39])
                            Texp_ident "rem/2221"
                      ]
                  ]
              <case>
                pattern (lib/types.ml[474,15796+4]..lib/types.ml[474,15796+34])
                  Tpat_construct "::"
                  [
                    pattern (lib/types.ml[474,15796+4]..lib/types.ml[474,15796+27])
                      Tpat_construct "Sig_typext"
                      [
                        pattern (lib/types.ml[474,15796+15]..lib/types.ml[474,15796+17])
                          Tpat_var "id/2222"
                        pattern (lib/types.ml[474,15796+19]..lib/types.ml[474,15796+20])
                          Tpat_any
                        pattern (lib/types.ml[474,15796+22]..lib/types.ml[474,15796+23])
                          Tpat_any
                        pattern (lib/types.ml[474,15796+25]..lib/types.ml[474,15796+26])
                          Tpat_any
                      ]
                      None
                    pattern (lib/types.ml[474,15796+31]..lib/types.ml[474,15796+34])
                      Tpat_var "rem/2223"
                  ]
                  None
                expression (lib/types.ml[474,15796+38]..lib/types.ml[474,15796+71])
                  Texp_construct "::"
                  [
                    expression (lib/types.ml[474,15796+38]..lib/types.ml[474,15796+40])
                      Texp_ident "id/2222"
                    expression (lib/types.ml[474,15796+44]..lib/types.ml[474,15796+71])
                      Texp_apply
                      expression (lib/types.ml[474,15796+44]..lib/types.ml[474,15796+67])
                        Texp_ident "bound_value_identifiers/2219"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[474,15796+68]..lib/types.ml[474,15796+71])
                            Texp_ident "rem/2223"
                      ]
                  ]
              <case>
                pattern (lib/types.ml[475,15868+4]..lib/types.ml[475,15868+46])
                  Tpat_construct "::"
                  [
                    pattern (lib/types.ml[475,15868+4]..lib/types.ml[475,15868+39])
                      Tpat_construct "Sig_module"
                      [
                        pattern (lib/types.ml[475,15868+15]..lib/types.ml[475,15868+17])
                          Tpat_var "id/2224"
                        pattern (lib/types.ml[475,15868+19]..lib/types.ml[475,15868+29])
                          Tpat_construct "Mp_present"
                          []
                          None
                        pattern (lib/types.ml[475,15868+31]..lib/types.ml[475,15868+32])
                          Tpat_any
                        pattern (lib/types.ml[475,15868+34]..lib/types.ml[475,15868+35])
                          Tpat_any
                        pattern (lib/types.ml[475,15868+37]..lib/types.ml[475,15868+38])
                          Tpat_any
                      ]
                      None
                    pattern (lib/types.ml[475,15868+43]..lib/types.ml[475,15868+46])
                      Tpat_var "rem/2225"
                  ]
                  None
                expression (lib/types.ml[476,15918+6]..lib/types.ml[476,15918+39])
                  Texp_construct "::"
                  [
                    expression (lib/types.ml[476,15918+6]..lib/types.ml[476,15918+8])
                      Texp_ident "id/2224"
                    expression (lib/types.ml[476,15918+12]..lib/types.ml[476,15918+39])
                      Texp_apply
                      expression (lib/types.ml[476,15918+12]..lib/types.ml[476,15918+35])
                        Texp_ident "bound_value_identifiers/2219"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[476,15918+36]..lib/types.ml[476,15918+39])
                            Texp_ident "rem/2225"
                      ]
                  ]
              <case>
                pattern (lib/types.ml[477,15958+4]..lib/types.ml[477,15958+33])
                  Tpat_construct "::"
                  [
                    pattern (lib/types.ml[477,15958+4]..lib/types.ml[477,15958+26])
                      Tpat_construct "Sig_class"
                      [
                        pattern (lib/types.ml[477,15958+14]..lib/types.ml[477,15958+16])
                          Tpat_var "id/2226"
                        pattern (lib/types.ml[477,15958+18]..lib/types.ml[477,15958+19])
                          Tpat_any
                        pattern (lib/types.ml[477,15958+21]..lib/types.ml[477,15958+22])
                          Tpat_any
                        pattern (lib/types.ml[477,15958+24]..lib/types.ml[477,15958+25])
                          Tpat_any
                      ]
                      None
                    pattern (lib/types.ml[477,15958+30]..lib/types.ml[477,15958+33])
                      Tpat_var "rem/2227"
                  ]
                  None
                expression (lib/types.ml[477,15958+37]..lib/types.ml[477,15958+70])
                  Texp_construct "::"
                  [
                    expression (lib/types.ml[477,15958+37]..lib/types.ml[477,15958+39])
                      Texp_ident "id/2226"
                    expression (lib/types.ml[477,15958+43]..lib/types.ml[477,15958+70])
                      Texp_apply
                      expression (lib/types.ml[477,15958+43]..lib/types.ml[477,15958+66])
                        Texp_ident "bound_value_identifiers/2219"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[477,15958+67]..lib/types.ml[477,15958+70])
                            Texp_ident "rem/2227"
                      ]
                  ]
              <case>
                pattern (lib/types.ml[478,16029+4]..lib/types.ml[478,16029+12])
                  Tpat_construct "::"
                  [
                    pattern (lib/types.ml[478,16029+4]..lib/types.ml[478,16029+5])
                      Tpat_any
                    pattern (lib/types.ml[478,16029+9]..lib/types.ml[478,16029+12])
                      Tpat_var "rem/2228"
                  ]
                  None
                expression (lib/types.ml[478,16029+16]..lib/types.ml[478,16029+43])
                  Texp_apply
                  expression (lib/types.ml[478,16029+16]..lib/types.ml[478,16029+39])
                    Texp_ident "bound_value_identifiers/2219"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[478,16029+40]..lib/types.ml[478,16029+43])
                        Texp_ident "rem/2228"
                  ]
            ]
    ]
  structure_item (lib/types.ml[480,16074+0]..lib/types.ml[488,16308+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[480,16074+4]..lib/types.ml[480,16074+21])
          Tpat_var "signature_item_id/2254"
        expression (lib/types.ml[480,16074+24]..lib/types.ml[488,16308+9])
          Texp_function
          []
          Tfunction_cases (lib/types.ml[480,16074+24]..lib/types.ml[488,16308+9])
            [
              <case>
                pattern (lib/types.ml[481,16107+4]..lib/types.ml[487,16275+32])
                  Tpat_or
                  pattern (lib/types.ml[481,16107+4]..lib/types.ml[486,16247+27])
                    Tpat_or
                    pattern (lib/types.ml[481,16107+4]..lib/types.ml[485,16220+26])
                      Tpat_or
                      pattern (lib/types.ml[481,16107+4]..lib/types.ml[484,16188+31])
                        Tpat_or
                        pattern (lib/types.ml[481,16107+4]..lib/types.ml[483,16159+28])
                          Tpat_or
                          pattern (lib/types.ml[481,16107+4]..lib/types.ml[482,16132+26])
                            Tpat_or
                            pattern (lib/types.ml[481,16107+4]..lib/types.ml[481,16107+24])
                              Tpat_construct "Sig_value"
                              [
                                pattern (lib/types.ml[481,16107+15]..lib/types.ml[481,16107+17])
                                  Tpat_var "id/2256"
                                pattern (lib/types.ml[481,16107+19]..lib/types.ml[481,16107+20])
                                  Tpat_any
                                pattern (lib/types.ml[481,16107+22]..lib/types.ml[481,16107+23])
                                  Tpat_any
                              ]
                              None
                            pattern (lib/types.ml[482,16132+4]..lib/types.ml[482,16132+26])
                              Tpat_construct "Sig_type"
                              [
                                pattern (lib/types.ml[482,16132+14]..lib/types.ml[482,16132+16])
                                  Tpat_var "id/2256"
                                pattern (lib/types.ml[482,16132+18]..lib/types.ml[482,16132+19])
                                  Tpat_any
                                pattern (lib/types.ml[482,16132+21]..lib/types.ml[482,16132+22])
                                  Tpat_any
                                pattern (lib/types.ml[482,16132+24]..lib/types.ml[482,16132+25])
                                  Tpat_any
                              ]
                              None
                          pattern (lib/types.ml[483,16159+4]..lib/types.ml[483,16159+28])
                            Tpat_construct "Sig_typext"
                            [
                              pattern (lib/types.ml[483,16159+16]..lib/types.ml[483,16159+18])
                                Tpat_var "id/2256"
                              pattern (lib/types.ml[483,16159+20]..lib/types.ml[483,16159+21])
                                Tpat_any
                              pattern (lib/types.ml[483,16159+23]..lib/types.ml[483,16159+24])
                                Tpat_any
                              pattern (lib/types.ml[483,16159+26]..lib/types.ml[483,16159+27])
                                Tpat_any
                            ]
                            None
                        pattern (lib/types.ml[484,16188+4]..lib/types.ml[484,16188+31])
                          Tpat_construct "Sig_module"
                          [
                            pattern (lib/types.ml[484,16188+16]..lib/types.ml[484,16188+18])
                              Tpat_var "id/2256"
                            pattern (lib/types.ml[484,16188+20]..lib/types.ml[484,16188+21])
                              Tpat_any
                            pattern (lib/types.ml[484,16188+23]..lib/types.ml[484,16188+24])
                              Tpat_any
                            pattern (lib/types.ml[484,16188+26]..lib/types.ml[484,16188+27])
                              Tpat_any
                            pattern (lib/types.ml[484,16188+29]..lib/types.ml[484,16188+30])
                              Tpat_any
                          ]
                          None
                      pattern (lib/types.ml[485,16220+4]..lib/types.ml[485,16220+26])
                        Tpat_construct "Sig_modtype"
                        [
                          pattern (lib/types.ml[485,16220+17]..lib/types.ml[485,16220+19])
                            Tpat_var "id/2256"
                          pattern (lib/types.ml[485,16220+21]..lib/types.ml[485,16220+22])
                            Tpat_any
                          pattern (lib/types.ml[485,16220+24]..lib/types.ml[485,16220+25])
                            Tpat_any
                        ]
                        None
                    pattern (lib/types.ml[486,16247+4]..lib/types.ml[486,16247+27])
                      Tpat_construct "Sig_class"
                      [
                        pattern (lib/types.ml[486,16247+15]..lib/types.ml[486,16247+17])
                          Tpat_var "id/2256"
                        pattern (lib/types.ml[486,16247+19]..lib/types.ml[486,16247+20])
                          Tpat_any
                        pattern (lib/types.ml[486,16247+22]..lib/types.ml[486,16247+23])
                          Tpat_any
                        pattern (lib/types.ml[486,16247+25]..lib/types.ml[486,16247+26])
                          Tpat_any
                      ]
                      None
                  pattern (lib/types.ml[487,16275+4]..lib/types.ml[487,16275+32])
                    Tpat_construct "Sig_class_type"
                    [
                      pattern (lib/types.ml[487,16275+20]..lib/types.ml[487,16275+22])
                        Tpat_var "id/2256"
                      pattern (lib/types.ml[487,16275+24]..lib/types.ml[487,16275+25])
                        Tpat_any
                      pattern (lib/types.ml[487,16275+27]..lib/types.ml[487,16275+28])
                        Tpat_any
                      pattern (lib/types.ml[487,16275+30]..lib/types.ml[487,16275+31])
                        Tpat_any
                    ]
                    None
                expression (lib/types.ml[488,16308+7]..lib/types.ml[488,16308+9])
                  Texp_ident "id/2256"
            ]
    ]
  structure_item (lib/types.ml[492,16361+0]..lib/types.ml[502,16727+52])
    Tstr_type Rec
    [
      type_declaration change/2264 (lib/types.ml[492,16361+0]..lib/types.ml[502,16727+52])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[493,16375+4]..lib/types.ml[493,16375+34])
                Ctype/2265
                [
                  core_type (lib/types.ml[493,16375+13]..lib/types.ml[493,16375+22])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[493,16375+25]..lib/types.ml[493,16375+34])
                    Ttyp_constr "type_desc/315"
                    []
                ]
                None
              (lib/types.ml[494,16410+2]..lib/types.ml[494,16410+50])
                Ccompress/2266
                [
                  core_type (lib/types.ml[494,16410+17]..lib/types.ml[494,16410+26])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[494,16410+29]..lib/types.ml[494,16410+38])
                    Ttyp_constr "type_desc/315"
                    []
                  core_type (lib/types.ml[494,16410+41]..lib/types.ml[494,16410+50])
                    Ttyp_constr "type_desc/315"
                    []
                ]
                None
              (lib/types.ml[495,16461+2]..lib/types.ml[495,16461+29])
                Clevel/2267
                [
                  core_type (lib/types.ml[495,16461+14]..lib/types.ml[495,16461+23])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[495,16461+26]..lib/types.ml[495,16461+29])
                    Ttyp_constr "int/1!"
                    []
                ]
                None
              (lib/types.ml[496,16491+2]..lib/types.ml[496,16491+29])
                Cscope/2268
                [
                  core_type (lib/types.ml[496,16491+14]..lib/types.ml[496,16491+23])
                    Ttyp_constr "type_expr/314"
                    []
                  core_type (lib/types.ml[496,16491+26]..lib/types.ml[496,16491+29])
                    Ttyp_constr "int/1!"
                    []
                ]
                None
              (lib/types.ml[497,16521+2]..lib/types.ml[498,16534+77])
                Cname/2269
                [
                  core_type (lib/types.ml[498,16534+6]..lib/types.ml[498,16534+42])
                    Ttyp_constr "Stdlib!.ref"
                    [
                      core_type (lib/types.ml[498,16534+6]..lib/types.ml[498,16534+38])
                        Ttyp_constr "option/10!"
                        [
                          core_type (lib/types.ml[498,16534+7]..lib/types.ml[498,16534+30])
                            Ttyp_tuple
                            [
                              core_type (lib/types.ml[498,16534+7]..lib/types.ml[498,16534+13])
                                Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                                []
                              core_type (lib/types.ml[498,16534+16]..lib/types.ml[498,16534+30])
                                Ttyp_constr "list/9!"
                                [
                                  core_type (lib/types.ml[498,16534+16]..lib/types.ml[498,16534+25])
                                    Ttyp_constr "type_expr/314"
                                    []
                                ]
                            ]
                        ]
                    ]
                  core_type (lib/types.ml[498,16534+45]..lib/types.ml[498,16534+77])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[498,16534+46]..lib/types.ml[498,16534+69])
                        Ttyp_tuple
                        [
                          core_type (lib/types.ml[498,16534+46]..lib/types.ml[498,16534+52])
                            Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                            []
                          core_type (lib/types.ml[498,16534+55]..lib/types.ml[498,16534+69])
                            Ttyp_constr "list/9!"
                            [
                              core_type (lib/types.ml[498,16534+55]..lib/types.ml[498,16534+64])
                                Ttyp_constr "type_expr/314"
                                []
                            ]
                        ]
                    ]
                ]
                None
              (lib/types.ml[499,16612+2]..lib/types.ml[499,16612+43])
                Crow/2270
                [
                  core_type (lib/types.ml[499,16612+12]..lib/types.ml[499,16612+43])
                    Ttyp_constr "Stdlib!.ref"
                    [
                      core_type (lib/types.ml[499,16612+12]..lib/types.ml[499,16612+39])
                        Ttyp_constr "row_field_gen/319"
                        [
                          core_type (lib/types.ml[499,16612+12]..lib/types.ml[499,16612+25])
                            Ttyp_variant closed=Closed
                            [
                              Ttag "none" true
                                []
                              Ttag "some" true
                                []
                            ]
                            None
                        ]
                    ]
                ]
                None
              (lib/types.ml[500,16656+2]..lib/types.ml[500,16656+34])
                Ckind/2271
                [
                  core_type (lib/types.ml[500,16656+13]..lib/types.ml[500,16656+34])
                    Ttyp_constr "field_kind_gen/323"
                    [
                      core_type (lib/types.ml[500,16656+13]..lib/types.ml[500,16656+19])
                        Ttyp_variant closed=Closed
                        [
                          Ttag "var" true
                            []
                        ]
                        None
                    ]
                ]
                None
              (lib/types.ml[501,16691+2]..lib/types.ml[501,16691+35])
                Ccommu/2272
                [
                  core_type (lib/types.ml[501,16691+14]..lib/types.ml[501,16691+35])
                    Ttyp_constr "commutable_gen/325"
                    [
                      core_type (lib/types.ml[501,16691+14]..lib/types.ml[501,16691+20])
                        Ttyp_variant closed=Closed
                        [
                          Ttag "var" true
                            []
                        ]
                        None
                    ]
                ]
                None
              (lib/types.ml[502,16727+2]..lib/types.ml[502,16727+52])
                Cuniv/2273
                [
                  core_type (lib/types.ml[502,16727+13]..lib/types.ml[502,16727+33])
                    Ttyp_constr "Stdlib!.ref"
                    [
                      core_type (lib/types.ml[502,16727+13]..lib/types.ml[502,16727+29])
                        Ttyp_constr "option/10!"
                        [
                          core_type (lib/types.ml[502,16727+13]..lib/types.ml[502,16727+22])
                            Ttyp_constr "type_expr/314"
                            []
                        ]
                    ]
                  core_type (lib/types.ml[502,16727+36]..lib/types.ml[502,16727+52])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[502,16727+36]..lib/types.ml[502,16727+45])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[504,16781+0]..lib/types.ml[507,16845+11])
    Tstr_type Rec
    [
      type_declaration changes/2274 (lib/types.ml[504,16781+0]..lib/types.ml[507,16845+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[505,16796+4]..lib/types.ml[505,16796+34])
                Change/2275
                [
                  core_type (lib/types.ml[505,16796+14]..lib/types.ml[505,16796+20])
                    Ttyp_constr "change/2264"
                    []
                  core_type (lib/types.ml[505,16796+23]..lib/types.ml[505,16796+34])
                    Ttyp_constr "Stdlib!.ref"
                    [
                      core_type (lib/types.ml[505,16796+23]..lib/types.ml[505,16796+30])
                        Ttyp_constr "changes/2274"
                        []
                    ]
                ]
                None
              (lib/types.ml[506,16831+2]..lib/types.ml[506,16831+13])
                Unchanged/2276
                []
                None
              (lib/types.ml[507,16845+2]..lib/types.ml[507,16845+11])
                Invalid/2277
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[509,16858+0]..lib/types.ml[509,16858+45])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[509,16858+4]..lib/types.ml[509,16858+9])
          Tpat_var "trail/2278"
        expression (lib/types.ml[509,16858+12]..lib/types.ml[509,16858+45])
          Texp_apply
          expression (lib/types.ml[509,16858+12]..lib/types.ml[509,16858+31])
            Texp_ident "Ocaml_ocaml_types!.Local_store.s_table"
          [
            <arg>
              Nolabel
              expression (lib/types.ml[509,16858+32]..lib/types.ml[509,16858+35])
                Texp_ident "Stdlib!.ref"
            <arg>
              Nolabel
              expression (lib/types.ml[509,16858+36]..lib/types.ml[509,16858+45])
                Texp_construct "Unchanged"
                []
          ]
    ]
  structure_item (lib/types.ml[511,16905+0]..lib/types.ml[514,16982+13])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[511,16905+4]..lib/types.ml[511,16905+14])
          Tpat_var "log_change/2290"
        expression (lib/types.ml[511,16905+15]..lib/types.ml[514,16982+13]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[511,16905+15]..lib/types.ml[511,16905+17])
                Tpat_var "ch/2292"
          ]
          Tfunction_body
            expression (lib/types.ml[512,16925+2]..lib/types.ml[514,16982+13])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[512,16925+6]..lib/types.ml[512,16925+8])
                    Tpat_var "r'/2293"
                  expression (lib/types.ml[512,16925+11]..lib/types.ml[512,16925+24])
                    Texp_apply
                    expression (lib/types.ml[512,16925+11]..lib/types.ml[512,16925+14])
                      Texp_ident "Stdlib!.ref"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[512,16925+15]..lib/types.ml[512,16925+24])
                          Texp_construct "Unchanged"
                          []
                    ]
              ]
              expression (lib/types.ml[513,16953+2]..lib/types.ml[514,16982+13])
                Texp_sequence
                expression (lib/types.ml[513,16953+2]..lib/types.ml[513,16953+27])
                  Texp_apply
                  expression (lib/types.ml[513,16953+9]..lib/types.ml[513,16953+11])
                    Texp_ident "Stdlib!.:="
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[513,16953+2]..lib/types.ml[513,16953+8])
                        Texp_apply
                        expression (lib/types.ml[513,16953+2]..lib/types.ml[513,16953+3])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[513,16953+3]..lib/types.ml[513,16953+8])
                              Texp_ident "trail/2278"
                        ]
                    <arg>
                      Nolabel
                      expression (lib/types.ml[513,16953+12]..lib/types.ml[513,16953+27])
                        Texp_construct "Change"
                        [
                          expression (lib/types.ml[513,16953+20]..lib/types.ml[513,16953+22])
                            Texp_ident "ch/2292"
                          expression (lib/types.ml[513,16953+24]..lib/types.ml[513,16953+26])
                            Texp_ident "r'/2293"
                        ]
                  ]
                expression (lib/types.ml[514,16982+2]..lib/types.ml[514,16982+13])
                  Texp_apply
                  expression (lib/types.ml[514,16982+8]..lib/types.ml[514,16982+10])
                    Texp_ident "Stdlib!.:="
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[514,16982+2]..lib/types.ml[514,16982+7])
                        Texp_ident "trail/2278"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[514,16982+11]..lib/types.ml[514,16982+13])
                        Texp_ident "r'/2293"
                  ]
    ]
  structure_item (lib/types.ml[518,17047+0]..lib/types.ml[521,17095+11])
    Tstr_type Rec
    [
      type_declaration field_kind_view/2294 (lib/types.ml[518,17047+0]..lib/types.ml[521,17095+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[519,17070+4]..lib/types.ml[519,17070+12])
                Fprivate/2295
                []
                None
              (lib/types.ml[520,17083+2]..lib/types.ml[520,17083+11])
                Fpublic/2296
                []
                None
              (lib/types.ml[521,17095+2]..lib/types.ml[521,17095+11])
                Fabsent/2297
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[523,17108+0]..lib/types.ml[526,17277+16])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[523,17108+8]..lib/types.ml[523,17108+32])
          extra
            Tpat_extra_constraint
            core_type (lib/types.ml[523,17108+35]..lib/types.ml[523,17108+59])
              Ttyp_arrow
              Nolabel
              core_type (lib/types.ml[523,17108+35]..lib/types.ml[523,17108+45])
                Ttyp_constr "field_kind/322"
                []
              core_type (lib/types.ml[523,17108+49]..lib/types.ml[523,17108+59])
                Ttyp_constr "field_kind/322"
                []
          Tpat_alias "field_kind_internal_repr/2298"
          pattern (lib/types.ml[523,17108+8]..lib/types.ml[523,17108+32])
            Tpat_any
        expression (lib/types.ml[523,17108+62]..lib/types.ml[526,17277+16])
          extra
            Texp_constraint
            core_type (lib/types.ml[523,17108+35]..lib/types.ml[523,17108+59])
              Ttyp_arrow
              Nolabel
              core_type (lib/types.ml[523,17108+35]..lib/types.ml[523,17108+45])
                Ttyp_constr "field_kind/322"
                []
              core_type (lib/types.ml[523,17108+49]..lib/types.ml[523,17108+59])
                Ttyp_constr "field_kind/322"
                []
          Texp_function
          []
          Tfunction_cases (lib/types.ml[523,17108+62]..lib/types.ml[526,17277+16])
            [
              <case>
                pattern (lib/types.ml[524,17179+4]..lib/types.ml[524,17179+60])
                  Tpat_construct "FKvar"
                  [
                    pattern (lib/types.ml[524,17179+10]..lib/types.ml[524,17179+60])
                      Tpat_record
                      [
                        "field_kind"
                          pattern (lib/types.ml[524,17179+24]..lib/types.ml[524,17179+59])
                            Tpat_alias "fk/2299"
                            pattern (lib/types.ml[524,17179+24]..lib/types.ml[524,17179+53])
                              Tpat_or
                              pattern (lib/types.ml[524,17179+24]..lib/types.ml[524,17179+42])
                                Tpat_or
                                pattern (lib/types.ml[524,17179+24]..lib/types.ml[524,17179+31])
                                  Tpat_construct "FKvar"
                                  [
                                    pattern (lib/types.ml[524,17179+30]..lib/types.ml[524,17179+31])
                                      Tpat_any
                                  ]
                                  None
                                pattern (lib/types.ml[524,17179+34]..lib/types.ml[524,17179+42])
                                  Tpat_construct "FKpublic"
                                  []
                                  None
                              pattern (lib/types.ml[524,17179+45]..lib/types.ml[524,17179+53])
                                Tpat_construct "FKabsent"
                                []
                                None
                      ]
                  ]
                  None
                expression (lib/types.ml[525,17243+6]..lib/types.ml[525,17243+33])
                  Texp_apply
                  expression (lib/types.ml[525,17243+6]..lib/types.ml[525,17243+30])
                    Texp_ident "field_kind_internal_repr/2298"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[525,17243+31]..lib/types.ml[525,17243+33])
                        Texp_ident "fk/2299"
                  ]
              <case>
                pattern (lib/types.ml[526,17277+4]..lib/types.ml[526,17277+8])
                  Tpat_var "kind/2300"
                expression (lib/types.ml[526,17277+12]..lib/types.ml[526,17277+16])
                  Texp_ident "kind/2300"
            ]
    ]
  structure_item (lib/types.ml[528,17295+0]..lib/types.ml[532,17409+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[528,17295+4]..lib/types.ml[528,17295+19])
          Tpat_var "field_kind_repr/2302"
        expression (lib/types.ml[528,17295+20]..lib/types.ml[532,17409+23]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[528,17295+20]..lib/types.ml[528,17295+22])
                Tpat_var "fk/2304"
          ]
          Tfunction_body
            expression (lib/types.ml[529,17320+2]..lib/types.ml[532,17409+23])
              Texp_match
              expression (lib/types.ml[529,17320+8]..lib/types.ml[529,17320+35])
                Texp_apply
                expression (lib/types.ml[529,17320+8]..lib/types.ml[529,17320+32])
                  Texp_ident "field_kind_internal_repr/2298"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[529,17320+33]..lib/types.ml[529,17320+35])
                      Texp_ident "fk/2304"
                ]
              [
                <case>
                  pattern (lib/types.ml[530,17361+4]..lib/types.ml[530,17361+11])
                    Tpat_value
                    pattern (lib/types.ml[530,17361+4]..lib/types.ml[530,17361+11])
                      Tpat_construct "FKvar"
                      [
                        pattern (lib/types.ml[530,17361+10]..lib/types.ml[530,17361+11])
                          Tpat_any
                      ]
                      None
                  expression (lib/types.ml[530,17361+15]..lib/types.ml[530,17361+23])
                    Texp_construct "Fprivate"
                    []
                <case>
                  pattern (lib/types.ml[531,17385+4]..lib/types.ml[531,17385+12])
                    Tpat_value
                    pattern (lib/types.ml[531,17385+4]..lib/types.ml[531,17385+12])
                      Tpat_construct "FKpublic"
                      []
                      None
                  expression (lib/types.ml[531,17385+16]..lib/types.ml[531,17385+23])
                    Texp_construct "Fpublic"
                    []
                <case>
                  pattern (lib/types.ml[532,17409+4]..lib/types.ml[532,17409+12])
                    Tpat_value
                    pattern (lib/types.ml[532,17409+4]..lib/types.ml[532,17409+12])
                      Tpat_construct "FKabsent"
                      []
                      None
                  expression (lib/types.ml[532,17409+16]..lib/types.ml[532,17409+23])
                    Texp_construct "Fabsent"
                    []
              ]
    ]
  structure_item (lib/types.ml[534,17434+0]..lib/types.ml[534,17434+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[534,17434+4]..lib/types.ml[534,17434+16])
          Tpat_var "field_public/2306"
        expression (lib/types.ml[534,17434+19]..lib/types.ml[534,17434+27])
          Texp_construct "FKpublic"
          []
    ]
  structure_item (lib/types.ml[535,17462+0]..lib/types.ml[535,17462+27])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[535,17462+4]..lib/types.ml[535,17462+16])
          Tpat_var "field_absent/2307"
        expression (lib/types.ml[535,17462+19]..lib/types.ml[535,17462+27])
          Texp_construct "FKabsent"
          []
    ]
  structure_item (lib/types.ml[536,17490+0]..lib/types.ml[536,17490+51])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[536,17490+4]..lib/types.ml[536,17490+17])
          Tpat_var "field_private/2308"
        expression (lib/types.ml[536,17490+18]..lib/types.ml[536,17490+51]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[536,17490+18]..lib/types.ml[536,17490+20])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/types.ml[536,17490+23]..lib/types.ml[536,17490+51])
              Texp_construct "FKvar"
              [
                expression (lib/types.ml[536,17490+29]..lib/types.ml[536,17490+51])
                  Texp_record
                    fields =
                      [
                        "field_kind"
                          expression (lib/types.ml[536,17490+41]..lib/types.ml[536,17490+50])
                            Texp_construct "FKprivate"
                            []
                      ]
                    representation =
Record_inlined 0
                    extended_expression =
                      None
              ]
    ]
  structure_item (lib/types.ml[540,17593+0]..lib/types.ml[543,17719+15])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[540,17593+8]..lib/types.ml[540,17593+19])
          extra
            Tpat_extra_constraint
            core_type (lib/types.ml[540,17593+30]..lib/types.ml[540,17593+54])
              Ttyp_poly 'a
              core_type (lib/types.ml[540,17593+30]..lib/types.ml[540,17593+54])
                Ttyp_arrow
                Nolabel
                core_type (lib/types.ml[540,17593+30]..lib/types.ml[540,17593+46])
                  Ttyp_constr "commutable_gen/325"
                  [
                    core_type (lib/types.ml[540,17593+30]..lib/types.ml[540,17593+31])
                      Ttyp_var a
                  ]
                core_type (lib/types.ml[540,17593+50]..lib/types.ml[540,17593+54])
                  Ttyp_constr "bool/5!"
                  []
          Tpat_var "is_commu_ok/2311"
        expression (lib/types.ml[540,17593+8]..lib/types.ml[543,17719+15]) ghost
          extra
            Texp_newtype "a"
            Texp_constraint
            core_type (lib/types.ml[540,17593+30]..lib/types.ml[540,17593+54])
              Ttyp_arrow
              Nolabel
              core_type (lib/types.ml[540,17593+30]..lib/types.ml[540,17593+46])
                Ttyp_constr "commutable_gen/325"
                [
                  core_type (lib/types.ml[540,17593+30]..lib/types.ml[540,17593+31])
                    Ttyp_constr "a/2312"
                    []
                ]
              core_type (lib/types.ml[540,17593+50]..lib/types.ml[540,17593+54])
                Ttyp_constr "bool/5!"
                []
          Texp_function
          []
          Tfunction_cases (lib/types.ml[540,17593+57]..lib/types.ml[543,17719+15])
            [
              <case>
                pattern (lib/types.ml[541,17659+4]..lib/types.ml[541,17659+16])
                  Tpat_construct "Cvar"
                  [
                    pattern (lib/types.ml[541,17659+9]..lib/types.ml[541,17659+16])
                      Tpat_record
                      [
                        "commu"
                          pattern (lib/types.ml[541,17659+10]..lib/types.ml[541,17659+15])
                            Tpat_var "commu/2314"
                      ]
                  ]
                  None
                expression (lib/types.ml[541,17659+20]..lib/types.ml[541,17659+37])
                  Texp_apply
                  expression (lib/types.ml[541,17659+20]..lib/types.ml[541,17659+31])
                    Texp_ident "is_commu_ok/2311"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[541,17659+32]..lib/types.ml[541,17659+37])
                        Texp_ident "commu/2314"
                  ]
              <case>
                pattern (lib/types.ml[542,17697+4]..lib/types.ml[542,17697+12])
                  Tpat_construct "Cunknown"
                  []
                  None
                expression (lib/types.ml[542,17697+16]..lib/types.ml[542,17697+21])
                  Texp_construct "false"
                  []
              <case>
                pattern (lib/types.ml[543,17719+4]..lib/types.ml[543,17719+7])
                  Tpat_construct "Cok"
                  []
                  None
                expression (lib/types.ml[543,17719+11]..lib/types.ml[543,17719+15])
                  Texp_construct "true"
                  []
            ]
    ]
  structure_item (lib/types.ml[545,17736+0]..lib/types.ml[545,17736+18])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[545,17736+4]..lib/types.ml[545,17736+12])
          Tpat_var "commu_ok/2320"
        expression (lib/types.ml[545,17736+15]..lib/types.ml[545,17736+18])
          Texp_construct "Cok"
          []
    ]
  structure_item (lib/types.ml[546,17755+0]..lib/types.ml[546,17755+40])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[546,17755+4]..lib/types.ml[546,17755+13])
          Tpat_var "commu_var/2321"
        expression (lib/types.ml[546,17755+14]..lib/types.ml[546,17755+40]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[546,17755+14]..lib/types.ml[546,17755+16])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/types.ml[546,17755+19]..lib/types.ml[546,17755+40])
              Texp_construct "Cvar"
              [
                expression (lib/types.ml[546,17755+24]..lib/types.ml[546,17755+40])
                  Texp_record
                    fields =
                      [
                        "commu"
                          expression (lib/types.ml[546,17755+31]..lib/types.ml[546,17755+39])
                            Texp_construct "Cunknown"
                            []
                      ]
                    representation =
Record_inlined 0
                    extended_expression =
                      None
              ]
    ]
  structure_item (lib/types.ml[550,17835+0]..lib/types.ml[560,18143+7])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[550,17835+8]..lib/types.ml[550,17835+17])
          Tpat_var "repr_link/2324"
        expression (lib/types.ml[550,17835+18]..lib/types.ml[560,18143+7]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[550,17835+19]..lib/types.ml[550,17835+20])
                extra
                  Tpat_extra_constraint
                  core_type (lib/types.ml[550,17835+23]..lib/types.ml[550,17835+32])
                    Ttyp_constr "type_expr/314"
                    []
                Tpat_alias "t/2325"
                pattern (lib/types.ml[550,17835+19]..lib/types.ml[550,17835+20])
                  Tpat_any
            Nolabel
            Param_pat
              pattern (lib/types.ml[550,17835+34]..lib/types.ml[550,17835+35])
                Tpat_var "d/2326"
          ]
          Tfunction_cases (lib/types.ml[551,17898+1]..lib/types.ml[560,18143+7])
            Texp_constraint
            core_type (lib/types.ml[550,17835+38]..lib/types.ml[550,17835+60])
              Ttyp_arrow
              Nolabel
              core_type (lib/types.ml[550,17835+38]..lib/types.ml[550,17835+47])
                Ttyp_constr "type_expr/314"
                []
              core_type (lib/types.ml[550,17835+51]..lib/types.ml[550,17835+60])
                Ttyp_constr "type_expr/314"
                []
            [
              <case>
                pattern (lib/types.ml[552,17908+3]..lib/types.ml[552,17908+26])
                  Tpat_record
                  [
                    "desc"
                      pattern (lib/types.ml[552,17908+11]..lib/types.ml[552,17908+25])
                        Tpat_alias "d'/2328"
                        pattern (lib/types.ml[552,17908+11]..lib/types.ml[552,17908+19])
                          Tpat_construct "Tlink"
                          [
                            pattern (lib/types.ml[552,17908+17]..lib/types.ml[552,17908+19])
                              Tpat_var "t'/2327"
                          ]
                          None
                  ]
                expression (lib/types.ml[553,17938+5]..lib/types.ml[553,17938+22])
                  Texp_apply
                  expression (lib/types.ml[553,17938+5]..lib/types.ml[553,17938+14])
                    Texp_ident "repr_link/2324"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[553,17938+15]..lib/types.ml[553,17938+16])
                        Texp_ident "t/2325"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[553,17938+17]..lib/types.ml[553,17938+19])
                        Texp_ident "d'/2328"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[553,17938+20]..lib/types.ml[553,17938+22])
                        Texp_ident "t'/2327"
                  ]
              <case>
                pattern (lib/types.ml[554,17961+3]..lib/types.ml[554,17961+38])
                  Tpat_record
                  [
                    "desc"
                      pattern (lib/types.ml[554,17961+11]..lib/types.ml[554,17961+37])
                        Tpat_alias "d'/2331"
                        pattern (lib/types.ml[554,17961+11]..lib/types.ml[554,17961+31])
                          Tpat_construct "Tfield"
                          [
                            pattern (lib/types.ml[554,17961+19]..lib/types.ml[554,17961+20])
                              Tpat_any
                            pattern (lib/types.ml[554,17961+22]..lib/types.ml[554,17961+23])
                              Tpat_var "k/2329"
                            pattern (lib/types.ml[554,17961+25]..lib/types.ml[554,17961+26])
                              Tpat_any
                            pattern (lib/types.ml[554,17961+28]..lib/types.ml[554,17961+30])
                              Tpat_var "t'/2330"
                          ]
                          None
                  ]
                <when>
                  expression (lib/types.ml[555,18000+8]..lib/types.ml[555,18000+45])
                    Texp_apply
                    expression (lib/types.ml[555,18000+35]..lib/types.ml[555,18000+36])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[555,18000+8]..lib/types.ml[555,18000+34])
                          Texp_apply
                          expression (lib/types.ml[555,18000+8]..lib/types.ml[555,18000+32])
                            Texp_ident "field_kind_internal_repr/2298"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[555,18000+33]..lib/types.ml[555,18000+34])
                                Texp_ident "k/2329"
                          ]
                      <arg>
                        Nolabel
                        expression (lib/types.ml[555,18000+37]..lib/types.ml[555,18000+45])
                          Texp_construct "FKabsent"
                          []
                    ]
                expression (lib/types.ml[556,18049+5]..lib/types.ml[556,18049+22])
                  Texp_apply
                  expression (lib/types.ml[556,18049+5]..lib/types.ml[556,18049+14])
                    Texp_ident "repr_link/2324"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[556,18049+15]..lib/types.ml[556,18049+16])
                        Texp_ident "t/2325"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[556,18049+17]..lib/types.ml[556,18049+19])
                        Texp_ident "d'/2331"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[556,18049+20]..lib/types.ml[556,18049+22])
                        Texp_ident "t'/2330"
                  ]
              <case>
                pattern (lib/types.ml[557,18072+3]..lib/types.ml[557,18072+5])
                  Tpat_var "t'/2332"
                expression (lib/types.ml[558,18081+5]..lib/types.ml[560,18143+7])
                  Texp_sequence
                  expression (lib/types.ml[558,18081+5]..lib/types.ml[558,18081+42])
                    Texp_apply
                    expression (lib/types.ml[558,18081+5]..lib/types.ml[558,18081+15])
                      Texp_ident "log_change/2290"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[558,18081+16]..lib/types.ml[558,18081+42])
                          Texp_construct "Ccompress"
                          [
                            expression (lib/types.ml[558,18081+28]..lib/types.ml[558,18081+29])
                              Texp_ident "t/2325"
                            expression (lib/types.ml[558,18081+31]..lib/types.ml[558,18081+37])
                              Texp_field
                              expression (lib/types.ml[558,18081+31]..lib/types.ml[558,18081+32])
                                Texp_ident "t/2325"
                              "desc"
                            expression (lib/types.ml[558,18081+39]..lib/types.ml[558,18081+40])
                              Texp_ident "d/2326"
                          ]
                    ]
                  expression (lib/types.ml[559,18125+5]..lib/types.ml[560,18143+7])
                    Texp_sequence
                    expression (lib/types.ml[559,18125+5]..lib/types.ml[559,18125+16])
                      Texp_setfield
                      expression (lib/types.ml[559,18125+5]..lib/types.ml[559,18125+6])
                        Texp_ident "t/2325"
                      "desc"
                      expression (lib/types.ml[559,18125+15]..lib/types.ml[559,18125+16])
                        Texp_ident "d/2326"
                    expression (lib/types.ml[560,18143+5]..lib/types.ml[560,18143+7])
                      Texp_ident "t'/2332"
            ]
    ]
  structure_item (lib/types.ml[562,18152+0]..lib/types.ml[568,18344+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[562,18152+4]..lib/types.ml[562,18152+14])
          Tpat_var "repr_link1/2333"
        expression (lib/types.ml[562,18152+15]..lib/types.ml[568,18344+11]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[562,18152+15]..lib/types.ml[562,18152+16])
                Tpat_var "t/2335"
          ]
          Tfunction_cases (lib/types.ml[562,18152+19]..lib/types.ml[568,18344+11])
            [
              <case>
                pattern (lib/types.ml[563,18180+3]..lib/types.ml[563,18180+26])
                  Tpat_record
                  [
                    "desc"
                      pattern (lib/types.ml[563,18180+11]..lib/types.ml[563,18180+25])
                        Tpat_alias "d'/2337"
                        pattern (lib/types.ml[563,18180+11]..lib/types.ml[563,18180+19])
                          Tpat_construct "Tlink"
                          [
                            pattern (lib/types.ml[563,18180+17]..lib/types.ml[563,18180+19])
                              Tpat_var "t'/2336"
                          ]
                          None
                  ]
                expression (lib/types.ml[564,18210+5]..lib/types.ml[564,18210+22])
                  Texp_apply
                  expression (lib/types.ml[564,18210+5]..lib/types.ml[564,18210+14])
                    Texp_ident "repr_link/2324"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[564,18210+15]..lib/types.ml[564,18210+16])
                        Texp_ident "t/2335"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[564,18210+17]..lib/types.ml[564,18210+19])
                        Texp_ident "d'/2337"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[564,18210+20]..lib/types.ml[564,18210+22])
                        Texp_ident "t'/2336"
                  ]
              <case>
                pattern (lib/types.ml[565,18233+3]..lib/types.ml[565,18233+38])
                  Tpat_record
                  [
                    "desc"
                      pattern (lib/types.ml[565,18233+11]..lib/types.ml[565,18233+37])
                        Tpat_alias "d'/2340"
                        pattern (lib/types.ml[565,18233+11]..lib/types.ml[565,18233+31])
                          Tpat_construct "Tfield"
                          [
                            pattern (lib/types.ml[565,18233+19]..lib/types.ml[565,18233+20])
                              Tpat_any
                            pattern (lib/types.ml[565,18233+22]..lib/types.ml[565,18233+23])
                              Tpat_var "k/2338"
                            pattern (lib/types.ml[565,18233+25]..lib/types.ml[565,18233+26])
                              Tpat_any
                            pattern (lib/types.ml[565,18233+28]..lib/types.ml[565,18233+30])
                              Tpat_var "t'/2339"
                          ]
                          None
                  ]
                <when>
                  expression (lib/types.ml[566,18272+8]..lib/types.ml[566,18272+45])
                    Texp_apply
                    expression (lib/types.ml[566,18272+35]..lib/types.ml[566,18272+36])
                      Texp_ident "Stdlib!.="
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[566,18272+8]..lib/types.ml[566,18272+34])
                          Texp_apply
                          expression (lib/types.ml[566,18272+8]..lib/types.ml[566,18272+32])
                            Texp_ident "field_kind_internal_repr/2298"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[566,18272+33]..lib/types.ml[566,18272+34])
                                Texp_ident "k/2338"
                          ]
                      <arg>
                        Nolabel
                        expression (lib/types.ml[566,18272+37]..lib/types.ml[566,18272+45])
                          Texp_construct "FKabsent"
                          []
                    ]
                expression (lib/types.ml[567,18321+5]..lib/types.ml[567,18321+22])
                  Texp_apply
                  expression (lib/types.ml[567,18321+5]..lib/types.ml[567,18321+14])
                    Texp_ident "repr_link/2324"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[567,18321+15]..lib/types.ml[567,18321+16])
                        Texp_ident "t/2335"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[567,18321+17]..lib/types.ml[567,18321+19])
                        Texp_ident "d'/2340"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[567,18321+20]..lib/types.ml[567,18321+22])
                        Texp_ident "t'/2339"
                  ]
              <case>
                pattern (lib/types.ml[568,18344+3]..lib/types.ml[568,18344+5])
                  Tpat_var "t'/2341"
                expression (lib/types.ml[568,18344+9]..lib/types.ml[568,18344+11])
                  Texp_ident "t'/2341"
            ]
    ]
  structure_item (lib/types.ml[570,18357+0]..lib/types.ml[576,18517+9])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[570,18357+4]..lib/types.ml[570,18357+8])
          Tpat_var "repr/2342"
        expression (lib/types.ml[570,18357+9]..lib/types.ml[576,18517+9]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[570,18357+9]..lib/types.ml[570,18357+10])
                Tpat_var "t/2344"
          ]
          Tfunction_body
            expression (lib/types.ml[571,18370+2]..lib/types.ml[576,18517+9])
              Texp_match
              expression (lib/types.ml[571,18370+8]..lib/types.ml[571,18370+14])
                Texp_field
                expression (lib/types.ml[571,18370+8]..lib/types.ml[571,18370+9])
                  Texp_ident "t/2344"
                "desc"
              [
                <case>
                  pattern (lib/types.ml[572,18390+3]..lib/types.ml[572,18390+11])
                    Tpat_value
                    pattern (lib/types.ml[572,18390+3]..lib/types.ml[572,18390+11])
                      Tpat_construct "Tlink"
                      [
                        pattern (lib/types.ml[572,18390+9]..lib/types.ml[572,18390+11])
                          Tpat_var "t'/2345"
                      ]
                      None
                  expression (lib/types.ml[573,18405+5]..lib/types.ml[573,18405+20])
                    Texp_apply
                    expression (lib/types.ml[573,18405+5]..lib/types.ml[573,18405+15])
                      Texp_ident "repr_link1/2333"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[573,18405+16]..lib/types.ml[573,18405+17])
                          Texp_ident "t/2344"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[573,18405+18]..lib/types.ml[573,18405+20])
                          Texp_ident "t'/2345"
                    ]
                <case>
                  pattern (lib/types.ml[574,18426+3]..lib/types.ml[574,18426+23])
                    Tpat_value
                    pattern (lib/types.ml[574,18426+3]..lib/types.ml[574,18426+23])
                      Tpat_construct "Tfield"
                      [
                        pattern (lib/types.ml[574,18426+11]..lib/types.ml[574,18426+12])
                          Tpat_any
                        pattern (lib/types.ml[574,18426+14]..lib/types.ml[574,18426+15])
                          Tpat_var "k/2346"
                        pattern (lib/types.ml[574,18426+17]..lib/types.ml[574,18426+18])
                          Tpat_any
                        pattern (lib/types.ml[574,18426+20]..lib/types.ml[574,18426+22])
                          Tpat_var "t'/2347"
                      ]
                      None
                  <when>
                    expression (lib/types.ml[574,18426+29]..lib/types.ml[574,18426+66])
                      Texp_apply
                      expression (lib/types.ml[574,18426+56]..lib/types.ml[574,18426+57])
                        Texp_ident "Stdlib!.="
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[574,18426+29]..lib/types.ml[574,18426+55])
                            Texp_apply
                            expression (lib/types.ml[574,18426+29]..lib/types.ml[574,18426+53])
                              Texp_ident "field_kind_internal_repr/2298"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[574,18426+54]..lib/types.ml[574,18426+55])
                                  Texp_ident "k/2346"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/types.ml[574,18426+58]..lib/types.ml[574,18426+66])
                            Texp_construct "FKabsent"
                            []
                      ]
                  expression (lib/types.ml[575,18496+5]..lib/types.ml[575,18496+20])
                    Texp_apply
                    expression (lib/types.ml[575,18496+5]..lib/types.ml[575,18496+15])
                      Texp_ident "repr_link1/2333"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[575,18496+16]..lib/types.ml[575,18496+17])
                          Texp_ident "t/2344"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[575,18496+18]..lib/types.ml[575,18496+20])
                          Texp_ident "t'/2347"
                    ]
                <case>
                  pattern (lib/types.ml[576,18517+3]..lib/types.ml[576,18517+4])
                    Tpat_value
                    pattern (lib/types.ml[576,18517+3]..lib/types.ml[576,18517+4])
                      Tpat_any
                  expression (lib/types.ml[576,18517+8]..lib/types.ml[576,18517+9])
                    Texp_ident "t/2344"
              ]
    ]
  structure_item (lib/types.ml[580,18557+0]..lib/types.ml[580,18557+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[580,18557+4]..lib/types.ml[580,18557+12])
          Tpat_var "get_desc/2348"
        expression (lib/types.ml[580,18557+13]..lib/types.ml[580,18557+30]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[580,18557+13]..lib/types.ml[580,18557+14])
                Tpat_var "t/2350"
          ]
          Tfunction_body
            expression (lib/types.ml[580,18557+17]..lib/types.ml[580,18557+30])
              Texp_field
              expression (lib/types.ml[580,18557+17]..lib/types.ml[580,18557+25])
                Texp_apply
                expression (lib/types.ml[580,18557+18]..lib/types.ml[580,18557+22])
                  Texp_ident "repr/2342"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[580,18557+23]..lib/types.ml[580,18557+24])
                      Texp_ident "t/2350"
                ]
              "desc"
    ]
  structure_item (lib/types.ml[581,18588+0]..lib/types.ml[581,18588+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[581,18588+4]..lib/types.ml[581,18588+13])
          Tpat_var "get_level/2351"
        expression (lib/types.ml[581,18588+14]..lib/types.ml[581,18588+32]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[581,18588+14]..lib/types.ml[581,18588+15])
                Tpat_var "t/2353"
          ]
          Tfunction_body
            expression (lib/types.ml[581,18588+18]..lib/types.ml[581,18588+32])
              Texp_field
              expression (lib/types.ml[581,18588+18]..lib/types.ml[581,18588+26])
                Texp_apply
                expression (lib/types.ml[581,18588+19]..lib/types.ml[581,18588+23])
                  Texp_ident "repr/2342"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[581,18588+24]..lib/types.ml[581,18588+25])
                      Texp_ident "t/2353"
                ]
              "level"
    ]
  structure_item (lib/types.ml[582,18621+0]..lib/types.ml[582,18621+32])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[582,18621+4]..lib/types.ml[582,18621+13])
          Tpat_var "get_scope/2354"
        expression (lib/types.ml[582,18621+14]..lib/types.ml[582,18621+32]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[582,18621+14]..lib/types.ml[582,18621+15])
                Tpat_var "t/2356"
          ]
          Tfunction_body
            expression (lib/types.ml[582,18621+18]..lib/types.ml[582,18621+32])
              Texp_field
              expression (lib/types.ml[582,18621+18]..lib/types.ml[582,18621+26])
                Texp_apply
                expression (lib/types.ml[582,18621+19]..lib/types.ml[582,18621+23])
                  Texp_ident "repr/2342"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[582,18621+24]..lib/types.ml[582,18621+25])
                      Texp_ident "t/2356"
                ]
              "scope"
    ]
  structure_item (lib/types.ml[583,18654+0]..lib/types.ml[583,18654+26])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[583,18654+4]..lib/types.ml[583,18654+10])
          Tpat_var "get_id/2357"
        expression (lib/types.ml[583,18654+11]..lib/types.ml[583,18654+26]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[583,18654+11]..lib/types.ml[583,18654+12])
                Tpat_var "t/2359"
          ]
          Tfunction_body
            expression (lib/types.ml[583,18654+15]..lib/types.ml[583,18654+26])
              Texp_field
              expression (lib/types.ml[583,18654+15]..lib/types.ml[583,18654+23])
                Texp_apply
                expression (lib/types.ml[583,18654+16]..lib/types.ml[583,18654+20])
                  Texp_ident "repr/2342"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[583,18654+21]..lib/types.ml[583,18654+22])
                      Texp_ident "t/2359"
                ]
              "id"
    ]
  structure_item (lib/types.ml[587,18709+0]..lib/types.ml[596,19049+3])
    Tstr_module
    Transient_expr/2389
      module_expr (lib/types.ml[587,18709+24]..lib/types.ml[596,19049+3])
        Tmod_structure
        [
          structure_item (lib/types.ml[588,18740+2]..lib/types.ml[588,18740+62])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[588,18740+6]..lib/types.ml[588,18740+12])
                  Tpat_var "create/2360"
                expression (lib/types.ml[588,18740+13]..lib/types.ml[588,18740+62]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[588,18740+13]..lib/types.ml[588,18740+17])
                        Tpat_var "desc/2362"
                    Labelled "level"
                    Param_pat
                      pattern (lib/types.ml[588,18740+19]..lib/types.ml[588,18740+24])
                        Tpat_var "level/2363"
                    Labelled "scope"
                    Param_pat
                      pattern (lib/types.ml[588,18740+26]..lib/types.ml[588,18740+31])
                        Tpat_var "scope/2364"
                    Labelled "id"
                    Param_pat
                      pattern (lib/types.ml[588,18740+33]..lib/types.ml[588,18740+35])
                        Tpat_var "id/2365"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[588,18740+38]..lib/types.ml[588,18740+62])
                      Texp_record
                        fields =
                          [
                            "desc"
                              expression (lib/types.ml[588,18740+39]..lib/types.ml[588,18740+43])
                                Texp_ident "desc/2362"
                            "level"
                              expression (lib/types.ml[588,18740+45]..lib/types.ml[588,18740+50])
                                Texp_ident "level/2363"
                            "scope"
                              expression (lib/types.ml[588,18740+52]..lib/types.ml[588,18740+57])
                                Texp_ident "scope/2364"
                            "id"
                              expression (lib/types.ml[588,18740+59]..lib/types.ml[588,18740+61])
                                Texp_ident "id/2365"
                          ]
                        representation =
                          Record_regular
                        extended_expression =
                          None
            ]
          structure_item (lib/types.ml[589,18803+2]..lib/types.ml[589,18803+34])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[589,18803+6]..lib/types.ml[589,18803+14])
                  Tpat_var "set_desc/2366"
                expression (lib/types.ml[589,18803+15]..lib/types.ml[589,18803+34]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[589,18803+15]..lib/types.ml[589,18803+17])
                        Tpat_var "ty/2368"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[589,18803+18]..lib/types.ml[589,18803+19])
                        Tpat_var "d/2369"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[589,18803+22]..lib/types.ml[589,18803+34])
                      Texp_setfield
                      expression (lib/types.ml[589,18803+22]..lib/types.ml[589,18803+24])
                        Texp_ident "ty/2368"
                      "desc"
                      expression (lib/types.ml[589,18803+33]..lib/types.ml[589,18803+34])
                        Texp_ident "d/2369"
            ]
          structure_item (lib/types.ml[590,18838+2]..lib/types.ml[590,18838+69])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[590,18838+6]..lib/types.ml[590,18838+19])
                  Tpat_var "set_stub_desc/2370"
                expression (lib/types.ml[590,18838+20]..lib/types.ml[590,18838+69]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[590,18838+20]..lib/types.ml[590,18838+22])
                        Tpat_var "ty/2372"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[590,18838+23]..lib/types.ml[590,18838+24])
                        Tpat_var "d/2373"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[590,18838+27]..lib/types.ml[590,18838+69])
                      Texp_sequence
                      expression (lib/types.ml[590,18838+27]..lib/types.ml[590,18838+55])
                        Texp_assert                        expression (lib/types.ml[590,18838+34]..lib/types.ml[590,18838+55])
                          Texp_apply
                          expression (lib/types.ml[590,18838+43]..lib/types.ml[590,18838+44])
                            Texp_ident "Stdlib!.="
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[590,18838+35]..lib/types.ml[590,18838+42])
                                Texp_field
                                expression (lib/types.ml[590,18838+35]..lib/types.ml[590,18838+37])
                                  Texp_ident "ty/2372"
                                "desc"
                            <arg>
                              Nolabel
                              expression (lib/types.ml[590,18838+45]..lib/types.ml[590,18838+54])
                                Texp_construct "Tvar"
                                [
                                  expression (lib/types.ml[590,18838+50]..lib/types.ml[590,18838+54])
                                    Texp_construct "None"
                                    []
                                ]
                          ]
                      expression (lib/types.ml[590,18838+57]..lib/types.ml[590,18838+69])
                        Texp_setfield
                        expression (lib/types.ml[590,18838+57]..lib/types.ml[590,18838+59])
                          Texp_ident "ty/2372"
                        "desc"
                        expression (lib/types.ml[590,18838+68]..lib/types.ml[590,18838+69])
                          Texp_ident "d/2373"
            ]
          structure_item (lib/types.ml[591,18908+2]..lib/types.ml[591,18908+38])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[591,18908+6]..lib/types.ml[591,18908+15])
                  Tpat_var "set_level/2374"
                expression (lib/types.ml[591,18908+16]..lib/types.ml[591,18908+38]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[591,18908+16]..lib/types.ml[591,18908+18])
                        Tpat_var "ty/2376"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[591,18908+19]..lib/types.ml[591,18908+21])
                        Tpat_var "lv/2377"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[591,18908+24]..lib/types.ml[591,18908+38])
                      Texp_setfield
                      expression (lib/types.ml[591,18908+24]..lib/types.ml[591,18908+26])
                        Texp_ident "ty/2376"
                      "level"
                      expression (lib/types.ml[591,18908+36]..lib/types.ml[591,18908+38])
                        Texp_ident "lv/2377"
            ]
          structure_item (lib/types.ml[592,18947+2]..lib/types.ml[592,18947+38])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[592,18947+6]..lib/types.ml[592,18947+15])
                  Tpat_var "set_scope/2378"
                expression (lib/types.ml[592,18947+16]..lib/types.ml[592,18947+38]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[592,18947+16]..lib/types.ml[592,18947+18])
                        Tpat_var "ty/2380"
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[592,18947+19]..lib/types.ml[592,18947+21])
                        Tpat_var "sc/2381"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[592,18947+24]..lib/types.ml[592,18947+38])
                      Texp_setfield
                      expression (lib/types.ml[592,18947+24]..lib/types.ml[592,18947+26])
                        Texp_ident "ty/2380"
                      "scope"
                      expression (lib/types.ml[592,18947+36]..lib/types.ml[592,18947+38])
                        Texp_ident "sc/2381"
            ]
          structure_item (lib/types.ml[593,18986+2]..lib/types.ml[593,18986+20])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[593,18986+6]..lib/types.ml[593,18986+12])
                  Tpat_var "coerce/2382"
                expression (lib/types.ml[593,18986+13]..lib/types.ml[593,18986+20]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[593,18986+13]..lib/types.ml[593,18986+15])
                        Tpat_var "ty/2384"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[593,18986+18]..lib/types.ml[593,18986+20])
                      Texp_ident "ty/2384"
            ]
          structure_item (lib/types.ml[594,19007+2]..lib/types.ml[594,19007+17])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[594,19007+6]..lib/types.ml[594,19007+10])
                  Tpat_var "repr/2385"
                expression (lib/types.ml[594,19007+13]..lib/types.ml[594,19007+17])
                  Texp_ident "repr/2342"
            ]
          structure_item (lib/types.ml[595,19025+2]..lib/types.ml[595,19025+23])
            Tstr_value Nonrec
            [
              <def>
                pattern (lib/types.ml[595,19025+6]..lib/types.ml[595,19025+15])
                  Tpat_var "type_expr/2386"
                expression (lib/types.ml[595,19025+16]..lib/types.ml[595,19025+23]) ghost
                  Texp_function
                  [
                    Nolabel
                    Param_pat
                      pattern (lib/types.ml[595,19025+16]..lib/types.ml[595,19025+18])
                        Tpat_var "ty/2388"
                  ]
                  Tfunction_body
                    expression (lib/types.ml[595,19025+21]..lib/types.ml[595,19025+23])
                      Texp_ident "ty/2388"
            ]
        ]
  structure_item (lib/types.ml[600,19117+0]..lib/types.ml[600,19117+50])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[600,19117+4]..lib/types.ml[600,19117+11])
          Tpat_var "eq_type/2390"
        expression (lib/types.ml[600,19117+12]..lib/types.ml[600,19117+50]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[600,19117+12]..lib/types.ml[600,19117+14])
                Tpat_var "t1/2392"
            Nolabel
            Param_pat
              pattern (lib/types.ml[600,19117+15]..lib/types.ml[600,19117+17])
                Tpat_var "t2/2393"
          ]
          Tfunction_body
            expression (lib/types.ml[600,19117+20]..lib/types.ml[600,19117+50])
              Texp_apply
              expression (lib/types.ml[600,19117+29]..lib/types.ml[600,19117+31])
                Texp_ident "Stdlib!.||"
              [
                <arg>
                  Nolabel
                  expression (lib/types.ml[600,19117+20]..lib/types.ml[600,19117+28])
                    Texp_apply
                    expression (lib/types.ml[600,19117+23]..lib/types.ml[600,19117+25])
                      Texp_ident "Stdlib!.=="
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[600,19117+20]..lib/types.ml[600,19117+22])
                          Texp_ident "t1/2392"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[600,19117+26]..lib/types.ml[600,19117+28])
                          Texp_ident "t2/2393"
                    ]
                <arg>
                  Nolabel
                  expression (lib/types.ml[600,19117+32]..lib/types.ml[600,19117+50])
                    Texp_apply
                    expression (lib/types.ml[600,19117+40]..lib/types.ml[600,19117+42])
                      Texp_ident "Stdlib!.=="
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[600,19117+32]..lib/types.ml[600,19117+39])
                          Texp_apply
                          expression (lib/types.ml[600,19117+32]..lib/types.ml[600,19117+36])
                            Texp_ident "repr/2342"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[600,19117+37]..lib/types.ml[600,19117+39])
                                Texp_ident "t1/2392"
                          ]
                      <arg>
                        Nolabel
                        expression (lib/types.ml[600,19117+43]..lib/types.ml[600,19117+50])
                          Texp_apply
                          expression (lib/types.ml[600,19117+43]..lib/types.ml[600,19117+47])
                            Texp_ident "repr/2342"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[600,19117+48]..lib/types.ml[600,19117+50])
                                Texp_ident "t2/2393"
                          ]
                    ]
              ]
    ]
  structure_item (lib/types.ml[601,19168+0]..lib/types.ml[601,19168+56])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[601,19168+4]..lib/types.ml[601,19168+16])
          Tpat_var "compare_type/2394"
        expression (lib/types.ml[601,19168+17]..lib/types.ml[601,19168+56]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[601,19168+17]..lib/types.ml[601,19168+19])
                Tpat_var "t1/2396"
            Nolabel
            Param_pat
              pattern (lib/types.ml[601,19168+20]..lib/types.ml[601,19168+22])
                Tpat_var "t2/2397"
          ]
          Tfunction_body
            expression (lib/types.ml[601,19168+25]..lib/types.ml[601,19168+56])
              Texp_apply
              expression (lib/types.ml[601,19168+25]..lib/types.ml[601,19168+32])
                Texp_ident "Stdlib!.compare"
              [
                <arg>
                  Nolabel
                  expression (lib/types.ml[601,19168+33]..lib/types.ml[601,19168+44])
                    Texp_apply
                    expression (lib/types.ml[601,19168+34]..lib/types.ml[601,19168+40])
                      Texp_ident "get_id/2357"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[601,19168+41]..lib/types.ml[601,19168+43])
                          Texp_ident "t1/2396"
                    ]
                <arg>
                  Nolabel
                  expression (lib/types.ml[601,19168+45]..lib/types.ml[601,19168+56])
                    Texp_apply
                    expression (lib/types.ml[601,19168+46]..lib/types.ml[601,19168+52])
                      Texp_ident "get_id/2357"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[601,19168+53]..lib/types.ml[601,19168+55])
                          Texp_ident "t2/2397"
                    ]
              ]
    ]
  structure_item (lib/types.ml[605,19274+0]..lib/types.ml[607,19366+57])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[605,19274+4]..lib/types.ml[605,19274+14])
          Tpat_var "create_row/2398"
        expression (lib/types.ml[605,19274+15]..lib/types.ml[607,19366+57]) ghost
          Texp_function
          [
            Labelled "fields"
            Param_pat
              pattern (lib/types.ml[605,19274+16]..lib/types.ml[605,19274+22])
                Tpat_var "fields/2400"
            Labelled "more"
            Param_pat
              pattern (lib/types.ml[605,19274+24]..lib/types.ml[605,19274+28])
                Tpat_var "more/2401"
            Labelled "closed"
            Param_pat
              pattern (lib/types.ml[605,19274+30]..lib/types.ml[605,19274+36])
                Tpat_var "closed/2402"
            Labelled "fixed"
            Param_pat
              pattern (lib/types.ml[605,19274+38]..lib/types.ml[605,19274+43])
                Tpat_var "fixed/2403"
            Labelled "name"
            Param_pat
              pattern (lib/types.ml[605,19274+45]..lib/types.ml[605,19274+49])
                Tpat_var "name/2404"
          ]
          Tfunction_body
            expression (lib/types.ml[606,19326+4]..lib/types.ml[607,19366+57])
              Texp_record
                fields =
                  [
                    "row_fields"
                      expression (lib/types.ml[606,19326+17]..lib/types.ml[606,19326+23])
                        Texp_ident "fields/2400"
                    "row_more"
                      expression (lib/types.ml[606,19326+34]..lib/types.ml[606,19326+38])
                        Texp_ident "more/2401"
                    "row_closed"
                      expression (lib/types.ml[607,19366+17]..lib/types.ml[607,19366+23])
                        Texp_ident "closed/2402"
                    "row_fixed"
                      expression (lib/types.ml[607,19366+35]..lib/types.ml[607,19366+40])
                        Texp_ident "fixed/2403"
                    "row_name"
                      expression (lib/types.ml[607,19366+51]..lib/types.ml[607,19366+55])
                        Texp_ident "name/2404"
                  ]
                representation =
                  Record_regular
                extended_expression =
                  None
    ]
  structure_item (lib/types.ml[610,19477+0]..lib/types.ml[615,19606+20])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[610,19477+8]..lib/types.ml[610,19477+18])
          Tpat_var "row_fields/2405"
        expression (lib/types.ml[610,19477+19]..lib/types.ml[615,19606+20]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[610,19477+19]..lib/types.ml[610,19477+22])
                Tpat_var "row/2406"
          ]
          Tfunction_body
            expression (lib/types.ml[611,19502+2]..lib/types.ml[615,19606+20])
              Texp_match
              expression (lib/types.ml[611,19502+8]..lib/types.ml[611,19502+29])
                Texp_apply
                expression (lib/types.ml[611,19502+8]..lib/types.ml[611,19502+16])
                  Texp_ident "get_desc/2348"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[611,19502+17]..lib/types.ml[611,19502+29])
                      Texp_field
                      expression (lib/types.ml[611,19502+17]..lib/types.ml[611,19502+20])
                        Texp_ident "row/2406"
                      "row_more"
                ]
              [
                <case>
                  pattern (lib/types.ml[612,19537+4]..lib/types.ml[612,19537+17])
                    Tpat_value
                    pattern (lib/types.ml[612,19537+4]..lib/types.ml[612,19537+17])
                      Tpat_construct "Tvariant"
                      [
                        pattern (lib/types.ml[612,19537+13]..lib/types.ml[612,19537+17])
                          Tpat_var "row'/2407"
                      ]
                      None
                  expression (lib/types.ml[613,19558+6]..lib/types.ml[613,19558+38])
                    Texp_apply
                    expression (lib/types.ml[613,19558+21]..lib/types.ml[613,19558+22])
                      Texp_ident "Stdlib!.@"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[613,19558+6]..lib/types.ml[613,19558+20])
                          Texp_field
                          expression (lib/types.ml[613,19558+6]..lib/types.ml[613,19558+9])
                            Texp_ident "row/2406"
                          "row_fields"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[613,19558+23]..lib/types.ml[613,19558+38])
                          Texp_apply
                          expression (lib/types.ml[613,19558+23]..lib/types.ml[613,19558+33])
                            Texp_ident "row_fields/2405"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[613,19558+34]..lib/types.ml[613,19558+38])
                                Texp_ident "row'/2407"
                          ]
                    ]
                <case>
                  pattern (lib/types.ml[614,19597+4]..lib/types.ml[614,19597+5])
                    Tpat_value
                    pattern (lib/types.ml[614,19597+4]..lib/types.ml[614,19597+5])
                      Tpat_any
                  expression (lib/types.ml[615,19606+6]..lib/types.ml[615,19606+20])
                    Texp_field
                    expression (lib/types.ml[615,19606+6]..lib/types.ml[615,19606+9])
                      Texp_ident "row/2406"
                    "row_fields"
              ]
    ]
  structure_item (lib/types.ml[617,19628+0]..lib/types.ml[620,19741+12])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[617,19628+8]..lib/types.ml[617,19628+26])
          Tpat_var "row_repr_no_fields/2408"
        expression (lib/types.ml[617,19628+27]..lib/types.ml[620,19741+12]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[617,19628+27]..lib/types.ml[617,19628+30])
                Tpat_var "row/2409"
          ]
          Tfunction_body
            expression (lib/types.ml[618,19661+2]..lib/types.ml[620,19741+12])
              Texp_match
              expression (lib/types.ml[618,19661+8]..lib/types.ml[618,19661+29])
                Texp_apply
                expression (lib/types.ml[618,19661+8]..lib/types.ml[618,19661+16])
                  Texp_ident "get_desc/2348"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[618,19661+17]..lib/types.ml[618,19661+29])
                      Texp_field
                      expression (lib/types.ml[618,19661+17]..lib/types.ml[618,19661+20])
                        Texp_ident "row/2409"
                      "row_more"
                ]
              [
                <case>
                  pattern (lib/types.ml[619,19696+4]..lib/types.ml[619,19696+17])
                    Tpat_value
                    pattern (lib/types.ml[619,19696+4]..lib/types.ml[619,19696+17])
                      Tpat_construct "Tvariant"
                      [
                        pattern (lib/types.ml[619,19696+13]..lib/types.ml[619,19696+17])
                          Tpat_var "row'/2410"
                      ]
                      None
                  expression (lib/types.ml[619,19696+21]..lib/types.ml[619,19696+44])
                    Texp_apply
                    expression (lib/types.ml[619,19696+21]..lib/types.ml[619,19696+39])
                      Texp_ident "row_repr_no_fields/2408"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[619,19696+40]..lib/types.ml[619,19696+44])
                          Texp_ident "row'/2410"
                    ]
                <case>
                  pattern (lib/types.ml[620,19741+4]..lib/types.ml[620,19741+5])
                    Tpat_value
                    pattern (lib/types.ml[620,19741+4]..lib/types.ml[620,19741+5])
                      Tpat_any
                  expression (lib/types.ml[620,19741+9]..lib/types.ml[620,19741+12])
                    Texp_ident "row/2409"
              ]
    ]
  structure_item (lib/types.ml[622,19755+0]..lib/types.ml[622,19755+52])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[622,19755+4]..lib/types.ml[622,19755+12])
          Tpat_var "row_more/2411"
        expression (lib/types.ml[622,19755+13]..lib/types.ml[622,19755+52]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[622,19755+13]..lib/types.ml[622,19755+16])
                Tpat_var "row/2413"
          ]
          Tfunction_body
            expression (lib/types.ml[622,19755+19]..lib/types.ml[622,19755+52])
              Texp_field
              expression (lib/types.ml[622,19755+19]..lib/types.ml[622,19755+43])
                Texp_apply
                expression (lib/types.ml[622,19755+20]..lib/types.ml[622,19755+38])
                  Texp_ident "row_repr_no_fields/2408"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[622,19755+39]..lib/types.ml[622,19755+42])
                      Texp_ident "row/2413"
                ]
              "row_more"
    ]
  structure_item (lib/types.ml[623,19808+0]..lib/types.ml[623,19808+56])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[623,19808+4]..lib/types.ml[623,19808+14])
          Tpat_var "row_closed/2414"
        expression (lib/types.ml[623,19808+15]..lib/types.ml[623,19808+56]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[623,19808+15]..lib/types.ml[623,19808+18])
                Tpat_var "row/2416"
          ]
          Tfunction_body
            expression (lib/types.ml[623,19808+21]..lib/types.ml[623,19808+56])
              Texp_field
              expression (lib/types.ml[623,19808+21]..lib/types.ml[623,19808+45])
                Texp_apply
                expression (lib/types.ml[623,19808+22]..lib/types.ml[623,19808+40])
                  Texp_ident "row_repr_no_fields/2408"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[623,19808+41]..lib/types.ml[623,19808+44])
                      Texp_ident "row/2416"
                ]
              "row_closed"
    ]
  structure_item (lib/types.ml[624,19865+0]..lib/types.ml[624,19865+54])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[624,19865+4]..lib/types.ml[624,19865+13])
          Tpat_var "row_fixed/2417"
        expression (lib/types.ml[624,19865+14]..lib/types.ml[624,19865+54]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[624,19865+14]..lib/types.ml[624,19865+17])
                Tpat_var "row/2419"
          ]
          Tfunction_body
            expression (lib/types.ml[624,19865+20]..lib/types.ml[624,19865+54])
              Texp_field
              expression (lib/types.ml[624,19865+20]..lib/types.ml[624,19865+44])
                Texp_apply
                expression (lib/types.ml[624,19865+21]..lib/types.ml[624,19865+39])
                  Texp_ident "row_repr_no_fields/2408"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[624,19865+40]..lib/types.ml[624,19865+43])
                      Texp_ident "row/2419"
                ]
              "row_fixed"
    ]
  structure_item (lib/types.ml[625,19920+0]..lib/types.ml[625,19920+52])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[625,19920+4]..lib/types.ml[625,19920+12])
          Tpat_var "row_name/2420"
        expression (lib/types.ml[625,19920+13]..lib/types.ml[625,19920+52]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[625,19920+13]..lib/types.ml[625,19920+16])
                Tpat_var "row/2422"
          ]
          Tfunction_body
            expression (lib/types.ml[625,19920+19]..lib/types.ml[625,19920+52])
              Texp_field
              expression (lib/types.ml[625,19920+19]..lib/types.ml[625,19920+43])
                Texp_apply
                expression (lib/types.ml[625,19920+20]..lib/types.ml[625,19920+38])
                  Texp_ident "row_repr_no_fields/2408"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[625,19920+39]..lib/types.ml[625,19920+42])
                      Texp_ident "row/2422"
                ]
              "row_name"
    ]
  structure_item (lib/types.ml[627,19974+0]..lib/types.ml[635,20233+24])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[627,19974+8]..lib/types.ml[627,19974+21])
          Tpat_var "get_row_field/2423"
        expression (lib/types.ml[627,19974+22]..lib/types.ml[635,20233+24]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[627,19974+22]..lib/types.ml[627,19974+25])
                Tpat_var "tag/2424"
            Nolabel
            Param_pat
              pattern (lib/types.ml[627,19974+26]..lib/types.ml[627,19974+29])
                Tpat_var "row/2425"
          ]
          Tfunction_body
            expression (lib/types.ml[628,20006+2]..lib/types.ml[635,20233+24])
              Texp_let Rec
              [
                <def>
                  pattern (lib/types.ml[628,20006+10]..lib/types.ml[628,20006+14])
                    Tpat_var "find/2426"
                  expression (lib/types.ml[628,20006+17]..lib/types.ml[634,20209+23])
                    Texp_function
                    []
                    Tfunction_cases (lib/types.ml[628,20006+17]..lib/types.ml[634,20209+23])
                      [
                        <case>
                          pattern (lib/types.ml[629,20032+6]..lib/types.ml[629,20032+24])
                            Tpat_construct "::"
                            [
                              pattern (lib/types.ml[629,20032+6]..lib/types.ml[629,20032+14])
                                Tpat_tuple
                                [
                                  pattern (lib/types.ml[629,20032+7]..lib/types.ml[629,20032+11])
                                    Tpat_var "tag'/2427"
                                  pattern (lib/types.ml[629,20032+12]..lib/types.ml[629,20032+13])
                                    Tpat_var "f/2428"
                                ]
                              pattern (lib/types.ml[629,20032+18]..lib/types.ml[629,20032+24])
                                Tpat_var "fields/2429"
                            ]
                            None
                          expression (lib/types.ml[630,20060+8]..lib/types.ml[630,20060+45])
                            Texp_ifthenelse
                            expression (lib/types.ml[630,20060+11]..lib/types.ml[630,20060+21])
                              Texp_apply
                              expression (lib/types.ml[630,20060+15]..lib/types.ml[630,20060+16])
                                Texp_ident "Stdlib!.="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[630,20060+11]..lib/types.ml[630,20060+14])
                                    Texp_ident "tag/2424"
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[630,20060+17]..lib/types.ml[630,20060+21])
                                    Texp_ident "tag'/2427"
                              ]
                            expression (lib/types.ml[630,20060+27]..lib/types.ml[630,20060+28])
                              Texp_ident "f/2428"
                            Some
                              expression (lib/types.ml[630,20060+34]..lib/types.ml[630,20060+45])
                                Texp_apply
                                expression (lib/types.ml[630,20060+34]..lib/types.ml[630,20060+38])
                                  Texp_ident "find/2426"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[630,20060+39]..lib/types.ml[630,20060+45])
                                      Texp_ident "fields/2429"
                                ]
                        <case>
                          pattern (lib/types.ml[631,20106+6]..lib/types.ml[631,20106+8])
                            Tpat_construct "[]"
                            []
                            None
                          expression (lib/types.ml[632,20118+8]..lib/types.ml[634,20209+23])
                            Texp_match
                            expression (lib/types.ml[632,20118+14]..lib/types.ml[632,20118+35])
                              Texp_apply
                              expression (lib/types.ml[632,20118+14]..lib/types.ml[632,20118+22])
                                Texp_ident "get_desc/2348"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[632,20118+23]..lib/types.ml[632,20118+35])
                                    Texp_field
                                    expression (lib/types.ml[632,20118+23]..lib/types.ml[632,20118+26])
                                      Texp_ident "row/2425"
                                    "row_more"
                              ]
                            [
                              <case>
                                pattern (lib/types.ml[633,20159+10]..lib/types.ml[633,20159+23])
                                  Tpat_value
                                  pattern (lib/types.ml[633,20159+10]..lib/types.ml[633,20159+23])
                                    Tpat_construct "Tvariant"
                                    [
                                      pattern (lib/types.ml[633,20159+19]..lib/types.ml[633,20159+23])
                                        Tpat_var "row'/2430"
                                    ]
                                    None
                                expression (lib/types.ml[633,20159+27]..lib/types.ml[633,20159+49])
                                  Texp_apply
                                  expression (lib/types.ml[633,20159+27]..lib/types.ml[633,20159+40])
                                    Texp_ident "get_row_field/2423"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/types.ml[633,20159+41]..lib/types.ml[633,20159+44])
                                        Texp_ident "tag/2424"
                                    <arg>
                                      Nolabel
                                      expression (lib/types.ml[633,20159+45]..lib/types.ml[633,20159+49])
                                        Texp_ident "row'/2430"
                                  ]
                              <case>
                                pattern (lib/types.ml[634,20209+10]..lib/types.ml[634,20209+11])
                                  Tpat_value
                                  pattern (lib/types.ml[634,20209+10]..lib/types.ml[634,20209+11])
                                    Tpat_any
                                expression (lib/types.ml[634,20209+15]..lib/types.ml[634,20209+23])
                                  Texp_construct "RFabsent"
                                  []
                            ]
                      ]
              ]
              expression (lib/types.ml[635,20233+5]..lib/types.ml[635,20233+24])
                Texp_apply
                expression (lib/types.ml[635,20233+5]..lib/types.ml[635,20233+9])
                  Texp_ident "find/2426"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[635,20233+10]..lib/types.ml[635,20233+24])
                      Texp_field
                      expression (lib/types.ml[635,20233+10]..lib/types.ml[635,20233+13])
                        Texp_ident "row/2425"
                      "row_fields"
                ]
    ]
  structure_item (lib/types.ml[637,20259+0]..lib/types.ml[640,20366+33])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[637,20259+4]..lib/types.ml[637,20259+16])
          Tpat_var "set_row_name/2432"
        expression (lib/types.ml[637,20259+17]..lib/types.ml[640,20366+33]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[637,20259+17]..lib/types.ml[637,20259+20])
                Tpat_var "row/2434"
            Nolabel
            Param_pat
              pattern (lib/types.ml[637,20259+21]..lib/types.ml[637,20259+29])
                Tpat_var "row_name/2435"
          ]
          Tfunction_body
            expression (lib/types.ml[638,20291+2]..lib/types.ml[640,20366+33])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[638,20291+6]..lib/types.ml[638,20291+16])
                    Tpat_var "row_fields/2436"
                  expression (lib/types.ml[638,20291+19]..lib/types.ml[638,20291+33])
                    Texp_apply
                    expression (lib/types.ml[638,20291+19]..lib/types.ml[638,20291+29])
                      Texp_ident "row_fields/2405"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[638,20291+30]..lib/types.ml[638,20291+33])
                          Texp_ident "row/2434"
                    ]
              ]
              expression (lib/types.ml[639,20328+2]..lib/types.ml[640,20366+33])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/types.ml[639,20328+6]..lib/types.ml[639,20328+9])
                      Tpat_var "row/2437"
                    expression (lib/types.ml[639,20328+12]..lib/types.ml[639,20328+34])
                      Texp_apply
                      expression (lib/types.ml[639,20328+12]..lib/types.ml[639,20328+30])
                        Texp_ident "row_repr_no_fields/2408"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[639,20328+31]..lib/types.ml[639,20328+34])
                            Texp_ident "row/2434"
                      ]
                ]
                expression (lib/types.ml[640,20366+2]..lib/types.ml[640,20366+33])
                  Texp_record
                    fields =
                      [
                        "row_fields"
                          expression (lib/types.ml[640,20366+12]..lib/types.ml[640,20366+22])
                            Texp_ident "row_fields/2436"
                        <kept>                        <kept>                        <kept>                        "row_name"
                          expression (lib/types.ml[640,20366+24]..lib/types.ml[640,20366+32])
                            Texp_ident "row_name/2435"
                      ]
                    representation =
                      Record_regular
                    extended_expression =
                      Some
                        expression (lib/types.ml[640,20366+3]..lib/types.ml[640,20366+6])
                          Texp_ident "row/2437"
    ]
  structure_item (lib/types.ml[642,20401+0]..lib/types.ml[647,20569+52])
    Tstr_type Rec
    [
      type_declaration row_desc_repr/2438 (lib/types.ml[642,20401+0]..lib/types.ml[647,20569+52])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[643,20422+4]..lib/types.ml[647,20569+52])
                Row/2439
                [
                  (lib/types.ml[643,20422+13]..lib/types.ml[643,20422+46])
                    Immutable
                    fields/2440                    core_type (lib/types.ml[643,20422+21]..lib/types.ml[643,20422+45])
                      Ttyp_poly
                      core_type (lib/types.ml[643,20422+21]..lib/types.ml[643,20422+45])
                        Ttyp_constr "list/9!"
                        [
                          core_type (lib/types.ml[643,20422+22]..lib/types.ml[643,20422+39])
                            Ttyp_tuple
                            [
                              core_type (lib/types.ml[643,20422+22]..lib/types.ml[643,20422+27])
                                Ttyp_constr "Ocaml_ocaml_types!.Asttypes.label"
                                []
                              core_type (lib/types.ml[643,20422+30]..lib/types.ml[643,20422+39])
                                Ttyp_constr "row_field/318"
                                []
                            ]
                        ]
                  (lib/types.ml[644,20469+13]..lib/types.ml[644,20469+28])
                    Immutable
                    more/2441                    core_type (lib/types.ml[644,20469+18]..lib/types.ml[644,20469+27])
                      Ttyp_poly
                      core_type (lib/types.ml[644,20469+18]..lib/types.ml[644,20469+27])
                        Ttyp_constr "type_expr/314"
                        []
                  (lib/types.ml[645,20498+13]..lib/types.ml[645,20498+25])
                    Immutable
                    closed/2442                    core_type (lib/types.ml[645,20498+20]..lib/types.ml[645,20498+24])
                      Ttyp_poly
                      core_type (lib/types.ml[645,20498+20]..lib/types.ml[645,20498+24])
                        Ttyp_constr "bool/5!"
                        []
                  (lib/types.ml[646,20524+13]..lib/types.ml[646,20524+44])
                    Immutable
                    fixed/2443                    core_type (lib/types.ml[646,20524+19]..lib/types.ml[646,20524+43])
                      Ttyp_poly
                      core_type (lib/types.ml[646,20524+19]..lib/types.ml[646,20524+43])
                        Ttyp_constr "option/10!"
                        [
                          core_type (lib/types.ml[646,20524+19]..lib/types.ml[646,20524+36])
                            Ttyp_constr "fixed_explanation/317"
                            []
                        ]
                  (lib/types.ml[647,20569+13]..lib/types.ml[647,20569+50])
                    Immutable
                    name/2444                    core_type (lib/types.ml[647,20569+18]..lib/types.ml[647,20569+50])
                      Ttyp_poly
                      core_type (lib/types.ml[647,20569+18]..lib/types.ml[647,20569+50])
                        Ttyp_constr "option/10!"
                        [
                          core_type (lib/types.ml[647,20569+19]..lib/types.ml[647,20569+42])
                            Ttyp_tuple
                            [
                              core_type (lib/types.ml[647,20569+19]..lib/types.ml[647,20569+25])
                                Ttyp_constr "Ocaml_ocaml_types!.Path.t"
                                []
                              core_type (lib/types.ml[647,20569+28]..lib/types.ml[647,20569+42])
                                Ttyp_constr "list/9!"
                                [
                                  core_type (lib/types.ml[647,20569+28]..lib/types.ml[647,20569+37])
                                    Ttyp_constr "type_expr/314"
                                    []
                                ]
                            ]
                        ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[649,20623+0]..lib/types.ml[656,20822+29])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[649,20623+4]..lib/types.ml[649,20623+12])
          Tpat_var "row_repr/2445"
        expression (lib/types.ml[649,20623+13]..lib/types.ml[656,20822+29]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[649,20623+13]..lib/types.ml[649,20623+16])
                Tpat_var "row/2447"
          ]
          Tfunction_body
            expression (lib/types.ml[650,20642+2]..lib/types.ml[656,20822+29])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[650,20642+6]..lib/types.ml[650,20642+12])
                    Tpat_var "fields/2448"
                  expression (lib/types.ml[650,20642+15]..lib/types.ml[650,20642+29])
                    Texp_apply
                    expression (lib/types.ml[650,20642+15]..lib/types.ml[650,20642+25])
                      Texp_ident "row_fields/2405"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[650,20642+26]..lib/types.ml[650,20642+29])
                          Texp_ident "row/2447"
                    ]
              ]
              expression (lib/types.ml[651,20675+2]..lib/types.ml[656,20822+29])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/types.ml[651,20675+6]..lib/types.ml[651,20675+9])
                      Tpat_var "row/2449"
                    expression (lib/types.ml[651,20675+12]..lib/types.ml[651,20675+34])
                      Texp_apply
                      expression (lib/types.ml[651,20675+12]..lib/types.ml[651,20675+30])
                        Texp_ident "row_repr_no_fields/2408"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[651,20675+31]..lib/types.ml[651,20675+34])
                            Texp_ident "row/2447"
                      ]
                ]
                expression (lib/types.ml[652,20713+2]..lib/types.ml[656,20822+29])
                  Texp_construct "Row"
                  [
                    expression (lib/types.ml[652,20713+6]..lib/types.ml[656,20822+29])
                      Texp_record
                        fields =
                          [
                            "fields"
                              expression (lib/types.ml[652,20713+8]..lib/types.ml[652,20713+14])
                                Texp_ident "fields/2448"
                            "more"
                              expression (lib/types.ml[653,20729+15]..lib/types.ml[653,20729+27])
                                Texp_field
                                expression (lib/types.ml[653,20729+15]..lib/types.ml[653,20729+18])
                                  Texp_ident "row/2449"
                                "row_more"
                            "closed"
                              expression (lib/types.ml[654,20758+17]..lib/types.ml[654,20758+31])
                                Texp_field
                                expression (lib/types.ml[654,20758+17]..lib/types.ml[654,20758+20])
                                  Texp_ident "row/2449"
                                "row_closed"
                            "fixed"
                              expression (lib/types.ml[655,20791+16]..lib/types.ml[655,20791+29])
                                Texp_field
                                expression (lib/types.ml[655,20791+16]..lib/types.ml[655,20791+19])
                                  Texp_ident "row/2449"
                                "row_fixed"
                            "name"
                              expression (lib/types.ml[656,20822+15]..lib/types.ml[656,20822+27])
                                Texp_field
                                expression (lib/types.ml[656,20822+15]..lib/types.ml[656,20822+18])
                                  Texp_ident "row/2449"
                                "row_name"
                          ]
                        representation =
Record_inlined 0
                        extended_expression =
                          None
                  ]
    ]
  structure_item (lib/types.ml[658,20853+0]..lib/types.ml[664,21097+11])
    Tstr_type Rec
    [
      type_declaration row_field_view/2450 (lib/types.ml[658,20853+0]..lib/types.ml[664,21097+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_variant
            [
              (lib/types.ml[659,20875+4]..lib/types.ml[659,20875+32])
                Rpresent/2451
                [
                  core_type (lib/types.ml[659,20875+16]..lib/types.ml[659,20875+32])
                    Ttyp_constr "option/10!"
                    [
                      core_type (lib/types.ml[659,20875+16]..lib/types.ml[659,20875+25])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
                ]
                None
              (lib/types.ml[660,20908+2]..lib/types.ml[660,20908+43])
                Reither/2452
                [
                  core_type (lib/types.ml[660,20908+15]..lib/types.ml[660,20908+19])
                    Ttyp_constr "bool/5!"
                    []
                  core_type (lib/types.ml[660,20908+22]..lib/types.ml[660,20908+36])
                    Ttyp_constr "list/9!"
                    [
                      core_type (lib/types.ml[660,20908+22]..lib/types.ml[660,20908+31])
                        Ttyp_constr "type_expr/314"
                        []
                    ]
                  core_type (lib/types.ml[660,20908+39]..lib/types.ml[660,20908+43])
                    Ttyp_constr "bool/5!"
                    []
                ]
                None
              (lib/types.ml[664,21097+2]..lib/types.ml[664,21097+11])
                Rabsent/2453
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lib/types.ml[666,21110+0]..lib/types.ml[675,21525+24])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[666,21110+8]..lib/types.ml[666,21110+26])
          Tpat_var "row_field_repr_aux/2454"
        expression (lib/types.ml[666,21110+27]..lib/types.ml[675,21525+24]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[666,21110+27]..lib/types.ml[666,21110+29])
                Tpat_var "tl/2455"
          ]
          Tfunction_cases (lib/types.ml[666,21110+57]..lib/types.ml[675,21525+24])
            Texp_constraint
            core_type (lib/types.ml[666,21110+32]..lib/types.ml[666,21110+54])
              Ttyp_arrow
              Nolabel
              core_type (lib/types.ml[666,21110+32]..lib/types.ml[666,21110+41])
                Ttyp_constr "row_field/318"
                []
              core_type (lib/types.ml[666,21110+45]..lib/types.ml[666,21110+54])
                Ttyp_constr "row_field/318"
                []
            [
              <case>
                pattern (lib/types.ml[667,21176+4]..lib/types.ml[667,21176+47])
                  Tpat_construct "RFeither"
                  [
                    pattern (lib/types.ml[667,21176+13]..lib/types.ml[667,21176+47])
                      Tpat_alias "r/2456"
                      pattern (lib/types.ml[667,21176+14]..lib/types.ml[667,21176+41])
                        Tpat_record
                        [
                          "ext"
                            pattern (lib/types.ml[667,21176+21]..lib/types.ml[667,21176+40])
                              Tpat_record
                              [
                                "contents"
                                  pattern (lib/types.ml[667,21176+33]..lib/types.ml[667,21176+39])
                                    Tpat_construct "RFnone"
                                    []
                                    None
                              ]
                        ]
                  ]
                  None
                expression (lib/types.ml[668,21227+6]..lib/types.ml[668,21227+48])
                  Texp_construct "RFeither"
                  [
                    expression (lib/types.ml[668,21227+15]..lib/types.ml[668,21227+48])
                      Texp_record
                        fields =
                          [
                            <kept>                            "arg_type"
                              expression (lib/types.ml[668,21227+34]..lib/types.ml[668,21227+47])
                                Texp_apply
                                expression (lib/types.ml[668,21227+36]..lib/types.ml[668,21227+37])
                                  Texp_ident "Stdlib!.@"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[668,21227+34]..lib/types.ml[668,21227+36])
                                      Texp_ident "tl/2455"
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[668,21227+37]..lib/types.ml[668,21227+47])
                                      Texp_field
                                      expression (lib/types.ml[668,21227+37]..lib/types.ml[668,21227+38])
                                        Texp_ident "r/2456"
                                      "arg_type"
                                ]
                            <kept>                            <kept>                          ]
                        representation =
  Record_inlined 1
                        extended_expression =
                          Some
                            expression (lib/types.ml[668,21227+16]..lib/types.ml[668,21227+17])
                              Texp_ident "r/2456"
                  ]
              <case>
                pattern (lib/types.ml[669,21276+4]..lib/types.ml[670,21300+75])
                  Tpat_construct "RFeither"
                  [
                    pattern (lib/types.ml[669,21276+13]..lib/types.ml[670,21300+75])
                      Tpat_record
                      [
                        "arg_type"
                          pattern (lib/types.ml[669,21276+14]..lib/types.ml[669,21276+22])
                            Tpat_var "arg_type/2457"
                        "ext"
                          pattern (lib/types.ml[670,21300+20]..lib/types.ml[670,21300+74])
                            Tpat_record
                            [
                              "contents"
                                pattern (lib/types.ml[670,21300+32]..lib/types.ml[670,21300+73])
                                  Tpat_alias "rf/2458"
                                  pattern (lib/types.ml[670,21300+32]..lib/types.ml[670,21300+67])
                                    Tpat_or
                                    pattern (lib/types.ml[670,21300+32]..lib/types.ml[670,21300+56])
                                      Tpat_or
                                      pattern (lib/types.ml[670,21300+32]..lib/types.ml[670,21300+42])
                                        Tpat_construct "RFeither"
                                        [
                                          pattern (lib/types.ml[670,21300+41]..lib/types.ml[670,21300+42])
                                            Tpat_any
                                        ]
                                        None
                                      pattern (lib/types.ml[670,21300+45]..lib/types.ml[670,21300+56])
                                        Tpat_construct "RFpresent"
                                        [
                                          pattern (lib/types.ml[670,21300+55]..lib/types.ml[670,21300+56])
                                            Tpat_any
                                        ]
                                        None
                                    pattern (lib/types.ml[670,21300+59]..lib/types.ml[670,21300+67])
                                      Tpat_construct "RFabsent"
                                      []
                                      None
                            ]
                      ]
                  ]
                  None
                expression (lib/types.ml[671,21379+6]..lib/types.ml[671,21379+41])
                  Texp_apply
                  expression (lib/types.ml[671,21379+6]..lib/types.ml[671,21379+24])
                    Texp_ident "row_field_repr_aux/2454"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[671,21379+25]..lib/types.ml[671,21379+38])
                        Texp_apply
                        expression (lib/types.ml[671,21379+28]..lib/types.ml[671,21379+29])
                          Texp_ident "Stdlib!.@"
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[671,21379+26]..lib/types.ml[671,21379+28])
                              Texp_ident "tl/2455"
                          <arg>
                            Nolabel
                            expression (lib/types.ml[671,21379+29]..lib/types.ml[671,21379+37])
                              Texp_ident "arg_type/2457"
                        ]
                    <arg>
                      Nolabel
                      expression (lib/types.ml[671,21379+39]..lib/types.ml[671,21379+41])
                        Texp_ident "rf/2458"
                  ]
              <case>
                pattern (lib/types.ml[672,21421+4]..lib/types.ml[672,21421+22])
                  Tpat_construct "RFpresent"
                  [
                    pattern (lib/types.ml[672,21421+14]..lib/types.ml[672,21421+22])
                      Tpat_construct "Some"
                      [
                        pattern (lib/types.ml[672,21421+20]..lib/types.ml[672,21421+21])
                          Tpat_any
                      ]
                      None
                  ]
                  None
                <when>
                  expression (lib/types.ml[672,21421+28]..lib/types.ml[672,21421+36])
                    Texp_apply
                    expression (lib/types.ml[672,21421+31]..lib/types.ml[672,21421+33])
                      Texp_ident "Stdlib!.<>"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[672,21421+28]..lib/types.ml[672,21421+30])
                          Texp_ident "tl/2455"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[672,21421+34]..lib/types.ml[672,21421+36])
                          Texp_construct "[]"
                          []
                    ]
                expression (lib/types.ml[673,21461+6]..lib/types.ml[673,21461+35])
                  Texp_construct "RFpresent"
                  [
                    expression (lib/types.ml[673,21461+16]..lib/types.ml[673,21461+35])
                      Texp_construct "Some"
                      [
                        expression (lib/types.ml[673,21461+22]..lib/types.ml[673,21461+34])
                          Texp_apply
                          expression (lib/types.ml[673,21461+23]..lib/types.ml[673,21461+30])
                            Texp_ident "Stdlib!.List.hd"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[673,21461+31]..lib/types.ml[673,21461+33])
                                Texp_ident "tl/2455"
                          ]
                      ]
                  ]
              <case>
                pattern (lib/types.ml[674,21497+4]..lib/types.ml[674,21497+21])
                  Tpat_alias "rf/2459"
                  pattern (lib/types.ml[674,21497+4]..lib/types.ml[674,21497+15])
                    Tpat_construct "RFpresent"
                    [
                      pattern (lib/types.ml[674,21497+14]..lib/types.ml[674,21497+15])
                        Tpat_any
                    ]
                    None
                expression (lib/types.ml[674,21497+25]..lib/types.ml[674,21497+27])
                  Texp_ident "rf/2459"
              <case>
                pattern (lib/types.ml[675,21525+4]..lib/types.ml[675,21525+12])
                  Tpat_construct "RFabsent"
                  []
                  None
                expression (lib/types.ml[675,21525+16]..lib/types.ml[675,21525+24])
                  Texp_construct "RFabsent"
                  []
            ]
    ]
  structure_item (lib/types.ml[677,21551+0]..lib/types.ml[681,21723+23])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[677,21551+4]..lib/types.ml[677,21551+18])
          Tpat_var "row_field_repr/2461"
        expression (lib/types.ml[677,21551+19]..lib/types.ml[681,21723+23]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[677,21551+19]..lib/types.ml[677,21551+21])
                Tpat_var "fi/2463"
          ]
          Tfunction_body
            expression (lib/types.ml[678,21575+2]..lib/types.ml[681,21723+23])
              Texp_match
              expression (lib/types.ml[678,21575+8]..lib/types.ml[678,21575+32])
                Texp_apply
                expression (lib/types.ml[678,21575+8]..lib/types.ml[678,21575+26])
                  Texp_ident "row_field_repr_aux/2454"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[678,21575+27]..lib/types.ml[678,21575+29])
                      Texp_construct "[]"
                      []
                  <arg>
                    Nolabel
                    expression (lib/types.ml[678,21575+30]..lib/types.ml[678,21575+32])
                      Texp_ident "fi/2463"
                ]
              [
                <case>
                  pattern (lib/types.ml[679,21613+4]..lib/types.ml[679,21613+40])
                    Tpat_value
                    pattern (lib/types.ml[679,21613+4]..lib/types.ml[679,21613+40])
                      Tpat_construct "RFeither"
                      [
                        pattern (lib/types.ml[679,21613+13]..lib/types.ml[679,21613+40])
                          Tpat_record
                          [
                            "no_arg"
                              pattern (lib/types.ml[679,21613+14]..lib/types.ml[679,21613+20])
                                Tpat_var "no_arg/2464"
                            "arg_type"
                              pattern (lib/types.ml[679,21613+22]..lib/types.ml[679,21613+30])
                                Tpat_var "arg_type/2465"
                            "matched"
                              pattern (lib/types.ml[679,21613+32]..lib/types.ml[679,21613+39])
                                Tpat_var "matched/2466"
                          ]
                      ]
                      None
                  expression (lib/types.ml[679,21613+44]..lib/types.ml[679,21613+79])
                    Texp_construct "Reither"
                    [
                      expression (lib/types.ml[679,21613+53]..lib/types.ml[679,21613+59])
                        Texp_ident "no_arg/2464"
                      expression (lib/types.ml[679,21613+61]..lib/types.ml[679,21613+69])
                        Texp_ident "arg_type/2465"
                      expression (lib/types.ml[679,21613+71]..lib/types.ml[679,21613+78])
                        Texp_ident "matched/2466"
                    ]
                <case>
                  pattern (lib/types.ml[680,21693+4]..lib/types.ml[680,21693+15])
                    Tpat_value
                    pattern (lib/types.ml[680,21693+4]..lib/types.ml[680,21693+15])
                      Tpat_construct "RFpresent"
                      [
                        pattern (lib/types.ml[680,21693+14]..lib/types.ml[680,21693+15])
                          Tpat_var "t/2467"
                      ]
                      None
                  expression (lib/types.ml[680,21693+19]..lib/types.ml[680,21693+29])
                    Texp_construct "Rpresent"
                    [
                      expression (lib/types.ml[680,21693+28]..lib/types.ml[680,21693+29])
                        Texp_ident "t/2467"
                    ]
                <case>
                  pattern (lib/types.ml[681,21723+4]..lib/types.ml[681,21723+12])
                    Tpat_value
                    pattern (lib/types.ml[681,21723+4]..lib/types.ml[681,21723+12])
                      Tpat_construct "RFabsent"
                      []
                      None
                  expression (lib/types.ml[681,21723+16]..lib/types.ml[681,21723+23])
                    Texp_construct "Rabsent"
                    []
              ]
    ]
  structure_item (lib/types.ml[683,21748+0]..lib/types.ml[688,21962+48])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[683,21748+8]..lib/types.ml[683,21748+21])
          Tpat_var "row_field_ext/2469"
        expression (lib/types.ml[683,21748+22]..lib/types.ml[688,21962+48]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[683,21748+23]..lib/types.ml[683,21748+25])
                extra
                  Tpat_extra_constraint
                  core_type (lib/types.ml[683,21748+28]..lib/types.ml[683,21748+37])
                    Ttyp_constr "row_field/318"
                    []
                Tpat_alias "fi/2470"
                pattern (lib/types.ml[683,21748+23]..lib/types.ml[683,21748+25])
                  Tpat_any
          ]
          Tfunction_body
            expression (lib/types.ml[684,21789+2]..lib/types.ml[688,21962+48])
              Texp_match
              expression (lib/types.ml[684,21789+8]..lib/types.ml[684,21789+10])
                Texp_ident "fi/2470"
              [
                <case>
                  pattern (lib/types.ml[685,21805+4]..lib/types.ml[685,21805+47])
                    Tpat_value
                    pattern (lib/types.ml[685,21805+4]..lib/types.ml[685,21805+47])
                      Tpat_construct "RFeither"
                      [
                        pattern (lib/types.ml[685,21805+13]..lib/types.ml[685,21805+47])
                          Tpat_record
                          [
                            "ext"
                              pattern (lib/types.ml[685,21805+20]..lib/types.ml[685,21805+46])
                                Tpat_alias "ext/2471"
                                pattern (lib/types.ml[685,21805+20]..lib/types.ml[685,21805+39])
                                  Tpat_record
                                  [
                                    "contents"
                                      pattern (lib/types.ml[685,21805+32]..lib/types.ml[685,21805+38])
                                        Tpat_construct "RFnone"
                                        []
                                        None
                                  ]
                          ]
                      ]
                      None
                  expression (lib/types.ml[685,21805+51]..lib/types.ml[685,21805+54])
                    Texp_ident "ext/2471"
                <case>
                  pattern (lib/types.ml[686,21860+4]..lib/types.ml[686,21860+75])
                    Tpat_value
                    pattern (lib/types.ml[686,21860+4]..lib/types.ml[686,21860+75])
                      Tpat_construct "RFeither"
                      [
                        pattern (lib/types.ml[686,21860+13]..lib/types.ml[686,21860+75])
                          Tpat_record
                          [
                            "ext"
                              pattern (lib/types.ml[686,21860+20]..lib/types.ml[686,21860+74])
                                Tpat_record
                                [
                                  "contents"
                                    pattern (lib/types.ml[686,21860+32]..lib/types.ml[686,21860+73])
                                      Tpat_alias "rf/2472"
                                      pattern (lib/types.ml[686,21860+32]..lib/types.ml[686,21860+67])
                                        Tpat_or
                                        pattern (lib/types.ml[686,21860+32]..lib/types.ml[686,21860+56])
                                          Tpat_or
                                          pattern (lib/types.ml[686,21860+32]..lib/types.ml[686,21860+42])
                                            Tpat_construct "RFeither"
                                            [
                                              pattern (lib/types.ml[686,21860+41]..lib/types.ml[686,21860+42])
                                                Tpat_any
                                            ]
                                            None
                                          pattern (lib/types.ml[686,21860+45]..lib/types.ml[686,21860+56])
                                            Tpat_construct "RFpresent"
                                            [
                                              pattern (lib/types.ml[686,21860+55]..lib/types.ml[686,21860+56])
                                                Tpat_any
                                            ]
                                            None
                                        pattern (lib/types.ml[686,21860+59]..lib/types.ml[686,21860+67])
                                          Tpat_construct "RFabsent"
                                          []
                                          None
                                ]
                          ]
                      ]
                      None
                  expression (lib/types.ml[687,21939+6]..lib/types.ml[687,21939+22])
                    Texp_apply
                    expression (lib/types.ml[687,21939+6]..lib/types.ml[687,21939+19])
                      Texp_ident "row_field_ext/2469"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[687,21939+20]..lib/types.ml[687,21939+22])
                          Texp_ident "rf/2472"
                    ]
                <case>
                  pattern (lib/types.ml[688,21962+4]..lib/types.ml[688,21962+5])
                    Tpat_value
                    pattern (lib/types.ml[688,21962+4]..lib/types.ml[688,21962+5])
                      Tpat_any
                  expression (lib/types.ml[688,21962+9]..lib/types.ml[688,21962+48])
                    Texp_apply
                    expression (lib/types.ml[688,21962+9]..lib/types.ml[688,21962+25])
                      Texp_ident "Ocaml_ocaml_types!.Misc.fatal_error"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[688,21962+26]..lib/types.ml[688,21962+48])
                          Texp_constant Const_string("Types.row_field_ext ",(lib/types.ml[688,21962+27]..lib/types.ml[688,21962+47]),None)
                    ]
              ]
    ]
  structure_item (lib/types.ml[690,22012+0]..lib/types.ml[690,22012+34])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[690,22012+4]..lib/types.ml[690,22012+14])
          Tpat_var "rf_present/2473"
        expression (lib/types.ml[690,22012+15]..lib/types.ml[690,22012+34]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[690,22012+15]..lib/types.ml[690,22012+18])
                Tpat_var "oty/2475"
          ]
          Tfunction_body
            expression (lib/types.ml[690,22012+21]..lib/types.ml[690,22012+34])
              Texp_construct "RFpresent"
              [
                expression (lib/types.ml[690,22012+31]..lib/types.ml[690,22012+34])
                  Texp_ident "oty/2475"
              ]
    ]
  structure_item (lib/types.ml[691,22047+0]..lib/types.ml[691,22047+24])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[691,22047+4]..lib/types.ml[691,22047+13])
          Tpat_var "rf_absent/2476"
        expression (lib/types.ml[691,22047+16]..lib/types.ml[691,22047+24])
          Texp_construct "RFabsent"
          []
    ]
  structure_item (lib/types.ml[692,22072+0]..lib/types.ml[698,22228+43])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[692,22072+4]..lib/types.ml[692,22072+13])
          Tpat_var "rf_either/2477"
        expression (lib/types.ml[692,22072+14]..lib/types.ml[698,22228+43]) ghost
          Texp_function
          [
            Optional "use_ext_of"
            Param_pat
              pattern (lib/types.ml[692,22072+15]..lib/types.ml[692,22072+25])
                Tpat_var "use_ext_of/2479"
            Labelled "no_arg"
            Param_pat
              pattern (lib/types.ml[692,22072+27]..lib/types.ml[692,22072+33])
                Tpat_var "no_arg/2480"
            Nolabel
            Param_pat
              pattern (lib/types.ml[692,22072+34]..lib/types.ml[692,22072+42])
                Tpat_var "arg_type/2481"
            Labelled "matched"
            Param_pat
              pattern (lib/types.ml[692,22072+44]..lib/types.ml[692,22072+51])
                Tpat_var "matched/2482"
          ]
          Tfunction_body
            expression (lib/types.ml[693,22126+2]..lib/types.ml[698,22228+43])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[693,22126+6]..lib/types.ml[693,22126+9])
                    Tpat_var "ext/2483"
                  expression (lib/types.ml[694,22138+4]..lib/types.ml[696,22198+24])
                    Texp_match
                    expression (lib/types.ml[694,22138+10]..lib/types.ml[694,22138+20])
                      Texp_ident "use_ext_of/2479"
                    [
                      <case>
                        pattern (lib/types.ml[695,22164+6]..lib/types.ml[695,22164+13])
                          Tpat_value
                          pattern (lib/types.ml[695,22164+6]..lib/types.ml[695,22164+13])
                            Tpat_construct "Some"
                            [
                              pattern (lib/types.ml[695,22164+11]..lib/types.ml[695,22164+13])
                                Tpat_var "rf/2484"
                            ]
                            None
                        expression (lib/types.ml[695,22164+17]..lib/types.ml[695,22164+33])
                          Texp_apply
                          expression (lib/types.ml[695,22164+17]..lib/types.ml[695,22164+30])
                            Texp_ident "row_field_ext/2469"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[695,22164+31]..lib/types.ml[695,22164+33])
                                Texp_ident "rf/2484"
                          ]
                      <case>
                        pattern (lib/types.ml[696,22198+6]..lib/types.ml[696,22198+10])
                          Tpat_value
                          pattern (lib/types.ml[696,22198+6]..lib/types.ml[696,22198+10])
                            Tpat_construct "None"
                            []
                            None
                        expression (lib/types.ml[696,22198+14]..lib/types.ml[696,22198+24])
                          Texp_apply
                          expression (lib/types.ml[696,22198+14]..lib/types.ml[696,22198+17])
                            Texp_ident "Stdlib!.ref"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[696,22198+18]..lib/types.ml[696,22198+24])
                                Texp_construct "RFnone"
                                []
                          ]
                    ]
              ]
              expression (lib/types.ml[698,22228+2]..lib/types.ml[698,22228+43])
                Texp_construct "RFeither"
                [
                  expression (lib/types.ml[698,22228+11]..lib/types.ml[698,22228+43])
                    Texp_record
                      fields =
                        [
                          "no_arg"
                            expression (lib/types.ml[698,22228+12]..lib/types.ml[698,22228+18])
                              Texp_ident "no_arg/2480"
                          "arg_type"
                            expression (lib/types.ml[698,22228+20]..lib/types.ml[698,22228+28])
                              Texp_ident "arg_type/2481"
                          "matched"
                            expression (lib/types.ml[698,22228+30]..lib/types.ml[698,22228+37])
                              Texp_ident "matched/2482"
                          "ext"
                            expression (lib/types.ml[698,22228+39]..lib/types.ml[698,22228+42])
                              Texp_ident "ext/2483"
                        ]
                      representation =
  Record_inlined 1
                      extended_expression =
                        None
                ]
    ]
  structure_item (lib/types.ml[700,22273+0]..lib/types.ml[704,22401+75])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[700,22273+4]..lib/types.ml[700,22273+16])
          Tpat_var "rf_either_of/2485"
        expression (lib/types.ml[700,22273+19]..lib/types.ml[704,22401+75])
          Texp_function
          []
          Tfunction_cases (lib/types.ml[700,22273+19]..lib/types.ml[704,22401+75])
            [
              <case>
                pattern (lib/types.ml[701,22301+4]..lib/types.ml[701,22301+8])
                  Tpat_construct "None"
                  []
                  None
                expression (lib/types.ml[702,22313+6]..lib/types.ml[702,22313+72])
                  Texp_construct "RFeither"
                  [
                    expression (lib/types.ml[702,22313+15]..lib/types.ml[702,22313+72])
                      Texp_record
                        fields =
                          [
                            "no_arg"
                              expression (lib/types.ml[702,22313+23]..lib/types.ml[702,22313+27])
                                Texp_construct "true"
                                []
                            "arg_type"
                              expression (lib/types.ml[702,22313+38]..lib/types.ml[702,22313+40])
                                Texp_construct "[]"
                                []
                            "matched"
                              expression (lib/types.ml[702,22313+50]..lib/types.ml[702,22313+55])
                                Texp_construct "false"
                                []
                            "ext"
                              expression (lib/types.ml[702,22313+61]..lib/types.ml[702,22313+71])
                                Texp_apply
                                expression (lib/types.ml[702,22313+61]..lib/types.ml[702,22313+64])
                                  Texp_ident "Stdlib!.ref"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[702,22313+65]..lib/types.ml[702,22313+71])
                                      Texp_construct "RFnone"
                                      []
                                ]
                          ]
                        representation =
  Record_inlined 1
                        extended_expression =
                          None
                  ]
              <case>
                pattern (lib/types.ml[703,22386+4]..lib/types.ml[703,22386+11])
                  Tpat_construct "Some"
                  [
                    pattern (lib/types.ml[703,22386+9]..lib/types.ml[703,22386+11])
                      Tpat_var "ty/2487"
                  ]
                  None
                expression (lib/types.ml[704,22401+6]..lib/types.ml[704,22401+75])
                  Texp_construct "RFeither"
                  [
                    expression (lib/types.ml[704,22401+15]..lib/types.ml[704,22401+75])
                      Texp_record
                        fields =
                          [
                            "no_arg"
                              expression (lib/types.ml[704,22401+23]..lib/types.ml[704,22401+28])
                                Texp_construct "false"
                                []
                            "arg_type"
                              expression (lib/types.ml[704,22401+39]..lib/types.ml[704,22401+43])
                                Texp_construct "::"
                                [
                                  expression (lib/types.ml[704,22401+40]..lib/types.ml[704,22401+42])
                                    Texp_ident "ty/2487"
                                  expression (lib/types.ml[704,22401+42]..lib/types.ml[704,22401+43]) ghost
                                    Texp_construct "[]"
                                    []
                                ]
                            "matched"
                              expression (lib/types.ml[704,22401+53]..lib/types.ml[704,22401+58])
                                Texp_construct "false"
                                []
                            "ext"
                              expression (lib/types.ml[704,22401+64]..lib/types.ml[704,22401+74])
                                Texp_apply
                                expression (lib/types.ml[704,22401+64]..lib/types.ml[704,22401+67])
                                  Texp_ident "Stdlib!.ref"
                                [
                                  <arg>
                                    Nolabel
                                    expression (lib/types.ml[704,22401+68]..lib/types.ml[704,22401+74])
                                      Texp_construct "RFnone"
                                      []
                                ]
                          ]
                        representation =
  Record_inlined 1
                        extended_expression =
                          None
                  ]
            ]
    ]
  structure_item (lib/types.ml[706,22478+0]..lib/types.ml[707,22509+40])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[706,22478+4]..lib/types.ml[706,22478+20])
          Tpat_var "eq_row_field_ext/2489"
        expression (lib/types.ml[706,22478+21]..lib/types.ml[707,22509+40]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[706,22478+21]..lib/types.ml[706,22478+24])
                Tpat_var "rf1/2491"
            Nolabel
            Param_pat
              pattern (lib/types.ml[706,22478+25]..lib/types.ml[706,22478+28])
                Tpat_var "rf2/2492"
          ]
          Tfunction_body
            expression (lib/types.ml[707,22509+2]..lib/types.ml[707,22509+40])
              Texp_apply
              expression (lib/types.ml[707,22509+20]..lib/types.ml[707,22509+22])
                Texp_ident "Stdlib!.=="
              [
                <arg>
                  Nolabel
                  expression (lib/types.ml[707,22509+2]..lib/types.ml[707,22509+19])
                    Texp_apply
                    expression (lib/types.ml[707,22509+2]..lib/types.ml[707,22509+15])
                      Texp_ident "row_field_ext/2469"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[707,22509+16]..lib/types.ml[707,22509+19])
                          Texp_ident "rf1/2491"
                    ]
                <arg>
                  Nolabel
                  expression (lib/types.ml[707,22509+23]..lib/types.ml[707,22509+40])
                    Texp_apply
                    expression (lib/types.ml[707,22509+23]..lib/types.ml[707,22509+36])
                      Texp_ident "row_field_ext/2469"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[707,22509+37]..lib/types.ml[707,22509+40])
                          Texp_ident "rf2/2492"
                    ]
              ]
    ]
  structure_item (lib/types.ml[709,22551+0]..lib/types.ml[712,22633+42])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[709,22551+4]..lib/types.ml[709,22551+26])
          Tpat_var "changed_row_field_exts/2493"
        expression (lib/types.ml[709,22551+27]..lib/types.ml[712,22633+42]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[709,22551+27]..lib/types.ml[709,22551+28])
                Tpat_var "l/2495"
            Nolabel
            Param_pat
              pattern (lib/types.ml[709,22551+29]..lib/types.ml[709,22551+30])
                Tpat_var "f/2496"
          ]
          Tfunction_body
            expression (lib/types.ml[710,22584+2]..lib/types.ml[712,22633+42])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[710,22584+6]..lib/types.ml[710,22584+10])
                    Tpat_var "exts/2497"
                  expression (lib/types.ml[710,22584+13]..lib/types.ml[710,22584+37])
                    Texp_apply
                    expression (lib/types.ml[710,22584+13]..lib/types.ml[710,22584+21])
                      Texp_ident "Stdlib!.List.map"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[710,22584+22]..lib/types.ml[710,22584+35])
                          Texp_ident "row_field_ext/2469"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[710,22584+36]..lib/types.ml[710,22584+37])
                          Texp_ident "l/2495"
                    ]
              ]
              expression (lib/types.ml[711,22625+2]..lib/types.ml[712,22633+42])
                Texp_sequence
                expression (lib/types.ml[711,22625+2]..lib/types.ml[711,22625+6])
                  Texp_apply
                  expression (lib/types.ml[711,22625+2]..lib/types.ml[711,22625+3])
                    Texp_ident "f/2496"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[711,22625+4]..lib/types.ml[711,22625+6])
                        Texp_construct "()"
                        []
                  ]
                expression (lib/types.ml[712,22633+2]..lib/types.ml[712,22633+42])
                  Texp_apply
                  expression (lib/types.ml[712,22633+2]..lib/types.ml[712,22633+13])
                    Texp_ident "Stdlib!.List.exists"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[712,22633+14]..lib/types.ml[712,22633+37])
                        Texp_function
                        [
                          Nolabel
                          Param_pat
                            pattern (lib/types.ml[712,22633+19]..lib/types.ml[712,22633+20])
                              Tpat_var "r/2498"
                        ]
                        Tfunction_body
                          expression (lib/types.ml[712,22633+24]..lib/types.ml[712,22633+36])
                            Texp_apply
                            expression (lib/types.ml[712,22633+27]..lib/types.ml[712,22633+29])
                              Texp_ident "Stdlib!.<>"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[712,22633+24]..lib/types.ml[712,22633+26])
                                  Texp_apply
                                  expression (lib/types.ml[712,22633+24]..lib/types.ml[712,22633+25])
                                    Texp_ident "Stdlib!.!"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/types.ml[712,22633+25]..lib/types.ml[712,22633+26])
                                        Texp_ident "r/2498"
                                  ]
                              <arg>
                                Nolabel
                                expression (lib/types.ml[712,22633+30]..lib/types.ml[712,22633+36])
                                  Texp_construct "RFnone"
                                  []
                            ]
                    <arg>
                      Nolabel
                      expression (lib/types.ml[712,22633+38]..lib/types.ml[712,22633+42])
                        Texp_ident "exts/2497"
                  ]
    ]
  structure_item (lib/types.ml[714,22677+0]..lib/types.ml[724,23011+38])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[714,22677+4]..lib/types.ml[714,22677+19])
          Tpat_var "match_row_field/2499"
        expression (lib/types.ml[714,22677+20]..lib/types.ml[724,23011+38]) ghost
          Texp_function
          [
            Labelled "present"
            Param_pat
              pattern (lib/types.ml[714,22677+21]..lib/types.ml[714,22677+28])
                Tpat_var "present/2501"
            Labelled "absent"
            Param_pat
              pattern (lib/types.ml[714,22677+30]..lib/types.ml[714,22677+36])
                Tpat_var "absent/2502"
            Labelled "either"
            Param_pat
              pattern (lib/types.ml[714,22677+38]..lib/types.ml[714,22677+44])
                Tpat_var "either/2503"
            Nolabel
            Param_pat
              pattern (lib/types.ml[714,22677+46]..lib/types.ml[714,22677+47])
                extra
                  Tpat_extra_constraint
                  core_type (lib/types.ml[714,22677+50]..lib/types.ml[714,22677+59])
                    Ttyp_constr "row_field/318"
                    []
                Tpat_alias "f/2504"
                pattern (lib/types.ml[714,22677+46]..lib/types.ml[714,22677+47])
                  Tpat_any
          ]
          Tfunction_body
            expression (lib/types.ml[715,22740+2]..lib/types.ml[724,23011+38])
              Texp_match
              expression (lib/types.ml[715,22740+8]..lib/types.ml[715,22740+9])
                Texp_ident "f/2504"
              [
                <case>
                  pattern (lib/types.ml[716,22755+4]..lib/types.ml[716,22755+12])
                    Tpat_value
                    pattern (lib/types.ml[716,22755+4]..lib/types.ml[716,22755+12])
                      Tpat_construct "RFabsent"
                      []
                      None
                  expression (lib/types.ml[716,22755+16]..lib/types.ml[716,22755+25])
                    Texp_apply
                    expression (lib/types.ml[716,22755+16]..lib/types.ml[716,22755+22])
                      Texp_ident "absent/2502"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[716,22755+23]..lib/types.ml[716,22755+25])
                          Texp_construct "()"
                          []
                    ]
                <case>
                  pattern (lib/types.ml[717,22781+4]..lib/types.ml[717,22781+15])
                    Tpat_value
                    pattern (lib/types.ml[717,22781+4]..lib/types.ml[717,22781+15])
                      Tpat_construct "RFpresent"
                      [
                        pattern (lib/types.ml[717,22781+14]..lib/types.ml[717,22781+15])
                          Tpat_var "t/2505"
                      ]
                      None
                  expression (lib/types.ml[717,22781+19]..lib/types.ml[717,22781+28])
                    Texp_apply
                    expression (lib/types.ml[717,22781+19]..lib/types.ml[717,22781+26])
                      Texp_ident "present/2501"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[717,22781+27]..lib/types.ml[717,22781+28])
                          Texp_ident "t/2505"
                    ]
                <case>
                  pattern (lib/types.ml[718,22810+4]..lib/types.ml[718,22810+45])
                    Tpat_value
                    pattern (lib/types.ml[718,22810+4]..lib/types.ml[718,22810+45])
                      Tpat_construct "RFeither"
                      [
                        pattern (lib/types.ml[718,22810+13]..lib/types.ml[718,22810+45])
                          Tpat_record
                          [
                            "no_arg"
                              pattern (lib/types.ml[718,22810+14]..lib/types.ml[718,22810+20])
                                Tpat_var "no_arg/2506"
                            "arg_type"
                              pattern (lib/types.ml[718,22810+22]..lib/types.ml[718,22810+30])
                                Tpat_var "arg_type/2507"
                            "matched"
                              pattern (lib/types.ml[718,22810+32]..lib/types.ml[718,22810+39])
                                Tpat_var "matched/2508"
                            "ext"
                              pattern (lib/types.ml[718,22810+41]..lib/types.ml[718,22810+44])
                                Tpat_var "ext/2509"
                          ]
                      ]
                      None
                  expression (lib/types.ml[719,22859+6]..lib/types.ml[724,23011+38])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/types.ml[719,22859+10]..lib/types.ml[719,22859+11])
                          extra
                            Tpat_extra_constraint
                            core_type (lib/types.ml[719,22859+14]..lib/types.ml[719,22859+30])
                              Ttyp_constr "option/10!"
                              [
                                core_type (lib/types.ml[719,22859+14]..lib/types.ml[719,22859+23])
                                  Ttyp_constr "row_field/318"
                                  []
                              ]
                          Tpat_alias "e/2510"
                          pattern (lib/types.ml[719,22859+10]..lib/types.ml[719,22859+11])
                            Tpat_any
                        expression (lib/types.ml[720,22892+8]..lib/types.ml[722,22941+60])
                          extra
                            Texp_constraint
                            core_type (lib/types.ml[719,22859+14]..lib/types.ml[719,22859+30])
                              Ttyp_constr "option/10!"
                              [
                                core_type (lib/types.ml[719,22859+14]..lib/types.ml[719,22859+23])
                                  Ttyp_constr "row_field/318"
                                  []
                              ]
                          Texp_match
                          expression (lib/types.ml[720,22892+14]..lib/types.ml[720,22892+18])
                            Texp_apply
                            expression (lib/types.ml[720,22892+14]..lib/types.ml[720,22892+15])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[720,22892+15]..lib/types.ml[720,22892+18])
                                  Texp_ident "ext/2509"
                            ]
                          [
                            <case>
                              pattern (lib/types.ml[721,22916+10]..lib/types.ml[721,22916+16])
                                Tpat_value
                                pattern (lib/types.ml[721,22916+10]..lib/types.ml[721,22916+16])
                                  Tpat_construct "RFnone"
                                  []
                                  None
                              expression (lib/types.ml[721,22916+20]..lib/types.ml[721,22916+24])
                                Texp_construct "None"
                                []
                            <case>
                              pattern (lib/types.ml[722,22941+10]..lib/types.ml[722,22941+50])
                                Tpat_value
                                pattern (lib/types.ml[722,22941+10]..lib/types.ml[722,22941+50])
                                  Tpat_alias "e/2511"
                                  pattern (lib/types.ml[722,22941+10]..lib/types.ml[722,22941+45])
                                    Tpat_or
                                    pattern (lib/types.ml[722,22941+10]..lib/types.ml[722,22941+34])
                                      Tpat_or
                                      pattern (lib/types.ml[722,22941+10]..lib/types.ml[722,22941+20])
                                        Tpat_construct "RFeither"
                                        [
                                          pattern (lib/types.ml[722,22941+19]..lib/types.ml[722,22941+20])
                                            Tpat_any
                                        ]
                                        None
                                      pattern (lib/types.ml[722,22941+23]..lib/types.ml[722,22941+34])
                                        Tpat_construct "RFpresent"
                                        [
                                          pattern (lib/types.ml[722,22941+33]..lib/types.ml[722,22941+34])
                                            Tpat_any
                                        ]
                                        None
                                    pattern (lib/types.ml[722,22941+37]..lib/types.ml[722,22941+45])
                                      Tpat_construct "RFabsent"
                                      []
                                      None
                              expression (lib/types.ml[722,22941+54]..lib/types.ml[722,22941+60])
                                Texp_construct "Some"
                                [
                                  expression (lib/types.ml[722,22941+59]..lib/types.ml[722,22941+60])
                                    Texp_ident "e/2511"
                                ]
                          ]
                    ]
                    expression (lib/types.ml[724,23011+6]..lib/types.ml[724,23011+38])
                      Texp_apply
                      expression (lib/types.ml[724,23011+6]..lib/types.ml[724,23011+12])
                        Texp_ident "either/2503"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[724,23011+13]..lib/types.ml[724,23011+19])
                            Texp_ident "no_arg/2506"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[724,23011+20]..lib/types.ml[724,23011+28])
                            Texp_ident "arg_type/2507"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[724,23011+29]..lib/types.ml[724,23011+36])
                            Texp_ident "matched/2508"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[724,23011+37]..lib/types.ml[724,23011+38])
                            Texp_ident "e/2510"
                      ]
              ]
    ]
  structure_item (lib/types.ml[729,23084+0]..lib/types.ml[729,23084+35])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[729,23084+4]..lib/types.ml[729,23084+10])
          Tpat_var "new_id/2513"
        expression (lib/types.ml[729,23084+13]..lib/types.ml[729,23084+35])
          Texp_apply
          expression (lib/types.ml[729,23084+13]..lib/types.ml[729,23084+30])
            Texp_ident "Ocaml_ocaml_types!.Local_store.s_ref"
          [
            <arg>
              Nolabel
              expression (lib/types.ml[729,23084+31]..lib/types.ml[729,23084+35])
                Texp_constant Const_int -1
          ]
    ]
  structure_item (lib/types.ml[731,23121+0]..lib/types.ml[731,23121+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[731,23121+4]..lib/types.ml[731,23121+15])
          Tpat_var "create_expr/2514"
        expression (lib/types.ml[731,23121+18]..lib/types.ml[731,23121+39])
          Texp_ident "Transient_expr/2389.create"
    ]
  structure_item (lib/types.ml[733,23162+0]..lib/types.ml[735,23210+44])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[733,23162+4]..lib/types.ml[733,23162+10])
          Tpat_var "newty3/2515"
        expression (lib/types.ml[733,23162+11]..lib/types.ml[735,23210+44]) ghost
          Texp_function
          [
            Labelled "level"
            Param_pat
              pattern (lib/types.ml[733,23162+12]..lib/types.ml[733,23162+17])
                Tpat_var "level/2517"
            Labelled "scope"
            Param_pat
              pattern (lib/types.ml[733,23162+19]..lib/types.ml[733,23162+24])
                Tpat_var "scope/2518"
            Nolabel
            Param_pat
              pattern (lib/types.ml[733,23162+25]..lib/types.ml[733,23162+29])
                Tpat_var "desc/2519"
          ]
          Tfunction_body
            expression (lib/types.ml[734,23195+2]..lib/types.ml[735,23210+44])
              Texp_sequence
              expression (lib/types.ml[734,23195+2]..lib/types.ml[734,23195+13])
                Texp_apply
                expression (lib/types.ml[734,23195+2]..lib/types.ml[734,23195+6])
                  Texp_ident "Stdlib!.incr"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[734,23195+7]..lib/types.ml[734,23195+13])
                      Texp_ident "new_id/2513"
                ]
              expression (lib/types.ml[735,23210+2]..lib/types.ml[735,23210+44])
                Texp_apply
                expression (lib/types.ml[735,23210+2]..lib/types.ml[735,23210+13])
                  Texp_ident "create_expr/2514"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[735,23210+14]..lib/types.ml[735,23210+18])
                      Texp_ident "desc/2519"
                  <arg>
                    Labelled "level"
                    expression (lib/types.ml[735,23210+20]..lib/types.ml[735,23210+25])
                      Texp_ident "level/2517"
                  <arg>
                    Labelled "scope"
                    expression (lib/types.ml[735,23210+27]..lib/types.ml[735,23210+32])
                      Texp_ident "scope/2518"
                  <arg>
                    Labelled "id"
                    expression (lib/types.ml[735,23210+37]..lib/types.ml[735,23210+44])
                      Texp_apply
                      expression (lib/types.ml[735,23210+37]..lib/types.ml[735,23210+38])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[735,23210+38]..lib/types.ml[735,23210+44])
                            Texp_ident "new_id/2513"
                      ]
                ]
    ]
  structure_item (lib/types.ml[737,23256+0]..lib/types.ml[738,23281+46])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[737,23256+4]..lib/types.ml[737,23256+10])
          Tpat_var "newty2/2520"
        expression (lib/types.ml[737,23256+11]..lib/types.ml[738,23281+46]) ghost
          Texp_function
          [
            Labelled "level"
            Param_pat
              pattern (lib/types.ml[737,23256+12]..lib/types.ml[737,23256+17])
                Tpat_var "level/2522"
            Nolabel
            Param_pat
              pattern (lib/types.ml[737,23256+18]..lib/types.ml[737,23256+22])
                Tpat_var "desc/2523"
          ]
          Tfunction_body
            expression (lib/types.ml[738,23281+2]..lib/types.ml[738,23281+46])
              Texp_apply
              expression (lib/types.ml[738,23281+2]..lib/types.ml[738,23281+8])
                Texp_ident "newty3/2515"
              [
                <arg>
                  Labelled "level"
                  expression (lib/types.ml[738,23281+10]..lib/types.ml[738,23281+15])
                    Texp_ident "level/2522"
                <arg>
                  Labelled "scope"
                  expression (lib/types.ml[738,23281+23]..lib/types.ml[738,23281+41])
                    Texp_ident "Ocaml_ocaml_types!.Ident.lowest_scope"
                <arg>
                  Nolabel
                  expression (lib/types.ml[738,23281+42]..lib/types.ml[738,23281+46])
                    Texp_ident "desc/2523"
              ]
    ]
  structure_item (lib/types.ml[744,23495+0]..lib/types.ml[753,23923+30])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[744,23495+4]..lib/types.ml[744,23495+15])
          Tpat_var "undo_change/2524"
        expression (lib/types.ml[744,23495+18]..lib/types.ml[753,23923+30])
          Texp_function
          []
          Tfunction_cases (lib/types.ml[744,23495+18]..lib/types.ml[753,23923+30])
            [
              <case>
                pattern (lib/types.ml[745,23522+4]..lib/types.ml[745,23522+21])
                  Tpat_construct "Ctype"
                  [
                    pattern (lib/types.ml[745,23522+12]..lib/types.ml[745,23522+14])
                      Tpat_var "ty/2526"
                    pattern (lib/types.ml[745,23522+16]..lib/types.ml[745,23522+20])
                      Tpat_var "desc/2527"
                  ]
                  None
                expression (lib/types.ml[745,23522+25]..lib/types.ml[745,23522+56])
                  Texp_apply
                  expression (lib/types.ml[745,23522+25]..lib/types.ml[745,23522+48])
                    Texp_ident "Transient_expr/2389.set_desc"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[745,23522+49]..lib/types.ml[745,23522+51])
                        Texp_ident "ty/2526"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[745,23522+52]..lib/types.ml[745,23522+56])
                        Texp_ident "desc/2527"
                  ]
              <case>
                pattern (lib/types.ml[746,23579+4]..lib/types.ml[746,23579+27])
                  Tpat_construct "Ccompress"
                  [
                    pattern (lib/types.ml[746,23579+15]..lib/types.ml[746,23579+17])
                      Tpat_var "ty/2528"
                    pattern (lib/types.ml[746,23579+19]..lib/types.ml[746,23579+23])
                      Tpat_var "desc/2529"
                    pattern (lib/types.ml[746,23579+25]..lib/types.ml[746,23579+26])
                      Tpat_any
                  ]
                  None
                expression (lib/types.ml[746,23579+31]..lib/types.ml[746,23579+62])
                  Texp_apply
                  expression (lib/types.ml[746,23579+31]..lib/types.ml[746,23579+54])
                    Texp_ident "Transient_expr/2389.set_desc"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[746,23579+55]..lib/types.ml[746,23579+57])
                        Texp_ident "ty/2528"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[746,23579+58]..lib/types.ml[746,23579+62])
                        Texp_ident "desc/2529"
                  ]
              <case>
                pattern (lib/types.ml[747,23642+4]..lib/types.ml[747,23642+22])
                  Tpat_construct "Clevel"
                  [
                    pattern (lib/types.ml[747,23642+12]..lib/types.ml[747,23642+14])
                      Tpat_var "ty/2530"
                    pattern (lib/types.ml[747,23642+16]..lib/types.ml[747,23642+21])
                      Tpat_var "level/2531"
                  ]
                  None
                expression (lib/types.ml[747,23642+26]..lib/types.ml[747,23642+59])
                  Texp_apply
                  expression (lib/types.ml[747,23642+26]..lib/types.ml[747,23642+50])
                    Texp_ident "Transient_expr/2389.set_level"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[747,23642+51]..lib/types.ml[747,23642+53])
                        Texp_ident "ty/2530"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[747,23642+54]..lib/types.ml[747,23642+59])
                        Texp_ident "level/2531"
                  ]
              <case>
                pattern (lib/types.ml[748,23702+4]..lib/types.ml[748,23702+22])
                  Tpat_construct "Cscope"
                  [
                    pattern (lib/types.ml[748,23702+12]..lib/types.ml[748,23702+14])
                      Tpat_var "ty/2532"
                    pattern (lib/types.ml[748,23702+16]..lib/types.ml[748,23702+21])
                      Tpat_var "scope/2533"
                  ]
                  None
                expression (lib/types.ml[748,23702+26]..lib/types.ml[748,23702+59])
                  Texp_apply
                  expression (lib/types.ml[748,23702+26]..lib/types.ml[748,23702+50])
                    Texp_ident "Transient_expr/2389.set_scope"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[748,23702+51]..lib/types.ml[748,23702+53])
                        Texp_ident "ty/2532"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[748,23702+54]..lib/types.ml[748,23702+59])
                        Texp_ident "scope/2533"
                  ]
              <case>
                pattern (lib/types.ml[749,23762+4]..lib/types.ml[749,23762+17])
                  Tpat_construct "Cname"
                  [
                    pattern (lib/types.ml[749,23762+12]..lib/types.ml[749,23762+13])
                      Tpat_var "r/2534"
                    pattern (lib/types.ml[749,23762+15]..lib/types.ml[749,23762+16])
                      Tpat_var "v/2535"
                  ]
                  None
                expression (lib/types.ml[749,23762+24]..lib/types.ml[749,23762+30])
                  Texp_apply
                  expression (lib/types.ml[749,23762+26]..lib/types.ml[749,23762+28])
                    Texp_ident "Stdlib!.:="
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[749,23762+24]..lib/types.ml[749,23762+25])
                        Texp_ident "r/2534"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[749,23762+29]..lib/types.ml[749,23762+30])
                        Texp_ident "v/2535"
                  ]
              <case>
                pattern (lib/types.ml[750,23793+4]..lib/types.ml[750,23793+12])
                  Tpat_construct "Crow"
                  [
                    pattern (lib/types.ml[750,23793+11]..lib/types.ml[750,23793+12])
                      Tpat_var "r/2536"
                  ]
                  None
                expression (lib/types.ml[750,23793+24]..lib/types.ml[750,23793+35])
                  Texp_apply
                  expression (lib/types.ml[750,23793+26]..lib/types.ml[750,23793+28])
                    Texp_ident "Stdlib!.:="
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[750,23793+24]..lib/types.ml[750,23793+25])
                        Texp_ident "r/2536"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[750,23793+29]..lib/types.ml[750,23793+35])
                        Texp_construct "RFnone"
                        []
                  ]
              <case>
                pattern (lib/types.ml[751,23829+4]..lib/types.ml[751,23829+20])
                  Tpat_construct "Ckind"
                  [
                    pattern (lib/types.ml[751,23829+11]..lib/types.ml[751,23829+20])
                      Tpat_construct "FKvar"
                      [
                        pattern (lib/types.ml[751,23829+18]..lib/types.ml[751,23829+19])
                          Tpat_var "r/2537"
                      ]
                      None
                  ]
                  None
                expression (lib/types.ml[751,23829+24]..lib/types.ml[751,23829+49])
                  Texp_setfield
                  expression (lib/types.ml[751,23829+24]..lib/types.ml[751,23829+25])
                    Texp_ident "r/2537"
                  "field_kind"
                  expression (lib/types.ml[751,23829+40]..lib/types.ml[751,23829+49])
                    Texp_construct "FKprivate"
                    []
              <case>
                pattern (lib/types.ml[752,23879+4]..lib/types.ml[752,23879+19])
                  Tpat_construct "Ccommu"
                  [
                    pattern (lib/types.ml[752,23879+11]..lib/types.ml[752,23879+19])
                      Tpat_construct "Cvar"
                      [
                        pattern (lib/types.ml[752,23879+17]..lib/types.ml[752,23879+18])
                          Tpat_var "r/2538"
                      ]
                      None
                  ]
                  None
                expression (lib/types.ml[752,23879+24]..lib/types.ml[752,23879+43])
                  Texp_setfield
                  expression (lib/types.ml[752,23879+24]..lib/types.ml[752,23879+25])
                    Texp_ident "r/2538"
                  "commu"
                  expression (lib/types.ml[752,23879+35]..lib/types.ml[752,23879+43])
                    Texp_construct "Cunknown"
                    []
              <case>
                pattern (lib/types.ml[753,23923+4]..lib/types.ml[753,23923+17])
                  Tpat_construct "Cuniv"
                  [
                    pattern (lib/types.ml[753,23923+12]..lib/types.ml[753,23923+13])
                      Tpat_var "r/2539"
                    pattern (lib/types.ml[753,23923+15]..lib/types.ml[753,23923+16])
                      Tpat_var "v/2540"
                  ]
                  None
                expression (lib/types.ml[753,23923+24]..lib/types.ml[753,23923+30])
                  Texp_apply
                  expression (lib/types.ml[753,23923+26]..lib/types.ml[753,23923+28])
                    Texp_ident "Stdlib!.:="
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[753,23923+24]..lib/types.ml[753,23923+25])
                        Texp_ident "r/2539"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[753,23923+29]..lib/types.ml[753,23923+30])
                        Texp_ident "v/2540"
                  ]
            ]
    ]
  structure_item (lib/types.ml[755,23955+0]..lib/types.ml[755,23955+33])
    Tstr_type Rec
    [
      type_declaration snapshot/2547 (lib/types.ml[755,23955+0]..lib/types.ml[755,23955+33])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ttype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lib/types.ml[755,23955+16]..lib/types.ml[755,23955+33])
              Ttyp_tuple
              [
                core_type (lib/types.ml[755,23955+16]..lib/types.ml[755,23955+27])
                  Ttyp_constr "Stdlib!.ref"
                  [
                    core_type (lib/types.ml[755,23955+16]..lib/types.ml[755,23955+23])
                      Ttyp_constr "changes/2274"
                      []
                  ]
                core_type (lib/types.ml[755,23955+30]..lib/types.ml[755,23955+33])
                  Ttyp_constr "int/1!"
                  []
              ]
    ]
  structure_item (lib/types.ml[756,23989+0]..lib/types.ml[756,23989+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[756,23989+4]..lib/types.ml[756,23989+17])
          Tpat_var "last_snapshot/2548"
        expression (lib/types.ml[756,23989+20]..lib/types.ml[756,23989+39])
          Texp_apply
          expression (lib/types.ml[756,23989+20]..lib/types.ml[756,23989+37])
            Texp_ident "Ocaml_ocaml_types!.Local_store.s_ref"
          [
            <arg>
              Nolabel
              expression (lib/types.ml[756,23989+38]..lib/types.ml[756,23989+39])
                Texp_constant Const_int 0
          ]
    ]
  structure_item (lib/types.ml[758,24030+0]..lib/types.ml[759,24048+66])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[758,24030+4]..lib/types.ml[758,24030+12])
          Tpat_var "log_type/2549"
        expression (lib/types.ml[758,24030+13]..lib/types.ml[759,24048+66]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[758,24030+13]..lib/types.ml[758,24030+15])
                Tpat_var "ty/2551"
          ]
          Tfunction_body
            expression (lib/types.ml[759,24048+2]..lib/types.ml[759,24048+66])
              Texp_ifthenelse
              expression (lib/types.ml[759,24048+5]..lib/types.ml[759,24048+28])
                Texp_apply
                expression (lib/types.ml[759,24048+11]..lib/types.ml[759,24048+13])
                  Texp_ident "Stdlib!.<="
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[759,24048+5]..lib/types.ml[759,24048+10])
                      Texp_field
                      expression (lib/types.ml[759,24048+5]..lib/types.ml[759,24048+7])
                        Texp_ident "ty/2551"
                      "id"
                  <arg>
                    Nolabel
                    expression (lib/types.ml[759,24048+14]..lib/types.ml[759,24048+28])
                      Texp_apply
                      expression (lib/types.ml[759,24048+14]..lib/types.ml[759,24048+15])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[759,24048+15]..lib/types.ml[759,24048+28])
                            Texp_ident "last_snapshot/2548"
                      ]
                ]
              expression (lib/types.ml[759,24048+34]..lib/types.ml[759,24048+66])
                Texp_apply
                expression (lib/types.ml[759,24048+34]..lib/types.ml[759,24048+44])
                  Texp_ident "log_change/2290"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[759,24048+45]..lib/types.ml[759,24048+66])
                      Texp_construct "Ctype"
                      [
                        expression (lib/types.ml[759,24048+53]..lib/types.ml[759,24048+55])
                          Texp_ident "ty/2551"
                        expression (lib/types.ml[759,24048+57]..lib/types.ml[759,24048+64])
                          Texp_field
                          expression (lib/types.ml[759,24048+57]..lib/types.ml[759,24048+59])
                            Texp_ident "ty/2551"
                          "desc"
                      ]
                ]
              None
    ]
  structure_item (lib/types.ml[760,24115+0]..lib/types.ml[780,24801+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[760,24115+4]..lib/types.ml[760,24115+13])
          Tpat_var "link_type/2552"
        expression (lib/types.ml[760,24115+14]..lib/types.ml[780,24801+5]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[760,24115+14]..lib/types.ml[760,24115+16])
                Tpat_var "ty/2554"
            Nolabel
            Param_pat
              pattern (lib/types.ml[760,24115+17]..lib/types.ml[760,24115+20])
                Tpat_var "ty'/2555"
          ]
          Tfunction_body
            expression (lib/types.ml[761,24138+2]..lib/types.ml[780,24801+5])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[761,24138+6]..lib/types.ml[761,24138+8])
                    Tpat_var "ty/2556"
                  expression (lib/types.ml[761,24138+11]..lib/types.ml[761,24138+18])
                    Texp_apply
                    expression (lib/types.ml[761,24138+11]..lib/types.ml[761,24138+15])
                      Texp_ident "repr/2342"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[761,24138+16]..lib/types.ml[761,24138+18])
                          Texp_ident "ty/2554"
                    ]
              ]
              expression (lib/types.ml[762,24160+2]..lib/types.ml[780,24801+5])
                Texp_let Nonrec
                [
                  <def>
                    pattern (lib/types.ml[762,24160+6]..lib/types.ml[762,24160+9])
                      Tpat_var "ty'/2557"
                    expression (lib/types.ml[762,24160+12]..lib/types.ml[762,24160+20])
                      Texp_apply
                      expression (lib/types.ml[762,24160+12]..lib/types.ml[762,24160+16])
                        Texp_ident "repr/2342"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[762,24160+17]..lib/types.ml[762,24160+20])
                            Texp_ident "ty'/2555"
                      ]
                ]
                expression (lib/types.ml[763,24184+2]..lib/types.ml[780,24801+5])
                  Texp_ifthenelse
                  expression (lib/types.ml[763,24184+5]..lib/types.ml[763,24184+14])
                    Texp_apply
                    expression (lib/types.ml[763,24184+8]..lib/types.ml[763,24184+10])
                      Texp_ident "Stdlib!.=="
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[763,24184+5]..lib/types.ml[763,24184+7])
                          Texp_ident "ty/2556"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[763,24184+11]..lib/types.ml[763,24184+14])
                          Texp_ident "ty'/2557"
                    ]
                  expression (lib/types.ml[763,24184+20]..lib/types.ml[763,24184+22])
                    Texp_construct "()"
                    []
                  Some
                    expression (lib/types.ml[763,24184+28]..lib/types.ml[780,24801+5])
                      Texp_sequence
                      expression (lib/types.ml[764,24218+2]..lib/types.ml[764,24218+13])
                        Texp_apply
                        expression (lib/types.ml[764,24218+2]..lib/types.ml[764,24218+10])
                          Texp_ident "log_type/2549"
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[764,24218+11]..lib/types.ml[764,24218+13])
                              Texp_ident "ty/2556"
                        ]
                      expression (lib/types.ml[765,24233+2]..lib/types.ml[779,24789+11])
                        Texp_let Nonrec
                        [
                          <def>
                            pattern (lib/types.ml[765,24233+6]..lib/types.ml[765,24233+10])
                              Tpat_var "desc/2558"
                            expression (lib/types.ml[765,24233+13]..lib/types.ml[765,24233+20])
                              Texp_field
                              expression (lib/types.ml[765,24233+13]..lib/types.ml[765,24233+15])
                                Texp_ident "ty/2556"
                              "desc"
                        ]
                        expression (lib/types.ml[766,24257+2]..lib/types.ml[779,24789+11])
                          Texp_sequence
                          expression (lib/types.ml[766,24257+2]..lib/types.ml[766,24257+40])
                            Texp_apply
                            expression (lib/types.ml[766,24257+2]..lib/types.ml[766,24257+25])
                              Texp_ident "Transient_expr/2389.set_desc"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[766,24257+26]..lib/types.ml[766,24257+28])
                                  Texp_ident "ty/2556"
                              <arg>
                                Nolabel
                                expression (lib/types.ml[766,24257+29]..lib/types.ml[766,24257+40])
                                  Texp_construct "Tlink"
                                  [
                                    expression (lib/types.ml[766,24257+36]..lib/types.ml[766,24257+39])
                                      Texp_ident "ty'/2557"
                                  ]
                            ]
                          expression (lib/types.ml[769,24422+2]..lib/types.ml[779,24789+11])
                            Texp_match
                            expression (lib/types.ml[769,24422+8]..lib/types.ml[769,24422+22])
                              Texp_tuple
                              [
                                expression (lib/types.ml[769,24422+8]..lib/types.ml[769,24422+12])
                                  Texp_ident "desc/2558"
                                expression (lib/types.ml[769,24422+14]..lib/types.ml[769,24422+22])
                                  Texp_field
                                  expression (lib/types.ml[769,24422+14]..lib/types.ml[769,24422+17])
                                    Texp_ident "ty'/2557"
                                  "desc"
                              ]
                            [
                              <case>
                                pattern (lib/types.ml[770,24450+4]..lib/types.ml[770,24450+25])
                                  Tpat_value
                                  pattern (lib/types.ml[770,24450+4]..lib/types.ml[770,24450+25])
                                    Tpat_tuple
                                    [
                                      pattern (lib/types.ml[770,24450+4]..lib/types.ml[770,24450+13])
                                        Tpat_construct "Tvar"
                                        [
                                          pattern (lib/types.ml[770,24450+9]..lib/types.ml[770,24450+13])
                                            Tpat_var "name/2559"
                                        ]
                                        None
                                      pattern (lib/types.ml[770,24450+15]..lib/types.ml[770,24450+25])
                                        Tpat_construct "Tvar"
                                        [
                                          pattern (lib/types.ml[770,24450+20]..lib/types.ml[770,24450+25])
                                            Tpat_var "name'/2560"
                                        ]
                                        None
                                    ]
                                expression (lib/types.ml[771,24479+6]..lib/types.ml[778,24779+9])
                                  Texp_match
                                  expression (lib/types.ml[771,24479+18]..lib/types.ml[771,24479+29])
                                    Texp_tuple
                                    [
                                      expression (lib/types.ml[771,24479+18]..lib/types.ml[771,24479+22])
                                        Texp_ident "name/2559"
                                      expression (lib/types.ml[771,24479+24]..lib/types.ml[771,24479+29])
                                        Texp_ident "name'/2560"
                                    ]
                                  [
                                    <case>
                                      pattern (lib/types.ml[772,24514+8]..lib/types.ml[772,24514+20])
                                        Tpat_value
                                        pattern (lib/types.ml[772,24514+8]..lib/types.ml[772,24514+20])
                                          Tpat_tuple
                                          [
                                            pattern (lib/types.ml[772,24514+8]..lib/types.ml[772,24514+14])
                                              Tpat_construct "Some"
                                              [
                                                pattern (lib/types.ml[772,24514+13]..lib/types.ml[772,24514+14])
                                                  Tpat_any
                                              ]
                                              None
                                            pattern (lib/types.ml[772,24514+16]..lib/types.ml[772,24514+20])
                                              Tpat_construct "None"
                                              []
                                              None
                                          ]
                                      expression (lib/types.ml[772,24514+24]..lib/types.ml[772,24514+77])
                                        Texp_sequence
                                        expression (lib/types.ml[772,24514+24]..lib/types.ml[772,24514+36])
                                          Texp_apply
                                          expression (lib/types.ml[772,24514+24]..lib/types.ml[772,24514+32])
                                            Texp_ident "log_type/2549"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/types.ml[772,24514+33]..lib/types.ml[772,24514+36])
                                                Texp_ident "ty'/2557"
                                          ]
                                        expression (lib/types.ml[772,24514+38]..lib/types.ml[772,24514+77])
                                          Texp_apply
                                          expression (lib/types.ml[772,24514+38]..lib/types.ml[772,24514+61])
                                            Texp_ident "Transient_expr/2389.set_desc"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/types.ml[772,24514+62]..lib/types.ml[772,24514+65])
                                                Texp_ident "ty'/2557"
                                            <arg>
                                              Nolabel
                                              expression (lib/types.ml[772,24514+66]..lib/types.ml[772,24514+77])
                                                Texp_construct "Tvar"
                                                [
                                                  expression (lib/types.ml[772,24514+72]..lib/types.ml[772,24514+76])
                                                    Texp_ident "name/2559"
                                                ]
                                          ]
                                    <case>
                                      pattern (lib/types.ml[773,24592+8]..lib/types.ml[773,24592+20])
                                        Tpat_value
                                        pattern (lib/types.ml[773,24592+8]..lib/types.ml[773,24592+20])
                                          Tpat_tuple
                                          [
                                            pattern (lib/types.ml[773,24592+8]..lib/types.ml[773,24592+12])
                                              Tpat_construct "None"
                                              []
                                              None
                                            pattern (lib/types.ml[773,24592+14]..lib/types.ml[773,24592+20])
                                              Tpat_construct "Some"
                                              [
                                                pattern (lib/types.ml[773,24592+19]..lib/types.ml[773,24592+20])
                                                  Tpat_any
                                              ]
                                              None
                                          ]
                                      expression (lib/types.ml[773,24592+24]..lib/types.ml[773,24592+26])
                                        Texp_construct "()"
                                        []
                                    <case>
                                      pattern (lib/types.ml[774,24619+8]..lib/types.ml[774,24619+22])
                                        Tpat_value
                                        pattern (lib/types.ml[774,24619+8]..lib/types.ml[774,24619+22])
                                          Tpat_tuple
                                          [
                                            pattern (lib/types.ml[774,24619+8]..lib/types.ml[774,24619+14])
                                              Tpat_construct "Some"
                                              [
                                                pattern (lib/types.ml[774,24619+13]..lib/types.ml[774,24619+14])
                                                  Tpat_any
                                              ]
                                              None
                                            pattern (lib/types.ml[774,24619+16]..lib/types.ml[774,24619+22])
                                              Tpat_construct "Some"
                                              [
                                                pattern (lib/types.ml[774,24619+21]..lib/types.ml[774,24619+22])
                                                  Tpat_any
                                              ]
                                              None
                                          ]
                                      expression (lib/types.ml[775,24645+10]..lib/types.ml[776,24684+67])
                                        Texp_ifthenelse
                                        expression (lib/types.ml[775,24645+13]..lib/types.ml[775,24645+33])
                                          Texp_apply
                                          expression (lib/types.ml[775,24645+22]..lib/types.ml[775,24645+23])
                                            Texp_ident "Stdlib!.<"
                                          [
                                            <arg>
                                              Nolabel
                                              expression (lib/types.ml[775,24645+13]..lib/types.ml[775,24645+21])
                                                Texp_field
                                                expression (lib/types.ml[775,24645+13]..lib/types.ml[775,24645+15])
                                                  Texp_ident "ty/2556"
                                                "level"
                                            <arg>
                                              Nolabel
                                              expression (lib/types.ml[775,24645+24]..lib/types.ml[775,24645+33])
                                                Texp_field
                                                expression (lib/types.ml[775,24645+24]..lib/types.ml[775,24645+27])
                                                  Texp_ident "ty'/2557"
                                                "level"
                                          ]
                                        expression (lib/types.ml[776,24684+12]..lib/types.ml[776,24684+67])
                                          Texp_sequence
                                          expression (lib/types.ml[776,24684+13]..lib/types.ml[776,24684+25])
                                            Texp_apply
                                            expression (lib/types.ml[776,24684+13]..lib/types.ml[776,24684+21])
                                              Texp_ident "log_type/2549"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[776,24684+22]..lib/types.ml[776,24684+25])
                                                  Texp_ident "ty'/2557"
                                            ]
                                          expression (lib/types.ml[776,24684+27]..lib/types.ml[776,24684+66])
                                            Texp_apply
                                            expression (lib/types.ml[776,24684+27]..lib/types.ml[776,24684+50])
                                              Texp_ident "Transient_expr/2389.set_desc"
                                            [
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[776,24684+51]..lib/types.ml[776,24684+54])
                                                  Texp_ident "ty'/2557"
                                              <arg>
                                                Nolabel
                                                expression (lib/types.ml[776,24684+55]..lib/types.ml[776,24684+66])
                                                  Texp_construct "Tvar"
                                                  [
                                                    expression (lib/types.ml[776,24684+61]..lib/types.ml[776,24684+65])
                                                      Texp_ident "name/2559"
                                                  ]
                                            ]
                                        None
                                    <case>
                                      pattern (lib/types.ml[777,24752+8]..lib/types.ml[777,24752+18])
                                        Tpat_value
                                        pattern (lib/types.ml[777,24752+8]..lib/types.ml[777,24752+18])
                                          Tpat_tuple
                                          [
                                            pattern (lib/types.ml[777,24752+8]..lib/types.ml[777,24752+12])
                                              Tpat_construct "None"
                                              []
                                              None
                                            pattern (lib/types.ml[777,24752+14]..lib/types.ml[777,24752+18])
                                              Tpat_construct "None"
                                              []
                                              None
                                          ]
                                      expression (lib/types.ml[777,24752+24]..lib/types.ml[777,24752+26])
                                        Texp_construct "()"
                                        []
                                  ]
                              <case>
                                pattern (lib/types.ml[779,24789+4]..lib/types.ml[779,24789+5])
                                  Tpat_value
                                  pattern (lib/types.ml[779,24789+4]..lib/types.ml[779,24789+5])
                                    Tpat_any
                                expression (lib/types.ml[779,24789+9]..lib/types.ml[779,24789+11])
                                  Texp_construct "()"
                                  []
                            ]
    ]
  structure_item (lib/types.ml[784,24961+0]..lib/types.ml[789,25090+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[784,24961+4]..lib/types.ml[784,24961+17])
          Tpat_var "set_type_desc/2561"
        expression (lib/types.ml[784,24961+18]..lib/types.ml[789,25090+5]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[784,24961+18]..lib/types.ml[784,24961+20])
                Tpat_var "ty/2563"
            Nolabel
            Param_pat
              pattern (lib/types.ml[784,24961+21]..lib/types.ml[784,24961+23])
                Tpat_var "td/2564"
          ]
          Tfunction_body
            expression (lib/types.ml[785,24987+2]..lib/types.ml[789,25090+5])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[785,24987+6]..lib/types.ml[785,24987+8])
                    Tpat_var "ty/2565"
                  expression (lib/types.ml[785,24987+11]..lib/types.ml[785,24987+18])
                    Texp_apply
                    expression (lib/types.ml[785,24987+11]..lib/types.ml[785,24987+15])
                      Texp_ident "repr/2342"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[785,24987+16]..lib/types.ml[785,24987+18])
                          Texp_ident "ty/2563"
                    ]
              ]
              expression (lib/types.ml[786,25009+2]..lib/types.ml[789,25090+5])
                Texp_ifthenelse
                expression (lib/types.ml[786,25009+5]..lib/types.ml[786,25009+18])
                  Texp_apply
                  expression (lib/types.ml[786,25009+8]..lib/types.ml[786,25009+10])
                    Texp_ident "Stdlib!.!="
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[786,25009+5]..lib/types.ml[786,25009+7])
                        Texp_ident "td/2564"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[786,25009+11]..lib/types.ml[786,25009+18])
                        Texp_field
                        expression (lib/types.ml[786,25009+11]..lib/types.ml[786,25009+13])
                          Texp_ident "ty/2565"
                        "desc"
                  ]
                expression (lib/types.ml[786,25009+24]..lib/types.ml[789,25090+5])
                  Texp_sequence
                  expression (lib/types.ml[787,25039+4]..lib/types.ml[787,25039+15])
                    Texp_apply
                    expression (lib/types.ml[787,25039+4]..lib/types.ml[787,25039+12])
                      Texp_ident "log_type/2549"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[787,25039+13]..lib/types.ml[787,25039+15])
                          Texp_ident "ty/2565"
                    ]
                  expression (lib/types.ml[788,25056+4]..lib/types.ml[788,25056+33])
                    Texp_apply
                    expression (lib/types.ml[788,25056+4]..lib/types.ml[788,25056+27])
                      Texp_ident "Transient_expr/2389.set_desc"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[788,25056+28]..lib/types.ml[788,25056+30])
                          Texp_ident "ty/2565"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[788,25056+31]..lib/types.ml[788,25056+33])
                          Texp_ident "td/2564"
                    ]
                None
    ]
  structure_item (lib/types.ml[792,25201+0]..lib/types.ml[797,25392+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[792,25201+4]..lib/types.ml[792,25201+13])
          Tpat_var "set_level/2566"
        expression (lib/types.ml[792,25201+14]..lib/types.ml[797,25392+5]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[792,25201+14]..lib/types.ml[792,25201+16])
                Tpat_var "ty/2568"
            Nolabel
            Param_pat
              pattern (lib/types.ml[792,25201+17]..lib/types.ml[792,25201+22])
                Tpat_var "level/2569"
          ]
          Tfunction_body
            expression (lib/types.ml[793,25226+2]..lib/types.ml[797,25392+5])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[793,25226+6]..lib/types.ml[793,25226+8])
                    Tpat_var "ty/2570"
                  expression (lib/types.ml[793,25226+11]..lib/types.ml[793,25226+18])
                    Texp_apply
                    expression (lib/types.ml[793,25226+11]..lib/types.ml[793,25226+15])
                      Texp_ident "repr/2342"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[793,25226+16]..lib/types.ml[793,25226+18])
                          Texp_ident "ty/2568"
                    ]
              ]
              expression (lib/types.ml[794,25248+2]..lib/types.ml[797,25392+5])
                Texp_ifthenelse
                expression (lib/types.ml[794,25248+5]..lib/types.ml[794,25248+22])
                  Texp_apply
                  expression (lib/types.ml[794,25248+11]..lib/types.ml[794,25248+13])
                    Texp_ident "Stdlib!.<>"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[794,25248+5]..lib/types.ml[794,25248+10])
                        Texp_ident "level/2569"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[794,25248+14]..lib/types.ml[794,25248+22])
                        Texp_field
                        expression (lib/types.ml[794,25248+14]..lib/types.ml[794,25248+16])
                          Texp_ident "ty/2570"
                        "level"
                  ]
                expression (lib/types.ml[794,25248+28]..lib/types.ml[797,25392+5])
                  Texp_sequence
                  expression (lib/types.ml[795,25282+4]..lib/types.ml[795,25282+70])
                    Texp_ifthenelse
                    expression (lib/types.ml[795,25282+7]..lib/types.ml[795,25282+30])
                      Texp_apply
                      expression (lib/types.ml[795,25282+13]..lib/types.ml[795,25282+15])
                        Texp_ident "Stdlib!.<="
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[795,25282+7]..lib/types.ml[795,25282+12])
                            Texp_field
                            expression (lib/types.ml[795,25282+7]..lib/types.ml[795,25282+9])
                              Texp_ident "ty/2570"
                            "id"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[795,25282+16]..lib/types.ml[795,25282+30])
                            Texp_apply
                            expression (lib/types.ml[795,25282+16]..lib/types.ml[795,25282+17])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[795,25282+17]..lib/types.ml[795,25282+30])
                                  Texp_ident "last_snapshot/2548"
                            ]
                      ]
                    expression (lib/types.ml[795,25282+36]..lib/types.ml[795,25282+70])
                      Texp_apply
                      expression (lib/types.ml[795,25282+36]..lib/types.ml[795,25282+46])
                        Texp_ident "log_change/2290"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[795,25282+47]..lib/types.ml[795,25282+70])
                            Texp_construct "Clevel"
                            [
                              expression (lib/types.ml[795,25282+56]..lib/types.ml[795,25282+58])
                                Texp_ident "ty/2570"
                              expression (lib/types.ml[795,25282+60]..lib/types.ml[795,25282+68])
                                Texp_field
                                expression (lib/types.ml[795,25282+60]..lib/types.ml[795,25282+62])
                                  Texp_ident "ty/2570"
                                "level"
                            ]
                      ]
                    None
                  expression (lib/types.ml[796,25354+4]..lib/types.ml[796,25354+37])
                    Texp_apply
                    expression (lib/types.ml[796,25354+4]..lib/types.ml[796,25354+28])
                      Texp_ident "Transient_expr/2389.set_level"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[796,25354+29]..lib/types.ml[796,25354+31])
                          Texp_ident "ty/2570"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[796,25354+32]..lib/types.ml[796,25354+37])
                          Texp_ident "level/2569"
                    ]
                None
    ]
  structure_item (lib/types.ml[799,25463+0]..lib/types.ml[804,25654+5])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[799,25463+4]..lib/types.ml[799,25463+13])
          Tpat_var "set_scope/2571"
        expression (lib/types.ml[799,25463+14]..lib/types.ml[804,25654+5]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[799,25463+14]..lib/types.ml[799,25463+16])
                Tpat_var "ty/2573"
            Nolabel
            Param_pat
              pattern (lib/types.ml[799,25463+17]..lib/types.ml[799,25463+22])
                Tpat_var "scope/2574"
          ]
          Tfunction_body
            expression (lib/types.ml[800,25488+2]..lib/types.ml[804,25654+5])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[800,25488+6]..lib/types.ml[800,25488+8])
                    Tpat_var "ty/2575"
                  expression (lib/types.ml[800,25488+11]..lib/types.ml[800,25488+18])
                    Texp_apply
                    expression (lib/types.ml[800,25488+11]..lib/types.ml[800,25488+15])
                      Texp_ident "repr/2342"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[800,25488+16]..lib/types.ml[800,25488+18])
                          Texp_ident "ty/2573"
                    ]
              ]
              expression (lib/types.ml[801,25510+2]..lib/types.ml[804,25654+5])
                Texp_ifthenelse
                expression (lib/types.ml[801,25510+5]..lib/types.ml[801,25510+22])
                  Texp_apply
                  expression (lib/types.ml[801,25510+11]..lib/types.ml[801,25510+13])
                    Texp_ident "Stdlib!.<>"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[801,25510+5]..lib/types.ml[801,25510+10])
                        Texp_ident "scope/2574"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[801,25510+14]..lib/types.ml[801,25510+22])
                        Texp_field
                        expression (lib/types.ml[801,25510+14]..lib/types.ml[801,25510+16])
                          Texp_ident "ty/2575"
                        "scope"
                  ]
                expression (lib/types.ml[801,25510+28]..lib/types.ml[804,25654+5])
                  Texp_sequence
                  expression (lib/types.ml[802,25544+4]..lib/types.ml[802,25544+70])
                    Texp_ifthenelse
                    expression (lib/types.ml[802,25544+7]..lib/types.ml[802,25544+30])
                      Texp_apply
                      expression (lib/types.ml[802,25544+13]..lib/types.ml[802,25544+15])
                        Texp_ident "Stdlib!.<="
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[802,25544+7]..lib/types.ml[802,25544+12])
                            Texp_field
                            expression (lib/types.ml[802,25544+7]..lib/types.ml[802,25544+9])
                              Texp_ident "ty/2575"
                            "id"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[802,25544+16]..lib/types.ml[802,25544+30])
                            Texp_apply
                            expression (lib/types.ml[802,25544+16]..lib/types.ml[802,25544+17])
                              Texp_ident "Stdlib!.!"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[802,25544+17]..lib/types.ml[802,25544+30])
                                  Texp_ident "last_snapshot/2548"
                            ]
                      ]
                    expression (lib/types.ml[802,25544+36]..lib/types.ml[802,25544+70])
                      Texp_apply
                      expression (lib/types.ml[802,25544+36]..lib/types.ml[802,25544+46])
                        Texp_ident "log_change/2290"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[802,25544+47]..lib/types.ml[802,25544+70])
                            Texp_construct "Cscope"
                            [
                              expression (lib/types.ml[802,25544+56]..lib/types.ml[802,25544+58])
                                Texp_ident "ty/2575"
                              expression (lib/types.ml[802,25544+60]..lib/types.ml[802,25544+68])
                                Texp_field
                                expression (lib/types.ml[802,25544+60]..lib/types.ml[802,25544+62])
                                  Texp_ident "ty/2575"
                                "scope"
                            ]
                      ]
                    None
                  expression (lib/types.ml[803,25616+4]..lib/types.ml[803,25616+37])
                    Texp_apply
                    expression (lib/types.ml[803,25616+4]..lib/types.ml[803,25616+28])
                      Texp_ident "Transient_expr/2389.set_scope"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[803,25616+29]..lib/types.ml[803,25616+31])
                          Texp_ident "ty/2575"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[803,25616+32]..lib/types.ml[803,25616+37])
                          Texp_ident "scope/2574"
                    ]
                None
    ]
  structure_item (lib/types.ml[805,25660+0]..lib/types.ml[806,25684+48])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[805,25660+4]..lib/types.ml[805,25660+14])
          Tpat_var "set_univar/2576"
        expression (lib/types.ml[805,25660+15]..lib/types.ml[806,25684+48]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[805,25660+15]..lib/types.ml[805,25660+18])
                Tpat_var "rty/2578"
            Nolabel
            Param_pat
              pattern (lib/types.ml[805,25660+19]..lib/types.ml[805,25660+21])
                Tpat_var "ty/2579"
          ]
          Tfunction_body
            expression (lib/types.ml[806,25684+2]..lib/types.ml[806,25684+48])
              Texp_sequence
              expression (lib/types.ml[806,25684+2]..lib/types.ml[806,25684+32])
                Texp_apply
                expression (lib/types.ml[806,25684+2]..lib/types.ml[806,25684+12])
                  Texp_ident "log_change/2290"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[806,25684+13]..lib/types.ml[806,25684+32])
                      Texp_construct "Cuniv"
                      [
                        expression (lib/types.ml[806,25684+21]..lib/types.ml[806,25684+24])
                          Texp_ident "rty/2578"
                        expression (lib/types.ml[806,25684+26]..lib/types.ml[806,25684+30])
                          Texp_apply
                          expression (lib/types.ml[806,25684+26]..lib/types.ml[806,25684+27])
                            Texp_ident "Stdlib!.!"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[806,25684+27]..lib/types.ml[806,25684+30])
                                Texp_ident "rty/2578"
                          ]
                      ]
                ]
              expression (lib/types.ml[806,25684+34]..lib/types.ml[806,25684+48])
                Texp_apply
                expression (lib/types.ml[806,25684+38]..lib/types.ml[806,25684+40])
                  Texp_ident "Stdlib!.:="
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[806,25684+34]..lib/types.ml[806,25684+37])
                      Texp_ident "rty/2578"
                  <arg>
                    Nolabel
                    expression (lib/types.ml[806,25684+41]..lib/types.ml[806,25684+48])
                      Texp_construct "Some"
                      [
                        expression (lib/types.ml[806,25684+46]..lib/types.ml[806,25684+48])
                          Texp_ident "ty/2579"
                      ]
                ]
    ]
  structure_item (lib/types.ml[807,25733+0]..lib/types.ml[808,25753+39])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[807,25733+4]..lib/types.ml[807,25733+12])
          Tpat_var "set_name/2580"
        expression (lib/types.ml[807,25733+13]..lib/types.ml[808,25753+39]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[807,25733+13]..lib/types.ml[807,25733+15])
                Tpat_var "nm/2582"
            Nolabel
            Param_pat
              pattern (lib/types.ml[807,25733+16]..lib/types.ml[807,25733+17])
                Tpat_var "v/2583"
          ]
          Tfunction_body
            expression (lib/types.ml[808,25753+2]..lib/types.ml[808,25753+39])
              Texp_sequence
              expression (lib/types.ml[808,25753+2]..lib/types.ml[808,25753+30])
                Texp_apply
                expression (lib/types.ml[808,25753+2]..lib/types.ml[808,25753+12])
                  Texp_ident "log_change/2290"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[808,25753+13]..lib/types.ml[808,25753+30])
                      Texp_construct "Cname"
                      [
                        expression (lib/types.ml[808,25753+21]..lib/types.ml[808,25753+23])
                          Texp_ident "nm/2582"
                        expression (lib/types.ml[808,25753+25]..lib/types.ml[808,25753+28])
                          Texp_apply
                          expression (lib/types.ml[808,25753+25]..lib/types.ml[808,25753+26])
                            Texp_ident "Stdlib!.!"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[808,25753+26]..lib/types.ml[808,25753+28])
                                Texp_ident "nm/2582"
                          ]
                      ]
                ]
              expression (lib/types.ml[808,25753+32]..lib/types.ml[808,25753+39])
                Texp_apply
                expression (lib/types.ml[808,25753+35]..lib/types.ml[808,25753+37])
                  Texp_ident "Stdlib!.:="
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[808,25753+32]..lib/types.ml[808,25753+34])
                      Texp_ident "nm/2582"
                  <arg>
                    Nolabel
                    expression (lib/types.ml[808,25753+38]..lib/types.ml[808,25753+39])
                      Texp_ident "v/2583"
                ]
    ]
  structure_item (lib/types.ml[810,25794+0]..lib/types.ml[817,26139+47])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[810,25794+8]..lib/types.ml[810,25794+26])
          Tpat_var "link_row_field_ext/2584"
        expression (lib/types.ml[810,25794+27]..lib/types.ml[817,26139+47]) ghost
          Texp_function
          [
            Labelled "inside"
            Param_pat
              pattern (lib/types.ml[810,25794+29]..lib/types.ml[810,25794+35])
                extra
                  Tpat_extra_constraint
                  core_type (lib/types.ml[810,25794+38]..lib/types.ml[810,25794+47])
                    Ttyp_constr "row_field/318"
                    []
                Tpat_alias "inside/2585"
                pattern (lib/types.ml[810,25794+29]..lib/types.ml[810,25794+35])
                  Tpat_any
            Nolabel
            Param_pat
              pattern (lib/types.ml[810,25794+50]..lib/types.ml[810,25794+51])
                extra
                  Tpat_extra_constraint
                  core_type (lib/types.ml[810,25794+54]..lib/types.ml[810,25794+63])
                    Ttyp_constr "row_field/318"
                    []
                Tpat_alias "v/2586"
                pattern (lib/types.ml[810,25794+50]..lib/types.ml[810,25794+51])
                  Tpat_any
          ]
          Tfunction_body
            expression (lib/types.ml[811,25861+2]..lib/types.ml[817,26139+47])
              Texp_match
              expression (lib/types.ml[811,25861+8]..lib/types.ml[811,25861+14])
                Texp_ident "inside/2585"
              [
                <case>
                  pattern (lib/types.ml[812,25881+4]..lib/types.ml[812,25881+45])
                    Tpat_value
                    pattern (lib/types.ml[812,25881+4]..lib/types.ml[812,25881+45])
                      Tpat_construct "RFeither"
                      [
                        pattern (lib/types.ml[812,25881+13]..lib/types.ml[812,25881+45])
                          Tpat_record
                          [
                            "ext"
                              pattern (lib/types.ml[812,25881+20]..lib/types.ml[812,25881+44])
                                Tpat_alias "e/2587"
                                pattern (lib/types.ml[812,25881+20]..lib/types.ml[812,25881+39])
                                  Tpat_record
                                  [
                                    "contents"
                                      pattern (lib/types.ml[812,25881+32]..lib/types.ml[812,25881+38])
                                        Tpat_construct "RFnone"
                                        []
                                        None
                                  ]
                          ]
                      ]
                      None
                  expression (lib/types.ml[813,25930+6]..lib/types.ml[814,25988+33])
                    Texp_match
                    expression (lib/types.ml[813,25930+53]..lib/types.ml[813,25930+54])
                      Texp_ident "v/2586"
                    [
                      <case>
                        pattern (lib/types.ml[813,25930+10]..lib/types.ml[813,25930+50])
                          Tpat_value
                          pattern (lib/types.ml[813,25930+10]..lib/types.ml[813,25930+50])
                            Tpat_alias "v/2589"
                            pattern (lib/types.ml[813,25930+10]..lib/types.ml[813,25930+45])
                              Tpat_or
                              pattern (lib/types.ml[813,25930+10]..lib/types.ml[813,25930+34])
                                Tpat_or
                                pattern (lib/types.ml[813,25930+10]..lib/types.ml[813,25930+20])
                                  Tpat_construct "RFeither"
                                  [
                                    pattern (lib/types.ml[813,25930+19]..lib/types.ml[813,25930+20])
                                      Tpat_any
                                  ]
                                  None
                                pattern (lib/types.ml[813,25930+23]..lib/types.ml[813,25930+34])
                                  Tpat_construct "RFpresent"
                                  [
                                    pattern (lib/types.ml[813,25930+33]..lib/types.ml[813,25930+34])
                                      Tpat_any
                                  ]
                                  None
                              pattern (lib/types.ml[813,25930+37]..lib/types.ml[813,25930+45])
                                Tpat_construct "RFabsent"
                                []
                                None
                        expression (lib/types.ml[814,25988+6]..lib/types.ml[814,25988+33])
                          Texp_sequence
                          expression (lib/types.ml[814,25988+6]..lib/types.ml[814,25988+25])
                            Texp_apply
                            expression (lib/types.ml[814,25988+6]..lib/types.ml[814,25988+16])
                              Texp_ident "log_change/2290"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[814,25988+17]..lib/types.ml[814,25988+25])
                                  Texp_construct "Crow"
                                  [
                                    expression (lib/types.ml[814,25988+23]..lib/types.ml[814,25988+24])
                                      Texp_ident "e/2587"
                                  ]
                            ]
                          expression (lib/types.ml[814,25988+27]..lib/types.ml[814,25988+33])
                            Texp_apply
                            expression (lib/types.ml[814,25988+29]..lib/types.ml[814,25988+31])
                              Texp_ident "Stdlib!.:="
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[814,25988+27]..lib/types.ml[814,25988+28])
                                  Texp_ident "e/2587"
                              <arg>
                                Nolabel
                                expression (lib/types.ml[814,25988+32]..lib/types.ml[814,25988+33])
                                  Texp_ident "v/2589"
                            ]
                    ]
                <case>
                  pattern (lib/types.ml[815,26022+4]..lib/types.ml[815,26022+75])
                    Tpat_value
                    pattern (lib/types.ml[815,26022+4]..lib/types.ml[815,26022+75])
                      Tpat_construct "RFeither"
                      [
                        pattern (lib/types.ml[815,26022+13]..lib/types.ml[815,26022+75])
                          Tpat_record
                          [
                            "ext"
                              pattern (lib/types.ml[815,26022+20]..lib/types.ml[815,26022+74])
                                Tpat_record
                                [
                                  "contents"
                                    pattern (lib/types.ml[815,26022+32]..lib/types.ml[815,26022+73])
                                      Tpat_alias "rf/2588"
                                      pattern (lib/types.ml[815,26022+32]..lib/types.ml[815,26022+67])
                                        Tpat_or
                                        pattern (lib/types.ml[815,26022+32]..lib/types.ml[815,26022+56])
                                          Tpat_or
                                          pattern (lib/types.ml[815,26022+32]..lib/types.ml[815,26022+42])
                                            Tpat_construct "RFeither"
                                            [
                                              pattern (lib/types.ml[815,26022+41]..lib/types.ml[815,26022+42])
                                                Tpat_any
                                            ]
                                            None
                                          pattern (lib/types.ml[815,26022+45]..lib/types.ml[815,26022+56])
                                            Tpat_construct "RFpresent"
                                            [
                                              pattern (lib/types.ml[815,26022+55]..lib/types.ml[815,26022+56])
                                                Tpat_any
                                            ]
                                            None
                                        pattern (lib/types.ml[815,26022+59]..lib/types.ml[815,26022+67])
                                          Tpat_construct "RFabsent"
                                          []
                                          None
                                ]
                          ]
                      ]
                      None
                  expression (lib/types.ml[816,26101+6]..lib/types.ml[816,26101+37])
                    Texp_apply
                    expression (lib/types.ml[816,26101+6]..lib/types.ml[816,26101+24])
                      Texp_ident "link_row_field_ext/2584"
                    [
                      <arg>
                        Labelled "inside"
                        expression (lib/types.ml[816,26101+33]..lib/types.ml[816,26101+35])
                          Texp_ident "rf/2588"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[816,26101+36]..lib/types.ml[816,26101+37])
                          Texp_ident "v/2586"
                    ]
                <case>
                  pattern (lib/types.ml[817,26139+4]..lib/types.ml[817,26139+5])
                    Tpat_value
                    pattern (lib/types.ml[817,26139+4]..lib/types.ml[817,26139+5])
                      Tpat_any
                  expression (lib/types.ml[817,26139+9]..lib/types.ml[817,26139+47])
                    Texp_apply
                    expression (lib/types.ml[817,26139+9]..lib/types.ml[817,26139+20])
                      Texp_ident "Stdlib!.invalid_arg"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[817,26139+21]..lib/types.ml[817,26139+47])
                          Texp_constant Const_string("Types.link_row_field_ext",(lib/types.ml[817,26139+22]..lib/types.ml[817,26139+46]),None)
                    ]
              ]
    ]
  structure_item (lib/types.ml[819,26188+0]..lib/types.ml[830,26672+38])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[819,26188+8]..lib/types.ml[819,26188+17])
          Tpat_var "link_kind/2591"
        expression (lib/types.ml[819,26188+18]..lib/types.ml[830,26672+38]) ghost
          Texp_function
          [
            Labelled "inside"
            Param_pat
              pattern (lib/types.ml[819,26188+20]..lib/types.ml[819,26188+26])
                extra
                  Tpat_extra_constraint
                  core_type (lib/types.ml[819,26188+29]..lib/types.ml[819,26188+39])
                    Ttyp_constr "field_kind/322"
                    []
                Tpat_alias "inside/2592"
                pattern (lib/types.ml[819,26188+20]..lib/types.ml[819,26188+26])
                  Tpat_any
            Nolabel
            Param_pat
              pattern (lib/types.ml[819,26188+42]..lib/types.ml[819,26188+43])
                extra
                  Tpat_extra_constraint
                  core_type (lib/types.ml[819,26188+46]..lib/types.ml[819,26188+56])
                    Ttyp_constr "field_kind/322"
                    []
                Tpat_alias "k/2593"
                pattern (lib/types.ml[819,26188+42]..lib/types.ml[819,26188+43])
                  Tpat_any
          ]
          Tfunction_body
            expression (lib/types.ml[820,26248+2]..lib/types.ml[830,26672+38])
              Texp_match
              expression (lib/types.ml[820,26248+8]..lib/types.ml[820,26248+14])
                Texp_ident "inside/2592"
              [
                <case>
                  pattern (lib/types.ml[821,26268+4]..lib/types.ml[821,26268+52])
                    Tpat_value
                    pattern (lib/types.ml[821,26268+4]..lib/types.ml[821,26268+52])
                      Tpat_alias "inside/2595"
                      pattern (lib/types.ml[821,26268+4]..lib/types.ml[821,26268+42])
                        Tpat_construct "FKvar"
                        [
                          pattern (lib/types.ml[821,26268+10]..lib/types.ml[821,26268+42])
                            Tpat_alias "rk/2594"
                            pattern (lib/types.ml[821,26268+11]..lib/types.ml[821,26268+35])
                              Tpat_record
                              [
                                "field_kind"
                                  pattern (lib/types.ml[821,26268+25]..lib/types.ml[821,26268+34])
                                    Tpat_construct "FKprivate"
                                    []
                                    None
                              ]
                        ]
                        None
                  expression (lib/types.ml[823,26397+6]..lib/types.ml[827,26568+9])
                    Texp_match
                    expression (lib/types.ml[823,26397+47]..lib/types.ml[823,26397+73])
                      Texp_apply
                      expression (lib/types.ml[823,26397+47]..lib/types.ml[823,26397+71])
                        Texp_ident "field_kind_internal_repr/2298"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[823,26397+72]..lib/types.ml[823,26397+73])
                            Texp_ident "k/2593"
                      ]
                    [
                      <case>
                        pattern (lib/types.ml[823,26397+10]..lib/types.ml[823,26397+44])
                          Tpat_value
                          pattern (lib/types.ml[823,26397+10]..lib/types.ml[823,26397+44])
                            Tpat_alias "k/2597"
                            pattern (lib/types.ml[823,26397+10]..lib/types.ml[823,26397+39])
                              Tpat_or
                              pattern (lib/types.ml[823,26397+10]..lib/types.ml[823,26397+28])
                                Tpat_or
                                pattern (lib/types.ml[823,26397+10]..lib/types.ml[823,26397+17])
                                  Tpat_construct "FKvar"
                                  [
                                    pattern (lib/types.ml[823,26397+16]..lib/types.ml[823,26397+17])
                                      Tpat_any
                                  ]
                                  None
                                pattern (lib/types.ml[823,26397+20]..lib/types.ml[823,26397+28])
                                  Tpat_construct "FKpublic"
                                  []
                                  None
                              pattern (lib/types.ml[823,26397+31]..lib/types.ml[823,26397+39])
                                Tpat_construct "FKabsent"
                                []
                                None
                        expression (lib/types.ml[824,26474+6]..lib/types.ml[827,26568+9])
                          Texp_ifthenelse
                          expression (lib/types.ml[824,26474+9]..lib/types.ml[824,26474+20])
                            Texp_apply
                            expression (lib/types.ml[824,26474+11]..lib/types.ml[824,26474+13])
                              Texp_ident "Stdlib!.!="
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[824,26474+9]..lib/types.ml[824,26474+10])
                                  Texp_ident "k/2597"
                              <arg>
                                Nolabel
                                expression (lib/types.ml[824,26474+14]..lib/types.ml[824,26474+20])
                                  Texp_ident "inside/2595"
                            ]
                          expression (lib/types.ml[824,26474+26]..lib/types.ml[827,26568+9])
                            Texp_sequence
                            expression (lib/types.ml[825,26506+8]..lib/types.ml[825,26506+33])
                              Texp_apply
                              expression (lib/types.ml[825,26506+8]..lib/types.ml[825,26506+18])
                                Texp_ident "log_change/2290"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[825,26506+19]..lib/types.ml[825,26506+33])
                                    Texp_construct "Ckind"
                                    [
                                      expression (lib/types.ml[825,26506+26]..lib/types.ml[825,26506+32])
                                        Texp_ident "inside/2595"
                                    ]
                              ]
                            expression (lib/types.ml[826,26541+8]..lib/types.ml[826,26541+26])
                              Texp_setfield
                              expression (lib/types.ml[826,26541+8]..lib/types.ml[826,26541+10])
                                Texp_ident "rk/2594"
                              "field_kind"
                              expression (lib/types.ml[826,26541+25]..lib/types.ml[826,26541+26])
                                Texp_ident "k/2597"
                          None
                    ]
                <case>
                  pattern (lib/types.ml[828,26578+4]..lib/types.ml[828,26578+64])
                    Tpat_value
                    pattern (lib/types.ml[828,26578+4]..lib/types.ml[828,26578+64])
                      Tpat_construct "FKvar"
                      [
                        pattern (lib/types.ml[828,26578+10]..lib/types.ml[828,26578+64])
                          Tpat_record
                          [
                            "field_kind"
                              pattern (lib/types.ml[828,26578+24]..lib/types.ml[828,26578+63])
                                Tpat_alias "inside/2596"
                                pattern (lib/types.ml[828,26578+24]..lib/types.ml[828,26578+53])
                                  Tpat_or
                                  pattern (lib/types.ml[828,26578+24]..lib/types.ml[828,26578+42])
                                    Tpat_or
                                    pattern (lib/types.ml[828,26578+24]..lib/types.ml[828,26578+31])
                                      Tpat_construct "FKvar"
                                      [
                                        pattern (lib/types.ml[828,26578+30]..lib/types.ml[828,26578+31])
                                          Tpat_any
                                      ]
                                      None
                                    pattern (lib/types.ml[828,26578+34]..lib/types.ml[828,26578+42])
                                      Tpat_construct "FKpublic"
                                      []
                                      None
                                  pattern (lib/types.ml[828,26578+45]..lib/types.ml[828,26578+53])
                                    Tpat_construct "FKabsent"
                                    []
                                    None
                          ]
                      ]
                      None
                  expression (lib/types.ml[829,26646+6]..lib/types.ml[829,26646+25])
                    Texp_apply
                    expression (lib/types.ml[829,26646+6]..lib/types.ml[829,26646+15])
                      Texp_ident "link_kind/2591"
                    [
                      <arg>
                        Labelled "inside"
                        expression (lib/types.ml[829,26646+17]..lib/types.ml[829,26646+23])
                          Texp_ident "inside/2596"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[829,26646+24]..lib/types.ml[829,26646+25])
                          Texp_ident "k/2593"
                    ]
                <case>
                  pattern (lib/types.ml[830,26672+4]..lib/types.ml[830,26672+5])
                    Tpat_value
                    pattern (lib/types.ml[830,26672+4]..lib/types.ml[830,26672+5])
                      Tpat_any
                  expression (lib/types.ml[830,26672+9]..lib/types.ml[830,26672+38])
                    Texp_apply
                    expression (lib/types.ml[830,26672+9]..lib/types.ml[830,26672+20])
                      Texp_ident "Stdlib!.invalid_arg"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[830,26672+21]..lib/types.ml[830,26672+38])
                          Texp_constant Const_string("Types.link_kind",(lib/types.ml[830,26672+22]..lib/types.ml[830,26672+37]),None)
                    ]
              ]
    ]
  structure_item (lib/types.ml[832,26712+0]..lib/types.ml[834,26830+10])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[832,26712+8]..lib/types.ml[832,26712+18])
          extra
            Tpat_extra_constraint
            core_type (lib/types.ml[832,26712+21]..lib/types.ml[832,26712+45])
              Ttyp_arrow
              Nolabel
              core_type (lib/types.ml[832,26712+21]..lib/types.ml[832,26712+31])
                Ttyp_constr "commutable/324"
                []
              core_type (lib/types.ml[832,26712+35]..lib/types.ml[832,26712+45])
                Ttyp_constr "commutable/324"
                []
          Tpat_alias "commu_repr/2600"
          pattern (lib/types.ml[832,26712+8]..lib/types.ml[832,26712+18])
            Tpat_any
        expression (lib/types.ml[832,26712+48]..lib/types.ml[834,26830+10])
          extra
            Texp_constraint
            core_type (lib/types.ml[832,26712+21]..lib/types.ml[832,26712+45])
              Ttyp_arrow
              Nolabel
              core_type (lib/types.ml[832,26712+21]..lib/types.ml[832,26712+31])
                Ttyp_constr "commutable/324"
                []
              core_type (lib/types.ml[832,26712+35]..lib/types.ml[832,26712+45])
                Ttyp_constr "commutable/324"
                []
          Texp_function
          []
          Tfunction_cases (lib/types.ml[832,26712+48]..lib/types.ml[834,26830+10])
            [
              <case>
                pattern (lib/types.ml[833,26769+4]..lib/types.ml[833,26769+40])
                  Tpat_construct "Cvar"
                  [
                    pattern (lib/types.ml[833,26769+9]..lib/types.ml[833,26769+40])
                      Tpat_record
                      [
                        "commu"
                          pattern (lib/types.ml[833,26769+18]..lib/types.ml[833,26769+39])
                            Tpat_alias "commu/2601"
                            pattern (lib/types.ml[833,26769+18]..lib/types.ml[833,26769+30])
                              Tpat_or
                              pattern (lib/types.ml[833,26769+18]..lib/types.ml[833,26769+24])
                                Tpat_construct "Cvar"
                                [
                                  pattern (lib/types.ml[833,26769+23]..lib/types.ml[833,26769+24])
                                    Tpat_any
                                ]
                                None
                              pattern (lib/types.ml[833,26769+27]..lib/types.ml[833,26769+30])
                                Tpat_construct "Cok"
                                []
                                None
                      ]
                  ]
                  None
                expression (lib/types.ml[833,26769+44]..lib/types.ml[833,26769+60])
                  Texp_apply
                  expression (lib/types.ml[833,26769+44]..lib/types.ml[833,26769+54])
                    Texp_ident "commu_repr/2600"
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[833,26769+55]..lib/types.ml[833,26769+60])
                        Texp_ident "commu/2601"
                  ]
              <case>
                pattern (lib/types.ml[834,26830+4]..lib/types.ml[834,26830+5])
                  Tpat_var "c/2602"
                expression (lib/types.ml[834,26830+9]..lib/types.ml[834,26830+10])
                  Texp_ident "c/2602"
            ]
    ]
  structure_item (lib/types.ml[836,26842+0]..lib/types.ml[847,27263+39])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[836,26842+8]..lib/types.ml[836,26842+18])
          Tpat_var "link_commu/2603"
        expression (lib/types.ml[836,26842+19]..lib/types.ml[847,27263+39]) ghost
          Texp_function
          [
            Labelled "inside"
            Param_pat
              pattern (lib/types.ml[836,26842+21]..lib/types.ml[836,26842+27])
                extra
                  Tpat_extra_constraint
                  core_type (lib/types.ml[836,26842+30]..lib/types.ml[836,26842+40])
                    Ttyp_constr "commutable/324"
                    []
                Tpat_alias "inside/2604"
                pattern (lib/types.ml[836,26842+21]..lib/types.ml[836,26842+27])
                  Tpat_any
            Nolabel
            Param_pat
              pattern (lib/types.ml[836,26842+43]..lib/types.ml[836,26842+44])
                extra
                  Tpat_extra_constraint
                  core_type (lib/types.ml[836,26842+47]..lib/types.ml[836,26842+57])
                    Ttyp_constr "commutable/324"
                    []
                Tpat_alias "c/2605"
                pattern (lib/types.ml[836,26842+43]..lib/types.ml[836,26842+44])
                  Tpat_any
          ]
          Tfunction_body
            expression (lib/types.ml[837,26903+2]..lib/types.ml[847,27263+39])
              Texp_match
              expression (lib/types.ml[837,26903+8]..lib/types.ml[837,26903+14])
                Texp_ident "inside/2604"
              [
                <case>
                  pattern (lib/types.ml[838,26923+4]..lib/types.ml[838,26923+45])
                    Tpat_value
                    pattern (lib/types.ml[838,26923+4]..lib/types.ml[838,26923+45])
                      Tpat_alias "inside/2607"
                      pattern (lib/types.ml[838,26923+4]..lib/types.ml[838,26923+35])
                        Tpat_construct "Cvar"
                        [
                          pattern (lib/types.ml[838,26923+9]..lib/types.ml[838,26923+35])
                            Tpat_alias "rc/2606"
                            pattern (lib/types.ml[838,26923+10]..lib/types.ml[838,26923+28])
                              Tpat_record
                              [
                                "commu"
                                  pattern (lib/types.ml[838,26923+19]..lib/types.ml[838,26923+27])
                                    Tpat_construct "Cunknown"
                                    []
                                    None
                              ]
                        ]
                        None
                  expression (lib/types.ml[840,27045+6]..lib/types.ml[844,27181+9])
                    Texp_match
                    expression (lib/types.ml[840,27045+30]..lib/types.ml[840,27045+42])
                      Texp_apply
                      expression (lib/types.ml[840,27045+30]..lib/types.ml[840,27045+40])
                        Texp_ident "commu_repr/2600"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[840,27045+41]..lib/types.ml[840,27045+42])
                            Texp_ident "c/2605"
                      ]
                    [
                      <case>
                        pattern (lib/types.ml[840,27045+10]..lib/types.ml[840,27045+27])
                          Tpat_value
                          pattern (lib/types.ml[840,27045+10]..lib/types.ml[840,27045+27])
                            Tpat_alias "c/2609"
                            pattern (lib/types.ml[840,27045+10]..lib/types.ml[840,27045+22])
                              Tpat_or
                              pattern (lib/types.ml[840,27045+10]..lib/types.ml[840,27045+16])
                                Tpat_construct "Cvar"
                                [
                                  pattern (lib/types.ml[840,27045+15]..lib/types.ml[840,27045+16])
                                    Tpat_any
                                ]
                                None
                              pattern (lib/types.ml[840,27045+19]..lib/types.ml[840,27045+22])
                                Tpat_construct "Cok"
                                []
                                None
                        expression (lib/types.ml[841,27091+6]..lib/types.ml[844,27181+9])
                          Texp_ifthenelse
                          expression (lib/types.ml[841,27091+9]..lib/types.ml[841,27091+20])
                            Texp_apply
                            expression (lib/types.ml[841,27091+11]..lib/types.ml[841,27091+13])
                              Texp_ident "Stdlib!.!="
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[841,27091+9]..lib/types.ml[841,27091+10])
                                  Texp_ident "c/2609"
                              <arg>
                                Nolabel
                                expression (lib/types.ml[841,27091+14]..lib/types.ml[841,27091+20])
                                  Texp_ident "inside/2607"
                            ]
                          expression (lib/types.ml[841,27091+26]..lib/types.ml[844,27181+9])
                            Texp_sequence
                            expression (lib/types.ml[842,27123+8]..lib/types.ml[842,27123+34])
                              Texp_apply
                              expression (lib/types.ml[842,27123+8]..lib/types.ml[842,27123+18])
                                Texp_ident "log_change/2290"
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[842,27123+19]..lib/types.ml[842,27123+34])
                                    Texp_construct "Ccommu"
                                    [
                                      expression (lib/types.ml[842,27123+27]..lib/types.ml[842,27123+33])
                                        Texp_ident "inside/2607"
                                    ]
                              ]
                            expression (lib/types.ml[843,27159+8]..lib/types.ml[843,27159+21])
                              Texp_setfield
                              expression (lib/types.ml[843,27159+8]..lib/types.ml[843,27159+10])
                                Texp_ident "rc/2606"
                              "commu"
                              expression (lib/types.ml[843,27159+20]..lib/types.ml[843,27159+21])
                                Texp_ident "c/2609"
                          None
                    ]
                <case>
                  pattern (lib/types.ml[845,27191+4]..lib/types.ml[845,27191+41])
                    Tpat_value
                    pattern (lib/types.ml[845,27191+4]..lib/types.ml[845,27191+41])
                      Tpat_construct "Cvar"
                      [
                        pattern (lib/types.ml[845,27191+9]..lib/types.ml[845,27191+41])
                          Tpat_record
                          [
                            "commu"
                              pattern (lib/types.ml[845,27191+18]..lib/types.ml[845,27191+40])
                                Tpat_alias "inside/2608"
                                pattern (lib/types.ml[845,27191+18]..lib/types.ml[845,27191+30])
                                  Tpat_or
                                  pattern (lib/types.ml[845,27191+18]..lib/types.ml[845,27191+24])
                                    Tpat_construct "Cvar"
                                    [
                                      pattern (lib/types.ml[845,27191+23]..lib/types.ml[845,27191+24])
                                        Tpat_any
                                    ]
                                    None
                                  pattern (lib/types.ml[845,27191+27]..lib/types.ml[845,27191+30])
                                    Tpat_construct "Cok"
                                    []
                                    None
                          ]
                      ]
                      None
                  expression (lib/types.ml[846,27236+6]..lib/types.ml[846,27236+26])
                    Texp_apply
                    expression (lib/types.ml[846,27236+6]..lib/types.ml[846,27236+16])
                      Texp_ident "link_commu/2603"
                    [
                      <arg>
                        Labelled "inside"
                        expression (lib/types.ml[846,27236+18]..lib/types.ml[846,27236+24])
                          Texp_ident "inside/2608"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[846,27236+25]..lib/types.ml[846,27236+26])
                          Texp_ident "c/2605"
                    ]
                <case>
                  pattern (lib/types.ml[847,27263+4]..lib/types.ml[847,27263+5])
                    Tpat_value
                    pattern (lib/types.ml[847,27263+4]..lib/types.ml[847,27263+5])
                      Tpat_any
                  expression (lib/types.ml[847,27263+9]..lib/types.ml[847,27263+39])
                    Texp_apply
                    expression (lib/types.ml[847,27263+9]..lib/types.ml[847,27263+20])
                      Texp_ident "Stdlib!.invalid_arg"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[847,27263+21]..lib/types.ml[847,27263+39])
                          Texp_constant Const_string("Types.link_commu",(lib/types.ml[847,27263+22]..lib/types.ml[847,27263+38]),None)
                    ]
              ]
    ]
  structure_item (lib/types.ml[849,27304+0]..lib/types.ml[849,27304+45])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[849,27304+4]..lib/types.ml[849,27304+16])
          Tpat_var "set_commu_ok/2611"
        expression (lib/types.ml[849,27304+17]..lib/types.ml[849,27304+45]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[849,27304+17]..lib/types.ml[849,27304+18])
                Tpat_var "c/2613"
          ]
          Tfunction_body
            expression (lib/types.ml[849,27304+21]..lib/types.ml[849,27304+45])
              Texp_apply
              expression (lib/types.ml[849,27304+21]..lib/types.ml[849,27304+31])
                Texp_ident "link_commu/2603"
              [
                <arg>
                  Labelled "inside"
                  expression (lib/types.ml[849,27304+40]..lib/types.ml[849,27304+41])
                    Texp_ident "c/2613"
                <arg>
                  Nolabel
                  expression (lib/types.ml[849,27304+42]..lib/types.ml[849,27304+45])
                    Texp_construct "Cok"
                    []
              ]
    ]
  structure_item (lib/types.ml[851,27351+0]..lib/types.ml[854,27427+15])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[851,27351+4]..lib/types.ml[851,27351+12])
          Tpat_var "snapshot/2614"
        expression (lib/types.ml[851,27351+13]..lib/types.ml[854,27427+15]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[851,27351+13]..lib/types.ml[851,27351+15])
                Tpat_construct "()"
                []
                None
          ]
          Tfunction_body
            expression (lib/types.ml[852,27369+2]..lib/types.ml[854,27427+15])
              Texp_let Nonrec
              [
                <def>
                  pattern (lib/types.ml[852,27369+6]..lib/types.ml[852,27369+9])
                    Tpat_var "old/2616"
                  expression (lib/types.ml[852,27369+12]..lib/types.ml[852,27369+26])
                    Texp_apply
                    expression (lib/types.ml[852,27369+12]..lib/types.ml[852,27369+13])
                      Texp_ident "Stdlib!.!"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[852,27369+13]..lib/types.ml[852,27369+26])
                          Texp_ident "last_snapshot/2548"
                    ]
              ]
              expression (lib/types.ml[853,27399+2]..lib/types.ml[854,27427+15])
                Texp_sequence
                expression (lib/types.ml[853,27399+2]..lib/types.ml[853,27399+26])
                  Texp_apply
                  expression (lib/types.ml[853,27399+16]..lib/types.ml[853,27399+18])
                    Texp_ident "Stdlib!.:="
                  [
                    <arg>
                      Nolabel
                      expression (lib/types.ml[853,27399+2]..lib/types.ml[853,27399+15])
                        Texp_ident "last_snapshot/2548"
                    <arg>
                      Nolabel
                      expression (lib/types.ml[853,27399+19]..lib/types.ml[853,27399+26])
                        Texp_apply
                        expression (lib/types.ml[853,27399+19]..lib/types.ml[853,27399+20])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[853,27399+20]..lib/types.ml[853,27399+26])
                              Texp_ident "new_id/2513"
                        ]
                  ]
                expression (lib/types.ml[854,27427+2]..lib/types.ml[854,27427+15])
                  Texp_tuple
                  [
                    expression (lib/types.ml[854,27427+3]..lib/types.ml[854,27427+9])
                      Texp_apply
                      expression (lib/types.ml[854,27427+3]..lib/types.ml[854,27427+4])
                        Texp_ident "Stdlib!.!"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[854,27427+4]..lib/types.ml[854,27427+9])
                            Texp_ident "trail/2278"
                      ]
                    expression (lib/types.ml[854,27427+11]..lib/types.ml[854,27427+14])
                      Texp_ident "old/2616"
                  ]
    ]
  structure_item (lib/types.ml[856,27444+0]..lib/types.ml[862,27597+26])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[856,27444+8]..lib/types.ml[856,27444+15])
          Tpat_var "rev_log/2618"
        expression (lib/types.ml[856,27444+16]..lib/types.ml[862,27597+26]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[856,27444+16]..lib/types.ml[856,27444+20])
                Tpat_var "accu/2619"
          ]
          Tfunction_cases (lib/types.ml[856,27444+23]..lib/types.ml[862,27597+26])
            [
              <case>
                pattern (lib/types.ml[857,27476+4]..lib/types.ml[857,27476+13])
                  Tpat_construct "Unchanged"
                  []
                  None
                expression (lib/types.ml[857,27476+17]..lib/types.ml[857,27476+21])
                  Texp_ident "accu/2619"
              <case>
                pattern (lib/types.ml[858,27498+4]..lib/types.ml[858,27498+11])
                  Tpat_construct "Invalid"
                  []
                  None
                expression (lib/types.ml[858,27498+15]..lib/types.ml[858,27498+27])
                  Texp_assert                  expression (lib/types.ml[858,27498+22]..lib/types.ml[858,27498+27])
                    Texp_construct "false"
                    []
              <case>
                pattern (lib/types.ml[859,27526+4]..lib/types.ml[859,27526+21])
                  Tpat_construct "Change"
                  [
                    pattern (lib/types.ml[859,27526+12]..lib/types.ml[859,27526+14])
                      Tpat_var "ch/2620"
                    pattern (lib/types.ml[859,27526+16]..lib/types.ml[859,27526+20])
                      Tpat_var "next/2621"
                  ]
                  None
                expression (lib/types.ml[860,27551+6]..lib/types.ml[862,27597+26])
                  Texp_let Nonrec
                  [
                    <def>
                      pattern (lib/types.ml[860,27551+10]..lib/types.ml[860,27551+11])
                        Tpat_var "d/2622"
                      expression (lib/types.ml[860,27551+14]..lib/types.ml[860,27551+19])
                        Texp_apply
                        expression (lib/types.ml[860,27551+14]..lib/types.ml[860,27551+15])
                          Texp_ident "Stdlib!.!"
                        [
                          <arg>
                            Nolabel
                            expression (lib/types.ml[860,27551+15]..lib/types.ml[860,27551+19])
                              Texp_ident "next/2621"
                        ]
                  ]
                  expression (lib/types.ml[861,27574+6]..lib/types.ml[862,27597+26])
                    Texp_sequence
                    expression (lib/types.ml[861,27574+6]..lib/types.ml[861,27574+21])
                      Texp_apply
                      expression (lib/types.ml[861,27574+11]..lib/types.ml[861,27574+13])
                        Texp_ident "Stdlib!.:="
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[861,27574+6]..lib/types.ml[861,27574+10])
                            Texp_ident "next/2621"
                        <arg>
                          Nolabel
                          expression (lib/types.ml[861,27574+14]..lib/types.ml[861,27574+21])
                            Texp_construct "Invalid"
                            []
                      ]
                    expression (lib/types.ml[862,27597+6]..lib/types.ml[862,27597+26])
                      Texp_apply
                      expression (lib/types.ml[862,27597+6]..lib/types.ml[862,27597+13])
                        Texp_ident "rev_log/2618"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[862,27597+14]..lib/types.ml[862,27597+24])
                            Texp_construct "::"
                            [
                              expression (lib/types.ml[862,27597+15]..lib/types.ml[862,27597+17])
                                Texp_ident "ch/2620"
                              expression (lib/types.ml[862,27597+19]..lib/types.ml[862,27597+23])
                                Texp_ident "accu/2619"
                            ]
                        <arg>
                          Nolabel
                          expression (lib/types.ml[862,27597+25]..lib/types.ml[862,27597+26])
                            Texp_ident "d/2622"
                      ]
            ]
    ]
  structure_item (lib/types.ml[864,27625+0]..lib/types.ml[874,27959+22])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[864,27625+4]..lib/types.ml[864,27625+13])
          Tpat_var "backtrack/2624"
        expression (lib/types.ml[864,27625+14]..lib/types.ml[874,27959+22]) ghost
          Texp_function
          [
            Labelled "cleanup_abbrev"
            Param_pat
              pattern (lib/types.ml[864,27625+15]..lib/types.ml[864,27625+29])
                Tpat_var "cleanup_abbrev/2626"
            Nolabel
            Param_pat
              pattern (lib/types.ml[864,27625+30]..lib/types.ml[864,27625+44])
                Tpat_tuple
                [
                  pattern (lib/types.ml[864,27625+31]..lib/types.ml[864,27625+38])
                    Tpat_var "changes/2627"
                  pattern (lib/types.ml[864,27625+40]..lib/types.ml[864,27625+43])
                    Tpat_var "old/2628"
                ]
          ]
          Tfunction_body
            expression (lib/types.ml[865,27672+2]..lib/types.ml[874,27959+22])
              Texp_match
              expression (lib/types.ml[865,27672+8]..lib/types.ml[865,27672+16])
                Texp_apply
                expression (lib/types.ml[865,27672+8]..lib/types.ml[865,27672+9])
                  Texp_ident "Stdlib!.!"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[865,27672+9]..lib/types.ml[865,27672+16])
                      Texp_ident "changes/2627"
                ]
              [
                <case>
                  pattern (lib/types.ml[866,27694+4]..lib/types.ml[866,27694+13])
                    Tpat_value
                    pattern (lib/types.ml[866,27694+4]..lib/types.ml[866,27694+13])
                      Tpat_construct "Unchanged"
                      []
                      None
                  expression (lib/types.ml[866,27694+17]..lib/types.ml[866,27694+37])
                    Texp_apply
                    expression (lib/types.ml[866,27694+31]..lib/types.ml[866,27694+33])
                      Texp_ident "Stdlib!.:="
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[866,27694+17]..lib/types.ml[866,27694+30])
                          Texp_ident "last_snapshot/2548"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[866,27694+34]..lib/types.ml[866,27694+37])
                          Texp_ident "old/2628"
                    ]
                <case>
                  pattern (lib/types.ml[867,27732+4]..lib/types.ml[867,27732+11])
                    Tpat_value
                    pattern (lib/types.ml[867,27732+4]..lib/types.ml[867,27732+11])
                      Tpat_construct "Invalid"
                      []
                      None
                  expression (lib/types.ml[867,27732+15]..lib/types.ml[867,27732+41])
                    Texp_apply
                    expression (lib/types.ml[867,27732+15]..lib/types.ml[867,27732+23])
                      Texp_ident "Stdlib!.failwith"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[867,27732+24]..lib/types.ml[867,27732+41])
                          Texp_constant Const_string("Types.backtrack",(lib/types.ml[867,27732+25]..lib/types.ml[867,27732+40]),None)
                    ]
                <case>
                  pattern (lib/types.ml[868,27774+4]..lib/types.ml[868,27774+22])
                    Tpat_value
                    pattern (lib/types.ml[868,27774+4]..lib/types.ml[868,27774+22])
                      Tpat_alias "change/2629"
                      pattern (lib/types.ml[868,27774+4]..lib/types.ml[868,27774+12])
                        Tpat_construct "Change"
                        [
                          pattern (lib/types.ml[868,27774+11]..lib/types.ml[868,27774+12])
                            Tpat_any
                          pattern (lib/types.ml[868,27774+11]..lib/types.ml[868,27774+12])
                            Tpat_any
                        ]
                        None
                  expression (lib/types.ml[869,27800+6]..lib/types.ml[874,27959+22])
                    Texp_sequence
                    expression (lib/types.ml[869,27800+6]..lib/types.ml[869,27800+23])
                      Texp_apply
                      expression (lib/types.ml[869,27800+6]..lib/types.ml[869,27800+20])
                        Texp_ident "cleanup_abbrev/2626"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[869,27800+21]..lib/types.ml[869,27800+23])
                            Texp_construct "()"
                            []
                      ]
                    expression (lib/types.ml[870,27825+6]..lib/types.ml[874,27959+22])
                      Texp_let Nonrec
                      [
                        <def>
                          pattern (lib/types.ml[870,27825+10]..lib/types.ml[870,27825+17])
                            Tpat_var "backlog/2630"
                          expression (lib/types.ml[870,27825+20]..lib/types.ml[870,27825+37])
                            Texp_apply
                            expression (lib/types.ml[870,27825+20]..lib/types.ml[870,27825+27])
                              Texp_ident "rev_log/2618"
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[870,27825+28]..lib/types.ml[870,27825+30])
                                  Texp_construct "[]"
                                  []
                              <arg>
                                Nolabel
                                expression (lib/types.ml[870,27825+31]..lib/types.ml[870,27825+37])
                                  Texp_ident "change/2629"
                            ]
                      ]
                      expression (lib/types.ml[871,27866+6]..lib/types.ml[874,27959+22])
                        Texp_sequence
                        expression (lib/types.ml[871,27866+6]..lib/types.ml[871,27866+35])
                          Texp_apply
                          expression (lib/types.ml[871,27866+6]..lib/types.ml[871,27866+15])
                            Texp_ident "Stdlib!.List.iter"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[871,27866+16]..lib/types.ml[871,27866+27])
                                Texp_ident "undo_change/2524"
                            <arg>
                              Nolabel
                              expression (lib/types.ml[871,27866+28]..lib/types.ml[871,27866+35])
                                Texp_ident "backlog/2630"
                          ]
                        expression (lib/types.ml[872,27903+6]..lib/types.ml[874,27959+22])
                          Texp_sequence
                          expression (lib/types.ml[872,27903+6]..lib/types.ml[872,27903+26])
                            Texp_apply
                            expression (lib/types.ml[872,27903+14]..lib/types.ml[872,27903+16])
                              Texp_ident "Stdlib!.:="
                            [
                              <arg>
                                Nolabel
                                expression (lib/types.ml[872,27903+6]..lib/types.ml[872,27903+13])
                                  Texp_ident "changes/2627"
                              <arg>
                                Nolabel
                                expression (lib/types.ml[872,27903+17]..lib/types.ml[872,27903+26])
                                  Texp_construct "Unchanged"
                                  []
                            ]
                          expression (lib/types.ml[873,27931+6]..lib/types.ml[874,27959+22])
                            Texp_sequence
                            expression (lib/types.ml[873,27931+6]..lib/types.ml[873,27931+26])
                              Texp_apply
                              expression (lib/types.ml[873,27931+20]..lib/types.ml[873,27931+22])
                                Texp_ident "Stdlib!.:="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[873,27931+6]..lib/types.ml[873,27931+19])
                                    Texp_ident "last_snapshot/2548"
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[873,27931+23]..lib/types.ml[873,27931+26])
                                    Texp_ident "old/2628"
                              ]
                            expression (lib/types.ml[874,27959+6]..lib/types.ml[874,27959+22])
                              Texp_apply
                              expression (lib/types.ml[874,27959+12]..lib/types.ml[874,27959+14])
                                Texp_ident "Stdlib!.:="
                              [
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[874,27959+6]..lib/types.ml[874,27959+11])
                                    Texp_ident "trail/2278"
                                <arg>
                                  Nolabel
                                  expression (lib/types.ml[874,27959+15]..lib/types.ml[874,27959+22])
                                    Texp_ident "changes/2627"
                              ]
              ]
    ]
  structure_item (lib/types.ml[876,27983+0]..lib/types.ml[880,28091+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[876,27983+4]..lib/types.ml[876,27983+27])
          Tpat_var "undo_first_change_after/2632"
        expression (lib/types.ml[876,27983+28]..lib/types.ml[880,28091+11]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[876,27983+28]..lib/types.ml[876,27983+40])
                Tpat_tuple
                [
                  pattern (lib/types.ml[876,27983+29]..lib/types.ml[876,27983+36])
                    Tpat_var "changes/2634"
                  pattern (lib/types.ml[876,27983+38]..lib/types.ml[876,27983+39])
                    Tpat_any
                ]
          ]
          Tfunction_body
            expression (lib/types.ml[877,28026+2]..lib/types.ml[880,28091+11])
              Texp_match
              expression (lib/types.ml[877,28026+8]..lib/types.ml[877,28026+16])
                Texp_apply
                expression (lib/types.ml[877,28026+8]..lib/types.ml[877,28026+9])
                  Texp_ident "Stdlib!.!"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[877,28026+9]..lib/types.ml[877,28026+16])
                      Texp_ident "changes/2634"
                ]
              [
                <case>
                  pattern (lib/types.ml[878,28048+4]..lib/types.ml[878,28048+18])
                    Tpat_value
                    pattern (lib/types.ml[878,28048+4]..lib/types.ml[878,28048+18])
                      Tpat_construct "Change"
                      [
                        pattern (lib/types.ml[878,28048+12]..lib/types.ml[878,28048+14])
                          Tpat_var "ch/2635"
                        pattern (lib/types.ml[878,28048+16]..lib/types.ml[878,28048+17])
                          Tpat_any
                      ]
                      None
                  expression (lib/types.ml[879,28070+6]..lib/types.ml[879,28070+20])
                    Texp_apply
                    expression (lib/types.ml[879,28070+6]..lib/types.ml[879,28070+17])
                      Texp_ident "undo_change/2524"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[879,28070+18]..lib/types.ml[879,28070+20])
                          Texp_ident "ch/2635"
                    ]
                <case>
                  pattern (lib/types.ml[880,28091+4]..lib/types.ml[880,28091+5])
                    Tpat_value
                    pattern (lib/types.ml[880,28091+4]..lib/types.ml[880,28091+5])
                      Tpat_any
                  expression (lib/types.ml[880,28091+9]..lib/types.ml[880,28091+11])
                    Texp_construct "()"
                    []
              ]
    ]
  structure_item (lib/types.ml[882,28104+0]..lib/types.ml[889,28285+31])
    Tstr_value Rec
    [
      <def>
        pattern (lib/types.ml[882,28104+8]..lib/types.ml[882,28104+24])
          Tpat_var "rev_compress_log/2637"
        expression (lib/types.ml[882,28104+25]..lib/types.ml[889,28285+31]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[882,28104+25]..lib/types.ml[882,28104+28])
                Tpat_var "log/2638"
            Nolabel
            Param_pat
              pattern (lib/types.ml[882,28104+29]..lib/types.ml[882,28104+30])
                Tpat_var "r/2639"
          ]
          Tfunction_body
            expression (lib/types.ml[883,28137+2]..lib/types.ml[889,28285+31])
              Texp_match
              expression (lib/types.ml[883,28137+8]..lib/types.ml[883,28137+10])
                Texp_apply
                expression (lib/types.ml[883,28137+8]..lib/types.ml[883,28137+9])
                  Texp_ident "Stdlib!.!"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[883,28137+9]..lib/types.ml[883,28137+10])
                      Texp_ident "r/2639"
                ]
              [
                <case>
                  pattern (lib/types.ml[884,28153+4]..lib/types.ml[884,28153+23])
                    Tpat_or
                    pattern (lib/types.ml[884,28153+4]..lib/types.ml[884,28153+13])
                      Tpat_value
                      pattern (lib/types.ml[884,28153+4]..lib/types.ml[884,28153+13])
                        Tpat_construct "Unchanged"
                        []
                        None
                    pattern (lib/types.ml[884,28153+16]..lib/types.ml[884,28153+23])
                      Tpat_value
                      pattern (lib/types.ml[884,28153+16]..lib/types.ml[884,28153+23])
                        Tpat_construct "Invalid"
                        []
                        None
                  expression (lib/types.ml[885,28180+6]..lib/types.ml[885,28180+9])
                    Texp_ident "log/2638"
                <case>
                  pattern (lib/types.ml[886,28190+4]..lib/types.ml[886,28190+30])
                    Tpat_value
                    pattern (lib/types.ml[886,28190+4]..lib/types.ml[886,28190+30])
                      Tpat_construct "Change"
                      [
                        pattern (lib/types.ml[886,28190+12]..lib/types.ml[886,28190+23])
                          Tpat_construct "Ccompress"
                          [
                            pattern (lib/types.ml[886,28190+22]..lib/types.ml[886,28190+23])
                              Tpat_any
                            pattern (lib/types.ml[886,28190+22]..lib/types.ml[886,28190+23])
                              Tpat_any
                            pattern (lib/types.ml[886,28190+22]..lib/types.ml[886,28190+23])
                              Tpat_any
                          ]
                          None
                        pattern (lib/types.ml[886,28190+25]..lib/types.ml[886,28190+29])
                          Tpat_var "next/2640"
                      ]
                      None
                  expression (lib/types.ml[887,28224+6]..lib/types.ml[887,28224+36])
                    Texp_apply
                    expression (lib/types.ml[887,28224+6]..lib/types.ml[887,28224+22])
                      Texp_ident "rev_compress_log/2637"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[887,28224+23]..lib/types.ml[887,28224+31])
                          Texp_construct "::"
                          [
                            expression (lib/types.ml[887,28224+24]..lib/types.ml[887,28224+25])
                              Texp_ident "r/2639"
                            expression (lib/types.ml[887,28224+27]..lib/types.ml[887,28224+30])
                              Texp_ident "log/2638"
                          ]
                      <arg>
                        Nolabel
                        expression (lib/types.ml[887,28224+32]..lib/types.ml[887,28224+36])
                          Texp_ident "next/2640"
                    ]
                <case>
                  pattern (lib/types.ml[888,28261+4]..lib/types.ml[888,28261+20])
                    Tpat_value
                    pattern (lib/types.ml[888,28261+4]..lib/types.ml[888,28261+20])
                      Tpat_construct "Change"
                      [
                        pattern (lib/types.ml[888,28261+12]..lib/types.ml[888,28261+13])
                          Tpat_any
                        pattern (lib/types.ml[888,28261+15]..lib/types.ml[888,28261+19])
                          Tpat_var "next/2641"
                      ]
                      None
                  expression (lib/types.ml[889,28285+6]..lib/types.ml[889,28285+31])
                    Texp_apply
                    expression (lib/types.ml[889,28285+6]..lib/types.ml[889,28285+22])
                      Texp_ident "rev_compress_log/2637"
                    [
                      <arg>
                        Nolabel
                        expression (lib/types.ml[889,28285+23]..lib/types.ml[889,28285+26])
                          Texp_ident "log/2638"
                      <arg>
                        Nolabel
                        expression (lib/types.ml[889,28285+27]..lib/types.ml[889,28285+31])
                          Texp_ident "next/2641"
                    ]
              ]
    ]
  structure_item (lib/types.ml[891,28318+0]..lib/types.ml[902,28664+11])
    Tstr_value Nonrec
    [
      <def>
        pattern (lib/types.ml[891,28318+4]..lib/types.ml[891,28318+17])
          Tpat_var "undo_compress/2642"
        expression (lib/types.ml[891,28318+18]..lib/types.ml[902,28664+11]) ghost
          Texp_function
          [
            Nolabel
            Param_pat
              pattern (lib/types.ml[891,28318+18]..lib/types.ml[891,28318+33])
                Tpat_tuple
                [
                  pattern (lib/types.ml[891,28318+19]..lib/types.ml[891,28318+26])
                    Tpat_var "changes/2644"
                  pattern (lib/types.ml[891,28318+28]..lib/types.ml[891,28318+32])
                    Tpat_var "_old/2645"
                ]
          ]
          Tfunction_body
            expression (lib/types.ml[892,28354+2]..lib/types.ml[902,28664+11])
              Texp_match
              expression (lib/types.ml[892,28354+8]..lib/types.ml[892,28354+16])
                Texp_apply
                expression (lib/types.ml[892,28354+8]..lib/types.ml[892,28354+9])
                  Texp_ident "Stdlib!.!"
                [
                  <arg>
                    Nolabel
                    expression (lib/types.ml[892,28354+9]..lib/types.ml[892,28354+16])
                      Texp_ident "changes/2644"
                ]
              [
                <case>
                  pattern (lib/types.ml[893,28376+4]..lib/types.ml[894,28390+11])
                    Tpat_or
                    pattern (lib/types.ml[893,28376+4]..lib/types.ml[893,28376+13])
                      Tpat_value
                      pattern (lib/types.ml[893,28376+4]..lib/types.ml[893,28376+13])
                        Tpat_construct "Unchanged"
                        []
                        None
                    pattern (lib/types.ml[894,28390+4]..lib/types.ml[894,28390+11])
                      Tpat_value
                      pattern (lib/types.ml[894,28390+4]..lib/types.ml[894,28390+11])
                        Tpat_construct "Invalid"
                        []
                        None
                  expression (lib/types.ml[894,28390+15]..lib/types.ml[894,28390+17])
                    Texp_construct "()"
                    []
                <case>
                  pattern (lib/types.ml[895,28408+4]..lib/types.ml[895,28408+12])
                    Tpat_value
                    pattern (lib/types.ml[895,28408+4]..lib/types.ml[895,28408+12])
                      Tpat_construct "Change"
                      [
                        pattern (lib/types.ml[895,28408+11]..lib/types.ml[895,28408+12])
                          Tpat_any
                        pattern (lib/types.ml[895,28408+11]..lib/types.ml[895,28408+12])
                          Tpat_any
                      ]
                      None
                  expression (lib/types.ml[896,28424+6]..lib/types.ml[902,28664+11])
                    Texp_let Nonrec
                    [
                      <def>
                        pattern (lib/types.ml[896,28424+10]..lib/types.ml[896,28424+13])
                          Tpat_var "log/2646"
                        expression (lib/types.ml[896,28424+16]..lib/types.ml[896,28424+43])
                          Texp_apply
                          expression (lib/types.ml[896,28424+16]..lib/types.ml[896,28424+32])
                            Texp_ident "rev_compress_log/2637"
                          [
                            <arg>
                              Nolabel
                              expression (lib/types.ml[896,28424+33]..lib/types.ml[896,28424+35])
                                Texp_construct "[]"
                                []
                            <arg>
                              Nolabel
                              expression (lib/types.ml[896,28424+36]..lib/types.ml[896,28424+43])
                                Texp_ident "changes/2644"
                          ]
                    ]
                    expression (lib/types.ml[897,28471+6]..lib/types.ml[902,28664+11])
                      Texp_apply
                      expression (lib/types.ml[897,28471+6]..lib/types.ml[897,28471+15])
                        Texp_ident "Stdlib!.List.iter"
                      [
                        <arg>
                          Nolabel
                          expression (lib/types.ml[898,28487+8]..lib/types.ml[901,28645+18])
                            Texp_function
                            [
                              Nolabel
                              Param_pat
                                pattern (lib/types.ml[898,28487+13]..lib/types.ml[898,28487+14])
                                  Tpat_var "r/2647"
                            ]
                            Tfunction_body
                              expression (lib/types.ml[898,28487+18]..lib/types.ml[901,28645+17])
                                Texp_match
                                expression (lib/types.ml[898,28487+24]..lib/types.ml[898,28487+26])
                                  Texp_apply
                                  expression (lib/types.ml[898,28487+24]..lib/types.ml[898,28487+25])
                                    Texp_ident "Stdlib!.!"
                                  [
                                    <arg>
                                      Nolabel
                                      expression (lib/types.ml[898,28487+25]..lib/types.ml[898,28487+26])
                                        Texp_ident "r/2647"
                                  ]
                                [
                                  <case>
                                    pattern (lib/types.ml[899,28519+10]..lib/types.ml[899,28519+48])
                                      Tpat_value
                                      pattern (lib/types.ml[899,28519+10]..lib/types.ml[899,28519+48])
                                        Tpat_construct "Change"
                                        [
                                          pattern (lib/types.ml[899,28519+18]..lib/types.ml[899,28519+41])
                                            Tpat_construct "Ccompress"
                                            [
                                              pattern (lib/types.ml[899,28519+29]..lib/types.ml[899,28519+31])
                                                Tpat_var "ty/2648"
                                              pattern (lib/types.ml[899,28519+33]..lib/types.ml[899,28519+37])
                                                Tpat_var "desc/2649"
                                              pattern (lib/types.ml[899,28519+39]..lib/types.ml[899,28519+40])
                                                Tpat_var "d/2650"
                                            ]
                                            None
                                          pattern (lib/types.ml[899,28519+43]..lib/types.ml[899,28519+47])
                                            Tpat_var "next/2651"
                                        ]
                                        None
                                    <when>
                                      expression (lib/types.ml[899,28519+54]..lib/types.ml[899,28519+66])
                                        Texp_apply
                                        expression (lib/types.ml[899,28519+62]..lib/types.ml[899,28519+64])
                                          Texp_ident "Stdlib!.=="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/types.ml[899,28519+54]..lib/types.ml[899,28519+61])
                                              Texp_field
                                              expression (lib/types.ml[899,28519+54]..lib/types.ml[899,28519+56])
                                                Texp_ident "ty/2648"
                                              "desc"
                                          <arg>
                                            Nolabel
                                            expression (lib/types.ml[899,28519+65]..lib/types.ml[899,28519+66])
                                              Texp_ident "d/2650"
                                        ]
                                    expression (lib/types.ml[900,28589+12]..lib/types.ml[900,28589+55])
                                      Texp_sequence
                                      expression (lib/types.ml[900,28589+12]..lib/types.ml[900,28589+43])
                                        Texp_apply
                                        expression (lib/types.ml[900,28589+12]..lib/types.ml[900,28589+35])
                                          Texp_ident "Transient_expr/2389.set_desc"
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/types.ml[900,28589+36]..lib/types.ml[900,28589+38])
                                              Texp_ident "ty/2648"
                                          <arg>
                                            Nolabel
                                            expression (lib/types.ml[900,28589+39]..lib/types.ml[900,28589+43])
                                              Texp_ident "desc/2649"
                                        ]
                                      expression (lib/types.ml[900,28589+45]..lib/types.ml[900,28589+55])
                                        Texp_apply
                                        expression (lib/types.ml[900,28589+47]..lib/types.ml[900,28589+49])
                                          Texp_ident "Stdlib!.:="
                                        [
                                          <arg>
                                            Nolabel
                                            expression (lib/types.ml[900,28589+45]..lib/types.ml[900,28589+46])
                                              Texp_ident "r/2647"
                                          <arg>
                                            Nolabel
                                            expression (lib/types.ml[900,28589+50]..lib/types.ml[900,28589+55])
                                              Texp_apply
                                              expression (lib/types.ml[900,28589+50]..lib/types.ml[900,28589+51])
                                                Texp_ident "Stdlib!.!"
                                              [
                                                <arg>
                                                  Nolabel
                                                  expression (lib/types.ml[900,28589+51]..lib/types.ml[900,28589+55])
                                                    Texp_ident "next/2651"
                                              ]
                                        ]
                                  <case>
                                    pattern (lib/types.ml[901,28645+10]..lib/types.ml[901,28645+11])
                                      Tpat_value
                                      pattern (lib/types.ml[901,28645+10]..lib/types.ml[901,28645+11])
                                        Tpat_any
                                    expression (lib/types.ml[901,28645+15]..lib/types.ml[901,28645+17])
                                      Texp_construct "()"
                                      []
                                ]
                        <arg>
                          Nolabel
                          expression (lib/types.ml[902,28664+8]..lib/types.ml[902,28664+11])
                            Texp_ident "log/2646"
                      ]
              ]
    ]
]

{<Ocaml_ocaml_types__Types>
 "MethSet"[module] ->
   (CU Ocaml_ocaml_types . "Misc"[module] . "Stdlib"[module] .
    "String"[module]
   . "Set"[module])<Ocaml_ocaml_types__Types.91>;
 "Meths"[module] ->
   (CU Ocaml_ocaml_types . "Misc"[module] . "Stdlib"[module] .
    "String"[module]
   . "Map"[module])<Ocaml_ocaml_types__Types.93>;
 "Separability"[module] ->
   {<Ocaml_ocaml_types__Types.221>
    "compare"[value] -> <Ocaml_ocaml_types__Types.205>;
    "default_signature"[value] -> <Ocaml_ocaml_types__Types.218>;
    "eq"[value] -> <Ocaml_ocaml_types__Types.201>;
    "max"[value] -> <Ocaml_ocaml_types__Types.208>;
    "print"[value] -> <Ocaml_ocaml_types__Types.211>;
    "print_signature"[value] -> <Ocaml_ocaml_types__Types.213>;
    "rank"[value] -> <Ocaml_ocaml_types__Types.204>;
    "signature"[type] -> <Ocaml_ocaml_types__Types.200>;
    "t"[type] -> <Ocaml_ocaml_types__Types.196>;
    };
 "TransientTypeOps"[module] ->
   {<Ocaml_ocaml_types__Types.89>
    "compare"[value] -> <Ocaml_ocaml_types__Types.81>;
    "equal"[value] -> <Ocaml_ocaml_types__Types.86>;
    "hash"[value] -> <Ocaml_ocaml_types__Types.84>;
    "t"[type] -> <Ocaml_ocaml_types__Types.80>;
    };
 "Transient_expr"[module] ->
   {<Ocaml_ocaml_types__Types.513>
    "coerce"[value] -> <Ocaml_ocaml_types__Types.508>;
    "create"[value] -> <Ocaml_ocaml_types__Types.491>;
    "repr"[value] -> <Ocaml_ocaml_types__Types.510>;
    "set_desc"[value] -> <Ocaml_ocaml_types__Types.496>;
    "set_level"[value] -> <Ocaml_ocaml_types__Types.502>;
    "set_scope"[value] -> <Ocaml_ocaml_types__Types.505>;
    "set_stub_desc"[value] -> <Ocaml_ocaml_types__Types.499>;
    "type_expr"[value] -> <Ocaml_ocaml_types__Types.511>;
    };
 "Uid"[module] ->
   (CU Ocaml_ocaml_types . "Shape"[module] .
   "Uid"[module])<Ocaml_ocaml_types__Types.90>;
 "VarSet"[module] ->
   (CU Ocaml_ocaml_types . "Misc"[module] . "Stdlib"[module] .
    "String"[module]
   . "Set"[module])<Ocaml_ocaml_types__Types.92>;
 "Variance"[module] ->
   {<Ocaml_ocaml_types__Types.195>
    "compose"[value] -> <Ocaml_ocaml_types__Types.173>;
    "conjugate"[value] -> <Ocaml_ocaml_types__Types.170>;
    "covariant"[value] -> <Ocaml_ocaml_types__Types.164>;
    "eq"[value] -> <Ocaml_ocaml_types__Types.149>;
    "f"[type] -> <Ocaml_ocaml_types__Types.131>;
    "full"[value] -> <Ocaml_ocaml_types__Types.163>;
    "get_lower"[value] -> <Ocaml_ocaml_types__Types.189>;
    "get_upper"[value] -> <Ocaml_ocaml_types__Types.187>;
    "inter"[value] -> <Ocaml_ocaml_types__Types.143>;
    "mem"[value] -> <Ocaml_ocaml_types__Types.159>;
    "null"[value] -> <Ocaml_ocaml_types__Types.161>;
    "set"[value] -> <Ocaml_ocaml_types__Types.152>;
    "set_if"[value] -> <Ocaml_ocaml_types__Types.155>;
    "single"[value] -> <Ocaml_ocaml_types__Types.139>;
    "strengthen"[value] -> <Ocaml_ocaml_types__Types.185>;
    "subset"[value] -> <Ocaml_ocaml_types__Types.146>;
    "swap"[value] -> <Ocaml_ocaml_types__Types.165>;
    "t"[type] -> <Ocaml_ocaml_types__Types.130>;
    "union"[value] -> <Ocaml_ocaml_types__Types.140>;
    "unknown"[value] -> <Ocaml_ocaml_types__Types.162>;
    "unknown_signature"[value] -> <Ocaml_ocaml_types__Types.191>;
    };
 "Vars"[module] ->
   (CU Ocaml_ocaml_types . "Misc"[module] . "Stdlib"[module] .
    "String"[module]
   . "Map"[module])<Ocaml_ocaml_types__Types.94>;
 "abbrev_memo"[type] -> <Ocaml_ocaml_types__Types.7>;
 "any"[type] -> <Ocaml_ocaml_types__Types.8>;
 "backtrack"[value] -> <Ocaml_ocaml_types__Types.720>;
 "bound_value_identifiers"[value] -> <Ocaml_ocaml_types__Types.399>;
 "change"[type] -> <Ocaml_ocaml_types__Types.411>;
 "changed_row_field_exts"[value] -> <Ocaml_ocaml_types__Types.606>;
 "changes"[type] -> <Ocaml_ocaml_types__Types.421>;
 "class_declaration"[type] -> <Ocaml_ocaml_types__Types.290>;
 "class_signature"[type] -> <Ocaml_ocaml_types__Types.98>;
 "class_type"[type] -> <Ocaml_ocaml_types__Types.286>;
 "class_type_declaration"[type] -> <Ocaml_ocaml_types__Types.299>;
 "commu_ok"[value] -> <Ocaml_ocaml_types__Types.459>;
 "commu_repr"[value] -> <Ocaml_ocaml_types__Types.700>;
 "commu_var"[value] -> <Ocaml_ocaml_types__Types.460>;
 "commutable"[type] -> <Ocaml_ocaml_types__Types.11>;
 "commutable_gen"[type] -> <Ocaml_ocaml_types__Types.12>;
 "compare_type"[value] -> <Ocaml_ocaml_types__Types.517>;
 "constructor_arguments"[type] -> <Ocaml_ocaml_types__Types.230>;
 "constructor_declaration"[type] -> <Ocaml_ocaml_types__Types.229>;
 "constructor_description"[type] -> <Ocaml_ocaml_types__Types.349>;
 "constructor_tag"[type] -> <Ocaml_ocaml_types__Types.350>;
 "create_expr"[value] -> <Ocaml_ocaml_types__Types.625>;
 "create_row"[value] -> <Ocaml_ocaml_types__Types.520>;
 "eq_row_field_ext"[value] -> <Ocaml_ocaml_types__Types.603>;
 "eq_type"[value] -> <Ocaml_ocaml_types__Types.514>;
 "equal_tag"[value] -> <Ocaml_ocaml_types__Types.369>;
 "ext_status"[type] -> <Ocaml_ocaml_types__Types.319>;
 "extension_constructor"[type] -> <Ocaml_ocaml_types__Types.273>;
 "field_absent"[value] -> <Ocaml_ocaml_types__Types.444>;
 "field_kind"[type] -> <Ocaml_ocaml_types__Types.9>;
 "field_kind_gen"[type] -> <Ocaml_ocaml_types__Types.10>;
 "field_kind_internal_repr"[value] -> <Ocaml_ocaml_types__Types.436>;
 "field_kind_repr"[value] -> <Ocaml_ocaml_types__Types.440>;
 "field_kind_view"[type] -> <Ocaml_ocaml_types__Types.432>;
 "field_private"[value] -> <Ocaml_ocaml_types__Types.445>;
 "field_public"[value] -> <Ocaml_ocaml_types__Types.443>;
 "fixed_explanation"[type] -> <Ocaml_ocaml_types__Types.4>;
 "functor_parameter"[type] -> <Ocaml_ocaml_types__Types.312>;
 "get_desc"[value] -> <Ocaml_ocaml_types__Types.483>;
 "get_id"[value] -> <Ocaml_ocaml_types__Types.489>;
 "get_level"[value] -> <Ocaml_ocaml_types__Types.485>;
 "get_row_field"[value] -> <Ocaml_ocaml_types__Types.540>;
 "get_scope"[value] -> <Ocaml_ocaml_types__Types.487>;
 "is_commu_ok"[value] -> <Ocaml_ocaml_types__Types.446>;
 "item_visibility"[value] -> <Ocaml_ocaml_types__Types.385>;
 "label_declaration"[type] -> <Ocaml_ocaml_types__Types.228>;
 "label_description"[type] -> <Ocaml_ocaml_types__Types.387>;
 "last_snapshot"[value] -> <Ocaml_ocaml_types__Types.655>;
 "link_commu"[value] -> <Ocaml_ocaml_types__Types.703>;
 "link_kind"[value] -> <Ocaml_ocaml_types__Types.691>;
 "link_row_field_ext"[value] -> <Ocaml_ocaml_types__Types.684>;
 "link_type"[value] -> <Ocaml_ocaml_types__Types.658>;
 "log_change"[value] -> <Ocaml_ocaml_types__Types.429>;
 "log_type"[value] -> <Ocaml_ocaml_types__Types.656>;
 "match_row_field"[value] -> <Ocaml_ocaml_types__Types.611>;
 "may_equal_constr"[value] -> <Ocaml_ocaml_types__Types.380>;
 "method_privacy"[type] -> <Ocaml_ocaml_types__Types.99>;
 "modtype_declaration"[type] -> <Ocaml_ocaml_types__Types.317>;
 "module_declaration"[type] -> <Ocaml_ocaml_types__Types.316>;
 "module_presence"[type] -> <Ocaml_ocaml_types__Types.313>;
 "module_type"[type] -> <Ocaml_ocaml_types__Types.311>;
 "new_id"[value] -> <Ocaml_ocaml_types__Types.624>;
 "newty2"[value] -> <Ocaml_ocaml_types__Types.630>;
 "newty3"[value] -> <Ocaml_ocaml_types__Types.626>;
 "rec_status"[type] -> <Ocaml_ocaml_types__Types.318>;
 "record_representation"[type] -> <Ocaml_ocaml_types__Types.226>;
 "repr"[value] -> <Ocaml_ocaml_types__Types.478>;
 "repr_link"[value] -> <Ocaml_ocaml_types__Types.461>;
 "repr_link1"[value] -> <Ocaml_ocaml_types__Types.470>;
 "rev_compress_log"[value] -> <Ocaml_ocaml_types__Types.729>;
 "rev_log"[value] -> <Ocaml_ocaml_types__Types.715>;
 "rf_absent"[value] -> <Ocaml_ocaml_types__Types.593>;
 "rf_either"[value] -> <Ocaml_ocaml_types__Types.594>;
 "rf_either_of"[value] -> <Ocaml_ocaml_types__Types.601>;
 "rf_present"[value] -> <Ocaml_ocaml_types__Types.591>;
 "row_closed"[value] -> <Ocaml_ocaml_types__Types.534>;
 "row_desc"[type] -> <Ocaml_ocaml_types__Types.3>;
 "row_desc_repr"[type] -> <Ocaml_ocaml_types__Types.553>;
 "row_field"[type] -> <Ocaml_ocaml_types__Types.5>;
 "row_field_ext"[value] -> <Ocaml_ocaml_types__Types.587>;
 "row_field_gen"[type] -> <Ocaml_ocaml_types__Types.6>;
 "row_field_repr"[value] -> <Ocaml_ocaml_types__Types.580>;
 "row_field_repr_aux"[value] -> <Ocaml_ocaml_types__Types.573>;
 "row_field_view"[type] -> <Ocaml_ocaml_types__Types.569>;
 "row_fields"[value] -> <Ocaml_ocaml_types__Types.526>;
 "row_fixed"[value] -> <Ocaml_ocaml_types__Types.536>;
 "row_more"[value] -> <Ocaml_ocaml_types__Types.532>;
 "row_name"[value] -> <Ocaml_ocaml_types__Types.538>;
 "row_repr"[value] -> <Ocaml_ocaml_types__Types.565>;
 "row_repr_no_fields"[value] -> <Ocaml_ocaml_types__Types.529>;
 "self_meths"[type] -> <Ocaml_ocaml_types__Types.97>;
 "set_commu_ok"[value] -> <Ocaml_ocaml_types__Types.711>;
 "set_level"[value] -> <Ocaml_ocaml_types__Types.670>;
 "set_name"[value] -> <Ocaml_ocaml_types__Types.681>;
 "set_row_name"[value] -> <Ocaml_ocaml_types__Types.548>;
 "set_scope"[value] -> <Ocaml_ocaml_types__Types.674>;
 "set_type_desc"[value] -> <Ocaml_ocaml_types__Types.666>;
 "set_univar"[value] -> <Ocaml_ocaml_types__Types.678>;
 "signature"[type] -> <Ocaml_ocaml_types__Types.314>;
 "signature_item"[type] -> <Ocaml_ocaml_types__Types.315>;
 "signature_item_id"[value] -> <Ocaml_ocaml_types__Types.409>;
 "snapshot"[value] -> <Ocaml_ocaml_types__Types.713>;
 "snapshot"[type] -> <Ocaml_ocaml_types__Types.654>;
 "trail"[value] -> <Ocaml_ocaml_types__Types.425>;
 "transient_expr"[type] -> <Ocaml_ocaml_types__Types.0>;
 "type_decl_kind"[type] -> <Ocaml_ocaml_types__Types.223>;
 "type_declaration"[type] -> <Ocaml_ocaml_types__Types.222>;
 "type_desc"[type] -> <Ocaml_ocaml_types__Types.2>;
 "type_expr"[type] -> <Ocaml_ocaml_types__Types.1>;
 "type_kind"[type] -> <Ocaml_ocaml_types__Types.224>;
 "type_origin"[type] -> <Ocaml_ocaml_types__Types.225>;
 "type_transparence"[type] -> <Ocaml_ocaml_types__Types.274>;
 "undo_change"[value] -> <Ocaml_ocaml_types__Types.633>;
 "undo_compress"[value] -> <Ocaml_ocaml_types__Types.734>;
 "undo_first_change_after"[value] -> <Ocaml_ocaml_types__Types.726>;
 "value_description"[type] -> <Ocaml_ocaml_types__Types.95>;
 "value_kind"[type] -> <Ocaml_ocaml_types__Types.96>;
 "variant_representation"[type] -> <Ocaml_ocaml_types__Types.227>;
 "visibility"[type] -> <Ocaml_ocaml_types__Types.308>;
 }

(seq
  (seq
    (let
      (compare/440 =
         (function t1/441 t2/442 : int
           (- (field_int 3 t1/441) (field_int 3 t2/442))))
      (setfield_ptr(root-init) 72 (global Ocaml_ocaml_types__Types!)
        compare/440))
    (let (hash/443 = (function t/445 : int (field_int 3 t/445)))
      (setfield_ptr(root-init) 73 (global Ocaml_ocaml_types__Types!)
        hash/443))
    (let (equal/446 = (function t1/448 t2/449 : int (== t1/448 t2/449)))
      (setfield_ptr(root-init) 74 (global Ocaml_ocaml_types__Types!)
        equal/446))
    0)
  (let
    (TransientTypeOps/450 =
       (makeblock 0 (field_imm 72 (global Ocaml_ocaml_types__Types!))
         (field_imm 73 (global Ocaml_ocaml_types__Types!))
         (field_imm 74 (global Ocaml_ocaml_types__Types!))))
    (seq
      (setfield_ptr(root-init) 0 (global Ocaml_ocaml_types__Types!)
        TransientTypeOps/450)
      (let
        (single/1510 =
           (function param/1512[int] : int
             (switch* param/1512
              case int 0: 1
              case int 1: (+ 2 4)
              case int 2: 4
              case int 3: 8
              case int 4: (+ (+ 16 8) 1)
              case int 5: (+ (+ (+ 32 8) 4) 2)
              case int 6: 63)))
        (setfield_ptr(root-init) 75 (global Ocaml_ocaml_types__Types!)
          single/1510))
      (let
        (union/1513 =
           (function v1/1515[int] v2/1516[int] : int (or v1/1515 v2/1516)))
        (setfield_ptr(root-init) 76 (global Ocaml_ocaml_types__Types!)
          union/1513))
      (let
        (inter/1517 =
           (function v1/1519[int] v2/1520[int] : int (and v1/1519 v2/1520)))
        (setfield_ptr(root-init) 77 (global Ocaml_ocaml_types__Types!)
          inter/1517))
      (let
        (subset/1521 =
           (function v1/1523[int] v2/1524[int] : int
             (== (and v1/1523 v2/1524) v1/1523)))
        (setfield_ptr(root-init) 78 (global Ocaml_ocaml_types__Types!)
          subset/1521))
      (let
        (eq/1525 =
           (function v1/1527[int] v2/1528[int] : int (== v1/1527 v2/1528)))
        (setfield_ptr(root-init) 79 (global Ocaml_ocaml_types__Types!)
          eq/1525))
      (let
        (set/1529 =
           (function x/1531[int] v/1532[int] : int
             (apply (field_imm 76 (global Ocaml_ocaml_types__Types!)) v/1532
               (apply (field_imm 75 (global Ocaml_ocaml_types__Types!))
                 x/1531))))
        (setfield_ptr(root-init) 80 (global Ocaml_ocaml_types__Types!)
          set/1529))
      (let
        (set_if/1533 =
           (function b/1535[int] x/1536[int] v/1537[int] : int
             (if b/1535
               (apply (field_imm 80 (global Ocaml_ocaml_types__Types!))
                 x/1536 v/1537)
               v/1537)))
        (setfield_ptr(root-init) 81 (global Ocaml_ocaml_types__Types!)
          set_if/1533))
      (let
        (mem/1538 =
           (function x/1540[int]
             (apply (field_imm 78 (global Ocaml_ocaml_types__Types!))
               (apply (field_imm 75 (global Ocaml_ocaml_types__Types!))
                 x/1540))))
        (setfield_ptr(root-init) 82 (global Ocaml_ocaml_types__Types!)
          mem/1538))
      (let (null/1541 =[int] 0)
        (setfield_ptr(root-init) 83 (global Ocaml_ocaml_types__Types!)
          null/1541))
      (let (unknown/1542 =[int] 7)
        (setfield_ptr(root-init) 84 (global Ocaml_ocaml_types__Types!)
          unknown/1542))
      (let
        (full/1543 =[int]
           (apply (field_imm 75 (global Ocaml_ocaml_types__Types!)) 6))
        (setfield_ptr(root-init) 85 (global Ocaml_ocaml_types__Types!)
          full/1543))
      (let
        (covariant/1544 =[int]
           (apply (field_imm 75 (global Ocaml_ocaml_types__Types!)) 4))
        (setfield_ptr(root-init) 86 (global Ocaml_ocaml_types__Types!)
          covariant/1544))
      (let
        (swap/1545 =
           (function f1/1547[int] f2/1548[int] v/1549[int] v'/1550[int] : int
             (apply (field_imm 81 (global Ocaml_ocaml_types__Types!))
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!))
                 f2/1548 v/1549)
               f1/1547
               (apply (field_imm 81 (global Ocaml_ocaml_types__Types!))
                 (apply (field_imm 82 (global Ocaml_ocaml_types__Types!))
                   f1/1547 v/1549)
                 f2/1548 v'/1550))))
        (setfield_ptr(root-init) 87 (global Ocaml_ocaml_types__Types!)
          swap/1545))
      (let
        (conjugate/1551 =
           (function v/1553[int] : int
             (let
               (v'/1554 =[int]
                  (apply (field_imm 77 (global Ocaml_ocaml_types__Types!))
                    v/1553
                    (apply (field_imm 76 (global Ocaml_ocaml_types__Types!))
                      (apply
                        (field_imm 75 (global Ocaml_ocaml_types__Types!)) 3)
                      (apply
                        (field_imm 75 (global Ocaml_ocaml_types__Types!)) 2))))
               (apply (field_imm 87 (global Ocaml_ocaml_types__Types!)) 4 5
                 v/1553
                 (apply (field_imm 87 (global Ocaml_ocaml_types__Types!)) 0 1
                   v/1553 v'/1554)))))
        (setfield_ptr(root-init) 88 (global Ocaml_ocaml_types__Types!)
          conjugate/1551))
      (let
        (compose/1555 =
           (function v1/1557[int] v2/1558[int] : int
             (if
               (&&
                 (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 6
                   v1/1557)
                 (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 3
                   v2/1558))
               (field_imm 85 (global Ocaml_ocaml_types__Types!))
               (let
                 (mp/1559 =[int]
                    (||
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 0
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 0
                          v2/1558))
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 1
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 1
                          v2/1558)))
                  mn/1560 =[int]
                    (||
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 0
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 1
                          v2/1558))
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 1
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 0
                          v2/1558)))
                  mw/1561 =[int]
                    (||
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 2
                          v1/1557)
                        (!= v2/1558
                          (field_imm 83 (global Ocaml_ocaml_types__Types!))))
                      (&&
                        (!= v1/1557
                          (field_imm 83 (global Ocaml_ocaml_types__Types!)))
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 2
                          v2/1558)))
                  inj/1562 =[int]
                    (&&
                      (apply
                        (field_imm 82 (global Ocaml_ocaml_types__Types!)) 3
                        v1/1557)
                      (apply
                        (field_imm 82 (global Ocaml_ocaml_types__Types!)) 3
                        v2/1558))
                  pos/1563 =[int]
                    (||
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 4
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 4
                          v2/1558))
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 5
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 5
                          v2/1558)))
                  neg/1564 =[int]
                    (||
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 4
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 5
                          v2/1558))
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 5
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 4
                          v2/1558))))
                 (apply (field_imm 25 (global Stdlib__List!))
                   (function v/1631[int] param/1634 : int
                     (let
                       (f/1633 =a (field_imm 1 param/1634)
                        b/1632 =a (field_imm 0 param/1634))
                       (apply
                         (field_imm 81 (global Ocaml_ocaml_types__Types!))
                         b/1632 f/1633 v/1631)))
                   (field_imm 83 (global Ocaml_ocaml_types__Types!))
                   (makeblock 0 (makeblock 0 (int,int) mp/1559 0)
                     (makeblock 0 (makeblock 0 (int,int) mn/1560 1)
                       (makeblock 0 (makeblock 0 (int,int) mw/1561 2)
                         (makeblock 0 (makeblock 0 (int,int) inj/1562 3)
                           (makeblock 0 (makeblock 0 (int,int) pos/1563 4)
                             (makeblock 0 (makeblock 0 (int,int) neg/1564 5)
                               0)))))))))))
        (setfield_ptr(root-init) 89 (global Ocaml_ocaml_types__Types!)
          compose/1555))
      (let
        (strengthen/1635 =
           (function v/1637[int] : int
             (if
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 1
                 v/1637)
               v/1637
               (and v/1637
                 (- (field_imm 85 (global Ocaml_ocaml_types__Types!))
                   (apply (field_imm 75 (global Ocaml_ocaml_types__Types!))
                     2))))))
        (setfield_ptr(root-init) 90 (global Ocaml_ocaml_types__Types!)
          strengthen/1635))
      (let
        (get_upper/1638 =
           (function v/1640[int]
             (makeblock 0 (int,int)
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 0
                 v/1640)
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 1
                 v/1640))))
        (setfield_ptr(root-init) 91 (global Ocaml_ocaml_types__Types!)
          get_upper/1638))
      (let
        (get_lower/1641 =
           (function v/1643[int]
             (makeblock 0 (int,int,int)
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 4
                 v/1643)
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 5
                 v/1643)
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 3
                 v/1643))))
        (setfield_ptr(root-init) 92 (global Ocaml_ocaml_types__Types!)
          get_lower/1641))
      (let
        (unknown_signature/1644 =
           (function injective/1646[int] arity/1647[int]
             (let
               (v/1648 =[int]
                  (if injective/1646
                    (apply (field_imm 80 (global Ocaml_ocaml_types__Types!))
                      3 (field_imm 84 (global Ocaml_ocaml_types__Types!)))
                    (field_imm 84 (global Ocaml_ocaml_types__Types!))))
               (apply (field_imm 10 (global Ocaml_ocaml_types__Misc!)) v/1648
                 arity/1647))))
        (setfield_ptr(root-init) 93 (global Ocaml_ocaml_types__Types!)
          unknown_signature/1644))
      0
      (let
        (Variance/1649 =
           (makeblock 0 (field_imm 75 (global Ocaml_ocaml_types__Types!))
             (field_imm 76 (global Ocaml_ocaml_types__Types!))
             (field_imm 77 (global Ocaml_ocaml_types__Types!))
             (field_imm 78 (global Ocaml_ocaml_types__Types!))
             (field_imm 79 (global Ocaml_ocaml_types__Types!))
             (field_imm 80 (global Ocaml_ocaml_types__Types!))
             (field_imm 81 (global Ocaml_ocaml_types__Types!))
             (field_imm 82 (global Ocaml_ocaml_types__Types!))
             (field_imm 83 (global Ocaml_ocaml_types__Types!))
             (field_imm 84 (global Ocaml_ocaml_types__Types!))
             (field_imm 85 (global Ocaml_ocaml_types__Types!))
             (field_imm 86 (global Ocaml_ocaml_types__Types!))
             (field_imm 87 (global Ocaml_ocaml_types__Types!))
             (field_imm 88 (global Ocaml_ocaml_types__Types!))
             (field_imm 89 (global Ocaml_ocaml_types__Types!))
             (field_imm 90 (global Ocaml_ocaml_types__Types!))
             (field_imm 91 (global Ocaml_ocaml_types__Types!))
             (field_imm 92 (global Ocaml_ocaml_types__Types!))
             (field_imm 93 (global Ocaml_ocaml_types__Types!))))
        (seq
          (setfield_ptr(root-init) 1 (global Ocaml_ocaml_types__Types!)
            Variance/1649)
          (let
            (eq/1655 =
               (function m1/1657[int] m2/1658[int] : int
                 (== m1/1657 m2/1658)))
            (setfield_ptr(root-init) 94 (global Ocaml_ocaml_types__Types!)
              eq/1655))
          (let
            (rank/1659 =
               (function param/1661[int] : int
                 (switch* param/1661
                  case int 0: 0
                  case int 1: 1
                  case int 2: 2)))
            (setfield_ptr(root-init) 95 (global Ocaml_ocaml_types__Types!)
              rank/1659))
          (let
            (compare/1662 =
               (function m1/1663[int] m2/1664[int] : int
                 (compare_ints
                   (apply (field_imm 95 (global Ocaml_ocaml_types__Types!))
                     m1/1663)
                   (apply (field_imm 95 (global Ocaml_ocaml_types__Types!))
                     m2/1664))))
            (setfield_ptr(root-init) 96 (global Ocaml_ocaml_types__Types!)
              compare/1662))
          (let
            (max/1665 =
               (function m1/1666[int] m2/1667[int] : int
                 (if
                   (>=
                     (apply (field_imm 95 (global Ocaml_ocaml_types__Types!))
                       m1/1666)
                     (apply (field_imm 95 (global Ocaml_ocaml_types__Types!))
                       m2/1667))
                   m1/1666 m2/1667)))
            (setfield_ptr(root-init) 97 (global Ocaml_ocaml_types__Types!)
              max/1665))
          (let
            (print/1668 =
               (function ppf/1670 param/2010[int] : int
                 (switch* param/2010
                  case int 0:
                   (apply (field_imm 138 (global Stdlib__Format!)) ppf/1670
                     [0: [11: "Ind" 0] "Ind"])
                  case int 1:
                   (apply (field_imm 138 (global Stdlib__Format!)) ppf/1670
                     [0: [11: "Sep" 0] "Sep"])
                  case int 2:
                   (apply (field_imm 138 (global Stdlib__Format!)) ppf/1670
                     [0: [11: "Deepsep" 0] "Deepsep"]))))
            (setfield_ptr(root-init) 98 (global Ocaml_ocaml_types__Types!)
              print/1668))
          (let
            (print_signature/2011 =
               (function ppf/2013 modes/2014 : int
                 (let
                   (pp_sep/2015 =
                      (function ppf/2017 param/2018[int] : int
                        (apply (field_imm 138 (global Stdlib__Format!))
                          ppf/2017
                          [0: [12: ',' [17: [0: "@," 0 0] 0]] ",@,"])))
                   (apply (field_imm 138 (global Stdlib__Format!)) ppf/2013
                     [0:
                      [18:
                       [1: [0: 0 ""]] [12: '(' [15: [12: ')' [17: 0 0]]]]]
                      "@[(%a)@]"]
                     (apply (field_imm 131 (global Stdlib__Format!))
                       (makeblock 0 pp_sep/2015)
                       (field_imm 98 (global Ocaml_ocaml_types__Types!)))
                     modes/2014))))
            (setfield_ptr(root-init) 99 (global Ocaml_ocaml_types__Types!)
              print_signature/2011))
          (let
            (default_signature/2019 =
               (function arity/2021[int]
                 (let (default_mode/2022 =[int] 0)
                   (apply (field_imm 10 (global Ocaml_ocaml_types__Misc!))
                     default_mode/2022 arity/2021))))
            (setfield_ptr(root-init) 100 (global Ocaml_ocaml_types__Types!)
              default_signature/2019))
          0
          (let
            (Separability/2023 =
               (makeblock 0 (field_imm 94 (global Ocaml_ocaml_types__Types!))
                 (field_imm 95 (global Ocaml_ocaml_types__Types!))
                 (field_imm 96 (global Ocaml_ocaml_types__Types!))
                 (field_imm 97 (global Ocaml_ocaml_types__Types!))
                 (field_imm 98 (global Ocaml_ocaml_types__Types!))
                 (field_imm 99 (global Ocaml_ocaml_types__Types!))
                 (field_imm 100 (global Ocaml_ocaml_types__Types!))))
            (seq
              (setfield_ptr(root-init) 2 (global Ocaml_ocaml_types__Types!)
                Separability/2023)
              (let
                (equal_tag/2179 =
                   (function t1/2181 t2/2182 : int
                     (catch
                       (switch* t1/2181
                        case int 0:
                         (catch (if (isint t2/2182) 1 (exit 4)) with (4)
                           (exit 1))
                        case tag 0:
                         (let (i1/2183 =a (field_imm 0 t1/2181))
                           (catch
                             (switch t2/2182
                              case tag 0:
                               (let (i2/2184 =a (field_imm 0 t2/2182))
                                 (== i2/2184 i1/2183))
                              default: (exit 2))
                            with (2) (exit 1)))
                        case tag 1:
                         (let (i1/2185 =a (field_imm 0 t1/2181))
                           (catch
                             (switch t2/2182
                              case tag 1:
                               (let (i2/2186 =a (field_imm 0 t2/2182))
                                 (== i2/2186 i1/2185))
                              default: (exit 3))
                            with (3) (exit 1)))
                        case tag 2:
                         (let (path1/2187 =a (field_imm 0 t1/2181))
                           (catch
                             (switch t2/2182
                              case tag 2:
                               (let
                                 (b2/2190 =a (field_imm 1 t2/2182)
                                  path2/2189 =a (field_imm 0 t2/2182)
                                  b1/2188 =a (field_imm 1 t1/2181))
                                 (&&
                                   (apply
                                     (field_imm 0
                                       (global Ocaml_ocaml_types__Path!))
                                     path1/2187 path2/2189)
                                   (== b1/2188 b2/2190)))
                              default: (exit 5))
                            with (5)
                             (let (*match*/5895 =a (field_imm 1 t1/2181))
                               (exit 1)))))
                      with (1) 0)))
                (setfield_ptr(root-init) 3 (global Ocaml_ocaml_types__Types!)
                  equal_tag/2179))
              (let
                (may_equal_constr/2191 =
                   (function c1/2193 c2/2194 : int
                     (&& (== (field_int 4 c1/2193) (field_int 4 c2/2194))
                       (let
                         (*match*/5896 = (field_imm 5 c1/2193)
                          *match*/5897 = (field_imm 5 c2/2194))
                         (catch
                           (switch *match*/5896
                            case tag 2:
                             (switch *match*/5897
                              case tag 2:
                               (let
                                 (*match*/5901 =a (field_imm 1 *match*/5897)
                                  *match*/5900 =a (field_imm 0 *match*/5897)
                                  *match*/5899 =a (field_imm 1 *match*/5896)
                                  *match*/5898 =a (field_imm 0 *match*/5896))
                                 1)
                              default: (exit 6))
                            default: (exit 6))
                          with (6)
                           (let
                             (tag2/2196 =a *match*/5897
                              tag1/2195 =a *match*/5896)
                             (apply
                               (field_imm 3
                                 (global Ocaml_ocaml_types__Types!))
                               tag1/2195 tag2/2196)))))))
                (setfield_ptr(root-init) 4 (global Ocaml_ocaml_types__Types!)
                  may_equal_constr/2191))
              (let
                (item_visibility/2197 =
                   (function param/2206 : int
                     (catch
                       (catch
                         (catch
                           (switch param/2206
                            case tag 0: (exit 8)
                            case tag 3:
                             (let
                               (vis/5905 =a (field_imm 4 param/2206)
                                *match*/5920 =a (field_imm 3 param/2206)
                                *match*/5919 =a (field_imm 2 param/2206)
                                *match*/5918 =a (field_imm 1 param/2206)
                                *match*/5917 =a (field_imm 0 param/2206))
                               (exit 7 vis/5905))
                            case tag 4: (exit 8)
                            default: (exit 9))
                          with (8)
                           (let
                             (vis/5908 =a (field_imm 2 param/2206)
                              *match*/5910 =a (field_imm 1 param/2206)
                              *match*/5909 =a (field_imm 0 param/2206))
                             (exit 7 vis/5908)))
                        with (9)
                         (let
                           (vis/5907 =a (field_imm 3 param/2206)
                            *match*/5913 =a (field_imm 2 param/2206)
                            *match*/5912 =a (field_imm 1 param/2206)
                            *match*/5911 =a (field_imm 0 param/2206))
                           (exit 7 vis/5907)))
                      with (7 vis/2199[int]) vis/2199)))
                (setfield_ptr(root-init) 5 (global Ocaml_ocaml_types__Types!)
                  item_visibility/2197))
              (letrec
                (bound_value_identifiers/2219
                   (function param/2253
                     (if (isint param/2253) 0
                       (let (*match*/5929 =a (field_imm 0 param/2253))
                         (catch
                           (catch
                             (switch *match*/5929
                              case tag 0:
                               (let
                                 (*match*/5930 =a (field_imm 1 *match*/5929)
                                  *match*/5932 =a (field_imm 1 *match*/5930))
                                 (if (isint *match*/5932)
                                   (let
                                     (rem/2221 =a (field_imm 1 param/2253)
                                      *match*/5936 =a
                                        (field_imm 2 *match*/5929)
                                      *match*/5935 =a
                                        (field_imm 4 *match*/5930)
                                      *match*/5934 =a
                                        (field_imm 3 *match*/5930)
                                      *match*/5933 =a
                                        (field_imm 2 *match*/5930)
                                      *match*/5931 =a
                                        (field_imm 0 *match*/5930)
                                      id/2220 =a (field_imm 0 *match*/5929))
                                     (makeblock 0 id/2220
                                       (apply bound_value_identifiers/2219
                                         rem/2221)))
                                   (exit 10)))
                              case tag 2: (exit 11)
                              case tag 3:
                               (let
                                 (*match*/5940 =a (field_imm 1 *match*/5929))
                                 (if *match*/5940 (exit 10)
                                   (let
                                     (rem/2225 =a (field_imm 1 param/2253)
                                      *match*/5943 =a
                                        (field_imm 4 *match*/5929)
                                      *match*/5942 =a
                                        (field_imm 3 *match*/5929)
                                      *match*/5941 =a
                                        (field_imm 2 *match*/5929)
                                      id/2224 =a (field_imm 0 *match*/5929))
                                     (makeblock 0 id/2224
                                       (apply bound_value_identifiers/2219
                                         rem/2225)))))
                              case tag 5: (exit 11)
                              default: (exit 10))
                            with (11)
                             (let
                               (rem/2223 =a (field_imm 1 param/2253)
                                *match*/5939 =a (field_imm 3 *match*/5929)
                                *match*/5938 =a (field_imm 2 *match*/5929)
                                *match*/5937 =a (field_imm 1 *match*/5929)
                                id/2222 =a (field_imm 0 *match*/5929))
                               (makeblock 0 id/2222
                                 (apply bound_value_identifiers/2219
                                   rem/2223))))
                          with (10)
                           (let (rem/2228 =a (field_imm 1 param/2253))
                             (apply bound_value_identifiers/2219 rem/2228)))))))
                (setfield_ptr(root-init) 6 (global Ocaml_ocaml_types__Types!)
                  bound_value_identifiers/2219))
              (let
                (signature_item_id/2254 =
                   (function param/2263
                     (let (id/2256 =a (field_imm 0 param/2263)) id/2256)))
                (setfield_ptr(root-init) 7 (global Ocaml_ocaml_types__Types!)
                  signature_item_id/2254))
              (let
                (trail/2278 =
                   (apply
                     (field_imm 3 (global Ocaml_ocaml_types__Local_store!))
                     (function prim/5974 stub (makemutable 0 prim/5974)) 0))
                (setfield_ptr(root-init) 8 (global Ocaml_ocaml_types__Types!)
                  trail/2278))
              (let
                (log_change/2290 =
                   (function ch/2292 : int
                     (let (r'/2293 = (makemutable 0 0))
                       (seq
                         (setfield_ptr 0
                           (field_mut 0
                             (field_imm 8 (global Ocaml_ocaml_types__Types!)))
                           (makeblock 0 ch/2292 r'/2293))
                         (setfield_ptr 0
                           (field_imm 8 (global Ocaml_ocaml_types__Types!))
                           r'/2293)))))
                (setfield_ptr(root-init) 9 (global Ocaml_ocaml_types__Types!)
                  log_change/2290))
              (letrec
                (field_kind_internal_repr/2298
                   (function kind/2300
                     (catch
                       (if (isint kind/2300) (exit 13)
                         (let (fk/2299 =o (field_mut 0 kind/2300))
                           (catch
                             (if (isint fk/2299)
                               (if (!= fk/2299 0) (exit 14) (exit 13))
                               (exit 14))
                            with (14)
                             (apply field_kind_internal_repr/2298 fk/2299))))
                      with (13) kind/2300)))
                (setfield_ptr(root-init) 10
                  (global Ocaml_ocaml_types__Types!)
                  field_kind_internal_repr/2298))
              (let
                (field_kind_repr/2302 =
                   (function fk/2304 : int
                     (let
                       (*match*/5975 =
                          (apply
                            (field_imm 10 (global Ocaml_ocaml_types__Types!))
                            fk/2304))
                       (if (isint *match*/5975) (if (>= *match*/5975 2) 2 1)
                         0))))
                (setfield_ptr(root-init) 11
                  (global Ocaml_ocaml_types__Types!) field_kind_repr/2302))
              (let (field_public/2306 = 1)
                (setfield_ptr(root-init) 12
                  (global Ocaml_ocaml_types__Types!) field_public/2306))
              (let (field_absent/2307 = 2)
                (setfield_ptr(root-init) 13
                  (global Ocaml_ocaml_types__Types!) field_absent/2307))
              (let
                (field_private/2308 =
                   (function param/2310[int] (makemutable 0 0)))
                (setfield_ptr(root-init) 14
                  (global Ocaml_ocaml_types__Types!) field_private/2308))
              (letrec
                (is_commu_ok/2311
                   (function param/2319 : int
                     (if (isint param/2319) (if param/2319 0 1)
                       (let (commu/2314 =o (field_mut 0 param/2319))
                         (apply is_commu_ok/2311 commu/2314)))))
                (setfield_ptr(root-init) 15
                  (global Ocaml_ocaml_types__Types!) is_commu_ok/2311))
              (let (commu_ok/2320 = 0)
                (setfield_ptr(root-init) 16
                  (global Ocaml_ocaml_types__Types!) commu_ok/2320))
              (let
                (commu_var/2321 =
                   (function param/2323[int] (makemutable 0 1)))
                (setfield_ptr(root-init) 17
                  (global Ocaml_ocaml_types__Types!) commu_var/2321))
              (letrec
                (repr_link/2324
                   (function t/2325 d/2326 t'/2332
                     (catch
                       (let (d'/2328 =o (field_mut 0 t'/2332))
                         (switch d'/2328
                          case tag 5:
                           (let
                             (t'/2330 =a (field_imm 3 d'/2328)
                              *match*/5982 =a (field_imm 2 d'/2328)
                              k/2329 =a (field_imm 1 d'/2328)
                              *match*/5981 =a (field_imm 0 d'/2328)
                              *match*/5983 =o (field_int 1 t'/2332)
                              *match*/5984 =o (field_int 2 t'/2332)
                              d'/2331 =a d'/2328
                              *match*/5985 =a (field_int 3 t'/2332))
                             (if
                               (==
                                 (apply
                                   (field_imm 10
                                     (global Ocaml_ocaml_types__Types!))
                                   k/2329)
                                 2)
                               (apply repr_link/2324 t/2325 d'/2331 t'/2330)
                               (exit 16)))
                          case tag 6:
                           (let
                             (t'/2327 =a (field_imm 0 d'/2328)
                              *match*/5978 =o (field_int 1 t'/2332)
                              *match*/5979 =o (field_int 2 t'/2332)
                              *match*/5980 =a (field_int 3 t'/2332))
                             (apply repr_link/2324 t/2325 d'/2328 t'/2327))
                          default: (exit 16)))
                      with (16)
                       (seq
                         (apply
                           (field_imm 9 (global Ocaml_ocaml_types__Types!))
                           (makeblock 1 t/2325 (field_mut 0 t/2325) d/2326))
                         (setfield_ptr 0 t/2325 d/2326) t'/2332))))
                (setfield_ptr(root-init) 18
                  (global Ocaml_ocaml_types__Types!) repr_link/2324))
              (let
                (repr_link1/2333 =
                   (function t/2335 t'/2341
                     (catch
                       (let (d'/2337 =o (field_mut 0 t'/2341))
                         (switch d'/2337
                          case tag 5:
                           (let
                             (t'/2339 =a (field_imm 3 d'/2337)
                              *match*/5990 =a (field_imm 2 d'/2337)
                              k/2338 =a (field_imm 1 d'/2337)
                              *match*/5989 =a (field_imm 0 d'/2337)
                              *match*/5991 =o (field_int 1 t'/2341)
                              *match*/5992 =o (field_int 2 t'/2341)
                              d'/2340 =a d'/2337
                              *match*/5993 =a (field_int 3 t'/2341))
                             (if
                               (==
                                 (apply
                                   (field_imm 10
                                     (global Ocaml_ocaml_types__Types!))
                                   k/2338)
                                 2)
                               (apply
                                 (field_imm 18
                                   (global Ocaml_ocaml_types__Types!))
                                 t/2335 d'/2340 t'/2339)
                               (exit 18)))
                          case tag 6:
                           (let
                             (t'/2336 =a (field_imm 0 d'/2337)
                              *match*/5986 =o (field_int 1 t'/2341)
                              *match*/5987 =o (field_int 2 t'/2341)
                              *match*/5988 =a (field_int 3 t'/2341))
                             (apply
                               (field_imm 18
                                 (global Ocaml_ocaml_types__Types!))
                               t/2335 d'/2337 t'/2336))
                          default: (exit 18)))
                      with (18) t'/2341)))
                (setfield_ptr(root-init) 19
                  (global Ocaml_ocaml_types__Types!) repr_link1/2333))
              (let
                (repr/2342 =
                   (function t/2344
                     (let (*match*/5994 = (field_mut 0 t/2344))
                       (catch
                         (switch *match*/5994
                          case tag 5:
                           (let
                             (t'/2347 =a (field_imm 3 *match*/5994)
                              *match*/5996 =a (field_imm 2 *match*/5994)
                              k/2346 =a (field_imm 1 *match*/5994)
                              *match*/5995 =a (field_imm 0 *match*/5994))
                             (if
                               (==
                                 (apply
                                   (field_imm 10
                                     (global Ocaml_ocaml_types__Types!))
                                   k/2346)
                                 2)
                               (apply
                                 (field_imm 19
                                   (global Ocaml_ocaml_types__Types!))
                                 t/2344 t'/2347)
                               (exit 19)))
                          case tag 6:
                           (let (t'/2345 =a (field_imm 0 *match*/5994))
                             (apply
                               (field_imm 19
                                 (global Ocaml_ocaml_types__Types!))
                               t/2344 t'/2345))
                          default: (exit 19))
                        with (19) t/2344))))
                (setfield_ptr(root-init) 20
                  (global Ocaml_ocaml_types__Types!) repr/2342))
              (let
                (get_desc/2348 =
                   (function t/2350
                     (field_mut 0
                       (apply
                         (field_imm 20 (global Ocaml_ocaml_types__Types!))
                         t/2350))))
                (setfield_ptr(root-init) 21
                  (global Ocaml_ocaml_types__Types!) get_desc/2348))
              (let
                (get_level/2351 =
                   (function t/2353 : int
                     (field_int 1
                       (apply
                         (field_imm 20 (global Ocaml_ocaml_types__Types!))
                         t/2353))))
                (setfield_ptr(root-init) 22
                  (global Ocaml_ocaml_types__Types!) get_level/2351))
              (let
                (get_scope/2354 =
                   (function t/2356 : int
                     (field_int 2
                       (apply
                         (field_imm 20 (global Ocaml_ocaml_types__Types!))
                         t/2356))))
                (setfield_ptr(root-init) 23
                  (global Ocaml_ocaml_types__Types!) get_scope/2354))
              (let
                (get_id/2357 =
                   (function t/2359 : int
                     (field_int 3
                       (apply
                         (field_imm 20 (global Ocaml_ocaml_types__Types!))
                         t/2359))))
                (setfield_ptr(root-init) 24
                  (global Ocaml_ocaml_types__Types!) get_id/2357))
              (let
                (create/2360 =
                   (function desc/2362 level/2363[int] scope/2364[int]
                     id/2365[int]
                     (makemutable 0 (*,int,int,int) desc/2362 level/2363
                       scope/2364 id/2365)))
                (setfield_ptr(root-init) 101
                  (global Ocaml_ocaml_types__Types!) create/2360))
              (let
                (set_desc/2366 =
                   (function ty/2368 d/2369 : int
                     (setfield_ptr 0 ty/2368 d/2369)))
                (setfield_ptr(root-init) 102
                  (global Ocaml_ocaml_types__Types!) set_desc/2366))
              (let
                (set_stub_desc/2370 =
                   (function ty/2372 d/2373 : int
                     (seq
                       (if (caml_equal (field_mut 0 ty/2372) [0: 0]) 0
                         (raise
                           (makeblock 0 (global Assert_failure/28!)
                             [0: "lib/types.ml" 590 27])))
                       (setfield_ptr 0 ty/2372 d/2373))))
                (setfield_ptr(root-init) 103
                  (global Ocaml_ocaml_types__Types!) set_stub_desc/2370))
              (let
                (set_level/2374 =
                   (function ty/2376 lv/2377[int] : int
                     (setfield_imm 1 ty/2376 lv/2377)))
                (setfield_ptr(root-init) 104
                  (global Ocaml_ocaml_types__Types!) set_level/2374))
              (let
                (set_scope/2378 =
                   (function ty/2380 sc/2381[int] : int
                     (setfield_imm 2 ty/2380 sc/2381)))
                (setfield_ptr(root-init) 105
                  (global Ocaml_ocaml_types__Types!) set_scope/2378))
              (let (coerce/2382 = (function ty/2384 ty/2384))
                (setfield_ptr(root-init) 106
                  (global Ocaml_ocaml_types__Types!) coerce/2382))
              (let
                (repr/2385 =
                   (field_imm 20 (global Ocaml_ocaml_types__Types!)))
                (setfield_ptr(root-init) 107
                  (global Ocaml_ocaml_types__Types!) repr/2385))
              (let (type_expr/2386 = (function ty/2388 ty/2388))
                (setfield_ptr(root-init) 108
                  (global Ocaml_ocaml_types__Types!) type_expr/2386))
              0
              (let
                (Transient_expr/2389 =
                   (makeblock 0
                     (field_imm 101 (global Ocaml_ocaml_types__Types!))
                     (field_imm 102 (global Ocaml_ocaml_types__Types!))
                     (field_imm 103 (global Ocaml_ocaml_types__Types!))
                     (field_imm 104 (global Ocaml_ocaml_types__Types!))
                     (field_imm 105 (global Ocaml_ocaml_types__Types!))
                     (field_imm 106 (global Ocaml_ocaml_types__Types!))
                     (field_imm 107 (global Ocaml_ocaml_types__Types!))
                     (field_imm 108 (global Ocaml_ocaml_types__Types!))))
                (seq
                  (setfield_ptr(root-init) 25
                    (global Ocaml_ocaml_types__Types!) Transient_expr/2389)
                  (let
                    (eq_type/2390 =
                       (function t1/2392 t2/2393 : int
                         (|| (== t1/2392 t2/2393)
                           (==
                             (apply
                               (field_imm 20
                                 (global Ocaml_ocaml_types__Types!))
                               t1/2392)
                             (apply
                               (field_imm 20
                                 (global Ocaml_ocaml_types__Types!))
                               t2/2393)))))
                    (setfield_ptr(root-init) 26
                      (global Ocaml_ocaml_types__Types!) eq_type/2390))
                  (let
                    (compare_type/2394 =
                       (function t1/2396 t2/2397 : int
                         (compare_ints
                           (apply
                             (field_imm 24
                               (global Ocaml_ocaml_types__Types!))
                             t1/2396)
                           (apply
                             (field_imm 24
                               (global Ocaml_ocaml_types__Types!))
                             t2/2397))))
                    (setfield_ptr(root-init) 27
                      (global Ocaml_ocaml_types__Types!) compare_type/2394))
                  (let
                    (create_row/2398 =
                       (function fields/2400 more/2401 closed/2402[int]
                         fixed/2403 name/2404
                         (makeblock 0 (*,*,int,*,*) fields/2400 more/2401
                           closed/2402 fixed/2403 name/2404)))
                    (setfield_ptr(root-init) 28
                      (global Ocaml_ocaml_types__Types!) create_row/2398))
                  (letrec
                    (row_fields/2405
                       (function row/2406
                         (let
                           (*match*/5999 =
                              (apply
                                (field_imm 21
                                  (global Ocaml_ocaml_types__Types!))
                                (field_imm 1 row/2406)))
                           (catch
                             (switch *match*/5999
                              case tag 8:
                               (let (row'/2407 =a (field_imm 0 *match*/5999))
                                 (apply (field_imm 36 (global Stdlib!))
                                   (field_imm 0 row/2406)
                                   (apply row_fields/2405 row'/2407)))
                              default: (exit 20))
                            with (20) (field_imm 0 row/2406)))))
                    (setfield_ptr(root-init) 29
                      (global Ocaml_ocaml_types__Types!) row_fields/2405))
                  (letrec
                    (row_repr_no_fields/2408
                       (function row/2409
                         (let
                           (*match*/6000 =
                              (apply
                                (field_imm 21
                                  (global Ocaml_ocaml_types__Types!))
                                (field_imm 1 row/2409)))
                           (catch
                             (switch *match*/6000
                              case tag 8:
                               (let (row'/2410 =a (field_imm 0 *match*/6000))
                                 (apply row_repr_no_fields/2408 row'/2410))
                              default: (exit 21))
                            with (21) row/2409))))
                    (setfield_ptr(root-init) 30
                      (global Ocaml_ocaml_types__Types!)
                      row_repr_no_fields/2408))
                  (let
                    (row_more/2411 =
                       (function row/2413
                         (field_imm 1
                           (apply
                             (field_imm 30
                               (global Ocaml_ocaml_types__Types!))
                             row/2413))))
                    (setfield_ptr(root-init) 31
                      (global Ocaml_ocaml_types__Types!) row_more/2411))
                  (let
                    (row_closed/2414 =
                       (function row/2416 : int
                         (field_int 2
                           (apply
                             (field_imm 30
                               (global Ocaml_ocaml_types__Types!))
                             row/2416))))
                    (setfield_ptr(root-init) 32
                      (global Ocaml_ocaml_types__Types!) row_closed/2414))
                  (let
                    (row_fixed/2417 =
                       (function row/2419
                         (field_imm 3
                           (apply
                             (field_imm 30
                               (global Ocaml_ocaml_types__Types!))
                             row/2419))))
                    (setfield_ptr(root-init) 33
                      (global Ocaml_ocaml_types__Types!) row_fixed/2417))
                  (let
                    (row_name/2420 =
                       (function row/2422
                         (field_imm 4
                           (apply
                             (field_imm 30
                               (global Ocaml_ocaml_types__Types!))
                             row/2422))))
                    (setfield_ptr(root-init) 34
                      (global Ocaml_ocaml_types__Types!) row_name/2420))
                  (letrec
                    (get_row_field/2423
                       (function tag/2424 row/2425
                         (letrec
                           (find/2426
                              (function param/2431
                                (if (isint param/2431)
                                  (let
                                    (*match*/6001 =
                                       (apply
                                         (field_imm 21
                                           (global Ocaml_ocaml_types__Types!))
                                         (field_imm 1 row/2425)))
                                    (catch
                                      (switch *match*/6001
                                       case tag 8:
                                        (let
                                          (row'/2430 =a
                                             (field_imm 0 *match*/6001))
                                          (apply get_row_field/2423 tag/2424
                                            row'/2430))
                                       default: (exit 22))
                                     with (22) 0))
                                  (let
                                    (*match*/6002 =a (field_imm 0 param/2431)
                                     f/2428 =a (field_imm 1 *match*/6002)
                                     tag'/2427 =a (field_imm 0 *match*/6002))
                                    (if
                                      (caml_string_equal tag/2424 tag'/2427)
                                      f/2428
                                      (let
                                        (fields/2429 =a
                                           (field_imm 1 param/2431))
                                        (apply find/2426 fields/2429)))))))
                           (apply find/2426 (field_imm 0 row/2425)))))
                    (setfield_ptr(root-init) 35
                      (global Ocaml_ocaml_types__Types!) get_row_field/2423))
                  (let
                    (set_row_name/2432 =
                       (function row/2434 row_name/2435
                         (let
                           (row_fields/2436 =
                              (apply
                                (field_imm 29
                                  (global Ocaml_ocaml_types__Types!))
                                row/2434)
                            row/2437 =
                              (apply
                                (field_imm 30
                                  (global Ocaml_ocaml_types__Types!))
                                row/2434)
                            init/6003 = row/2437)
                           (makeblock 0 (*,*,int,*,*) row_fields/2436
                             (field_imm 1 init/6003) (field_int 2 init/6003)
                             (field_imm 3 init/6003) row_name/2435))))
                    (setfield_ptr(root-init) 36
                      (global Ocaml_ocaml_types__Types!) set_row_name/2432))
                  (let
                    (row_repr/2445 =
                       (function row/2447
                         (let
                           (fields/2448 =
                              (apply
                                (field_imm 29
                                  (global Ocaml_ocaml_types__Types!))
                                row/2447)
                            row/2449 =
                              (apply
                                (field_imm 30
                                  (global Ocaml_ocaml_types__Types!))
                                row/2447))
                           (makeblock 0 (*,*,int,*,*) fields/2448
                             (field_imm 1 row/2449) (field_int 2 row/2449)
                             (field_imm 3 row/2449) (field_imm 4 row/2449)))))
                    (setfield_ptr(root-init) 37
                      (global Ocaml_ocaml_types__Types!) row_repr/2445))
                  (letrec
                    (row_field_repr_aux/2454
                       (function tl/2455 rf/2459
                         (switch* rf/2459
                          case int 0: 0
                          case tag 0:
                           (let (*match*/6010 =a (field_imm 0 rf/2459))
                             (catch
                               (if (isint *match*/6010) (exit 24)
                                 (if (!= tl/2455 0)
                                   (let
                                     (*match*/6011 =a
                                        (field_imm 0 *match*/6010))
                                     (makeblock 0
                                       (makeblock 0
                                         (apply
                                           (field_imm 5
                                             (global Stdlib__List!))
                                           tl/2455))))
                                   (exit 24)))
                              with (24) rf/2459))
                          case tag 1:
                           (let
                             (*match*/6008 =a (field_imm 3 rf/2459)
                              *match*/6007 =a (field_int 2 rf/2459)
                              arg_type/2457 =a (field_imm 1 rf/2459)
                              *match*/6006 =a (field_int 0 rf/2459)
                              rf/2458 =o (field_mut 0 *match*/6008))
                             (catch
                               (if (isint rf/2458)
                                 (if rf/2458
                                   (let
                                     (r/2456 =a rf/2459 init/6005 = r/2456)
                                     (makeblock 1 (int,*,int,*)
                                       (field_int 0 init/6005)
                                       (apply (field_imm 36 (global Stdlib!))
                                         tl/2455 (field_imm 1 r/2456))
                                       (field_int 2 init/6005)
                                       (field_imm 3 init/6005)))
                                   (exit 23))
                                 (let (*match*/6009 =a (field_imm 0 rf/2458))
                                   (exit 23)))
                              with (23)
                               (apply row_field_repr_aux/2454
                                 (apply (field_imm 36 (global Stdlib!))
                                   tl/2455 arg_type/2457)
                                 rf/2458))))))
                    (setfield_ptr(root-init) 38
                      (global Ocaml_ocaml_types__Types!)
                      row_field_repr_aux/2454))
                  (let
                    (row_field_repr/2461 =
                       (function fi/2463
                         (let
                           (*match*/6012 =
                              (apply
                                (field_imm 38
                                  (global Ocaml_ocaml_types__Types!))
                                0 fi/2463))
                           (switch* *match*/6012
                            case int 0: 0
                            case tag 0:
                             (let (t/2467 =a (field_imm 0 *match*/6012))
                               (makeblock 0 t/2467))
                            case tag 1:
                             (let
                               (*match*/6013 =a (field_imm 3 *match*/6012)
                                matched/2466 =a (field_int 2 *match*/6012)
                                arg_type/2465 =a (field_imm 1 *match*/6012)
                                no_arg/2464 =a (field_int 0 *match*/6012))
                               (makeblock 1 (int,*,int) no_arg/2464
                                 arg_type/2465 matched/2466))))))
                    (setfield_ptr(root-init) 39
                      (global Ocaml_ocaml_types__Types!) row_field_repr/2461))
                  (letrec
                    (row_field_ext/2469
                       (function fi/2470
                         (catch
                           (switch fi/2470
                            case tag 1:
                             (let
                               (ext/2471 =a (field_imm 3 fi/2470)
                                *match*/6016 =a (field_int 2 fi/2470)
                                *match*/6015 =a (field_imm 1 fi/2470)
                                *match*/6014 =a (field_int 0 fi/2470)
                                rf/2472 =o (field_mut 0 ext/2471))
                               (catch
                                 (if (isint rf/2472)
                                   (if rf/2472 ext/2471 (exit 26))
                                   (let
                                     (*match*/6017 =a (field_imm 0 rf/2472))
                                     (exit 26)))
                                with (26) (apply row_field_ext/2469 rf/2472)))
                            default: (exit 25))
                          with (25)
                           (apply
                             (field_imm 2 (global Ocaml_ocaml_types__Misc!))
                             "Types.row_field_ext "))))
                    (setfield_ptr(root-init) 40
                      (global Ocaml_ocaml_types__Types!) row_field_ext/2469))
                  (let
                    (rf_present/2473 =
                       (function oty/2475 (makeblock 0 oty/2475)))
                    (setfield_ptr(root-init) 41
                      (global Ocaml_ocaml_types__Types!) rf_present/2473))
                  (let (rf_absent/2476 = 0)
                    (setfield_ptr(root-init) 42
                      (global Ocaml_ocaml_types__Types!) rf_absent/2476))
                  (let
                    (rf_either/2477 =
                       (function use_ext_of/2479 no_arg/2480[int]
                         arg_type/2481 matched/2482[int]
                         (let
                           (ext/2483 =
                              (if (isint use_ext_of/2479) (makemutable 0 1)
                                (let
                                  (rf/2484 =a (field_imm 0 use_ext_of/2479))
                                  (apply
                                    (field_imm 40
                                      (global Ocaml_ocaml_types__Types!))
                                    rf/2484))))
                           (makeblock 1 (int,*,int,*) no_arg/2480
                             arg_type/2481 matched/2482 ext/2483))))
                    (setfield_ptr(root-init) 43
                      (global Ocaml_ocaml_types__Types!) rf_either/2477))
                  (let
                    (rf_either_of/2485 =
                       (function param/2488
                         (if (isint param/2488)
                           (makeblock 1 (int,*,int,*) 1 0 0
                             (makemutable 0 1))
                           (let (ty/2487 =a (field_imm 0 param/2488))
                             (makeblock 1 (int,*,int,*) 0
                               (makeblock 0 ty/2487 0) 0 (makemutable 0 1))))))
                    (setfield_ptr(root-init) 44
                      (global Ocaml_ocaml_types__Types!) rf_either_of/2485))
                  (let
                    (eq_row_field_ext/2489 =
                       (function rf1/2491 rf2/2492 : int
                         (==
                           (apply
                             (field_imm 40
                               (global Ocaml_ocaml_types__Types!))
                             rf1/2491)
                           (apply
                             (field_imm 40
                               (global Ocaml_ocaml_types__Types!))
                             rf2/2492))))
                    (setfield_ptr(root-init) 45
                      (global Ocaml_ocaml_types__Types!)
                      eq_row_field_ext/2489))
                  (let
                    (changed_row_field_exts/2493 =
                       (function l/2495 f/2496 : int
                         (let
                           (exts/2497 =
                              (apply (field_imm 19 (global Stdlib__List!))
                                (field_imm 40
                                  (global Ocaml_ocaml_types__Types!))
                                l/2495))
                           (seq (apply f/2496 0)
                             (apply (field_imm 33 (global Stdlib__List!))
                               (function r/2498 : int
                                 (!= (field_mut 0 r/2498) 1))
                               exts/2497)))))
                    (setfield_ptr(root-init) 46
                      (global Ocaml_ocaml_types__Types!)
                      changed_row_field_exts/2493))
                  (let
                    (match_row_field/2499 =
                       (function present/2501 absent/2502 either/2503 f/2504
                         (switch* f/2504
                          case int 0: (apply absent/2502 0)
                          case tag 0:
                           (let (t/2505 =a (field_imm 0 f/2504))
                             (apply present/2501 t/2505))
                          case tag 1:
                           (let
                             (ext/2509 =a (field_imm 3 f/2504)
                              matched/2508 =a (field_int 2 f/2504)
                              arg_type/2507 =a (field_imm 1 f/2504)
                              no_arg/2506 =a (field_int 0 f/2504)
                              e/2510 =
                                (let (e/2511 = (field_mut 0 ext/2509))
                                  (catch
                                    (if (isint e/2511)
                                      (if e/2511 0 (exit 27))
                                      (let
                                        (*match*/6021 =a (field_imm 0 e/2511))
                                        (exit 27)))
                                   with (27) (makeblock 0 e/2511))))
                             (apply either/2503 no_arg/2506 arg_type/2507
                               matched/2508 e/2510)))))
                    (setfield_ptr(root-init) 47
                      (global Ocaml_ocaml_types__Types!)
                      match_row_field/2499))
                  (let
                    (new_id/2513 =
                       (apply
                         (field_imm 4
                           (global Ocaml_ocaml_types__Local_store!))
                         -1))
                    (setfield_ptr(root-init) 48
                      (global Ocaml_ocaml_types__Types!) new_id/2513))
                  (let
                    (create_expr/2514 =
                       (field_imm 0
                         (field_imm 25 (global Ocaml_ocaml_types__Types!))))
                    (setfield_ptr(root-init) 49
                      (global Ocaml_ocaml_types__Types!) create_expr/2514))
                  (let
                    (newty3/2515 =
                       (function level/2517[int] scope/2518[int] desc/2519
                         (seq
                           (+:=1
                             (field_imm 48
                               (global Ocaml_ocaml_types__Types!)))
                           (apply
                             (field_imm 49
                               (global Ocaml_ocaml_types__Types!))
                             desc/2519 level/2517 scope/2518
                             (field_int 0
                               (field_imm 48
                                 (global Ocaml_ocaml_types__Types!)))))))
                    (setfield_ptr(root-init) 50
                      (global Ocaml_ocaml_types__Types!) newty3/2515))
                  (let
                    (newty2/2520 =
                       (function level/2522[int] desc/2523
                         (apply
                           (field_imm 50 (global Ocaml_ocaml_types__Types!))
                           level/2522
                           (field_imm 0 (global Ocaml_ocaml_types__Ident!))
                           desc/2523)))
                    (setfield_ptr(root-init) 51
                      (global Ocaml_ocaml_types__Types!) newty2/2520))
                  (let
                    (undo_change/2524 =
                       (function param/2546 : int
                         (catch
                           (catch
                             (catch
                               (switch* param/2546
                                case tag 0: (exit 28)
                                case tag 1: (exit 28)
                                case tag 2:
                                 (let
                                   (level/2531 =a (field_imm 1 param/2546)
                                    ty/2530 =a (field_imm 0 param/2546))
                                   (apply
                                     (field_imm 3
                                       (field_imm 25
                                         (global Ocaml_ocaml_types__Types!)))
                                     ty/2530 level/2531))
                                case tag 3:
                                 (let
                                   (scope/2533 =a (field_imm 1 param/2546)
                                    ty/2532 =a (field_imm 0 param/2546))
                                   (apply
                                     (field_imm 4
                                       (field_imm 25
                                         (global Ocaml_ocaml_types__Types!)))
                                     ty/2532 scope/2533))
                                case tag 4: (exit 29)
                                case tag 5: (exit 30)
                                case tag 6:
                                 (let
                                   (*match*/6023 =a (field_imm 0 param/2546)
                                    r/2537 =a *match*/6023)
                                   (setfield_ptr 0 r/2537 0))
                                case tag 7: (exit 30)
                                case tag 8: (exit 29))
                              with (28)
                               (let
                                 (desc/2527 =a (field_imm 1 param/2546)
                                  ty/2526 =a (field_imm 0 param/2546))
                                 (apply
                                   (field_imm 1
                                     (field_imm 25
                                       (global Ocaml_ocaml_types__Types!)))
                                   ty/2526 desc/2527)))
                            with (29)
                             (let
                               (v/2535 =a (field_imm 1 param/2546)
                                r/2534 =a (field_imm 0 param/2546))
                               (setfield_ptr 0 r/2534 v/2535)))
                          with (30)
                           (let (r/2536 =a (field_imm 0 param/2546))
                             (setfield_ptr 0 r/2536 1)))))
                    (setfield_ptr(root-init) 52
                      (global Ocaml_ocaml_types__Types!) undo_change/2524))
                  (let
                    (last_snapshot/2548 =
                       (apply
                         (field_imm 4
                           (global Ocaml_ocaml_types__Local_store!))
                         0))
                    (setfield_ptr(root-init) 53
                      (global Ocaml_ocaml_types__Types!) last_snapshot/2548))
                  (let
                    (log_type/2549 =
                       (function ty/2551 : int
                         (if
                           (<= (field_int 3 ty/2551)
                             (field_int 0
                               (field_imm 53
                                 (global Ocaml_ocaml_types__Types!))))
                           (apply
                             (field_imm 9 (global Ocaml_ocaml_types__Types!))
                             (makeblock 0 ty/2551 (field_mut 0 ty/2551)))
                           0)))
                    (setfield_ptr(root-init) 54
                      (global Ocaml_ocaml_types__Types!) log_type/2549))
                  (let
                    (link_type/2552 =
                       (function ty/2554 ty'/2555 : int
                         (let
                           (ty/2556 =
                              (apply
                                (field_imm 20
                                  (global Ocaml_ocaml_types__Types!))
                                ty/2554)
                            ty'/2557 =
                              (apply
                                (field_imm 20
                                  (global Ocaml_ocaml_types__Types!))
                                ty'/2555))
                           (if (== ty/2556 ty'/2557) 0
                             (seq
                               (apply
                                 (field_imm 54
                                   (global Ocaml_ocaml_types__Types!))
                                 ty/2556)
                               (let (desc/2558 = (field_mut 0 ty/2556))
                                 (seq
                                   (apply
                                     (field_imm 1
                                       (field_imm 25
                                         (global Ocaml_ocaml_types__Types!)))
                                     ty/2556 (makeblock 6 ty'/2557))
                                   (let
                                     (*match*/6028 = (field_mut 0 ty'/2557))
                                     (catch
                                       (switch desc/2558
                                        case tag 0:
                                         (switch *match*/6028
                                          case tag 0:
                                           (let
                                             (name'/2560 =a
                                                (field_imm 0 *match*/6028)
                                              name/2559 =a
                                                (field_imm 0 desc/2558))
                                             (if (isint name/2559)
                                               (let
                                                 (*match*/6027 =a
                                                    (field_imm 0 name'/2560))
                                                 0)
                                               (let
                                                 (*match*/6025 =a
                                                    (field_imm 0 name/2559))
                                                 (if (isint name'/2560)
                                                   (seq
                                                     (apply
                                                       (field_imm 54
                                                         (global Ocaml_ocaml_types__Types!))
                                                       ty'/2557)
                                                     (apply
                                                       (field_imm 1
                                                         (field_imm 25
                                                           (global Ocaml_ocaml_types__Types!)))
                                                       ty'/2557
                                                       (makeblock 0
                                                         name/2559)))
                                                   (if
                                                     (< (field_int 1 ty/2556)
                                                       (field_int 1 ty'/2557))
                                                     (let
                                                       (*match*/6026 =a
                                                          (field_imm 0
                                                            name'/2560))
                                                       (seq
                                                         (apply
                                                           (field_imm 54
                                                             (global Ocaml_ocaml_types__Types!))
                                                           ty'/2557)
                                                         (apply
                                                           (field_imm 1
                                                             (field_imm 25
                                                               (global Ocaml_ocaml_types__Types!)))
                                                           ty'/2557
                                                           (makeblock 0
                                                             name/2559))))
                                                     0)))))
                                          default: (exit 31))
                                        default: (exit 31))
                                      with (31) 0)))))))))
                    (setfield_ptr(root-init) 55
                      (global Ocaml_ocaml_types__Types!) link_type/2552))
                  (let
                    (set_type_desc/2561 =
                       (function ty/2563 td/2564 : int
                         (let
                           (ty/2565 =
                              (apply
                                (field_imm 20
                                  (global Ocaml_ocaml_types__Types!))
                                ty/2563))
                           (if (!= td/2564 (field_mut 0 ty/2565))
                             (seq
                               (apply
                                 (field_imm 54
                                   (global Ocaml_ocaml_types__Types!))
                                 ty/2565)
                               (apply
                                 (field_imm 1
                                   (field_imm 25
                                     (global Ocaml_ocaml_types__Types!)))
                                 ty/2565 td/2564))
                             0))))
                    (setfield_ptr(root-init) 56
                      (global Ocaml_ocaml_types__Types!) set_type_desc/2561))
                  (let
                    (set_level/2566 =
                       (function ty/2568 level/2569[int] : int
                         (let
                           (ty/2570 =
                              (apply
                                (field_imm 20
                                  (global Ocaml_ocaml_types__Types!))
                                ty/2568))
                           (if (!= level/2569 (field_int 1 ty/2570))
                             (seq
                               (if
                                 (<= (field_int 3 ty/2570)
                                   (field_int 0
                                     (field_imm 53
                                       (global Ocaml_ocaml_types__Types!))))
                                 (apply
                                   (field_imm 9
                                     (global Ocaml_ocaml_types__Types!))
                                   (makeblock 2 (*,int) ty/2570
                                     (field_int 1 ty/2570)))
                                 0)
                               (apply
                                 (field_imm 3
                                   (field_imm 25
                                     (global Ocaml_ocaml_types__Types!)))
                                 ty/2570 level/2569))
                             0))))
                    (setfield_ptr(root-init) 57
                      (global Ocaml_ocaml_types__Types!) set_level/2566))
                  (let
                    (set_scope/2571 =
                       (function ty/2573 scope/2574[int] : int
                         (let
                           (ty/2575 =
                              (apply
                                (field_imm 20
                                  (global Ocaml_ocaml_types__Types!))
                                ty/2573))
                           (if (!= scope/2574 (field_int 2 ty/2575))
                             (seq
                               (if
                                 (<= (field_int 3 ty/2575)
                                   (field_int 0
                                     (field_imm 53
                                       (global Ocaml_ocaml_types__Types!))))
                                 (apply
                                   (field_imm 9
                                     (global Ocaml_ocaml_types__Types!))
                                   (makeblock 3 (*,int) ty/2575
                                     (field_int 2 ty/2575)))
                                 0)
                               (apply
                                 (field_imm 4
                                   (field_imm 25
                                     (global Ocaml_ocaml_types__Types!)))
                                 ty/2575 scope/2574))
                             0))))
                    (setfield_ptr(root-init) 58
                      (global Ocaml_ocaml_types__Types!) set_scope/2571))
                  (let
                    (set_univar/2576 =
                       (function rty/2578 ty/2579 : int
                         (seq
                           (apply
                             (field_imm 9 (global Ocaml_ocaml_types__Types!))
                             (makeblock 8 rty/2578 (field_mut 0 rty/2578)))
                           (setfield_ptr 0 rty/2578 (makeblock 0 ty/2579)))))
                    (setfield_ptr(root-init) 59
                      (global Ocaml_ocaml_types__Types!) set_univar/2576))
                  (let
                    (set_name/2580 =
                       (function nm/2582 v/2583 : int
                         (seq
                           (apply
                             (field_imm 9 (global Ocaml_ocaml_types__Types!))
                             (makeblock 4 nm/2582 (field_mut 0 nm/2582)))
                           (setfield_ptr 0 nm/2582 v/2583))))
                    (setfield_ptr(root-init) 60
                      (global Ocaml_ocaml_types__Types!) set_name/2580))
                  (letrec
                    (link_row_field_ext/2584
                       (function inside/2585 v/2586 : int
                         (catch
                           (switch inside/2585
                            case tag 1:
                             (let
                               (e/2587 =a (field_imm 3 inside/2585)
                                *match*/6032 =a (field_int 2 inside/2585)
                                *match*/6031 =a (field_imm 1 inside/2585)
                                *match*/6030 =a (field_int 0 inside/2585)
                                rf/2588 =o (field_mut 0 e/2587))
                               (catch
                                 (if (isint rf/2588)
                                   (if rf/2588
                                     (let (v/2589 =a v/2586)
                                       (seq
                                         (apply
                                           (field_imm 9
                                             (global Ocaml_ocaml_types__Types!))
                                           (makeblock 5 e/2587))
                                         (setfield_ptr 0 e/2587 v/2589)))
                                     (exit 34))
                                   (let
                                     (*match*/6033 =a (field_imm 0 rf/2588))
                                     (exit 34)))
                                with (34)
                                 (apply link_row_field_ext/2584 rf/2588
                                   v/2586)))
                            default: (exit 33))
                          with (33)
                           (apply (field_imm 0 (global Stdlib!))
                             "Types.link_row_field_ext"))))
                    (setfield_ptr(root-init) 61
                      (global Ocaml_ocaml_types__Types!)
                      link_row_field_ext/2584))
                  (letrec
                    (link_kind/2591
                       (function inside/2592 k/2593 : int
                         (catch
                           (if (isint inside/2592) (exit 36)
                             (let (inside/2596 =o (field_mut 0 inside/2592))
                               (catch
                                 (if (isint inside/2596)
                                   (if (!= inside/2596 0) (exit 37)
                                     (let
                                       (rk/2594 =a inside/2592
                                        inside/2595 =a inside/2592
                                        k/2597 =
                                          (apply
                                            (field_imm 10
                                              (global Ocaml_ocaml_types__Types!))
                                            k/2593))
                                       (if (!= k/2597 inside/2595)
                                         (seq
                                           (apply
                                             (field_imm 9
                                               (global Ocaml_ocaml_types__Types!))
                                             (makeblock 6 inside/2595))
                                           (setfield_ptr 0 rk/2594 k/2597))
                                         0)))
                                   (exit 37))
                                with (37)
                                 (apply link_kind/2591 inside/2596 k/2593))))
                          with (36)
                           (apply (field_imm 0 (global Stdlib!))
                             "Types.link_kind"))))
                    (setfield_ptr(root-init) 62
                      (global Ocaml_ocaml_types__Types!) link_kind/2591))
                  (letrec
                    (commu_repr/2600
                       (function c/2602
                         (catch
                           (if (isint c/2602) (exit 38)
                             (let (commu/2601 =o (field_mut 0 c/2602))
                               (catch
                                 (if (isint commu/2601)
                                   (if commu/2601 (exit 38) (exit 39))
                                   (exit 39))
                                with (39) (apply commu_repr/2600 commu/2601))))
                          with (38) c/2602)))
                    (setfield_ptr(root-init) 63
                      (global Ocaml_ocaml_types__Types!) commu_repr/2600))
                  (letrec
                    (link_commu/2603
                       (function inside/2604 c/2605 : int
                         (catch
                           (if (isint inside/2604) (exit 41)
                             (let (inside/2608 =o (field_mut 0 inside/2604))
                               (catch
                                 (if (isint inside/2608)
                                   (if inside/2608
                                     (let
                                       (rc/2606 =a inside/2604
                                        inside/2607 =a inside/2604
                                        c/2609 =
                                          (apply
                                            (field_imm 63
                                              (global Ocaml_ocaml_types__Types!))
                                            c/2605))
                                       (if (!= c/2609 inside/2607)
                                         (seq
                                           (apply
                                             (field_imm 9
                                               (global Ocaml_ocaml_types__Types!))
                                             (makeblock 7 inside/2607))
                                           (setfield_ptr 0 rc/2606 c/2609))
                                         0))
                                     (exit 42))
                                   (exit 42))
                                with (42)
                                 (apply link_commu/2603 inside/2608 c/2605))))
                          with (41)
                           (apply (field_imm 0 (global Stdlib!))
                             "Types.link_commu"))))
                    (setfield_ptr(root-init) 64
                      (global Ocaml_ocaml_types__Types!) link_commu/2603))
                  (let
                    (set_commu_ok/2611 =
                       (function c/2613 : int
                         (apply
                           (field_imm 64 (global Ocaml_ocaml_types__Types!))
                           c/2613 0)))
                    (setfield_ptr(root-init) 65
                      (global Ocaml_ocaml_types__Types!) set_commu_ok/2611))
                  (let
                    (snapshot/2614 =
                       (function param/2617[int]
                         (let
                           (old/2616 =[int]
                              (field_int 0
                                (field_imm 53
                                  (global Ocaml_ocaml_types__Types!))))
                           (seq
                             (setfield_imm 0
                               (field_imm 53
                                 (global Ocaml_ocaml_types__Types!))
                               (field_int 0
                                 (field_imm 48
                                   (global Ocaml_ocaml_types__Types!))))
                             (makeblock 0 (*,int)
                               (field_mut 0
                                 (field_imm 8
                                   (global Ocaml_ocaml_types__Types!)))
                               old/2616)))))
                    (setfield_ptr(root-init) 66
                      (global Ocaml_ocaml_types__Types!) snapshot/2614))
                  (letrec
                    (rev_log/2618
                       (function accu/2619 param/2623
                         (if (isint param/2623)
                           (if param/2623
                             (raise
                               (makeblock 0 (global Assert_failure/28!)
                                 [0: "lib/types.ml" 858 15]))
                             accu/2619)
                           (let
                             (next/2621 =a (field_imm 1 param/2623)
                              ch/2620 =a (field_imm 0 param/2623)
                              d/2622 = (field_mut 0 next/2621))
                             (seq (setfield_ptr 0 next/2621 1)
                               (apply rev_log/2618
                                 (makeblock 0 ch/2620 accu/2619) d/2622))))))
                    (setfield_ptr(root-init) 67
                      (global Ocaml_ocaml_types__Types!) rev_log/2618))
                  (let
                    (backtrack/2624 =
                       (function cleanup_abbrev/2626 param/2631 : int
                         (let
                           (old/2628 =a (field_imm 1 param/2631)
                            changes/2627 =a (field_imm 0 param/2631)
                            change/2629 = (field_mut 0 changes/2627))
                           (if (isint change/2629)
                             (if change/2629
                               (apply (field_imm 1 (global Stdlib!))
                                 "Types.backtrack")
                               (setfield_imm 0
                                 (field_imm 53
                                   (global Ocaml_ocaml_types__Types!))
                                 old/2628))
                             (let
                               (*match*/6035 =a (field_imm 1 change/2629)
                                *match*/6034 =a (field_imm 0 change/2629))
                               (seq (apply cleanup_abbrev/2626 0)
                                 (let
                                   (backlog/2630 =
                                      (apply
                                        (field_imm 67
                                          (global Ocaml_ocaml_types__Types!))
                                        0 change/2629))
                                   (seq
                                     (apply
                                       (field_imm 17 (global Stdlib__List!))
                                       (field_imm 52
                                         (global Ocaml_ocaml_types__Types!))
                                       backlog/2630)
                                     (setfield_ptr 0 changes/2627 0)
                                     (setfield_imm 0
                                       (field_imm 53
                                         (global Ocaml_ocaml_types__Types!))
                                       old/2628)
                                     (setfield_ptr 0
                                       (field_imm 8
                                         (global Ocaml_ocaml_types__Types!))
                                       changes/2627)))))))))
                    (setfield_ptr(root-init) 68
                      (global Ocaml_ocaml_types__Types!) backtrack/2624))
                  (let
                    (undo_first_change_after/2632 =
                       (function (param/6036, param/6037) : int
                         (let
                           (changes/2634 =a param/6036
                            *match*/6038 = (field_mut 0 changes/2634))
                           (catch
                             (if (isint *match*/6038) (exit 43)
                               (let
                                 (*match*/6039 =a (field_imm 1 *match*/6038)
                                  ch/2635 =a (field_imm 0 *match*/6038))
                                 (apply
                                   (field_imm 52
                                     (global Ocaml_ocaml_types__Types!))
                                   ch/2635)))
                            with (43) 0))))
                    (setfield_ptr(root-init) 69
                      (global Ocaml_ocaml_types__Types!)
                      undo_first_change_after/2632))
                  (letrec
                    (rev_compress_log/2637
                       (function log/2638 r/2639
                         (let (*match*/6040 = (field_mut 0 r/2639))
                           (catch
                             (if (isint *match*/6040) (exit 44)
                               (let
                                 (*match*/6041 =a (field_imm 0 *match*/6040))
                                 (catch
                                   (switch *match*/6041
                                    case tag 1:
                                     (let
                                       (next/2640 =a
                                          (field_imm 1 *match*/6040)
                                        *match*/6044 =a
                                          (field_imm 2 *match*/6041)
                                        *match*/6043 =a
                                          (field_imm 1 *match*/6041)
                                        *match*/6042 =a
                                          (field_imm 0 *match*/6041))
                                       (apply rev_compress_log/2637
                                         (makeblock 0 r/2639 log/2638)
                                         next/2640))
                                    default: (exit 45))
                                  with (45)
                                   (let
                                     (next/2641 =a (field_imm 1 *match*/6040))
                                     (apply rev_compress_log/2637 log/2638
                                       next/2641)))))
                            with (44) log/2638))))
                    (setfield_ptr(root-init) 70
                      (global Ocaml_ocaml_types__Types!)
                      rev_compress_log/2637))
                  (let
                    (undo_compress/2642 =
                       (function (param/6045, param/6046) : int
                         (let
                           (_old/2645 =a param/6046
                            changes/2644 =a param/6045
                            *match*/6049 = (field_mut 0 changes/2644))
                           (catch
                             (if (isint *match*/6049) (exit 47)
                               (let
                                 (*match*/6051 =a (field_imm 1 *match*/6049)
                                  *match*/6050 =a (field_imm 0 *match*/6049)
                                  log/2646 =
                                    (apply
                                      (field_imm 70
                                        (global Ocaml_ocaml_types__Types!))
                                      0 changes/2644))
                                 (apply (field_imm 17 (global Stdlib__List!))
                                   (function r/2647 : int
                                     (let
                                       (*match*/6047 = (field_mut 0 r/2647))
                                       (catch
                                         (if (isint *match*/6047) (exit 46)
                                           (let
                                             (*match*/6048 =a
                                                (field_imm 0 *match*/6047))
                                             (switch *match*/6048
                                              case tag 1:
                                               (let
                                                 (d/2650 =a
                                                    (field_imm 2
                                                      *match*/6048)
                                                  ty/2648 =a
                                                    (field_imm 0
                                                      *match*/6048))
                                                 (if
                                                   (== (field_mut 0 ty/2648)
                                                     d/2650)
                                                   (let
                                                     (next/2651 =a
                                                        (field_imm 1
                                                          *match*/6047)
                                                      desc/2649 =a
                                                        (field_imm 1
                                                          *match*/6048))
                                                     (seq
                                                       (apply
                                                         (field_imm 1
                                                           (field_imm 25
                                                             (global Ocaml_ocaml_types__Types!)))
                                                         ty/2648 desc/2649)
                                                       (setfield_ptr 0 r/2647
                                                         (field_mut 0
                                                           next/2651))))
                                                   (exit 46)))
                                              default: (exit 46))))
                                        with (46) 0)))
                                   log/2646)))
                            with (47) 0))))
                    (setfield_ptr(root-init) 71
                      (global Ocaml_ocaml_types__Types!) undo_compress/2642))
                  0)))))))))
(seq
  (seq
    (let
      (compare/440 =
         (function t1/441 t2/442 : int
           (- (field_int 3 t1/441) (field_int 3 t2/442))))
      (setfield_ptr(root-init) 72 (global Ocaml_ocaml_types__Types!)
        compare/440))
    (let (hash/443 = (function t/445 : int (field_int 3 t/445)))
      (setfield_ptr(root-init) 73 (global Ocaml_ocaml_types__Types!)
        hash/443))
    (let (equal/446 = (function t1/448 t2/449 : int (== t1/448 t2/449)))
      (setfield_ptr(root-init) 74 (global Ocaml_ocaml_types__Types!)
        equal/446))
    0)
  (let
    (TransientTypeOps/450 =
       (makeblock 0 (field_imm 72 (global Ocaml_ocaml_types__Types!))
         (field_imm 73 (global Ocaml_ocaml_types__Types!))
         (field_imm 74 (global Ocaml_ocaml_types__Types!))))
    (seq
      (setfield_ptr(root-init) 0 (global Ocaml_ocaml_types__Types!)
        TransientTypeOps/450)
      (let
        (single/1510 =
           (function param/1512[int] : int
             (switch* param/1512
              case int 0: 1
              case int 1: (+ 2 4)
              case int 2: 4
              case int 3: 8
              case int 4: (+ (+ 16 8) 1)
              case int 5: (+ (+ (+ 32 8) 4) 2)
              case int 6: 63)))
        (setfield_ptr(root-init) 75 (global Ocaml_ocaml_types__Types!)
          single/1510))
      (let
        (union/1513 =
           (function v1/1515[int] v2/1516[int] : int (or v1/1515 v2/1516)))
        (setfield_ptr(root-init) 76 (global Ocaml_ocaml_types__Types!)
          union/1513))
      (let
        (inter/1517 =
           (function v1/1519[int] v2/1520[int] : int (and v1/1519 v2/1520)))
        (setfield_ptr(root-init) 77 (global Ocaml_ocaml_types__Types!)
          inter/1517))
      (let
        (subset/1521 =
           (function v1/1523[int] v2/1524[int] : int
             (== (and v1/1523 v2/1524) v1/1523)))
        (setfield_ptr(root-init) 78 (global Ocaml_ocaml_types__Types!)
          subset/1521))
      (let
        (eq/1525 =
           (function v1/1527[int] v2/1528[int] : int (== v1/1527 v2/1528)))
        (setfield_ptr(root-init) 79 (global Ocaml_ocaml_types__Types!)
          eq/1525))
      (let
        (set/1529 =
           (function x/1531[int] v/1532[int] : int
             (apply (field_imm 76 (global Ocaml_ocaml_types__Types!)) v/1532
               (apply (field_imm 75 (global Ocaml_ocaml_types__Types!))
                 x/1531))))
        (setfield_ptr(root-init) 80 (global Ocaml_ocaml_types__Types!)
          set/1529))
      (let
        (set_if/1533 =
           (function b/1535[int] x/1536[int] v/1537[int] : int
             (if b/1535
               (apply (field_imm 80 (global Ocaml_ocaml_types__Types!))
                 x/1536 v/1537)
               v/1537)))
        (setfield_ptr(root-init) 81 (global Ocaml_ocaml_types__Types!)
          set_if/1533))
      (let
        (mem/1538 =
           (function x/1540[int]
             (apply (field_imm 78 (global Ocaml_ocaml_types__Types!))
               (apply (field_imm 75 (global Ocaml_ocaml_types__Types!))
                 x/1540))))
        (setfield_ptr(root-init) 82 (global Ocaml_ocaml_types__Types!)
          mem/1538))
      (let (null/1541 =[int] 0)
        (setfield_ptr(root-init) 83 (global Ocaml_ocaml_types__Types!)
          null/1541))
      (let (unknown/1542 =[int] 7)
        (setfield_ptr(root-init) 84 (global Ocaml_ocaml_types__Types!)
          unknown/1542))
      (let
        (full/1543 =[int]
           (apply (field_imm 75 (global Ocaml_ocaml_types__Types!)) 6))
        (setfield_ptr(root-init) 85 (global Ocaml_ocaml_types__Types!)
          full/1543))
      (let
        (covariant/1544 =[int]
           (apply (field_imm 75 (global Ocaml_ocaml_types__Types!)) 4))
        (setfield_ptr(root-init) 86 (global Ocaml_ocaml_types__Types!)
          covariant/1544))
      (let
        (swap/1545 =
           (function f1/1547[int] f2/1548[int] v/1549[int] v'/1550[int] : int
             (apply (field_imm 81 (global Ocaml_ocaml_types__Types!))
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!))
                 f2/1548 v/1549)
               f1/1547
               (apply (field_imm 81 (global Ocaml_ocaml_types__Types!))
                 (apply (field_imm 82 (global Ocaml_ocaml_types__Types!))
                   f1/1547 v/1549)
                 f2/1548 v'/1550))))
        (setfield_ptr(root-init) 87 (global Ocaml_ocaml_types__Types!)
          swap/1545))
      (let
        (conjugate/1551 =
           (function v/1553[int] : int
             (let
               (v'/1554 =[int]
                  (apply (field_imm 77 (global Ocaml_ocaml_types__Types!))
                    v/1553
                    (apply (field_imm 76 (global Ocaml_ocaml_types__Types!))
                      (apply
                        (field_imm 75 (global Ocaml_ocaml_types__Types!)) 3)
                      (apply
                        (field_imm 75 (global Ocaml_ocaml_types__Types!)) 2))))
               (apply (field_imm 87 (global Ocaml_ocaml_types__Types!)) 4 5
                 v/1553
                 (apply (field_imm 87 (global Ocaml_ocaml_types__Types!)) 0 1
                   v/1553 v'/1554)))))
        (setfield_ptr(root-init) 88 (global Ocaml_ocaml_types__Types!)
          conjugate/1551))
      (let
        (compose/1555 =
           (function v1/1557[int] v2/1558[int] : int
             (if
               (&&
                 (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 6
                   v1/1557)
                 (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 3
                   v2/1558))
               (field_imm 85 (global Ocaml_ocaml_types__Types!))
               (let
                 (mp/1559 =[int]
                    (||
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 0
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 0
                          v2/1558))
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 1
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 1
                          v2/1558)))
                  mn/1560 =[int]
                    (||
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 0
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 1
                          v2/1558))
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 1
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 0
                          v2/1558)))
                  mw/1561 =[int]
                    (||
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 2
                          v1/1557)
                        (!= v2/1558
                          (field_imm 83 (global Ocaml_ocaml_types__Types!))))
                      (&&
                        (!= v1/1557
                          (field_imm 83 (global Ocaml_ocaml_types__Types!)))
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 2
                          v2/1558)))
                  inj/1562 =[int]
                    (&&
                      (apply
                        (field_imm 82 (global Ocaml_ocaml_types__Types!)) 3
                        v1/1557)
                      (apply
                        (field_imm 82 (global Ocaml_ocaml_types__Types!)) 3
                        v2/1558))
                  pos/1563 =[int]
                    (||
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 4
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 4
                          v2/1558))
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 5
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 5
                          v2/1558)))
                  neg/1564 =[int]
                    (||
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 4
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 5
                          v2/1558))
                      (&&
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 5
                          v1/1557)
                        (apply
                          (field_imm 82 (global Ocaml_ocaml_types__Types!)) 4
                          v2/1558))))
                 (apply (field_imm 25 (global Stdlib__List!))
                   (function v/1631[int] param/1634 : int
                     (apply (field_imm 81 (global Ocaml_ocaml_types__Types!))
                       (field_imm 0 param/1634) (field_imm 1 param/1634)
                       v/1631))
                   (field_imm 83 (global Ocaml_ocaml_types__Types!))
                   (makeblock 0 (makeblock 0 (int,int) mp/1559 0)
                     (makeblock 0 (makeblock 0 (int,int) mn/1560 1)
                       (makeblock 0 (makeblock 0 (int,int) mw/1561 2)
                         (makeblock 0 (makeblock 0 (int,int) inj/1562 3)
                           (makeblock 0 (makeblock 0 (int,int) pos/1563 4)
                             (makeblock 0 (makeblock 0 (int,int) neg/1564 5)
                               0)))))))))))
        (setfield_ptr(root-init) 89 (global Ocaml_ocaml_types__Types!)
          compose/1555))
      (let
        (strengthen/1635 =
           (function v/1637[int] : int
             (if
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 1
                 v/1637)
               v/1637
               (and v/1637
                 (- (field_imm 85 (global Ocaml_ocaml_types__Types!))
                   (apply (field_imm 75 (global Ocaml_ocaml_types__Types!))
                     2))))))
        (setfield_ptr(root-init) 90 (global Ocaml_ocaml_types__Types!)
          strengthen/1635))
      (let
        (get_upper/1638 =
           (function v/1640[int]
             (makeblock 0 (int,int)
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 0
                 v/1640)
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 1
                 v/1640))))
        (setfield_ptr(root-init) 91 (global Ocaml_ocaml_types__Types!)
          get_upper/1638))
      (let
        (get_lower/1641 =
           (function v/1643[int]
             (makeblock 0 (int,int,int)
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 4
                 v/1643)
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 5
                 v/1643)
               (apply (field_imm 82 (global Ocaml_ocaml_types__Types!)) 3
                 v/1643))))
        (setfield_ptr(root-init) 92 (global Ocaml_ocaml_types__Types!)
          get_lower/1641))
      (let
        (unknown_signature/1644 =
           (function injective/1646[int] arity/1647[int]
             (let
               (v/1648 =[int]
                  (if injective/1646
                    (apply (field_imm 80 (global Ocaml_ocaml_types__Types!))
                      3 (field_imm 84 (global Ocaml_ocaml_types__Types!)))
                    (field_imm 84 (global Ocaml_ocaml_types__Types!))))
               (apply (field_imm 10 (global Ocaml_ocaml_types__Misc!)) v/1648
                 arity/1647))))
        (setfield_ptr(root-init) 93 (global Ocaml_ocaml_types__Types!)
          unknown_signature/1644))
      0
      (let
        (Variance/1649 =
           (makeblock 0 (field_imm 75 (global Ocaml_ocaml_types__Types!))
             (field_imm 76 (global Ocaml_ocaml_types__Types!))
             (field_imm 77 (global Ocaml_ocaml_types__Types!))
             (field_imm 78 (global Ocaml_ocaml_types__Types!))
             (field_imm 79 (global Ocaml_ocaml_types__Types!))
             (field_imm 80 (global Ocaml_ocaml_types__Types!))
             (field_imm 81 (global Ocaml_ocaml_types__Types!))
             (field_imm 82 (global Ocaml_ocaml_types__Types!))
             (field_imm 83 (global Ocaml_ocaml_types__Types!))
             (field_imm 84 (global Ocaml_ocaml_types__Types!))
             (field_imm 85 (global Ocaml_ocaml_types__Types!))
             (field_imm 86 (global Ocaml_ocaml_types__Types!))
             (field_imm 87 (global Ocaml_ocaml_types__Types!))
             (field_imm 88 (global Ocaml_ocaml_types__Types!))
             (field_imm 89 (global Ocaml_ocaml_types__Types!))
             (field_imm 90 (global Ocaml_ocaml_types__Types!))
             (field_imm 91 (global Ocaml_ocaml_types__Types!))
             (field_imm 92 (global Ocaml_ocaml_types__Types!))
             (field_imm 93 (global Ocaml_ocaml_types__Types!))))
        (seq
          (setfield_ptr(root-init) 1 (global Ocaml_ocaml_types__Types!)
            Variance/1649)
          (let
            (eq/1655 =
               (function m1/1657[int] m2/1658[int] : int
                 (== m1/1657 m2/1658)))
            (setfield_ptr(root-init) 94 (global Ocaml_ocaml_types__Types!)
              eq/1655))
          (let
            (rank/1659 =
               (function param/1661[int] : int
                 (switch* param/1661
                  case int 0: 0
                  case int 1: 1
                  case int 2: 2)))
            (setfield_ptr(root-init) 95 (global Ocaml_ocaml_types__Types!)
              rank/1659))
          (let
            (compare/1662 =
               (function m1/1663[int] m2/1664[int] : int
                 (compare_ints
                   (apply (field_imm 95 (global Ocaml_ocaml_types__Types!))
                     m1/1663)
                   (apply (field_imm 95 (global Ocaml_ocaml_types__Types!))
                     m2/1664))))
            (setfield_ptr(root-init) 96 (global Ocaml_ocaml_types__Types!)
              compare/1662))
          (let
            (max/1665 =
               (function m1/1666[int] m2/1667[int] : int
                 (if
                   (>=
                     (apply (field_imm 95 (global Ocaml_ocaml_types__Types!))
                       m1/1666)
                     (apply (field_imm 95 (global Ocaml_ocaml_types__Types!))
                       m2/1667))
                   m1/1666 m2/1667)))
            (setfield_ptr(root-init) 97 (global Ocaml_ocaml_types__Types!)
              max/1665))
          (let
            (print/1668 =
               (function ppf/1670 param/2010[int] : int
                 (switch* param/2010
                  case int 0:
                   (apply (field_imm 138 (global Stdlib__Format!)) ppf/1670
                     [0: [11: "Ind" 0] "Ind"])
                  case int 1:
                   (apply (field_imm 138 (global Stdlib__Format!)) ppf/1670
                     [0: [11: "Sep" 0] "Sep"])
                  case int 2:
                   (apply (field_imm 138 (global Stdlib__Format!)) ppf/1670
                     [0: [11: "Deepsep" 0] "Deepsep"]))))
            (setfield_ptr(root-init) 98 (global Ocaml_ocaml_types__Types!)
              print/1668))
          (let
            (print_signature/2011 =
               (function ppf/2013 modes/2014 : int
                 (let
                   (pp_sep/2015 =
                      (function ppf/2017 param/2018[int] : int
                        (apply (field_imm 138 (global Stdlib__Format!))
                          ppf/2017
                          [0: [12: ',' [17: [0: "@," 0 0] 0]] ",@,"])))
                   (apply (field_imm 138 (global Stdlib__Format!)) ppf/2013
                     [0:
                      [18:
                       [1: [0: 0 ""]] [12: '(' [15: [12: ')' [17: 0 0]]]]]
                      "@[(%a)@]"]
                     (apply (field_imm 131 (global Stdlib__Format!))
                       (makeblock 0 pp_sep/2015)
                       (field_imm 98 (global Ocaml_ocaml_types__Types!)))
                     modes/2014))))
            (setfield_ptr(root-init) 99 (global Ocaml_ocaml_types__Types!)
              print_signature/2011))
          (let
            (default_signature/2019 =
               (function arity/2021[int]
                 (let (default_mode/2022 =[int] 0)
                   (apply (field_imm 10 (global Ocaml_ocaml_types__Misc!))
                     default_mode/2022 arity/2021))))
            (setfield_ptr(root-init) 100 (global Ocaml_ocaml_types__Types!)
              default_signature/2019))
          0
          (let
            (Separability/2023 =
               (makeblock 0 (field_imm 94 (global Ocaml_ocaml_types__Types!))
                 (field_imm 95 (global Ocaml_ocaml_types__Types!))
                 (field_imm 96 (global Ocaml_ocaml_types__Types!))
                 (field_imm 97 (global Ocaml_ocaml_types__Types!))
                 (field_imm 98 (global Ocaml_ocaml_types__Types!))
                 (field_imm 99 (global Ocaml_ocaml_types__Types!))
                 (field_imm 100 (global Ocaml_ocaml_types__Types!))))
            (seq
              (setfield_ptr(root-init) 2 (global Ocaml_ocaml_types__Types!)
                Separability/2023)
              (let
                (equal_tag/2179 =
                   (function t1/2181 t2/2182 : int
                     (catch
                       (switch* t1/2181
                        case int 0: (if (isint t2/2182) 1 (exit 1))
                        case tag 0:
                         (switch t2/2182
                          case tag 0:
                           (== (field_imm 0 t2/2182) (field_imm 0 t1/2181))
                          default: (exit 1))
                        case tag 1:
                         (switch t2/2182
                          case tag 1:
                           (== (field_imm 0 t2/2182) (field_imm 0 t1/2181))
                          default: (exit 1))
                        case tag 2:
                         (catch
                           (switch t2/2182
                            case tag 2:
                             (&&
                               (apply
                                 (field_imm 0
                                   (global Ocaml_ocaml_types__Path!))
                                 (field_imm 0 t1/2181) (field_imm 0 t2/2182))
                               (== (field_imm 1 t1/2181)
                                 (field_imm 1 t2/2182)))
                            default: (exit 5))
                          with (5) (exit 1)))
                      with (1) 0)))
                (setfield_ptr(root-init) 3 (global Ocaml_ocaml_types__Types!)
                  equal_tag/2179))
              (let
                (may_equal_constr/2191 =
                   (function c1/2193 c2/2194 : int
                     (&& (== (field_int 4 c1/2193) (field_int 4 c2/2194))
                       (let
                         (*match*/5896 = (field_imm 5 c1/2193)
                          *match*/5897 = (field_imm 5 c2/2194))
                         (catch
                           (switch *match*/5896
                            case tag 2:
                             (switch *match*/5897
                              case tag 2: 1
                              default: (exit 6))
                            default: (exit 6))
                          with (6)
                           (apply
                             (field_imm 3 (global Ocaml_ocaml_types__Types!))
                             *match*/5896 *match*/5897))))))
                (setfield_ptr(root-init) 4 (global Ocaml_ocaml_types__Types!)
                  may_equal_constr/2191))
              (let
                (item_visibility/2197 =
                   (function param/2206 : int
                     (catch
                       (catch
                         (switch param/2206
                          case tag 0: (exit 8)
                          case tag 3: (exit 7 (field_imm 4 param/2206))
                          case tag 4: (exit 8)
                          default: (exit 7 (field_imm 3 param/2206)))
                        with (8) (exit 7 (field_imm 2 param/2206)))
                      with (7 vis/2199[int]) vis/2199)))
                (setfield_ptr(root-init) 5 (global Ocaml_ocaml_types__Types!)
                  item_visibility/2197))
              (letrec
                (bound_value_identifiers/2219
                   (function param/2253
                     (if (isint param/2253) 0
                       (let (*match*/5929 =a (field_imm 0 param/2253))
                         (catch
                           (catch
                             (switch *match*/5929
                              case tag 0:
                               (if
                                 (isint
                                   (field_imm 1 (field_imm 1 *match*/5929)))
                                 (makeblock 0 (field_imm 0 *match*/5929)
                                   (apply bound_value_identifiers/2219
                                     (field_imm 1 param/2253)))
                                 (exit 10))
                              case tag 2: (exit 11)
                              case tag 3:
                               (if (field_imm 1 *match*/5929) (exit 10)
                                 (makeblock 0 (field_imm 0 *match*/5929)
                                   (apply bound_value_identifiers/2219
                                     (field_imm 1 param/2253))))
                              case tag 5: (exit 11)
                              default: (exit 10))
                            with (11)
                             (makeblock 0 (field_imm 0 *match*/5929)
                               (apply bound_value_identifiers/2219
                                 (field_imm 1 param/2253))))
                          with (10)
                           (apply bound_value_identifiers/2219
                             (field_imm 1 param/2253)))))))
                (setfield_ptr(root-init) 6 (global Ocaml_ocaml_types__Types!)
                  bound_value_identifiers/2219))
              (let
                (signature_item_id/2254 =
                   (function param/2263 (field_imm 0 param/2263)))
                (setfield_ptr(root-init) 7 (global Ocaml_ocaml_types__Types!)
                  signature_item_id/2254))
              (let
                (trail/2278 =
                   (apply
                     (field_imm 3 (global Ocaml_ocaml_types__Local_store!))
                     (function prim/5974 stub (makemutable 0 prim/5974)) 0))
                (setfield_ptr(root-init) 8 (global Ocaml_ocaml_types__Types!)
                  trail/2278))
              (let
                (log_change/2290 =
                   (function ch/2292 : int
                     (let (r'/2293 = (makemutable 0 0))
                       (seq
                         (setfield_ptr 0
                           (field_mut 0
                             (field_imm 8 (global Ocaml_ocaml_types__Types!)))
                           (makeblock 0 ch/2292 r'/2293))
                         (setfield_ptr 0
                           (field_imm 8 (global Ocaml_ocaml_types__Types!))
                           r'/2293)))))
                (setfield_ptr(root-init) 9 (global Ocaml_ocaml_types__Types!)
                  log_change/2290))
              (letrec
                (field_kind_internal_repr/2298
                   (function kind/2300
                     (catch
                       (if (isint kind/2300) (exit 13)
                         (let (fk/2299 =o (field_mut 0 kind/2300))
                           (catch
                             (if (isint fk/2299)
                               (if (!= fk/2299 0) (exit 14) (exit 13))
                               (exit 14))
                            with (14)
                             (apply field_kind_internal_repr/2298 fk/2299))))
                      with (13) kind/2300)))
                (setfield_ptr(root-init) 10
                  (global Ocaml_ocaml_types__Types!)
                  field_kind_internal_repr/2298))
              (let
                (field_kind_repr/2302 =
                   (function fk/2304 : int
                     (let
                       (*match*/5975 =
                          (apply
                            (field_imm 10 (global Ocaml_ocaml_types__Types!))
                            fk/2304))
                       (if (isint *match*/5975) (if (>= *match*/5975 2) 2 1)
                         0))))
                (setfield_ptr(root-init) 11
                  (global Ocaml_ocaml_types__Types!) field_kind_repr/2302))
              (let (field_public/2306 = 1)
                (setfield_ptr(root-init) 12
                  (global Ocaml_ocaml_types__Types!) field_public/2306))
              (let (field_absent/2307 = 2)
                (setfield_ptr(root-init) 13
                  (global Ocaml_ocaml_types__Types!) field_absent/2307))
              (let
                (field_private/2308 =
                   (function param/2310[int] (makemutable 0 0)))
                (setfield_ptr(root-init) 14
                  (global Ocaml_ocaml_types__Types!) field_private/2308))
              (letrec
                (is_commu_ok/2311
                   (function param/2319 : int
                     (if (isint param/2319) (if param/2319 0 1)
                       (let (commu/2314 =o (field_mut 0 param/2319))
                         (apply is_commu_ok/2311 commu/2314)))))
                (setfield_ptr(root-init) 15
                  (global Ocaml_ocaml_types__Types!) is_commu_ok/2311))
              (let (commu_ok/2320 = 0)
                (setfield_ptr(root-init) 16
                  (global Ocaml_ocaml_types__Types!) commu_ok/2320))
              (let
                (commu_var/2321 =
                   (function param/2323[int] (makemutable 0 1)))
                (setfield_ptr(root-init) 17
                  (global Ocaml_ocaml_types__Types!) commu_var/2321))
              (letrec
                (repr_link/2324
                   (function t/2325 d/2326 t'/2332
                     (catch
                       (let (d'/2328 =o (field_mut 0 t'/2332))
                         (switch d'/2328
                          case tag 5:
                           (if
                             (==
                               (apply
                                 (field_imm 10
                                   (global Ocaml_ocaml_types__Types!))
                                 (field_imm 1 d'/2328))
                               2)
                             (apply repr_link/2324 t/2325 d'/2328
                               (field_imm 3 d'/2328))
                             (exit 16))
                          case tag 6:
                           (apply repr_link/2324 t/2325 d'/2328
                             (field_imm 0 d'/2328))
                          default: (exit 16)))
                      with (16)
                       (seq
                         (apply
                           (field_imm 9 (global Ocaml_ocaml_types__Types!))
                           (makeblock 1 t/2325 (field_mut 0 t/2325) d/2326))
                         (setfield_ptr 0 t/2325 d/2326) t'/2332))))
                (setfield_ptr(root-init) 18
                  (global Ocaml_ocaml_types__Types!) repr_link/2324))
              (let
                (repr_link1/2333 =
                   (function t/2335 t'/2341
                     (catch
                       (let (d'/2337 =o (field_mut 0 t'/2341))
                         (switch d'/2337
                          case tag 5:
                           (if
                             (==
                               (apply
                                 (field_imm 10
                                   (global Ocaml_ocaml_types__Types!))
                                 (field_imm 1 d'/2337))
                               2)
                             (apply
                               (field_imm 18
                                 (global Ocaml_ocaml_types__Types!))
                               t/2335 d'/2337 (field_imm 3 d'/2337))
                             (exit 18))
                          case tag 6:
                           (apply
                             (field_imm 18
                               (global Ocaml_ocaml_types__Types!))
                             t/2335 d'/2337 (field_imm 0 d'/2337))
                          default: (exit 18)))
                      with (18) t'/2341)))
                (setfield_ptr(root-init) 19
                  (global Ocaml_ocaml_types__Types!) repr_link1/2333))
              (let
                (repr/2342 =
                   (function t/2344
                     (let (*match*/5994 = (field_mut 0 t/2344))
                       (catch
                         (switch *match*/5994
                          case tag 5:
                           (if
                             (==
                               (apply
                                 (field_imm 10
                                   (global Ocaml_ocaml_types__Types!))
                                 (field_imm 1 *match*/5994))
                               2)
                             (apply
                               (field_imm 19
                                 (global Ocaml_ocaml_types__Types!))
                               t/2344 (field_imm 3 *match*/5994))
                             (exit 19))
                          case tag 6:
                           (apply
                             (field_imm 19
                               (global Ocaml_ocaml_types__Types!))
                             t/2344 (field_imm 0 *match*/5994))
                          default: (exit 19))
                        with (19) t/2344))))
                (setfield_ptr(root-init) 20
                  (global Ocaml_ocaml_types__Types!) repr/2342))
              (let
                (get_desc/2348 =
                   (function t/2350
                     (field_mut 0
                       (apply
                         (field_imm 20 (global Ocaml_ocaml_types__Types!))
                         t/2350))))
                (setfield_ptr(root-init) 21
                  (global Ocaml_ocaml_types__Types!) get_desc/2348))
              (let
                (get_level/2351 =
                   (function t/2353 : int
                     (field_int 1
                       (apply
                         (field_imm 20 (global Ocaml_ocaml_types__Types!))
                         t/2353))))
                (setfield_ptr(root-init) 22
                  (global Ocaml_ocaml_types__Types!) get_level/2351))
              (let
                (get_scope/2354 =
                   (function t/2356 : int
                     (field_int 2
                       (apply
                         (field_imm 20 (global Ocaml_ocaml_types__Types!))
                         t/2356))))
                (setfield_ptr(root-init) 23
                  (global Ocaml_ocaml_types__Types!) get_scope/2354))
              (let
                (get_id/2357 =
                   (function t/2359 : int
                     (field_int 3
                       (apply
                         (field_imm 20 (global Ocaml_ocaml_types__Types!))
                         t/2359))))
                (setfield_ptr(root-init) 24
                  (global Ocaml_ocaml_types__Types!) get_id/2357))
              (let
                (create/2360 =
                   (function desc/2362 level/2363[int] scope/2364[int]
                     id/2365[int]
                     (makemutable 0 (*,int,int,int) desc/2362 level/2363
                       scope/2364 id/2365)))
                (setfield_ptr(root-init) 101
                  (global Ocaml_ocaml_types__Types!) create/2360))
              (let
                (set_desc/2366 =
                   (function ty/2368 d/2369 : int
                     (setfield_ptr 0 ty/2368 d/2369)))
                (setfield_ptr(root-init) 102
                  (global Ocaml_ocaml_types__Types!) set_desc/2366))
              (let
                (set_stub_desc/2370 =
                   (function ty/2372 d/2373 : int
                     (seq
                       (if (caml_equal (field_mut 0 ty/2372) [0: 0]) 0
                         (raise
                           (makeblock 0 (global Assert_failure/28!)
                             [0: "lib/types.ml" 590 27])))
                       (setfield_ptr 0 ty/2372 d/2373))))
                (setfield_ptr(root-init) 103
                  (global Ocaml_ocaml_types__Types!) set_stub_desc/2370))
              (let
                (set_level/2374 =
                   (function ty/2376 lv/2377[int] : int
                     (setfield_imm 1 ty/2376 lv/2377)))
                (setfield_ptr(root-init) 104
                  (global Ocaml_ocaml_types__Types!) set_level/2374))
              (let
                (set_scope/2378 =
                   (function ty/2380 sc/2381[int] : int
                     (setfield_imm 2 ty/2380 sc/2381)))
                (setfield_ptr(root-init) 105
                  (global Ocaml_ocaml_types__Types!) set_scope/2378))
              (let (coerce/2382 = (function ty/2384 ty/2384))
                (setfield_ptr(root-init) 106
                  (global Ocaml_ocaml_types__Types!) coerce/2382))
              (let
                (repr/2385 =
                   (field_imm 20 (global Ocaml_ocaml_types__Types!)))
                (setfield_ptr(root-init) 107
                  (global Ocaml_ocaml_types__Types!) repr/2385))
              (let (type_expr/2386 = (function ty/2388 ty/2388))
                (setfield_ptr(root-init) 108
                  (global Ocaml_ocaml_types__Types!) type_expr/2386))
              0
              (let
                (Transient_expr/2389 =
                   (makeblock 0
                     (field_imm 101 (global Ocaml_ocaml_types__Types!))
                     (field_imm 102 (global Ocaml_ocaml_types__Types!))
                     (field_imm 103 (global Ocaml_ocaml_types__Types!))
                     (field_imm 104 (global Ocaml_ocaml_types__Types!))
                     (field_imm 105 (global Ocaml_ocaml_types__Types!))
                     (field_imm 106 (global Ocaml_ocaml_types__Types!))
                     (field_imm 107 (global Ocaml_ocaml_types__Types!))
                     (field_imm 108 (global Ocaml_ocaml_types__Types!))))
                (seq
                  (setfield_ptr(root-init) 25
                    (global Ocaml_ocaml_types__Types!) Transient_expr/2389)
                  (let
                    (eq_type/2390 =
                       (function t1/2392 t2/2393 : int
                         (|| (== t1/2392 t2/2393)
                           (==
                             (apply
                               (field_imm 20
                                 (global Ocaml_ocaml_types__Types!))
                               t1/2392)
                             (apply
                               (field_imm 20
                                 (global Ocaml_ocaml_types__Types!))
                               t2/2393)))))
                    (setfield_ptr(root-init) 26
                      (global Ocaml_ocaml_types__Types!) eq_type/2390))
                  (let
                    (compare_type/2394 =
                       (function t1/2396 t2/2397 : int
                         (compare_ints
                           (apply
                             (field_imm 24
                               (global Ocaml_ocaml_types__Types!))
                             t1/2396)
                           (apply
                             (field_imm 24
                               (global Ocaml_ocaml_types__Types!))
                             t2/2397))))
                    (setfield_ptr(root-init) 27
                      (global Ocaml_ocaml_types__Types!) compare_type/2394))
                  (let
                    (create_row/2398 =
                       (function fields/2400 more/2401 closed/2402[int]
                         fixed/2403 name/2404
                         (makeblock 0 (*,*,int,*,*) fields/2400 more/2401
                           closed/2402 fixed/2403 name/2404)))
                    (setfield_ptr(root-init) 28
                      (global Ocaml_ocaml_types__Types!) create_row/2398))
                  (letrec
                    (row_fields/2405
                       (function row/2406
                         (let
                           (*match*/5999 =
                              (apply
                                (field_imm 21
                                  (global Ocaml_ocaml_types__Types!))
                                (field_imm 1 row/2406)))
                           (catch
                             (switch *match*/5999
                              case tag 8:
                               (apply (field_imm 36 (global Stdlib!))
                                 (field_imm 0 row/2406)
                                 (apply row_fields/2405
                                   (field_imm 0 *match*/5999)))
                              default: (exit 20))
                            with (20) (field_imm 0 row/2406)))))
                    (setfield_ptr(root-init) 29
                      (global Ocaml_ocaml_types__Types!) row_fields/2405))
                  (letrec
                    (row_repr_no_fields/2408
                       (function row/2409
                         (let
                           (*match*/6000 =
                              (apply
                                (field_imm 21
                                  (global Ocaml_ocaml_types__Types!))
                                (field_imm 1 row/2409)))
                           (catch
                             (switch *match*/6000
                              case tag 8:
                               (apply row_repr_no_fields/2408
                                 (field_imm 0 *match*/6000))
                              default: (exit 21))
                            with (21) row/2409))))
                    (setfield_ptr(root-init) 30
                      (global Ocaml_ocaml_types__Types!)
                      row_repr_no_fields/2408))
                  (let
                    (row_more/2411 =
                       (function row/2413
                         (field_imm 1
                           (apply
                             (field_imm 30
                               (global Ocaml_ocaml_types__Types!))
                             row/2413))))
                    (setfield_ptr(root-init) 31
                      (global Ocaml_ocaml_types__Types!) row_more/2411))
                  (let
                    (row_closed/2414 =
                       (function row/2416 : int
                         (field_int 2
                           (apply
                             (field_imm 30
                               (global Ocaml_ocaml_types__Types!))
                             row/2416))))
                    (setfield_ptr(root-init) 32
                      (global Ocaml_ocaml_types__Types!) row_closed/2414))
                  (let
                    (row_fixed/2417 =
                       (function row/2419
                         (field_imm 3
                           (apply
                             (field_imm 30
                               (global Ocaml_ocaml_types__Types!))
                             row/2419))))
                    (setfield_ptr(root-init) 33
                      (global Ocaml_ocaml_types__Types!) row_fixed/2417))
                  (let
                    (row_name/2420 =
                       (function row/2422
                         (field_imm 4
                           (apply
                             (field_imm 30
                               (global Ocaml_ocaml_types__Types!))
                             row/2422))))
                    (setfield_ptr(root-init) 34
                      (global Ocaml_ocaml_types__Types!) row_name/2420))
                  (letrec
                    (get_row_field/2423
                       (function tag/2424 row/2425
                         (letrec
                           (find/2426
                              (function param/2431
                                (if (isint param/2431)
                                  (let
                                    (*match*/6001 =
                                       (apply
                                         (field_imm 21
                                           (global Ocaml_ocaml_types__Types!))
                                         (field_imm 1 row/2425)))
                                    (catch
                                      (switch *match*/6001
                                       case tag 8:
                                        (apply get_row_field/2423 tag/2424
                                          (field_imm 0 *match*/6001))
                                       default: (exit 22))
                                     with (22) 0))
                                  (let
                                    (*match*/6002 =a (field_imm 0 param/2431))
                                    (if
                                      (caml_string_equal tag/2424
                                        (field_imm 0 *match*/6002))
                                      (field_imm 1 *match*/6002)
                                      (apply find/2426
                                        (field_imm 1 param/2431)))))))
                           (apply find/2426 (field_imm 0 row/2425)))))
                    (setfield_ptr(root-init) 35
                      (global Ocaml_ocaml_types__Types!) get_row_field/2423))
                  (let
                    (set_row_name/2432 =
                       (function row/2434 row_name/2435
                         (let
                           (row_fields/2436 =
                              (apply
                                (field_imm 29
                                  (global Ocaml_ocaml_types__Types!))
                                row/2434)
                            row/2437 =
                              (apply
                                (field_imm 30
                                  (global Ocaml_ocaml_types__Types!))
                                row/2434))
                           (makeblock 0 (*,*,int,*,*) row_fields/2436
                             (field_imm 1 row/2437) (field_int 2 row/2437)
                             (field_imm 3 row/2437) row_name/2435))))
                    (setfield_ptr(root-init) 36
                      (global Ocaml_ocaml_types__Types!) set_row_name/2432))
                  (let
                    (row_repr/2445 =
                       (function row/2447
                         (let
                           (fields/2448 =
                              (apply
                                (field_imm 29
                                  (global Ocaml_ocaml_types__Types!))
                                row/2447)
                            row/2449 =
                              (apply
                                (field_imm 30
                                  (global Ocaml_ocaml_types__Types!))
                                row/2447))
                           (makeblock 0 (*,*,int,*,*) fields/2448
                             (field_imm 1 row/2449) (field_int 2 row/2449)
                             (field_imm 3 row/2449) (field_imm 4 row/2449)))))
                    (setfield_ptr(root-init) 37
                      (global Ocaml_ocaml_types__Types!) row_repr/2445))
                  (letrec
                    (row_field_repr_aux/2454
                       (function tl/2455 rf/2459
                         (switch* rf/2459
                          case int 0: 0
                          case tag 0:
                           (catch
                             (if (isint (field_imm 0 rf/2459)) (exit 24)
                               (if (!= tl/2455 0)
                                 (makeblock 0
                                   (makeblock 0
                                     (apply
                                       (field_imm 5 (global Stdlib__List!))
                                       tl/2455)))
                                 (exit 24)))
                            with (24) rf/2459)
                          case tag 1:
                           (let
                             (rf/2458 =o (field_mut 0 (field_imm 3 rf/2459)))
                             (catch
                               (if (isint rf/2458)
                                 (if rf/2458
                                   (makeblock 1 (int,*,int,*)
                                     (field_int 0 rf/2459)
                                     (apply (field_imm 36 (global Stdlib!))
                                       tl/2455 (field_imm 1 rf/2459))
                                     (field_int 2 rf/2459)
                                     (field_imm 3 rf/2459))
                                   (exit 23))
                                 (exit 23))
                              with (23)
                               (apply row_field_repr_aux/2454
                                 (apply (field_imm 36 (global Stdlib!))
                                   tl/2455 (field_imm 1 rf/2459))
                                 rf/2458))))))
                    (setfield_ptr(root-init) 38
                      (global Ocaml_ocaml_types__Types!)
                      row_field_repr_aux/2454))
                  (let
                    (row_field_repr/2461 =
                       (function fi/2463
                         (let
                           (*match*/6012 =
                              (apply
                                (field_imm 38
                                  (global Ocaml_ocaml_types__Types!))
                                0 fi/2463))
                           (switch* *match*/6012
                            case int 0: 0
                            case tag 0:
                             (makeblock 0 (field_imm 0 *match*/6012))
                            case tag 1:
                             (makeblock 1 (int,*,int)
                               (field_int 0 *match*/6012)
                               (field_imm 1 *match*/6012)
                               (field_int 2 *match*/6012))))))
                    (setfield_ptr(root-init) 39
                      (global Ocaml_ocaml_types__Types!) row_field_repr/2461))
                  (letrec
                    (row_field_ext/2469
                       (function fi/2470
                         (catch
                           (switch fi/2470
                            case tag 1:
                             (let
                               (ext/2471 =a (field_imm 3 fi/2470)
                                rf/2472 =o (field_mut 0 ext/2471))
                               (catch
                                 (if (isint rf/2472)
                                   (if rf/2472 ext/2471 (exit 26)) (exit 26))
                                with (26) (apply row_field_ext/2469 rf/2472)))
                            default: (exit 25))
                          with (25)
                           (apply
                             (field_imm 2 (global Ocaml_ocaml_types__Misc!))
                             "Types.row_field_ext "))))
                    (setfield_ptr(root-init) 40
                      (global Ocaml_ocaml_types__Types!) row_field_ext/2469))
                  (let
                    (rf_present/2473 =
                       (function oty/2475 (makeblock 0 oty/2475)))
                    (setfield_ptr(root-init) 41
                      (global Ocaml_ocaml_types__Types!) rf_present/2473))
                  (let (rf_absent/2476 = 0)
                    (setfield_ptr(root-init) 42
                      (global Ocaml_ocaml_types__Types!) rf_absent/2476))
                  (let
                    (rf_either/2477 =
                       (function use_ext_of/2479 no_arg/2480[int]
                         arg_type/2481 matched/2482[int]
                         (let
                           (ext/2483 =
                              (if (isint use_ext_of/2479) (makemutable 0 1)
                                (apply
                                  (field_imm 40
                                    (global Ocaml_ocaml_types__Types!))
                                  (field_imm 0 use_ext_of/2479))))
                           (makeblock 1 (int,*,int,*) no_arg/2480
                             arg_type/2481 matched/2482 ext/2483))))
                    (setfield_ptr(root-init) 43
                      (global Ocaml_ocaml_types__Types!) rf_either/2477))
                  (let
                    (rf_either_of/2485 =
                       (function param/2488
                         (if (isint param/2488)
                           (makeblock 1 (int,*,int,*) 1 0 0
                             (makemutable 0 1))
                           (makeblock 1 (int,*,int,*) 0
                             (makeblock 0 (field_imm 0 param/2488) 0) 0
                             (makemutable 0 1)))))
                    (setfield_ptr(root-init) 44
                      (global Ocaml_ocaml_types__Types!) rf_either_of/2485))
                  (let
                    (eq_row_field_ext/2489 =
                       (function rf1/2491 rf2/2492 : int
                         (==
                           (apply
                             (field_imm 40
                               (global Ocaml_ocaml_types__Types!))
                             rf1/2491)
                           (apply
                             (field_imm 40
                               (global Ocaml_ocaml_types__Types!))
                             rf2/2492))))
                    (setfield_ptr(root-init) 45
                      (global Ocaml_ocaml_types__Types!)
                      eq_row_field_ext/2489))
                  (let
                    (changed_row_field_exts/2493 =
                       (function l/2495 f/2496 : int
                         (let
                           (exts/2497 =
                              (apply (field_imm 19 (global Stdlib__List!))
                                (field_imm 40
                                  (global Ocaml_ocaml_types__Types!))
                                l/2495))
                           (seq (apply f/2496 0)
                             (apply (field_imm 33 (global Stdlib__List!))
                               (function r/2498 : int
                                 (!= (field_mut 0 r/2498) 1))
                               exts/2497)))))
                    (setfield_ptr(root-init) 46
                      (global Ocaml_ocaml_types__Types!)
                      changed_row_field_exts/2493))
                  (let
                    (match_row_field/2499 =
                       (function present/2501 absent/2502 either/2503 f/2504
                         (switch* f/2504
                          case int 0: (apply absent/2502 0)
                          case tag 0:
                           (apply present/2501 (field_imm 0 f/2504))
                          case tag 1:
                           (let
                             (e/2510 =
                                (let
                                  (e/2511 =
                                     (field_mut 0 (field_imm 3 f/2504)))
                                  (catch
                                    (if (isint e/2511)
                                      (if e/2511 0 (exit 27)) (exit 27))
                                   with (27) (makeblock 0 e/2511))))
                             (apply either/2503 (field_int 0 f/2504)
                               (field_imm 1 f/2504) (field_int 2 f/2504)
                               e/2510)))))
                    (setfield_ptr(root-init) 47
                      (global Ocaml_ocaml_types__Types!)
                      match_row_field/2499))
                  (let
                    (new_id/2513 =
                       (apply
                         (field_imm 4
                           (global Ocaml_ocaml_types__Local_store!))
                         -1))
                    (setfield_ptr(root-init) 48
                      (global Ocaml_ocaml_types__Types!) new_id/2513))
                  (let
                    (create_expr/2514 =
                       (field_imm 0
                         (field_imm 25 (global Ocaml_ocaml_types__Types!))))
                    (setfield_ptr(root-init) 49
                      (global Ocaml_ocaml_types__Types!) create_expr/2514))
                  (let
                    (newty3/2515 =
                       (function level/2517[int] scope/2518[int] desc/2519
                         (seq
                           (+:=1
                             (field_imm 48
                               (global Ocaml_ocaml_types__Types!)))
                           (apply
                             (field_imm 49
                               (global Ocaml_ocaml_types__Types!))
                             desc/2519 level/2517 scope/2518
                             (field_int 0
                               (field_imm 48
                                 (global Ocaml_ocaml_types__Types!)))))))
                    (setfield_ptr(root-init) 50
                      (global Ocaml_ocaml_types__Types!) newty3/2515))
                  (let
                    (newty2/2520 =
                       (function level/2522[int] desc/2523
                         (apply
                           (field_imm 50 (global Ocaml_ocaml_types__Types!))
                           level/2522
                           (field_imm 0 (global Ocaml_ocaml_types__Ident!))
                           desc/2523)))
                    (setfield_ptr(root-init) 51
                      (global Ocaml_ocaml_types__Types!) newty2/2520))
                  (let
                    (undo_change/2524 =
                       (function param/2546 : int
                         (catch
                           (catch
                             (catch
                               (switch* param/2546
                                case tag 0: (exit 28)
                                case tag 1: (exit 28)
                                case tag 2:
                                 (apply
                                   (field_imm 3
                                     (field_imm 25
                                       (global Ocaml_ocaml_types__Types!)))
                                   (field_imm 0 param/2546)
                                   (field_imm 1 param/2546))
                                case tag 3:
                                 (apply
                                   (field_imm 4
                                     (field_imm 25
                                       (global Ocaml_ocaml_types__Types!)))
                                   (field_imm 0 param/2546)
                                   (field_imm 1 param/2546))
                                case tag 4: (exit 29)
                                case tag 5: (exit 30)
                                case tag 6:
                                 (setfield_ptr 0 (field_imm 0 param/2546) 0)
                                case tag 7: (exit 30)
                                case tag 8: (exit 29))
                              with (28)
                               (apply
                                 (field_imm 1
                                   (field_imm 25
                                     (global Ocaml_ocaml_types__Types!)))
                                 (field_imm 0 param/2546)
                                 (field_imm 1 param/2546)))
                            with (29)
                             (setfield_ptr 0 (field_imm 0 param/2546)
                               (field_imm 1 param/2546)))
                          with (30)
                           (setfield_ptr 0 (field_imm 0 param/2546) 1))))
                    (setfield_ptr(root-init) 52
                      (global Ocaml_ocaml_types__Types!) undo_change/2524))
                  (let
                    (last_snapshot/2548 =
                       (apply
                         (field_imm 4
                           (global Ocaml_ocaml_types__Local_store!))
                         0))
                    (setfield_ptr(root-init) 53
                      (global Ocaml_ocaml_types__Types!) last_snapshot/2548))
                  (let
                    (log_type/2549 =
                       (function ty/2551 : int
                         (if
                           (<= (field_int 3 ty/2551)
                             (field_int 0
                               (field_imm 53
                                 (global Ocaml_ocaml_types__Types!))))
                           (apply
                             (field_imm 9 (global Ocaml_ocaml_types__Types!))
                             (makeblock 0 ty/2551 (field_mut 0 ty/2551)))
                           0)))
                    (setfield_ptr(root-init) 54
                      (global Ocaml_ocaml_types__Types!) log_type/2549))
                  (let
                    (link_type/2552 =
                       (function ty/2554 ty'/2555 : int
                         (let
                           (ty/2556 =
                              (apply
                                (field_imm 20
                                  (global Ocaml_ocaml_types__Types!))
                                ty/2554)
                            ty'/2557 =
                              (apply
                                (field_imm 20
                                  (global Ocaml_ocaml_types__Types!))
                                ty'/2555))
                           (if (== ty/2556 ty'/2557) 0
                             (seq
                               (apply
                                 (field_imm 54
                                   (global Ocaml_ocaml_types__Types!))
                                 ty/2556)
                               (let (desc/2558 = (field_mut 0 ty/2556))
                                 (seq
                                   (apply
                                     (field_imm 1
                                       (field_imm 25
                                         (global Ocaml_ocaml_types__Types!)))
                                     ty/2556 (makeblock 6 ty'/2557))
                                   (let
                                     (*match*/6028 = (field_mut 0 ty'/2557))
                                     (catch
                                       (switch desc/2558
                                        case tag 0:
                                         (switch *match*/6028
                                          case tag 0:
                                           (let
                                             (name/2559 =a
                                                (field_imm 0 desc/2558))
                                             (if (isint name/2559) 0
                                               (if
                                                 (isint
                                                   (field_imm 0 *match*/6028))
                                                 (seq
                                                   (apply
                                                     (field_imm 54
                                                       (global Ocaml_ocaml_types__Types!))
                                                     ty'/2557)
                                                   (apply
                                                     (field_imm 1
                                                       (field_imm 25
                                                         (global Ocaml_ocaml_types__Types!)))
                                                     ty'/2557
                                                     (makeblock 0 name/2559)))
                                                 (if
                                                   (< (field_int 1 ty/2556)
                                                     (field_int 1 ty'/2557))
                                                   (seq
                                                     (apply
                                                       (field_imm 54
                                                         (global Ocaml_ocaml_types__Types!))
                                                       ty'/2557)
                                                     (apply
                                                       (field_imm 1
                                                         (field_imm 25
                                                           (global Ocaml_ocaml_types__Types!)))
                                                       ty'/2557
                                                       (makeblock 0
                                                         name/2559)))
                                                   0))))
                                          default: (exit 31))
                                        default: (exit 31))
                                      with (31) 0)))))))))
                    (setfield_ptr(root-init) 55
                      (global Ocaml_ocaml_types__Types!) link_type/2552))
                  (let
                    (set_type_desc/2561 =
                       (function ty/2563 td/2564 : int
                         (let
                           (ty/2565 =
                              (apply
                                (field_imm 20
                                  (global Ocaml_ocaml_types__Types!))
                                ty/2563))
                           (if (!= td/2564 (field_mut 0 ty/2565))
                             (seq
                               (apply
                                 (field_imm 54
                                   (global Ocaml_ocaml_types__Types!))
                                 ty/2565)
                               (apply
                                 (field_imm 1
                                   (field_imm 25
                                     (global Ocaml_ocaml_types__Types!)))
                                 ty/2565 td/2564))
                             0))))
                    (setfield_ptr(root-init) 56
                      (global Ocaml_ocaml_types__Types!) set_type_desc/2561))
                  (let
                    (set_level/2566 =
                       (function ty/2568 level/2569[int] : int
                         (let
                           (ty/2570 =
                              (apply
                                (field_imm 20
                                  (global Ocaml_ocaml_types__Types!))
                                ty/2568))
                           (if (!= level/2569 (field_int 1 ty/2570))
                             (seq
                               (if
                                 (<= (field_int 3 ty/2570)
                                   (field_int 0
                                     (field_imm 53
                                       (global Ocaml_ocaml_types__Types!))))
                                 (apply
                                   (field_imm 9
                                     (global Ocaml_ocaml_types__Types!))
                                   (makeblock 2 (*,int) ty/2570
                                     (field_int 1 ty/2570)))
                                 0)
                               (apply
                                 (field_imm 3
                                   (field_imm 25
                                     (global Ocaml_ocaml_types__Types!)))
                                 ty/2570 level/2569))
                             0))))
                    (setfield_ptr(root-init) 57
                      (global Ocaml_ocaml_types__Types!) set_level/2566))
                  (let
                    (set_scope/2571 =
                       (function ty/2573 scope/2574[int] : int
                         (let
                           (ty/2575 =
                              (apply
                                (field_imm 20
                                  (global Ocaml_ocaml_types__Types!))
                                ty/2573))
                           (if (!= scope/2574 (field_int 2 ty/2575))
                             (seq
                               (if
                                 (<= (field_int 3 ty/2575)
                                   (field_int 0
                                     (field_imm 53
                                       (global Ocaml_ocaml_types__Types!))))
                                 (apply
                                   (field_imm 9
                                     (global Ocaml_ocaml_types__Types!))
                                   (makeblock 3 (*,int) ty/2575
                                     (field_int 2 ty/2575)))
                                 0)
                               (apply
                                 (field_imm 4
                                   (field_imm 25
                                     (global Ocaml_ocaml_types__Types!)))
                                 ty/2575 scope/2574))
                             0))))
                    (setfield_ptr(root-init) 58
                      (global Ocaml_ocaml_types__Types!) set_scope/2571))
                  (let
                    (set_univar/2576 =
                       (function rty/2578 ty/2579 : int
                         (seq
                           (apply
                             (field_imm 9 (global Ocaml_ocaml_types__Types!))
                             (makeblock 8 rty/2578 (field_mut 0 rty/2578)))
                           (setfield_ptr 0 rty/2578 (makeblock 0 ty/2579)))))
                    (setfield_ptr(root-init) 59
                      (global Ocaml_ocaml_types__Types!) set_univar/2576))
                  (let
                    (set_name/2580 =
                       (function nm/2582 v/2583 : int
                         (seq
                           (apply
                             (field_imm 9 (global Ocaml_ocaml_types__Types!))
                             (makeblock 4 nm/2582 (field_mut 0 nm/2582)))
                           (setfield_ptr 0 nm/2582 v/2583))))
                    (setfield_ptr(root-init) 60
                      (global Ocaml_ocaml_types__Types!) set_name/2580))
                  (letrec
                    (link_row_field_ext/2584
                       (function inside/2585 v/2586 : int
                         (catch
                           (switch inside/2585
                            case tag 1:
                             (let
                               (e/2587 =a (field_imm 3 inside/2585)
                                rf/2588 =o (field_mut 0 e/2587))
                               (catch
                                 (if (isint rf/2588)
                                   (if rf/2588
                                     (seq
                                       (apply
                                         (field_imm 9
                                           (global Ocaml_ocaml_types__Types!))
                                         (makeblock 5 e/2587))
                                       (setfield_ptr 0 e/2587 v/2586))
                                     (exit 34))
                                   (exit 34))
                                with (34)
                                 (apply link_row_field_ext/2584 rf/2588
                                   v/2586)))
                            default: (exit 33))
                          with (33)
                           (apply (field_imm 0 (global Stdlib!))
                             "Types.link_row_field_ext"))))
                    (setfield_ptr(root-init) 61
                      (global Ocaml_ocaml_types__Types!)
                      link_row_field_ext/2584))
                  (letrec
                    (link_kind/2591
                       (function inside/2592 k/2593 : int
                         (if (isint inside/2592)
                           (apply (field_imm 0 (global Stdlib!))
                             "Types.link_kind")
                           (let (inside/2596 =o (field_mut 0 inside/2592))
                             (catch
                               (if (isint inside/2596)
                                 (if (!= inside/2596 0) (exit 37)
                                   (let
                                     (k/2597 =
                                        (apply
                                          (field_imm 10
                                            (global Ocaml_ocaml_types__Types!))
                                          k/2593))
                                     (if (!= k/2597 inside/2592)
                                       (seq
                                         (apply
                                           (field_imm 9
                                             (global Ocaml_ocaml_types__Types!))
                                           (makeblock 6 inside/2592))
                                         (setfield_ptr 0 inside/2592 k/2597))
                                       0)))
                                 (exit 37))
                              with (37)
                               (apply link_kind/2591 inside/2596 k/2593))))))
                    (setfield_ptr(root-init) 62
                      (global Ocaml_ocaml_types__Types!) link_kind/2591))
                  (letrec
                    (commu_repr/2600
                       (function c/2602
                         (catch
                           (if (isint c/2602) (exit 38)
                             (let (commu/2601 =o (field_mut 0 c/2602))
                               (catch
                                 (if (isint commu/2601)
                                   (if commu/2601 (exit 38) (exit 39))
                                   (exit 39))
                                with (39) (apply commu_repr/2600 commu/2601))))
                          with (38) c/2602)))
                    (setfield_ptr(root-init) 63
                      (global Ocaml_ocaml_types__Types!) commu_repr/2600))
                  (letrec
                    (link_commu/2603
                       (function inside/2604 c/2605 : int
                         (if (isint inside/2604)
                           (apply (field_imm 0 (global Stdlib!))
                             "Types.link_commu")
                           (let (inside/2608 =o (field_mut 0 inside/2604))
                             (catch
                               (if (isint inside/2608)
                                 (if inside/2608
                                   (let
                                     (c/2609 =
                                        (apply
                                          (field_imm 63
                                            (global Ocaml_ocaml_types__Types!))
                                          c/2605))
                                     (if (!= c/2609 inside/2604)
                                       (seq
                                         (apply
                                           (field_imm 9
                                             (global Ocaml_ocaml_types__Types!))
                                           (makeblock 7 inside/2604))
                                         (setfield_ptr 0 inside/2604 c/2609))
                                       0))
                                   (exit 42))
                                 (exit 42))
                              with (42)
                               (apply link_commu/2603 inside/2608 c/2605))))))
                    (setfield_ptr(root-init) 64
                      (global Ocaml_ocaml_types__Types!) link_commu/2603))
                  (let
                    (set_commu_ok/2611 =
                       (function c/2613 : int
                         (apply
                           (field_imm 64 (global Ocaml_ocaml_types__Types!))
                           c/2613 0)))
                    (setfield_ptr(root-init) 65
                      (global Ocaml_ocaml_types__Types!) set_commu_ok/2611))
                  (let
                    (snapshot/2614 =
                       (function param/2617[int]
                         (let
                           (old/2616 =[int]
                              (field_int 0
                                (field_imm 53
                                  (global Ocaml_ocaml_types__Types!))))
                           (seq
                             (setfield_imm 0
                               (field_imm 53
                                 (global Ocaml_ocaml_types__Types!))
                               (field_int 0
                                 (field_imm 48
                                   (global Ocaml_ocaml_types__Types!))))
                             (makeblock 0 (*,int)
                               (field_mut 0
                                 (field_imm 8
                                   (global Ocaml_ocaml_types__Types!)))
                               old/2616)))))
                    (setfield_ptr(root-init) 66
                      (global Ocaml_ocaml_types__Types!) snapshot/2614))
                  (letrec
                    (rev_log/2618
                       (function accu/2619 param/2623
                         (if (isint param/2623)
                           (if param/2623
                             (raise
                               (makeblock 0 (global Assert_failure/28!)
                                 [0: "lib/types.ml" 858 15]))
                             accu/2619)
                           (let
                             (next/2621 =a (field_imm 1 param/2623)
                              d/2622 = (field_mut 0 next/2621))
                             (seq (setfield_ptr 0 next/2621 1)
                               (apply rev_log/2618
                                 (makeblock 0 (field_imm 0 param/2623)
                                   accu/2619)
                                 d/2622))))))
                    (setfield_ptr(root-init) 67
                      (global Ocaml_ocaml_types__Types!) rev_log/2618))
                  (let
                    (backtrack/2624 =
                       (function cleanup_abbrev/2626 param/2631 : int
                         (let
                           (old/2628 =a (field_imm 1 param/2631)
                            changes/2627 =a (field_imm 0 param/2631)
                            change/2629 = (field_mut 0 changes/2627))
                           (if (isint change/2629)
                             (if change/2629
                               (apply (field_imm 1 (global Stdlib!))
                                 "Types.backtrack")
                               (setfield_imm 0
                                 (field_imm 53
                                   (global Ocaml_ocaml_types__Types!))
                                 old/2628))
                             (seq (apply cleanup_abbrev/2626 0)
                               (let
                                 (backlog/2630 =
                                    (apply
                                      (field_imm 67
                                        (global Ocaml_ocaml_types__Types!))
                                      0 change/2629))
                                 (seq
                                   (apply
                                     (field_imm 17 (global Stdlib__List!))
                                     (field_imm 52
                                       (global Ocaml_ocaml_types__Types!))
                                     backlog/2630)
                                   (setfield_ptr 0 changes/2627 0)
                                   (setfield_imm 0
                                     (field_imm 53
                                       (global Ocaml_ocaml_types__Types!))
                                     old/2628)
                                   (setfield_ptr 0
                                     (field_imm 8
                                       (global Ocaml_ocaml_types__Types!))
                                     changes/2627))))))))
                    (setfield_ptr(root-init) 68
                      (global Ocaml_ocaml_types__Types!) backtrack/2624))
                  (let
                    (undo_first_change_after/2632 =
                       (function (param/6036, param/6037) : int
                         (let (*match*/6038 = (field_mut 0 param/6036))
                           (if (isint *match*/6038) 0
                             (apply
                               (field_imm 52
                                 (global Ocaml_ocaml_types__Types!))
                               (field_imm 0 *match*/6038))))))
                    (setfield_ptr(root-init) 69
                      (global Ocaml_ocaml_types__Types!)
                      undo_first_change_after/2632))
                  (letrec
                    (rev_compress_log/2637
                       (function log/2638 r/2639
                         (let (*match*/6040 = (field_mut 0 r/2639))
                           (if (isint *match*/6040) log/2638
                             (switch (field_imm 0 *match*/6040)
                              case tag 1:
                               (apply rev_compress_log/2637
                                 (makeblock 0 r/2639 log/2638)
                                 (field_imm 1 *match*/6040))
                              default:
                               (apply rev_compress_log/2637 log/2638
                                 (field_imm 1 *match*/6040)))))))
                    (setfield_ptr(root-init) 70
                      (global Ocaml_ocaml_types__Types!)
                      rev_compress_log/2637))
                  (let
                    (undo_compress/2642 =
                       (function (param/6045, param/6046) : int
                         (let (*match*/6049 = (field_mut 0 param/6045))
                           (if (isint *match*/6049) 0
                             (let
                               (log/2646 =
                                  (apply
                                    (field_imm 70
                                      (global Ocaml_ocaml_types__Types!))
                                    0 param/6045))
                               (apply (field_imm 17 (global Stdlib__List!))
                                 (function r/2647 : int
                                   (let (*match*/6047 = (field_mut 0 r/2647))
                                     (catch
                                       (if (isint *match*/6047) (exit 46)
                                         (let
                                           (*match*/6048 =a
                                              (field_imm 0 *match*/6047))
                                           (switch *match*/6048
                                            case tag 1:
                                             (let
                                               (ty/2648 =a
                                                  (field_imm 0 *match*/6048))
                                               (if
                                                 (== (field_mut 0 ty/2648)
                                                   (field_imm 2 *match*/6048))
                                                 (seq
                                                   (apply
                                                     (field_imm 1
                                                       (field_imm 25
                                                         (global Ocaml_ocaml_types__Types!)))
                                                     ty/2648
                                                     (field_imm 1
                                                       *match*/6048))
                                                   (setfield_ptr 0 r/2647
                                                     (field_mut 0
                                                       (field_imm 1
                                                         *match*/6047))))
                                                 (exit 46)))
                                            default: (exit 46))))
                                      with (46) 0)))
                                 log/2646))))))
                    (setfield_ptr(root-init) 71
                      (global Ocaml_ocaml_types__Types!) undo_compress/2642))
                  0)))))))))
